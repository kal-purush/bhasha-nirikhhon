{
    "identifiers": [
        "sklearn",
        "TransformerMixin",
        "BaseEstimator",
        "pipelines",
        "numpy",
        "np",
        "pandas",
        "pd",
        "sklearn",
        "pipeline",
        "make_pipeline",
        "sklearn",
        "model_selection",
        "train_test_split",
        "BaseEstimator",
        "TransformerMixin",
        "attribute_names",
        "attribute_names",
        "attribute_names",
        "ValueError",
        "X",
        "y",
        "isinstance",
        "X",
        "pd",
        "DataFrame",
        "y",
        "isinstance",
        "y",
        "pd",
        "Series",
        "col_name",
        "attribute_names",
        "X",
        "col_name",
        "fillna",
        "np",
        "pd",
        "isnull",
        "data_values",
        "values",
        "col_name",
        "avg_dict",
        "pd",
        "Series",
        "y",
        "values",
        "index",
        "data_values",
        "values",
        "groupby",
        "level",
        "agg",
        "np",
        "mean",
        "X",
        "isinstance",
        "X",
        "pd",
        "DataFrame",
        "X",
        "copy",
        "col_name",
        "attribute_names",
        "df",
        "col_name",
        "fillna",
        "avg_dict",
        "col_name",
        "k",
        "v",
        "avg_series",
        "items",
        "ser",
        "k",
        "v",
        "avg_series",
        "max",
        "ser",
        "fillna",
        "avg_series",
        "mean",
        "inplace",
        "ser",
        "astype",
        "np",
        "ValueError",
        "pd",
        "to_numeric",
        "ser",
        "errors",
        "fillna",
        "avg_series",
        "mean",
        "ser",
        "astype",
        "np",
        "exc",
        "col_name",
        "exc",
        "df",
        "BaseEstimator",
        "TransformerMixin",
        "X",
        "y",
        "X",
        "isinstance",
        "X",
        "pd",
        "DataFrame",
        "X",
        "copy",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "QUALITY_MAP",
        "df",
        "QUALITY_MAP",
        "df",
        "QUALITY_MAP",
        "df",
        "QUALITY_MAP",
        "df",
        "df",
        "df",
        "QUALITY_MAP",
        "df",
        "df",
        "df",
        "QUALITY_MAP",
        "df",
        "df",
        "QUALITY_MAP",
        "df",
        "QUALITY_MAP",
        "df",
        "QUALITY_MAP",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "BaseEstimator",
        "TransformerMixin",
        "X",
        "y",
        "X",
        "isinstance",
        "X",
        "pd",
        "DataFrame",
        "X",
        "copy",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "make_pipeline",
        "DataFrameSelector",
        "NUMERICAL_ATTRS",
        "DataFrameFunctionTransformer",
        "func",
        "np",
        "mean",
        "impute",
        "DataFrameFunctionTransformer",
        "func",
        "np",
        "log1p",
        "DataFrameBadValuesCheck",
        "make_pipeline",
        "DataFrameConvertCategorical",
        "CATEGORICAL_ATTRS",
        "out_dataframe",
        "DataFrameBadValuesCheck",
        "make_pipeline",
        "DataFrameSelector",
        "DataFrameBadValuesCheck",
        "DataFrameFeatureUnion",
        "numeric_pipeline",
        "categorical_pipeline",
        "custom_features_pipeline",
        "dataset",
        "data_processing_pipeline",
        "fit_transform",
        "dataset",
        "dataset",
        "target_y",
        "make_pipeline",
        "DataFrameFeaturesProcessing",
        "DataFrameCategoricalAverage",
        "CATEGORICAL_TO_AVG",
        "DataFrameExtraFeatures",
        "data_processing_pipeline",
        "features_pipeline",
        "fit_transform",
        "dataset",
        "target_y",
        "X",
        "y",
        "np",
        "log1p",
        "y",
        "train_test_split",
        "X",
        "log_y",
        "test_size",
        "random_state",
        "shuffle",
        "X_train",
        "X_test",
        "y_train",
        "y_test"
    ],
    "literals": [
        "'MSSubClass'",
        "'20'",
        "'30'",
        "'40'",
        "'45'",
        "'50'",
        "'60'",
        "'70'",
        "'75'",
        "'80'",
        "'85'",
        "'90'",
        "'120'",
        "'150'",
        "'160'",
        "'180'",
        "'190'",
        "'MSZoning'",
        "'A'",
        "'C'",
        "'FV'",
        "'I'",
        "'RH'",
        "'RL'",
        "'RP'",
        "'RM'",
        "'Street'",
        "'Grvl'",
        "'Pave'",
        "'Alley'",
        "'Grvl'",
        "'Pave'",
        "'NA'",
        "'LotShape'",
        "'Reg'",
        "'IR1'",
        "'IR2'",
        "'IR3'",
        "'LandContour'",
        "'Lvl'",
        "'Bnk'",
        "'HLS'",
        "'Low'",
        "'Utilities'",
        "'AllPub'",
        "'NoSewr'",
        "'NoSeWa'",
        "'ELO'",
        "'LotConfig'",
        "'Inside'",
        "'Corner'",
        "'CulDSac'",
        "'FR2'",
        "'FR3'",
        "'LandSlope'",
        "'Gtl'",
        "'Mod'",
        "'Sev'",
        "'Neighborhood'",
        "'Blmngtn'",
        "'Blueste'",
        "'BrDale'",
        "'BrkSide'",
        "'ClearCr'",
        "'CollgCr'",
        "'Crawfor'",
        "'Edwards'",
        "'Gilbert'",
        "'IDOTRR'",
        "'MeadowV'",
        "'Mitchel'",
        "'Names'",
        "'NoRidge'",
        "'NPkVill'",
        "'NridgHt'",
        "'NWAmes'",
        "'OldTown'",
        "'SWISU'",
        "'Sawyer'",
        "'SawyerW'",
        "'Somerst'",
        "'StoneBr'",
        "'Timber'",
        "'Veenker'",
        "'Condition1'",
        "'Artery'",
        "'Feedr'",
        "'Norm'",
        "'RRNn'",
        "'RRAn'",
        "'PosN'",
        "'PosA'",
        "'RRNe'",
        "'RRAe'",
        "'Condition2'",
        "'Artery'",
        "'Feedr'",
        "'Norm'",
        "'RRNn'",
        "'RRAn'",
        "'PosN'",
        "'PosA'",
        "'RRNe'",
        "'RRAe'",
        "'BldgType'",
        "'1Fam'",
        "'2FmCon'",
        "'Duplx'",
        "'TwnhsE'",
        "'TwnhsI'",
        "'HouseStyle'",
        "'1Story'",
        "'1.5Fin'",
        "'1.5Unf'",
        "'2Story'",
        "'2.5Fin'",
        "'2.5Unf'",
        "'SFoyer'",
        "'SLvl'",
        "'OverallQual'",
        "'10'",
        "'9'",
        "'8'",
        "'7'",
        "'6'",
        "'5'",
        "'4'",
        "'3'",
        "'2'",
        "'1'",
        "'OverallCond'",
        "'10'",
        "'9'",
        "'8'",
        "'7'",
        "'6'",
        "'5'",
        "'4'",
        "'3'",
        "'2'",
        "'1'",
        "'RoofStyle'",
        "'Flat'",
        "'Gable'",
        "'Gambrel'",
        "'Hip'",
        "'Mansard'",
        "'Shed'",
        "'RoofMatl'",
        "'ClyTile'",
        "'CompShg'",
        "'Membran'",
        "'Metal'",
        "'Roll'",
        "'Tar&Grv'",
        "'WdShake'",
        "'WdShngl'",
        "'Exterior1st'",
        "'AsbShng'",
        "'AsphShn'",
        "'BrkComm'",
        "'BrkFace'",
        "'CBlock'",
        "'CemntBd'",
        "'HdBoard'",
        "'ImStucc'",
        "'MetalSd'",
        "'Other'",
        "'Plywood'",
        "'PreCast'",
        "'Stone'",
        "'Stucco'",
        "'VinylSd'",
        "'Wd'",
        "'WdShing'",
        "'Exterior2nd'",
        "'AsbShng'",
        "'AsphShn'",
        "'BrkComm'",
        "'BrkFace'",
        "'CBlock'",
        "'CemntBd'",
        "'HdBoard'",
        "'ImStucc'",
        "'MetalSd'",
        "'Other'",
        "'Plywood'",
        "'PreCast'",
        "'Stone'",
        "'Stucco'",
        "'VinylSd'",
        "'Wd'",
        "'WdShing'",
        "'MasVnrType'",
        "'BrkCmn'",
        "'BrkFace'",
        "'CBlock'",
        "'None'",
        "'Stone'",
        "'ExterQual'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'ExterCond'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'Foundation'",
        "'BrkTil'",
        "'CBlock'",
        "'PConc'",
        "'Slab'",
        "'Stone'",
        "'Wood'",
        "'BsmtQual'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'NA'",
        "'BsmtCond'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'NA'",
        "'BsmtExposure'",
        "'Gd'",
        "'Av'",
        "'Mn'",
        "'No'",
        "'NA'",
        "'BsmtFinType1'",
        "'GLQ'",
        "'ALQ'",
        "'BLQ'",
        "'Rec'",
        "'LwQ'",
        "'Unf'",
        "'NA'",
        "'BsmtFinType2'",
        "'GLQ'",
        "'ALQ'",
        "'BLQ'",
        "'Rec'",
        "'LwQ'",
        "'Unf'",
        "'NA'",
        "'Heating'",
        "'Floor'",
        "'GasA'",
        "'GasW'",
        "'Grav'",
        "'OthW'",
        "'Wall'",
        "'HeatingQC'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'CentralAir'",
        "'N'",
        "'Y'",
        "'Electrical'",
        "'SBrkr'",
        "'FuseA'",
        "'FuseF'",
        "'FuseP'",
        "'Mix'",
        "'KitchenQual'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'Functional'",
        "'Typ'",
        "'Min1'",
        "'Min2'",
        "'Mod'",
        "'Maj1'",
        "'Maj2'",
        "'Sev'",
        "'Sal'",
        "'FireplaceQu'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'NA'",
        "'GarageType'",
        "'2Types'",
        "'Attchd'",
        "'Basment'",
        "'BuiltIn'",
        "'CarPort'",
        "'Detchd'",
        "'NA'",
        "'GarageFinish'",
        "'Fin'",
        "'RFn'",
        "'Unf'",
        "'NA'",
        "'GarageQual'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'NA'",
        "'GarageCond'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'NA'",
        "'PavedDrive'",
        "'Y'",
        "'P'",
        "'N'",
        "'PoolQC'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'NA'",
        "'Fence'",
        "'GdPrv'",
        "'MnPrv'",
        "'GdWo'",
        "'MnWw'",
        "'NA'",
        "'MiscFeature'",
        "'Elev'",
        "'Gar2'",
        "'Othr'",
        "'Shed'",
        "'TenC'",
        "'NA'",
        "'SaleType'",
        "'WD'",
        "'CWD'",
        "'VWD'",
        "'New'",
        "'COD'",
        "'Con'",
        "'ConLw'",
        "'ConLI'",
        "'ConLD'",
        "'Oth'",
        "'SaleCondition'",
        "'Normal'",
        "'Abnorml'",
        "'AdjLand'",
        "'Alloca'",
        "'Family'",
        "'Partial'",
        "'LotFrontage'",
        "'LotArea'",
        "'YearBuilt'",
        "'YearRemodAdd'",
        "'MasVnrArea'",
        "'BsmtFinSF1'",
        "'BsmtFinSF2'",
        "'BsmtUnfSF'",
        "'TotalBsmtSF'",
        "'1stFlrSF'",
        "'2ndFlrSF'",
        "'LowQualFinSF'",
        "'GrLivArea'",
        "'BsmtFullBath'",
        "'BsmtHalfBath'",
        "'FullBath'",
        "'HalfBath'",
        "'BedroomAbvGr'",
        "'KitchenAbvGr'",
        "'TotRmsAbvGrd'",
        "'Fireplaces'",
        "'GarageYrBlt'",
        "'GarageCars'",
        "'GarageArea'",
        "'WoodDeckSF'",
        "'OpenPorchSF'",
        "'EnclosedPorch'",
        "'3SsnPorch'",
        "'ScreenPorch'",
        "'PoolArea'",
        "'MiscVal'",
        "'MoSold'",
        "'YrSold'",
        "\"Empty 'attribute_names' for DataFrameSelector\"",
        "'!NA!'",
        "f\"Categorical values of '{col_name}' has NaN\"",
        "'!NA!'",
        "'coerce'",
        "f\"Error in processing: {col_name} data. Message: {exc}\"",
        "'!Street'",
        "'Street'",
        "'Pave'",
        "'Grvl'",
        "'nan'",
        "'!Alley'",
        "'Alley'",
        "'Pave'",
        "'Grvl'",
        "'nan'",
        "'!LotShape'",
        "'LotShape'",
        "'Reg'",
        "'IR1'",
        "'IR2'",
        "'IR3'",
        "'!LandContour'",
        "'LandContour'",
        "'Lvl'",
        "'Bnk'",
        "'HLS'",
        "'Low'",
        "'nan'",
        "'!LotConfig'",
        "'LotConfig'",
        "'CulDSac'",
        "'FR3'",
        "'FR2'",
        "'Corner'",
        "'Inside'",
        "'nan'",
        "'LotFrontage'",
        "'Utilities'",
        "'!LandSlope'",
        "'LandSlope'",
        "'Gtl'",
        "'Mod'",
        "'Sev'",
        "'nan'",
        "'Condition2'",
        "'OverallCond'",
        "'RoofStyle'",
        "'RoofMatl'",
        "'!MasVnrType'",
        "'MasVnrType'",
        "'Stone'",
        "'BrkFace'",
        "'BrkCmn'",
        "'None'",
        "'nan'",
        "'Ex'",
        "'Gd'",
        "'TA'",
        "'Fa'",
        "'Po'",
        "'NA'",
        "'nan'",
        "'!ExterQual'",
        "'ExterQual'",
        "'!ExterCond'",
        "'ExterCond'",
        "'!BsmtQual'",
        "'BsmtQual'",
        "'!BsmtCond'",
        "'BsmtCond'",
        "'!BsmtExposure'",
        "'BsmtExposure'",
        "'Gd'",
        "'Av'",
        "'Mn'",
        "'No'",
        "'nan'",
        "'Heating'",
        "'!HeatingQC'",
        "'HeatingQC'",
        "'!CentralAir'",
        "'CentralAir'",
        "'Y'",
        "'N'",
        "'nan'",
        "'!Electrical'",
        "'Electrical'",
        "'SBrkr'",
        "'nan'",
        "'FuseA'",
        "'FuseF'",
        "'FuseP'",
        "'Mix'",
        "'!KitchenQual'",
        "'KitchenQual'",
        "'Functional'",
        "'!FireplaceQu'",
        "'FireplaceQu'",
        "'!GarageQual'",
        "'GarageQual'",
        "'!GarageCond'",
        "'GarageCond'",
        "'!PavedDrive'",
        "'PavedDrive'",
        "'Y'",
        "'P'",
        "'N'",
        "'nan'",
        "'PoolQC'",
        "'PoolArea'",
        "'MiscFeature'",
        "'MiscVal'",
        "'!HouseAge'",
        "'YrSold'",
        "'YearBuilt'",
        "'!LandQuality'",
        "'!Street'",
        "'!Alley'",
        "'!LotShape'",
        "'!LandContour'",
        "'!LotConfig'",
        "'!LandSlope'",
        "'!Street'",
        "'!Alley'",
        "'!LotShape'",
        "'!LandContour'",
        "'!LotConfig'",
        "'!LandSlope'",
        "'!MasVnrType'",
        "'!ExretiorScore'",
        "'Exterior1st'",
        "'Exterior2nd'",
        "'!ExterQual'",
        "'!ExterCond'",
        "'!ExterQual'",
        "'!ExterCond'",
        "\"^!.*\"",
        "'Neighborhood'",
        "'MSZoning'",
        "'Condition1'",
        "'BldgType'",
        "'HouseStyle'",
        "'Exterior1st'",
        "'Exterior2nd'",
        "'Foundation'",
        "'GarageType'",
        "'BsmtFinType1'",
        "'BsmtFinType2'",
        "'GarageFinish'",
        "'Fence'",
        "'SaleType'",
        "'SaleCondition'",
        "\"Preparing the dataset with feature engineering\""
    ],
    "variables": [
        "CATEGORICAL_ATTRS",
        "NUMERICAL_ATTRS",
        "attribute_names",
        "avg_dict",
        "data_values",
        "col_name",
        "df",
        "ser",
        "avg_series",
        "ser",
        "df",
        "col_name",
        "ser",
        "df",
        "col_name",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "QUALITY_MAP",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "numeric_pipeline",
        "categorical_pipeline",
        "custom_features_pipeline",
        "data_processing_pipeline",
        "CATEGORICAL_TO_AVG",
        "features_pipeline",
        "log_y",
        "X_train",
        "X_test",
        "y_train",
        "y_test"
    ],
    "comments": [
        "This module is not included into the sample project",
        "",
        "Definition of original dataset fields",
        "",
        "Identifies the type of dwelling involved in the sale.",
        "Identifies the general zoning classification of the sale.",
        "Type of road access to property",
        "Type of alley access to property",
        "General shape of property",
        "Flatness of the property",
        "Type of utilities available",
        "Lot configuration",
        "Slope of property",
        "Physical locations within Ames city limits",
        "Proximity to various conditions",
        "Proximity to various conditions (if more than one is present)",
        "Type of dwelling",
        "Style of dwelling",
        "Rates the overall material and finish of the house",
        "Rates the overall condition of the house",
        "Type of roof",
        "Roof material",
        "Exterior covering on house",
        "Exterior covering on house (if more than one material)",
        "Masonry veneer type",
        "Evaluates the quality of the material on the exterior",
        "Evaluates the present condition of the material on the exterior",
        "Type of foundation",
        "Evaluates the height of the basement",
        "Evaluates the general condition of the basement",
        "Refers to walkout or garden level walls",
        "Rating of basement finished area",
        "Rating of basement finished area (if multiple types)",
        "Type of heating",
        "Heating quality and condition",
        "Central air conditioning",
        "Electrical system",
        "Kitchen quality",
        "Home functionality (Assume typical unless deductions are warranted)",
        "Fireplace quality",
        "Garage location",
        "Interior finish of the garage",
        "Garage quality",
        "Garage condition",
        "Paved driveway",
        "Pool quality",
        "Fence quality",
        "Miscellaneous feature not covered in other categories",
        "Type of sale",
        "Condition of sale",
        "Linear feet of street connected to property",
        "Lot size in square feet",
        "Original construction date",
        "Remodel date (same as construction date if no remodeling or additions)",
        "Masonry veneer area in square feet",
        "Type 1 finished square feet",
        "Type 2 finished square feet",
        "Unfinished square feet of basement area",
        "Total square feet of basement area",
        "First Floor square feet",
        "Second floor square feet",
        "Low quality finished square feet (all floors)",
        "Above grade (ground) living area square feet",
        "Basement full bathrooms",
        "Basement half bathrooms",
        "Full bathrooms above grade",
        "Half baths above grade",
        "Bedrooms above grade (does NOT include basement bedrooms)",
        "Kitchens above grade",
        "Total rooms above grade (does not include bathrooms)",
        "Number of fireplaces",
        "Year garage was built",
        "Size of garage in car capacity",
        "Size of garage in square feet",
        "Wood deck area in square feet",
        "Open porch area in square feet",
        "Enclosed porch area in square feet",
        "Three season porch area in square feet",
        "Screen porch area in square feet",
        "Pool area in square feet",
        "$Value of miscellaneous feature",
        "Month Sold (MM)",
        "Year Sold (YYYY)",
        "self.avg_dict[col_name] = pd.Series(y.values/X['GrLivArea'].values, index=data_values.values).groupby(level=0).agg(np.mean)",
        "ser[ser == k] = (v-avg_series.min()) / (avg_series.max() - avg_series.min())",
        "ser[ser == k] = v",
        "Some categorical values are not filled or NaN",
        "Fill by average",
        "TOO many NaN values",
        "LotConfig - categorical?",
        "Neigbourhood - skipped categorical/avg processing",
        "Condition1 - skipped categorical/avg processing",
        "BldgType -  skipped categorical/avg processing",
        "HouseStyle - skipped categorical/avg processing",
        "OverallQual - used AS IS",
        "Bad clustering",
        "YearBuilt - as is",
        "YearRemod - as is",
        "Bad clustering",
        "Bad clustering",
        "Exterior1st - skipped categorical/avg processing",
        "Exterior2nd - skipped categorical/avg processing",
        "!! Then process  (Exterior1st + Exterior2nd) / 2",
        "Bad clustering",
        "Standard Circuit Breakers & Romex = GOOD (1), other options are BAD (0)",
        "Bad clustering",
        "PoolArea - no data",
        "No data",
        "",
        "Advanced features engineering",
        "",
        "Calculate house age from 'YearBuilt' and 'YrSold' features",
        "",
        "Integrate multiple features in one",
        "",
        "",
        "Calculate MasVnrArea quality feature",
        "",
        "df['!MasVnrAreaQ'] = df['!MasVnrType'] * df['MasVnrArea']",
        "del df['MasVnrArea']",
        "",
        "Calculate house exterion integrated feature",
        "",
        "del df['Exterior1st']",
        "del df['Exterior2nd']",
        "",
        "Numeric features pipeline definition",
        "",
        "Select numeric features from the dataset",
        "Impute missing values (replace NaN by mean())",
        "Transform features values",
        "Perform extra sanity check for missing data",
        "",
        "Categorical features pipeline definition",
        "",
        "Convert categorical string values to numbers + apply one-hot-encoding",
        "Perform extra sanity check for missing data",
        "",
        "Custom features selector",
        "",
        "Select all features with names started with '!' (conventionally these are custom features)",
        "Perform extra sanity check for missing data",
        "Delete inconsistent and noisy features",
        "Replace selected categorcial features by mean SalePrice",
        "Add new features",
        "Perform general feature cleaning and processing",
        "Proportion of the test dataset",
        "Fix the state of random generator, to get repeatitive results each time",
        "Randomly pick test dataset to maintain original distribution"
    ],
    "docstrings": [
        "\"\"\"\n    Apply data cleaning and processing pipeline to the dataset\n    :param dataset:\n    :return:\n    \"\"\"",
        "\"\"\"\n    Apply data cleaning and processing pipeline to the dataset\n    :param dataset:\n    :return:\n    \"\"\"",
        "\"\"\"\n    Split dataset to train/test samples\n    :param X:\n    :param y:\n    :return:\n    \"\"\""
    ],
    "functions": [
        "fit",
        "transform",
        "fit",
        "transform",
        "fit",
        "transform",
        "data_process_and_clean_basic",
        "data_process_and_clean_advanced_features",
        "data_train_test_split"
    ],
    "classes": [
        "DataFrameCategoricalAverage",
        "DataFrameFeaturesProcessing",
        "DataFrameExtraFeatures"
    ]
}