{
    "identifiers": [
        "org",
        "springframework",
        "web",
        "reactive",
        "result",
        "method",
        "annotation",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "org",
        "springframework",
        "core",
        "MethodParameter",
        "org",
        "springframework",
        "core",
        "ReactiveAdapterRegistry",
        "org",
        "springframework",
        "core",
        "ResolvableType",
        "org",
        "springframework",
        "lang",
        "org",
        "springframework",
        "util",
        "Assert",
        "org",
        "springframework",
        "util",
        "CollectionUtils",
        "org",
        "springframework",
        "util",
        "LinkedMultiValueMap",
        "org",
        "springframework",
        "util",
        "MultiValueMap",
        "org",
        "springframework",
        "util",
        "StringUtils",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "MatrixVariable",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "ValueConstants",
        "org",
        "springframework",
        "web",
        "reactive",
        "BindingContext",
        "org",
        "springframework",
        "web",
        "reactive",
        "HandlerMapping",
        "org",
        "springframework",
        "web",
        "reactive",
        "result",
        "method",
        "HandlerMethodArgumentResolverSupport",
        "org",
        "springframework",
        "web",
        "reactive",
        "result",
        "method",
        "SyncHandlerMethodArgumentResolver",
        "org",
        "springframework",
        "web",
        "server",
        "ServerWebExchange",
        "registry",
        "registry",
        "Override",
        "parameter",
        "checkAnnotatedParamNoReactiveWrapper",
        "parameter",
        "annot",
        "isAssignableFrom",
        "StringUtils",
        "hasText",
        "annot",
        "name",
        "Override",
        "parameter",
        "bindingContext",
        "exchange",
        "matrixVariables",
        "exchange",
        "getAttribute",
        "HandlerMapping",
        "MATRIX_VARIABLES_ATTRIBUTE",
        "CollectionUtils",
        "isEmpty",
        "matrixVariables",
        "Collections",
        "emptyMap",
        "annotation",
        "parameter",
        "getParameterAnnotation",
        "Assert",
        "state",
        "annotation",
        "pathVariable",
        "annotation",
        "pathVar",
        "pathVariable",
        "equals",
        "ValueConstants",
        "DEFAULT_NONE",
        "mapForPathVariable",
        "matrixVariables",
        "get",
        "pathVariable",
        "mapForPathVariable",
        "Collections",
        "emptyMap",
        "putAll",
        "mapForPathVariable",
        "vars",
        "matrixVariables",
        "values",
        "name",
        "vars",
        "keySet",
        "value",
        "vars",
        "get",
        "name",
        "add",
        "name",
        "value",
        "isSingleValueMap",
        "parameter",
        "toSingleValueMap",
        "parameter",
        "isAssignableFrom",
        "parameter",
        "getParameterType",
        "genericTypes",
        "ResolvableType",
        "forMethodParameter",
        "parameter",
        "getGenerics",
        "genericTypes",
        "length",
        "declaredClass",
        "genericTypes",
        "getRawClass",
        "declaredClass",
        "isAssignableFrom",
        "declaredClass"
    ],
    "literals": [
        "\"No MatrixVariable annotation\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2002-2017 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Resolves arguments of type {@link Map} annotated with {@link MatrixVariable\n * @MatrixVariable} where the annotation does not specify a name. In other words\n * the purpose of this resolver is to provide access to multiple matrix\n * variables, either all or associted with a specific path variable.\n *\n * <p>When a name is specified, an argument of type Map is considered to be an\n * single attribute with a Map value, and is resolved by\n * {@link MatrixVariableMethodArgumentResolver} instead.\n *\n * @author Rossen Stoyanchev\n * @since 5.0.1\n * @see MatrixVariableMethodArgumentResolver"
    ],
    "functions": [
        "MatrixVariableMapMethodArgumentResolver",
        "supportsParameter",
        "resolveArgumentValue",
        "isSingleValueMap"
    ],
    "classes": [
        "MatrixVariableMapMethodArgumentResolver"
    ]
}