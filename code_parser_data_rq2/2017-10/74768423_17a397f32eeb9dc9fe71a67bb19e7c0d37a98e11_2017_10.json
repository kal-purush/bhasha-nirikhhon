{
    "identifiers": [
        "BMapLib",
        "T",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "id",
        "id",
        "id",
        "id",
        "id",
        "id",
        "id",
        "id",
        "id",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "source",
        "source",
        "baidu",
        "baidu",
        "baidu",
        "id",
        "baidu",
        "id",
        "id",
        "id",
        "baidu",
        "baidu",
        "baidu",
        "element",
        "element",
        "baidu",
        "element",
        "element",
        "element",
        "element",
        "element",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "navigator",
        "baidu",
        "element",
        "key",
        "element",
        "baidu",
        "element",
        "baidu",
        "element",
        "doc",
        "doc",
        "styles",
        "doc",
        "element",
        "styles",
        "styles",
        "key",
        "styles",
        "key",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "key",
        "value",
        "method",
        "baidu",
        "filters",
        "i",
        "i",
        "method",
        "value",
        "key",
        "value",
        "value",
        "baidu",
        "baidu",
        "baidu",
        "source",
        "source",
        "source",
        "source",
        "source",
        "match",
        "match",
        "baidu",
        "element",
        "key",
        "baidu",
        "element",
        "dom",
        "element",
        "key",
        "baidu",
        "key",
        "element",
        "key",
        "element",
        "element",
        "key",
        "dom",
        "element",
        "key",
        "value",
        "dom",
        "key",
        "fixer",
        "value",
        "fixer",
        "fixer",
        "element",
        "baidu",
        "element",
        "fixer",
        "fixer",
        "dom",
        "value",
        "fixer",
        "key",
        "value",
        "value",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "result",
        "result",
        "result",
        "result",
        "result",
        "baidu",
        "element",
        "key",
        "value",
        "element",
        "baidu",
        "element",
        "key",
        "element",
        "value",
        "key",
        "baidu",
        "key",
        "key",
        "element",
        "key",
        "value",
        "element",
        "baidu",
        "baidu",
        "baidu",
        "element",
        "attributes",
        "element",
        "baidu",
        "element",
        "key",
        "attributes",
        "baidu",
        "element",
        "key",
        "attributes",
        "key",
        "element",
        "baidu",
        "baidu",
        "baidu",
        "tagName",
        "opt_attributes",
        "tagName",
        "opt_attributes",
        "baidu",
        "el",
        "attributes",
        "baidu",
        "baidu",
        "baidu",
        "baidu",
        "target",
        "source",
        "p",
        "source",
        "source",
        "p",
        "target",
        "p",
        "source",
        "p",
        "target",
        "BMapLib",
        "pathList",
        "opts",
        "pathList",
        "pathList",
        "pathList",
        "pathList",
        "opts",
        "pathList",
        "BMap",
        "defaultIcon",
        "LuShu",
        "opts",
        "opts",
        "p",
        "opts",
        "opts",
        "p",
        "p",
        "opts",
        "p",
        "LuShu",
        "me",
        "me",
        "me",
        "len",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "setTimeout",
        "me",
        "me",
        "me",
        "LuShu",
        "clearInterval",
        "t",
        "i",
        "len",
        "i",
        "t",
        "i",
        "LuShu",
        "clearInterval",
        "LuShu",
        "LuShu",
        "baidu",
        "LuShu",
        "callback",
        "clearTimeout",
        "BMap",
        "marker",
        "marker",
        "marker",
        "CustomOverlay",
        "me",
        "me",
        "overlay",
        "overlay",
        "overlay",
        "poi",
        "poi",
        "pxA",
        "pxB",
        "pxA",
        "pxB",
        "pxA",
        "pxB",
        "initPos",
        "targetPos",
        "effect",
        "timer",
        "initPos",
        "targetPos",
        "me",
        "initPos",
        "targetPos",
        "step",
        "count",
        "me",
        "me",
        "me",
        "setInterval",
        "currentCount",
        "count",
        "clearInterval",
        "me",
        "me",
        "me",
        "me",
        "me",
        "currentCount",
        "me",
        "p",
        "me",
        "i",
        "effect",
        "initPos",
        "targetPos",
        "currentCount",
        "count",
        "effect",
        "initPos",
        "targetPos",
        "currentCount",
        "count",
        "me",
        "BMap",
        "x",
        "y",
        "currentCount",
        "me",
        "me",
        "p",
        "initPos",
        "targetPos",
        "me",
        "pos",
        "me",
        "pos",
        "me",
        "pos",
        "timer",
        "l",
        "f",
        "m",
        "f",
        "j",
        "f",
        "m",
        "j",
        "m",
        "f",
        "m",
        "m",
        "f",
        "m",
        "f",
        "m",
        "f",
        "k",
        "e",
        "g",
        "m",
        "f",
        "e",
        "e",
        "e",
        "e",
        "e",
        "j",
        "e",
        "m",
        "f",
        "h",
        "i",
        "i",
        "j",
        "i",
        "index",
        "index",
        "me",
        "me",
        "index",
        "me",
        "index",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "len",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "pos",
        "me",
        "pos",
        "me",
        "me",
        "pos",
        "index",
        "clearInterval",
        "me",
        "me",
        "me",
        "index",
        "me",
        "pos",
        "me",
        "me",
        "index",
        "me",
        "me",
        "index",
        "setTimeout",
        "me",
        "me",
        "me",
        "index",
        "me",
        "t",
        "i",
        "clearTimeout",
        "i",
        "initPos",
        "targetPos",
        "currentCount",
        "count",
        "targetPos",
        "initPos",
        "c",
        "t",
        "d",
        "b",
        "markerPoi",
        "t",
        "i",
        "len",
        "i",
        "t",
        "i",
        "distance",
        "BMap",
        "t",
        "i",
        "t",
        "i",
        "markerPoi",
        "distance",
        "t",
        "i",
        "i",
        "opt",
        "opt",
        "opt",
        "opt",
        "opt",
        "opt",
        "opt",
        "point",
        "html",
        "point",
        "html",
        "CustomOverlay",
        "BMap",
        "CustomOverlay",
        "baidu",
        "div",
        "div",
        "div",
        "CustomOverlay",
        "baidu",
        "CustomOverlay",
        "poi",
        "markerSize",
        "poi",
        "baidu",
        "baidu",
        "overlayW",
        "parseInt",
        "styleW",
        "overlayH",
        "parseInt",
        "styleH",
        "px",
        "overlayW",
        "px",
        "markerSize",
        "html",
        "html",
        "lushuMain",
        "lushuMain"
    ],
    "literals": [
        "'1.5.0'",
        "'$BAIDU$'",
        "'string'",
        "'[object String]'",
        "'\\x241'",
        "''",
        "'-'",
        "'_'",
        "''",
        "'get'",
        "'cellpadding'",
        "'cellPadding'",
        "'cellspacing'",
        "'cellSpacing'",
        "'colspan'",
        "'colSpan'",
        "'rowspan'",
        "'rowSpan'",
        "'valign'",
        "'vAlign'",
        "'usemap'",
        "'useMap'",
        "'frameborder'",
        "'frameBorder'",
        "'for'",
        "'htmlFor'",
        "'class'",
        "'className'",
        "'htmlFor'",
        "'for'",
        "'className'",
        "'class'",
        "'style'",
        "''",
        "'hidden'",
        "'visible'",
        "'initPos'",
        "'rotation'",
        "'rotation'",
        "'changePath'",
        "'againmove'",
        "'div'",
        "'border:solid 1px #ccc;width:auto;min-width:50px;text-align:center;position:absolute;background:#fff;color:#000;font-size:12px;border-radius: 10px;padding:5px;white-space: nowrap;'",
        "'width'",
        "'height'",
        "'px'",
        "'px'"
    ],
    "variables": [
        "BMapLib",
        "T",
        "baidu",
        "doc",
        "styles",
        "i",
        "filters",
        "dom",
        "value",
        "fixer",
        "result",
        "el",
        "attributes",
        "LuShu",
        "me",
        "len",
        "i",
        "t",
        "len",
        "marker",
        "me",
        "overlay",
        "me",
        "currentCount",
        "timer",
        "step",
        "initPos",
        "targetPos",
        "count",
        "p",
        "x",
        "y",
        "pos",
        "j",
        "e",
        "k",
        "g",
        "h",
        "i",
        "me",
        "me",
        "len",
        "me",
        "index",
        "me",
        "t",
        "b",
        "initPos",
        "c",
        "t",
        "currentCount",
        "d",
        "count",
        "t",
        "distance",
        "i",
        "len",
        "div",
        "px",
        "styleW",
        "styleH"
    ],
    "comments": [
        "声明baidu包",
        "以下方法为百度Tangram框架中的方法，请到http://tangram.baidu.com 查看文档",
        "轨迹当前段落的索引",
        "存储一条路线",
        "移动到当前点的索引",
        "控制暂停后开始移动的队列的数组",
        "进行坐标转换的类",
        "默认速度 米/秒",
        "新增暂停时的位置 解决下一轮开始闪现到下一个点 @author denglt",
        "如果不是默认实例，则使用默认的icon",
        "不是第一次点击开始,并且小车还没到达终点",
        "没按pause再按start不做处理",
        "按了pause按钮,并且再按start，直接移动到下一点",
        "并且此过程中，没有按stop按钮",
        "防止先stop，再pause，然后连续不停的start的异常",
        "第一次点击开始，或者点了stop之后点开始",
        "等待marker动画完毕再加载infowindow",
        "重置状态",
        "重置landmark里边的poi为未显示状态",
        "标识是否是按过pause按钮",
        "Lushu私有方法",
        "移除之前的overlay",
        "marker.setAnimation(BMAP_ANIMATION_DROP);",
        "将当前类的引用传给overlay。",
        "目标点的  当前的步长,position,总的步长,动画效果,回调",
        "当前的帧数",
        "步长，米/秒",
        "初始坐标",
        "获取结束点的(x,y)坐标",
        "总的步长",
        "如果小于1直接移动到下一点",
        "两点之间匀速移动",
        "两点之间当前帧数大于总帧数的时候，则说明已经完成移动",
        "移动的点已经超过总的长度",
        "运行下一个点",
        "正在移动",
        "设置marker",
        "设置自定义overlay的位置",
        "没按pause再按start 或者没有开始过不做处理",
        "设置上方overlay的position",
        "运行下一个点",
        "清除暂停后再开始运行的timeout",
        "缓动效果",
        "初始坐标，目标坐标，当前的步长，总的步长",
        "landmarkPois中的点没有出现过的话",
        "两点距离小于10米，认为是同一个点",
        "设置overlay的position",
        "此处的bug已修复，感谢 苗冬(diligentcat@gmail.com) 的细心查看和认真指出",
        "设置overlay的内容",
        "跟customoverlay相关的实例的引用",
        "var BMapLib=window.BMapLib=BMapLib||{};(function(){var b,a=b=a||{version:\"1.5.0\"};a.guid=\"$BAIDU$\";(function(){window[a.guid]=window[a.guid]||{};a.dom=a.dom||{};a.dom.g=function(e){if(\"string\"==typeof e||e instanceof String){return document.getElementById(e)}else{if(e&&e.nodeName&&(e.nodeType==1||e.nodeType==9)){return e}}return null};a.g=a.G=a.dom.g;a.lang=a.lang||{};a.lang.isString=function(e){return\"[object String]\"==Object.prototype.toString.call(e)};a.isString=a.lang.isString;a.dom._g=function(e){if(a.lang.isString(e)){return document.getElementById(e)}return e};a._g=a.dom._g;a.dom.getDocument=function(e){e=a.dom.g(e);return e.nodeType==9?e:e.ownerDocument||e.document};a.browser=a.browser||{};a.browser.ie=a.ie=/msie (\\d+\\.\\d+)/i.test(navigator.userAgent)?(document.documentMode||+RegExp[\"\\x241\"]):undefined;a.dom.getComputedStyle=function(f,e){f=a.dom._g(f);var h=a.dom.getDocument(f),g;if(h.defaultView&&h.defaultView.getComputedStyle){g=h.defaultView.getComputedStyle(f,null);if(g){return g[e]||g.getPropertyValue(e)}}return\"\"};a.dom._styleFixer=a.dom._styleFixer||{};a.dom._styleFilter=a.dom._styleFilter||[];a.dom._styleFilter.filter=function(f,j,k){for(var e=0,h=a.dom._styleFilter,g;g=h[e];e++){if(g=g[k]){j=g(f,j)}}return j};a.string=a.string||{};a.string.toCamelCase=function(e){if(e.indexOf(\"-\")<0&&e.indexOf(\"_\")<0){return e}return e.replace(/[-_][^-_]/g,function(f){return f.charAt(1).toUpperCase()})};a.dom.getStyle=function(g,f){var i=a.dom;g=i.g(g);f=a.string.toCamelCase(f);var h=g.style[f]||(g.currentStyle?g.currentStyle[f]:\"\")||i.getComputedStyle(g,f);if(!h){var e=i._styleFixer[f];if(e){h=e.get?e.get(g):a.dom.getStyle(g,e)}}if(e=i._styleFilter){h=e.filter(f,h,\"get\")}return h};a.getStyle=a.dom.getStyle;a.dom._NAME_ATTRS=(function(){var e={cellpadding:\"cellPadding\",cellspacing:\"cellSpacing\",colspan:\"colSpan\",rowspan:\"rowSpan\",valign:\"vAlign\",usemap:\"useMap\",frameborder:\"frameBorder\"};if(a.browser.ie<8){e[\"for\"]=\"htmlFor\";e[\"class\"]=\"className\"}else{e.htmlFor=\"for\";e.className=\"class\"}return e})();a.dom.setAttr=function(f,e,g){f=a.dom.g(f);if(\"style\"==e){f.style.cssText=g}else{e=a.dom._NAME_ATTRS[e]||e;f.setAttribute(e,g)}return f};a.setAttr=a.dom.setAttr;a.dom.setAttrs=function(g,e){g=a.dom.g(g);for(var f in e){a.dom.setAttr(g,f,e[f])}return g};a.setAttrs=a.dom.setAttrs;a.dom.create=function(g,e){var h=document.createElement(g),f=e||{};return a.dom.setAttrs(h,f)};a.object=a.object||{};a.extend=a.object.extend=function(g,e){for(var f in e){if(e.hasOwnProperty(f)){g[f]=e[f]}}return g}})();var c=BMapLib.LuShu=function(g,f,e){if(!f||f.length<1){return}this._map=g;this._path=f;this.i=0;this._setTimeoutQuene=[];this._projection=this._map.getMapType().getProjection();this._opts={icon:null,speed:4000,defaultContent:\"\"};this._setOptions(e);this._rotation=0;if(!this._opts.icon instanceof BMap.Icon){this._opts.icon=defaultIcon}};c.prototype._setOptions=function(e){if(!e){return}for(var f in e){if(e.hasOwnProperty(f)){this._opts[f]=e[f]}}};c.prototype.start=function(){var f=this,e=f._path.length;if(f.i&&f.i<e-1){if(!f._fromPause){return}else{if(!f._fromStop){f._moveNext(++f.i)}}}else{f._addMarker();f._timeoutFlag=setTimeout(function(){f._addInfoWin();if(f._opts.defaultContent==\"\"){f.hideInfoWindow()}f._moveNext(f.i)},400)}this._fromPause=false;this._fromStop=false},c.prototype.stop=function(){this.i=0;this._fromStop=true;clearInterval(this._intervalFlag);this._clearTimeout();for(var g=0,f=this._opts.landmarkPois,e=f.length;g<e;g++){f[g].bShow=false}};c.prototype.pause=function(){clearInterval(this._intervalFlag);this._fromPause=true;this._clearTimeout()};c.prototype.hideInfoWindow=function(){this._overlay._div.style.visibility=\"hidden\"};c.prototype.showInfoWindow=function(){this._overlay._div.style.visibility=\"visible\"};a.object.extend(c.prototype,{_addMarker:function(f){if(this._marker){this.stop();this._map.removeOverlay(this._marker);clearTimeout(this._timeoutFlag)}this._overlay&&this._map.removeOverlay(this._overlay);var e=new BMap.Marker(this._path[0]);this._opts.icon&&e.setIcon(this._opts.icon);this._map.addOverlay(e);this._marker=e},_addInfoWin:function(){var f=this;var e=new d(f._marker.getPosition(),f._opts.defaultContent);e.setRelatedClass(this);this._overlay=e;this._map.addOverlay(e)},_getMercator:function(e){return this._map.getMapType().getProjection().lngLatToPoint(e)},_getDistance:function(f,e){return Math.sqrt(Math.pow(f.x-e.x,2)+Math.pow(f.y-e.y,2))},_move:function(n,j,m){var i=this,h=0,e=10,f=this._opts.speed/(1000/e),l=this._projection.lngLatToPoint(n),k=this._projection.lngLatToPoint(j),g=Math.round(i._getDistance(l,k)/f);if(g<1){i._moveNext(++i.i);return}i._intervalFlag=setInterval(function(){if(h>=g){clearInterval(i._intervalFlag);if(i.i>i._path.length){return}i._moveNext(++i.i)}else{h++;var o=m(l.x,k.x,h,g),r=m(l.y,k.y,h,g),q=i._projection.pointToLngLat(new BMap.Pixel(o,r));if(h==1){var p=null;if(i.i-1>=0){p=i._path[i.i-1]}if(i._opts.enableRotation==true){i.setRotation(p,n,j)}if(i._opts.autoView){if(!i._map.getBounds().containsPoint(q)){i._map.setCenter(q)}}}i._marker.setPosition(q);i._setInfoWin(q)}},e)},setRotation:function(l,f,m){var j=this;var e=0;f=j._map.pointToPixel(f);m=j._map.pointToPixel(m);if(m.x!=f.x){var k=(m.y-f.y)/(m.x-f.x),g=Math.atan(k);e=g*360/(2*Math.PI);if(m.x<f.x){e=-e+90+90}else{e=-e}j._marker.setRotation(-e)}else{var h=m.y-f.y;var i=0;if(h>0){i=-1}else{i=1}j._marker.setRotation(-i*90)}return},linePixellength:function(f,e){return Math.sqrt(Math.abs(f.x-e.x)*Math.abs(f.x-e.x)+Math.abs(f.y-e.y)*Math.abs(f.y-e.y))},pointToPoint:function(f,e){return Math.abs(f.x-e.x)*Math.abs(f.x-e.x)+Math.abs(f.y-e.y)*Math.abs(f.y-e.y)},_moveNext:function(e){var f=this;if(e<this._path.length-1){f._move(f._path[e],f._path[e+1],f._tween.linear)}},_setInfoWin:function(g){var f=this;if(!f._overlay){return}f._overlay.setPosition(g,f._marker.getIcon().size);var e=f._troughPointIndex(g);if(e!=-1){clearInterval(f._intervalFlag);f._overlay.setHtml(f._opts.landmarkPois[e].html);f._overlay.setPosition(g,f._marker.getIcon().size);f._pauseForView(e)}else{f._overlay.setHtml(f._opts.defaultContent)}},_pauseForView:function(e){var g=this;var f=setTimeout(function(){g._moveNext(++g.i)},g._opts.landmarkPois[e].pauseTime*1000);g._setTimeoutQuene.push(f)},_clearTimeout:function(){for(var e in this._setTimeoutQuene){clearTimeout(this._setTimeoutQuene[e])}this._setTimeoutQuene.length=0},_tween:{linear:function(f,j,h,i){var e=f,l=j-f,g=h,k=i;return l*g/k+e}},_troughPointIndex:function(f){var h=this._opts.landmarkPois,j;for(var g=0,e=h.length;g<e;g++){if(!h[g].bShow){j=this._map.getDistance(new BMap.Point(h[g].lng,h[g].lat),f);if(j<10){h[g].bShow=true;return g}}}return -1}});function d(e,f){this._point=e;this._html=f}d.prototype=new BMap.Overlay();d.prototype.initialize=function(e){var f=this._div=a.dom.create(\"div\",{style:\"border:solid 1px #ccc;width:auto;min-width:50px;text-align:center;position:absolute;background:#fff;color:#000;font-size:12px;border-radius: 10px;padding:5px;white-space: nowrap;\"});f.innerHTML=this._html;e.getPanes().floatPane.appendChild(f);this._map=e;return f};d.prototype.draw=function(){this.setPosition(this.lushuMain._marker.getPosition(),this.lushuMain._marker.getIcon().size)};a.object.extend(d.prototype,{setPosition:function(h,i){var f=this._map.pointToOverlayPixel(h),e=a.dom.getStyle(this._div,\"width\"),g=a.dom.getStyle(this._div,\"height\");overlayW=parseInt(this._div.clientWidth||e,10),overlayH=parseInt(this._div.clientHeight||g,10);this._div.style.left=f.x-overlayW/2+\"px\";this._div.style.bottom=-(f.y-i.height)+\"px\"},setHtml:function(e){this._div.innerHTML=e},setRelatedClass:function(e){this.lushuMain=e}})})();"
    ],
    "docstrings": [
        "* @fileoverview 百度地图的轨迹跟随类，对外开放。\n * 用户可以在地图上自定义轨迹运动\n * 可以自定义路过某个点的图片，文字介绍等。\n * 主入口类是<a href=\"symbols/BMapLib.LuShu.html\">LuShu</a>，\n * 基于Baidu Map API 1.2。.\n *\n * @author Baidu Map Api Group\n * @version 1.2",
        "* @namespace BMap的所有library类均放在BMapLib命名空间下",
        "* @exports LuShu as BMapLib.LuShu",
        "* LuShu类的构造函数\n     * @class LuShu <b>入口</b>。\n     * 实例化该类后，可调用,start,end,pause等方法控制覆盖物的运动。\n\n     * @constructor\n         * @param {Map} map Baidu map的实例对象.\n         * @param {Array} path 构成路线的point的数组.\n         * @param {Json Object} opts 可选的输入参数，非必填项。可输入选项包括：<br />\n         * {<br />\"<b>landmarkPois</b>\" : {Array} 要在覆盖物移动过程中，显示的特殊点。格式如下:landmarkPois:[<br />\n         *      {lng:116.314782,lat:39.913508,html:'加油站',pauseTime:2},<br />\n         *      {lng:116.315391,lat:39.964429,html:'高速公路收费站,pauseTime:3}]<br />\n         * <br />\"<b>icon</b>\" : {Icon} 覆盖物的icon,\n         * <br />\"<b>speed</b>\" : {Number} 覆盖物移动速度，单位米/秒    <br />\n         * <br />\"<b>defaultContent</b>\" : {String} 覆盖物中的内容    <br />\n         * }<br />.\n         * @example <b>参考示例：</b><br />\n         * var lushu = new BMapLib.LuShu(map,arrPois,{defaultContent:\"从北京到天津\",landmarkPois:[]});",
        "* 根据用户输入的opts，修改默认参数_opts\n     * @param {Json Object} opts 用户输入的修改参数.\n     * @return 无返回值.",
        "* @description 开始运动\n     * @param none\n     * @return 无返回值.\n     *\n     * @example <b>参考示例：</b><br />\n     * lushu.start();",
        "* 结束运动\n     * @return 无返回值.\n     *\n     * @example <b>参考示例：</b><br />\n     * lushu.stop();",
        "* 暂停运动\n     * @return 无返回值.",
        "* 隐藏上方overlay\n     * @return 无返回值.\n     *\n     * @example <b>参考示例：</b><br />\n     * lushu.hideInfoWindow();",
        "* 显示上方overlay\n     * @return 无返回值.\n     *\n     * @example <b>参考示例：</b><br />\n     * lushu.showInfoWindow();",
        "* 添加marker到地图上\n         * @param {Function} 回调函数.\n         * @return 无返回值.",
        "* 添加上方overlay\n         * @return 无返回值.",
        "* 获取墨卡托坐标\n         * @param {Point} poi 经纬度坐标.\n         * @return 无返回值.",
        "* 计算两点间的距离\n         * @param {Point} poi 经纬度坐标A点.\n         * @param {Point} poi 经纬度坐标B点.\n         * @return 无返回值.",
        "* 移动小车\n         * @param {Number} poi 当前的步长.\n         * @param {Point} initPos 经纬度坐标初始点.\n         * @param {Point} targetPos 经纬度坐标目标点.\n         * @param {Function} effect 缓动效果.\n         * @return 无返回值.",
        "* 移动到下一个点\n         * @param {Number} index 当前点的索引.\n         * @return 无返回值.",
        "* 暂停后把上一次的移动跑完\n         * @author denglt",
        "* 设置小车上方infowindow的内容，位置等\n         * @param {Point} pos 经纬度坐标点.\n         * @return 无返回值.",
        "* 在某个点暂停的时间\n         * @param {Number} index 点的索引.\n         * @return 无返回值.",
        "* 否经过某个点的index\n         * @param {Point} markerPoi 当前小车的坐标点.\n         * @return 无返回值.",
        "* 改变路径之后重新起航\n         * @param  opt \n         * path 新的轨迹\n         * speed 在这段轨迹中的速度",
        "* 自定义的overlay，显示在小车的上方\n     * @param {Point} Point 要定位的点.\n     * @param {String} html overlay中要显示的东西.\n     * @return 无返回值."
    ],
    "functions": [
        "_resetPath",
        "_changePath",
        "CustomOverlay"
    ],
    "classes": []
}