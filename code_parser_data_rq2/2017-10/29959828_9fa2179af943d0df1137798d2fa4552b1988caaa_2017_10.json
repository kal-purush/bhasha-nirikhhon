{
    "identifiers": [
        "os",
        "shutil",
        "sys",
        "tempfile",
        "zipfile",
        "optparse",
        "subprocess",
        "platform",
        "textwrap",
        "contextlib",
        "distutils",
        "log",
        "urllib",
        "request",
        "urlopen",
        "ImportError",
        "urllib2",
        "urlopen",
        "site",
        "USER_SITE",
        "ImportError",
        "os",
        "curdir",
        "log",
        "warn",
        "DEFAULT_DEPRECATION_MESSAGE",
        "format",
        "DEFAULT_VERSION",
        "args",
        "sys",
        "executable",
        "args",
        "subprocess",
        "call",
        "args",
        "archive_filename",
        "install_args",
        "archive_context",
        "archive_filename",
        "log",
        "warn",
        "_python_cmd",
        "install_args",
        "log",
        "warn",
        "log",
        "warn",
        "egg",
        "archive_filename",
        "to_dir",
        "archive_context",
        "archive_filename",
        "log",
        "warn",
        "to_dir",
        "_python_cmd",
        "to_dir",
        "log",
        "warn",
        "egg",
        "os",
        "path",
        "exists",
        "egg",
        "IOError",
        "zipfile",
        "ZipFile",
        "value",
        "traceback",
        "close",
        "cls",
        "args",
        "kwargs",
        "hasattr",
        "zipfile",
        "ZipFile",
        "zipfile",
        "ZipFile",
        "args",
        "kwargs",
        "ContextualZipFile",
        "cls",
        "__new__",
        "cls",
        "contextlib",
        "contextmanager",
        "filename",
        "tempfile",
        "mkdtemp",
        "log",
        "warn",
        "tmpdir",
        "os",
        "getcwd",
        "os",
        "chdir",
        "tmpdir",
        "ContextualZipFile",
        "filename",
        "archive",
        "archive",
        "extractall",
        "zipfile",
        "BadZipfile",
        "err",
        "err",
        "args",
        "err",
        "args",
        "MEANINGFUL_INVALID_ZIP_ERR_MSG",
        "format",
        "filename",
        "os",
        "path",
        "join",
        "tmpdir",
        "os",
        "listdir",
        "tmpdir",
        "os",
        "chdir",
        "subdir",
        "log",
        "warn",
        "subdir",
        "os",
        "chdir",
        "old_wd",
        "shutil",
        "rmtree",
        "tmpdir",
        "version",
        "download_base",
        "to_dir",
        "download_delay",
        "format",
        "sys",
        "sys",
        "os",
        "path",
        "join",
        "to_dir",
        "tp",
        "format",
        "locals",
        "os",
        "path",
        "exists",
        "egg",
        "download_setuptools",
        "version",
        "download_base",
        "to_dir",
        "download_delay",
        "_build_egg",
        "egg",
        "archive",
        "to_dir",
        "sys",
        "path",
        "insert",
        "egg",
        "sys",
        "modules",
        "_unload_pkg_resources",
        "setuptools",
        "egg",
        "version",
        "DEFAULT_VERSION",
        "download_base",
        "DEFAULT_URL",
        "to_dir",
        "DEFAULT_SAVE_DIR",
        "download_delay",
        "os",
        "path",
        "abspath",
        "to_dir",
        "sys",
        "modules",
        "intersection",
        "rep_modules",
        "pkg_resources",
        "pkg_resources",
        "require",
        "version",
        "ImportError",
        "pkg_resources",
        "DistributionNotFound",
        "pkg_resources",
        "VersionConflict",
        "VC_err",
        "imported",
        "_conflict_bail",
        "VC_err",
        "version",
        "pkg_resources",
        "_unload_pkg_resources",
        "_do_download",
        "version",
        "download_base",
        "to_dir",
        "download_delay",
        "VC_err",
        "version",
        "textwrap",
        "dedent",
        "conflict_tmpl",
        "format",
        "locals",
        "sys",
        "stderr",
        "write",
        "msg",
        "sys",
        "exit",
        "importer",
        "importer",
        "sys",
        "meta_path",
        "importer",
        "__class__",
        "__module__",
        "name",
        "name",
        "sys",
        "modules",
        "name",
        "startswith",
        "mod_name",
        "del_modules",
        "sys",
        "modules",
        "mod_name",
        "cmd",
        "target",
        "subprocess",
        "check_call",
        "cmd",
        "subprocess",
        "CalledProcessError",
        "os",
        "access",
        "target",
        "os",
        "F_OK",
        "os",
        "unlink",
        "target",
        "url",
        "target",
        "os",
        "path",
        "abspath",
        "target",
        "locals",
        "ps_cmd",
        "_clean_check",
        "cmd",
        "target",
        "platform",
        "system",
        "open",
        "os",
        "path",
        "devnull",
        "devnull",
        "subprocess",
        "check_call",
        "cmd",
        "stdout",
        "devnull",
        "stderr",
        "devnull",
        "has_powershell",
        "url",
        "target",
        "url",
        "target",
        "_clean_check",
        "cmd",
        "target",
        "open",
        "os",
        "path",
        "devnull",
        "devnull",
        "subprocess",
        "check_call",
        "cmd",
        "stdout",
        "devnull",
        "stderr",
        "devnull",
        "has_curl",
        "url",
        "target",
        "url",
        "target",
        "_clean_check",
        "cmd",
        "target",
        "open",
        "os",
        "path",
        "devnull",
        "devnull",
        "subprocess",
        "check_call",
        "cmd",
        "stdout",
        "devnull",
        "stderr",
        "devnull",
        "has_wget",
        "url",
        "target",
        "urlopen",
        "url",
        "src",
        "read",
        "src",
        "close",
        "open",
        "target",
        "dst",
        "dst",
        "write",
        "data",
        "download_file_powershell",
        "download_file_curl",
        "download_file_wget",
        "download_file_insecure",
        "dl",
        "dl",
        "downloaders",
        "dl",
        "viable",
        "next",
        "viable_downloaders",
        "version",
        "DEFAULT_VERSION",
        "download_base",
        "DEFAULT_URL",
        "to_dir",
        "DEFAULT_SAVE_DIR",
        "delay",
        "downloader_factory",
        "get_best_downloader",
        "os",
        "path",
        "abspath",
        "to_dir",
        "version",
        "download_base",
        "zip_name",
        "os",
        "path",
        "join",
        "to_dir",
        "zip_name",
        "os",
        "path",
        "exists",
        "saveto",
        "log",
        "warn",
        "url",
        "downloader_factory",
        "downloader",
        "url",
        "saveto",
        "os",
        "path",
        "realpath",
        "saveto",
        "options",
        "options",
        "user_install",
        "optparse",
        "OptionParser",
        "parser",
        "add_option",
        "dest",
        "action",
        "help",
        "parser",
        "add_option",
        "dest",
        "metavar",
        "DEFAULT_URL",
        "help",
        "parser",
        "add_option",
        "dest",
        "action",
        "download_file_insecure",
        "get_best_downloader",
        "help",
        "parser",
        "add_option",
        "help",
        "DEFAULT_VERSION",
        "parser",
        "add_option",
        "help",
        "DEFAULT_SAVE_DIR",
        "parser",
        "parse_args",
        "options",
        "options",
        "version",
        "options",
        "version",
        "download_base",
        "options",
        "download_base",
        "downloader_factory",
        "options",
        "downloader_factory",
        "to_dir",
        "options",
        "to_dir",
        "_parse_args",
        "download_setuptools",
        "_download_args",
        "options",
        "_install",
        "archive",
        "_build_install_args",
        "options",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "\"33.1.1\"",
        "\"https://pypi.io/packages/source/s/setuptools/\"",
        "\"ez_setup.py is deprecated and when using it setuptools will be pinned to {0} since it's the last version that supports setuptools self upgrade/installation, check https://github.com/pypa/setuptools/issues/581 for more info; use pip to install setuptools\"",
        "'Maybe {0} is corrupted, delete it and try again.'",
        "'Installing Setuptools'",
        "'setup.py'",
        "'install'",
        "'Something went wrong during the installation.'",
        "'See the error message above.'",
        "'Building a Setuptools egg in %s'",
        "'setup.py'",
        "'-q'",
        "'bdist_egg'",
        "'--dist-dir'",
        "'Could not build the egg.'",
        "'__exit__'",
        "'Extracting in %s'",
        "''",
        "'Now working in %s'",
        "'py{sys.version_info[0]}.{sys.version_info[1]}'",
        "'setuptools-{version}-{py_desig}.egg'",
        "'pkg_resources'",
        "'pkg_resources'",
        "'setuptools'",
        "\"setuptools>=\"",
        "'pkg_resources.extern'",
        "'pkg_resources'",
        "\"[System.Net.WebRequest]::DefaultWebProxy.Credentials = \"",
        "\"[System.Net.CredentialCache]::DefaultCredentials; \"",
        "'(new-object System.Net.WebClient).DownloadFile(\"%(url)s\", \"%(target)s\")'",
        "'powershell'",
        "'-Command'",
        "'Windows'",
        "'powershell'",
        "'-Command'",
        "'echo test'",
        "'wb'",
        "'curl'",
        "'--location'",
        "'--silent'",
        "'--output'",
        "'curl'",
        "'--version'",
        "'wb'",
        "'wget'",
        "'--quiet'",
        "'--output-document'",
        "'wget'",
        "'--version'",
        "'wb'",
        "\"wb\"",
        "\"setuptools-%s.zip\"",
        "\"Downloading %s\"",
        "'--user'",
        "'--user'",
        "'user_install'",
        "'store_true'",
        "'install in user site package'",
        "'--download-base'",
        "'download_base'",
        "\"URL\"",
        "'alternative URL from where to download the setuptools package'",
        "'--insecure'",
        "'downloader_factory'",
        "'store_const'",
        "'Use internal, non-validating downloader'",
        "'--version'",
        "\"Specify which version to download\"",
        "'--to-dir'",
        "\"Directory to save (and re-use) package\"",
        "'__main__'"
    ],
    "variables": [
        "USER_SITE",
        "DEFAULT_VERSION",
        "DEFAULT_URL",
        "DEFAULT_SAVE_DIR",
        "DEFAULT_DEPRECATION_MESSAGE",
        "MEANINGFUL_INVALID_ZIP_ERR_MSG",
        "args",
        "tmpdir",
        "old_wd",
        "err",
        "args",
        "err",
        "args",
        "subdir",
        "py_desig",
        "tp",
        "egg",
        "archive",
        "setuptools",
        "bootstrap_install_from",
        "to_dir",
        "rep_modules",
        "imported",
        "conflict_tmpl",
        "msg",
        "sys",
        "meta_path",
        "del_modules",
        "target",
        "ps_cmd",
        "cmd",
        "cmd",
        "download_file_powershell",
        "viable",
        "cmd",
        "cmd",
        "download_file_curl",
        "viable",
        "cmd",
        "cmd",
        "download_file_wget",
        "viable",
        "src",
        "data",
        "download_file_insecure",
        "viable",
        "downloaders",
        "viable_downloaders",
        "to_dir",
        "zip_name",
        "url",
        "saveto",
        "downloader",
        "parser",
        "options",
        "args",
        "options",
        "archive"
    ],
    "comments": [
        "!/usr/bin/env python",
        "33.1.1 is the last version that supports setuptools self upgrade/installation.",
        "installing",
        "exitcode will be 2",
        "building an egg",
        "returning the result",
        "going in the directory",
        "Remove previously-imported pkg_resources if present (see",
        "https://bitbucket.org/pypa/setuptools/pull-request/7/ for details).",
        "prior to importing, capture the module state for",
        "representative modules.",
        "a suitable version is already installed",
        "pkg_resources not available; setuptools is not installed; download",
        "no version of setuptools was found; allow download",
        "otherwise, unload pkg_resources to allow the downloaded version to",
        "take precedence.",
        "Read all the data in one block.",
        "Write all the data in one block to avoid creating a partial file.",
        "making sure we use the absolute path",
        "Avoid repeated downloads",
        "positional arguments are ignored"
    ],
    "docstrings": [
        "\"\"\"\nSetuptools bootstrapping installer.\n\nMaintained at https://github.com/pypa/setuptools/tree/bootstrap.\n\nRun this script to install or upgrade setuptools.\n\nThis method is DEPRECATED. Check https://github.com/pypa/setuptools/issues/581 for more details.\n\"\"\"",
        "\"\"\"\n    Execute a command.\n\n    Return True if the command succeeded.\n    \"\"\"",
        "\"\"\"Install Setuptools.\"\"\"",
        "\"\"\"Build Setuptools egg.\"\"\"",
        "\"\"\"Supplement ZipFile class to support context manager for Python 2.6.\"\"\"",
        "\"\"\"Construct a ZipFile or ContextualZipFile as appropriate.\"\"\"",
        "\"\"\"\n    Unzip filename to a temporary directory, set to the cwd.\n\n    The unzipped target is cleaned up after.\n    \"\"\"",
        "\"\"\"Download Setuptools.\"\"\"",
        "\"\"\"\n    Ensure that a setuptools version is installed.\n\n    Return None. Raise SystemExit if the requested version\n    or later cannot be installed.\n    \"\"\"",
        "\"\"\"\n    Setuptools was imported prior to invocation, so it is\n    unsafe to unload it. Bail out.\n    \"\"\"",
        "\"\"\"\n        The required version of setuptools (>={version}) is not available,\n        and can't be installed while this script is running. Please\n        install a more recent version first, using\n        'easy_install -U setuptools'.\n\n        (Currently using {VC_err.args[0]!r})\n        \"\"\"",
        "\"\"\"\n    Run the command to download target.\n\n    If the command fails, clean up before re-raising the error.\n    \"\"\"",
        "\"\"\"\n    Download the file at url to target using Powershell.\n\n    Powershell will validate trust.\n    Raise an exception if the command cannot complete.\n    \"\"\"",
        "\"\"\"Determine if Powershell is available.\"\"\"",
        "\"\"\"Use Python to download the file, without connection authentication.\"\"\"",
        "\"\"\"\n    Download setuptools from a specified location and return its filename.\n\n    `version` should be a valid setuptools version number that is available\n    as an sdist for download under the `download_base` URL (which should end\n    with a '/'). `to_dir` is the directory where the egg will be downloaded.\n    `delay` is the number of seconds to pause before an actual download\n    attempt.\n\n    ``downloader_factory`` should be a function taking no arguments and\n    returning a function for downloading a URL to a target.\n    \"\"\"",
        "\"\"\"\n    Build the arguments to 'python setup.py install' on the setuptools package.\n\n    Returns list of command line arguments.\n    \"\"\"",
        "\"\"\"Parse the command line for options.\"\"\"",
        "\"\"\"Return args for download_setuptools function from cmdline args.\"\"\"",
        "\"\"\"Install or upgrade setuptools and EasyInstall.\"\"\""
    ],
    "functions": [
        "_python_cmd",
        "_install",
        "_build_egg",
        "__enter__",
        "__exit__",
        "__new__",
        "archive_context",
        "_do_download",
        "use_setuptools",
        "_conflict_bail",
        "_unload_pkg_resources",
        "_clean_check",
        "download_file_powershell",
        "has_powershell",
        "download_file_curl",
        "has_curl",
        "download_file_wget",
        "has_wget",
        "download_file_insecure",
        "get_best_downloader",
        "download_setuptools",
        "_build_install_args",
        "_parse_args",
        "_download_args",
        "main"
    ],
    "classes": [
        "ContextualZipFile"
    ]
}