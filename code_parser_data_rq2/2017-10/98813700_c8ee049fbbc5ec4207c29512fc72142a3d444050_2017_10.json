{
    "identifiers": [
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "factory",
        "jQuery",
        "Cookies",
        "Cookies",
        "api",
        "_OldLang",
        "api",
        "$",
        "Cookies",
        "Lang",
        "options",
        "options",
        "options",
        "options",
        "options",
        "defaultLang",
        "options",
        "currentLang",
        "options",
        "allowCookieOverride",
        "options",
        "options",
        "options",
        "options",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "arguments",
        "$",
        "arguments",
        "$",
        "arguments",
        "$",
        "arguments",
        "$",
        "arguments",
        "$",
        "arguments",
        "defaultLang",
        "defaultLang",
        "allowCookieOverride",
        "currentLang",
        "Cookies",
        "cookieLang",
        "Cookies",
        "cookieLang",
        "currentLang",
        "cookieLang",
        "$",
        "currentLang",
        "currentLang",
        "currentLang",
        "Lang",
        "Lang",
        "Lang",
        "lang",
        "path",
        "lang",
        "path",
        "lang",
        "path",
        "Lang",
        "lang",
        "callback",
        "lang",
        "lang",
        "$",
        "lang",
        "data",
        "lang",
        "data",
        "lang",
        "lang",
        "i",
        "i",
        "packRegex",
        "i",
        "regex",
        "packRegex",
        "i",
        "regex",
        "regex",
        "regex",
        "regex",
        "regex",
        "regex",
        "regex",
        "regex",
        "callback",
        "callback",
        "lang",
        "lang",
        "callback",
        "callback",
        "lang",
        "lang",
        "lang",
        "Lang",
        "selector",
        "selector",
        "$",
        "selector",
        "$",
        "arr",
        "arrCount",
        "elem",
        "$",
        "arr",
        "arrCount",
        "elem",
        "Lang",
        "elem",
        "elem",
        "elem",
        "elem",
        "Lang",
        "elem",
        "attrIndex",
        "attrIndex",
        "attrIndex",
        "attr",
        "attrIndex",
        "elem",
        "attr",
        "attrObj",
        "elem",
        "attrObj",
        "attr",
        "elem",
        "attr",
        "elem",
        "attrObj",
        "Lang",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "nodes",
        "elem",
        "nodes",
        "Lang",
        "elem",
        "elem",
        "$",
        "nodes",
        "index",
        "node",
        "node",
        "nodeObj",
        "node",
        "node",
        "nodeObjArray",
        "nodeObj",
        "nodes",
        "nodeObjArray",
        "elem",
        "nodeObjArray",
        "Lang",
        "elem",
        "nodes",
        "lang",
        "lang",
        "index",
        "index",
        "nodes",
        "index",
        "textNode",
        "nodes",
        "index",
        "langNotDefault",
        "defaultText",
        "textNode",
        "$",
        "textNode",
        "defaultText",
        "translation",
        "defaultText",
        "lang",
        "translation",
        "textNode",
        "textNode",
        "$",
        "textNode",
        "translation",
        "e",
        "defaultText",
        "textNode",
        "textNode",
        "e",
        "Lang",
        "elem",
        "lang",
        "elem",
        "attr",
        "attrObj",
        "attrObj",
        "attr",
        "elem",
        "attr",
        "lang",
        "translation",
        "attrObj",
        "attr",
        "lang",
        "translation",
        "elem",
        "attr",
        "translation",
        "elem",
        "attr",
        "attrObj",
        "attr",
        "Lang",
        "elem",
        "lang",
        "lang",
        "elem",
        "elem",
        "langNotDefault",
        "translation",
        "elem",
        "lang",
        "translation",
        "elem",
        "translation",
        "elem",
        "elem",
        "elem",
        "langNotDefault",
        "translation",
        "elem",
        "lang",
        "translation",
        "elem",
        "translation",
        "elem",
        "elem",
        "nodes",
        "elem",
        "nodes",
        "elem",
        "nodes",
        "lang",
        "Lang",
        "lang",
        "selector",
        "callback",
        "lang",
        "lang",
        "lang",
        "lang",
        "lang",
        "lang",
        "lang",
        "err",
        "loadingLang",
        "fromUrl",
        "err",
        "lang",
        "selector",
        "callback",
        "callback",
        "callback",
        "fromUrl",
        "lang",
        "selector",
        "lang",
        "lang",
        "callback",
        "callback",
        "lang",
        "lang",
        "selector",
        "lang",
        "lang",
        "currLang",
        "lang",
        "fireAfterUpdate",
        "lang",
        "selector",
        "$",
        "selector",
        "$",
        "arr",
        "arrCount",
        "elem",
        "$",
        "arr",
        "arrCount",
        "elem",
        "lang",
        "elem",
        "lang",
        "fireAfterUpdate",
        "currLang",
        "lang",
        "Cookies",
        "Cookies",
        "lang",
        "callback",
        "callback",
        "lang",
        "selector",
        "callback",
        "callback",
        "lang",
        "lang",
        "selector",
        "lang",
        "Lang",
        "elem",
        "lang",
        "elem",
        "lang",
        "elem",
        "elem",
        "lang",
        "elem",
        "lang",
        "Lang",
        "text",
        "lang",
        "lang",
        "lang",
        "lang",
        "lang",
        "translation",
        "lang",
        "text",
        "translation",
        "translation",
        "text",
        "lang",
        "translation",
        "text",
        "lang",
        "translation",
        "text",
        "text",
        "text",
        "Lang",
        "text",
        "lang",
        "arr",
        "lang",
        "arr",
        "arrCount",
        "arr",
        "arrIndex",
        "arrIndex",
        "arrCount",
        "arrIndex",
        "item",
        "arr",
        "arrIndex",
        "regex",
        "item",
        "expressionResult",
        "regex",
        "text",
        "expressionResult",
        "expressionResult",
        "text",
        "expressionResult",
        "item",
        "Lang",
        "currentLang",
        "newLang",
        "$",
        "currentLang",
        "newLang",
        "currentLang",
        "newLang",
        "Lang",
        "currentLang",
        "newLang",
        "$",
        "currentLang",
        "newLang",
        "currentLang",
        "newLang",
        "Lang",
        "Lang",
        "context",
        "method",
        "args",
        "method",
        "context",
        "args",
        "$",
        "context",
        "rootElem",
        "rootElem",
        "rootElem",
        "currLang",
        "rootElem",
        "rootElem",
        "rootElem",
        "rootElem",
        "result",
        "Lang"
    ],
    "literals": [
        "'use strict'",
        "'function'",
        "'jquery'",
        "'Cookies'",
        "'object'",
        "'undefined'",
        "'langCookie'",
        "'/'",
        "'append'",
        "'appendTo'",
        "'prepend'",
        "'before'",
        "'after'",
        "'html'",
        "'en'",
        "'en'",
        "'undefined'",
        "'title'",
        "'alt'",
        "'placeholder'",
        "'href'",
        "\"json\"",
        "'Error loading language pack'",
        "'Cannot load language pack, no file path specified!'",
        "'[lang]'",
        "':not(html)[lang]'",
        "'lang'",
        "'lang-attr'",
        "'lang-attr'",
        "'input'",
        "'type'",
        "'button'",
        "'submit'",
        "'hidden'",
        "'reset'",
        "'lang-val'",
        "'img'",
        "'lang-src'",
        "'src'",
        "'lang-text'",
        "'langToken'",
        "'Translation for \"'",
        "'\" not found!'",
        "'lang-attr'",
        "'input'",
        "'type'",
        "'button'",
        "'submit'",
        "'hidden'",
        "'reset'",
        "'lang-val'",
        "'lang-val'",
        "'img'",
        "'lang-src'",
        "'src'",
        "'src'",
        "'lang-src'",
        "'lang-text'",
        "'Language pack could not load from: '",
        "'Language pack not defined for: '",
        "'Could not change language to '",
        "' because no language pack for this language exists!'",
        "'[lang]'",
        "':not(html)[lang]'",
        "'lang'",
        "\"undefined\"",
        "'No language pack defined for: '",
        "'Attempt to change language to \"'",
        "'\" but no language pack for that language is loaded!'",
        "'data-lang-content'",
        "'false'",
        "'lang'",
        "''",
        "'Translation for \"'",
        "'\" not found in language pack: '",
        "''",
        "'beforeUpdate'",
        "'afterUpdate'",
        "'lang'"
    ],
    "variables": [
        "_OldLang",
        "api",
        "Lang",
        "cookieLang",
        "defaultLang",
        "currentLang",
        "allowCookieOverride",
        "packRegex",
        "regex",
        "i",
        "arr",
        "arrCount",
        "elem",
        "attrIndex",
        "attr",
        "attrObj",
        "nodes",
        "nodes",
        "nodeObjArray",
        "nodeObj",
        "nodeArr",
        "that",
        "index",
        "textNode",
        "defaultText",
        "translation",
        "langNotDefault",
        "attr",
        "attrObj",
        "translation",
        "langNotDefault",
        "translation",
        "nodes",
        "fireAfterUpdate",
        "currLang",
        "arr",
        "arrCount",
        "elem",
        "translation",
        "arr",
        "arrCount",
        "arrIndex",
        "item",
        "regex",
        "expressionResult",
        "result",
        "currLang",
        "rootElem"
    ],
    "comments": [
        "The MIT License (MIT)\n\n Copyright (c) 2014 Irrelon Software Limited\n http://www.irrelon.com\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice, url and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n\n Source: https://github.com/irrelon/jquery-lang-js\n\n Changelog: See readme.md",
        "Enable firing events",
        "Allow storage of dynamic language pack data",
        "Set cookie settings",
        "Store existing mutation methods so we can auto-run",
        "translations when new data is added to the page",
        "Now override the existing mutation methods with our own",
        "Set default and current language to the default one",
        "to start with",
        "Check for cookie support when no current language is specified",
        "Check for an existing language cookie",
        "We have a cookie language, set the current language",
        "Setup data on the language items",
        "Check if the current language is not the same as our default",
        "Switch to the current language",
        "Process the regex list",
        "String, value",
        "String, modifiers, value",
        "Remove modifier",
        "console.log('Loaded language pack: ' + self._dynamic[lang]);",
        "Get the page HTML",
        "Only store data if the element is set to our default language",
        "Store translatable attributes",
        "Store translatable content",
        "Grab the existing attribute store or create a new object",
        "Add the attribute and value to the store",
        "Save the attribute data to the store",
        "Check if the element is an input element",
        "Get the text nodes immediately inside this element",
        "If element has only one text node and data-lang-token is defined",
        "set langContentKey property to use as a token",
        "If langToken is set, use it as a token",
        "Translate the langDefaultText",
        "Replace the text with the translated version",
        "Replace with original text",
        "Check the element still has the attribute",
        "Get the translated value",
        "Check we actually HAVE a translation",
        "Change the attribute to the translated value",
        "Set default language value",
        "Check if the element is an input element",
        "Get the translated value",
        "Check we actually HAVE a translation",
        "Set translated value",
        "Set default language value",
        "Get the translated value",
        "Check we actually HAVE a translation",
        "Set translated value",
        "Set default language value",
        "Set text node translated text",
        "Check if the language pack is currently loaded",
        "The language pack needs loading first",
        "console.log('Loading dynamic language pack: ' + this._dynamic[lang] + '...');",
        "Process the change language request",
        "Call the callback with the error",
        "Pack not loaded and no dynamic entry",
        "Get the page HTML",
        "Check for cookie support",
        "Set a cookie to remember this language setting with 1 year expiry",
        "Translate attributes",
        "Translate content",
        "Update the element's current language",
        "Check for a direct token translation",
        "No token translation was found, test for regex match",
        "Loop the regex array and test them against the text",
        "Test regex",
        "Process refresh on the page",
        "",
        "Mutation overrides",
        "",
        "Switch off events for the moment",
        "Check if the root element is currently set to another language from current",
        "if (rootElem.attr('lang') !== this.currentLang) {",
        "Calling change above sets the global currentLang but this is supposed to be",
        "an isolated change so reset the global value back to what it was before",
        "Record data on the default language from the root element",
        "Translate the root element",
        "}",
        "Record data on the default language from the root's children",
        "Process translation on any child elements of this element",
        "Switch events back on"
    ],
    "docstrings": [
        "* Initialise the library with the library options.\n     * @param {Object} options The options to init the library with.\n     * See the readme.md for the details of the options available.",
        "* Object that holds the language packs.\n     * @type {{}}",
        "* Array of translatable attributes to check for on elements.\n     * @type {string[]}",
        "* Defines a language pack that can be dynamically loaded and the\n     * path to use when doing so.\n     * @param {String} lang The language two-letter iso-code.\n     * @param {String} path The path to the language pack js file.",
        "* Loads a new language pack for the given language.\n     * @param {string} lang The language to load the pack for.\n     * @param {Function=} callback Optional callback when the file has loaded.",
        "* Scans the DOM for elements with [lang] selector and saves translate data\n     * for them for later use.\n     * @private",
        "* Stores the translatable attribute values in their default language.\n     * @param {object} elem The jQuery selected element.\n     * @private",
        "* Reads the existing content from the element and stores it for\n     * later use in translation.\n     * @param elem\n     * @private",
        "* Retrieves the text nodes from an element and returns them in array wrap into\n     * object with two properties:\n     *    - node - which corresponds to text node,\n     *    - langDefaultText - which remember current data of text node\n     * @param elem\n     * @returns {Array|*}\n     * @private",
        "* Sets text nodes of an element translated based on the passed language.\n     * @param elem\n     * @param {Array|*} nodes array of objecs with text node and defaultText returned from _getTextNodes\n     * @param lang\n     * @private",
        "* Translates and sets the attributes of an element to the passed language.\n     * @param elem\n     * @param lang\n     * @private",
        "* Translates and sets the contents of an element to the passed language.\n     * @param elem\n     * @param lang\n     * @private",
        "* Call this to change the current language on the page.\n     * @param {String} lang The new two-letter language code to change to.\n     * @param {String=} selector Optional selector to find language-based\n     * elements for updating.\n     * @param {Function=} callback Optional callback function that will be\n     * called once the language change has been successfully processed. This\n     * is especially useful if you are using dynamic language pack loading\n     * since you will get a callback once it has been loaded and changed.\n     * Your callback will be passed three arguments, a boolean to denote if\n     * there was an error (true if error), the second will be the language\n     * you passed in the change call (the lang argument) and the third will\n     * be the selector used in the change update.",
        "* Translates text from the default language into the passed language.\n     * @param {String} text The text to translate.\n     * @param {String} lang The two-letter language code to translate to.\n     * @returns {*}",
        "* Checks the regex items for a match against the passed text and\n     * if a match is made, translates to the given replacement.\n     * @param {String} text The text to test regex matches against.\n     * @param {String} lang The two-letter language code to translate to.\n     * @returns {string}\n     * @private"
    ],
    "functions": [],
    "classes": []
}