{
    "identifiers": [
        "flower1",
        "flower2",
        "flower1",
        "flower2",
        "BetterThanAverage",
        "ClassPoints",
        "YourPoints",
        "i",
        "ClassPoints",
        "Length",
        "i",
        "Sum",
        "ClassPoints",
        "i",
        "Everage",
        "Sum",
        "ClassPoints",
        "Length",
        "YourPoints",
        "Everage",
        "Opposite",
        "number",
        "number",
        "boolToWord",
        "word",
        "word",
        "yes",
        "no",
        "MakeNegative",
        "number",
        "number",
        "number",
        "number",
        "number",
        "FindSmallestInt",
        "args",
        "args",
        "i",
        "args",
        "Length",
        "i",
        "args",
        "i",
        "min",
        "min",
        "args",
        "i",
        "min",
        "summation",
        "num",
        "i",
        "num",
        "i",
        "sum",
        "sum",
        "i",
        "sum",
        "PositiveSum",
        "arr",
        "i",
        "arr",
        "Length",
        "i",
        "arr",
        "i",
        "sum",
        "sum",
        "arr",
        "i",
        "sum",
        "AreYouPlayingBanjo",
        "name",
        "name",
        "StartsWith",
        "name",
        "StartsWith",
        "name",
        "name",
        "Grow",
        "x",
        "i",
        "x",
        "Length",
        "i",
        "sum",
        "x",
        "i",
        "sum",
        "CountSheep",
        "n",
        "n",
        "i",
        "n",
        "i",
        "a",
        "i",
        "a",
        "NotImplementedException",
        "CountBy",
        "x",
        "n",
        "n",
        "i",
        "n",
        "i",
        "z",
        "i",
        "x",
        "i",
        "z",
        "Past",
        "h",
        "m",
        "s",
        "h",
        "m",
        "s",
        "num",
        "array",
        "i",
        "array",
        "Length",
        "i",
        "result",
        "array",
        "i",
        "result",
        "year",
        "year",
        "year",
        "year",
        "num",
        "num",
        "ToString",
        "s",
        "name",
        "name",
        "i",
        "name",
        "Length",
        "i",
        "name",
        "i",
        "s",
        "s",
        "name",
        "i",
        "s",
        "s",
        "ToUpper",
        "s"
    ],
    "literals": [
        "\"Yes\"",
        "\"No\"",
        "\"R\"",
        "\"r\"",
        "\" plays banjo\"",
        "\" does not play banjo\"",
        "\"\"",
        "\" sheep...\"",
        "\".\""
    ],
    "variables": [
        "Sum",
        "Everage",
        "i",
        "yes",
        "no",
        "min",
        "i",
        "sum",
        "i",
        "sum",
        "i",
        "sum",
        "i",
        "a",
        "i",
        "z",
        "i",
        "num",
        "result",
        "i",
        "s",
        "s",
        "i"
    ],
    "comments": [
        "Opposites Attract",
        "How good are you really?",
        "Opposite number",
        "Complete the method that takes a boolean value and return a \"Yes\" string for true, or a \"No\" string for false.",
        "TODO",
        "In this simple assignment you are given a number and have to make it negative. But maybe the number is already negative?",
        "Code?",
        "Given an array of integers your solution should find the smallest integer.",
        "Write a program that finds the summation of every number from 1 to num. The number will always be a positive integer greater than 0.",
        "You get an array of numbers, return the sum of all of the positives ones.",
        "Note: if there is nothing to sum, the sum is default to 0.",
        "Create a function which answers the question \"Are you playing banjo?\".",
        "If your name starts with the letter \"R\" or lower case \"r\", you are playing banjo!",
        "The function takes a name as its only argument, and returns one of the following strings:",
        "name + \" plays banjo\"",
        "name + \" does not play banjo\"",
        "Names given are always valid strings.",
        "Implement me",
        "Given a non-empty array of integers, return the result of multiplying the values together in order. Example:",
        "[1, 2, 3, 4] => 1 * 2 * 3 * 4 = 24",
        "If you can't sleep, just count sheep!!",
        "Task:",
        "Given a non-negative integer, 3 for example, return a string with a murmur: \"1 sheep...2 sheep...3 sheep...\".Input will always be valid, i.e. no negative integers.",
        "Create a function with two arguments that will return an array of the first (n) multiples of(x).",
        "Assume both the given number and the number of times to count will be positive numbers greater than 0.",
        "Return the results as an array (or list in Python, Haskell or Elixir).",
        "Examples:",
        "countBy(1, 10)  should return  { 1,2,3,4,5,6,7,8,9,10}",
        "countBy(2, 5)  should return { 2,4,6,8,10}",
        "Clock shows h hours, m minutes and s seconds after midnight.",
        "Your task is to write a function which returns the time since midnight in milliseconds.",
        "Example:",
        "h = 0",
        "m = 1",
        "s = 1",
        "result = 61000",
        "#Happy Coding! ^_^",
        "Sum Arrays",
        "Century From Year",
        "Convert a Number to a String!",
        "Abbreviate a Two Word Name"
    ],
    "docstrings": [],
    "functions": [
        "lovefunc",
        "SumArray",
        "Ð¡enturyFromYear",
        "NumberToString",
        "AbbrevName"
    ],
    "classes": [
        "LoveDetector",
        "Kata",
        "Kata",
        "Kata",
        "Kata"
    ]
}