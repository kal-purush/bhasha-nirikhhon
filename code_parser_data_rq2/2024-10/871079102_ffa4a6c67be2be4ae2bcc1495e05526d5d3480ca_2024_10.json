{
    "identifiers": [
        "ru",
        "te3ka",
        "telrostestwork",
        "service",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "mockito",
        "InjectMocks",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "MockitoAnnotations",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "ResponseEntity",
        "org",
        "springframework",
        "mock",
        "web",
        "MockMultipartFile",
        "org",
        "springframework",
        "web",
        "multipart",
        "MultipartFile",
        "ru",
        "te3ka",
        "telrostestwork",
        "controller",
        "UserController",
        "ru",
        "te3ka",
        "telrostestwork",
        "entity",
        "User",
        "ru",
        "te3ka",
        "telrostestwork",
        "repository",
        "UserRepository",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "time",
        "LocalDate",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertEquals",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "assertNotNull",
        "org",
        "mockito",
        "ArgumentMatchers",
        "org",
        "mockito",
        "Mockito",
        "org",
        "mockito",
        "verification",
        "VerificationModeFactory",
        "times",
        "UPLOAD_PHOTO_DIR",
        "Mock",
        "userService",
        "Mock",
        "userRepository",
        "InjectMocks",
        "userController",
        "user",
        "BeforeEach",
        "MockitoAnnotations",
        "openMocks",
        "user",
        "LocalDate",
        "of",
        "Test",
        "when",
        "userService",
        "createUser",
        "thenReturn",
        "user",
        "response",
        "userController",
        "createUser",
        "user",
        "assertEquals",
        "HttpStatus",
        "OK",
        "response",
        "getStatusCode",
        "assertNotNull",
        "response",
        "getBody",
        "assertEquals",
        "response",
        "getBody",
        "getLastName",
        "verify",
        "userService",
        "times",
        "createUser",
        "user",
        "Test",
        "when",
        "userService",
        "getAllUsers",
        "thenReturn",
        "Arrays",
        "asList",
        "user",
        "response",
        "userController",
        "getAllUsers",
        "assertEquals",
        "HttpStatus",
        "OK",
        "response",
        "getStatusCode",
        "assertNotNull",
        "response",
        "getBody",
        "assertEquals",
        "response",
        "getBody",
        "size",
        "verify",
        "userService",
        "times",
        "getAllUsers",
        "Test",
        "when",
        "userService",
        "getUserById",
        "thenReturn",
        "Optional",
        "of",
        "user",
        "response",
        "userController",
        "getUserById",
        "assertEquals",
        "HttpStatus",
        "OK",
        "response",
        "getStatusCode",
        "assertNotNull",
        "response",
        "getBody",
        "assertEquals",
        "response",
        "getBody",
        "getFirstName",
        "verify",
        "userService",
        "times",
        "getUserById",
        "Test",
        "when",
        "userService",
        "updateUser",
        "user",
        "thenReturn",
        "user",
        "response",
        "userController",
        "updateUser",
        "user",
        "assertEquals",
        "HttpStatus",
        "OK",
        "response",
        "getStatusCode",
        "assertNotNull",
        "response",
        "getBody",
        "assertEquals",
        "response",
        "getBody",
        "getLastName",
        "verify",
        "userService",
        "times",
        "updateUser",
        "user",
        "Test",
        "doNothing",
        "when",
        "userService",
        "deleteUser",
        "response",
        "userController",
        "deleteUser",
        "assertEquals",
        "HttpStatus",
        "NO_CONTENT",
        "response",
        "getStatusCode",
        "verify",
        "userService",
        "times",
        "deleteUser",
        "Test",
        "userId",
        "user",
        "user",
        "setId",
        "userId",
        "user",
        "setPathToPhoto",
        "mockFile",
        "getBytes",
        "when",
        "userRepository",
        "findById",
        "userId",
        "thenReturn",
        "Optional",
        "of",
        "user",
        "when",
        "userRepository",
        "save",
        "thenReturn",
        "user",
        "userService",
        "updatePhoto",
        "userId",
        "mockFile",
        "verify",
        "userRepository",
        "times",
        "save",
        "user",
        "savedFilePath",
        "Paths",
        "get",
        "UPLOAD_PHOTO_DIR",
        "currentTimeMillis",
        "mockFile",
        "getOriginalFilename",
        "Files",
        "createDirectories",
        "savedFilePath",
        "getParent",
        "Files",
        "write",
        "savedFilePath",
        "mockFile",
        "getBytes"
    ],
    "literals": [
        "\"users_photos/\"",
        "\"Testov\"",
        "\"Test\"",
        "\"Testovich\"",
        "\"test@example.tst\"",
        "\"7987654321\"",
        "\"\"",
        "\"Testov\"",
        "\"Test\"",
        "\"Testov\"",
        "\"file\"",
        "\"test.jpg\"",
        "\"image/jpeg\"",
        "\"test image content\"",
        "\"_\""
    ],
    "variables": [
        "userService",
        "userRepository",
        "userController",
        "user"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "setUp",
        "testCreateUser",
        "testGetAllUsers",
        "testGetUserById",
        "testUpdateUser",
        "testDeleteUser",
        "testUpdatePhoto_Success"
    ],
    "classes": [
        "UserControllerTest"
    ]
}