{
    "identifiers": [
        "getConfig",
        "createCompiledCatalog",
        "getCatalogForFile",
        "getCatalogs",
        "BabelTransformer",
        "BabelTransformerArgs",
        "path",
        "memoizeOne",
        "createLinguiMetroTransformer",
        "upstreamTransformer",
        "linguiMetroTransformer",
        "upstreamTransformer",
        "transformFile",
        "upstreamTransformer",
        "jsSource",
        "getCatalogList",
        "getConfig",
        "getCatalogs",
        "config",
        "memoizeOne",
        "getCatalogList",
        "memoizedGetCatalogList",
        "path",
        "config",
        "catalogPathRelativeToProjectRoot",
        "getCatalogForFile",
        "catalogPathRelativeToLinguiConfig",
        "allCatalogs",
        "catalogFile",
        "path",
        "catalogPathRelativeToProjectRoot",
        "catalogPathRelativeToProjectRoot",
        "absolutePath",
        "config",
        "c",
        "c",
        "process",
        "catalog",
        "locale",
        "config",
        "config",
        "process",
        "createCompiledCatalog",
        "locale",
        "messages",
        "config"
    ],
    "literals": [
        "\"@lingui/conf\"",
        "\"@lingui/cli/api\"",
        "\"./types\"",
        "\"path\"",
        "\"memoize-one\"",
        "\"transform\"",
        "\".po\"",
        "\"filename\"",
        "Requested resource ${catalogPathRelativeToProjectRoot} (absolute path: ${absolutePath}) is not matched to any of your catalogs paths specified in \"lingui.config\".\n\nYour catalogs:\n${config.catalogs.map((c) => c.path).join(\"\\n\")}\n\nWorking dir is: \n${process.cwd()}\n\nPlease check that \\`catalogs.path\\` is filled properly and restart the Metro server.\\n",
        "\"\\n\"",
        "\"production\"",
        "\"es\""
    ],
    "variables": [
        "createLinguiMetroTransformer",
        "jsSource",
        "getCatalogList",
        "config",
        "allCatalogs",
        "memoizedGetCatalogList",
        "catalogPathRelativeToProjectRoot",
        "catalogPathRelativeToLinguiConfig",
        "catalogFile",
        "absolutePath",
        "catalogFile",
        "messages",
        "strict"
    ],
    "comments": [
        "We are aggressive at caching all catalogs because",
        "in development, modifying po files doesn't matter anyway because core calls `compileMessage` in development.",
        "In production, po files don't change, and we don't need to call getCatalogs() on every request."
    ],
    "docstrings": [],
    "functions": [
        "transformFile"
    ],
    "classes": []
}