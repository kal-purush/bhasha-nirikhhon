{
    "identifiers": [
        "aston",
        "MyAPI",
        "com",
        "fasterxml",
        "jackson",
        "databind",
        "ObjectMapper",
        "org",
        "apache",
        "http",
        "HttpEntity",
        "org",
        "apache",
        "http",
        "client",
        "methods",
        "CloseableHttpResponse",
        "org",
        "apache",
        "http",
        "client",
        "methods",
        "HttpGet",
        "org",
        "apache",
        "http",
        "client",
        "methods",
        "HttpUriRequest",
        "org",
        "apache",
        "http",
        "impl",
        "client",
        "CloseableHttpClient",
        "org",
        "apache",
        "http",
        "impl",
        "client",
        "HttpClients",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Scanner",
        "org",
        "apache",
        "http",
        "util",
        "EntityUtils",
        "org",
        "hibernate",
        "query",
        "sqm",
        "produce",
        "StandardFunctionReturnTypeResolvers",
        "org",
        "json",
        "JSONArray",
        "org",
        "json",
        "JSONException",
        "org",
        "json",
        "JSONObject",
        "CONNECTION_TIMEOUT",
        "args",
        "scanner",
        "city",
        "scanner",
        "nextLine",
        "httpclient",
        "HttpClients",
        "createDefault",
        "httpGet",
        "city",
        "response1",
        "httpclient",
        "execute",
        "httpGet",
        "entity1",
        "response1",
        "getEntity",
        "weatherResult",
        "ParseResult",
        "EntityUtils",
        "toString",
        "entity1",
        "weatherResult",
        "httpclient",
        "close",
        "json",
        "parsedResult",
        "jsonObject",
        "json",
        "parsedResult",
        "jsonObject",
        "length",
        "JSONObject_coord",
        "jsonObject",
        "getJSONObject",
        "result_lon",
        "JSONObject_coord",
        "getDouble",
        "result_lat",
        "JSONObject_coord",
        "getDouble",
        "JSONObject_sys",
        "jsonObject",
        "getJSONObject",
        "result_country",
        "JSONObject_sys",
        "getString",
        "result_sunrise",
        "JSONObject_sys",
        "getInt",
        "result_sunset",
        "JSONObject_sys",
        "getInt",
        "result_weather",
        "JSONArray_weather",
        "jsonObject",
        "getJSONArray",
        "JSONArray_weather",
        "length",
        "JSONObject_weather",
        "JSONArray_weather",
        "getJSONObject",
        "result_id",
        "JSONObject_weather",
        "getInt",
        "result_main",
        "JSONObject_weather",
        "getString",
        "result_description",
        "JSONObject_weather",
        "getString",
        "result_icon",
        "JSONObject_weather",
        "getString",
        "result_weather",
        "result_id",
        "result_main",
        "result_description",
        "result_icon",
        "result_weather",
        "result_base",
        "jsonObject",
        "getString",
        "JSONObject_main",
        "jsonObject",
        "getJSONObject",
        "result_temp",
        "JSONObject_main",
        "getDouble",
        "result_pressure",
        "JSONObject_main",
        "getDouble",
        "result_humidity",
        "JSONObject_main",
        "getDouble",
        "result_temp_min",
        "JSONObject_main",
        "getDouble",
        "result_temp_max",
        "JSONObject_main",
        "getDouble",
        "JSONObject_wind",
        "jsonObject",
        "getJSONObject",
        "result_speed",
        "JSONObject_wind",
        "getDouble",
        "result_deg",
        "JSONObject_wind",
        "getDouble",
        "result_wind",
        "result_speed",
        "result_deg",
        "JSONObject_clouds",
        "jsonObject",
        "getJSONObject",
        "result_all",
        "JSONObject_clouds",
        "getInt",
        "result_dt",
        "jsonObject",
        "getInt",
        "result_id",
        "jsonObject",
        "getInt",
        "result_name",
        "jsonObject",
        "getString",
        "result_cod",
        "jsonObject",
        "getInt",
        "result_name",
        "result_lon",
        "result_lat",
        "result_country",
        "result_sunrise",
        "result_sunset",
        "result_weather",
        "result_base",
        "result_temp",
        "result_humidity",
        "result_pressure",
        "result_temp_min",
        "result_temp_min",
        "result_wind",
        "result_all",
        "result_dt",
        "result_id",
        "result_cod"
    ],
    "literals": [
        "\"Погода в городе. Введите город: \"",
        "\"https://api.openweathermap.org/data/2.5/weather?q=\"",
        "\"&appid=\"",
        "\"b037c4b33d8edafab1536844f9d3bf0c\"",
        "\"\"",
        "\"Number of object = \"",
        "\"\\n\\n\"",
        "\"coord\"",
        "\"lon\"",
        "\"lat\"",
        "\"sys\"",
        "\"country\"",
        "\"sunrise\"",
        "\"sunset\"",
        "\"weather\"",
        "\"id\"",
        "\"main\"",
        "\"description\"",
        "\"icon\"",
        "\"weather\\tid: \"",
        "\"\\tmain: \"",
        "\"\\tdescription: \"",
        "\"\\ticon: \"",
        "\"weather empty!\"",
        "\"base\"",
        "\"main\"",
        "\"temp\"",
        "\"pressure\"",
        "\"humidity\"",
        "\"temp_min\"",
        "\"temp_max\"",
        "\"wind\"",
        "\"speed\"",
        "\"deg\"",
        "\"wind\\tspeed: \"",
        "\"\\tdeg: \"",
        "\"clouds\"",
        "\"all\"",
        "\"dt\"",
        "\"id\"",
        "\"name\"",
        "\"cod\"",
        "\"Город: \"",
        "\"\\n\"",
        "\"Координаты:\\tlon: \"",
        "\"\\tlat: \"",
        "\"\\n\"",
        "\"sys:\\tстрана: \"",
        "\"\\tвосход: \"",
        "\"\\tзакат: \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"base: \"",
        "\"\\n\"",
        "\"Основное:\\tтемпература: \"",
        "\"\\tвлажность: \"",
        "\"\\tдавление: \"",
        "\"\\ttemp_min: \"",
        "\"\\ttemp_max: \"",
        "\"\\n\"",
        "\"\\n\"",
        "\"clouds\\tall: \"",
        "\"\\n\"",
        "\"dt: \"",
        "\"\\n\"",
        "\"id: \"",
        "\"\\n\"",
        "\"cod: \"",
        "\"\\n\"",
        "\"\\n\""
    ],
    "variables": [
        "result_weather"
    ],
    "comments": [
        "ObjectMapper mapper = new ObjectMapper();",
        "System.out.println(EntityUtils.toString(entity1));",
        "WeatherAnswer answer = mapper.readValue(response1.getEntity().getContent(), WeatherAnswer.class);",
        "System.out.println(answer);",
        "\"coord\"",
        "\"sys\"",
        "\"weather\"",
        "\"base\"",
        "\"main\"",
        "\"wind\"",
        "Double result_gust = JSONObject_wind.getDouble(\"gust\");",
        "\"clouds\"",
        "\"dt\"",
        "\"id\"",
        "\"name\"",
        "\"cod\""
    ],
    "docstrings": [
        "eturn\n                \"coord\\tlon: \" + result_lon + \"\\tlat: \" + result_lat + \"\\n\" +\n                        \"sys\\tcountry: \" + result_country + \"\\tsunrise: \" + result_sunrise + \"\\tsunset: \" + result_sunset + \"\\n\" +\n                        result_weather + \"\\n\"+\n                        \"base: \" + result_base + \"\\n\" +\n                        \"main\\ttemp: \" + result_temp + \"\\thumidity: \" + result_humidity + \"\\tpressure: \" + result_pressure + \"\\ttemp_min: \" + result_temp_min + \"\\ttemp_max: \" + result_temp_min + \"\\n\" +\n                        result_wind + \"\\n\" +\n                        \"clouds\\tall: \" + result_all + \"\\n\" +\n                        \"dt: \" + result_dt + \"\\n\" +\n                        \"id: \" + result_id + \"\\n\" +\n                        \"name: \" + result_name + \"\\n\" +\n                        \"cod: \" + result_cod + \"\\n\" +\n                        \"\\n\";"
    ],
    "functions": [
        "main",
        "ParseResult"
    ],
    "classes": [
        "Connector"
    ]
}