{
    "identifiers": [
        "annotations",
        "pathlib",
        "Path",
        "re",
        "typing",
        "Any",
        "sphinx",
        "application",
        "Sphinx",
        "sphinx",
        "ext",
        "autodoc",
        "sphinx",
        "ext",
        "autodoc",
        "Documenter",
        "sphinx",
        "util",
        "logging",
        "logging",
        "getLogger",
        "re",
        "compile",
        "re",
        "VERBOSE",
        "cell",
        "SimHelper",
        "cell",
        "desc",
        "line",
        "cell",
        "desc",
        "line",
        "startswith",
        "new_desc",
        "pop",
        "new_desc",
        "extend",
        "new_desc",
        "append",
        "indent",
        "line",
        "new_desc",
        "file",
        "Path",
        "SimHelper",
        "SimHelper",
        "open",
        "file",
        "f",
        "f",
        "readlines",
        "lineno",
        "line",
        "lines",
        "line",
        "rstrip",
        "line",
        "startswith",
        "simHelper",
        "desc",
        "append",
        "line",
        "len",
        "line",
        "line",
        "startswith",
        "line",
        "split",
        "maxsplit",
        "setattr",
        "simHelper",
        "key",
        "val",
        "line",
        "startswith",
        "line",
        "replace",
        "replace",
        "simHelper",
        "name",
        "simHelper",
        "ports",
        "clean_line",
        "split",
        "maxsplit",
        "file",
        "name",
        "lineno",
        "line",
        "startswith",
        "line",
        "simHelper",
        "code",
        "append",
        "line",
        "replace",
        "AttributeError",
        "line",
        "startswith",
        "simHelper",
        "ver",
        "file",
        "name",
        "simcells_reparse",
        "simHelper",
        "simHelper",
        "desc",
        "simHelper",
        "desc",
        "append",
        "simHelper",
        "ver",
        "file",
        "name",
        "simHelper",
        "desc",
        "startswith",
        "simHelper",
        "desc",
        "pop",
        "simHelper",
        "name",
        "simHelper",
        "SimHelper",
        "simHelpers",
        "Documenter",
        "Path",
        "SimHelper",
        "SimHelper",
        "autodoc",
        "bool_option",
        "autodoc",
        "bool_option",
        "classmethod",
        "cls",
        "member",
        "Any",
        "membername",
        "isattr",
        "parent",
        "Any",
        "member",
        "split",
        "sourcename",
        "endswith",
        "membername",
        "cell_ext_sig_re",
        "match",
        "name",
        "matched",
        "groups",
        "AttributeError",
        "logger",
        "warning",
        "objtype",
        "name",
        "path",
        "modname",
        "path",
        "attribute",
        "modname",
        "thing",
        "raiseerror",
        "Path",
        "join",
        "objpath",
        "objpath",
        "exists",
        "Path",
        "objpath",
        "parsed_libs",
        "objpath",
        "KeyError",
        "load_cell_lib",
        "objpath",
        "parsed_libs",
        "parsed_lib",
        "parsed_lib",
        "modname",
        "KeyError",
        "objpath",
        "modname",
        "objpath",
        "name",
        "kwargs",
        "Any",
        "name",
        "ports",
        "sig",
        "getattr",
        "objtype",
        "getattr",
        "format_name",
        "get_sourcename",
        "add_line",
        "domain",
        "directive",
        "name",
        "sourcename",
        "attr",
        "opt_attrs",
        "getattr",
        "cell",
        "attr",
        "val",
        "add_line",
        "attr",
        "val",
        "sourcename",
        "options",
        "noindex",
        "add_line",
        "sourcename",
        "more_content",
        "Any",
        "get_sourcename",
        "source",
        "split",
        "i",
        "line",
        "desc",
        "startline",
        "add_line",
        "line",
        "sourcename",
        "i",
        "more_content",
        "line",
        "src",
        "more_content",
        "data",
        "more_content",
        "items",
        "add_line",
        "line",
        "src",
        "src",
        "members",
        "Any",
        "want_all",
        "Any",
        "x",
        "x",
        "x",
        "members",
        "want_all",
        "Any",
        "options",
        "source",
        "ret",
        "append",
        "real_modname",
        "ret",
        "all_members",
        "all_members",
        "options",
        "inherited_members",
        "get_object_members",
        "want_all",
        "Documenter",
        "mname",
        "member",
        "isattr",
        "filter_members",
        "members",
        "want_all",
        "cls",
        "cls",
        "documenters",
        "values",
        "cls",
        "can_document_member",
        "member",
        "mname",
        "isattr",
        "classes",
        "classes",
        "sort",
        "key",
        "cls",
        "cls",
        "priority",
        "real_modname",
        "mname",
        "classes",
        "directive",
        "full_mname",
        "indent",
        "memberdocumenters",
        "append",
        "documenter",
        "isattr",
        "options",
        "member_order",
        "config",
        "autodoc_member_order",
        "sort_members",
        "memberdocumenters",
        "member_order",
        "documenter",
        "isattr",
        "memberdocumenters",
        "documenter",
        "generate",
        "all_members",
        "real_modname",
        "real_modname",
        "check_module",
        "members_check_module",
        "isattr",
        "more_content",
        "Any",
        "real_modname",
        "check_module",
        "all_members",
        "parse_name",
        "logger",
        "warning",
        "name",
        "import_object",
        "get_sourcename",
        "add_line",
        "sourcename",
        "format_signature",
        "exc",
        "logger",
        "warning",
        "fullname",
        "exc",
        "add_directive_header",
        "sig",
        "add_line",
        "sourcename",
        "indent",
        "content_indent",
        "add_content",
        "more_content",
        "document_members",
        "all_members",
        "YosysCellDocumenter",
        "classmethod",
        "cls",
        "member",
        "Any",
        "membername",
        "isattr",
        "parent",
        "Any",
        "member",
        "split",
        "sourcename",
        "endswith",
        "membername",
        "isinstance",
        "parent",
        "YosysCellDocumenter",
        "sig",
        "getattr",
        "getattr",
        "format_name",
        "get_sourcename",
        "add_line",
        "domain",
        "directive",
        "name",
        "sourcename",
        "options",
        "linenos",
        "add_line",
        "cell",
        "source",
        "split",
        "sourcename",
        "add_line",
        "cell",
        "source",
        "sourcename",
        "add_line",
        "sourcename",
        "options",
        "linenos",
        "source",
        "split",
        "add_line",
        "startline",
        "sourcename",
        "options",
        "noindex",
        "add_line",
        "sourcename",
        "more_content",
        "Any",
        "get_sourcename",
        "source",
        "split",
        "i",
        "line",
        "code",
        "startline",
        "add_line",
        "line",
        "sourcename",
        "i",
        "more_content",
        "line",
        "src",
        "more_content",
        "data",
        "more_content",
        "items",
        "add_line",
        "line",
        "src",
        "src",
        "want_all",
        "Any",
        "app",
        "Sphinx",
        "Any",
        "app",
        "setup_extension",
        "app",
        "add_autodocumenter",
        "YosysCellDocumenter",
        "app",
        "add_autodocumenter",
        "YosysCellSourceDocumenter"
    ],
    "literals": [
        "r'''^ (?:([\\w._/]+):)?       # explicit file name\n          ([\\w$._]+?)?           # module and/or class name(s)\n          (?:\\.([\\w_]+))?        # optional: thing name\n          (::[\\w_]+)?            #           attribute\n          \\s* $                  # and nothing more\n          '''",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"1\"",
        "\"\"",
        "\"Truth table:\"",
        "\"   \"",
        "\"::\"",
        "\"\"",
        "\"2a\"",
        "\"r\"",
        "\"//-\"",
        "\"\"",
        "\"//* \"",
        "\"module \"",
        "\"\\\\\"",
        "\"\"",
        "\";\"",
        "\"\"",
        "f'{file.name}:{lineno}'",
        "\"endmodule\"",
        "\"    \"",
        "\"\\t\"",
        "\"    \"",
        "\"endmodule\"",
        "\"1\"",
        "\"simcells.v\"",
        "\"No help message for this cell type found.\\n\"",
        "\"1\"",
        "\"simlib.v\"",
        "'    '",
        "'cell'",
        "'source'",
        "'linenos'",
        "\":\"",
        "\".v\"",
        "\"__source\"",
        "'invalid signature for auto%s (%r)'",
        "'cellref'",
        "''",
        "'/'",
        "'source'",
        "'generated'",
        "f'{objpath}:{self.modname}'",
        "f\"{self.object.name} {self.object.ports}\"",
        "'domain'",
        "'directivetype'",
        "'def'",
        "f'.. {domain}:{directive}:: {name}'",
        "\"title\"",
        "f'   :{attr}: {val}'",
        "'   :noindex:'",
        "\":\"",
        "'__source'",
        "'::'",
        "f\"don't know which cell lib to import for autodocumenting {self.name}\"",
        "'cellref'",
        "''",
        "'error while formatting signature for %s: %s'",
        "'cellref'",
        "''",
        "'cellsource'",
        "\":\"",
        "\".v\"",
        "\"__source\"",
        "'domain'",
        "'cell'",
        "'directivetype'",
        "'source'",
        "f'.. {domain}:{directive}:: {name}'",
        "f'   :source: {cell.source.split(\":\")[0]}'",
        "\":\"",
        "f'   :source: {cell.source}'",
        "f'   :language: verilog'",
        "\":\"",
        "f'   :lineno-start: {startline}'",
        "'   :noindex:'",
        "\":\"",
        "'sphinx.ext.autodoc'",
        "'version'",
        "'1'",
        "'parallel_read_safe'"
    ],
    "variables": [
        "logger",
        "cell_ext_sig_re",
        "name",
        "title",
        "ports",
        "source",
        "desc",
        "code",
        "group",
        "ver",
        "desc",
        "cell",
        "desc",
        "new_desc",
        "indent",
        "indent",
        "cell",
        "desc",
        "cell",
        "ver",
        "simHelpers",
        "simHelper",
        "lines",
        "line",
        "_",
        "key",
        "val",
        "clean_line",
        "simHelper",
        "code",
        "simHelper",
        "source",
        "line",
        "simHelpers",
        "simHelper",
        "objtype",
        "parsed_libs",
        "option_spec",
        "sourcename",
        "matched",
        "path",
        "modname",
        "thing",
        "attribute",
        "modname",
        "objpath",
        "attribute",
        "fullname",
        "objpath",
        "objpath",
        "parsed_lib",
        "parsed_lib",
        "objpath",
        "real_modname",
        "domain",
        "directive",
        "name",
        "sourcename",
        "cell",
        "opt_attrs",
        "val",
        "sourcename",
        "startline",
        "ret",
        "want_all",
        "members_check_module",
        "members",
        "memberdocumenters",
        "classes",
        "full_mname",
        "documenter",
        "member_order",
        "memberdocumenters",
        "sourcename",
        "sig",
        "objtype",
        "priority",
        "sourcename",
        "domain",
        "directive",
        "name",
        "sourcename",
        "cell",
        "startline",
        "sourcename",
        "startline"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "cell signature",
        "cut manual signature",
        "code-block truth table",
        "set version",
        "special comments",
        "code parsing",
        "no module definition, ignore line",
        "default simcells parsing",
        "no help",
        "find cell lib file",
        "load cell lib",
        "get cell",
        "cell definition",
        "options",
        "set sourcename and add content from attribute documentation",
        "add additional content (e.g. from document), if present",
        "find out which members are documentable",
        "document non-skipped members",
        "don't know how to document this member",
        "prefer the documenter with the highest priority",
        "give explicitly separated module name, so that members",
        "of inner classes can be documented",
        "need a cell lib to import from",
        "check __module__ of object (for members not given explicitly)",
        "if check_module:",
        "if not self.check_module():",
        "return",
        "format the object's signature, if any",
        "generate the directive header and options, if applicable",
        "e.g. the module directive doesn't have content",
        "add all content (from docstrings, attribute docs etc.)",
        "document members, if possible",
        "cell definition",
        "set sourcename and add content from attribute documentation",
        "add additional content (e.g. from document), if present"
    ],
    "docstrings": [],
    "functions": [
        "simcells_reparse",
        "load_cell_lib",
        "can_document_member",
        "parse_name",
        "import_object",
        "get_sourcename",
        "format_name",
        "format_signature",
        "add_directive_header",
        "add_content",
        "filter_members",
        "get_object_members",
        "document_members",
        "generate",
        "can_document_member",
        "add_directive_header",
        "add_content",
        "get_object_members",
        "setup"
    ],
    "classes": [
        "SimHelper",
        "YosysCellDocumenter",
        "YosysCellSourceDocumenter"
    ]
}