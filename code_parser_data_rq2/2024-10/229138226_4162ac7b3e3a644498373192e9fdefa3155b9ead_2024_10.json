{
    "identifiers": [
        "numpy",
        "np",
        "pyincore",
        "BaseAnalysis",
        "pyincore",
        "analyses",
        "equitymetric",
        "equitymetricutil",
        "EquityMetricUtil",
        "BaseAnalysis",
        "incore_client",
        "EquityMetric",
        "incore_client",
        "get_parameter",
        "get_input_dataset",
        "get_dataframe_from_csv",
        "get_input_dataset",
        "get_dataframe_from_csv",
        "division_decision_column",
        "hua_df",
        "columns",
        "EquityMetricUtil",
        "prepare_svi_as_division_decision",
        "hua_df",
        "hua_df",
        "merge",
        "scarce_resource_df",
        "how",
        "left_on",
        "right_on",
        "equity_metric",
        "merged_df",
        "division_decision_column",
        "set_result_csv_data",
        "equity_metric",
        "name",
        "get_parameter",
        "merged_df",
        "division_decision_column",
        "merged_df",
        "merged_df",
        "division_decision_column",
        "shape",
        "merged_df",
        "merged_df",
        "division_decision_column",
        "shape",
        "total_1",
        "total_2",
        "merged_df",
        "scarce_resource",
        "np",
        "sum",
        "scarce_resource",
        "np",
        "sum",
        "yi",
        "merged_df",
        "division_decision_column",
        "np",
        "sum",
        "yi",
        "merged_df",
        "division_decision_column",
        "np",
        "sum",
        "yi",
        "np",
        "log",
        "yi",
        "total_households",
        "np",
        "sum",
        "yi",
        "merged_df",
        "division_decision_column",
        "np",
        "log",
        "np",
        "average",
        "yi",
        "merged_df",
        "division_decision_column",
        "np",
        "average",
        "yi",
        "np",
        "sum",
        "yi",
        "merged_df",
        "division_decision_column",
        "np",
        "log",
        "np",
        "average",
        "yi",
        "merged_df",
        "division_decision_column",
        "np",
        "average",
        "yi",
        "Yg_1",
        "np",
        "sum",
        "yi",
        "merged_df",
        "division_decision_column",
        "Yg_1",
        "np",
        "log",
        "yi",
        "merged_df",
        "division_decision_column",
        "Yg_1",
        "total_1",
        "Yg_2",
        "np",
        "sum",
        "yi",
        "merged_df",
        "division_decision_column",
        "Yg_2",
        "np",
        "log",
        "yi",
        "merged_df",
        "division_decision_column",
        "Yg_2",
        "total_2",
        "TheilT",
        "bzi",
        "wzi"
    ],
    "literals": [
        "\"division_decision_column\"",
        "\"scarce_resource\"",
        "\"housing_unit_allocation\"",
        "\"SVI\"",
        "\"SVI\"",
        "\"inner\"",
        "\"guid\"",
        "\"guid\"",
        "\"equity_metric\"",
        "\"result_name\"",
        "\"_equity_metric\"",
        "\"scarce_resource\"",
        "\"Theils T\"",
        "\"BZI\"",
        "\"WZI\"",
        "\"name\"",
        "\"equity-metric\"",
        "\"description\"",
        "\"Equity metric analysis\"",
        "\"input_parameters\"",
        "\"id\"",
        "\"result_name\"",
        "\"required\"",
        "\"description\"",
        "\"result dataset name\"",
        "\"type\"",
        "\"id\"",
        "\"division_decision_column\"",
        "\"required\"",
        "\"description\"",
        "\"Division decision. \"",
        "\"Binary variable associated with each household used to group it into two groups \"",
        "\"(e.g. low income vs non low income, minority vs non-minority, \"",
        "\"social vulnerability)\"",
        "\"type\"",
        "\"input_datasets\"",
        "\"id\"",
        "\"housing_unit_allocation\"",
        "\"required\"",
        "\"description\"",
        "\"A csv file with the merged dataset of the inputs, aka Probabilistic\"",
        "\"House Unit Allocation\"",
        "\"type\"",
        "\"incore:housingUnitAllocation\"",
        "\"id\"",
        "\"scarce_resource\"",
        "\"required\"",
        "\"description\"",
        "\"Scarce resource dataset e.g. probability of service, return time, etc\"",
        "\"type\"",
        "\"incore:scarceResource\"",
        "\"output_datasets\"",
        "\"id\"",
        "\"equity_metric\"",
        "\"description\"",
        "\"CSV file of equity metric, including Theil’s T Value, Between Zone Inequality, Within Zone Inequality\"",
        "\"type\"",
        "\"incore:equityMetric\""
    ],
    "variables": [
        "division_decision_column",
        "scarce_resource_df",
        "hua_df",
        "hua_df",
        "merged_df",
        "equity_metric",
        "total_1",
        "total_2",
        "total_households",
        "scarce_resource",
        "yi",
        "Yg_1",
        "Yg_2",
        "TheilT",
        "bzi",
        "wzi"
    ],
    "comments": [
        "Copyright (c) 2024 University of Illinois and others. All rights reserved.",
        "",
        "This program and the accompanying materials are made available under the",
        "terms of the Mozilla Public License v2.0 which accompanies this distribution,",
        "and is available at https://www.mozilla.org/en-US/MPL/2.0/",
        "Calculation of households in each group",
        "socially vulnerable populations",
        "non socially vulnerable populations",
        "for non-vacant households (i.e., non-vacant are not included)",
        "Metric Computation"
    ],
    "docstrings": [
        "\"\"\"Computes equity metric.\n    Args:\n        incore_client: Service client with authentication info\n    \"\"\"",
        "\"\"\"Execute equity metric analysis\"\"\"",
        "\"\"\"\n        Compute equity metric\n        Args:\n            merged_df: Merging housing unit allocation and scarce resource to create dataframes\n            division_decision_column: column name of the division decision variable e.g. SVI\n\n        Returns:\n            equity_metric: equity metric values that consist of Theil’s T Value, Between Zone Inequality, Within Zone Inequality\n\n        \"\"\"",
        "\"\"\"Get specifications of the Equity Metric analysis.\n        Returns:\n            obj: A JSON object of specifications of the Equity Metric analysis.\n        \"\"\""
    ],
    "functions": [
        "run",
        "equity_metric",
        "get_spec"
    ],
    "classes": [
        "EquityMetric"
    ]
}