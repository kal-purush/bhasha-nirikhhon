{
    "identifiers": [
        "org",
        "shikshalokam",
        "backend",
        "io",
        "restassured",
        "http",
        "ContentType",
        "io",
        "restassured",
        "response",
        "Response",
        "org",
        "apache",
        "commons",
        "lang3",
        "RandomStringUtils",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "json",
        "simple",
        "JSONObject",
        "org",
        "testng",
        "annotations",
        "BeforeTest",
        "org",
        "testng",
        "annotations",
        "Test",
        "java",
        "net",
        "URI",
        "java",
        "net",
        "URISyntaxException",
        "io",
        "restassured",
        "RestAssured",
        "org",
        "shikshalokam",
        "backend",
        "PropertyLoader",
        "PROP_LIST",
        "org",
        "testng",
        "Assert",
        "logger",
        "LogManager",
        "getLogger",
        "createUserRolesEndpoint",
        "getUserRolesEndPoint",
        "updateUserRolesEndpoint",
        "userRoleTitle",
        "createdRoleID",
        "updateUserRoleTitle",
        "BeforeTest",
        "logger",
        "info",
        "loginToMentorED",
        "PROP_LIST",
        "get",
        "toString",
        "PROP_LIST",
        "get",
        "toString",
        "createUserRolesEndpoint",
        "createURI",
        "getUserRolesEndPoint",
        "createURI",
        "userRoleTitle",
        "RandomStringUtils",
        "randomAlphabetic",
        "toLowerCase",
        "updateUserRoleTitle",
        "RandomStringUtils",
        "randomAlphabetic",
        "toLowerCase",
        "Test",
        "description",
        "logger",
        "info",
        "response",
        "createUserRole",
        "userRoleTitle",
        "logger",
        "info",
        "response",
        "getStatusCode",
        "response",
        "getBody",
        "asString",
        "assertEquals",
        "response",
        "getStatusCode",
        "response",
        "getStatusCode",
        "getUserRolesID",
        "userRoleTitle",
        "assertNotNull",
        "createdRoleID",
        "logger",
        "info",
        "Test",
        "description",
        "logger",
        "info",
        "response",
        "createUserRole",
        "logger",
        "info",
        "response",
        "getStatusCode",
        "response",
        "getBody",
        "asString",
        "assertEquals",
        "response",
        "getStatusCode",
        "response",
        "getStatusCode",
        "responseBody",
        "response",
        "getBody",
        "asString",
        "assertTrue",
        "responseBody",
        "contains",
        "responseBody",
        "contains",
        "responseBody",
        "logger",
        "info",
        "Test",
        "dependsOnMethods",
        "logger",
        "info",
        "response",
        "updateUserRole",
        "createdRoleID",
        "updateUserRoleTitle",
        "logger",
        "info",
        "response",
        "getStatusCode",
        "response",
        "getBody",
        "asString",
        "assertEquals",
        "response",
        "getStatusCode",
        "response",
        "getStatusCode",
        "responsebody",
        "getUserRolesID",
        "updateUserRoleTitle",
        "userRoleTitle",
        "responsebody",
        "jsonPath",
        "getString",
        "userRoleTitle",
        "equals",
        "updateUserRoleTitle",
        "assertEquals",
        "userRoleTitle",
        "updateUserRoleTitle",
        "assertEquals",
        "userRoleTitle",
        "updateUserRoleTitle",
        "logger",
        "info",
        "Test",
        "dependsOnMethods",
        "logger",
        "info",
        "response",
        "updateUserRole",
        "createdRoleID",
        "logger",
        "info",
        "response",
        "getStatusCode",
        "response",
        "getBody",
        "asString",
        "assertEquals",
        "response",
        "getStatusCode",
        "response",
        "getStatusCode",
        "responseBody",
        "response",
        "getBody",
        "asString",
        "assertTrue",
        "responseBody",
        "contains",
        "responseBody",
        "contains",
        "responseBody",
        "logger",
        "info",
        "endpoint",
        "endpoint",
        "e",
        "logger",
        "error",
        "endpoint",
        "e",
        "e",
        "title",
        "userType",
        "status",
        "visibility",
        "requestBody",
        "requestBody",
        "put",
        "title",
        "requestBody",
        "put",
        "userType",
        "requestBody",
        "put",
        "status",
        "requestBody",
        "put",
        "visibility",
        "response",
        "given",
        "header",
        "X_AUTH_TOKEN",
        "contentType",
        "ContentType",
        "body",
        "requestBody",
        "toString",
        "when",
        "post",
        "createUserRolesEndpoint",
        "response",
        "idNeeded",
        "title",
        "logger",
        "info",
        "response",
        "given",
        "header",
        "X_AUTH_TOKEN",
        "queryParam",
        "title",
        "when",
        "get",
        "getUserRolesEndPoint",
        "idNeeded",
        "response",
        "createdRoleID",
        "response",
        "jsonPath",
        "getString",
        "response",
        "roleID",
        "title",
        "userType",
        "status",
        "visibility",
        "updateUserRolesEndpoint",
        "roleID",
        "e",
        "logger",
        "error",
        "e",
        "e",
        "requestBodyJson",
        "requestBodyJson",
        "put",
        "title",
        "requestBodyJson",
        "put",
        "userType",
        "requestBodyJson",
        "put",
        "status",
        "requestBodyJson",
        "put",
        "visibility",
        "logger",
        "info",
        "requestBodyJson",
        "toJSONString",
        "response",
        "given",
        "header",
        "X_AUTH_TOKEN",
        "contentType",
        "ContentType",
        "body",
        "requestBodyJson",
        "toString",
        "when",
        "post",
        "updateUserRolesEndpoint",
        "response"
    ],
    "literals": [
        "\"Logging into the application :\"",
        "\"mentor.qa.admin.login.user\"",
        "\"mentor.qa.admin.login.password\"",
        "\"/user/v1/user-role/create\"",
        "\"/user/v1/user-role/list\"",
        "\"userroletitle\"",
        "\"updusertitle\"",
        "\"Creates user role with given title \"",
        "\"Started calling --------------- Create User Roles ----------- \"",
        "\"1\"",
        "\"ACTIVE\"",
        "\"PUBLIC\"",
        "\"Response Code: {}, Response Body: {}\"",
        "\"User role creation failed with \"",
        "\"Role ID not found in the response\"",
        "\"Ended calling ----------------- CreateUserRoles with assertions completed\"",
        "\"Validates the negative use case for create user role without providing title \"",
        "\"Started calling --------- Create User Roles - Negative Test Case Missing Required Fields\"",
        "\"\"",
        "\"1\"",
        "\"ACTIVE\"",
        "\"PUBLIC\"",
        "\"Response Code: {}, Response Body: {}\"",
        "\"Expected Bad Request for missing required fields, but got \"",
        "\"title field is empty\"",
        "\"title is invalid, must not contain spaces\"",
        "\"Expected error messages for missing title or invalid title not found in response: \"",
        "\"Ended calling --------------- CreateUserRoles: Negative test case completed with assertions on missing fields.\"",
        "\"testCreateUserRoles\"",
        "\"Started calling ---------------- Update User Roles ---------------\"",
        "\"1\"",
        "\"ACTIVE\"",
        "\"PUBLIC\"",
        "\"Response Code: {}, Response Body: {}\"",
        "\"User role creation failed with \"",
        "\"result.data[0].title\"",
        "\"Updated role title does not match the expected value.\"",
        "\"role titles not same\"",
        "\"Ended calling ------------- UpdateUserRoles with assertions completed\"",
        "\"testCreateUserRoles\"",
        "\"Started calling --------- Update User Roles - Negative Test Case Missing Required Fields\"",
        "\"\"",
        "\"1\"",
        "\"ACTIVE\"",
        "\"PUBLIC\"",
        "\"Response Code: {}, Response Body: {}\"",
        "\"Expected Bad Request for missing required fields, but got \"",
        "\"title field is empty\"",
        "\"title is invalid, must not contain spaces\"",
        "\"Expected error messages for missing title or invalid title not found in response: \"",
        "\"Ended calling --------------- UpdateUserRoles: Negative test case completed with assertions on missing fields.\"",
        "\"Invalid URI syntax for endpoint: {}\"",
        "\"Invalid URI Syntax\"",
        "\"title\"",
        "\"user_type\"",
        "\"status\"",
        "\"visibility\"",
        "\"X-auth-token\"",
        "\"bearer \"",
        "\"Started calling ---------- GET User Roles -------------\"",
        "\"X-auth-token\"",
        "\"bearer \"",
        "\"search\"",
        "\"result.data[0].id\"",
        "\"/user/v1/user-role/update/\"",
        "\"Invalid URI syntax for the endpoint\"",
        "\"Invalid URI Syntax\"",
        "\"title\"",
        "\"user_type\"",
        "\"status\"",
        "\"visibility\"",
        "\"X-auth-token\"",
        "\"bearer \""
    ],
    "variables": [
        "createUserRolesEndpoint",
        "getUserRolesEndPoint",
        "updateUserRolesEndpoint",
        "userRoleTitle",
        "createdRoleID",
        "updateUserRoleTitle"
    ],
    "comments": [
        "Extract the created user role ID from the response",
        "If idNeeded is false, return the full response"
    ],
    "docstrings": [],
    "functions": [
        "init",
        "testCreateUserRoles",
        "testCreateUserRoles_MissingRequiredFields",
        "testUpdateUserRoles",
        "testUpdateUserRoles_MissingRequiredFields",
        "URI",
        "createURI",
        "Response",
        "createUserRole",
        "Response",
        "getUserRolesID",
        "Response",
        "updateUserRole"
    ],
    "classes": [
        "TestCRUDUserRoles"
    ]
}