{
    "identifiers": [
        "Diagnostics",
        "CodeAnalysis",
        "Microsoft",
        "EntityFrameworkCore",
        "Query",
        "SqlExpressions",
        "Microsoft",
        "EntityFrameworkCore",
        "SqlServer",
        "Query",
        "Internal",
        "ISqlExpressionFactory",
        "sqlExpressionFactory",
        "ExpressionVisitor",
        "NotNullIfNotNull",
        "nameof",
        "expression",
        "Expression",
        "Expression",
        "expression",
        "Visit",
        "expression",
        "inSearchConditionContext",
        "NotNullIfNotNull",
        "nameof",
        "expression",
        "Expression",
        "Expression",
        "expression",
        "inSearchConditionContext",
        "expression",
        "CaseExpression",
        "e",
        "VisitCase",
        "e",
        "inSearchConditionContext",
        "SelectExpression",
        "e",
        "VisitSelect",
        "e",
        "SqlBinaryExpression",
        "e",
        "VisitSqlBinary",
        "e",
        "inSearchConditionContext",
        "SqlUnaryExpression",
        "e",
        "VisitSqlUnary",
        "e",
        "inSearchConditionContext",
        "PredicateJoinExpressionBase",
        "e",
        "VisitPredicateJoin",
        "e",
        "SqlExpression",
        "e",
        "ExistsExpression",
        "InExpression",
        "LikeExpression",
        "SqlFunctionExpression",
        "Name",
        "ApplyConversion",
        "SqlExpression",
        "VisitExtension",
        "e",
        "inSearchConditionContext",
        "isExpressionSearchCondition",
        "SqlExpression",
        "e",
        "ApplyConversion",
        "SqlExpression",
        "VisitExtension",
        "e",
        "inSearchConditionContext",
        "isExpressionSearchCondition",
        "Visit",
        "expression",
        "SqlExpression",
        "sqlExpression",
        "inSearchConditionContext",
        "isExpressionSearchCondition",
        "inSearchCondition",
        "inSearchConditionContext",
        "isExpressionSearchCondition",
        "sqlExpression",
        "SqlConstantExpression",
        "Value",
        "boolValue",
        "sqlExpressionFactory",
        "Equal",
        "boolValue",
        "sqlExpressionFactory",
        "Constant",
        "sqlExpressionFactory",
        "Constant",
        "sqlExpressionFactory",
        "Constant",
        "sqlExpressionFactory",
        "Equal",
        "sqlExpression",
        "sqlExpressionFactory",
        "Constant",
        "sqlExpressionFactory",
        "Case",
        "CaseWhenClause",
        "SimplifyNegatedBinary",
        "sqlExpression",
        "sqlExpressionFactory",
        "ApplyDefaultTypeMapping",
        "sqlExpressionFactory",
        "Constant",
        "sqlExpressionFactory",
        "Constant",
        "sqlExpression",
        "SqlExpression",
        "sqlExpression",
        "sqlExpression",
        "SqlUnaryExpression",
        "OperatorType",
        "ExpressionType",
        "Not",
        "sqlUnaryExpression",
        "sqlUnaryExpression",
        "Type",
        "sqlUnaryExpression",
        "Operand",
        "SqlBinaryExpression",
        "OperatorType",
        "ExpressionType",
        "Equal",
        "sqlBinaryOperand",
        "sqlBinaryOperand",
        "Left",
        "Type",
        "sqlBinaryOperand",
        "Right",
        "Type",
        "sqlBinaryOperand",
        "Left",
        "SqlConstantExpression",
        "sqlBinaryOperand",
        "Right",
        "SqlConstantExpression",
        "sqlBinaryOperand",
        "Left",
        "SqlConstantExpression",
        "SqlConstantExpression",
        "sqlBinaryOperand",
        "Right",
        "sqlBinaryOperand",
        "Left",
        "SqlConstantExpression",
        "sqlExpressionFactory",
        "MakeBinary",
        "ExpressionType",
        "Equal",
        "sqlExpressionFactory",
        "Constant",
        "constant",
        "Value",
        "constant",
        "TypeMapping",
        "sqlBinaryOperand",
        "Right",
        "sqlBinaryOperand",
        "TypeMapping",
        "sqlExpressionFactory",
        "MakeBinary",
        "ExpressionType",
        "Equal",
        "sqlBinaryOperand",
        "Left",
        "sqlExpressionFactory",
        "Constant",
        "constant",
        "Value",
        "constant",
        "TypeMapping",
        "sqlBinaryOperand",
        "TypeMapping",
        "sqlExpressionFactory",
        "MakeBinary",
        "sqlBinaryOperand",
        "OperatorType",
        "ExpressionType",
        "Equal",
        "ExpressionType",
        "NotEqual",
        "ExpressionType",
        "Equal",
        "sqlBinaryOperand",
        "Left",
        "sqlBinaryOperand",
        "Right",
        "sqlBinaryOperand",
        "TypeMapping",
        "sqlExpression",
        "CaseExpression",
        "caseExpression",
        "inSearchConditionContext",
        "caseExpression",
        "Operand",
        "SqlExpression",
        "Visit",
        "caseExpression",
        "Operand",
        "CaseWhenClause",
        "whenClause",
        "caseExpression",
        "WhenClauses",
        "SqlExpression",
        "Visit",
        "whenClause",
        "Test",
        "testIsCondition",
        "SqlExpression",
        "Visit",
        "whenClause",
        "Result",
        "whenClauses",
        "Add",
        "CaseWhenClause",
        "test",
        "result",
        "SqlExpression",
        "Visit",
        "caseExpression",
        "ElseResult",
        "ApplyConversion",
        "sqlExpressionFactory",
        "Case",
        "operand",
        "whenClauses",
        "elseResult",
        "caseExpression",
        "inSearchConditionContext",
        "isExpressionSearchCondition",
        "PredicateJoinExpressionBase",
        "join",
        "join",
        "Update",
        "TableExpressionBase",
        "Visit",
        "join",
        "Table",
        "SqlExpression",
        "Visit",
        "join",
        "JoinPredicate",
        "inSearchConditionContext",
        "SelectExpression",
        "select",
        "VisitAndConvert",
        "select",
        "Tables",
        "SqlExpression",
        "Visit",
        "select",
        "Predicate",
        "inSearchConditionContext",
        "VisitAndConvert",
        "select",
        "GroupBy",
        "SqlExpression",
        "Visit",
        "select",
        "Having",
        "inSearchConditionContext",
        "VisitAndConvert",
        "select",
        "Projection",
        "VisitAndConvert",
        "select",
        "Orderings",
        "SqlExpression",
        "Visit",
        "select",
        "Offset",
        "SqlExpression",
        "Visit",
        "select",
        "Limit",
        "select",
        "Update",
        "tables",
        "predicate",
        "groupBy",
        "havingExpression",
        "projections",
        "orderings",
        "offset",
        "limit",
        "SqlBinaryExpression",
        "binary",
        "inSearchConditionContext",
        "binary",
        "OperatorType",
        "ExpressionType",
        "AndAlso",
        "ExpressionType",
        "OrElse",
        "SqlExpression",
        "Visit",
        "binary",
        "Left",
        "areOperandsInSearchConditionContext",
        "SqlExpression",
        "Visit",
        "binary",
        "Right",
        "areOperandsInSearchConditionContext",
        "binary",
        "OperatorType",
        "ExpressionType",
        "NotEqual",
        "ExpressionType",
        "Equal",
        "inSearchConditionContext",
        "newLeft",
        "Type",
        "newLeft",
        "Type",
        "IsEnum",
        "newLeft",
        "Type",
        "IsInteger",
        "newRight",
        "Type",
        "newRight",
        "Type",
        "IsEnum",
        "newRight",
        "Type",
        "IsInteger",
        "sqlExpressionFactory",
        "MakeBinary",
        "ExpressionType",
        "ExclusiveOr",
        "newLeft",
        "newRight",
        "result",
        "Type",
        "result",
        "sqlExpressionFactory",
        "Convert",
        "result",
        "binary",
        "TypeMapping",
        "binary",
        "OperatorType",
        "ExpressionType",
        "Equal",
        "result",
        "sqlExpressionFactory",
        "MakeUnary",
        "ExpressionType",
        "OnesComplement",
        "result",
        "result",
        "Type",
        "result",
        "TypeMapping",
        "result",
        "newLeft",
        "SqlUnaryExpression",
        "OperatorType",
        "ExpressionType",
        "OnesComplement",
        "negatedLeft",
        "newRight",
        "SqlUnaryExpression",
        "OperatorType",
        "ExpressionType",
        "OnesComplement",
        "negatedRight",
        "newLeft",
        "negatedLeft",
        "Operand",
        "newRight",
        "negatedRight",
        "Operand",
        "binary",
        "binary",
        "Update",
        "newLeft",
        "newRight",
        "binary",
        "OperatorType",
        "ExpressionType",
        "AndAlso",
        "ExpressionType",
        "OrElse",
        "ExpressionType",
        "Equal",
        "ExpressionType",
        "NotEqual",
        "ExpressionType",
        "GreaterThan",
        "ExpressionType",
        "GreaterThanOrEqual",
        "ExpressionType",
        "LessThan",
        "ExpressionType",
        "LessThanOrEqual",
        "ApplyConversion",
        "binary",
        "inSearchConditionContext",
        "isExpressionSearchCondition",
        "SqlUnaryExpression",
        "sqlUnaryExpression",
        "inSearchConditionContext",
        "sqlUnaryExpression",
        "OperatorType",
        "ExpressionType",
        "Not",
        "sqlUnaryExpression",
        "Type",
        "inSearchConditionContext",
        "sqlUnaryExpression",
        "Operand",
        "ExistsExpression",
        "InExpression",
        "LikeExpression",
        "SqlExpression",
        "Visit",
        "sqlUnaryExpression",
        "Operand",
        "negatedOperand",
        "SqlUnaryExpression",
        "OperatorType",
        "ExpressionType",
        "OnesComplement",
        "unary",
        "unary",
        "Operand",
        "sqlExpressionFactory",
        "MakeUnary",
        "ExpressionType",
        "OnesComplement",
        "negatedOperand",
        "negatedOperand",
        "Type",
        "negatedOperand",
        "TypeMapping",
        "isOperandInSearchConditionContext",
        "isSearchConditionExpression",
        "ExpressionType",
        "Not",
        "isOperandInSearchConditionContext",
        "isSearchConditionExpression",
        "ExpressionType",
        "Convert",
        "ExpressionType",
        "Negate",
        "isOperandInSearchConditionContext",
        "isSearchConditionExpression",
        "ExpressionType",
        "Equal",
        "ExpressionType",
        "NotEqual",
        "isOperandInSearchConditionContext",
        "isSearchConditionExpression",
        "InvalidOperationException",
        "RelationalStrings",
        "UnsupportedOperatorForSqlExpression",
        "sqlUnaryExpression",
        "OperatorType",
        "SqlUnaryExpression",
        "SqlExpression",
        "Visit",
        "sqlUnaryExpression",
        "Operand",
        "isOperandInSearchConditionContext",
        "SimplifyNegatedBinary",
        "ApplyConversion",
        "sqlUnaryExpression",
        "Update",
        "operand",
        "inSearchConditionContext",
        "isSearchConditionExpression"
    ],
    "literals": [
        "\"FREETEXT\"",
        "\"CONTAINS\""
    ],
    "variables": [
        "constant",
        "testIsCondition",
        "operand",
        "whenClauses",
        "test",
        "result",
        "elseResult",
        "tables",
        "predicate",
        "groupBy",
        "havingExpression",
        "projections",
        "orderings",
        "offset",
        "limit",
        "areOperandsInSearchConditionContext",
        "newLeft",
        "newRight",
        "result",
        "isExpressionSearchCondition",
        "isOperandInSearchConditionContext",
        "isSearchConditionExpression",
        "negatedOperand",
        "operand"
    ],
    "comments": [
        "Licensed to the .NET Foundation under one or more agreements.",
        "The .NET Foundation licenses this file to you under the MIT license.",
        "<para>",
        "A SQL Server visitor which converts boolean expressions that represent search conditions to bit values and vice versa, depending",
        "on context:",
        "</para>",
        "<code>",
        "WHERE b.SomeBitColumn => WHERE b.SomeBitColumn = 1",
        "SELECT a LIKE b => SELECT CASE WHEN a LIKE b THEN 1 ELSE 0 END",
        "</code>",
        "</summary>",
        "<remarks>",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</remarks>",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</summary>",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</summary>",
        "The following are search condition expressions: they can appear directly in a WHERE, and cannot e.g. be projected out",
        "directly",
        "A non-search condition expression in a search condition context - add equality to convert to search condition:",
        "WHERE b.SomeBitColumn => WHERE b.SomeBitColumn = 1",
        "A search condition expression in non-search condition context - wrap in CASE/WHEN to convert to bit:",
        "e.g. SELECT a LIKE b => SELECT CASE WHEN a LIKE b THEN 1 ELSE 0 END",
        "TODO: NULL is not handled properly here, see #34001",
        "All other cases (e.g. WHERE a LIKE b, SELECT b.SomebitColumn) - no need to do anything.",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</summary>",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</summary>",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</summary>",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</summary>",
        "Only logical operations need conditions on both sides",
        "\"lhs != rhs\" is the same as \"CAST(lhs ^ rhs AS BIT)\", except that",
        "the first is a boolean, the second is a BIT",
        "\"lhs == rhs\" is the same as \"NOT(lhs != rhs)\" aka \"~(lhs ^ rhs)\"",
        "This is an internal API that supports the Entity Framework Core infrastructure and not subject to",
        "the same compatibility standards as public APIs. It may be changed or removed without notice in",
        "any release. You should only use it directly in your code with extreme caution and knowing that",
        "doing so can result in application failures when updating to a new Entity Framework Core release.",
        "</summary>",
        "when possible, avoid converting to/from predicate form"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Visit",
        "Visit",
        "SqlExpression",
        "ApplyConversion",
        "SqlExpression",
        "SimplifyNegatedBinary",
        "Expression",
        "VisitCase",
        "Expression",
        "VisitPredicateJoin",
        "Expression",
        "VisitSelect",
        "Expression",
        "VisitSqlBinary",
        "Expression",
        "VisitSqlUnary"
    ],
    "classes": [
        "SearchConditionConverter"
    ]
}