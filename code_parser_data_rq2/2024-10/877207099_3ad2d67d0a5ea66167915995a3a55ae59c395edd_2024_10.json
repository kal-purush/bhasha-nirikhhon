{
    "identifiers": [
        "url",
        "mode",
        "mode",
        "Gio",
        "File",
        "parse_name",
        "url",
        "read",
        "size",
        "g_file",
        "read_bytes",
        "size",
        "get_data",
        "offset",
        "whence",
        "g_file",
        "seek",
        "offset",
        "whence",
        "g_file",
        "tell",
        "g_file",
        "tell",
        "g_file",
        "close",
        "url",
        "mode",
        "urlparse",
        "url",
        "o",
        "scheme",
        "o",
        "path",
        "o",
        "scheme",
        "unquote",
        "o",
        "path",
        "IOError",
        "o",
        "scheme",
        "open",
        "path",
        "mode",
        "gi",
        "repository",
        "Gio",
        "GFileWrapper",
        "ImportError",
        "urllib",
        "parse",
        "urlparse",
        "unquote",
        "ImportError",
        "urlparse",
        "urlparse",
        "urllib",
        "unquote",
        "open_local_url",
        "path",
        "os",
        "open_wrapper_get",
        "open_wrapper",
        "path",
        "blendfile",
        "read",
        "head",
        "gzip",
        "blendfile",
        "close",
        "gzip",
        "GzipFile",
        "open_wrapper",
        "path",
        "blendfile",
        "read",
        "head",
        "startswith",
        "blendfile",
        "close",
        "head",
        "head",
        "head",
        "is_64_bit",
        "is_big_endian",
        "int_endian",
        "blendfile",
        "read",
        "sizeof_bhead",
        "len",
        "bhead",
        "sizeof_bhead",
        "bhead",
        "unpack",
        "int_endian",
        "bhead",
        "code",
        "REND",
        "blendfile",
        "seek",
        "length",
        "os",
        "SEEK_CUR",
        "code",
        "TEST",
        "unpack",
        "int_endian_pair",
        "blendfile",
        "read",
        "error",
        "length",
        "length",
        "x",
        "y",
        "blendfile",
        "read",
        "length",
        "len",
        "image_buffer",
        "length",
        "image_buffer",
        "x",
        "y",
        "buf",
        "width",
        "height",
        "zlib",
        "width",
        "join",
        "buf",
        "span",
        "span",
        "width_byte_4",
        "span",
        "height",
        "width",
        "width_byte_4",
        "png_tag",
        "data",
        "png_tag",
        "data",
        "pack",
        "len",
        "data",
        "chunk_head",
        "pack",
        "zlib",
        "crc32",
        "chunk_head",
        "join",
        "png_pack",
        "pack",
        "width",
        "height",
        "png_pack",
        "zlib",
        "compress",
        "raw_data",
        "png_pack",
        "sys",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "blend_extract_thumb",
        "file_in",
        "buf",
        "sys",
        "argv",
        "open",
        "file_out",
        "f",
        "write",
        "write_png",
        "buf",
        "width",
        "height",
        "f",
        "close",
        "main"
    ],
    "literals": [
        "\"mode\"",
        "\"g_file\"",
        "'r'",
        "'r'",
        "''",
        "'file'",
        "'URL scheme \"%s\" needs gi.repository.Gio module'",
        "b'REND'",
        "b'TEST'",
        "'rb'",
        "b'\\x1f\\x8b'",
        "''",
        "'rb'",
        "'rb'",
        "b'BLENDER'",
        "b'-'",
        "b'V'",
        "b'24'",
        "'>i'",
        "'<i'",
        "'i'",
        "b\"\"",
        "b'\\x00'",
        "\"!I\"",
        "\"!I\"",
        "b\"\"",
        "b'\\x89PNG\\r\\n\\x1a\\n'",
        "b'IHDR'",
        "\"!2I5B\"",
        "b'IDAT'",
        "b'IEND'",
        "b''",
        "\"Expected 2 arguments <input.blend> <output.png>\"",
        "\"wb\"",
        "'__main__'"
    ],
    "variables": [
        "__slots__",
        "mode",
        "g_file",
        "o",
        "path",
        "path",
        "open_wrapper",
        "REND",
        "TEST",
        "blendfile",
        "head",
        "blendfile",
        "head",
        "is_64_bit",
        "is_big_endian",
        "sizeof_bhead",
        "int_endian",
        "int_endian_pair",
        "bhead",
        "code",
        "length",
        "x",
        "y",
        "image_buffer",
        "width_byte_4",
        "raw_data",
        "chunk_head",
        "file_in",
        "buf",
        "width",
        "height",
        "file_out",
        "f"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "##### BEGIN GPL LICENSE BLOCK #####",
        "",
        "This program is free software; you can redistribute it and/or",
        "modify it under the terms of the GNU General Public License",
        "as published by the Free Software Foundation; either version 2",
        "of the License, or (at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program; if not, write to the Free Software Foundation,",
        "Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.",
        "",
        "##### END GPL LICENSE BLOCK #####",
        "<pep8 compliant>",
        "used in gzip module",
        "Python 3",
        "Python 2",
        "gzip magic",
        "true for PPC, false for X86",
        "blender pre 2.5 had no thumbs",
        "4 == sizeof(int)",
        "8 == sizeof(int) * 2",
        "sizeof(int) * 2",
        "reverse the vertical line order and add null bytes at the start"
    ],
    "docstrings": [
        "\"\"\"\nThumbnailer runs with python 2.7 and 3.x.\nTo run automatically with a file manager such as Nautilus, save this file\nin a directory that is listed in PATH environment variable, and create\nblender.thumbnailer file in ${HOME}/.local/share/thumbnailers/ directory\nwith the following contents:\n\n[Thumbnailer Entry]\nTryExec=blender-thumbnailer.py\nExec=blender-thumbnailer.py %u %o\nMimeType=application/x-blender;\n\"\"\"",
        "\"\"\" wrap OS specific read functionality here, fallback to 'open()'\n    \"\"\""
    ],
    "functions": [
        "open_wrapper_get",
        "read",
        "seek",
        "tell",
        "close",
        "open_local_url",
        "blend_extract_thumb",
        "write_png",
        "png_pack",
        "main"
    ],
    "classes": [
        "GFileWrapper"
    ]
}