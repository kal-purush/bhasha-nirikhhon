{
    "identifiers": [
        "com",
        "qa",
        "com",
        "aventstack",
        "extentreports",
        "Status",
        "com",
        "qa",
        "reports",
        "ExtentReport",
        "com",
        "qa",
        "utils",
        "TestUtils",
        "io",
        "appium",
        "java_client",
        "AppiumDriver",
        "io",
        "appium",
        "java_client",
        "FindsByAndroidUIAutomator",
        "io",
        "appium",
        "java_client",
        "InteractsWithApps",
        "io",
        "appium",
        "java_client",
        "MobileElement",
        "io",
        "appium",
        "java_client",
        "android",
        "AndroidDriver",
        "io",
        "appium",
        "java_client",
        "ios",
        "IOSDriver",
        "io",
        "appium",
        "java_client",
        "pagefactory",
        "AppiumFieldDecorator",
        "io",
        "appium",
        "java_client",
        "screenrecording",
        "CanRecordScreen",
        "io",
        "appium",
        "java_client",
        "service",
        "local",
        "AppiumDriverLocalService",
        "io",
        "appium",
        "java_client",
        "service",
        "local",
        "AppiumServiceBuilder",
        "io",
        "appium",
        "java_client",
        "service",
        "local",
        "flags",
        "GeneralServerFlag",
        "org",
        "apache",
        "commons",
        "codec",
        "binary",
        "Base64",
        "org",
        "apache",
        "logging",
        "log4j",
        "ThreadContext",
        "org",
        "openqa",
        "selenium",
        "By",
        "org",
        "openqa",
        "selenium",
        "NoSuchElementException",
        "org",
        "openqa",
        "selenium",
        "WebDriver",
        "org",
        "openqa",
        "selenium",
        "WebElement",
        "org",
        "openqa",
        "selenium",
        "remote",
        "DesiredCapabilities",
        "org",
        "openqa",
        "selenium",
        "remote",
        "RemoteWebElement",
        "org",
        "openqa",
        "selenium",
        "support",
        "PageFactory",
        "org",
        "openqa",
        "selenium",
        "support",
        "ui",
        "ExpectedConditions",
        "org",
        "openqa",
        "selenium",
        "support",
        "ui",
        "FluentWait",
        "org",
        "openqa",
        "selenium",
        "support",
        "ui",
        "Wait",
        "org",
        "openqa",
        "selenium",
        "support",
        "ui",
        "WebDriverWait",
        "org",
        "testng",
        "ITestResult",
        "org",
        "testng",
        "annotations",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "net",
        "ServerSocket",
        "java",
        "net",
        "URL",
        "java",
        "time",
        "Duration",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "Properties",
        "driver",
        "props",
        "strings",
        "platform",
        "dateTime",
        "deviceName",
        "server",
        "utils",
        "driver",
        "get",
        "driver2",
        "driver",
        "driver2",
        "props",
        "get",
        "props2",
        "props",
        "props2",
        "strings",
        "get",
        "strings2",
        "strings",
        "strings2",
        "platform",
        "get",
        "platform2",
        "platform",
        "platform2",
        "dateTime",
        "get",
        "dateTime2",
        "dateTime",
        "dateTime2",
        "deviceName",
        "get",
        "deviceName2",
        "deviceName",
        "deviceName2",
        "PageFactory",
        "initElements",
        "getDriver",
        "BeforeMethod",
        "getDriver",
        "startRecordingScreen",
        "AfterMethod",
        "result",
        "media",
        "getDriver",
        "stopRecordingScreen",
        "result",
        "getTestContext",
        "getCurrentXmlTest",
        "getAllParameters",
        "dirPath",
        "File",
        "separator",
        "get",
        "get",
        "File",
        "separator",
        "getDateTime",
        "File",
        "separator",
        "result",
        "getTestClass",
        "getRealClass",
        "getSimpleName",
        "videoDir",
        "dirPath",
        "videoDir",
        "videoDir",
        "exists",
        "videoDir",
        "mkdirs",
        "stream",
        "stream",
        "videoDir",
        "File",
        "separator",
        "result",
        "getName",
        "stream",
        "write",
        "Base64",
        "decodeBase64",
        "media",
        "stream",
        "close",
        "utils",
        "log",
        "info",
        "videoDir",
        "File",
        "separator",
        "result",
        "getName",
        "e",
        "utils",
        "log",
        "error",
        "e",
        "toString",
        "stream",
        "stream",
        "close",
        "BeforeSuite",
        "ThreadContext",
        "put",
        "server",
        "getAppiumServerDefault",
        "checkIfAppiumServerIsRunnning",
        "server",
        "start",
        "server",
        "clearOutPutStreams",
        "utils",
        "log",
        "info",
        "utils",
        "log",
        "info",
        "port",
        "isAppiumServerRunning",
        "socket",
        "socket",
        "port",
        "socket",
        "close",
        "e",
        "isAppiumServerRunning",
        "socket",
        "isAppiumServerRunning",
        "AfterSuite",
        "alwaysRun",
        "server",
        "isRunning",
        "server",
        "stop",
        "utils",
        "log",
        "info",
        "AppiumDriverLocalService",
        "buildDefaultService",
        "environment",
        "environment",
        "put",
        "getenv",
        "environment",
        "put",
        "AppiumDriverLocalService",
        "buildService",
        "usingDriverExecutable",
        "withAppiumJS",
        "usingPort",
        "withArgument",
        "GeneralServerFlag",
        "SESSION_OVERRIDE",
        "withEnvironment",
        "environment",
        "withLogFile",
        "Parameters",
        "BeforeTest",
        "Optional",
        "emulator",
        "platformName",
        "udid",
        "deviceName",
        "Optional",
        "systemPort",
        "Optional",
        "chromeDriverPort",
        "Optional",
        "wdaLocalPort",
        "Optional",
        "webkitDebugProxyPort",
        "setDateTime",
        "utils",
        "dateTime",
        "setPlatform",
        "platformName",
        "setDeviceName",
        "deviceName",
        "url",
        "inputStream",
        "stringsis",
        "props",
        "driver",
        "strFile",
        "File",
        "separator",
        "platformName",
        "deviceName",
        "logFile",
        "strFile",
        "logFile",
        "exists",
        "logFile",
        "mkdirs",
        "ThreadContext",
        "put",
        "strFile",
        "utils",
        "log",
        "info",
        "strFile",
        "props",
        "propFileName",
        "xmlFileName",
        "utils",
        "log",
        "info",
        "propFileName",
        "inputStream",
        "getClass",
        "getClassLoader",
        "getResourceAsStream",
        "propFileName",
        "props",
        "load",
        "inputStream",
        "setProps",
        "props",
        "utils",
        "log",
        "info",
        "xmlFileName",
        "stringsis",
        "getClass",
        "getClassLoader",
        "getResourceAsStream",
        "xmlFileName",
        "setStrings",
        "utils",
        "parseStringXML",
        "stringsis",
        "desiredCapabilities",
        "desiredCapabilities",
        "setCapability",
        "platformName",
        "desiredCapabilities",
        "setCapability",
        "deviceName",
        "desiredCapabilities",
        "setCapability",
        "udid",
        "url",
        "props",
        "getProperty",
        "platformName",
        "desiredCapabilities",
        "setCapability",
        "props",
        "getProperty",
        "desiredCapabilities",
        "setCapability",
        "props",
        "getProperty",
        "desiredCapabilities",
        "setCapability",
        "props",
        "getProperty",
        "emulator",
        "equalsIgnoreCase",
        "desiredCapabilities",
        "setCapability",
        "deviceName",
        "desiredCapabilities",
        "setCapability",
        "desiredCapabilities",
        "setCapability",
        "systemPort",
        "desiredCapabilities",
        "setCapability",
        "chromeDriverPort",
        "androidAppUrl",
        "getProperty",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "utils",
        "log",
        "info",
        "androidAppUrl",
        "desiredCapabilities",
        "setCapability",
        "androidAppUrl",
        "driver",
        "url",
        "desiredCapabilities",
        "desiredCapabilities",
        "setCapability",
        "props",
        "getProperty",
        "iOSAppUrl",
        "getProperty",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "File",
        "separator",
        "utils",
        "log",
        "info",
        "iOSAppUrl",
        "desiredCapabilities",
        "setCapability",
        "props",
        "getProperty",
        "desiredCapabilities",
        "setCapability",
        "wdaLocalPort",
        "desiredCapabilities",
        "setCapability",
        "webkitDebugProxyPort",
        "desiredCapabilities",
        "setCapability",
        "iOSAppUrl",
        "driver",
        "url",
        "desiredCapabilities",
        "platformName",
        "setDriver",
        "driver",
        "utils",
        "log",
        "info",
        "driver",
        "e",
        "utils",
        "log",
        "fatal",
        "e",
        "toString",
        "e",
        "inputStream",
        "inputStream",
        "close",
        "stringsis",
        "stringsis",
        "close",
        "e",
        "wait",
        "getDriver",
        "TestUtils",
        "WAIT",
        "wait",
        "until",
        "ExpectedConditions",
        "visibilityOf",
        "e",
        "e",
        "wait",
        "getDriver",
        "withTimeout",
        "Duration",
        "ofSeconds",
        "pollingEvery",
        "Duration",
        "ofSeconds",
        "ignoring",
        "wait",
        "until",
        "ExpectedConditions",
        "visibilityOf",
        "e",
        "e",
        "waitForVisibility",
        "e",
        "e",
        "clear",
        "e",
        "waitForVisibility",
        "e",
        "e",
        "click",
        "e",
        "msg",
        "waitForVisibility",
        "e",
        "utils",
        "log",
        "info",
        "msg",
        "ExtentReport",
        "getTest",
        "log",
        "Status",
        "INFO",
        "msg",
        "e",
        "click",
        "e",
        "txt",
        "waitForVisibility",
        "e",
        "e",
        "sendKeys",
        "txt",
        "e",
        "txt",
        "msg",
        "waitForVisibility",
        "e",
        "utils",
        "log",
        "info",
        "msg",
        "ExtentReport",
        "getTest",
        "log",
        "Status",
        "INFO",
        "msg",
        "e",
        "sendKeys",
        "txt",
        "e",
        "attribute",
        "waitForVisibility",
        "e",
        "e",
        "getAttribute",
        "attribute",
        "e",
        "msg",
        "txt",
        "getPlatform",
        "txt",
        "getAttribute",
        "e",
        "txt",
        "getAttribute",
        "e",
        "utils",
        "log",
        "info",
        "msg",
        "txt",
        "ExtentReport",
        "getTest",
        "log",
        "Status",
        "INFO",
        "msg",
        "txt",
        "txt",
        "getDriver",
        "closeApp",
        "getDriver",
        "launchApp",
        "getDriver",
        "findElementByAndroidUIAutomator",
        "element",
        "getDriver",
        "findElement",
        "By",
        "name",
        "elementID",
        "element",
        "getId",
        "scrollObject",
        "scrollObject",
        "put",
        "elementID",
        "scrollObject",
        "put",
        "getDriver",
        "executeScript",
        "scrollObject",
        "AfterTest",
        "alwaysRun",
        "getDriver",
        "getDriver",
        "quit"
    ],
    "literals": [
        "\"videos\"",
        "\"platformName\"",
        "\"_\"",
        "\"deviceName\"",
        "\".mp4\"",
        "\"video path: \"",
        "\".mp4\"",
        "\"error during video capture\"",
        "\"ROUTINGKEY\"",
        "\"ServerLogs\"",
        "\"Appium server started\"",
        "\"Appium server already running\"",
        "\"1\"",
        "\"Appium server stopped\"",
        "\"PATH\"",
        "\"/Library/Internet Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin:/Users/omprakashchavan/Library/Android/sdk/tools:/Users/omprakashchavan/Library/Android/sdk/platform-tools:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Library/Apple/usr/bin\"",
        "\"PATH\"",
        "\"ANDROID_HOME\"",
        "\"/Users/omprakashchavan/Library/Android/sdk\"",
        "\"/usr/local/bin/node\"",
        "\"/usr/local/lib/node_modules/appium/build/lib/main.js\"",
        "\"ServerLogs/server.log\"",
        "\"emulator\"",
        "\"platformName\"",
        "\"udid\"",
        "\"deviceName\"",
        "\"systemPort\"",
        "\"chromeDriverPort\"",
        "\"wdaLocalPort\"",
        "\"webkitDebugProxyPort\"",
        "\"androidOnly\"",
        "\"androidOnly\"",
        "\"androidOnly\"",
        "\"iOSOnly\"",
        "\"iOSOnly\"",
        "\"logs\"",
        "\"_\"",
        "\"ROUTINGKEY\"",
        "\"log path: \"",
        "\"config.properties\"",
        "\"strings/strings.xml\"",
        "\"load \"",
        "\"load \"",
        "\"platformName\"",
        "\"deviceName\"",
        "\"udid\"",
        "\"appiumURL\"",
        "\"Android\"",
        "\"automationName\"",
        "\"androidAutomationName\"",
        "\"appPackage\"",
        "\"androidAppPackage\"",
        "\"appActivity\"",
        "\"androidAppActivity\"",
        "\"true\"",
        "\"avd\"",
        "\"avdLaunchTimeout\"",
        "\"systemPort\"",
        "\"chromeDriverPort\"",
        "\"user.dir\"",
        "\"src\"",
        "\"test\"",
        "\"resources\"",
        "\"app\"",
        "\"Android.SauceLabs.Mobile.Sample.app.2.2.1.apk\"",
        "\"appUrl is\"",
        "\"app\"",
        "\"iOS\"",
        "\"automationName\"",
        "\"iOSAutomationName\"",
        "\"user.dir\"",
        "\"src\"",
        "\"test\"",
        "\"resources\"",
        "\"app\"",
        "\"SwagLabsMobileApp.app\"",
        "\"appUrl is\"",
        "\"bundleId\"",
        "\"iOSBundleId\"",
        "\"wdaLocalPort\"",
        "\"webkitDebugProxyPort\"",
        "\"app\"",
        "\"Invalid platform! - \"",
        "\"driver initialized: \"",
        "\"driver initialization failure. ABORT!!!\\n\"",
        "\"Android\"",
        "\"text\"",
        "\"iOS\"",
        "\"label\"",
        "\"new UiScrollable(new UiSelector()\"",
        "\".scrollable(true)).scrollIntoView(\"",
        "\"new UiSelector().description(\\\"test-Price\\\"));\"",
        "\"test-ADD TO CART\"",
        "\"element\"",
        "\"toVisible\"",
        "\"sdfnjksdnfkld\"",
        "\"mobile:scroll\""
    ],
    "variables": [
        "server",
        "socket",
        "url",
        "driver"
    ],
    "comments": [
        "stop video capturing and create *.mp4 file",
        "server = getAppiumService(); // -> If using Mac, uncomment this statement and comment below statement",
        "-> If using Windows, uncomment this statement and comment above statement",
        "-> Comment this if you don't want to see server logs in the console",
        "for Windows",
        "for Mac. Update the paths as per your Mac setup",
        ".withArgument(() -> \"--allow-insecure\",\"chromedriver_autodownload\")",
        "route logs to separate file for each thread",
        "String androidAppUrl = getClass().getResource(props.getProperty(\"androidAppLocation\")).getFile();",
        "String iOSAppUrl = getClass().getResource(props.getProperty(\"iOSAppLocation\")).getFile();",
        "scrollObject.put(\"direction\", \"down\");",
        "scrollObject.put(\"predicateString\", \"label == 'ADD TO CART'\");",
        "scrollObject.put(\"name\", \"test-ADD TO CART\");"
    ],
    "docstrings": [],
    "functions": [
        "AppiumDriver",
        "getDriver",
        "setDriver",
        "Properties",
        "getProps",
        "setProps",
        "getStrings",
        "setStrings",
        "getPlatform",
        "setPlatform",
        "getDateTime",
        "setDateTime",
        "getDeviceName",
        "setDeviceName",
        "BaseTest",
        "beforeMethod",
        "afterMethod",
        "beforeSuite",
        "checkIfAppiumServerIsRunnning",
        "afterSuite",
        "AppiumDriverLocalService",
        "getAppiumServerDefault",
        "AppiumDriverLocalService",
        "getAppiumService",
        "beforeTest",
        "waitForVisibility",
        "waitForVisibility",
        "clear",
        "click",
        "click",
        "sendKeys",
        "sendKeys",
        "getAttribute",
        "getText",
        "closeApp",
        "launchApp",
        "MobileElement",
        "scrollToElement",
        "iOSScrollToElement",
        "afterTest"
    ],
    "classes": [
        "BaseTest"
    ]
}