{
    "identifiers": [
        "org",
        "compiere",
        "process",
        "java",
        "util",
        "java",
        "util",
        "logging",
        "Level",
        "org",
        "compiere",
        "model",
        "MDocType",
        "org",
        "compiere",
        "model",
        "MOrder",
        "org",
        "compiere",
        "model",
        "MOrderLine",
        "org",
        "compiere",
        "model",
        "MProduct",
        "org",
        "compiere",
        "model",
        "MProduction",
        "org",
        "compiere",
        "model",
        "MWarehouse",
        "org",
        "compiere",
        "model",
        "Query",
        "org",
        "compiere",
        "util",
        "Env",
        "org",
        "compiere",
        "util",
        "Msg",
        "org",
        "adempiere",
        "annotation",
        "Process",
        "p_C_Order_ID",
        "p_C_Order_ID",
        "getRecord_ID",
        "log",
        "isLoggable",
        "Level",
        "INFO",
        "log",
        "info",
        "p_C_Order_ID",
        "p_C_Order_ID",
        "order",
        "getCtx",
        "p_C_Order_ID",
        "get_TrxName",
        "order",
        "get_ID",
        "MOrder",
        "DOCSTATUS_Completed",
        "equals",
        "order",
        "getDocStatus",
        "where",
        "lines",
        "getCtx",
        "MOrderLine",
        "Table_Name",
        "where",
        "get_TrxName",
        "addJoinClause",
        "setOnlyActiveRecords",
        "setParameters",
        "p_C_Order_ID",
        "doc",
        "getCtx",
        "order",
        "getC_DocType_ID",
        "get_TrxName",
        "cnt",
        "line",
        "lines",
        "line",
        "getQtyOrdered",
        "subtract",
        "line",
        "getQtyDelivered",
        "compareTo",
        "Env",
        "ZERO",
        "doc",
        "getDocSubTypeSO",
        "equals",
        "production",
        "line",
        "product",
        "getCtx",
        "line",
        "getM_Product_ID",
        "get_TrxName",
        "production",
        "setM_Product_ID",
        "line",
        "getM_Product_ID",
        "production",
        "setProductionQty",
        "line",
        "getQtyOrdered",
        "subtract",
        "line",
        "getQtyDelivered",
        "production",
        "setDatePromised",
        "line",
        "getDatePromised",
        "production",
        "setC_OrderLine_ID",
        "line",
        "getC_OrderLine_ID",
        "locator",
        "product",
        "getM_Locator_ID",
        "locator",
        "locator",
        "MWarehouse",
        "get",
        "getCtx",
        "line",
        "getM_Warehouse_ID",
        "getDefaultLocator",
        "get_ID",
        "production",
        "setM_Locator_ID",
        "locator",
        "line",
        "getC_BPartner_ID",
        "production",
        "setC_BPartner_ID",
        "order",
        "getC_BPartner_ID",
        "line",
        "getC_Project_ID",
        "production",
        "setC_Project_ID",
        "line",
        "getC_Project_ID",
        "production",
        "setC_Project_ID",
        "order",
        "getC_Project_ID",
        "line",
        "getC_Campaign_ID",
        "production",
        "setC_Campaign_ID",
        "line",
        "getC_Campaign_ID",
        "production",
        "setC_Campaign_ID",
        "order",
        "getC_Campaign_ID",
        "line",
        "getC_Activity_ID",
        "production",
        "setC_Activity_ID",
        "line",
        "getC_Activity_ID",
        "production",
        "setC_Activity_ID",
        "order",
        "getC_Activity_ID",
        "line",
        "getUser1_ID",
        "production",
        "setUser1_ID",
        "line",
        "getUser1_ID",
        "production",
        "setUser1_ID",
        "order",
        "getUser1_ID",
        "line",
        "getUser2_ID",
        "production",
        "setUser2_ID",
        "line",
        "getUser2_ID",
        "production",
        "setUser2_ID",
        "order",
        "getUser2_ID",
        "line",
        "getAD_OrgTrx_ID",
        "production",
        "setAD_OrgTrx_ID",
        "line",
        "getAD_OrgTrx_ID",
        "production",
        "setAD_OrgTrx_ID",
        "order",
        "getAD_OrgTrx_ID",
        "production",
        "saveEx",
        "production",
        "createLines",
        "production",
        "setIsCreated",
        "production",
        "saveEx",
        "msg",
        "Msg",
        "parseTranslation",
        "getCtx",
        "production",
        "getDocumentNo",
        "addBufferLog",
        "production",
        "getM_Production_ID",
        "msg",
        "MProduction",
        "Table_ID",
        "production",
        "getM_Production_ID",
        "cnt",
        "cnt"
    ],
    "literals": [
        "\"C_Order_ID=\"",
        "\"No Order\"",
        "\"Order not found\"",
        "\"Order not completed\"",
        "\"C_OrderLine.C_Order_ID=?\"",
        "\" AND C_OrderLine.Processed='Y'\"",
        "\" AND p.IsBOM='Y'\"",
        "\" AND p.IsVerified='Y'\"",
        "\" AND NOT EXISTS (SELECT 1 FROM M_Production pr WHERE pr.C_OrderLine_ID=C_OrderLine.C_OrderLine_ID)\"",
        "\"JOIN M_Product p ON (C_OrderLine.M_Product_ID=p.M_Product_ID)\"",
        "\"ON\"",
        "\"Y\"",
        "\"@M_Production_ID@ @Created@ \"",
        "\"@Created@ \""
    ],
    "variables": [],
    "comments": [
        "prepare",
        "",
        "Consignment and stock orders both have subtype of ON",
        "OrderCreateShipment"
    ],
    "docstrings": [
        "*********************************************************************\n * This file is part of iDempiere ERP Open Source                      *\n * http://www.idempiere.org                                            *\n *                                                                     *\n * Copyright (C) Contributors                                          *\n *                                                                     *\n * This program is free software; you can redistribute it and/or       *\n * modify it under the terms of the GNU General Public License         *\n * as published by the Free Software Foundation; either version 2      *\n * of the License, or (at your option) any later version.              *\n *                                                                     *\n * This program is distributed in the hope that it will be useful,     *\n * but WITHOUT ANY WARRANTY; without even the implied warranty of      *\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the        *\n * GNU General Public License for more details.                        *\n *                                                                     *\n * You should have received a copy of the GNU General Public License   *\n * along with this program; if not, write to the Free Software         *\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,          *\n * MA 02110-1301, USA.                                                 *\n *                                                                     *\n * Contributors:                                                       *\n * - Carlos Ruiz - globalqss - bxservice                               *\n *********************************************************************",
        "*\n * @author Carlos Ruiz - globalqss - bxservice\n *",
        "Order",
        "* Prepare - e.g., get Parameters.",
        "* Create Production for BOM products of an order\n\t *\n\t * @throws Exception"
    ],
    "functions": [
        "prepare",
        "doIt"
    ],
    "classes": [
        "OrderCreateProduction"
    ]
}