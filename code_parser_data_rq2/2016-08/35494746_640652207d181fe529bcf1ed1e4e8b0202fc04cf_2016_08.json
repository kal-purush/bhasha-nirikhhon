{
    "identifiers": [
        "zope",
        "implementer",
        "twisted",
        "internet",
        "interfaces",
        "protocol",
        "twisted",
        "python",
        "log",
        "twisted",
        "conch",
        "ssh",
        "session",
        "twisted",
        "conch",
        "telnet",
        "StatefulTelnetProtocol",
        "TelnetBootstrapProtocol",
        "cowrie",
        "core",
        "pwd",
        "cowrie",
        "core",
        "protocol",
        "cproto",
        "cowrie",
        "insults",
        "insults",
        "TelnetBootstrapProtocol",
        "username",
        "server",
        "username",
        "server",
        "server",
        "cfg",
        "pwd",
        "Passwd",
        "cfg",
        "getpwnam",
        "username",
        "pwentry",
        "pwentry",
        "pwentry",
        "username",
        "username",
        "home",
        "uid",
        "environ",
        "environ",
        "TelnetSessionProcessProtocol",
        "insults",
        "LoggingTelnetServerProtocol",
        "cproto",
        "HoneyPotInteractiveTelnetProtocol",
        "protocol",
        "makeConnection",
        "processprotocol",
        "processprotocol",
        "makeConnection",
        "session",
        "wrapProtocol",
        "protocol",
        "log",
        "msg",
        "format",
        "username",
        "implementer",
        "interfaces",
        "ITransport",
        "protocol",
        "ProcessProtocol",
        "sess",
        "sess",
        "data",
        "session",
        "write",
        "data",
        "err",
        "session",
        "writeExtended",
        "connection",
        "EXTENDED_DATA_STDERR",
        "err",
        "lostOutOrErrFlag",
        "session",
        "conn",
        "sendEOF",
        "session",
        "outConnectionLost",
        "reason",
        "session",
        "loseConnection",
        "reason",
        "log",
        "msg",
        "session",
        "loseConnection",
        "session",
        "transport",
        "getHost",
        "session",
        "transport",
        "getPeer",
        "data",
        "session",
        "write",
        "data",
        "seq",
        "session",
        "write",
        "join",
        "seq",
        "session",
        "loseConnection"
    ],
    "literals": [
        "\"pw_uid\"",
        "\"pw_gid\"",
        "\"pw_dir\"",
        "'/home'",
        "'LOGNAME'",
        "'USER'",
        "'HOME'",
        "'TMOUT'",
        "'1800'",
        "'PATH'",
        "'/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'",
        "'PATH'",
        "'/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games'",
        "'avatar {} logging out'",
        "\"Process ended. Telnet Session disconnected\"",
        "''"
    ],
    "variables": [
        "username",
        "server",
        "cfg",
        "pwentry",
        "uid",
        "gid",
        "home",
        "uid",
        "gid",
        "home",
        "environ",
        "avatar",
        "transportId",
        "processprotocol",
        "protocol",
        "session",
        "lostOutOrErrFlag",
        "lostOutOrErrFlag"
    ],
    "comments": [
        "Copyright (C) 2015, 2016 GoSecure Inc.",
        "required because HoneyPotBaseProtocol relies on avatar.avatar.home",
        "to be populated by HoneyPotTelnetAuthTransport after auth",
        "TODO do I need to implement connectionLost?",
        "XXX verify if HoneyPotTelnetAuthTransport's connectionLost fires otherwise",
        "we'll have to reimplement some of the stuff here",
        "def connectionLost(self, reason):",
        "pt = self.transport",
        "if pt.transport.sessionno in pt.factory.sessions:",
        "del pt.factory.sessions[pt.transport.sessionno]",
        "pt.connectionLost(reason)",
        "def lineReceived(self, line):",
        "self.transport.write(\"I received %r from you\\r\\n\" % (line,))",
        "Taken and adapted from",
        "https://github.com/twisted/twisted/blob/26ad16ab41db5f0f6d2526a891e81bbd3e260247/twisted/conch/ssh/session.py#L186",
        "FIXME probably no such thing such as buffering in Telnet protocol",
        "def connectionMade(self):",
        "if self.session.buf:",
        "self.session.write(self.session.buf)",
        "self.session.buf = None",
        "here SSH is doing signal handling, I don't think telnet supports that so",
        "I'm simply going to bail out",
        "TODO: log reason maybe?"
    ],
    "docstrings": [
        "\"\"\"\nTelnet User Session management for the Honeypot\n\n@author: Olivier Bilodeau <obilodeau@gosecure.ca>\n\"\"\"",
        "\"\"\"\n        \"\"\"",
        "\"\"\"I am both an L{IProcessProtocol} and an L{ITransport}.\n    I am a transport to the remote endpoint and a process protocol to the\n    local subsystem.\n    \"\"\"",
        "\"\"\"\n        EOF should only be sent when both STDOUT and STDERR have been closed.\n        \"\"\"",
        "\"\"\"\n        See outConnectionLost().\n        \"\"\"",
        "\"\"\"\n        Return the host from my session's transport.\n        \"\"\"",
        "\"\"\"\n        Return the peer from my session's transport.\n        \"\"\""
    ],
    "functions": [
        "connectionMade",
        "logout",
        "outReceived",
        "errReceived",
        "outConnectionLost",
        "errConnectionLost",
        "connectionLost",
        "processEnded",
        "getHost",
        "getPeer",
        "write",
        "writeSequence",
        "loseConnection"
    ],
    "classes": [
        "HoneyPotTelnetSession",
        "TelnetSessionProcessProtocol"
    ]
}