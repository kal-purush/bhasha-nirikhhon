{
    "identifiers": [
        "ts",
        "Lint",
        "Lint",
        "Lint",
        "Lint",
        "OPTION_ARRAY",
        "OPTION_GENERIC",
        "OPTION_ARRAY",
        "OPTION_GENERIC",
        "sourceFile",
        "ts",
        "Lint",
        "ArrayTypeWalker",
        "sourceFile",
        "alignWalker",
        "Lint",
        "node",
        "ts",
        "OPTION_GENERIC",
        "node",
        "Lint",
        "Rule",
        "typeName",
        "typeName",
        "node",
        "typeName",
        "node",
        "node",
        "Rule",
        "fix",
        "node",
        "node",
        "ts",
        "node",
        "OPTION_ARRAY",
        "typeName",
        "node",
        "Lint",
        "typeArgs",
        "typeArgs",
        "fix",
        "Lint",
        "Rule",
        "node",
        "node",
        "typeArgs",
        "typeArgs",
        "typeArgs",
        "typeArgs",
        "fix",
        "Lint",
        "Rule",
        "node",
        "typeStart",
        "node",
        "typeEnd",
        "node",
        "typeEnd",
        "node",
        "node",
        "Rule",
        "fix",
        "node"
    ],
    "literals": [
        "\"typescript\"",
        "\"../lint\"",
        "\"array\"",
        "\"generic\"",
        "\"array-type\"",
        "\"Requires using either 'T[]' or 'Array<T>' for arrays.\"",
        "One of the following arguments must be provided:\n\n            * \\`\"${OPTION_ARRAY}\"\\` enforces use of 'T[]'.\n            * \\`\"${OPTION_GENERIC}\"\\` enforces use of 'Array<T>'.",
        "\"string\"",
        "\"[true, array]\"",
        "\"[true, generic]\"",
        "\"style\"",
        "\"Array type using 'Array<T>' is forbidden. Use 'T[]' instead.\"",
        "\"Array type using 'T[]' is forbidden. Use 'Array<T>' instead.\"",
        "\"Array<\"",
        "\">\"",
        "\"Array\"",
        "\"any[]\"",
        "\"[]\""
    ],
    "variables": [
        "OPTION_ARRAY",
        "OPTION_GENERIC",
        "alignWalker",
        "typeName",
        "fix",
        "typeName",
        "typeArgs",
        "fix",
        "typeStart",
        "typeEnd"
    ],
    "comments": [
        "tslint:disable:object-literal-sort-keys",
        "tslint:enable:object-literal-sort-keys",
        "Delete the square brackets and replace with an angle bracket",
        "Create an 'any' array",
        "Delete Array and the first angle bracket",
        "Delete the last angle bracket and replace with square brackets"
    ],
    "docstrings": [],
    "functions": [
        "apply",
        "visitArrayType",
        "visitTypeReference"
    ],
    "classes": [
        "Rule",
        "ArrayTypeWalker"
    ]
}