{
    "identifiers": [
        "grunt",
        "require",
        "grunt",
        "require",
        "require",
        "require",
        "grunt",
        "grunt",
        "packageJson",
        "versions",
        "versions",
        "versions",
        "versions",
        "packageJson",
        "major",
        "minor",
        "patch",
        "major",
        "minor",
        "tagPrefix",
        "preVersion",
        "tagPrefix",
        "patchVersion",
        "tagPrefix",
        "minorVersion",
        "minorVersion",
        "grunt",
        "grunt",
        "packageJson",
        "basePath",
        "dir",
        "origin",
        "origin",
        "master",
        "origin",
        "maintenanceBranch",
        "origin",
        "origin",
        "preTag",
        "origin",
        "patchTag",
        "origin",
        "minorTag",
        "origin",
        "latestTag",
        "preTag",
        "patchTag",
        "minorTag",
        "latestTag",
        "origin",
        "origin",
        "master",
        "maintenanceBranch",
        "master",
        "grunt",
        "config",
        "grunt",
        "releasePre",
        "grunt",
        "releasePatch",
        "grunt",
        "releaseMinor",
        "grunt",
        "versionsString",
        "versionsString",
        "versionsString",
        "latestTag",
        "filteredDistincts",
        "v",
        "semver",
        "v",
        "v",
        "semver",
        "v",
        "filteredDistincts",
        "v",
        "filteredDistincts",
        "v",
        "filteredDistincts",
        "async",
        "next",
        "cmd",
        "latestTag",
        "grunt",
        "latestTag",
        "grunt",
        "cmd",
        "exec",
        "cmd",
        "err",
        "stdout",
        "stdout",
        "stdout",
        "err",
        "err",
        "grunt",
        "latestTag",
        "err",
        "grunt",
        "latestTag",
        "stdout",
        "next",
        "err",
        "stdout",
        "stdout",
        "next",
        "stdout",
        "stdout",
        "cmd",
        "stdout",
        "grunt",
        "stdout",
        "grunt",
        "cmd",
        "exec",
        "cmd",
        "next",
        "stdout",
        "stderr",
        "next",
        "grunt",
        "latestTag",
        "grunt",
        "stdout",
        "scrubTags",
        "stdout",
        "semver",
        "mostRecentTagAtLatest",
        "next",
        "mostRecentTagAtLatest",
        "grunt",
        "latestTag",
        "next",
        "mostRecentTagAtLatest",
        "next",
        "semver",
        "patchTag",
        "mostRecentTagAtLatest",
        "create",
        "grunt",
        "patchTag",
        "mostRecentTagAtLatest",
        "grunt",
        "patchTag",
        "mostRecentTagAtLatest",
        "next",
        "create",
        "err",
        "create",
        "err",
        "create",
        "err",
        "err",
        "grunt",
        "latestTag",
        "done",
        "grunt",
        "err",
        "done",
        "create",
        "grunt",
        "latestTag",
        "patchTag",
        "grunt",
        "grunt",
        "latestTag",
        "done",
        "s",
        "config",
        "config",
        "s",
        "grunt",
        "s",
        "config",
        "s",
        "s",
        "grunt",
        "grunt",
        "name",
        "name",
        "tasks",
        "max",
        "v",
        "max",
        "v",
        "usageMax",
        "tasks",
        "taskName",
        "grunt",
        "taskName",
        "taskName",
        "pad",
        "usageMax",
        "name",
        "task"
    ],
    "literals": [
        "'use strict'",
        "'load-grunt-tasks'",
        "'grunt-*'",
        "'./package.json'",
        "'devDependencies'",
        "'semver'",
        "'child_process'",
        "'async'",
        "'basePath'",
        "'./'",
        "'package.json'",
        "'.'",
        "'.'",
        "'v'",
        "'latest'",
        "'v'",
        "'.x'",
        "'remote'",
        "'origin'",
        "'source-branch'",
        "'master'",
        "'shell:confirmOnMasterBranch'",
        "'shell:confirmNoUntrackedFiles'",
        "'shell:confirmNoModifiedFiles'",
        "'gitfetch:tags'",
        "'gitpull:origin'",
        "'bump:minor'",
        "'gittag:patch'",
        "'gittag:minor'",
        "'gittag:latest'",
        "'gitcheckout:maintenance'",
        "'bump:prepatch'",
        "'gitpush:maintenance'",
        "'gitcheckout:master'",
        "'bump:preminor'",
        "'gitpush:master'",
        "'gitpush:patchTag'",
        "'gitpush:minorTag'",
        "'gitpush:latestTag'",
        "'shell:confirmOnMaintenanceBranch'",
        "'shell:confirmNoUntrackedFiles'",
        "'shell:confirmNoModifiedFiles'",
        "'gitfetch:tags'",
        "'gitpull:origin'",
        "'bump:patch'",
        "'gittag:patch'",
        "'gittag:minor'",
        "'bump:prepatch'",
        "'gitpush:maintenance'",
        "'gitpush:patchTag'",
        "'gitpush:minorTag'",
        "'advanceLatestTagIfNecessary'",
        "'shell:confirmNoUntrackedFiles'",
        "'shell:confirmNoModifiedFiles'",
        "'gitpull:origin'",
        "'gittag:pre'",
        "'bump:prerelease'",
        "'gitpush:current'",
        "'gitpush:preTag'",
        "'./package.json'",
        "'Rev to v%VERSION%'",
        "'-a'",
        "'pre'",
        "\"[ $(git status | head -n 1 | awk '{ print $3 }') == '\"",
        "\"' ]\"",
        "\"[[ $(git status | head -n 1 | awk '{ print $3 }') =~ ^v[0-9]+\\\\.[0-9]+\\\\.x$ ]]\"",
        "'[ -z \"$(git status -s)\" ]'",
        "'git diff --cached --exit-code --no-patch'",
        "'release-pre'",
        "'Creates prerelease tags'",
        "'release-patch'",
        "'Creates patch-level tag & advances minor tag, and, optionally, the latest tag'",
        "'release-minor'",
        "'Creates maintenance branch, patch- & minor-level tags, and advances latest tag'",
        "'advanceLatestTagIfNecessary'",
        "'Advances tag \"latest\" if necessary'",
        "''",
        "'\\\\s*'",
        "' '",
        "' '",
        "' '",
        "''",
        "'git rev-list -n 1 '",
        "'finding commit that latest tag \"'",
        "'\" points to with:'",
        "''",
        "'no latest tag \"'",
        "'\" found'",
        "'create'",
        "'latest tag \"'",
        "'\" points to commit '",
        "''",
        "'git tag --points-at '",
        "'finding all tags that point to commit '",
        "' with:'",
        "'all tags that point to latest tag \"'",
        "'\":'",
        "' '",
        "'WARN: erroneous latest tag \"'",
        "'\": no other tags found at its commit'",
        "'skip'",
        "'new release '",
        "' is NEWER than latest release '",
        "'new release '",
        "' is OLDER than latest release '",
        "'create'",
        "'skip'",
        "'NOT advancing erroneous latest tag \"'",
        "'\"'",
        "'advancing latest tag \"'",
        "'\" to same commit as '",
        "'gittag:latest'",
        "'gitpush:latestTag'",
        "'NOT advancing latest tag \"'",
        "'\"'",
        "'shell:'",
        "'help'",
        "'Prints this help message.'",
        "'\\n  Usage: grunt command ... # Issues grunt command(s).\\n '",
        "'  A management script for running a grunt tasks.\\n'",
        "'  Commands:\\n'",
        "'shell'",
        "' '",
        "'    '",
        "'  '"
    ],
    "variables": [
        "semver",
        "exec",
        "async",
        "dir",
        "basePath",
        "packageJson",
        "versions",
        "major",
        "minor",
        "patch",
        "pre",
        "preVersion",
        "patchVersion",
        "minorVersion",
        "tagPrefix",
        "preTag",
        "patchTag",
        "minorTag",
        "latestTag",
        "maintenanceBranch",
        "origin",
        "master",
        "releaseMinor",
        "releasePatch",
        "releasePre",
        "config",
        "done",
        "scrubTags",
        "cmd",
        "mostRecentTagAtLatest",
        "create",
        "tasks",
        "usageMax",
        "pad",
        "task",
        "name"
    ],
    "comments": [
        "creates & pushes latestTag only if necessary",
        "remove latestTag",
        "normalize whitespace",
        "only keep non-prerelease valid semver versions (of the form a.b.c)",
        "returns commit that latestTag points to",
        "returns all tags that point to commit",
        "get the latest version",
        "create latestTag to point at same commit as patchTag"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}