{
    "identifiers": [
        "GraphQL",
        "Validation",
        "Rules",
        "GraphQL",
        "Tests",
        "Validation",
        "ValidationTestBase",
        "NoFragmentCycles",
        "ValidationSchema",
        "Fact",
        "ShouldPassRule",
        "Fact",
        "ShouldPassRule",
        "Fact",
        "ShouldPassRule",
        "Fact",
        "ShouldPassRule",
        "Fact",
        "ShouldPassRule",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "Rule",
        "CycleErrorMessage",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "Rule",
        "CycleErrorMessage",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "Rule",
        "CycleErrorMessage",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "e",
        "Loc",
        "e",
        "Loc",
        "e",
        "Loc",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "e",
        "Loc",
        "e",
        "Loc",
        "e",
        "Loc",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "Fact",
        "ShouldFailRule",
        "_",
        "Query",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc",
        "e",
        "Loc",
        "_",
        "e",
        "Message",
        "Rule",
        "CycleErrorMessage",
        "e",
        "Loc",
        "e",
        "Loc"
    ],
    "literals": [
        "\"fragA\"",
        "\"fragA\"",
        "\"fragA\"",
        "\"fragA\"",
        "\"fragB\"",
        "\"fragB\"",
        "\"fragA\"",
        "\"fragA\"",
        "\"fragB\"",
        "\"fragA\"",
        "\"fragB\"",
        "\"fragC\"",
        "\"fragO\"",
        "\"fragP\"",
        "\"fragO\"",
        "\"fragP\"",
        "\"fragX\"",
        "\"fragY\"",
        "\"fragZ\"",
        "\"fragA\"",
        "\"fragB\"",
        "\"fragA\"",
        "\"fragC\"",
        "\"fragA\"",
        "\"fragC\"",
        "\"fragC\"",
        "\"fragB\"",
        "\"fragB\"",
        "\"fragA\"",
        "\"fragB\"",
        "\"fragC\"",
        "\"fragB\"",
        "\"fragC\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "single_reference_is_valid",
        "spread_twice_is_not_circular",
        "spread_twice_indirectly_is_not_circular",
        "double_spread_within_abstract_types",
        "does_not_false_positive_on_unknown_fragment",
        "spreading_recursively_within_fields_fails",
        "no_spreading_itself_directly",
        "no_spreading_itself_directly_within_inline_fragment",
        "no_spreading_itself_indirectly",
        "no_spreading_itself_indirectly_reports_opposite_order",
        "no_spreading_itself_indirectly_within_inline_fragment",
        "no_spreading_itself_deeply",
        "no_spreading_itself_deeply_two_paths",
        "no_spreading_itself_deeply_two_paths_alt_traverse_order",
        "no_spreading_itself_deeply_and_immediately"
    ],
    "classes": [
        "NoFragmentCyclesTests"
    ]
}