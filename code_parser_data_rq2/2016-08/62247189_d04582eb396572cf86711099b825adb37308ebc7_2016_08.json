{
    "identifiers": [
        "math",
        "random",
        "x",
        "len",
        "x",
        "x",
        "len",
        "x",
        "x",
        "x",
        "math",
        "ceil",
        "len",
        "x",
        "i",
        "xrange",
        "len",
        "x",
        "width",
        "i",
        "width",
        "x",
        "k",
        "x",
        "i",
        "sample_range",
        "record",
        "sample_range",
        "i",
        "half_sample_mode_sorted",
        "x",
        "recordholder",
        "recordholder",
        "width",
        "x",
        "half_sample_mode_sorted",
        "sorted",
        "x",
        "numiters",
        "n",
        "print_failure",
        "math",
        "ceil",
        "math",
        "sqrt",
        "numiters",
        "numiters",
        "numiters_outer_stage",
        "i",
        "xrange",
        "numiters_outer_stage",
        "random",
        "random",
        "x",
        "xrange",
        "n",
        "half_sample_mode",
        "test_vector",
        "j",
        "xrange",
        "numiters_inner_stage",
        "random",
        "randint",
        "n",
        "test_vector",
        "k",
        "random",
        "random",
        "half_sample_mode",
        "test_vector",
        "test_vector",
        "k",
        "orig_number",
        "new_mode",
        "original_mode",
        "test_vector",
        "k",
        "orig_number",
        "new_mode",
        "original_mode",
        "was_ever_mono_failure",
        "mono_failure",
        "mono_failure",
        "print_failure",
        "orig_number",
        "test_vector",
        "k",
        "original_mode",
        "new_mode",
        "orig_number",
        "was_ever_mono_failure",
        "ratings",
        "half_sample_mode",
        "x",
        "x",
        "ratings",
        "simple_monotonicity_check",
        "mode_ratings"
    ],
    "literals": [
        "\"inf\"",
        "\"Monotonicity failure!\"",
        "\"We changed %.2f into %.2f and then the HSM changed from %.2f to %.2f\"",
        "\"Doing pizza example with 9 voters...\""
    ],
    "variables": [
        "width",
        "record",
        "recordholder",
        "k",
        "sample_range",
        "record",
        "recordholder",
        "numiters_outer_stage",
        "numiters_inner_stage",
        "was_ever_mono_failure",
        "test_vector",
        "original_mode",
        "k",
        "orig_number",
        "test_vector",
        "k",
        "new_mode",
        "mono_failure",
        "was_ever_mono_failure",
        "test_vector",
        "k"
    ],
    "comments": [
        "Determine the half-sample mode (0.5 breakdown point estimate of the mode)",
        "See \"On a Fast, Robust Estimator of the Mode\", Bickel et al.",
        "x is the input array. It must be sorted in ascending order.",
        "N = length(x), x contains x_1...x_N",
        "if N = 1, return x_1",
        "if N = 2, return (x_1+x_2)/2.0",
        "Otherwise, find i, k, so that k-i is the least integer greater",
        "than N/2, and x_k-x_i is minimized. Recurse on x_i...x_k.",
        "(Tiebreak to highest??)",
        "Off by one is tricky!",
        "Tiebreak in favor of greatest score",
        "Returns true if the method seems to be monotone, false otherwise.",
        "There are two stages: first one, we create a test vector.",
        "Second one, we try to increment or decrement some number and",
        "check if it makes the HSM decrease or increase respectively.",
        "To evenly share the load, each loop has close to sqrt(numiters)",
        "iterations for a total close to numiters.",
        "Ratings is a list of c entries (one per candidate), each of which is a",
        "list of v entries (number of voters) giving their ratings. Output is",
        "a list of scores, the max being the winner's.",
        "Pretty easy.",
        "The method isn't monotone.",
        "Not so surprising, given that the mode isn't monotone either!",
        "Pizza example (http://rangevoting.org/MajCrit.html):",
        "5: X=99, Y=50, Z=0",
        "4: X=0,  Y=99, Z=10",
        "X",
        "Y",
        "Z"
    ],
    "docstrings": [],
    "functions": [
        "half_sample_mode_sorted",
        "half_sample_mode",
        "simple_monotonicity_check",
        "mode_ratings"
    ],
    "classes": []
}