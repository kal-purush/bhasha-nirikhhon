{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "StarMathLib",
        "TVGL",
        "Clipper",
        "Path",
        "Point",
        "Paths",
        "Point",
        "DoublePoint",
        "x",
        "y",
        "X",
        "x",
        "Y",
        "y",
        "DoublePoint",
        "dp",
        "X",
        "dp",
        "X",
        "Y",
        "dp",
        "Y",
        "Point",
        "ip",
        "X",
        "ip",
        "X",
        "Y",
        "ip",
        "Y",
        "PolyNode",
        "PolyNode",
        "PolyNode",
        "PolyTree",
        "Clear",
        "i",
        "MAllPolys",
        "Count",
        "i",
        "MAllPolys",
        "i",
        "MAllPolys",
        "Clear",
        "MChilds",
        "Clear",
        "MChilds",
        "Count",
        "MChilds",
        "MAllPolys",
        "Count",
        "result",
        "MChilds",
        "MAllPolys",
        "result",
        "result",
        "Path",
        "PolyNode",
        "PolyNode",
        "node",
        "result",
        "result",
        "node",
        "node",
        "MParent",
        "result",
        "MChilds",
        "Count",
        "MPolygon",
        "PolyNode",
        "child",
        "MChilds",
        "Count",
        "MChilds",
        "Add",
        "child",
        "child",
        "MParent",
        "child",
        "MIndex",
        "cnt",
        "MChilds",
        "Count",
        "MChilds",
        "GetNextSiblingUp",
        "MParent",
        "MIndex",
        "MParent",
        "MChilds",
        "Count",
        "MParent",
        "GetNextSiblingUp",
        "MParent",
        "MChilds",
        "MIndex",
        "PolyNode",
        "MChilds",
        "MParent",
        "IsHoleNode",
        "IntRect",
        "l",
        "t",
        "r",
        "b",
        "Left",
        "l",
        "Top",
        "t",
        "Right",
        "r",
        "Bottom",
        "b",
        "IntRect",
        "ir",
        "Left",
        "ir",
        "Left",
        "Top",
        "ir",
        "Top",
        "Right",
        "ir",
        "Right",
        "Bottom",
        "ir",
        "Bottom",
        "ClipType",
        "Intersection",
        "Union",
        "Difference",
        "Xor",
        "PolyType",
        "Subject",
        "Clip",
        "PolyFillType",
        "EvenOdd",
        "NonZero",
        "Positive",
        "Negative",
        "JoinType",
        "Square",
        "Round",
        "Miter",
        "EndType",
        "ClosedPolygon",
        "ClosedLine",
        "OpenButt",
        "OpenSquare",
        "OpenRound",
        "EdgeSide",
        "Left",
        "Right",
        "Direction",
        "RightToLeft",
        "LeftToRight",
        "Bot",
        "Point",
        "Curr",
        "Point",
        "Top",
        "Point",
        "Delta",
        "Point",
        "IComparer",
        "IntersectNode",
        "IntersectNode",
        "node1",
        "IntersectNode",
        "node2",
        "node2",
        "Pt",
        "Y",
        "node1",
        "Pt",
        "Y",
        "i",
        "i",
        "StarMath",
        "EqualityTolerance",
        "val",
        "val",
        "Tolerance",
        "val",
        "Tolerance",
        "TEdge",
        "TEdge",
        "TEdge",
        "e",
        "e",
        "Delta",
        "Y",
        "IsNegligible",
        "Point",
        "pt",
        "OutPt",
        "pp",
        "pp2",
        "Pt",
        "pt",
        "pp2",
        "pp2",
        "Next",
        "pp2",
        "pp",
        "Point",
        "pt",
        "Point",
        "linePt1",
        "Point",
        "linePt2",
        "pt",
        "X",
        "IsPracticallySame",
        "linePt1",
        "X",
        "pt",
        "Y",
        "IsPracticallySame",
        "linePt1",
        "Y",
        "pt",
        "X",
        "IsPracticallySame",
        "linePt2",
        "X",
        "pt",
        "Y",
        "IsPracticallySame",
        "linePt2",
        "Y",
        "pt",
        "X",
        "linePt1",
        "X",
        "pt",
        "X",
        "linePt2",
        "X",
        "pt",
        "Y",
        "linePt1",
        "Y",
        "pt",
        "Y",
        "linePt2",
        "Y",
        "pt",
        "X",
        "linePt1",
        "X",
        "linePt2",
        "Y",
        "linePt1",
        "Y",
        "IsPracticallySame",
        "linePt2",
        "X",
        "linePt1",
        "X",
        "pt",
        "Y",
        "linePt1",
        "Y",
        "Point",
        "pt",
        "OutPt",
        "pp",
        "PointOnLineSegment",
        "pt",
        "pp2",
        "Pt",
        "pp2",
        "Next",
        "Pt",
        "pp2",
        "pp2",
        "Next",
        "pp2",
        "pp",
        "TEdge",
        "e1",
        "TEdge",
        "e2",
        "e1",
        "Delta",
        "Y",
        "e2",
        "Delta",
        "X",
        "IsPracticallySame",
        "e1",
        "Delta",
        "X",
        "e2",
        "Delta",
        "Y",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "Point",
        "pt3",
        "pt1",
        "Y",
        "pt2",
        "Y",
        "pt2",
        "X",
        "pt3",
        "X",
        "pt1",
        "X",
        "pt2",
        "X",
        "pt2",
        "Y",
        "pt3",
        "Y",
        "IsNegligible",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "Point",
        "pt3",
        "Point",
        "pt4",
        "pt1",
        "Y",
        "pt2",
        "Y",
        "pt3",
        "X",
        "pt4",
        "X",
        "pt1",
        "X",
        "pt2",
        "X",
        "pt3",
        "Y",
        "pt4",
        "Y",
        "IsNegligible",
        "MMinimaList",
        "MCurrentLm",
        "MUseFullRange",
        "MHasOpenPaths",
        "DisposeLocalMinimaList",
        "t",
        "MEdges",
        "j",
        "t",
        "Count",
        "j",
        "t",
        "j",
        "t",
        "Clear",
        "MEdges",
        "Clear",
        "MUseFullRange",
        "MHasOpenPaths",
        "MMinimaList",
        "MMinimaList",
        "Next",
        "MMinimaList",
        "MMinimaList",
        "tmpLm",
        "MCurrentLm",
        "TEdge",
        "e",
        "TEdge",
        "eNext",
        "TEdge",
        "ePrev",
        "Point",
        "pt",
        "e",
        "Next",
        "eNext",
        "e",
        "Prev",
        "ePrev",
        "e",
        "Curr",
        "pt",
        "e",
        "OutIdx",
        "Unassigned",
        "TEdge",
        "e",
        "PolyType",
        "polyType",
        "e",
        "Curr",
        "Y",
        "e",
        "Next",
        "Curr",
        "Y",
        "e",
        "Bot",
        "e",
        "Curr",
        "e",
        "Top",
        "e",
        "Next",
        "Curr",
        "e",
        "Top",
        "e",
        "Curr",
        "e",
        "Bot",
        "e",
        "Next",
        "Curr",
        "SetDx",
        "e",
        "e",
        "PolyTyp",
        "polyType",
        "TEdge",
        "e",
        "e",
        "Bot",
        "e",
        "Prev",
        "Bot",
        "e",
        "Curr",
        "e",
        "Top",
        "e",
        "e",
        "Next",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "Prev",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "Prev",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "e",
        "Prev",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "e",
        "Next",
        "e",
        "Top",
        "Y",
        "IsPracticallySame",
        "e",
        "Prev",
        "Bot",
        "Y",
        "e2",
        "Prev",
        "Bot",
        "X",
        "e",
        "Bot",
        "X",
        "e",
        "e2",
        "e",
        "TEdge",
        "e",
        "leftBoundIsForward",
        "result",
        "OutIdx",
        "Skip",
        "e",
        "result",
        "leftBoundIsForward",
        "e",
        "Top",
        "Y",
        "IsPracticallySame",
        "e",
        "Next",
        "Bot",
        "Y",
        "e",
        "e",
        "Next",
        "e",
        "result",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "e",
        "Prev",
        "e",
        "Top",
        "Y",
        "IsPracticallySame",
        "e",
        "Prev",
        "Bot",
        "Y",
        "e",
        "e",
        "Prev",
        "e",
        "result",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "e",
        "Next",
        "e",
        "result",
        "result",
        "leftBoundIsForward",
        "e",
        "Next",
        "e",
        "Prev",
        "e",
        "leftBoundIsForward",
        "result",
        "Next",
        "result",
        "Prev",
        "LocalMinima",
        "Next",
        "Y",
        "e",
        "Bot",
        "Y",
        "LeftBound",
        "RightBound",
        "e",
        "e",
        "WindDelta",
        "result",
        "ProcessBound",
        "e",
        "leftBoundIsForward",
        "InsertLocalMinima",
        "locMin",
        "result",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "eStart",
        "leftBoundIsForward",
        "e",
        "Prev",
        "e",
        "Next",
        "eStart",
        "OutIdx",
        "Skip",
        "eStart",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "eStart",
        "Bot",
        "X",
        "IsPracticallySame",
        "e",
        "Bot",
        "X",
        "eStart",
        "Top",
        "X",
        "IsPracticallySame",
        "e",
        "Bot",
        "X",
        "ReverseHorizontal",
        "e",
        "eStart",
        "Bot",
        "X",
        "IsPracticallySame",
        "e",
        "Bot",
        "X",
        "ReverseHorizontal",
        "e",
        "eStart",
        "e",
        "leftBoundIsForward",
        "result",
        "Top",
        "Y",
        "IsPracticallySame",
        "result",
        "Next",
        "Bot",
        "Y",
        "result",
        "Next",
        "OutIdx",
        "Skip",
        "result",
        "result",
        "Next",
        "result",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "result",
        "Next",
        "OutIdx",
        "Skip",
        "horz",
        "result",
        "horz",
        "Prev",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "horz",
        "horz",
        "Prev",
        "horz",
        "Prev",
        "Top",
        "X",
        "IsPracticallySame",
        "result",
        "Next",
        "Top",
        "X",
        "horz",
        "Prev",
        "Top",
        "X",
        "result",
        "Next",
        "Top",
        "X",
        "result",
        "horz",
        "Prev",
        "e",
        "result",
        "e",
        "NextInLml",
        "e",
        "Next",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "eStart",
        "e",
        "Bot",
        "X",
        "IsPracticallySame",
        "e",
        "Prev",
        "Top",
        "X",
        "ReverseHorizontal",
        "e",
        "e",
        "e",
        "Next",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "eStart",
        "e",
        "Bot",
        "X",
        "IsPracticallySame",
        "e",
        "Prev",
        "Top",
        "X",
        "ReverseHorizontal",
        "e",
        "result",
        "result",
        "Next",
        "result",
        "Top",
        "Y",
        "IsPracticallySame",
        "result",
        "Prev",
        "Bot",
        "Y",
        "result",
        "Prev",
        "OutIdx",
        "Skip",
        "result",
        "result",
        "Prev",
        "result",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "result",
        "Prev",
        "OutIdx",
        "Skip",
        "horz",
        "result",
        "horz",
        "Next",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "horz",
        "horz",
        "Next",
        "horz",
        "Next",
        "Top",
        "X",
        "IsPracticallySame",
        "result",
        "Prev",
        "Top",
        "X",
        "result",
        "horz",
        "Next",
        "horz",
        "Next",
        "Top",
        "X",
        "result",
        "Prev",
        "Top",
        "X",
        "result",
        "horz",
        "Next",
        "e",
        "result",
        "e",
        "NextInLml",
        "e",
        "Prev",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "eStart",
        "e",
        "Bot",
        "X",
        "IsPracticallySame",
        "e",
        "Next",
        "Top",
        "X",
        "ReverseHorizontal",
        "e",
        "e",
        "e",
        "Prev",
        "e",
        "Dx",
        "IsPracticallySame",
        "Horizontal",
        "e",
        "eStart",
        "e",
        "Bot",
        "X",
        "IsPracticallySame",
        "e",
        "Next",
        "Top",
        "X",
        "ReverseHorizontal",
        "e",
        "result",
        "result",
        "Prev",
        "result",
        "Path",
        "pg",
        "PolyType",
        "polyType",
        "closed",
        "closed",
        "polyType",
        "PolyType",
        "Clip",
        "ClipperException",
        "pg",
        "Count",
        "closed",
        "highI",
        "pg",
        "highI",
        "pg",
        "highI",
        "highI",
        "pg",
        "highI",
        "pg",
        "highI",
        "highI",
        "closed",
        "highI",
        "closed",
        "highI",
        "TEdge",
        "highI",
        "i",
        "highI",
        "i",
        "edges",
        "Add",
        "TEdge",
        "edges",
        "Curr",
        "pg",
        "InitEdge",
        "edges",
        "edges",
        "edges",
        "highI",
        "pg",
        "InitEdge",
        "edges",
        "highI",
        "edges",
        "edges",
        "highI",
        "pg",
        "highI",
        "highI",
        "i",
        "i",
        "InitEdge",
        "edges",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "pg",
        "i",
        "edges",
        "edge",
        "Curr",
        "edge",
        "Next",
        "Curr",
        "closed",
        "edge",
        "Next",
        "eStart",
        "edge",
        "edge",
        "Next",
        "edge",
        "eStart",
        "eStart",
        "edge",
        "Next",
        "edge",
        "RemoveEdge",
        "edge",
        "eLoopStop",
        "edge",
        "edge",
        "Prev",
        "edge",
        "Next",
        "closed",
        "SlopesEqual",
        "edge",
        "Prev",
        "Curr",
        "edge",
        "Curr",
        "edge",
        "Next",
        "Curr",
        "PreserveCollinear",
        "Pt2IsBetweenPt1AndPt3",
        "edge",
        "Prev",
        "Curr",
        "edge",
        "Curr",
        "edge",
        "Next",
        "Curr",
        "edge",
        "eStart",
        "eStart",
        "edge",
        "Next",
        "edge",
        "RemoveEdge",
        "edge",
        "edge",
        "edge",
        "Prev",
        "eLoopStop",
        "edge",
        "edge",
        "edge",
        "Next",
        "edge",
        "eLoopStop",
        "closed",
        "edge",
        "Next",
        "eStart",
        "closed",
        "edge",
        "edge",
        "Next",
        "closed",
        "edge",
        "Prev",
        "edge",
        "Next",
        "closed",
        "MHasOpenPaths",
        "eStart",
        "Prev",
        "OutIdx",
        "Skip",
        "edge",
        "eStart",
        "InitEdge2",
        "edge",
        "polyType",
        "edge",
        "edge",
        "Next",
        "isFlat",
        "edge",
        "Curr",
        "Y",
        "IsPracticallySame",
        "eStart",
        "Curr",
        "Y",
        "isFlat",
        "edge",
        "eStart",
        "isFlat",
        "closed",
        "edge",
        "Prev",
        "OutIdx",
        "Skip",
        "edge",
        "Prev",
        "Bot",
        "X",
        "edge",
        "Prev",
        "Top",
        "X",
        "ReverseHorizontal",
        "edge",
        "Prev",
        "LocalMinima",
        "Next",
        "Y",
        "edge",
        "Bot",
        "Y",
        "LeftBound",
        "RightBound",
        "edge",
        "locMin",
        "RightBound",
        "Side",
        "EdgeSide",
        "Right",
        "locMin",
        "RightBound",
        "WindDelta",
        "edge",
        "Next",
        "OutIdx",
        "Skip",
        "edge",
        "NextInLml",
        "edge",
        "Next",
        "edge",
        "Bot",
        "X",
        "IsPracticallySame",
        "edge",
        "Prev",
        "Top",
        "X",
        "ReverseHorizontal",
        "edge",
        "edge",
        "edge",
        "Next",
        "InsertLocalMinima",
        "locMin",
        "MEdges",
        "Add",
        "edges",
        "MEdges",
        "Add",
        "edges",
        "edge",
        "Prev",
        "Bot",
        "edge",
        "Prev",
        "Top",
        "edge",
        "edge",
        "Next",
        "edge",
        "FindNextLocMin",
        "edge",
        "edge",
        "eMin",
        "eMin",
        "eMin",
        "edge",
        "LocalMinima",
        "Next",
        "Y",
        "edge",
        "Bot",
        "Y",
        "edge",
        "Dx",
        "edge",
        "Prev",
        "Dx",
        "locMin",
        "LeftBound",
        "edge",
        "Prev",
        "locMin",
        "RightBound",
        "edge",
        "leftBoundIsForward",
        "locMin",
        "LeftBound",
        "edge",
        "locMin",
        "RightBound",
        "edge",
        "Prev",
        "leftBoundIsForward",
        "locMin",
        "LeftBound",
        "Side",
        "EdgeSide",
        "Left",
        "locMin",
        "RightBound",
        "Side",
        "EdgeSide",
        "Right",
        "closed",
        "locMin",
        "LeftBound",
        "WindDelta",
        "locMin",
        "LeftBound",
        "Next",
        "locMin",
        "RightBound",
        "locMin",
        "LeftBound",
        "WindDelta",
        "locMin",
        "LeftBound",
        "WindDelta",
        "locMin",
        "RightBound",
        "WindDelta",
        "locMin",
        "LeftBound",
        "WindDelta",
        "edge",
        "ProcessBound",
        "locMin",
        "LeftBound",
        "leftBoundIsForward",
        "edge",
        "OutIdx",
        "Skip",
        "edge",
        "ProcessBound",
        "edge",
        "leftBoundIsForward",
        "ProcessBound",
        "locMin",
        "RightBound",
        "leftBoundIsForward",
        "edge2",
        "OutIdx",
        "Skip",
        "edge2",
        "ProcessBound",
        "edge2",
        "leftBoundIsForward",
        "locMin",
        "LeftBound",
        "OutIdx",
        "Skip",
        "locMin",
        "LeftBound",
        "locMin",
        "RightBound",
        "OutIdx",
        "Skip",
        "locMin",
        "RightBound",
        "InsertLocalMinima",
        "locMin",
        "leftBoundIsForward",
        "edge",
        "edge2",
        "Paths",
        "ppg",
        "PolyType",
        "polyType",
        "closed",
        "i",
        "ppg",
        "Count",
        "i",
        "AddPath",
        "ppg",
        "i",
        "polyType",
        "closed",
        "result",
        "result",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "Point",
        "pt3",
        "pt1",
        "pt3",
        "pt1",
        "pt2",
        "pt3",
        "pt2",
        "pt1",
        "X",
        "IsPracticallySame",
        "pt3",
        "X",
        "pt2",
        "X",
        "pt1",
        "X",
        "pt2",
        "X",
        "pt3",
        "X",
        "pt2",
        "Y",
        "pt1",
        "Y",
        "pt2",
        "Y",
        "pt3",
        "Y",
        "TEdge",
        "e",
        "e",
        "Prev",
        "Next",
        "e",
        "Next",
        "e",
        "Next",
        "Prev",
        "e",
        "Prev",
        "e",
        "Next",
        "e",
        "Prev",
        "result",
        "TEdge",
        "e",
        "e",
        "Top",
        "X",
        "e",
        "Bot",
        "X",
        "e",
        "Top",
        "Y",
        "e",
        "Bot",
        "Y",
        "e",
        "Delta",
        "Point",
        "deltaX",
        "deltaY",
        "e",
        "Delta",
        "Y",
        "IsNegligible",
        "e",
        "Dx",
        "Horizontal",
        "e",
        "Dx",
        "e",
        "Delta",
        "X",
        "e",
        "Delta",
        "Y",
        "LocalMinima",
        "newLm",
        "MMinimaList",
        "MMinimaList",
        "newLm",
        "newLm",
        "Y",
        "MMinimaList",
        "Y",
        "newLm",
        "Next",
        "MMinimaList",
        "MMinimaList",
        "newLm",
        "tmpLm",
        "Next",
        "newLm",
        "Y",
        "tmpLm",
        "Next",
        "Y",
        "tmpLm",
        "tmpLm",
        "Next",
        "newLm",
        "Next",
        "tmpLm",
        "Next",
        "tmpLm",
        "Next",
        "newLm",
        "MCurrentLm",
        "MCurrentLm",
        "Next",
        "TEdge",
        "edge",
        "edge",
        "Top",
        "X",
        "edge",
        "Top",
        "Point",
        "edge",
        "Bot",
        "X",
        "edge",
        "Top",
        "Y",
        "edge",
        "Bot",
        "Point",
        "temp",
        "edge",
        "Bot",
        "Y",
        "MCurrentLm",
        "MMinimaList",
        "MCurrentLm",
        "localMinima",
        "localMinima",
        "LeftBound",
        "edge",
        "edge",
        "Curr",
        "edge",
        "Bot",
        "edge",
        "Side",
        "EdgeSide",
        "Left",
        "edge",
        "OutIdx",
        "Unassigned",
        "edge",
        "localMinima",
        "RightBound",
        "edge",
        "edge",
        "Curr",
        "edge",
        "Bot",
        "edge",
        "Side",
        "EdgeSide",
        "Right",
        "edge",
        "OutIdx",
        "Unassigned",
        "localMinima",
        "localMinima",
        "Next",
        "Paths",
        "paths",
        "paths",
        "Count",
        "i",
        "cnt",
        "paths",
        "i",
        "Count",
        "i",
        "i",
        "cnt",
        "IntRect",
        "IntRect",
        "Left",
        "paths",
        "i",
        "X",
        "result",
        "Right",
        "result",
        "Left",
        "result",
        "Top",
        "paths",
        "i",
        "Y",
        "result",
        "Bottom",
        "result",
        "Top",
        "i",
        "cnt",
        "i",
        "j",
        "paths",
        "i",
        "Count",
        "j",
        "paths",
        "i",
        "j",
        "X",
        "result",
        "Left",
        "result",
        "Left",
        "paths",
        "i",
        "j",
        "X",
        "paths",
        "i",
        "j",
        "X",
        "result",
        "Right",
        "result",
        "Right",
        "paths",
        "i",
        "j",
        "X",
        "paths",
        "i",
        "j",
        "Y",
        "result",
        "Top",
        "result",
        "Top",
        "paths",
        "i",
        "j",
        "Y",
        "paths",
        "i",
        "j",
        "Y",
        "result",
        "Bottom",
        "result",
        "Bottom",
        "paths",
        "i",
        "j",
        "Y",
        "result",
        "ClipperBase",
        "OutRec",
        "IntersectNode",
        "IComparer",
        "IntersectNode",
        "Join",
        "Join",
        "initOptions",
        "_mScanbeam",
        "_mActiveEdges",
        "_mSortedEdges",
        "_mIntersectList",
        "IntersectNode",
        "_mIntersectNodeComparer",
        "MyIntersectNodeSort",
        "_mExecuteLocked",
        "_mUsingPolyTree",
        "_mPolyOuts",
        "OutRec",
        "_mJoins",
        "Join",
        "_mGhostJoins",
        "Join",
        "ReverseSolution",
        "IOReverseSolution",
        "initOptions",
        "StrictlySimple",
        "IOStrictlySimple",
        "initOptions",
        "PreserveCollinear",
        "IOPreserveCollinear",
        "initOptions",
        "Reset",
        "_mScanbeam",
        "_mActiveEdges",
        "_mSortedEdges",
        "lm",
        "InsertScanbeam",
        "lm",
        "Y",
        "lm",
        "lm",
        "Next",
        "y",
        "_mScanbeam",
        "_mScanbeam",
        "Scanbeam",
        "Next",
        "Y",
        "y",
        "y",
        "_mScanbeam",
        "Y",
        "Scanbeam",
        "Y",
        "y",
        "Next",
        "_mScanbeam",
        "_mScanbeam",
        "newSb",
        "sb2",
        "Next",
        "y",
        "sb2",
        "Next",
        "Y",
        "sb2",
        "sb2",
        "Next",
        "y",
        "IsPracticallySame",
        "sb2",
        "Y",
        "Scanbeam",
        "Y",
        "y",
        "Next",
        "sb2",
        "Next",
        "sb2",
        "Next",
        "newSb",
        "ClipType",
        "clipType",
        "Paths",
        "solution",
        "PolyFillType",
        "subjFillType",
        "PolyFillType",
        "clipFillType",
        "_mExecuteLocked",
        "MHasOpenPaths",
        "ClipperException",
        "_mExecuteLocked",
        "solution",
        "Clear",
        "_mSubjFillType",
        "subjFillType",
        "_mClipFillType",
        "clipFillType",
        "_mClipType",
        "clipType",
        "_mUsingPolyTree",
        "succeeded",
        "ExecuteInternal",
        "succeeded",
        "BuildResult",
        "solution",
        "DisposeAllPolyPts",
        "_mExecuteLocked",
        "succeeded",
        "ClipType",
        "clipType",
        "PolyTree",
        "polytree",
        "PolyFillType",
        "subjFillType",
        "PolyFillType",
        "clipFillType",
        "_mExecuteLocked",
        "_mExecuteLocked",
        "_mSubjFillType",
        "subjFillType",
        "_mClipFillType",
        "clipFillType",
        "_mClipType",
        "clipType",
        "_mUsingPolyTree",
        "succeeded",
        "ExecuteInternal",
        "succeeded",
        "BuildResult2",
        "polytree",
        "DisposeAllPolyPts",
        "_mExecuteLocked",
        "succeeded",
        "ClipType",
        "clipType",
        "Paths",
        "solution",
        "Execute",
        "clipType",
        "solution",
        "PolyFillType",
        "EvenOdd",
        "PolyFillType",
        "EvenOdd",
        "ClipType",
        "clipType",
        "PolyTree",
        "polytree",
        "Execute",
        "clipType",
        "polytree",
        "PolyFillType",
        "EvenOdd",
        "PolyFillType",
        "EvenOdd",
        "OutRec",
        "outRec",
        "outRec",
        "FirstLeft",
        "outRec",
        "IsHole",
        "outRec",
        "FirstLeft",
        "IsHole",
        "outRec",
        "FirstLeft",
        "Pts",
        "outRec",
        "FirstLeft",
        "orfl",
        "orfl",
        "IsHole",
        "outRec",
        "IsHole",
        "orfl",
        "Pts",
        "orfl",
        "orfl",
        "FirstLeft",
        "outRec",
        "FirstLeft",
        "orfl",
        "Reset",
        "MCurrentLm",
        "PopScanbeam",
        "InsertLocalMinimaIntoAEL",
        "botY",
        "_mGhostJoins",
        "Clear",
        "ProcessHorizontals",
        "_mScanbeam",
        "PopScanbeam",
        "ProcessIntersections",
        "topY",
        "ProcessEdgesAtTopOfScanbeam",
        "topY",
        "botY",
        "topY",
        "_mScanbeam",
        "MCurrentLm",
        "outRec",
        "_mPolyOuts",
        "outRec",
        "Pts",
        "outRec",
        "IsOpen",
        "outRec",
        "IsHole",
        "ReverseSolution",
        "Area",
        "outRec",
        "ReversePolyPtLinks",
        "outRec",
        "Pts",
        "JoinCommonEdges",
        "outRec",
        "_mPolyOuts",
        "Where",
        "outRec",
        "Pts",
        "outRec",
        "IsOpen",
        "FixupOutPolygon",
        "outRec",
        "StrictlySimple",
        "DoSimplePolygons",
        "_mJoins",
        "Clear",
        "_mGhostJoins",
        "Clear",
        "_mScanbeam",
        "Y",
        "_mScanbeam",
        "_mScanbeam",
        "Next",
        "y",
        "i",
        "_mPolyOuts",
        "Count",
        "i",
        "DisposeOutRec",
        "i",
        "_mPolyOuts",
        "Clear",
        "index",
        "_mPolyOuts",
        "index",
        "outRec",
        "Pts",
        "_mPolyOuts",
        "index",
        "OutPt",
        "outPoint1",
        "OutPt",
        "outPoint2",
        "Point",
        "offPt",
        "Join",
        "join",
        "OutPt1",
        "outPoint1",
        "join",
        "OutPt2",
        "outPoint2",
        "join",
        "OffPt",
        "offPt",
        "_mJoins",
        "Add",
        "join",
        "OutPt",
        "outPoint",
        "Point",
        "offPt",
        "Join",
        "join",
        "OutPt1",
        "outPoint",
        "join",
        "OffPt",
        "offPt",
        "_mGhostJoins",
        "Add",
        "join",
        "botY",
        "MCurrentLm",
        "MCurrentLm",
        "Y",
        "IsPracticallySame",
        "botY",
        "MCurrentLm",
        "LeftBound",
        "MCurrentLm",
        "RightBound",
        "PopLocalMinima",
        "leftBoundEdge",
        "InsertEdgeIntoAEL",
        "rightBoundEdge",
        "SetWindingCount",
        "rightBoundEdge",
        "IsContributing",
        "rightBoundEdge",
        "outPoint",
        "AddOutPt",
        "rightBoundEdge",
        "rightBoundEdge",
        "Bot",
        "rightBoundEdge",
        "InsertEdgeIntoAEL",
        "leftBoundEdge",
        "SetWindingCount",
        "leftBoundEdge",
        "IsContributing",
        "leftBoundEdge",
        "outPoint",
        "AddOutPt",
        "leftBoundEdge",
        "leftBoundEdge",
        "Bot",
        "InsertScanbeam",
        "leftBoundEdge",
        "Top",
        "Y",
        "InsertEdgeIntoAEL",
        "leftBoundEdge",
        "InsertEdgeIntoAEL",
        "rightBoundEdge",
        "leftBoundEdge",
        "SetWindingCount",
        "leftBoundEdge",
        "rightBoundEdge",
        "WindCnt",
        "leftBoundEdge",
        "WindCnt",
        "rightBoundEdge",
        "WindCnt2",
        "leftBoundEdge",
        "WindCnt2",
        "IsContributing",
        "leftBoundEdge",
        "outPoint",
        "AddLocalMinPoly",
        "leftBoundEdge",
        "rightBoundEdge",
        "leftBoundEdge",
        "Bot",
        "InsertScanbeam",
        "leftBoundEdge",
        "Top",
        "Y",
        "rightBoundEdge",
        "IsHorizontal",
        "rightBoundEdge",
        "AddEdgeToSEL",
        "rightBoundEdge",
        "InsertScanbeam",
        "rightBoundEdge",
        "Top",
        "Y",
        "leftBoundEdge",
        "rightBoundEdge",
        "outPoint",
        "IsHorizontal",
        "rightBoundEdge",
        "_mGhostJoins",
        "Count",
        "rightBoundEdge",
        "WindDelta",
        "i",
        "_mGhostJoins",
        "Count",
        "i",
        "_mGhostJoins",
        "i",
        "HorzSegmentsOverlap",
        "join",
        "OutPt1",
        "Pt",
        "X",
        "join",
        "OffPt",
        "X",
        "rightBoundEdge",
        "Bot",
        "X",
        "rightBoundEdge",
        "Top",
        "X",
        "AddJoin",
        "join",
        "OutPt1",
        "outPoint",
        "join",
        "OffPt",
        "leftBoundEdge",
        "OutIdx",
        "leftBoundEdge",
        "PrevInAEL",
        "leftBoundEdge",
        "PrevInAEL",
        "Curr",
        "X",
        "IsPracticallySame",
        "leftBoundEdge",
        "Bot",
        "X",
        "leftBoundEdge",
        "PrevInAEL",
        "OutIdx",
        "SlopesEqual",
        "leftBoundEdge",
        "PrevInAEL",
        "leftBoundEdge",
        "leftBoundEdge",
        "WindDelta",
        "leftBoundEdge",
        "PrevInAEL",
        "WindDelta",
        "AddOutPt",
        "leftBoundEdge",
        "PrevInAEL",
        "leftBoundEdge",
        "Bot",
        "AddJoin",
        "outPoint",
        "outPoint2",
        "leftBoundEdge",
        "Top",
        "leftBoundEdge",
        "NextInAEL",
        "rightBoundEdge",
        "rightBoundEdge",
        "OutIdx",
        "rightBoundEdge",
        "PrevInAEL",
        "OutIdx",
        "SlopesEqual",
        "rightBoundEdge",
        "PrevInAEL",
        "rightBoundEdge",
        "rightBoundEdge",
        "WindDelta",
        "rightBoundEdge",
        "PrevInAEL",
        "WindDelta",
        "AddOutPt",
        "rightBoundEdge",
        "PrevInAEL",
        "rightBoundEdge",
        "Bot",
        "AddJoin",
        "outPoint",
        "outPoint2",
        "rightBoundEdge",
        "Top",
        "leftBoundEdge",
        "NextInAEL",
        "edge",
        "edge",
        "rightBoundEdge",
        "IntersectEdges",
        "rightBoundEdge",
        "edge",
        "leftBoundEdge",
        "Curr",
        "edge",
        "edge",
        "NextInAEL",
        "TEdge",
        "edge",
        "TEdge",
        "startEdge",
        "_mActiveEdges",
        "edge",
        "PrevInAEL",
        "edge",
        "NextInAEL",
        "_mActiveEdges",
        "edge",
        "startEdge",
        "E2InsertsBeforeE1",
        "_mActiveEdges",
        "edge",
        "edge",
        "PrevInAEL",
        "edge",
        "NextInAEL",
        "_mActiveEdges",
        "_mActiveEdges",
        "PrevInAEL",
        "edge",
        "_mActiveEdges",
        "edge",
        "startEdge",
        "startEdge",
        "_mActiveEdges",
        "startEdge",
        "NextInAEL",
        "E2InsertsBeforeE1",
        "startEdge",
        "NextInAEL",
        "edge",
        "startEdge",
        "startEdge",
        "NextInAEL",
        "edge",
        "NextInAEL",
        "startEdge",
        "NextInAEL",
        "startEdge",
        "NextInAEL",
        "startEdge",
        "NextInAEL",
        "PrevInAEL",
        "edge",
        "edge",
        "PrevInAEL",
        "startEdge",
        "startEdge",
        "NextInAEL",
        "edge",
        "TEdge",
        "e1",
        "TEdge",
        "e2",
        "e2",
        "Curr",
        "X",
        "IsPracticallySame",
        "e1",
        "Curr",
        "X",
        "e2",
        "Top",
        "Y",
        "e1",
        "Top",
        "Y",
        "e2",
        "Top",
        "X",
        "TopX",
        "e1",
        "e2",
        "Top",
        "Y",
        "e1",
        "Top",
        "X",
        "TopX",
        "e2",
        "e1",
        "Top",
        "Y",
        "e2",
        "Curr",
        "X",
        "e1",
        "Curr",
        "X",
        "TEdge",
        "edge",
        "edge",
        "PolyTyp",
        "PolyType",
        "Subject",
        "_mSubjFillType",
        "PolyFillType",
        "EvenOdd",
        "_mClipFillType",
        "PolyFillType",
        "EvenOdd",
        "TEdge",
        "edge",
        "edge",
        "PolyTyp",
        "PolyType",
        "Subject",
        "_mClipFillType",
        "PolyFillType",
        "EvenOdd",
        "_mSubjFillType",
        "PolyFillType",
        "EvenOdd",
        "TEdge",
        "edge",
        "edge",
        "PolyTyp",
        "PolyType",
        "Subject",
        "pft",
        "_mSubjFillType",
        "pft2",
        "_mClipFillType",
        "pft",
        "_mClipFillType",
        "pft2",
        "_mSubjFillType",
        "pft",
        "PolyFillType",
        "EvenOdd",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt",
        "PolyFillType",
        "NonZero",
        "Abs",
        "edge",
        "WindCnt",
        "PolyFillType",
        "Positive",
        "edge",
        "WindCnt",
        "edge",
        "WindCnt",
        "_mClipType",
        "ClipType",
        "Intersection",
        "pft2",
        "PolyFillType",
        "EvenOdd",
        "PolyFillType",
        "NonZero",
        "edge",
        "WindCnt2",
        "PolyFillType",
        "Positive",
        "edge",
        "WindCnt2",
        "edge",
        "WindCnt2",
        "ClipType",
        "Union",
        "pft2",
        "PolyFillType",
        "EvenOdd",
        "PolyFillType",
        "NonZero",
        "edge",
        "WindCnt2",
        "PolyFillType",
        "Positive",
        "edge",
        "WindCnt2",
        "edge",
        "WindCnt2",
        "ClipType",
        "Difference",
        "edge",
        "PolyTyp",
        "PolyType",
        "Subject",
        "pft2",
        "PolyFillType",
        "EvenOdd",
        "PolyFillType",
        "NonZero",
        "edge",
        "WindCnt2",
        "PolyFillType",
        "Positive",
        "edge",
        "WindCnt2",
        "edge",
        "WindCnt2",
        "pft2",
        "PolyFillType",
        "EvenOdd",
        "PolyFillType",
        "NonZero",
        "edge",
        "WindCnt2",
        "PolyFillType",
        "Positive",
        "edge",
        "WindCnt2",
        "edge",
        "WindCnt2",
        "ClipType",
        "Xor",
        "edge",
        "WindDelta",
        "pft2",
        "PolyFillType",
        "EvenOdd",
        "PolyFillType",
        "NonZero",
        "edge",
        "WindCnt2",
        "PolyFillType",
        "Positive",
        "edge",
        "WindCnt2",
        "edge",
        "WindCnt2",
        "TEdge",
        "edge",
        "edge",
        "PrevInAEL",
        "previousEdge",
        "previousEdge",
        "PolyTyp",
        "edge",
        "PolyTyp",
        "previousEdge",
        "WindDelta",
        "previousEdge",
        "previousEdge",
        "PrevInAEL",
        "previousEdge",
        "edge",
        "WindCnt",
        "edge",
        "WindDelta",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt2",
        "previousEdge",
        "_mActiveEdges",
        "edge",
        "WindDelta",
        "_mClipType",
        "ClipType",
        "Union",
        "edge",
        "WindCnt",
        "edge",
        "WindCnt2",
        "previousEdge",
        "WindCnt2",
        "previousEdge",
        "previousEdge",
        "NextInAEL",
        "IsEvenOddFillType",
        "edge",
        "edge",
        "WindDelta",
        "previousEdge",
        "PrevInAEL",
        "edge2",
        "edge2",
        "PolyTyp",
        "previousEdge",
        "PolyTyp",
        "edge2",
        "WindDelta",
        "inside",
        "inside",
        "edge2",
        "edge2",
        "PrevInAEL",
        "edge",
        "WindCnt",
        "inside",
        "edge",
        "WindCnt",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt2",
        "previousEdge",
        "WindCnt2",
        "previousEdge",
        "previousEdge",
        "NextInAEL",
        "previousEdge",
        "WindCnt",
        "previousEdge",
        "WindDelta",
        "Abs",
        "previousEdge",
        "WindCnt",
        "previousEdge",
        "WindDelta",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt",
        "previousEdge",
        "WindCnt",
        "edge",
        "WindCnt",
        "previousEdge",
        "WindCnt",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt",
        "edge",
        "WindDelta",
        "edge",
        "WindDelta",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt",
        "previousEdge",
        "WindCnt",
        "previousEdge",
        "WindCnt",
        "previousEdge",
        "WindCnt",
        "previousEdge",
        "WindDelta",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt",
        "previousEdge",
        "WindCnt",
        "edge",
        "WindCnt",
        "previousEdge",
        "WindCnt",
        "edge",
        "WindDelta",
        "edge",
        "WindCnt2",
        "previousEdge",
        "WindCnt2",
        "previousEdge",
        "previousEdge",
        "NextInAEL",
        "IsEvenOddAltFillType",
        "edge",
        "previousEdge",
        "edge",
        "previousEdge",
        "WindDelta",
        "edge",
        "WindCnt2",
        "edge",
        "WindCnt2",
        "previousEdge",
        "previousEdge",
        "NextInAEL",
        "previousEdge",
        "edge",
        "edge",
        "WindCnt2",
        "previousEdge",
        "WindDelta",
        "previousEdge",
        "previousEdge",
        "NextInAEL",
        "TEdge",
        "edge",
        "_mSortedEdges",
        "_mSortedEdges",
        "edge",
        "edge",
        "PrevInSel",
        "edge",
        "NextInSel",
        "edge",
        "NextInSel",
        "_mSortedEdges",
        "edge",
        "PrevInSel",
        "_mSortedEdges",
        "PrevInSel",
        "edge",
        "_mSortedEdges",
        "edge",
        "_mSortedEdges",
        "e",
        "e",
        "e",
        "PrevInSel",
        "e",
        "PrevInAEL",
        "e",
        "NextInSel",
        "e",
        "NextInAEL",
        "e",
        "e",
        "NextInAEL",
        "TEdge",
        "edge1",
        "TEdge",
        "edge2",
        "edge1",
        "NextInAEL",
        "edge1",
        "PrevInAEL",
        "edge2",
        "NextInAEL",
        "edge2",
        "PrevInAEL",
        "edge1",
        "NextInAEL",
        "edge2",
        "edge2",
        "NextInAEL",
        "next",
        "next",
        "PrevInAEL",
        "edge1",
        "edge1",
        "PrevInAEL",
        "prev",
        "prev",
        "NextInAEL",
        "edge2",
        "edge2",
        "PrevInAEL",
        "prev",
        "edge2",
        "NextInAEL",
        "edge1",
        "edge1",
        "PrevInAEL",
        "edge2",
        "edge1",
        "NextInAEL",
        "next",
        "edge2",
        "NextInAEL",
        "edge1",
        "edge1",
        "NextInAEL",
        "next",
        "next",
        "PrevInAEL",
        "edge2",
        "edge2",
        "PrevInAEL",
        "prev",
        "prev",
        "NextInAEL",
        "edge1",
        "edge1",
        "PrevInAEL",
        "prev",
        "edge1",
        "NextInAEL",
        "edge2",
        "edge2",
        "PrevInAEL",
        "edge1",
        "edge2",
        "NextInAEL",
        "next",
        "edge1",
        "NextInAEL",
        "edge1",
        "PrevInAEL",
        "edge1",
        "NextInAEL",
        "edge2",
        "NextInAEL",
        "edge1",
        "NextInAEL",
        "edge1",
        "NextInAEL",
        "PrevInAEL",
        "edge1",
        "edge1",
        "PrevInAEL",
        "edge2",
        "PrevInAEL",
        "edge1",
        "PrevInAEL",
        "edge1",
        "PrevInAEL",
        "NextInAEL",
        "edge1",
        "edge2",
        "NextInAEL",
        "next",
        "edge2",
        "NextInAEL",
        "edge2",
        "NextInAEL",
        "PrevInAEL",
        "edge2",
        "edge2",
        "PrevInAEL",
        "prev",
        "edge2",
        "PrevInAEL",
        "edge2",
        "PrevInAEL",
        "NextInAEL",
        "edge2",
        "edge1",
        "PrevInAEL",
        "_mActiveEdges",
        "edge1",
        "edge2",
        "PrevInAEL",
        "_mActiveEdges",
        "edge2",
        "TEdge",
        "edge1",
        "TEdge",
        "edge2",
        "edge1",
        "NextInSel",
        "edge1",
        "PrevInSel",
        "edge2",
        "NextInSel",
        "edge2",
        "PrevInSel",
        "edge1",
        "NextInSel",
        "edge2",
        "edge2",
        "NextInSel",
        "next",
        "next",
        "PrevInSel",
        "edge1",
        "edge1",
        "PrevInSel",
        "prev",
        "prev",
        "NextInSel",
        "edge2",
        "edge2",
        "PrevInSel",
        "prev",
        "edge2",
        "NextInSel",
        "edge1",
        "edge1",
        "PrevInSel",
        "edge2",
        "edge1",
        "NextInSel",
        "next",
        "edge2",
        "NextInSel",
        "edge1",
        "edge1",
        "NextInSel",
        "next",
        "next",
        "PrevInSel",
        "edge2",
        "edge2",
        "PrevInSel",
        "prev",
        "prev",
        "NextInSel",
        "edge1",
        "edge1",
        "PrevInSel",
        "prev",
        "edge1",
        "NextInSel",
        "edge2",
        "edge2",
        "PrevInSel",
        "edge1",
        "edge2",
        "NextInSel",
        "next",
        "edge1",
        "NextInSel",
        "edge1",
        "PrevInSel",
        "edge1",
        "NextInSel",
        "edge2",
        "NextInSel",
        "edge1",
        "NextInSel",
        "edge1",
        "NextInSel",
        "PrevInSel",
        "edge1",
        "edge1",
        "PrevInSel",
        "edge2",
        "PrevInSel",
        "edge1",
        "PrevInSel",
        "edge1",
        "PrevInSel",
        "NextInSel",
        "edge1",
        "edge2",
        "NextInSel",
        "next",
        "edge2",
        "NextInSel",
        "edge2",
        "NextInSel",
        "PrevInSel",
        "edge2",
        "edge2",
        "PrevInSel",
        "prev",
        "edge2",
        "PrevInSel",
        "edge2",
        "PrevInSel",
        "NextInSel",
        "edge2",
        "edge1",
        "PrevInSel",
        "_mSortedEdges",
        "edge1",
        "edge2",
        "PrevInSel",
        "_mSortedEdges",
        "edge2",
        "TEdge",
        "e1",
        "TEdge",
        "e2",
        "Point",
        "pt",
        "AddOutPt",
        "e1",
        "pt",
        "e2",
        "WindDelta",
        "AddOutPt",
        "e2",
        "pt",
        "e1",
        "OutIdx",
        "e2",
        "OutIdx",
        "e1",
        "OutIdx",
        "Unassigned",
        "e2",
        "OutIdx",
        "Unassigned",
        "e1",
        "OutIdx",
        "e2",
        "OutIdx",
        "AppendPolygon",
        "e1",
        "e2",
        "AppendPolygon",
        "e2",
        "e1",
        "TEdge",
        "e1",
        "TEdge",
        "e2",
        "Point",
        "pt",
        "IsHorizontal",
        "e2",
        "e1",
        "Dx",
        "e2",
        "Dx",
        "result",
        "AddOutPt",
        "e1",
        "pt",
        "e2",
        "OutIdx",
        "e1",
        "OutIdx",
        "e1",
        "Side",
        "EdgeSide",
        "Left",
        "e2",
        "Side",
        "EdgeSide",
        "Right",
        "e",
        "e1",
        "e",
        "PrevInAEL",
        "e2",
        "prevE",
        "e2",
        "PrevInAEL",
        "prevE",
        "e",
        "PrevInAEL",
        "result",
        "AddOutPt",
        "e2",
        "pt",
        "e1",
        "OutIdx",
        "e2",
        "OutIdx",
        "e1",
        "Side",
        "EdgeSide",
        "Right",
        "e2",
        "Side",
        "EdgeSide",
        "Left",
        "e",
        "e2",
        "e",
        "PrevInAEL",
        "e1",
        "prevE",
        "e1",
        "PrevInAEL",
        "prevE",
        "e",
        "PrevInAEL",
        "prevE",
        "prevE",
        "OutIdx",
        "TopX",
        "prevE",
        "pt",
        "Y",
        "IsPracticallySame",
        "TopX",
        "e",
        "pt",
        "Y",
        "SlopesEqual",
        "e",
        "prevE",
        "e",
        "WindDelta",
        "prevE",
        "WindDelta",
        "AddOutPt",
        "prevE",
        "pt",
        "AddJoin",
        "result",
        "outPt",
        "e",
        "Top",
        "result",
        "OutRec",
        "Idx",
        "Unassigned",
        "IsHole",
        "IsOpen",
        "FirstLeft",
        "Pts",
        "BottomPt",
        "PolyNode",
        "_mPolyOuts",
        "Add",
        "result",
        "result",
        "Idx",
        "_mPolyOuts",
        "Count",
        "result",
        "TEdge",
        "e",
        "Point",
        "pt",
        "e",
        "Side",
        "EdgeSide",
        "Left",
        "e",
        "OutIdx",
        "CreateOutRec",
        "outRec",
        "IsOpen",
        "e",
        "WindDelta",
        "OutPt",
        "outRec",
        "Pts",
        "newOp",
        "newOp",
        "Idx",
        "outRec",
        "Idx",
        "newOp",
        "Pt",
        "pt",
        "newOp",
        "Next",
        "newOp",
        "newOp",
        "Prev",
        "newOp",
        "outRec",
        "IsOpen",
        "SetHoleState",
        "e",
        "outRec",
        "e",
        "OutIdx",
        "outRec",
        "Idx",
        "newOp",
        "_mPolyOuts",
        "e",
        "OutIdx",
        "outRec",
        "Pts",
        "toFront",
        "pt",
        "op",
        "Pt",
        "op",
        "toFront",
        "pt",
        "op",
        "Prev",
        "Pt",
        "op",
        "Prev",
        "OutPt",
        "newOp",
        "Idx",
        "outRec",
        "Idx",
        "newOp",
        "Pt",
        "pt",
        "newOp",
        "Next",
        "op",
        "newOp",
        "Prev",
        "op",
        "Prev",
        "newOp",
        "Prev",
        "Next",
        "newOp",
        "op",
        "Prev",
        "newOp",
        "toFront",
        "outRec",
        "Pts",
        "newOp",
        "newOp",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "Point",
        "pt1",
        "pt1",
        "pt2",
        "pt2",
        "tmp",
        "seg1A",
        "seg1B",
        "seg2A",
        "seg2B",
        "seg1A",
        "seg1B",
        "seg1A",
        "seg1B",
        "seg1B",
        "temp",
        "seg2A",
        "seg2B",
        "seg2A",
        "seg2B",
        "seg2B",
        "temp",
        "seg1A",
        "seg2B",
        "seg2A",
        "seg1B",
        "TEdge",
        "e",
        "OutRec",
        "outRec",
        "e",
        "PrevInAEL",
        "e2",
        "e2",
        "OutIdx",
        "e2",
        "WindDelta",
        "isHole",
        "isHole",
        "outRec",
        "FirstLeft",
        "outRec",
        "FirstLeft",
        "_mPolyOuts",
        "e2",
        "OutIdx",
        "e2",
        "e2",
        "PrevInAEL",
        "isHole",
        "outRec",
        "IsHole",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "pt1",
        "Y",
        "IsPracticallySame",
        "pt2",
        "Y",
        "Horizontal",
        "pt2",
        "X",
        "pt1",
        "X",
        "pt2",
        "Y",
        "pt1",
        "Y",
        "OutPt",
        "btmPt1",
        "OutPt",
        "btmPt2",
        "btmPt1",
        "Prev",
        "p",
        "Pt",
        "btmPt1",
        "Pt",
        "p",
        "btmPt1",
        "p",
        "p",
        "Prev",
        "Abs",
        "GetDx",
        "btmPt1",
        "Pt",
        "p",
        "Pt",
        "p",
        "btmPt1",
        "Next",
        "p",
        "Pt",
        "btmPt1",
        "Pt",
        "p",
        "btmPt1",
        "p",
        "p",
        "Next",
        "Abs",
        "GetDx",
        "btmPt1",
        "Pt",
        "p",
        "Pt",
        "p",
        "btmPt2",
        "Prev",
        "p",
        "Pt",
        "btmPt2",
        "Pt",
        "p",
        "btmPt2",
        "p",
        "p",
        "Prev",
        "Abs",
        "GetDx",
        "btmPt2",
        "Pt",
        "p",
        "Pt",
        "p",
        "btmPt2",
        "Next",
        "p",
        "Pt",
        "btmPt2",
        "Pt",
        "p",
        "btmPt2",
        "p",
        "p",
        "Next",
        "Abs",
        "GetDx",
        "btmPt2",
        "Pt",
        "p",
        "Pt",
        "dx1P",
        "dx2P",
        "dx1P",
        "dx2N",
        "dx1N",
        "dx2P",
        "dx1N",
        "dx2N",
        "OutPt",
        "pp",
        "pp",
        "Next",
        "p",
        "pp",
        "p",
        "Pt",
        "Y",
        "pp",
        "Pt",
        "Y",
        "pp",
        "p",
        "dups",
        "p",
        "Pt",
        "Y",
        "IsPracticallySame",
        "pp",
        "Pt",
        "Y",
        "p",
        "Pt",
        "X",
        "pp",
        "Pt",
        "X",
        "p",
        "Pt",
        "X",
        "pp",
        "Pt",
        "X",
        "dups",
        "pp",
        "p",
        "p",
        "Next",
        "pp",
        "p",
        "Prev",
        "pp",
        "dups",
        "p",
        "p",
        "p",
        "Next",
        "dups",
        "dups",
        "p",
        "FirstIsBottomPt",
        "p",
        "dups",
        "pp",
        "dups",
        "dups",
        "dups",
        "Next",
        "dups",
        "Pt",
        "pp",
        "Pt",
        "dups",
        "dups",
        "Next",
        "pp",
        "OutRec",
        "outRec1",
        "OutRec",
        "outRec2",
        "outRec1",
        "BottomPt",
        "outRec1",
        "BottomPt",
        "GetBottomPt",
        "outRec1",
        "Pts",
        "outRec2",
        "BottomPt",
        "outRec2",
        "BottomPt",
        "GetBottomPt",
        "outRec2",
        "Pts",
        "outRec1",
        "BottomPt",
        "outRec2",
        "BottomPt",
        "bPt1",
        "Pt",
        "Y",
        "bPt2",
        "Pt",
        "Y",
        "outRec1",
        "bPt1",
        "Pt",
        "Y",
        "bPt2",
        "Pt",
        "Y",
        "outRec2",
        "bPt1",
        "Pt",
        "X",
        "bPt2",
        "Pt",
        "X",
        "outRec1",
        "bPt1",
        "Pt",
        "X",
        "bPt2",
        "Pt",
        "X",
        "outRec2",
        "bPt1",
        "Next",
        "bPt1",
        "outRec2",
        "bPt2",
        "Next",
        "bPt2",
        "outRec1",
        "FirstIsBottomPt",
        "bPt1",
        "bPt2",
        "outRec1",
        "outRec2",
        "OutRec",
        "outRec1",
        "OutRec",
        "outRec2",
        "outRec1",
        "outRec1",
        "FirstLeft",
        "outRec1",
        "outRec2",
        "outRec1",
        "idx",
        "_mPolyOuts",
        "idx",
        "outrec",
        "_mPolyOuts",
        "outrec",
        "Idx",
        "outrec",
        "_mPolyOuts",
        "outrec",
        "Idx",
        "outrec",
        "TEdge",
        "e1",
        "TEdge",
        "e2",
        "_mPolyOuts",
        "e1",
        "OutIdx",
        "_mPolyOuts",
        "e2",
        "OutIdx",
        "Param1RightOfParam2",
        "outRec1",
        "outRec2",
        "holeStateRec",
        "outRec2",
        "Param1RightOfParam2",
        "outRec2",
        "outRec1",
        "holeStateRec",
        "outRec1",
        "holeStateRec",
        "GetLowermostRec",
        "outRec1",
        "outRec2",
        "outRec1",
        "Pts",
        "p1Lft",
        "Prev",
        "outRec2",
        "Pts",
        "p2Lft",
        "Prev",
        "e1",
        "Side",
        "EdgeSide",
        "Left",
        "e2",
        "Side",
        "EdgeSide",
        "Left",
        "ReversePolyPtLinks",
        "p2Lft",
        "p2Lft",
        "Next",
        "p1Lft",
        "p1Lft",
        "Prev",
        "p2Lft",
        "p1Rt",
        "Next",
        "p2Rt",
        "p2Rt",
        "Prev",
        "p1Rt",
        "outRec1",
        "Pts",
        "p2Rt",
        "p2Rt",
        "Next",
        "p1Lft",
        "p1Lft",
        "Prev",
        "p2Rt",
        "p2Lft",
        "Prev",
        "p1Rt",
        "p1Rt",
        "Next",
        "p2Lft",
        "outRec1",
        "Pts",
        "p2Lft",
        "side",
        "EdgeSide",
        "Left",
        "e2",
        "Side",
        "EdgeSide",
        "Right",
        "ReversePolyPtLinks",
        "p2Lft",
        "p1Rt",
        "Next",
        "p2Rt",
        "p2Rt",
        "Prev",
        "p1Rt",
        "p2Lft",
        "Next",
        "p1Lft",
        "p1Lft",
        "Prev",
        "p2Lft",
        "p1Rt",
        "Next",
        "p2Lft",
        "p2Lft",
        "Prev",
        "p1Rt",
        "p1Lft",
        "Prev",
        "p2Rt",
        "p2Rt",
        "Next",
        "p1Lft",
        "side",
        "EdgeSide",
        "Right",
        "outRec1",
        "BottomPt",
        "holeStateRec",
        "outRec2",
        "outRec2",
        "FirstLeft",
        "outRec1",
        "outRec1",
        "FirstLeft",
        "outRec2",
        "FirstLeft",
        "outRec1",
        "IsHole",
        "outRec2",
        "IsHole",
        "outRec2",
        "Pts",
        "outRec2",
        "BottomPt",
        "outRec2",
        "FirstLeft",
        "outRec1",
        "e1",
        "OutIdx",
        "e2",
        "OutIdx",
        "e1",
        "OutIdx",
        "Unassigned",
        "e2",
        "OutIdx",
        "Unassigned",
        "e",
        "e",
        "OutIdx",
        "obsoleteIdx",
        "e",
        "OutIdx",
        "okIdx",
        "e",
        "Side",
        "side",
        "e",
        "e",
        "NextInAEL",
        "outRec2",
        "Idx",
        "outRec1",
        "Idx",
        "OutPt",
        "pp",
        "pp",
        "pp1",
        "pp",
        "pp2",
        "pp1",
        "Next",
        "pp1",
        "Next",
        "pp1",
        "Prev",
        "pp1",
        "Prev",
        "pp2",
        "pp1",
        "pp2",
        "pp1",
        "pp",
        "TEdge",
        "edge1",
        "TEdge",
        "edge2",
        "edge1",
        "Side",
        "edge1",
        "Side",
        "edge2",
        "Side",
        "edge2",
        "Side",
        "side",
        "TEdge",
        "edge1",
        "TEdge",
        "edge2",
        "edge1",
        "OutIdx",
        "edge1",
        "OutIdx",
        "edge2",
        "OutIdx",
        "edge2",
        "OutIdx",
        "outIdx",
        "TEdge",
        "e1",
        "TEdge",
        "e2",
        "Point",
        "pt",
        "e1",
        "OutIdx",
        "e2",
        "OutIdx",
        "use_xyz",
        "SetZ",
        "pt",
        "e1",
        "e2",
        "e1",
        "WindDelta",
        "e2",
        "WindDelta",
        "e1",
        "WindDelta",
        "e2",
        "WindDelta",
        "e1",
        "PolyTyp",
        "e2",
        "PolyTyp",
        "e1",
        "WindDelta",
        "e2",
        "WindDelta",
        "_mClipType",
        "ClipType",
        "Union",
        "e1",
        "WindDelta",
        "e2Contributing",
        "AddOutPt",
        "e1",
        "pt",
        "e1Contributing",
        "e1",
        "OutIdx",
        "Unassigned",
        "e1Contributing",
        "AddOutPt",
        "e2",
        "pt",
        "e2Contributing",
        "e2",
        "OutIdx",
        "Unassigned",
        "e1",
        "PolyTyp",
        "e2",
        "PolyTyp",
        "e1",
        "WindDelta",
        "Abs",
        "e2",
        "WindCnt",
        "_mClipType",
        "ClipType",
        "Union",
        "e2",
        "WindCnt2",
        "AddOutPt",
        "e1",
        "pt",
        "e1Contributing",
        "e1",
        "OutIdx",
        "Unassigned",
        "e2",
        "WindDelta",
        "Abs",
        "e1",
        "WindCnt",
        "_mClipType",
        "ClipType",
        "Union",
        "e1",
        "WindCnt2",
        "AddOutPt",
        "e2",
        "pt",
        "e2Contributing",
        "e2",
        "OutIdx",
        "Unassigned",
        "e1",
        "PolyTyp",
        "e2",
        "PolyTyp",
        "IsEvenOddFillType",
        "e1",
        "e1",
        "WindCnt",
        "e1",
        "WindCnt",
        "e2",
        "WindCnt",
        "e2",
        "WindCnt",
        "oldE1WindCnt",
        "e1",
        "WindCnt",
        "e2",
        "WindDelta",
        "e1",
        "WindCnt",
        "e1",
        "WindCnt",
        "e1",
        "WindCnt",
        "e2",
        "WindDelta",
        "e2",
        "WindCnt",
        "e1",
        "WindDelta",
        "e2",
        "WindCnt",
        "e2",
        "WindCnt",
        "e2",
        "WindCnt",
        "e1",
        "WindDelta",
        "IsEvenOddFillType",
        "e2",
        "e1",
        "WindCnt2",
        "e2",
        "WindDelta",
        "e1",
        "WindCnt2",
        "e1",
        "WindCnt2",
        "IsEvenOddFillType",
        "e1",
        "e2",
        "WindCnt2",
        "e1",
        "WindDelta",
        "e2",
        "WindCnt2",
        "e2",
        "WindCnt2",
        "e1",
        "PolyTyp",
        "PolyType",
        "Subject",
        "e1FillType",
        "_mSubjFillType",
        "e1FillType2",
        "_mClipFillType",
        "e1FillType",
        "_mClipFillType",
        "e1FillType2",
        "_mSubjFillType",
        "e2",
        "PolyTyp",
        "PolyType",
        "Subject",
        "e2FillType",
        "_mSubjFillType",
        "e2FillType2",
        "_mClipFillType",
        "e2FillType",
        "_mClipFillType",
        "e2FillType2",
        "_mSubjFillType",
        "e1FillType",
        "PolyFillType",
        "Positive",
        "e1Wc",
        "e1",
        "WindCnt",
        "PolyFillType",
        "Negative",
        "e1Wc",
        "e1",
        "WindCnt",
        "e1Wc",
        "Abs",
        "e1",
        "WindCnt",
        "e2FillType",
        "PolyFillType",
        "Positive",
        "e2Wc",
        "e2",
        "WindCnt",
        "PolyFillType",
        "Negative",
        "e2Wc",
        "e2",
        "WindCnt",
        "e2Wc",
        "Abs",
        "e2",
        "WindCnt",
        "e1Contributing",
        "e2Contributing",
        "e1Wc",
        "e1Wc",
        "e2Wc",
        "e2Wc",
        "e1",
        "PolyTyp",
        "e2",
        "PolyTyp",
        "_mClipType",
        "ClipType",
        "Xor",
        "AddLocalMaxPoly",
        "e1",
        "e2",
        "pt",
        "AddOutPt",
        "e1",
        "pt",
        "AddOutPt",
        "e2",
        "pt",
        "SwapSides",
        "e1",
        "e2",
        "SwapPolyIndexes",
        "e1",
        "e2",
        "e1Contributing",
        "e2Wc",
        "e2Wc",
        "AddOutPt",
        "e1",
        "pt",
        "SwapSides",
        "e1",
        "e2",
        "SwapPolyIndexes",
        "e1",
        "e2",
        "e2Contributing",
        "e1Wc",
        "e1Wc",
        "AddOutPt",
        "e2",
        "pt",
        "SwapSides",
        "e1",
        "e2",
        "SwapPolyIndexes",
        "e1",
        "e2",
        "e1Wc",
        "e1Wc",
        "e2Wc",
        "e2Wc",
        "e1FillType2",
        "PolyFillType",
        "Positive",
        "e1Wc2",
        "e1",
        "WindCnt2",
        "PolyFillType",
        "Negative",
        "e1Wc2",
        "e1",
        "WindCnt2",
        "e1Wc2",
        "Abs",
        "e1",
        "WindCnt2",
        "e2FillType2",
        "PolyFillType",
        "Positive",
        "e2Wc2",
        "e2",
        "WindCnt2",
        "PolyFillType",
        "Negative",
        "e2Wc2",
        "e2",
        "WindCnt2",
        "e2Wc2",
        "Abs",
        "e2",
        "WindCnt2",
        "e1",
        "PolyTyp",
        "e2",
        "PolyTyp",
        "AddLocalMinPoly",
        "e1",
        "e2",
        "pt",
        "e1Wc",
        "e2Wc",
        "_mClipType",
        "ClipType",
        "Intersection",
        "e1Wc2",
        "e2Wc2",
        "AddLocalMinPoly",
        "e1",
        "e2",
        "pt",
        "ClipType",
        "Union",
        "e1Wc2",
        "e2Wc2",
        "AddLocalMinPoly",
        "e1",
        "e2",
        "pt",
        "ClipType",
        "Difference",
        "e1",
        "PolyTyp",
        "PolyType",
        "Clip",
        "e1Wc2",
        "e2Wc2",
        "e1",
        "PolyTyp",
        "PolyType",
        "Subject",
        "e1Wc2",
        "e2Wc2",
        "AddLocalMinPoly",
        "e1",
        "e2",
        "pt",
        "ClipType",
        "Xor",
        "AddLocalMinPoly",
        "e1",
        "e2",
        "pt",
        "SwapSides",
        "e1",
        "e2",
        "TEdge",
        "e",
        "e",
        "PrevInAEL",
        "e",
        "NextInAEL",
        "aelPrev",
        "aelNext",
        "e",
        "_mActiveEdges",
        "aelPrev",
        "aelPrev",
        "NextInAEL",
        "aelNext",
        "_mActiveEdges",
        "aelNext",
        "aelNext",
        "aelNext",
        "PrevInAEL",
        "aelPrev",
        "e",
        "NextInAEL",
        "e",
        "PrevInAEL",
        "TEdge",
        "e",
        "e",
        "PrevInSel",
        "e",
        "NextInSel",
        "selPrev",
        "selNext",
        "e",
        "_mSortedEdges",
        "selPrev",
        "selPrev",
        "NextInSel",
        "selNext",
        "_mSortedEdges",
        "selNext",
        "selNext",
        "selNext",
        "PrevInSel",
        "selPrev",
        "e",
        "NextInSel",
        "e",
        "PrevInSel",
        "TEdge",
        "e",
        "e",
        "NextInLml",
        "ClipperException",
        "e",
        "PrevInAEL",
        "e",
        "NextInAEL",
        "e",
        "NextInLml",
        "OutIdx",
        "e",
        "OutIdx",
        "aelPrev",
        "aelPrev",
        "NextInAEL",
        "e",
        "NextInLml",
        "_mActiveEdges",
        "e",
        "NextInLml",
        "aelNext",
        "aelNext",
        "PrevInAEL",
        "e",
        "NextInLml",
        "e",
        "NextInLml",
        "Side",
        "e",
        "Side",
        "e",
        "NextInLml",
        "WindDelta",
        "e",
        "WindDelta",
        "e",
        "NextInLml",
        "WindCnt",
        "e",
        "WindCnt",
        "e",
        "NextInLml",
        "WindCnt2",
        "e",
        "WindCnt2",
        "e",
        "e",
        "NextInLml",
        "e",
        "Curr",
        "e",
        "Bot",
        "e",
        "PrevInAEL",
        "aelPrev",
        "e",
        "NextInAEL",
        "aelNext",
        "IsHorizontal",
        "e",
        "InsertScanbeam",
        "e",
        "Top",
        "Y",
        "isTopOfScanbeam",
        "horzEdge",
        "DeleteFromSEL",
        "horzEdge",
        "ProcessHorizontal",
        "horzEdge",
        "isTopOfScanbeam",
        "horzEdge",
        "_mSortedEdges",
        "TEdge",
        "horzEdge",
        "Direction",
        "dir",
        "left",
        "right",
        "horzEdge",
        "Bot",
        "X",
        "horzEdge",
        "Top",
        "X",
        "left",
        "horzEdge",
        "Bot",
        "X",
        "right",
        "horzEdge",
        "Top",
        "X",
        "dir",
        "Direction",
        "LeftToRight",
        "left",
        "horzEdge",
        "Top",
        "X",
        "right",
        "horzEdge",
        "Bot",
        "X",
        "dir",
        "Direction",
        "RightToLeft",
        "TEdge",
        "horzEdge",
        "isTopOfScanbeam",
        "GetHorzDirection",
        "horzEdge",
        "dir",
        "horzLeft",
        "horzRight",
        "eLastHorz",
        "NextInLml",
        "IsHorizontal",
        "eLastHorz",
        "NextInLml",
        "eLastHorz",
        "eLastHorz",
        "NextInLml",
        "eLastHorz",
        "NextInLml",
        "eMaxPair",
        "GetMaximaPair",
        "eLastHorz",
        "horzEdge",
        "eLastHorz",
        "GetNextInAEL",
        "horzEdge",
        "dir",
        "e",
        "e",
        "Curr",
        "X",
        "IsPracticallySame",
        "horzEdge",
        "Top",
        "X",
        "horzEdge",
        "NextInLml",
        "e",
        "Dx",
        "horzEdge",
        "NextInLml",
        "Dx",
        "GetNextInAEL",
        "e",
        "dir",
        "dir",
        "Direction",
        "LeftToRight",
        "e",
        "Curr",
        "X",
        "horzRight",
        "dir",
        "Direction",
        "RightToLeft",
        "e",
        "Curr",
        "X",
        "horzLeft",
        "e",
        "eMaxPair",
        "isLastHorz",
        "horzEdge",
        "OutIdx",
        "AddOutPt",
        "horzEdge",
        "horzEdge",
        "Top",
        "eNextHorz",
        "eNextHorz",
        "OutIdx",
        "HorzSegmentsOverlap",
        "horzEdge",
        "Bot",
        "X",
        "horzEdge",
        "Top",
        "X",
        "eNextHorz",
        "Bot",
        "X",
        "eNextHorz",
        "Top",
        "X",
        "AddOutPt",
        "eNextHorz",
        "eNextHorz",
        "Bot",
        "AddJoin",
        "op2",
        "op1",
        "eNextHorz",
        "Top",
        "eNextHorz",
        "eNextHorz",
        "NextInSel",
        "AddGhostJoin",
        "op1",
        "horzEdge",
        "Bot",
        "AddLocalMaxPoly",
        "horzEdge",
        "eMaxPair",
        "horzEdge",
        "Top",
        "DeleteFromAEL",
        "horzEdge",
        "DeleteFromAEL",
        "eMaxPair",
        "dir",
        "Direction",
        "LeftToRight",
        "Point",
        "e",
        "Curr",
        "X",
        "horzEdge",
        "Curr",
        "Y",
        "IntersectEdges",
        "horzEdge",
        "e",
        "pt",
        "Point",
        "e",
        "Curr",
        "X",
        "horzEdge",
        "Curr",
        "Y",
        "IntersectEdges",
        "e",
        "horzEdge",
        "pt",
        "SwapPositionsInAEL",
        "horzEdge",
        "e",
        "dir",
        "Direction",
        "LeftToRight",
        "e",
        "Curr",
        "X",
        "horzRight",
        "dir",
        "Direction",
        "RightToLeft",
        "e",
        "Curr",
        "X",
        "horzLeft",
        "e",
        "eNext",
        "horzEdge",
        "NextInLml",
        "IsHorizontal",
        "horzEdge",
        "NextInLml",
        "UpdateEdgeIntoAEL",
        "horzEdge",
        "horzEdge",
        "OutIdx",
        "AddOutPt",
        "horzEdge",
        "horzEdge",
        "Bot",
        "GetHorzDirection",
        "horzEdge",
        "dir",
        "horzLeft",
        "horzRight",
        "horzEdge",
        "NextInLml",
        "horzEdge",
        "OutIdx",
        "AddOutPt",
        "horzEdge",
        "horzEdge",
        "Top",
        "isTopOfScanbeam",
        "AddGhostJoin",
        "op1",
        "horzEdge",
        "Bot",
        "UpdateEdgeIntoAEL",
        "horzEdge",
        "horzEdge",
        "WindDelta",
        "horzEdge",
        "PrevInAEL",
        "horzEdge",
        "NextInAEL",
        "ePrev",
        "ePrev",
        "Curr",
        "X",
        "IsPracticallySame",
        "horzEdge",
        "Bot",
        "X",
        "ePrev",
        "Curr",
        "Y",
        "IsPracticallySame",
        "horzEdge",
        "Bot",
        "Y",
        "ePrev",
        "WindDelta",
        "ePrev",
        "OutIdx",
        "ePrev",
        "Curr",
        "Y",
        "ePrev",
        "Top",
        "Y",
        "SlopesEqual",
        "horzEdge",
        "ePrev",
        "AddOutPt",
        "ePrev",
        "horzEdge",
        "Bot",
        "AddJoin",
        "op1",
        "op2",
        "horzEdge",
        "Top",
        "eNext",
        "eNext",
        "Curr",
        "X",
        "IsPracticallySame",
        "horzEdge",
        "Bot",
        "X",
        "eNext",
        "Curr",
        "Y",
        "IsPracticallySame",
        "horzEdge",
        "Bot",
        "Y",
        "eNext",
        "WindDelta",
        "eNext",
        "OutIdx",
        "eNext",
        "Curr",
        "Y",
        "eNext",
        "Top",
        "Y",
        "SlopesEqual",
        "horzEdge",
        "eNext",
        "AddOutPt",
        "eNext",
        "horzEdge",
        "Bot",
        "AddJoin",
        "op1",
        "op2",
        "horzEdge",
        "Top",
        "UpdateEdgeIntoAEL",
        "horzEdge",
        "horzEdge",
        "OutIdx",
        "AddOutPt",
        "horzEdge",
        "horzEdge",
        "Top",
        "DeleteFromAEL",
        "horzEdge",
        "TEdge",
        "e",
        "Direction",
        "direction",
        "direction",
        "Direction",
        "LeftToRight",
        "e",
        "NextInAEL",
        "e",
        "PrevInAEL",
        "TEdge",
        "e",
        "e",
        "e",
        "Prev",
        "NextInLml",
        "e",
        "e",
        "Next",
        "NextInLml",
        "e",
        "TEdge",
        "e",
        "y",
        "e",
        "e",
        "Top",
        "Y",
        "IsPracticallySame",
        "y",
        "e",
        "NextInLml",
        "TEdge",
        "e",
        "y",
        "e",
        "Top",
        "Y",
        "IsPracticallySame",
        "y",
        "e",
        "NextInLml",
        "TEdge",
        "e",
        "e",
        "Next",
        "Top",
        "e",
        "Top",
        "e",
        "Next",
        "NextInLml",
        "result",
        "e",
        "Next",
        "e",
        "Prev",
        "Top",
        "e",
        "Top",
        "e",
        "Prev",
        "NextInLml",
        "result",
        "e",
        "Prev",
        "result",
        "result",
        "OutIdx",
        "Skip",
        "result",
        "NextInAEL",
        "result",
        "PrevInAEL",
        "IsHorizontal",
        "result",
        "result",
        "topY",
        "_mActiveEdges",
        "BuildIntersectList",
        "topY",
        "_mIntersectList",
        "Count",
        "_mIntersectList",
        "Count",
        "FixupIntersectionOrder",
        "ProcessIntersectList",
        "_mSortedEdges",
        "_mIntersectList",
        "Clear",
        "ClipperException",
        "_mSortedEdges",
        "topY",
        "_mActiveEdges",
        "_mSortedEdges",
        "e",
        "e",
        "e",
        "PrevInSel",
        "e",
        "PrevInAEL",
        "e",
        "NextInSel",
        "e",
        "NextInAEL",
        "e",
        "Curr",
        "Point",
        "TopX",
        "e",
        "topY",
        "e",
        "Curr",
        "Y",
        "e",
        "e",
        "NextInAEL",
        "isModified",
        "_mSortedEdges",
        "isModified",
        "e",
        "_mSortedEdges",
        "e",
        "NextInSel",
        "e",
        "NextInSel",
        "e",
        "Curr",
        "X",
        "eNext",
        "Curr",
        "X",
        "IntersectPoint",
        "e",
        "eNext",
        "pt",
        "IntersectNode",
        "Edge1",
        "e",
        "Edge2",
        "eNext",
        "Pt",
        "pt",
        "_mIntersectList",
        "Add",
        "newNode",
        "SwapPositionsInSEL",
        "e",
        "eNext",
        "isModified",
        "e",
        "eNext",
        "e",
        "PrevInSel",
        "e",
        "PrevInSel",
        "NextInSel",
        "_mSortedEdges",
        "IntersectNode",
        "inode",
        "inode",
        "Edge1",
        "NextInSel",
        "inode",
        "Edge2",
        "inode",
        "Edge1",
        "PrevInSel",
        "inode",
        "Edge2",
        "IntersectNode",
        "node1",
        "IntersectNode",
        "node2",
        "node2",
        "Pt",
        "Y",
        "node1",
        "Pt",
        "Y",
        "_mIntersectList",
        "Sort",
        "_mIntersectNodeComparer",
        "CopyAELToSEL",
        "_mIntersectList",
        "Count",
        "i",
        "cnt",
        "i",
        "EdgesAdjacent",
        "_mIntersectList",
        "i",
        "i",
        "j",
        "cnt",
        "EdgesAdjacent",
        "_mIntersectList",
        "j",
        "j",
        "j",
        "cnt",
        "_mIntersectList",
        "i",
        "_mIntersectList",
        "i",
        "_mIntersectList",
        "j",
        "_mIntersectList",
        "j",
        "tmp",
        "SwapPositionsInSEL",
        "_mIntersectList",
        "i",
        "Edge1",
        "_mIntersectList",
        "i",
        "Edge2",
        "iNode",
        "_mIntersectList",
        "IntersectEdges",
        "iNode",
        "Edge1",
        "iNode",
        "Edge2",
        "iNode",
        "Pt",
        "SwapPositionsInAEL",
        "iNode",
        "Edge1",
        "iNode",
        "Edge2",
        "_mIntersectList",
        "Clear",
        "TEdge",
        "edge",
        "currentY",
        "currentY",
        "IsPracticallySame",
        "edge",
        "Top",
        "Y",
        "edge",
        "Top",
        "X",
        "edge",
        "Bot",
        "X",
        "edge",
        "Dx",
        "currentY",
        "edge",
        "Bot",
        "Y",
        "TEdge",
        "edge1",
        "TEdge",
        "edge2",
        "Point",
        "ip",
        "edge1",
        "Dx",
        "IsPracticallySame",
        "edge2",
        "Dx",
        "ipY",
        "edge1",
        "Curr",
        "Y",
        "ipX",
        "TopX",
        "edge1",
        "ipY",
        "ip",
        "Point",
        "ipX",
        "ipY",
        "edge1",
        "Delta",
        "X",
        "IsNegligible",
        "ipX",
        "edge1",
        "Bot",
        "X",
        "IsHorizontal",
        "edge2",
        "ipY",
        "edge2",
        "Bot",
        "Y",
        "b2",
        "edge2",
        "Bot",
        "Y",
        "edge2",
        "Bot",
        "X",
        "edge2",
        "Dx",
        "ipY",
        "ipX",
        "edge2",
        "Dx",
        "b2",
        "edge2",
        "Delta",
        "X",
        "IsNegligible",
        "ipX",
        "edge2",
        "Bot",
        "X",
        "IsHorizontal",
        "edge1",
        "ipY",
        "edge1",
        "Bot",
        "Y",
        "b1",
        "edge1",
        "Bot",
        "Y",
        "edge1",
        "Bot",
        "X",
        "edge1",
        "Dx",
        "ipY",
        "ipX",
        "edge1",
        "Dx",
        "b1",
        "b1",
        "edge1",
        "Bot",
        "X",
        "edge1",
        "Bot",
        "Y",
        "edge1",
        "Dx",
        "b2",
        "edge2",
        "Bot",
        "X",
        "edge2",
        "Bot",
        "Y",
        "edge2",
        "Dx",
        "b2",
        "b1",
        "edge1",
        "Dx",
        "edge2",
        "Dx",
        "ipY",
        "q",
        "ipX",
        "Abs",
        "edge1",
        "Dx",
        "Abs",
        "edge2",
        "Dx",
        "edge1",
        "Dx",
        "q",
        "b1",
        "edge2",
        "Dx",
        "q",
        "b2",
        "ipY",
        "edge1",
        "Top",
        "Y",
        "ipY",
        "edge2",
        "Top",
        "Y",
        "ipY",
        "edge1",
        "Top",
        "Y",
        "edge2",
        "Top",
        "Y",
        "edge1",
        "Top",
        "Y",
        "edge2",
        "Top",
        "Y",
        "ipX",
        "TopX",
        "Abs",
        "edge1",
        "Dx",
        "Abs",
        "edge2",
        "Dx",
        "edge1",
        "edge2",
        "ipY",
        "ipY",
        "edge1",
        "Curr",
        "Y",
        "ipY",
        "edge1",
        "Curr",
        "Y",
        "ipX",
        "TopX",
        "Abs",
        "edge1",
        "Dx",
        "Abs",
        "edge2",
        "Dx",
        "edge2",
        "edge1",
        "ipY",
        "ip",
        "Point",
        "ipX",
        "ipY",
        "topY",
        "e",
        "IsMaxima",
        "e",
        "topY",
        "isMaximaEdge",
        "GetMaximaPair",
        "e",
        "isMaximaEdge",
        "eMaxPair",
        "IsHorizontal",
        "eMaxPair",
        "isMaximaEdge",
        "e",
        "PrevInAEL",
        "DoMaxima",
        "e",
        "e",
        "ePrev",
        "_mActiveEdges",
        "ePrev",
        "NextInAEL",
        "IsIntermediate",
        "e",
        "topY",
        "IsHorizontal",
        "e",
        "NextInLml",
        "UpdateEdgeIntoAEL",
        "e",
        "e",
        "OutIdx",
        "AddOutPt",
        "e",
        "e",
        "Bot",
        "AddEdgeToSEL",
        "e",
        "e",
        "Curr",
        "Point",
        "TopX",
        "e",
        "topY",
        "topY",
        "StrictlySimple",
        "e",
        "PrevInAEL",
        "e",
        "OutIdx",
        "e",
        "WindDelta",
        "ePrev",
        "ePrev",
        "OutIdx",
        "ePrev",
        "Curr",
        "X",
        "IsPracticallySame",
        "e",
        "Curr",
        "X",
        "ePrev",
        "WindDelta",
        "Point",
        "e",
        "Curr",
        "AddOutPt",
        "ePrev",
        "ip",
        "AddOutPt",
        "e",
        "ip",
        "AddJoin",
        "op",
        "op2",
        "ip",
        "e",
        "e",
        "NextInAEL",
        "ProcessHorizontals",
        "e",
        "_mActiveEdges",
        "e",
        "IsIntermediate",
        "e",
        "topY",
        "e",
        "OutIdx",
        "op",
        "AddOutPt",
        "e",
        "e",
        "Top",
        "UpdateEdgeIntoAEL",
        "e",
        "e",
        "PrevInAEL",
        "e",
        "NextInAEL",
        "ePrev",
        "ePrev",
        "Curr",
        "X",
        "IsPracticallySame",
        "e",
        "Bot",
        "X",
        "ePrev",
        "Curr",
        "Y",
        "IsPracticallySame",
        "e",
        "Bot",
        "Y",
        "op",
        "ePrev",
        "OutIdx",
        "ePrev",
        "Curr",
        "Y",
        "ePrev",
        "Top",
        "Y",
        "SlopesEqual",
        "e",
        "ePrev",
        "e",
        "WindDelta",
        "ePrev",
        "WindDelta",
        "AddOutPt",
        "ePrev",
        "e",
        "Bot",
        "AddJoin",
        "op",
        "op2",
        "e",
        "Top",
        "eNext",
        "eNext",
        "Curr",
        "X",
        "IsPracticallySame",
        "e",
        "Bot",
        "X",
        "eNext",
        "Curr",
        "Y",
        "IsPracticallySame",
        "e",
        "Bot",
        "Y",
        "op",
        "eNext",
        "OutIdx",
        "eNext",
        "Curr",
        "Y",
        "eNext",
        "Top",
        "Y",
        "SlopesEqual",
        "e",
        "eNext",
        "e",
        "WindDelta",
        "eNext",
        "WindDelta",
        "AddOutPt",
        "eNext",
        "e",
        "Bot",
        "AddJoin",
        "op",
        "op2",
        "e",
        "Top",
        "e",
        "e",
        "NextInAEL",
        "TEdge",
        "e",
        "GetMaximaPair",
        "e",
        "eMaxPair",
        "e",
        "OutIdx",
        "AddOutPt",
        "e",
        "e",
        "Top",
        "DeleteFromAEL",
        "e",
        "e",
        "NextInAEL",
        "eNext",
        "eNext",
        "eMaxPair",
        "IntersectEdges",
        "e",
        "eNext",
        "e",
        "Top",
        "SwapPositionsInAEL",
        "e",
        "eNext",
        "eNext",
        "e",
        "NextInAEL",
        "e",
        "OutIdx",
        "Unassigned",
        "eMaxPair",
        "OutIdx",
        "Unassigned",
        "DeleteFromAEL",
        "e",
        "DeleteFromAEL",
        "eMaxPair",
        "e",
        "OutIdx",
        "eMaxPair",
        "OutIdx",
        "e",
        "OutIdx",
        "AddLocalMaxPoly",
        "e",
        "eMaxPair",
        "e",
        "Top",
        "DeleteFromAEL",
        "e",
        "DeleteFromAEL",
        "eMaxPair",
        "e",
        "WindDelta",
        "e",
        "OutIdx",
        "AddOutPt",
        "e",
        "e",
        "Top",
        "e",
        "OutIdx",
        "Unassigned",
        "DeleteFromAEL",
        "e",
        "eMaxPair",
        "OutIdx",
        "AddOutPt",
        "eMaxPair",
        "e",
        "Top",
        "eMaxPair",
        "OutIdx",
        "Unassigned",
        "DeleteFromAEL",
        "eMaxPair",
        "ClipperException",
        "Paths",
        "polys",
        "poly",
        "polys",
        "poly",
        "Reverse",
        "Path",
        "poly",
        "Area",
        "poly",
        "OutPt",
        "pts",
        "pts",
        "result",
        "p",
        "p",
        "Next",
        "p",
        "pts",
        "result",
        "Paths",
        "polyg",
        "polyg",
        "Clear",
        "polyg",
        "Capacity",
        "_mPolyOuts",
        "Count",
        "outRec",
        "_mPolyOuts",
        "outRec",
        "Pts",
        "outRec",
        "Pts",
        "Prev",
        "PointCount",
        "p",
        "cnt",
        "Path",
        "cnt",
        "j",
        "cnt",
        "j",
        "pg",
        "Add",
        "p",
        "Pt",
        "p",
        "p",
        "Prev",
        "polyg",
        "Add",
        "pg",
        "PolyTree",
        "polytree",
        "polytree",
        "Clear",
        "polytree",
        "MAllPolys",
        "Capacity",
        "_mPolyOuts",
        "Count",
        "outRec",
        "_mPolyOuts",
        "PointCount",
        "outRec",
        "Pts",
        "outRec",
        "IsOpen",
        "cnt",
        "outRec",
        "IsOpen",
        "cnt",
        "FixHoleLinkage",
        "outRec",
        "PolyNode",
        "polytree",
        "MAllPolys",
        "Add",
        "pn",
        "outRec",
        "PolyNode",
        "pn",
        "pn",
        "MPolygon",
        "Capacity",
        "cnt",
        "outRec",
        "Pts",
        "Prev",
        "j",
        "cnt",
        "j",
        "pn",
        "MPolygon",
        "Add",
        "op",
        "Pt",
        "op",
        "op",
        "Prev",
        "polytree",
        "MChilds",
        "Capacity",
        "_mPolyOuts",
        "Count",
        "outRec",
        "_mPolyOuts",
        "Where",
        "outRec",
        "PolyNode",
        "outRec",
        "IsOpen",
        "outRec",
        "PolyNode",
        "IsOpen",
        "polytree",
        "AddChild",
        "outRec",
        "PolyNode",
        "outRec",
        "FirstLeft",
        "PolyNode",
        "outRec",
        "FirstLeft",
        "PolyNode",
        "AddChild",
        "outRec",
        "PolyNode",
        "polytree",
        "AddChild",
        "outRec",
        "PolyNode",
        "OutRec",
        "outRec",
        "outRec",
        "BottomPt",
        "outRec",
        "Pts",
        "pp",
        "Prev",
        "pp",
        "pp",
        "Prev",
        "pp",
        "Next",
        "outRec",
        "Pts",
        "pp",
        "Pt",
        "pp",
        "Next",
        "Pt",
        "pp",
        "Pt",
        "pp",
        "Prev",
        "Pt",
        "SlopesEqual",
        "pp",
        "Prev",
        "Pt",
        "pp",
        "Pt",
        "pp",
        "Next",
        "Pt",
        "PreserveCollinear",
        "Pt2IsBetweenPt1AndPt3",
        "pp",
        "Prev",
        "Pt",
        "pp",
        "Pt",
        "pp",
        "Next",
        "Pt",
        "lastOk",
        "pp",
        "Prev",
        "Next",
        "pp",
        "Next",
        "pp",
        "Next",
        "Prev",
        "pp",
        "Prev",
        "pp",
        "pp",
        "Prev",
        "pp",
        "lastOk",
        "lastOk",
        "lastOk",
        "pp",
        "pp",
        "pp",
        "Next",
        "outRec",
        "Pts",
        "pp",
        "OutPt",
        "outPt",
        "insertAfter",
        "OutPt",
        "Pt",
        "outPt",
        "Pt",
        "Idx",
        "outPt",
        "Idx",
        "insertAfter",
        "result",
        "Next",
        "outPt",
        "Next",
        "result",
        "Prev",
        "outPt",
        "outPt",
        "Next",
        "Prev",
        "result",
        "outPt",
        "Next",
        "result",
        "result",
        "Prev",
        "outPt",
        "Prev",
        "result",
        "Next",
        "outPt",
        "outPt",
        "Prev",
        "Next",
        "result",
        "outPt",
        "Prev",
        "result",
        "result",
        "a1",
        "a2",
        "b1",
        "b2",
        "left",
        "right",
        "a1",
        "a2",
        "b1",
        "b2",
        "left",
        "Max",
        "a1",
        "b1",
        "right",
        "Min",
        "a2",
        "b2",
        "left",
        "Max",
        "a1",
        "b2",
        "right",
        "Min",
        "a2",
        "b1",
        "b1",
        "b2",
        "left",
        "Max",
        "a2",
        "b1",
        "right",
        "Min",
        "a1",
        "b2",
        "left",
        "Max",
        "a2",
        "b2",
        "right",
        "Min",
        "a1",
        "b1",
        "left",
        "right",
        "OutPt",
        "op1",
        "OutPt",
        "op1B",
        "OutPt",
        "op2",
        "OutPt",
        "op2B",
        "Point",
        "point",
        "discardLeft",
        "op1",
        "Pt",
        "X",
        "op1B",
        "Pt",
        "X",
        "Direction",
        "RightToLeft",
        "Direction",
        "LeftToRight",
        "op2",
        "Pt",
        "X",
        "op2B",
        "Pt",
        "X",
        "Direction",
        "RightToLeft",
        "Direction",
        "LeftToRight",
        "dir1",
        "dir2",
        "dir1",
        "Direction",
        "LeftToRight",
        "op1",
        "Next",
        "Pt",
        "X",
        "point",
        "X",
        "op1",
        "Next",
        "Pt",
        "X",
        "op1",
        "Pt",
        "X",
        "op1",
        "Next",
        "Pt",
        "Y",
        "IsPracticallySame",
        "point",
        "Y",
        "op1",
        "op1",
        "Next",
        "discardLeft",
        "op1",
        "Pt",
        "X",
        "IsPracticallySame",
        "point",
        "X",
        "op1",
        "op1",
        "Next",
        "op1B",
        "DupOutPt",
        "op1",
        "discardLeft",
        "op1B",
        "Pt",
        "point",
        "op1",
        "op1B",
        "op1",
        "Pt",
        "point",
        "op1B",
        "DupOutPt",
        "op1",
        "discardLeft",
        "op1",
        "Next",
        "Pt",
        "X",
        "point",
        "X",
        "op1",
        "Next",
        "Pt",
        "X",
        "op1",
        "Pt",
        "X",
        "op1",
        "Next",
        "Pt",
        "Y",
        "IsPracticallySame",
        "point",
        "Y",
        "op1",
        "op1",
        "Next",
        "discardLeft",
        "op1",
        "Pt",
        "X",
        "IsPracticallySame",
        "point",
        "X",
        "op1",
        "op1",
        "Next",
        "op1B",
        "DupOutPt",
        "op1",
        "discardLeft",
        "op1B",
        "Pt",
        "point",
        "op1",
        "op1B",
        "op1",
        "Pt",
        "point",
        "op1B",
        "DupOutPt",
        "op1",
        "discardLeft",
        "dir2",
        "Direction",
        "LeftToRight",
        "op2",
        "Next",
        "Pt",
        "X",
        "point",
        "X",
        "op2",
        "Next",
        "Pt",
        "X",
        "op2",
        "Pt",
        "X",
        "op2",
        "Next",
        "Pt",
        "Y",
        "IsPracticallySame",
        "point",
        "Y",
        "op2",
        "op2",
        "Next",
        "discardLeft",
        "op2",
        "Pt",
        "X",
        "IsPracticallySame",
        "point",
        "X",
        "op2",
        "op2",
        "Next",
        "op2B",
        "DupOutPt",
        "op2",
        "discardLeft",
        "op2B",
        "Pt",
        "point",
        "op2",
        "op2B",
        "op2",
        "Pt",
        "point",
        "op2B",
        "DupOutPt",
        "op2",
        "discardLeft",
        "op2",
        "Next",
        "Pt",
        "X",
        "point",
        "X",
        "op2",
        "Next",
        "Pt",
        "X",
        "op2",
        "Pt",
        "X",
        "op2",
        "Next",
        "Pt",
        "Y",
        "IsPracticallySame",
        "point",
        "Y",
        "op2",
        "op2",
        "Next",
        "discardLeft",
        "op2",
        "Pt",
        "X",
        "IsPracticallySame",
        "point",
        "X",
        "op2",
        "op2",
        "Next",
        "op2B",
        "DupOutPt",
        "op2",
        "discardLeft",
        "op2B",
        "Pt",
        "point",
        "op2",
        "op2B",
        "op2",
        "Pt",
        "point",
        "op2B",
        "DupOutPt",
        "op2",
        "discardLeft",
        "dir1",
        "Direction",
        "LeftToRight",
        "discardLeft",
        "op1",
        "Prev",
        "op2",
        "op2",
        "Next",
        "op1",
        "op1B",
        "Next",
        "op2B",
        "op2B",
        "Prev",
        "op1B",
        "op1",
        "Next",
        "op2",
        "op2",
        "Prev",
        "op1",
        "op1B",
        "Prev",
        "op2B",
        "op2B",
        "Next",
        "op1B",
        "Join",
        "j",
        "OutRec",
        "outRec1",
        "OutRec",
        "outRec2",
        "j",
        "OutPt1",
        "j",
        "OutPt2",
        "j",
        "OutPt1",
        "Pt",
        "Y",
        "IsPracticallySame",
        "j",
        "OffPt",
        "Y",
        "isHorizontal",
        "j",
        "OffPt",
        "j",
        "OutPt1",
        "Pt",
        "j",
        "OffPt",
        "j",
        "OutPt2",
        "Pt",
        "outRec1",
        "outRec2",
        "op1B",
        "j",
        "OutPt1",
        "Next",
        "op1B",
        "op1",
        "op1B",
        "Pt",
        "j",
        "OffPt",
        "op1B",
        "op1B",
        "Next",
        "op1B",
        "Pt",
        "Y",
        "j",
        "OffPt",
        "Y",
        "op2B",
        "j",
        "OutPt2",
        "Next",
        "op2B",
        "op2",
        "op2B",
        "Pt",
        "j",
        "OffPt",
        "op2B",
        "op2B",
        "Next",
        "op2B",
        "Pt",
        "Y",
        "j",
        "OffPt",
        "Y",
        "reverse1",
        "reverse2",
        "reverse1",
        "op1B",
        "DupOutPt",
        "op1",
        "op2B",
        "DupOutPt",
        "op2",
        "op1",
        "Prev",
        "op2",
        "op2",
        "Next",
        "op1",
        "op1B",
        "Next",
        "op2B",
        "op2B",
        "Prev",
        "op1B",
        "j",
        "OutPt1",
        "op1",
        "j",
        "OutPt2",
        "op1B",
        "op1B",
        "DupOutPt",
        "op1",
        "op2B",
        "DupOutPt",
        "op2",
        "op1",
        "Next",
        "op2",
        "op2",
        "Prev",
        "op1",
        "op1B",
        "Prev",
        "op2B",
        "op2B",
        "Next",
        "op1B",
        "j",
        "OutPt1",
        "op1",
        "j",
        "OutPt2",
        "op1B",
        "isHorizontal",
        "op1B",
        "op1",
        "op1",
        "Prev",
        "Pt",
        "Y",
        "IsPracticallySame",
        "op1",
        "Pt",
        "Y",
        "op1",
        "Prev",
        "op1B",
        "op1",
        "Prev",
        "op2",
        "op1",
        "op1",
        "Prev",
        "op1B",
        "Next",
        "Pt",
        "Y",
        "IsPracticallySame",
        "op1B",
        "Pt",
        "Y",
        "op1B",
        "Next",
        "op1",
        "op1B",
        "Next",
        "op2",
        "op1B",
        "op1B",
        "Next",
        "op1B",
        "Next",
        "op1",
        "op1B",
        "Next",
        "op2",
        "op2B",
        "op2",
        "op2",
        "Prev",
        "Pt",
        "Y",
        "IsPracticallySame",
        "op2",
        "Pt",
        "Y",
        "op2",
        "Prev",
        "op2B",
        "op2",
        "Prev",
        "op1B",
        "op2",
        "op2",
        "Prev",
        "op2B",
        "Next",
        "Pt",
        "Y",
        "IsPracticallySame",
        "op2B",
        "Pt",
        "Y",
        "op2B",
        "Next",
        "op2",
        "op2B",
        "Next",
        "op1",
        "op2B",
        "op2B",
        "Next",
        "op2B",
        "Next",
        "op2",
        "op2B",
        "Next",
        "op1",
        "GetOverlap",
        "op1",
        "Pt",
        "X",
        "op1B",
        "Pt",
        "X",
        "op2",
        "Pt",
        "X",
        "op2B",
        "Pt",
        "X",
        "left",
        "right",
        "op1",
        "Pt",
        "X",
        "left",
        "op1",
        "Pt",
        "X",
        "right",
        "pt",
        "op1",
        "Pt",
        "discardLeftSide",
        "op1",
        "Pt",
        "X",
        "op1B",
        "Pt",
        "X",
        "op2",
        "Pt",
        "X",
        "left",
        "op2",
        "Pt",
        "X",
        "right",
        "pt",
        "op2",
        "Pt",
        "discardLeftSide",
        "op2",
        "Pt",
        "X",
        "op2B",
        "Pt",
        "X",
        "op1B",
        "Pt",
        "X",
        "left",
        "op1B",
        "Pt",
        "X",
        "right",
        "pt",
        "op1B",
        "Pt",
        "discardLeftSide",
        "op1B",
        "Pt",
        "X",
        "op1",
        "Pt",
        "X",
        "pt",
        "op2B",
        "Pt",
        "discardLeftSide",
        "op2B",
        "Pt",
        "X",
        "op2",
        "Pt",
        "X",
        "j",
        "OutPt1",
        "op1",
        "j",
        "OutPt2",
        "op2",
        "JoinHorz",
        "op1",
        "op1B",
        "op2",
        "op2B",
        "pt",
        "discardLeftSide",
        "op1B",
        "op1",
        "Next",
        "op1B",
        "Pt",
        "op1",
        "Pt",
        "op1B",
        "op1",
        "op1B",
        "op1B",
        "Next",
        "op1B",
        "Pt",
        "Y",
        "op1",
        "Pt",
        "Y",
        "SlopesEqual",
        "op1",
        "Pt",
        "op1B",
        "Pt",
        "j",
        "OffPt",
        "reverse1",
        "op1B",
        "op1",
        "Prev",
        "op1B",
        "Pt",
        "op1",
        "Pt",
        "op1B",
        "op1",
        "op1B",
        "op1B",
        "Prev",
        "op1B",
        "Pt",
        "Y",
        "op1",
        "Pt",
        "Y",
        "SlopesEqual",
        "op1",
        "Pt",
        "op1B",
        "Pt",
        "j",
        "OffPt",
        "op2B",
        "op2",
        "Next",
        "op2B",
        "Pt",
        "op2",
        "Pt",
        "op2B",
        "op2",
        "op2B",
        "op2B",
        "Next",
        "op2B",
        "Pt",
        "Y",
        "op2",
        "Pt",
        "Y",
        "SlopesEqual",
        "op2",
        "Pt",
        "op2B",
        "Pt",
        "j",
        "OffPt",
        "reverse2",
        "op2B",
        "op2",
        "Prev",
        "op2B",
        "Pt",
        "op2",
        "Pt",
        "op2B",
        "op2",
        "op2B",
        "op2B",
        "Prev",
        "op2B",
        "Pt",
        "Y",
        "op2",
        "Pt",
        "Y",
        "SlopesEqual",
        "op2",
        "Pt",
        "op2B",
        "Pt",
        "j",
        "OffPt",
        "op1B",
        "op1",
        "op2B",
        "op2",
        "op1B",
        "op2B",
        "outRec1",
        "outRec2",
        "reverse1",
        "reverse2",
        "reverse1",
        "op1B",
        "DupOutPt",
        "op1",
        "op2B",
        "DupOutPt",
        "op2",
        "op1",
        "Prev",
        "op2",
        "op2",
        "Next",
        "op1",
        "op1B",
        "Next",
        "op2B",
        "op2B",
        "Prev",
        "op1B",
        "j",
        "OutPt1",
        "op1",
        "j",
        "OutPt2",
        "op1B",
        "op1B",
        "DupOutPt",
        "op1",
        "op2B",
        "DupOutPt",
        "op2",
        "op1",
        "Next",
        "op2",
        "op2",
        "Prev",
        "op1",
        "op1B",
        "Prev",
        "op2B",
        "op2B",
        "Next",
        "op1B",
        "j",
        "OutPt1",
        "op1",
        "j",
        "OutPt2",
        "op1B",
        "Point",
        "pt",
        "Path",
        "path",
        "path",
        "Count",
        "cnt",
        "path",
        "i",
        "cnt",
        "i",
        "i",
        "cnt",
        "path",
        "path",
        "i",
        "ipNext",
        "Y",
        "IsPracticallySame",
        "pt",
        "Y",
        "ipNext",
        "X",
        "IsPracticallySame",
        "pt",
        "X",
        "ip",
        "Y",
        "IsPracticallySame",
        "pt",
        "Y",
        "ipNext",
        "X",
        "pt",
        "X",
        "ip",
        "X",
        "pt",
        "X",
        "ip",
        "Y",
        "pt",
        "Y",
        "ipNext",
        "Y",
        "pt",
        "Y",
        "ip",
        "X",
        "pt",
        "X",
        "ipNext",
        "X",
        "pt",
        "X",
        "result",
        "result",
        "ip",
        "X",
        "pt",
        "X",
        "ipNext",
        "Y",
        "pt",
        "Y",
        "ipNext",
        "X",
        "pt",
        "X",
        "ip",
        "Y",
        "pt",
        "Y",
        "d",
        "IsNegligible",
        "d",
        "ipNext",
        "Y",
        "ip",
        "Y",
        "result",
        "result",
        "ipNext",
        "X",
        "pt",
        "X",
        "ip",
        "X",
        "pt",
        "X",
        "ipNext",
        "Y",
        "pt",
        "Y",
        "ipNext",
        "X",
        "pt",
        "X",
        "ip",
        "Y",
        "pt",
        "Y",
        "d",
        "IsNegligible",
        "d",
        "ipNext",
        "Y",
        "ip",
        "Y",
        "result",
        "result",
        "ip",
        "ipNext",
        "result",
        "Point",
        "pt",
        "OutPt",
        "op",
        "pt",
        "X",
        "pt",
        "Y",
        "op",
        "Pt",
        "X",
        "op",
        "Pt",
        "Y",
        "op",
        "op",
        "Next",
        "op",
        "Pt",
        "X",
        "op",
        "Pt",
        "Y",
        "poly1Y",
        "IsPracticallySame",
        "pty",
        "poly1X",
        "IsPracticallySame",
        "ptx",
        "poly0Y",
        "IsPracticallySame",
        "pty",
        "poly1X",
        "ptx",
        "poly0X",
        "ptx",
        "poly0Y",
        "pty",
        "poly1Y",
        "pty",
        "poly0X",
        "ptx",
        "poly1X",
        "ptx",
        "result",
        "result",
        "poly0X",
        "ptx",
        "poly1Y",
        "pty",
        "poly1X",
        "ptx",
        "poly0Y",
        "pty",
        "d",
        "IsNegligible",
        "d",
        "poly1Y",
        "poly0Y",
        "result",
        "result",
        "poly1X",
        "ptx",
        "poly0X",
        "ptx",
        "poly1Y",
        "pty",
        "poly1X",
        "ptx",
        "poly0Y",
        "pty",
        "d",
        "IsNegligible",
        "d",
        "poly1Y",
        "poly0Y",
        "result",
        "result",
        "poly0X",
        "poly1X",
        "poly0Y",
        "poly1Y",
        "startOp",
        "op",
        "result",
        "OutPt",
        "outPt1",
        "OutPt",
        "outPt2",
        "PointInPolygon",
        "op",
        "Pt",
        "outPt2",
        "res",
        "res",
        "op",
        "op",
        "Next",
        "op",
        "outPt1",
        "OutRec",
        "oldOutRec",
        "OutRec",
        "newOutRec",
        "outRec",
        "_mPolyOuts",
        "outRec",
        "Pts",
        "outRec",
        "FirstLeft",
        "ParseFirstLeft",
        "outRec",
        "FirstLeft",
        "firstLeft",
        "oldOutRec",
        "Poly2ContainsPoly1",
        "outRec",
        "Pts",
        "newOutRec",
        "Pts",
        "outRec",
        "FirstLeft",
        "newOutRec",
        "OutRec",
        "oldOutRec",
        "OutRec",
        "newOutRec",
        "outRec",
        "_mPolyOuts",
        "Where",
        "outRec",
        "FirstLeft",
        "oldOutRec",
        "outRec",
        "FirstLeft",
        "newOutRec",
        "OutRec",
        "firstLeft",
        "firstLeft",
        "firstLeft",
        "Pts",
        "firstLeft",
        "firstLeft",
        "FirstLeft",
        "firstLeft",
        "join1",
        "_mJoins",
        "GetOutRec",
        "join1",
        "OutPt1",
        "Idx",
        "GetOutRec",
        "join1",
        "OutPt2",
        "Idx",
        "outRec1",
        "Pts",
        "outRec2",
        "Pts",
        "outRec1",
        "outRec2",
        "holeStateRec",
        "outRec1",
        "Param1RightOfParam2",
        "outRec1",
        "outRec2",
        "holeStateRec",
        "outRec2",
        "Param1RightOfParam2",
        "outRec2",
        "outRec1",
        "holeStateRec",
        "outRec1",
        "holeStateRec",
        "GetLowermostRec",
        "outRec1",
        "outRec2",
        "JoinPoints",
        "join1",
        "outRec1",
        "outRec2",
        "outRec1",
        "outRec2",
        "outRec1",
        "Pts",
        "join1",
        "OutPt1",
        "outRec1",
        "BottomPt",
        "outRec2",
        "CreateOutRec",
        "outRec2",
        "Pts",
        "join1",
        "OutPt2",
        "UpdateOutPtIdxs",
        "outRec2",
        "_mUsingPolyTree",
        "j",
        "_mPolyOuts",
        "Count",
        "j",
        "_mPolyOuts",
        "j",
        "oRec",
        "Pts",
        "ParseFirstLeft",
        "oRec",
        "FirstLeft",
        "outRec1",
        "oRec",
        "IsHole",
        "outRec1",
        "IsHole",
        "Poly2ContainsPoly1",
        "oRec",
        "Pts",
        "join1",
        "OutPt2",
        "oRec",
        "FirstLeft",
        "outRec2",
        "Poly2ContainsPoly1",
        "outRec2",
        "Pts",
        "outRec1",
        "Pts",
        "outRec2",
        "IsHole",
        "outRec1",
        "IsHole",
        "outRec2",
        "FirstLeft",
        "outRec1",
        "_mUsingPolyTree",
        "FixupFirstLefts2",
        "outRec2",
        "outRec1",
        "outRec2",
        "IsHole",
        "ReverseSolution",
        "Area",
        "outRec2",
        "ReversePolyPtLinks",
        "outRec2",
        "Pts",
        "Poly2ContainsPoly1",
        "outRec1",
        "Pts",
        "outRec2",
        "Pts",
        "outRec2",
        "IsHole",
        "outRec1",
        "IsHole",
        "outRec1",
        "IsHole",
        "outRec2",
        "IsHole",
        "outRec2",
        "FirstLeft",
        "outRec1",
        "FirstLeft",
        "outRec1",
        "FirstLeft",
        "outRec2",
        "_mUsingPolyTree",
        "FixupFirstLefts2",
        "outRec1",
        "outRec2",
        "outRec1",
        "IsHole",
        "ReverseSolution",
        "Area",
        "outRec1",
        "ReversePolyPtLinks",
        "outRec1",
        "Pts",
        "outRec2",
        "IsHole",
        "outRec1",
        "IsHole",
        "outRec2",
        "FirstLeft",
        "outRec1",
        "FirstLeft",
        "_mUsingPolyTree",
        "FixupFirstLefts1",
        "outRec1",
        "outRec2",
        "outRec2",
        "Pts",
        "outRec2",
        "BottomPt",
        "outRec2",
        "Idx",
        "outRec1",
        "Idx",
        "outRec1",
        "IsHole",
        "holeStateRec",
        "IsHole",
        "holeStateRec",
        "outRec2",
        "outRec1",
        "FirstLeft",
        "outRec2",
        "FirstLeft",
        "outRec2",
        "FirstLeft",
        "outRec1",
        "_mUsingPolyTree",
        "FixupFirstLefts2",
        "outRec2",
        "outRec1",
        "OutRec",
        "outrec",
        "outrec",
        "Pts",
        "outPoint",
        "Idx",
        "outrec",
        "Idx",
        "outPoint",
        "outPoint",
        "Prev",
        "outPoint",
        "outrec",
        "Pts",
        "i",
        "_mPolyOuts",
        "Count",
        "_mPolyOuts",
        "i",
        "outrec",
        "Pts",
        "op",
        "outrec",
        "IsOpen",
        "op",
        "Next",
        "op2",
        "outrec",
        "Pts",
        "op",
        "Pt",
        "op2",
        "Pt",
        "op2",
        "Next",
        "op",
        "op2",
        "Prev",
        "op",
        "op",
        "Prev",
        "op2",
        "Prev",
        "op",
        "Prev",
        "op4",
        "op4",
        "Next",
        "op",
        "op2",
        "Prev",
        "op3",
        "op3",
        "Next",
        "op2",
        "outrec",
        "Pts",
        "op",
        "CreateOutRec",
        "outrec2",
        "Pts",
        "op2",
        "UpdateOutPtIdxs",
        "outrec2",
        "Poly2ContainsPoly1",
        "outrec2",
        "Pts",
        "outrec",
        "Pts",
        "outrec2",
        "IsHole",
        "outrec",
        "IsHole",
        "outrec2",
        "FirstLeft",
        "outrec",
        "_mUsingPolyTree",
        "FixupFirstLefts2",
        "outrec2",
        "outrec",
        "Poly2ContainsPoly1",
        "outrec",
        "Pts",
        "outrec2",
        "Pts",
        "outrec2",
        "IsHole",
        "outrec",
        "IsHole",
        "outrec",
        "IsHole",
        "outrec2",
        "IsHole",
        "outrec2",
        "FirstLeft",
        "outrec",
        "FirstLeft",
        "outrec",
        "FirstLeft",
        "outrec2",
        "_mUsingPolyTree",
        "FixupFirstLefts2",
        "outrec",
        "outrec2",
        "outrec2",
        "IsHole",
        "outrec",
        "IsHole",
        "outrec2",
        "FirstLeft",
        "outrec",
        "FirstLeft",
        "_mUsingPolyTree",
        "FixupFirstLefts1",
        "outrec",
        "outrec2",
        "op2",
        "op",
        "op2",
        "op2",
        "Next",
        "op",
        "op",
        "Next",
        "op",
        "outrec",
        "Pts",
        "Path",
        "poly",
        "poly",
        "Count",
        "cnt",
        "cnt",
        "i",
        "cnt",
        "i",
        "a",
        "poly",
        "j",
        "X",
        "poly",
        "i",
        "X",
        "poly",
        "j",
        "Y",
        "poly",
        "i",
        "Y",
        "j",
        "i",
        "a",
        "OutRec",
        "outRec",
        "outRec",
        "Pts",
        "op",
        "a",
        "a",
        "op",
        "Prev",
        "Pt",
        "X",
        "op",
        "Pt",
        "X",
        "op",
        "Prev",
        "Pt",
        "Y",
        "op",
        "Pt",
        "Y",
        "op",
        "op",
        "Next",
        "op",
        "outRec",
        "Pts",
        "a",
        "Path",
        "poly",
        "PolyFillType",
        "fillType",
        "PolyFillType",
        "EvenOdd",
        "Paths",
        "Clipper",
        "StrictlySimple",
        "clipper",
        "AddPath",
        "poly",
        "PolyType",
        "Subject",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "result",
        "fillType",
        "fillType",
        "result",
        "Paths",
        "polys",
        "PolyFillType",
        "fillType",
        "PolyFillType",
        "EvenOdd",
        "Paths",
        "Clipper",
        "StrictlySimple",
        "clipper",
        "AddPaths",
        "polys",
        "PolyType",
        "Subject",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "result",
        "fillType",
        "fillType",
        "result",
        "Point",
        "pt",
        "Point",
        "ln1",
        "Point",
        "ln2",
        "ln1",
        "Y",
        "ln2",
        "Y",
        "ln2",
        "X",
        "ln1",
        "X",
        "a",
        "ln1",
        "X",
        "b",
        "ln1",
        "Y",
        "c",
        "a",
        "pt",
        "X",
        "b",
        "pt",
        "Y",
        "c",
        "c",
        "c",
        "a",
        "a",
        "b",
        "b",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "Point",
        "pt3",
        "distSqrd",
        "Abs",
        "pt1",
        "X",
        "pt2",
        "X",
        "Abs",
        "pt1",
        "Y",
        "pt2",
        "Y",
        "pt1",
        "X",
        "pt2",
        "X",
        "pt1",
        "X",
        "pt3",
        "X",
        "DistanceFromLineSqrd",
        "pt1",
        "pt2",
        "pt3",
        "distSqrd",
        "pt2",
        "X",
        "pt1",
        "X",
        "pt2",
        "X",
        "pt3",
        "X",
        "DistanceFromLineSqrd",
        "pt2",
        "pt1",
        "pt3",
        "distSqrd",
        "DistanceFromLineSqrd",
        "pt3",
        "pt1",
        "pt2",
        "distSqrd",
        "pt1",
        "Y",
        "pt2",
        "Y",
        "pt1",
        "Y",
        "pt3",
        "Y",
        "DistanceFromLineSqrd",
        "pt1",
        "pt2",
        "pt3",
        "distSqrd",
        "pt2",
        "Y",
        "pt1",
        "Y",
        "pt2",
        "Y",
        "pt3",
        "Y",
        "DistanceFromLineSqrd",
        "pt2",
        "pt1",
        "pt3",
        "distSqrd",
        "DistanceFromLineSqrd",
        "pt3",
        "pt1",
        "pt2",
        "distSqrd",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "distSqrd",
        "pt1",
        "X",
        "pt2",
        "X",
        "pt1",
        "Y",
        "pt2",
        "Y",
        "dx",
        "dx",
        "dy",
        "dy",
        "distSqrd",
        "OutPt",
        "op",
        "op",
        "Prev",
        "result",
        "Next",
        "op",
        "Next",
        "op",
        "Next",
        "Prev",
        "result",
        "result",
        "Idx",
        "result",
        "Path",
        "path",
        "distance",
        "path",
        "Count",
        "cnt",
        "Path",
        "OutPt",
        "cnt",
        "i",
        "cnt",
        "i",
        "outPts",
        "i",
        "OutPt",
        "i",
        "cnt",
        "i",
        "outPts",
        "i",
        "Pt",
        "path",
        "i",
        "outPts",
        "i",
        "Next",
        "outPts",
        "i",
        "cnt",
        "outPts",
        "i",
        "Next",
        "Prev",
        "outPts",
        "i",
        "outPts",
        "i",
        "Idx",
        "distance",
        "distance",
        "outPts",
        "op",
        "Idx",
        "op",
        "Next",
        "op",
        "Prev",
        "PointsAreClose",
        "op",
        "Pt",
        "op",
        "Prev",
        "Pt",
        "distSqrd",
        "op",
        "ExcludeOp",
        "op",
        "cnt",
        "PointsAreClose",
        "op",
        "Prev",
        "Pt",
        "op",
        "Next",
        "Pt",
        "distSqrd",
        "ExcludeOp",
        "op",
        "Next",
        "op",
        "ExcludeOp",
        "op",
        "cnt",
        "SlopesNearCollinear",
        "op",
        "Prev",
        "Pt",
        "op",
        "Pt",
        "op",
        "Next",
        "Pt",
        "distSqrd",
        "op",
        "ExcludeOp",
        "op",
        "cnt",
        "op",
        "Idx",
        "op",
        "op",
        "Next",
        "cnt",
        "cnt",
        "Path",
        "cnt",
        "i",
        "cnt",
        "i",
        "result",
        "Add",
        "op",
        "Pt",
        "op",
        "op",
        "Next",
        "result",
        "Paths",
        "polys",
        "distance",
        "Paths",
        "polys",
        "Count",
        "result",
        "AddRange",
        "polys",
        "Select",
        "CleanPolygon",
        "t",
        "distance",
        "result",
        "Path",
        "pattern",
        "Path",
        "path",
        "isSum",
        "isClosed",
        "isClosed",
        "pattern",
        "Count",
        "path",
        "Count",
        "Paths",
        "pathCnt",
        "isSum",
        "i",
        "pathCnt",
        "i",
        "Path",
        "polyCnt",
        "p",
        "AddRange",
        "pattern",
        "Select",
        "Point",
        "path",
        "i1",
        "X",
        "ip",
        "X",
        "path",
        "i1",
        "Y",
        "ip",
        "Y",
        "result",
        "Add",
        "p",
        "i",
        "pathCnt",
        "i",
        "Path",
        "polyCnt",
        "p",
        "AddRange",
        "pattern",
        "Select",
        "Point",
        "path",
        "i1",
        "X",
        "ip",
        "X",
        "path",
        "i1",
        "Y",
        "ip",
        "Y",
        "result",
        "Add",
        "p",
        "Paths",
        "pathCnt",
        "delta",
        "polyCnt",
        "i",
        "pathCnt",
        "delta",
        "i",
        "j",
        "polyCnt",
        "j",
        "Path",
        "result",
        "i",
        "pathCnt",
        "j",
        "polyCnt",
        "result",
        "i",
        "pathCnt",
        "j",
        "polyCnt",
        "result",
        "i",
        "pathCnt",
        "j",
        "polyCnt",
        "result",
        "i",
        "pathCnt",
        "j",
        "polyCnt",
        "Orientation",
        "quad",
        "quad",
        "Reverse",
        "quads",
        "Add",
        "quad",
        "quads",
        "Path",
        "pattern",
        "Path",
        "path",
        "pathIsClosed",
        "Minkowski",
        "pattern",
        "path",
        "pathIsClosed",
        "Clipper",
        "clipper",
        "AddPaths",
        "paths",
        "PolyType",
        "Subject",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "paths",
        "PolyFillType",
        "NonZero",
        "PolyFillType",
        "NonZero",
        "paths",
        "Path",
        "path",
        "Point",
        "delta",
        "Path",
        "path",
        "Count",
        "i",
        "path",
        "Count",
        "i",
        "outPath",
        "Add",
        "Point",
        "path",
        "i",
        "X",
        "delta",
        "X",
        "path",
        "i",
        "Y",
        "delta",
        "Y",
        "outPath",
        "Path",
        "pattern",
        "Paths",
        "paths",
        "pathIsClosed",
        "Paths",
        "Clipper",
        "p",
        "paths",
        "Minkowski",
        "pattern",
        "p",
        "pathIsClosed",
        "clipper",
        "AddPaths",
        "tmp",
        "PolyType",
        "Subject",
        "pathIsClosed",
        "TranslatePath",
        "p",
        "pattern",
        "clipper",
        "AddPath",
        "path",
        "PolyType",
        "Clip",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "solution",
        "PolyFillType",
        "NonZero",
        "PolyFillType",
        "NonZero",
        "solution",
        "Path",
        "poly1",
        "Path",
        "poly2",
        "Minkowski",
        "poly1",
        "poly2",
        "Clipper",
        "clipper",
        "AddPaths",
        "paths",
        "PolyType",
        "Subject",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "paths",
        "PolyFillType",
        "NonZero",
        "PolyFillType",
        "NonZero",
        "paths",
        "NodeType",
        "NodeTypeAny",
        "NodeTypeOpen",
        "NodeTypeClosed",
        "PolyTree",
        "polytree",
        "Paths",
        "Capacity",
        "polytree",
        "Total",
        "AddPolyNodeToPaths",
        "polytree",
        "NodeType",
        "NodeTypeAny",
        "result",
        "result",
        "PolyNode",
        "polynode",
        "NodeType",
        "nt",
        "Paths",
        "paths",
        "nt",
        "NodeType",
        "NodeTypeOpen",
        "NodeType",
        "NodeTypeClosed",
        "match",
        "polynode",
        "IsOpen",
        "polynode",
        "MPolygon",
        "Count",
        "match",
        "paths",
        "Add",
        "polynode",
        "MPolygon",
        "PolyNode",
        "pn",
        "polynode",
        "Childs",
        "AddPolyNodeToPaths",
        "pn",
        "nt",
        "paths",
        "PolyTree",
        "polytree",
        "Paths",
        "Capacity",
        "polytree",
        "ChildCount",
        "i",
        "polytree",
        "ChildCount",
        "i",
        "polytree",
        "Childs",
        "i",
        "IsOpen",
        "result",
        "Add",
        "polytree",
        "Childs",
        "i",
        "MPolygon",
        "result",
        "PolyTree",
        "polytree",
        "Paths",
        "Capacity",
        "polytree",
        "Total",
        "AddPolyNodeToPaths",
        "polytree",
        "NodeType",
        "NodeTypeClosed",
        "result",
        "result",
        "DoublePoint",
        "DoublePoint",
        "PolyNode",
        "PI",
        "miterLimit",
        "arcTolerance",
        "DefArcTolerance",
        "MiterLimit",
        "miterLimit",
        "ArcTolerance",
        "arcTolerance",
        "_mLowest",
        "Point",
        "_mPolyNodes",
        "Childs",
        "Clear",
        "_mLowest",
        "Point",
        "Path",
        "path",
        "JoinType",
        "joinType",
        "EndType",
        "endType",
        "path",
        "Count",
        "highI",
        "PolyNode",
        "MJointype",
        "joinType",
        "MEndtype",
        "endType",
        "endType",
        "EndType",
        "ClosedLine",
        "endType",
        "EndType",
        "ClosedPolygon",
        "highI",
        "path",
        "path",
        "highI",
        "highI",
        "newNode",
        "MPolygon",
        "Capacity",
        "highI",
        "newNode",
        "MPolygon",
        "Add",
        "path",
        "i",
        "highI",
        "i",
        "newNode",
        "MPolygon",
        "j",
        "path",
        "i",
        "j",
        "newNode",
        "MPolygon",
        "Add",
        "path",
        "i",
        "path",
        "i",
        "Y",
        "newNode",
        "MPolygon",
        "k",
        "Y",
        "path",
        "i",
        "Y",
        "IsPracticallySame",
        "newNode",
        "MPolygon",
        "k",
        "Y",
        "path",
        "i",
        "X",
        "newNode",
        "MPolygon",
        "k",
        "X",
        "k",
        "j",
        "endType",
        "EndType",
        "ClosedPolygon",
        "j",
        "_mPolyNodes",
        "AddChild",
        "newNode",
        "endType",
        "EndType",
        "ClosedPolygon",
        "_mLowest",
        "X",
        "_mLowest",
        "Point",
        "_mPolyNodes",
        "ChildCount",
        "k",
        "_mPolyNodes",
        "Childs",
        "_mLowest",
        "X",
        "MPolygon",
        "_mLowest",
        "Y",
        "newNode",
        "MPolygon",
        "k",
        "Y",
        "ip",
        "Y",
        "newNode",
        "MPolygon",
        "k",
        "Y",
        "IsPracticallySame",
        "ip",
        "Y",
        "newNode",
        "MPolygon",
        "k",
        "X",
        "ip",
        "X",
        "_mLowest",
        "Point",
        "_mPolyNodes",
        "ChildCount",
        "k",
        "Paths",
        "paths",
        "JoinType",
        "joinType",
        "EndType",
        "endType",
        "path",
        "paths",
        "AddPath",
        "path",
        "joinType",
        "endType",
        "_mLowest",
        "X",
        "Clipper",
        "Orientation",
        "_mPolyNodes",
        "Childs",
        "_mLowest",
        "X",
        "MPolygon",
        "i",
        "_mPolyNodes",
        "ChildCount",
        "i",
        "_mPolyNodes",
        "Childs",
        "i",
        "node",
        "MEndtype",
        "EndType",
        "ClosedPolygon",
        "node",
        "MEndtype",
        "EndType",
        "ClosedLine",
        "Clipper",
        "Orientation",
        "node",
        "MPolygon",
        "node",
        "MPolygon",
        "Reverse",
        "i",
        "_mPolyNodes",
        "ChildCount",
        "i",
        "_mPolyNodes",
        "Childs",
        "i",
        "node",
        "MEndtype",
        "EndType",
        "ClosedLine",
        "Clipper",
        "Orientation",
        "node",
        "MPolygon",
        "node",
        "MPolygon",
        "Reverse",
        "Point",
        "pt1",
        "Point",
        "pt2",
        "pt2",
        "X",
        "pt1",
        "X",
        "pt2",
        "Y",
        "pt1",
        "Y",
        "dx",
        "IsNegligible",
        "dy",
        "IsNegligible",
        "DoublePoint",
        "Sqrt",
        "dx",
        "dx",
        "dy",
        "dy",
        "dx",
        "f",
        "dy",
        "f",
        "DoublePoint",
        "dy",
        "dx",
        "delta",
        "_mDestPolys",
        "Paths",
        "_mDelta",
        "delta",
        "ClipperBase",
        "near_zero",
        "delta",
        "_mDestPolys",
        "Capacity",
        "_mPolyNodes",
        "ChildCount",
        "i",
        "_mPolyNodes",
        "ChildCount",
        "i",
        "_mPolyNodes",
        "Childs",
        "i",
        "node",
        "MEndtype",
        "EndType",
        "ClosedPolygon",
        "_mDestPolys",
        "Add",
        "node",
        "MPolygon",
        "MiterLimit",
        "_mMiterLim",
        "MiterLimit",
        "MiterLimit",
        "_mMiterLim",
        "ArcTolerance",
        "y",
        "DefArcTolerance",
        "ArcTolerance",
        "Abs",
        "delta",
        "DefArcTolerance",
        "y",
        "Abs",
        "delta",
        "DefArcTolerance",
        "y",
        "ArcTolerance",
        "PI",
        "Acos",
        "y",
        "Abs",
        "delta",
        "_mSin",
        "Sin",
        "TwoPi",
        "steps",
        "_mCos",
        "Cos",
        "TwoPi",
        "steps",
        "_mStepsPerRad",
        "steps",
        "TwoPi",
        "delta",
        "_mSin",
        "_mSin",
        "_mDestPolys",
        "Capacity",
        "_mPolyNodes",
        "ChildCount",
        "i",
        "_mPolyNodes",
        "ChildCount",
        "i",
        "_mPolyNodes",
        "Childs",
        "i",
        "_mSrcPoly",
        "node",
        "MPolygon",
        "_mSrcPoly",
        "Count",
        "len",
        "delta",
        "len",
        "node",
        "MEndtype",
        "EndType",
        "ClosedPolygon",
        "_mDestPoly",
        "Path",
        "len",
        "node",
        "MJointype",
        "JoinType",
        "Round",
        "j",
        "steps",
        "j",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "X",
        "xval",
        "delta",
        "_mSrcPoly",
        "Y",
        "yval",
        "delta",
        "xval",
        "xval",
        "_mCos",
        "_mSin",
        "yval",
        "yval",
        "x2",
        "_mSin",
        "yval",
        "_mCos",
        "j",
        "j",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "X",
        "xval",
        "delta",
        "_mSrcPoly",
        "Y",
        "yval",
        "delta",
        "xval",
        "xval",
        "yval",
        "yval",
        "xval",
        "_mDestPolys",
        "Add",
        "_mDestPoly",
        "_mNormals",
        "Clear",
        "_mNormals",
        "Capacity",
        "len",
        "j",
        "len",
        "j",
        "_mNormals",
        "Add",
        "GetUnitNormal",
        "_mSrcPoly",
        "j",
        "_mSrcPoly",
        "j",
        "node",
        "MEndtype",
        "EndType",
        "ClosedLine",
        "node",
        "MEndtype",
        "EndType",
        "ClosedPolygon",
        "_mNormals",
        "Add",
        "GetUnitNormal",
        "_mSrcPoly",
        "len",
        "_mSrcPoly",
        "_mNormals",
        "Add",
        "DoublePoint",
        "_mNormals",
        "len",
        "node",
        "MEndtype",
        "EndType",
        "ClosedPolygon",
        "len",
        "j",
        "len",
        "j",
        "OffsetPoint",
        "j",
        "k",
        "node",
        "MJointype",
        "_mDestPolys",
        "Add",
        "_mDestPoly",
        "EndType",
        "ClosedLine",
        "len",
        "j",
        "len",
        "j",
        "OffsetPoint",
        "j",
        "k",
        "node",
        "MJointype",
        "_mDestPolys",
        "Add",
        "_mDestPoly",
        "_mDestPoly",
        "Path",
        "_mNormals",
        "len",
        "len",
        "j",
        "j",
        "_mNormals",
        "j",
        "DoublePoint",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "j",
        "Y",
        "_mNormals",
        "DoublePoint",
        "n",
        "X",
        "n",
        "Y",
        "k",
        "len",
        "j",
        "j",
        "OffsetPoint",
        "j",
        "k",
        "node",
        "MJointype",
        "_mDestPolys",
        "Add",
        "_mDestPoly",
        "j",
        "len",
        "j",
        "OffsetPoint",
        "j",
        "k",
        "node",
        "MJointype",
        "node",
        "MEndtype",
        "EndType",
        "OpenButt",
        "len",
        "pt1",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mNormals",
        "j",
        "X",
        "delta",
        "_mSrcPoly",
        "j",
        "Y",
        "_mNormals",
        "j",
        "Y",
        "delta",
        "_mDestPoly",
        "Add",
        "pt1",
        "pt1",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mNormals",
        "j",
        "X",
        "delta",
        "_mSrcPoly",
        "j",
        "Y",
        "_mNormals",
        "j",
        "Y",
        "delta",
        "_mDestPoly",
        "Add",
        "pt1",
        "len",
        "k",
        "len",
        "_mSinA",
        "_mNormals",
        "j",
        "DoublePoint",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "j",
        "Y",
        "node",
        "MEndtype",
        "EndType",
        "OpenSquare",
        "DoSquare",
        "j",
        "k",
        "DoRound",
        "j",
        "k",
        "len",
        "j",
        "j",
        "_mNormals",
        "j",
        "DoublePoint",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "j",
        "Y",
        "_mNormals",
        "DoublePoint",
        "_mNormals",
        "X",
        "_mNormals",
        "Y",
        "k",
        "len",
        "k",
        "j",
        "j",
        "OffsetPoint",
        "j",
        "k",
        "node",
        "MJointype",
        "node",
        "MEndtype",
        "EndType",
        "OpenButt",
        "pt1",
        "Point",
        "_mSrcPoly",
        "X",
        "_mNormals",
        "X",
        "delta",
        "_mSrcPoly",
        "Y",
        "_mNormals",
        "Y",
        "delta",
        "_mDestPoly",
        "Add",
        "pt1",
        "pt1",
        "Point",
        "_mSrcPoly",
        "X",
        "_mNormals",
        "X",
        "delta",
        "_mSrcPoly",
        "Y",
        "_mNormals",
        "Y",
        "delta",
        "_mDestPoly",
        "Add",
        "pt1",
        "_mSinA",
        "node",
        "MEndtype",
        "EndType",
        "OpenSquare",
        "DoSquare",
        "DoRound",
        "_mDestPolys",
        "Add",
        "_mDestPoly",
        "Paths",
        "solution",
        "delta",
        "solution",
        "Clear",
        "FixOrientations",
        "DoOffset",
        "delta",
        "Clipper",
        "clipper",
        "AddPaths",
        "_mDestPolys",
        "PolyType",
        "Subject",
        "delta",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "solution",
        "PolyFillType",
        "Positive",
        "PolyFillType",
        "Positive",
        "ClipperBase",
        "GetBounds",
        "_mDestPolys",
        "Path",
        "Point",
        "r",
        "Left",
        "r",
        "Bottom",
        "Point",
        "r",
        "Right",
        "r",
        "Bottom",
        "Point",
        "r",
        "Right",
        "r",
        "Top",
        "Point",
        "r",
        "Left",
        "r",
        "Top",
        "clipper",
        "AddPath",
        "outerPath",
        "PolyType",
        "Subject",
        "clipper",
        "ReverseSolution",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "solution",
        "PolyFillType",
        "Negative",
        "PolyFillType",
        "Negative",
        "solution",
        "Count",
        "solution",
        "RemoveAt",
        "PolyTree",
        "solution",
        "delta",
        "solution",
        "Clear",
        "FixOrientations",
        "DoOffset",
        "delta",
        "Clipper",
        "clipper",
        "AddPaths",
        "_mDestPolys",
        "PolyType",
        "Subject",
        "delta",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "solution",
        "PolyFillType",
        "Positive",
        "PolyFillType",
        "Positive",
        "ClipperBase",
        "GetBounds",
        "_mDestPolys",
        "Path",
        "Point",
        "r",
        "Left",
        "r",
        "Bottom",
        "Point",
        "r",
        "Right",
        "r",
        "Bottom",
        "Point",
        "r",
        "Right",
        "r",
        "Top",
        "Point",
        "r",
        "Left",
        "r",
        "Top",
        "clipper",
        "AddPath",
        "outerPath",
        "PolyType",
        "Subject",
        "clipper",
        "ReverseSolution",
        "clipper",
        "Execute",
        "ClipType",
        "Union",
        "solution",
        "PolyFillType",
        "Negative",
        "PolyFillType",
        "Negative",
        "solution",
        "ChildCount",
        "solution",
        "Childs",
        "ChildCount",
        "solution",
        "Childs",
        "solution",
        "Childs",
        "Capacity",
        "outerNode",
        "ChildCount",
        "solution",
        "Childs",
        "outerNode",
        "Childs",
        "solution",
        "Childs",
        "MParent",
        "solution",
        "i",
        "outerNode",
        "ChildCount",
        "i",
        "solution",
        "AddChild",
        "outerNode",
        "Childs",
        "i",
        "solution",
        "Clear",
        "j",
        "k",
        "JoinType",
        "jointype",
        "_mSinA",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "j",
        "Y",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "k",
        "Y",
        "Abs",
        "_mSinA",
        "_mDelta",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "j",
        "Y",
        "_mNormals",
        "k",
        "Y",
        "cosA",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mNormals",
        "k",
        "X",
        "_mDelta",
        "_mSrcPoly",
        "j",
        "Y",
        "_mNormals",
        "k",
        "Y",
        "_mDelta",
        "_mSinA",
        "_mSinA",
        "_mSinA",
        "_mSinA",
        "_mSinA",
        "_mDelta",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mNormals",
        "k",
        "X",
        "_mDelta",
        "_mSrcPoly",
        "j",
        "Y",
        "_mNormals",
        "k",
        "Y",
        "_mDelta",
        "_mDestPoly",
        "Add",
        "_mSrcPoly",
        "j",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mNormals",
        "j",
        "X",
        "_mDelta",
        "_mSrcPoly",
        "j",
        "Y",
        "_mNormals",
        "j",
        "Y",
        "_mDelta",
        "jointype",
        "JoinType",
        "Miter",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "j",
        "Y",
        "_mNormals",
        "k",
        "Y",
        "r",
        "_mMiterLim",
        "DoMiter",
        "j",
        "k",
        "r",
        "DoSquare",
        "j",
        "k",
        "JoinType",
        "Square",
        "DoSquare",
        "j",
        "k",
        "JoinType",
        "Round",
        "DoRound",
        "j",
        "k",
        "k",
        "j",
        "j",
        "k",
        "Tan",
        "Atan2",
        "_mSinA",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "k",
        "Y",
        "_mNormals",
        "j",
        "Y",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mDelta",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "k",
        "Y",
        "dx",
        "_mSrcPoly",
        "j",
        "Y",
        "_mDelta",
        "_mNormals",
        "k",
        "Y",
        "_mNormals",
        "k",
        "X",
        "dx",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mDelta",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "j",
        "Y",
        "dx",
        "_mSrcPoly",
        "j",
        "Y",
        "_mDelta",
        "_mNormals",
        "j",
        "Y",
        "_mNormals",
        "j",
        "X",
        "dx",
        "j",
        "k",
        "r",
        "_mDelta",
        "r",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "j",
        "X",
        "q",
        "_mSrcPoly",
        "j",
        "Y",
        "_mNormals",
        "k",
        "Y",
        "_mNormals",
        "j",
        "Y",
        "q",
        "j",
        "k",
        "Atan2",
        "_mSinA",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "j",
        "X",
        "_mNormals",
        "k",
        "Y",
        "_mNormals",
        "j",
        "Y",
        "Max",
        "_mStepsPerRad",
        "Abs",
        "a",
        "_mNormals",
        "k",
        "X",
        "_mNormals",
        "k",
        "Y",
        "i",
        "steps",
        "i",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "x",
        "_mDelta",
        "_mSrcPoly",
        "j",
        "Y",
        "y",
        "_mDelta",
        "x",
        "x",
        "_mCos",
        "_mSin",
        "y",
        "y",
        "x2",
        "_mSin",
        "y",
        "_mCos",
        "_mDestPoly",
        "Add",
        "Point",
        "_mSrcPoly",
        "j",
        "X",
        "_mNormals",
        "j",
        "X",
        "_mDelta",
        "_mSrcPoly",
        "j",
        "Y",
        "_mNormals",
        "j",
        "Y",
        "_mDelta",
        "description",
        "description"
    ],
    "literals": [
        "\"AddPath: Open paths must be subject.\"",
        "\"Error: PolyTree struct is need for open path clipping.\"",
        "\"UpdateEdgeIntoAEL: invalid call\"",
        "\"ProcessIntersections error\"",
        "\"DoMaxima error\""
    ],
    "variables": [
        "X",
        "Y",
        "MAllPolys",
        "i",
        "Total",
        "result",
        "PolyNode",
        "MParent",
        "Path",
        "MPolygon",
        "MIndex",
        "JoinType",
        "MJointype",
        "EndType",
        "MEndtype",
        "MChilds",
        "result",
        "PolyNode",
        "node",
        "MParent",
        "ChildCount",
        "Path",
        "Contour",
        "cnt",
        "Childs",
        "PolyNode",
        "Parent",
        "IsHole",
        "IsOpen",
        "Left",
        "Top",
        "Right",
        "Bottom",
        "Point",
        "Bot",
        "Point",
        "Curr",
        "Point",
        "Top",
        "Point",
        "Delta",
        "Dx",
        "PolyType",
        "PolyTyp",
        "EdgeSide",
        "Side",
        "WindDelta",
        "WindCnt",
        "WindCnt2",
        "OutIdx",
        "TEdge",
        "Next",
        "TEdge",
        "Prev",
        "TEdge",
        "NextInLml",
        "TEdge",
        "NextInAEL",
        "TEdge",
        "PrevInAEL",
        "TEdge",
        "NextInSel",
        "TEdge",
        "PrevInSel",
        "TEdge",
        "Edge1",
        "TEdge",
        "Edge2",
        "Point",
        "Pt",
        "i",
        "Y",
        "TEdge",
        "LeftBound",
        "TEdge",
        "RightBound",
        "LocalMinima",
        "Next",
        "Y",
        "Scanbeam",
        "Next",
        "Idx",
        "IsHole",
        "IsOpen",
        "OutRec",
        "FirstLeft",
        "OutPt",
        "Pts",
        "OutPt",
        "BottomPt",
        "PolyNode",
        "PolyNode",
        "Idx",
        "Point",
        "Pt",
        "OutPt",
        "Next",
        "OutPt",
        "Prev",
        "OutPt",
        "OutPt1",
        "OutPt",
        "OutPt2",
        "Point",
        "OffPt",
        "Horizontal",
        "Skip",
        "Unassigned",
        "Tolerance",
        "LocalMinima",
        "MMinimaList",
        "LocalMinima",
        "MCurrentLm",
        "MEdges",
        "MUseFullRange",
        "MHasOpenPaths",
        "PreserveCollinear",
        "pp2",
        "pp",
        "pp2",
        "pp",
        "j",
        "tmpLm",
        "e2",
        "e",
        "TEdge",
        "eStart",
        "result",
        "e",
        "TEdge",
        "horz",
        "locMin",
        "highI",
        "edges",
        "i",
        "isFlat",
        "i",
        "eStart",
        "TEdge",
        "edge",
        "eStart",
        "eLoopStop",
        "eStart",
        "locMin",
        "TEdge",
        "eMin",
        "locMin",
        "leftBoundIsForward",
        "edge2",
        "result",
        "i",
        "result",
        "deltaX",
        "deltaY",
        "tmpLm",
        "MMinimaList",
        "temp",
        "localMinima",
        "MMinimaList",
        "edge",
        "i",
        "cnt",
        "result",
        "j",
        "IOReverseSolution",
        "IOStrictlySimple",
        "IOPreserveCollinear",
        "_mPolyOuts",
        "ClipType",
        "_mClipType",
        "Scanbeam",
        "_mScanbeam",
        "TEdge",
        "_mActiveEdges",
        "TEdge",
        "_mSortedEdges",
        "_mIntersectList",
        "_mIntersectNodeComparer",
        "_mExecuteLocked",
        "PolyFillType",
        "_mClipFillType",
        "PolyFillType",
        "_mSubjFillType",
        "_mJoins",
        "_mGhostJoins",
        "_mUsingPolyTree",
        "lm",
        "MMinimaList",
        "ReverseSolution",
        "StrictlySimple",
        "newSb",
        "sb2",
        "_mScanbeam",
        "newSb",
        "succeeded",
        "succeeded",
        "orfl",
        "botY",
        "topY",
        "y",
        "i",
        "outRec",
        "join",
        "join",
        "leftBoundEdge",
        "rightBoundEdge",
        "OutPt",
        "outPoint",
        "i",
        "join",
        "outPoint2",
        "outPoint2",
        "edge",
        "PolyFillType",
        "pft",
        "pft2",
        "previousEdge",
        "inside",
        "edge2",
        "TEdge",
        "e",
        "_mActiveEdges",
        "TEdge",
        "next",
        "TEdge",
        "prev",
        "TEdge",
        "next",
        "TEdge",
        "prev",
        "TEdge",
        "next",
        "TEdge",
        "prev",
        "TEdge",
        "next",
        "TEdge",
        "prev",
        "TEdge",
        "next",
        "TEdge",
        "prev",
        "TEdge",
        "next",
        "TEdge",
        "prev",
        "OutPt",
        "result",
        "TEdge",
        "e",
        "prevE",
        "outPt",
        "result",
        "toFront",
        "OutRec",
        "outRec",
        "OutPt",
        "newOp",
        "OutRec",
        "outRec",
        "OutPt",
        "op",
        "OutPt",
        "newOp",
        "Point",
        "tmp",
        "temp",
        "seg1A",
        "temp",
        "seg2A",
        "isHole",
        "TEdge",
        "e2",
        "OutPt",
        "p",
        "dx1P",
        "dx1N",
        "dx2P",
        "dx2N",
        "OutPt",
        "dups",
        "OutPt",
        "p",
        "OutPt",
        "bPt1",
        "OutPt",
        "bPt2",
        "OutRec",
        "outrec",
        "OutRec",
        "outRec1",
        "OutRec",
        "outRec2",
        "OutRec",
        "holeStateRec",
        "OutPt",
        "p1Lft",
        "OutPt",
        "p1Rt",
        "OutPt",
        "p2Lft",
        "OutPt",
        "p2Rt",
        "EdgeSide",
        "side",
        "okIdx",
        "obsoleteIdx",
        "TEdge",
        "e",
        "_mActiveEdges",
        "OutPt",
        "pp1",
        "OutPt",
        "pp2",
        "EdgeSide",
        "side",
        "outIdx",
        "e1Contributing",
        "e2Contributing",
        "oldE1WindCnt",
        "PolyFillType",
        "e1FillType",
        "e2FillType",
        "e1FillType2",
        "e2FillType2",
        "e1Wc",
        "e2Wc",
        "e1Wc2",
        "e2Wc2",
        "TEdge",
        "aelPrev",
        "TEdge",
        "aelNext",
        "TEdge",
        "selPrev",
        "TEdge",
        "selNext",
        "TEdge",
        "aelPrev",
        "TEdge",
        "aelNext",
        "TEdge",
        "horzEdge",
        "_mSortedEdges",
        "Direction",
        "dir",
        "horzLeft",
        "horzRight",
        "TEdge",
        "eLastHorz",
        "horzEdge",
        "eMaxPair",
        "isLastHorz",
        "e",
        "eNext",
        "op1",
        "eNextHorz",
        "_mSortedEdges",
        "OutPt",
        "op2",
        "pt",
        "pt",
        "op1",
        "ePrev",
        "eNext",
        "op2",
        "op2",
        "TEdge",
        "result",
        "e",
        "_mActiveEdges",
        "isModified",
        "eNext",
        "Point",
        "pt",
        "newNode",
        "cnt",
        "i",
        "j",
        "tmp",
        "b1",
        "b2",
        "ipX",
        "ipY",
        "q",
        "e",
        "_mActiveEdges",
        "isMaximaEdge",
        "eMaxPair",
        "ePrev",
        "ePrev",
        "ip",
        "op",
        "op2",
        "OutPt",
        "op",
        "TEdge",
        "ePrev",
        "TEdge",
        "eNext",
        "OutPt",
        "op2",
        "OutPt",
        "op2",
        "TEdge",
        "eMaxPair",
        "TEdge",
        "eNext",
        "result",
        "OutPt",
        "p",
        "pts",
        "OutPt",
        "p",
        "cnt",
        "Path",
        "pg",
        "j",
        "cnt",
        "pn",
        "op",
        "j",
        "OutPt",
        "lastOk",
        "pp",
        "result",
        "dir1",
        "dir2",
        "OutPt",
        "op1",
        "op1B",
        "OutPt",
        "op2",
        "op2B",
        "isHorizontal",
        "reverse1",
        "reverse2",
        "left",
        "right",
        "Point",
        "pt",
        "discardLeftSide",
        "reverse1",
        "reverse2",
        "result",
        "cnt",
        "ip",
        "i",
        "ipNext",
        "d",
        "d",
        "result",
        "startOp",
        "op",
        "ptx",
        "pty",
        "poly0X",
        "poly0Y",
        "poly1X",
        "poly1Y",
        "d",
        "d",
        "op",
        "outPt1",
        "res",
        "firstLeft",
        "outRec1",
        "outRec2",
        "OutRec",
        "holeStateRec",
        "j",
        "oRec",
        "outPoint",
        "i",
        "outrec",
        "op",
        "op2",
        "op3",
        "op4",
        "outrec2",
        "cnt",
        "a",
        "i",
        "j",
        "op",
        "a",
        "result",
        "clipper",
        "result",
        "clipper",
        "a",
        "b",
        "c",
        "dx",
        "dy",
        "OutPt",
        "result",
        "cnt",
        "outPts",
        "i",
        "i",
        "distSqrd",
        "op",
        "result",
        "i",
        "result",
        "delta",
        "polyCnt",
        "pathCnt",
        "result",
        "i",
        "p",
        "i1",
        "i",
        "i",
        "p",
        "i1",
        "i",
        "quads",
        "i",
        "j",
        "quad",
        "paths",
        "clipper",
        "outPath",
        "i",
        "solution",
        "clipper",
        "tmp",
        "path",
        "paths",
        "clipper",
        "result",
        "match",
        "result",
        "i",
        "result",
        "Paths",
        "_mDestPolys",
        "Path",
        "_mSrcPoly",
        "Path",
        "_mDestPoly",
        "_mNormals",
        "_mDelta",
        "_mSinA",
        "_mSin",
        "_mCos",
        "_mMiterLim",
        "_mStepsPerRad",
        "Point",
        "_mLowest",
        "PolyNode",
        "_mPolyNodes",
        "ArcTolerance",
        "MiterLimit",
        "TwoPi",
        "DefArcTolerance",
        "highI",
        "newNode",
        "j",
        "k",
        "i",
        "ip",
        "i",
        "node",
        "i",
        "node",
        "dx",
        "dy",
        "f",
        "i",
        "node",
        "y",
        "steps",
        "i",
        "node",
        "len",
        "xval",
        "yval",
        "j",
        "x2",
        "xval",
        "xval",
        "yval",
        "j",
        "j",
        "k",
        "j",
        "k",
        "j",
        "n",
        "j",
        "j",
        "k",
        "j",
        "Point",
        "pt1",
        "j",
        "j",
        "j",
        "j",
        "clipper",
        "r",
        "outerPath",
        "clipper",
        "r",
        "outerPath",
        "outerNode",
        "i",
        "cosA",
        "r",
        "dx",
        "q",
        "a",
        "steps",
        "x",
        "y",
        "i",
        "x2",
        "x"
    ],
    "comments": [
        "Note that a newer paper \"An Improved Polygon Clipping Algorithm Based on Affine Transformation\"",
        "Claims to beat the Vatti Altgorithms",
        "use_int32: When enabled 32bit ints are used instead of 64bit ints. This",
        "improve performance but coordinate values are limited to the range +/- 46340",
        "#define use_int32",
        "use_xyz: adds a Z member to Point. Adds a minor cost to performance.",
        "#define use_xyz",
        "use_deprecated: Enables temporary support for the obsolete functions",
        "#define use_deprecated",
        "with negative offsets, ignore the hidden outer polygon ...",
        "By far the most widely used winding rules for polygon filling are",
        "EvenOdd & NonZero (GDI, GDI+, XLib, OpenGL, Cairo, AGG, Quartz, SVG, Gr32)",
        "Others rules include Positive, Negative and ABS_GTR_EQ_TWO (only in OpenGL)",
        "see http://glprogramming.com/red/chapter11.html",
        "Note: For some unknown reason, the author decided to use an inverted slope, where Dx = run/rise, so Dx = inf is horizontal and Dx = 0 is vertical.",
        "1 or -1 depending on winding direction",
        "winding count of the opposite polytype",
        "see comments in clipper.pas",
        "Note: For some unknown reason, the author decided to use an inverted slope, where Dx = run/rise, so Dx = inf is horizontal and Dx = 0 is vertical.",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "constructor (nb: no external instantiation)",
        "ie just an intermediate horz.",
        "check if there are edges beyond the skip edge in the bound and if so",
        "create another LocMin and calling ProcessBound once more ...",
        "there are more edges in the bound beyond result starting with E",
        "We need to be careful with open paths because this may not be a",
        "true local minima (ie E may be following a skip edge).",
        "Also, consecutive horz. edges may start heading left before going right.",
        "ie an adjoining horizontal skip edge",
        "nb: at the top of a bound, horizontals are added to the bound",
        "only when the preceding edge attaches to the horizontal's left vertex",
        "unless a Skip edge is encountered when that becomes the top divide",
        "move to the edge just beyond current bound",
        "move to the edge just beyond current bound",
        "------------------------------------------------------------------------------",
        "create a new edge array ...",
        "1. Basic (first) edge initialization ...",
        "2. Remove duplicate vertices, and (when closed) collinear edges ...",
        "nb: allows matching start and end points when not Closed ...",
        "only two vertices",
        "Collinear edges are allowed for open paths but in closed paths",
        "the default is to merge adjacent collinear edges into a single edge.",
        "However, if the PreserveCollinear property is enabled, only overlapping",
        "collinear edges (ie spikes) will be removed from closed paths.",
        "3. Do second stage of edge initialization ...",
        "4. Finally, add edge bounds to LocalMinima list ...",
        "Totally flat paths must be handled differently when adding them",
        "to LocalMinima list to avoid endless loops etc ...",
        "workaround to avoid an endless loop in the while loop below when",
        "open paths have matching start and end points ...",
        "E and E.Prev now share a local minima (left aligned if horizontal).",
        "Compare their slopes to find which starts which bound ...",
        "Q.nextInLML = Q.prev",
        "Q.nextInLML = Q.next",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "removes e from double_linked_list (but without removing from memory)",
        "flag as removed (see ClipperBase.Clear)",
        "------------------------------------------------------------------------------",
        "---------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "swap horizontal edges' top and bottom x's so they follow the natural",
        "progression of the bounds - ie so their xbots will align with the",
        "adjoining lower edge. [Helpful in the ProcessHorizontal() method.]",
        "------------------------------------------------------------------------------",
        "ie nothing to process",
        "reset all edges ...",
        "------------------------------------------------------------------------------",
        "end ClipperBase",
        "InitOptions that can be passed to the constructor ...",
        "constructor",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "ie ignores duplicates",
        "------------------------------------------------------------------------------",
        "build the return polygons ...",
        "------------------------------------------------------------------------------",
        "build the return polygons ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "skip if an outermost polygon or",
        "already already points to the correct FirstLeft ...",
        "------------------------------------------------------------------------------",
        "fix orientations ...",
        "catch { return false; }",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "if output polygons share an Edge with a horizontal rb, they'll need joining later ...",
        "if the horizontal Rb and a 'ghost' horizontal overlap, then convert",
        "the 'ghost' join to a real join ready for later ...",
        "nb: For calculating winding counts etc, IntersectEdges() assumes",
        "that param1 will be to the right of param2 ABOVE the intersection ...",
        "order important here",
        "------------------------------------------------------------------------------",
        "----------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "return false if a subj line has been flagged as inside a subj polygon",
        "PolyFillType.pftNegative",
        "XOr always contributing unless open",
        "------------------------------------------------------------------------------",
        "find the edge of the same polytype that immediately preceeds 'edge' in AEL",
        "ie get ready to calc WindCnt2",
        "ie get ready to calc WindCnt2",
        "EvenOdd filling ...",
        "are we inside a subj polygon ...",
        "ie get ready to calc WindCnt2",
        "nonZero, Positive or Negative filling ...",
        "prev edge is 'decreasing' WindCount (WC) toward zero",
        "so we're outside the previous polygon ...",
        "outside prev poly but still inside another.",
        "when reversing direction of prev poly use the same WC",
        "otherwise continue to 'decrease' WC ...",
        "now outside all polys of same polytype so set own WC ...",
        "prev edge is 'increasing' WindCount (WC) away from zero",
        "so we're inside the previous polygon ...",
        "if wind direction is reversing prev then use same WC",
        "otherwise add to WC ...",
        "ie get ready to calc WindCnt2",
        "update WindCnt2 ...",
        "EvenOdd filling ...",
        "nonZero, Positive or Negative filling ...",
        "------------------------------------------------------------------------------",
        "SEL pointers in PEdge are reused to build a list of horizontal edges.",
        "However, we don't need to worry about order with horizontal edge processing.",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "check that one or other edge hasn't already been removed from AEL ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "nb: do this after SetZ !",
        "OutRec.Pts is the 'Left-most' point & OutRec.Pts.Prev is the 'Right-most'",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "---------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "there appears to be at least 2 vertices at bottomPt so ...",
        "------------------------------------------------------------------------------",
        "work out which polygon fragment has the correct hole state ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "get the start and ends of both output polygons ...",
        "join e2 poly onto e1 poly and delete pointers to e2 ...",
        "z y x a b c",
        "x y z a b c",
        "a b c z y x",
        "a b c x y z",
        "nb: safe because we only get here via AddLocalMaxPoly",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "e1 will be to the left of e2 BELOW the intersection. Therefore e1 is before",
        "e2 in AEL except when e1 is being inserted at the intersection point ...",
        "if either edge is on an OPEN path ...",
        "ignore subject-subject open path intersections UNLESS they",
        "are both open paths, AND they are both 'contributing maximas' ...",
        "if intersecting a subj line with a subj poly ...",
        "update winding counts...",
        "assumes that e1 will be to the Right of e2 ABOVE the intersection",
        "neither edge is currently contributing ...",
        "------------------------------------------------------------------------------",
        "already deleted",
        "------------------------------------------------------------------------------",
        "already deleted",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------",
        "Break if we've got to the end of an intermediate horizontal edge ...",
        "nb: Smaller Dx's are to the right of larger Dx's ABOVE the horizontal.",
        "saves eNext for later",
        "so far we're still in range of the horizontal Edge  but make sure",
        "we're at the last of consec. horizontals when matching with eMaxPair",
        "end while",
        "end for (;;)",
        "nb: HorzEdge is no longer horizontal here",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "prepare for sorting ...",
        "bubblesort ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "the following typecast is safe because the differences in point.Y will",
        "be limited to the height of the scanbeam.",
        "------------------------------------------------------------------------------",
        "pre-condition: intersections are sorted bottom-most first.",
        "Now it's crucial that intersections are made only between adjacent edges,",
        "so to ensure this the order of intersections may need adjusting ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "nb: with very large coordinate values, it's possible for SlopesEqual() to",
        "return false but for the edge.Dx value be equal due to double precision rounding.",
        "finally, don't allow 'ip' to be BELOW curr.Y (ie bottom of scanbeam) ...",
        "better to use the more vertical edge to derive X ...",
        "------------------------------------------------------------------------------",
        "1. process maxima, treating them as if they're 'bent' horizontal edges,",
        "but exclude maxima with horizontal edges. nb: e can't be a horizontal.",
        "2. promote horizontal edges, otherwise update Curr.X and Curr.Y ...",
        "StrictlySimple (type-3) join",
        "3. Process horizontals at the Top of the scanbeam ...",
        "4. Promote intermediate vertices ...",
        "if output polygons share an edge, they'll need joining later ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "add each output polygon/contour to polytree ...",
        "fixup PolyNode links etc ...",
        "------------------------------------------------------------------------------",
        "FixupOutPolygon() - removes duplicate points and simplifies consecutive",
        "parallel edges by removing the middle vertex.",
        "test for duplicate points and collinear edges ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "When DiscardLeft, we want Op1b to be on the Left of outPoint1, otherwise we",
        "want Op1b to be on the Right. (And likewise with outPoint2 and Op2b.)",
        "So, to facilitate this while inserting Op1b and Op2b ...",
        "when DiscardLeft, make sure we're AT or RIGHT of point before adding Op1b,",
        "otherwise make sure we're AT or LEFT of point. (Likewise with Op2b.)",
        "------------------------------------------------------------------------------",
        "There are 3 kinds of joins for output polygons ...",
        "1. Horizontal joins where Join.OutPt1 & Join.OutPt2 are a vertices anywhere",
        "along (horizontal) collinear edges (& Join.OffPt is on the same horizontal).",
        "2. Non-horizontal joins where Join.OutPt1 & Join.OutPt2 are at the same",
        "location at the Bottom of the overlapping segment (& Join.OffPt is above).",
        "3. StrictlySimple joins where edges touch but are not collinear and where",
        "Join.OutPt1, Join.OutPt2 & Join.OffPt all share the same point.",
        "Strictly Simple join ...",
        "treat horizontal joins differently to non-horizontal joins since with",
        "them we're not yet sure where the overlapping is. OutPt1.point & OutPt2.point",
        "may be anywhere along the horizontal edge.",
        "a flat 'polygon'",
        "a flat 'polygon'",
        "outPoint1 -. Op1b & outPoint2 -. Op2b are the extremites of the horizontal edges",
        "DiscardLeftSide: when overlapping edges are joined, a spike will created",
        "which needs to be cleaned up. However, we don't want outPoint1 or outPoint2 caught up",
        "on the discard Side as either may still be needed for other joins ...",
        "nb: For non-horizontal joins ...",
        "1. Jr.OutPt1.point.Y == Jr.OutPt2.point.Y",
        "2. Jr.OutPt1.point > Jr.OffPt.Y",
        "make sure the polygons are correctly oriented ...",
        "----------------------------------------------------------------------",
        "returns 0 if false, +1 if true, -1 if pt ON polygon boundary",
        "See \"The Point in Polygon Problem for Arbitrary Polygons\" by Hormann & Agathos",
        "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf",
        "------------------------------------------------------------------------------",
        "returns 0 if false, +1 if true, -1 if pt ON polygon boundary",
        "See \"The Point in Polygon Problem for Arbitrary Polygons\" by Hormann & Agathos",
        "http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.88.5498&rep=rep1&type=pdf",
        "------------------------------------------------------------------------------",
        "nb: PointInPolygon returns 0 if false, +1 if true, -1 if pt on polygon",
        "----------------------------------------------------------------------",
        "----------------------------------------------------------------------",
        "----------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "get the polygon fragment with the correct hole state (FirstLeft)",
        "before calling JoinPoints() ...",
        "instead of joining two polygons, we've just created a new one by",
        "splitting one polygon into two.",
        "update all OutRec2.Pts Idx's ...",
        "We now need to check every OutRec.FirstLeft pointer. If it points",
        "to OutRec1 it may need to point to OutRec2 instead ...",
        "outRec2 is contained by outRec1 ...",
        "fixup FirstLeft pointers that may need reassigning to OutRec1",
        "outRec1 is contained by outRec2 ...",
        "fixup FirstLeft pointers that may need reassigning to OutRec1",
        "the 2 polygons are completely separate ...",
        "fixup FirstLeft pointers that may need reassigning to OutRec2",
        "joined 2 polygons together ...",
        "fixup FirstLeft pointers that may need reassigning to OutRec1",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "for each point in Polygon until duplicate found do ...",
        "split the polygon into two ...",
        "OutRec2 is contained by OutRec1 ...",
        "OutRec1 is contained by OutRec2 ...",
        "the 2 polygons are separate ...",
        "ie get ready for the next iteration",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "SimplifyPolygon functions ...",
        "Convert self-intersecting polygons into simple polygons",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "The equation of a line in general form (Ax + By + C = 0)",
        "given 2 points (x¹,y¹) & (x²,y²) is ...",
        "(y¹ - y²)x + (x² - x¹)y + (y² - y¹)x¹ - (x² - x¹)y¹ = 0",
        "A = (y¹ - y²); B = (x² - x¹); C = (y² - y¹)x¹ - (x² - x¹)y¹",
        "perpendicular distance of point (x³,y³) = (Ax³ + By³ + C)/Sqrt(A² + B²)",
        "see http://en.wikipedia.org/wiki/Perpendicular_distance",
        "---------------------------------------------------------------------------",
        "this function is more accurate when the point that's GEOMETRICALLY",
        "between the other 2 points is the one that's tested for distance.",
        "nb: with 'spikes', either pt1 or pt3 is geometrically between the other pts",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "distance = proximity in units/pixels below which vertices will be stripped.",
        "Default ~= sqrt(2) so when adjacent vertices or semi-adjacent vertices have",
        "both x & y coords within 1 unit, then the second vertex will be stripped.",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "end Clipper",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "strip duplicate points from path and also get index to the lowest point ...",
        "if this path's lowest pt is lower than all the others then update m_lowest",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "fixup orientations of all closed paths if the orientation of the",
        "closed path with the lowermost vertex is wrong ...",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "if Zero offset, just copy any CLOSED polygons to m_p and return ...",
        "see offset_triginometry3.svg in the documentation folder ...",
        "see offset_triginometry2.svg in the documentation folder ...",
        "build m_normals ...",
        "re-build m_normals ...",
        "re-build m_normals ...",
        "------------------------------------------------------------------------------",
        "now clean up 'corners' ...",
        "------------------------------------------------------------------------------",
        "now clean up 'corners' ...",
        "remove the outer PolyNode rectangle ...",
        "------------------------------------------------------------------------------",
        "cross product ...",
        "dot product ...",
        "angle ==> 0 degrees",
        "else angle ==> 180 degrees",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "------------------------------------------------------------------------------",
        "end ClipperLib namespace"
    ],
    "docstrings": [
        "*****************************************************************************\n*                                                                              *\n* Author    :  Angus Johnson                                                   *\n* Version   :  6.2.1                                                           *\n* Date      :  31 October 2014                                                 *\n* Website   :  http://www.angusj.com                                           *\n* Copyright :  Angus Johnson 2010-2014                                         *\n*                                                                              *\n* License:                                                                     *\n* Use, modification & distribution is subject to Boost Software License Ver 1. *\n* http://www.boost.org/LICENSE_1_0.txt                                         *\n*                                                                              *\n* Attributions:                                                                *\n* The code in this library is an extension of Bala Vatti's clipping algorithm: *\n* \"A generic solution to polygon clipping\"                                     *\n* Communications of the ACM, Vol 35, Issue 7 (July 1992) pp 56-63.             *\n* http://portal.acm.org/citation.cfm?id=129906                                 *\n*                                                                              *\n* Computer graphics and geometric modeling: implementation and algorithms      *\n* By Max K. Agoston                                                            *\n* Springer; 1 edition (January 4, 2005)                                        *\n* http://books.google.com/books?q=vatti+clipping+agoston                       *\n*                                                                              *\n* See also:                                                                    *\n* \"Polygon Offsetting by Computing Winding Numbers\"                            *\n* Paper no. DETC2005-85513 pp. 565-575                                         *\n* ASME 2005 International Design Engineering Technical Conferences             *\n* and Computers and Information in Engineering Conference (IDETC/CIE2005)      *\n* September 24-28, 2005 , Long Beach, California, USA                          *\n* http://www.me.berkeley.edu/~mcmains/pubs/DAC05OffsetPolygon.pdf              *\n*                                                                              *\n******************************************************************************",
        "*****************************************************************************\n*                                                                              *\n* This is a translation of the Delphi Clipper library and the naming style     *\n* used has retained a Delphi flavour.                                          *\n*                                                                              *\n******************************************************************************"
    ],
    "functions": [
        "DoublePoint",
        "DoublePoint",
        "DoublePoint",
        "Clear",
        "PolyNode",
        "GetFirst",
        "IsHoleNode",
        "AddChild",
        "PolyNode",
        "GetNext",
        "PolyNode",
        "GetNextSiblingUp",
        "IntRect",
        "IntRect",
        "TEdge",
        "Compare",
        "near_zero",
        "IsHorizontal",
        "PointIsVertex",
        "PointOnLineSegment",
        "PointOnPolygon",
        "SlopesEqual",
        "SlopesEqual",
        "SlopesEqual",
        "ClipperBase",
        "Clear",
        "DisposeLocalMinimaList",
        "InitEdge",
        "InitEdge2",
        "TEdge",
        "FindNextLocMin",
        "TEdge",
        "ProcessBound",
        "AddPath",
        "AddPaths",
        "Pt2IsBetweenPt1AndPt3",
        "TEdge",
        "RemoveEdge",
        "SetDx",
        "InsertLocalMinima",
        "PopLocalMinima",
        "ReverseHorizontal",
        "Reset",
        "IntRect",
        "GetBounds",
        "Clipper",
        "Reset",
        "InsertScanbeam",
        "Execute",
        "Execute",
        "Execute",
        "Execute",
        "FixHoleLinkage",
        "ExecuteInternal",
        "PopScanbeam",
        "DisposeAllPolyPts",
        "DisposeOutRec",
        "AddJoin",
        "AddGhostJoin",
        "InsertLocalMinimaIntoAEL",
        "InsertEdgeIntoAEL",
        "E2InsertsBeforeE1",
        "IsEvenOddFillType",
        "IsEvenOddAltFillType",
        "IsContributing",
        "SetWindingCount",
        "AddEdgeToSEL",
        "CopyAELToSEL",
        "SwapPositionsInAEL",
        "SwapPositionsInSEL",
        "AddLocalMaxPoly",
        "OutPt",
        "AddLocalMinPoly",
        "OutRec",
        "CreateOutRec",
        "OutPt",
        "AddOutPt",
        "SwapPoints",
        "HorzSegmentsOverlap",
        "SetHoleState",
        "GetDx",
        "FirstIsBottomPt",
        "OutPt",
        "GetBottomPt",
        "OutRec",
        "GetLowermostRec",
        "Param1RightOfParam2",
        "OutRec",
        "GetOutRec",
        "AppendPolygon",
        "ReversePolyPtLinks",
        "SwapSides",
        "SwapPolyIndexes",
        "IntersectEdges",
        "DeleteFromAEL",
        "DeleteFromSEL",
        "UpdateEdgeIntoAEL",
        "ProcessHorizontals",
        "GetHorzDirection",
        "ProcessHorizontal",
        "TEdge",
        "GetNextInAEL",
        "IsMinima",
        "IsMaxima",
        "IsIntermediate",
        "TEdge",
        "GetMaximaPair",
        "ProcessIntersections",
        "BuildIntersectList",
        "EdgesAdjacent",
        "IntersectNodeSort",
        "FixupIntersectionOrder",
        "ProcessIntersectList",
        "TopX",
        "IntersectPoint",
        "ProcessEdgesAtTopOfScanbeam",
        "DoMaxima",
        "ReversePaths",
        "Orientation",
        "PointCount",
        "BuildResult",
        "BuildResult2",
        "FixupOutPolygon",
        "OutPt",
        "DupOutPt",
        "GetOverlap",
        "JoinHorz",
        "JoinPoints",
        "PointInPolygon",
        "PointInPolygon",
        "Poly2ContainsPoly1",
        "FixupFirstLefts1",
        "FixupFirstLefts2",
        "OutRec",
        "ParseFirstLeft",
        "JoinCommonEdges",
        "UpdateOutPtIdxs",
        "DoSimplePolygons",
        "Area",
        "Area",
        "Paths",
        "SimplifyPolygon",
        "Paths",
        "SimplifyPolygons",
        "DistanceFromLineSqrd",
        "SlopesNearCollinear",
        "PointsAreClose",
        "OutPt",
        "ExcludeOp",
        "Path",
        "CleanPolygon",
        "Paths",
        "CleanPolygons",
        "Paths",
        "Minkowski",
        "Paths",
        "MinkowskiSum",
        "Path",
        "TranslatePath",
        "Paths",
        "MinkowskiSum",
        "Paths",
        "MinkowskiDiff",
        "Paths",
        "PolyTreeToPaths",
        "AddPolyNodeToPaths",
        "Paths",
        "OpenPathsFromPolyTree",
        "Paths",
        "ClosedPathsFromPolyTree",
        "ClipperOffset",
        "Clear",
        "AddPath",
        "AddPaths",
        "FixOrientations",
        "DoublePoint",
        "GetUnitNormal",
        "DoOffset",
        "Execute",
        "Execute",
        "OffsetPoint",
        "DoSquare",
        "DoMiter",
        "DoRound",
        "ClipperException"
    ],
    "classes": [
        "PolyTree",
        "PolyNode",
        "TEdge",
        "IntersectNode",
        "MyIntersectNodeSort",
        "LocalMinima",
        "Scanbeam",
        "OutRec",
        "OutPt",
        "Join",
        "ClipperBase",
        "Clipper",
        "ClipperOffset",
        "ClipperException"
    ]
}