{
    "identifiers": [
        "plyer",
        "notification",
        "requests",
        "bs4",
        "BeautifulSoup",
        "matplotlib",
        "matplotlib",
        "use",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "figure",
        "Figure",
        "matplotlib",
        "backends",
        "backend_tkagg",
        "FigureCanvasTkAgg",
        "NavigationToolbar2Tk",
        "tkinter",
        "tkinter",
        "ttk",
        "tkinter",
        "tk",
        "state",
        "total",
        "recovered",
        "death",
        "active",
        "state",
        "total",
        "recovered",
        "death",
        "active",
        "staticmethod",
        "treev",
        "data",
        "i",
        "data",
        "values",
        "treev",
        "insert",
        "text",
        "values",
        "i",
        "state",
        "i",
        "total",
        "i",
        "recovered",
        "i",
        "death",
        "i",
        "active",
        "staticmethod",
        "states",
        "stats",
        "chartTitle",
        "color",
        "tk",
        "Tk",
        "g",
        "title",
        "chartTitle",
        "g",
        "resizable",
        "width",
        "height",
        "Figure",
        "figsize",
        "dpi",
        "fig",
        "add_subplot",
        "a",
        "barh",
        "states",
        "stats",
        "color",
        "color",
        "fig",
        "suptitle",
        "chartTitle",
        "fontweight",
        "FigureCanvasTkAgg",
        "fig",
        "master",
        "g",
        "canvas",
        "draw",
        "canvas",
        "get_tk_widget",
        "pack",
        "NavigationToolbar2Tk",
        "canvas",
        "g",
        "toolbar",
        "update",
        "canvas",
        "get_tk_widget",
        "pack",
        "g",
        "mainloop",
        "title",
        "message",
        "icon",
        "Covid19Data",
        "Covid19Data",
        "requests",
        "get",
        "r",
        "json",
        "data",
        "data",
        "Covid19Data",
        "region",
        "state",
        "Covid19Data",
        "region",
        "total",
        "Covid19Data",
        "region",
        "recovered",
        "Covid19Data",
        "region",
        "death",
        "Covid19Data",
        "region",
        "active",
        "notification",
        "notify",
        "title",
        "title",
        "message",
        "message",
        "app_icon",
        "icon",
        "timeout",
        "requests",
        "get",
        "text",
        "BeautifulSoup",
        "myHtmlData",
        "td",
        "soup",
        "find_all",
        "myDataStr",
        "append",
        "td",
        "get_text",
        "myDataStr",
        "i",
        "len",
        "myDataStr",
        "myDataStr",
        "i",
        "state",
        "myDataStr",
        "i",
        "myDataStr",
        "i",
        "myDataStr",
        "i",
        "myDataStr",
        "i",
        "covidData",
        "state",
        "total",
        "recovered",
        "death",
        "active",
        "states",
        "append",
        "state",
        "totalCases",
        "append",
        "total",
        "recoveredCases",
        "append",
        "recovered",
        "deaths",
        "append",
        "death",
        "activeCases",
        "append",
        "active",
        "notifyMe",
        "notifyMe",
        "Covid19Data",
        "data",
        "tk",
        "Tk",
        "geometry",
        "PhotoImage",
        "file",
        "iconphoto",
        "p",
        "title",
        "Label",
        "image",
        "p",
        "width",
        "Label",
        "text",
        "font",
        "img",
        "pack",
        "pady",
        "l",
        "pack",
        "pady",
        "Frame",
        "ttk",
        "Treeview",
        "frame",
        "selectmode",
        "height",
        "ttk",
        "Style",
        "configure",
        "background",
        "foreground",
        "fieldbackground",
        "font",
        "rowheight",
        "ttk",
        "Style",
        "configure",
        "font",
        "treev",
        "pack",
        "side",
        "treev",
        "column",
        "width",
        "anchor",
        "treev",
        "column",
        "width",
        "anchor",
        "treev",
        "column",
        "width",
        "anchor",
        "treev",
        "column",
        "width",
        "anchor",
        "treev",
        "column",
        "width",
        "anchor",
        "treev",
        "heading",
        "text",
        "treev",
        "heading",
        "text",
        "treev",
        "heading",
        "text",
        "treev",
        "heading",
        "text",
        "treev",
        "heading",
        "text",
        "covidData",
        "createTable",
        "treev",
        "data",
        "Frame",
        "Button",
        "btnFrame",
        "text",
        "bd",
        "bg",
        "font",
        "btn1",
        "bind",
        "e",
        "covidData",
        "showGraph",
        "states",
        "totalCases",
        "btn1",
        "pack",
        "side",
        "padx",
        "Button",
        "btnFrame",
        "text",
        "bd",
        "bg",
        "font",
        "btn2",
        "bind",
        "e",
        "covidData",
        "showGraph",
        "states",
        "recoveredCases",
        "btn2",
        "pack",
        "side",
        "padx",
        "Button",
        "btnFrame",
        "text",
        "bd",
        "bg",
        "font",
        "btn3",
        "bind",
        "e",
        "covidData",
        "showGraph",
        "states",
        "activeCases",
        "btn3",
        "pack",
        "side",
        "padx",
        "Button",
        "btnFrame",
        "text",
        "bd",
        "bg",
        "font",
        "btn4",
        "bind",
        "e",
        "covidData",
        "showGraph",
        "states",
        "deaths",
        "btn4",
        "pack",
        "side",
        "padx",
        "btnFrame",
        "pack",
        "side",
        "pady",
        "frame",
        "pack",
        "pady",
        "mainloop",
        "notifyMe"
    ],
    "literals": [
        "\"TkAgg\"",
        "\"\"",
        "'end'",
        "\"L1\"",
        "\"bold\"",
        "\"Let us beat this virus together!\"",
        "\"A Python assignment by:\\n20BT04006: Avanish Deshpande\\n20BT04045: Devendra Sharma\\n20BT04051: Varada Deshpande\"",
        "\"Logo.ico\"",
        "'https://ipinfo.io/'",
        "\"\\n\\nUser Data Collected:\\n\\n\"",
        "'region'",
        "\"\\nState: \"",
        "\"Confirmed Cases: \"",
        "\"\\nRecovered Cases: \"",
        "\"\\nDeaths: \"",
        "\"\\nActive Cases: \"",
        "\"__main__\"",
        "'http://bioinfo.usu.edu/covidTracker/india.php'",
        "'html.parser'",
        "'td'",
        "\"\\nmyDataStr: data extracted from the table:\\n\\n\"",
        "\"\\n\\n\"",
        "\"State Unassigned\"",
        "\"1500x1000+0+0\"",
        "'logo.png'",
        "\"COVID-19 Statistics for Indian States and Union Territories\"",
        "\"COVID-19 Statistics for Indian States and Union Territories\"",
        "'bold'",
        "'browse'",
        "\"Treeview\"",
        "\"black\"",
        "\"white\"",
        "\"black\"",
        "\"Treeview.Heading\"",
        "'bold'",
        "\"top\"",
        "\"columns\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "'show'",
        "'headings'",
        "\"1\"",
        "'w'",
        "\"2\"",
        "'c'",
        "\"3\"",
        "'c'",
        "\"4\"",
        "'c'",
        "\"5\"",
        "'c'",
        "\"1\"",
        "\"State\"",
        "\"2\"",
        "\"Confirmed Cases\"",
        "\"3\"",
        "\"Recovered Cases\"",
        "\"4\"",
        "\"Deaths\"",
        "\"5\"",
        "\"Active Cases\"",
        "'View Graph for Total COVID-19 Confirmed Cases'",
        "'5'",
        "'red'",
        "'sans 11 bold'",
        "\"<Button>\"",
        "'State-wise Total COVID-19 Confirmed Cases'",
        "'red'",
        "'left'",
        "'View Graph for Total COVID-19 Recovered Cases'",
        "'5'",
        "'green'",
        "'sans 11 bold'",
        "\"<Button>\"",
        "'State-wise Total COVID-19 Recovered Cases'",
        "'green'",
        "'right'",
        "'View Graph for COVID-19 Active Cases'",
        "'5'",
        "'lightblue'",
        "'sans 11 bold'",
        "\"<Button>\"",
        "'State-wise COVID-19 Active Cases'",
        "'blue'",
        "'left'",
        "'View Graph for Total COVID-19 Deaths'",
        "'5'",
        "'lightgrey'",
        "'sans 11 bold'",
        "\"<Button>\"",
        "'State-wise COVID-19 Deaths'",
        "'grey'",
        "'right'",
        "'bottom'",
        "\"Thank You!\"",
        "\"We are grateful for your support and guidance!\\nMs. Rujul Desai\\nMs. Zalak Kansagra\"",
        "'thankYou.ico'"
    ],
    "variables": [
        "state",
        "total",
        "recovered",
        "death",
        "active",
        "e",
        "g",
        "fig",
        "a",
        "rects1",
        "canvas",
        "toolbar",
        "r",
        "data",
        "region",
        "title",
        "message",
        "myHtmlData",
        "soup",
        "myDataStr",
        "data",
        "states",
        "totalCases",
        "recoveredCases",
        "deaths",
        "activeCases",
        "state",
        "total",
        "recovered",
        "death",
        "active",
        "data",
        "state",
        "p",
        "img",
        "l",
        "frame",
        "treev",
        "treev",
        "treev",
        "t",
        "btnFrame",
        "btn1",
        "btn2",
        "btn3",
        "btn4"
    ],
    "comments": [
        "COVID-19 Statistics Notification and Dashboard System",
        "plyer: for desktop notifications",
        "For Web Scraping",
        "requests: to extract the required data from the website(s)",
        "bs4.BeautifulSoup: HTML Parsing",
        "matplotlib: to plot graphs of data, and embed them into the tkinter window",
        "tkinter: to create a dashboard with the relevant data",
        "Create tkinter window",
        "creating the Matplotlib toolbar",
        "Creating Desktop Notification using the plyer library (notification module)",
        "Extracting the required data from the table in the website",
        "Dictionary for covidData objects",
        "Notification 1: Python Assignment members",
        "Notification 2: Covid 19 Data (Confirmed, Recovered, Active cases and deaths): Data displayed according to the current state of residence of user",
        "Create tkinter window, specify its size",
        "window.resizable(width = 1500, height = 1000)",
        "window.geometry(\"window width x window height + position right + position down\")",
        "Creating object of photoimage class: Image should be in the same folder in which script is saved",
        "Setting icon of tkinter window",
        "Setting window title",
        "Creating frame within tkinter window",
        "Creating a Treeview within the frame, and setting its style",
        "Calling pack method with respect to treeview",
        "Defining the number of columns in treeview",
        "Defining headings for treeview",
        "Assigning the width and anchor to the respective columns",
        "Assigning the heading names to the respective columns",
        "Inserting the items and their features to the columns built",
        "Create Buttons, add action listeners to the buttons, and \"pack\" them to a frame",
        "Action Listener: on clicking a button, open a new tkinter window containing the graph for the requested statistics",
        "Pack the buttons-containing frame to the tkinter window"
    ],
    "docstrings": [
        "\"\"\"\n    A Python Project by:\n        20BT04006: Avanish Deshpande\n        20BT04045: Devendra Sharma\n        20BT04051: Varada Deshpande\n\n    Students, 2nd year (Semester 3),\n    B.Tech. Computer Science and Engineering,\n    GSFC University, Vadodara.\n    (Academic Year: 2021-22)\n\"\"\"",
        "\"\"\" Importing the Required Libraries \"\"\"",
        "\"\"\" class covidData to create objects having state-wise covid information \"\"\"",
        "\"\"\" THE 'main' METHOD \"\"\"",
        "\"\"\" Extract data from url \"\"\"",
        "\"\"\"\n        Creating objects of type \"covidData\" using the extracted data, and storing them in a dictionary with name of the state as key.\n        Separate lists are for storing statistical data: to help plot graphs.\n    \"\"\"",
        "\"\"\" Desktop Notification \"\"\"",
        "\"\"\" Tkinter Window \"\"\"",
        "\"\"\" Tkinter Frame \"\"\"",
        "\"\"\" Treeview \"\"\"",
        "\"\"\" Ploting graphs, and displaying them to the tkinter window \"\"\"",
        "\"\"\" Calling pack with respect to frame \"\"\"",
        "\"\"\" Calling mainloop \"\"\"",
        "\"\"\" Desktop Notification: Displayed on closing the tkinter window \"\"\""
    ],
    "functions": [
        "createTable",
        "showGraph",
        "notifyMe"
    ],
    "classes": [
        "covidData"
    ]
}