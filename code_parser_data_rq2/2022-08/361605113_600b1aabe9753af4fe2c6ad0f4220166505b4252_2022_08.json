{
    "identifiers": [
        "typing",
        "pathlib",
        "Path",
        "PurePath",
        "logging",
        "re",
        "pytest",
        "cpp_linter",
        "logger",
        "cpp_linter",
        "run",
        "cpp_linter",
        "run",
        "run_clang_tidy",
        "re",
        "compile",
        "Path",
        "PurePath",
        "parent",
        "resolve",
        "pytest",
        "mark",
        "parametrize",
        "ABS_DB_PATH",
        "ABS_DB_PATH",
        "ABS_DB_PATH",
        "caplog",
        "pytest",
        "LogCaptureFixture",
        "monkeypatch",
        "pytest",
        "MonkeyPatch",
        "database",
        "expected_args",
        "monkeypatch",
        "chdir",
        "PurePath",
        "parent",
        "as_posix",
        "Path",
        "Path",
        "parts",
        "cpp_linter",
        "run",
        "Path",
        "PurePath",
        "parent",
        "resolve",
        "as_posix",
        "caplog",
        "set_level",
        "logging",
        "DEBUG",
        "logger",
        "logger",
        "name",
        "run_clang_tidy",
        "filename",
        "demo_src",
        "file_obj",
        "version",
        "checks",
        "lines_changed_only",
        "database",
        "database",
        "repo_root",
        "rel_root",
        "record",
        "caplog",
        "records",
        "CLANG_TIDY_COMMAND",
        "search",
        "record",
        "message",
        "msg_match",
        "msg_match",
        "group",
        "split",
        "record",
        "message",
        "expected_args",
        "append",
        "demo_src",
        "matched_args",
        "expected_args"
    ],
    "literals": [
        "r\"\\\"clang-tidy(.*)(?:\\\")\"",
        "\"../../demo\"",
        "\"database,expected_args\"",
        "\"\"",
        "\"../../demo\"",
        "\"-p\"",
        "\"-p\"",
        "\"../../demo/demo.cpp\"",
        "\"../../\"",
        "\"\"",
        "\"\"",
        "\"Error while trying to load a compilation database\""
    ],
    "variables": [
        "CLANG_TIDY_COMMAND",
        "ABS_DB_PATH",
        "demo_src",
        "rel_root",
        "RUNNER_WORKSPACE",
        "matched_args",
        "msg_match",
        "matched_args"
    ],
    "comments": [
        "implicit path to the compilation database",
        "explicit relative path to the compilation database",
        "explicit absolute path to the compilation database",
        "only used when filtering lines",
        "let clang-tidy use a .clang-tidy config file",
        "analyze complete file"
    ],
    "docstrings": [
        "\"\"\"Tests specific to specifying the compilation database path.\"\"\"",
        "\"\"\"test clang-tidy using a implicit path to the compilation database.\"\"\""
    ],
    "functions": [
        "test_db_detection"
    ],
    "classes": []
}