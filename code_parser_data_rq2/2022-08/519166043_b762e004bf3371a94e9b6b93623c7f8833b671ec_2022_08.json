{
    "identifiers": [
        "print_function",
        "sys",
        "os",
        "re",
        "time",
        "socket",
        "select",
        "subprocess",
        "errno",
        "shutil",
        "random",
        "subprocess",
        "check_call",
        "Popen",
        "optparse",
        "OptionParser",
        "__all__",
        "points",
        "title",
        "parent",
        "fn",
        "title",
        "title",
        "title",
        "fn",
        "startswith",
        "fn",
        "replace",
        "parent",
        "title",
        "TOTAL",
        "POSSIBLE",
        "CURRENT_TEST",
        "run_test",
        "complete",
        "run_test",
        "ok",
        "parent",
        "parent",
        "time",
        "time",
        "run_test",
        "sys",
        "stdout",
        "write",
        "title",
        "parent",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "flush",
        "parent_failed",
        "AssertionError",
        "parent",
        "fn",
        "AssertionError",
        "e",
        "e",
        "POSSIBLE",
        "points",
        "points",
        "title",
        "color",
        "fail",
        "color",
        "end",
        "time",
        "time",
        "start",
        "time",
        "time",
        "start",
        "end",
        "fail",
        "fail",
        "replace",
        "TOTAL",
        "points",
        "callback",
        "run_test",
        "on_finish",
        "callback",
        "fail",
        "fail",
        "run_test",
        "ok",
        "fn",
        "title",
        "TESTS",
        "append",
        "run_test",
        "run_test",
        "register_test",
        "name",
        "PART_TOTAL",
        "PART_POSSIBLE",
        "name",
        "TOTAL",
        "PART_TOTAL",
        "POSSIBLE",
        "PART_POSSIBLE",
        "TOTAL",
        "POSSIBLE",
        "TESTS",
        "append",
        "show_part",
        "options",
        "OptionParser",
        "usage",
        "parser",
        "add_option",
        "action",
        "help",
        "parser",
        "add_option",
        "choices",
        "help",
        "parser",
        "parse_args",
        "make",
        "reset_fs",
        "lower",
        "args",
        "test",
        "TESTS",
        "limit",
        "l",
        "test",
        "title",
        "lower",
        "l",
        "limit",
        "test",
        "limit",
        "TOTAL",
        "POSSIBLE",
        "KeyboardInterrupt",
        "TOTAL",
        "POSSIBLE",
        "sys",
        "exit",
        "CURRENT_TEST",
        "RuntimeError",
        "CURRENT_TEST",
        "__all__",
        "got",
        "expect",
        "msg",
        "got",
        "expect",
        "msg",
        "msg",
        "AssertionError",
        "msg",
        "got",
        "replace",
        "expect",
        "replace",
        "text",
        "regexps",
        "kw",
        "no",
        "no",
        "assert_lines_match_kw",
        "kw",
        "text",
        "splitlines",
        "i",
        "line",
        "lines",
        "re",
        "match",
        "r",
        "line",
        "r",
        "regexps",
        "good",
        "add",
        "i",
        "r",
        "r",
        "regexps",
        "re",
        "match",
        "r",
        "line",
        "re",
        "match",
        "r",
        "line",
        "r",
        "no",
        "bad",
        "add",
        "i",
        "regexps",
        "bad",
        "lineno",
        "good",
        "union",
        "bad",
        "offset",
        "show",
        "add",
        "lineno",
        "offset",
        "regexps",
        "show",
        "update",
        "n",
        "n",
        "len",
        "lines",
        "len",
        "lines",
        "lineno",
        "sorted",
        "show",
        "lineno",
        "len",
        "lines",
        "lineno",
        "last",
        "msg",
        "append",
        "lineno",
        "msg",
        "append",
        "color",
        "lineno",
        "bad",
        "color",
        "lineno",
        "good",
        "lines",
        "lineno",
        "last",
        "len",
        "lines",
        "msg",
        "append",
        "bad",
        "msg",
        "append",
        "r",
        "regexps",
        "msg",
        "append",
        "color",
        "r",
        "AssertionError",
        "join",
        "msg",
        "__all__",
        "time",
        "time",
        "MAKE_TIMESTAMP",
        "time",
        "sleep",
        "MAKE_TIMESTAMP",
        "time",
        "time",
        "target",
        "pre_make",
        "Popen",
        "target",
        "wait",
        "sys",
        "exit",
        "post_make",
        "cmd",
        "pipes",
        "quote",
        "join",
        "quote",
        "cmd",
        "paths",
        "path",
        "paths",
        "os",
        "unlink",
        "path",
        "EnvironmentError",
        "e",
        "e",
        "errno",
        "errno",
        "ENOENT",
        "name",
        "text",
        "options",
        "color",
        "options",
        "color",
        "os",
        "isatty",
        "COLORS",
        "name",
        "text",
        "COLORS",
        "text",
        "os",
        "path",
        "exists",
        "shutil",
        "copyfile",
        "n",
        "ascii_letters",
        "digits",
        "join",
        "random",
        "choice",
        "letters",
        "_",
        "n",
        "open",
        "f",
        "f",
        "read",
        "strip",
        "re",
        "match",
        "d",
        "AssertionError",
        "IOError",
        "AssertionError",
        "__all__",
        "make_args",
        "GDBClient",
        "get_gdb_port",
        "timeout",
        "close",
        "socket",
        "error",
        "get_gdb_port",
        "file",
        "sys",
        "stderr",
        "sys",
        "exit",
        "options",
        "verbose",
        "show_command",
        "make_args",
        "make_args",
        "Popen",
        "cmd",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "STDOUT",
        "stdin",
        "subprocess",
        "PIPE",
        "staticmethod",
        "QEMU",
        "_GDBPORT",
        "Popen",
        "stdout",
        "subprocess",
        "PIPE",
        "p",
        "communicate",
        "p",
        "returncode",
        "RuntimeError",
        "p",
        "returncode",
        "QEMU",
        "_GDBPORT",
        "proc",
        "proc",
        "stdout",
        "fileno",
        "os",
        "read",
        "proc",
        "stdout",
        "fileno",
        "outbytes",
        "extend",
        "buf",
        "outbytes",
        "decode",
        "callback",
        "on_output",
        "callback",
        "buf",
        "buf",
        "wait",
        "buf",
        "isinstance",
        "buf",
        "buf",
        "encode",
        "proc",
        "stdin",
        "write",
        "buf",
        "proc",
        "stdin",
        "flush",
        "proc",
        "proc",
        "wait",
        "proc",
        "proc",
        "terminate",
        "port",
        "timeout",
        "time",
        "time",
        "socket",
        "socket",
        "sock",
        "settimeout",
        "sock",
        "connect",
        "port",
        "socket",
        "error",
        "time",
        "time",
        "start",
        "timeout",
        "sock",
        "sock",
        "fileno",
        "sock",
        "recv",
        "decode",
        "socket",
        "error",
        "data",
        "sock",
        "close",
        "__buf",
        "data",
        "re",
        "search",
        "__buf",
        "m",
        "m",
        "group",
        "__buf",
        "m",
        "end",
        "pkt",
        "startswith",
        "TerminateTest",
        "cmd",
        "cmd",
        "sum",
        "ord",
        "cmd",
        "sock",
        "sendall",
        "packet",
        "encode",
        "sock",
        "sendall",
        "sock",
        "sock",
        "close",
        "__send",
        "addr",
        "__send",
        "addr",
        "__all__",
        "default_monitors",
        "default_monitors",
        "monitors",
        "kw",
        "target_base",
        "make_args",
        "timeout",
        "target_base",
        "make_args",
        "timeout",
        "run_qemu_kw",
        "kw",
        "pre_make",
        "QEMU",
        "target_base",
        "make_args",
        "qemu",
        "__monitor_start",
        "__react",
        "qemu",
        "timeout",
        "qemu",
        "gdb",
        "qemu",
        "output",
        "sys",
        "exit",
        "post_make",
        "qemu",
        "gdb",
        "m",
        "__default_monitors",
        "monitors",
        "m",
        "gdb",
        "cont",
        "__react",
        "reactors",
        "timeout",
        "gdb",
        "sys",
        "exit",
        "qemu",
        "kill",
        "__react",
        "reactors",
        "gdb",
        "close",
        "qemu",
        "wait",
        "output",
        "output",
        "GDBClient",
        "qemu",
        "get_gdb_port",
        "timeout",
        "TerminateTest",
        "socket",
        "error",
        "len",
        "output",
        "TerminateTest",
        "reactors",
        "timeout",
        "time",
        "time",
        "timeout",
        "deadline",
        "time",
        "time",
        "timeleft",
        "sys",
        "stdout",
        "write",
        "sys",
        "stdout",
        "flush",
        "r",
        "r",
        "reactors",
        "r",
        "fileno",
        "rset",
        "select",
        "select",
        "rset",
        "timeleft",
        "reactor",
        "rset",
        "reactor",
        "handle_read",
        "TerminateTest",
        "binary",
        "monitors",
        "kw",
        "maybe_unlink",
        "kw",
        "pop",
        "kw",
        "setdefault",
        "append",
        "run_qemu",
        "target_base",
        "binary",
        "monitors",
        "kw",
        "args",
        "kwargs",
        "assert_lines_match",
        "qemu",
        "output",
        "args",
        "kwargs",
        "__all__",
        "path",
        "runner",
        "f",
        "seek",
        "f",
        "truncate",
        "runner",
        "qemu",
        "on_output",
        "append",
        "f",
        "write",
        "get_current_test",
        "on_finish",
        "append",
        "save_on_finish",
        "fail",
        "f",
        "flush",
        "path",
        "get_current_test",
        "fail",
        "shutil",
        "copyfile",
        "path",
        "save_path",
        "save_path",
        "os",
        "path",
        "exists",
        "save_path",
        "os",
        "unlink",
        "save_path",
        "save_path",
        "open",
        "path",
        "setup_save",
        "addr",
        "runner",
        "isinstance",
        "addr",
        "sym",
        "sym",
        "open",
        "sym",
        "strip",
        "addr",
        "len",
        "addrs",
        "addr",
        "runner",
        "gdb",
        "breakpoint",
        "addrs",
        "runner",
        "gdb",
        "breakpoint",
        "addr",
        "setup_breakpoint",
        "regexp",
        "callback",
        "runner",
        "output",
        "buf",
        "extend",
        "output",
        "buf",
        "buf",
        "buf",
        "split",
        "line",
        "decode",
        "re",
        "match",
        "regexp",
        "line",
        "callback",
        "line",
        "runner",
        "qemu",
        "on_output",
        "append",
        "handle_output",
        "setup_call_on_line",
        "regexp",
        "line",
        "TerminateTest",
        "call_on_line",
        "regexp",
        "stop",
        "script",
        "terminate_match",
        "runner",
        "output",
        "context",
        "buf",
        "extend",
        "output",
        "terminate_match",
        "re",
        "match",
        "terminate_match",
        "context",
        "buf",
        "decode",
        "TerminateTest",
        "context",
        "buf",
        "context",
        "n",
        "len",
        "script",
        "runner",
        "qemu",
        "write",
        "script",
        "context",
        "n",
        "runner",
        "qemu",
        "write",
        "context",
        "n",
        "terminate_match",
        "TerminateTest",
        "runner",
        "qemu",
        "on_output",
        "append",
        "handle_output",
        "setup_call_on_line"
    ],
    "literals": [
        "\"test\"",
        "\"end_part\"",
        "\"run_tests\"",
        "\"get_current_test\"",
        "\"test_\"",
        "\"_\"",
        "\" \"",
        "\"  \"",
        "\"== Test %s == \"",
        "\"\\n\"",
        "'Parent failed: %s'",
        "\"%s: %s\"",
        "\"red\"",
        "\"FAIL\"",
        "\"green\"",
        "\"OK\"",
        "' '",
        "\"(%.1fs)\"",
        "' '",
        "\"    %s\"",
        "\"\\n\"",
        "\"\\n    \"",
        "\"Part %s score: %d/%d\"",
        "\"\"",
        "\"usage: %prog [-v] [filters...]\"",
        "\"-v\"",
        "\"--verbose\"",
        "\"store_true\"",
        "\"print commands\"",
        "\"--color\"",
        "\"never\"",
        "\"always\"",
        "\"auto\"",
        "\"auto\"",
        "\"never, always, or auto\"",
        "\"Score: %d/%d\"",
        "\"No test is running\"",
        "\"assert_equal\"",
        "\"assert_lines_match\"",
        "\"\"",
        "\"\\n\"",
        "\"%sgot:\\n  %s\\nexpected:\\n  %s\"",
        "\"\\n\"",
        "\"\\n  \"",
        "\"\\n\"",
        "\"\\n  \"",
        "\"...\"",
        "\"%s %s\"",
        "\"red\"",
        "\"BAD \"",
        "\"green\"",
        "\"GOOD\"",
        "\"    \"",
        "\"...\"",
        "\"unexpected lines in output\"",
        "\"red\"",
        "\"MISSING\"",
        "\" '%s'\"",
        "\"\\n\"",
        "\"make\"",
        "\"maybe_unlink\"",
        "\"reset_fs\"",
        "\"color\"",
        "\"random_str\"",
        "\"check_time\"",
        "\"make\"",
        "\"\\n$\"",
        "\" \"",
        "\"default\"",
        "\"\\033[0m\"",
        "\"red\"",
        "\"\\033[31m\"",
        "\"green\"",
        "\"\\033[32m\"",
        "\"always\"",
        "\"auto\"",
        "\"default\"",
        "\"obj/fs/clean-fs.img\"",
        "\"obj/fs/clean-fs.img\"",
        "\"obj/fs/fs.img\"",
        "''",
        "\"\"",
        "'time.txt'",
        "r'^\\d+$'",
        "'time.txt does not contain a single integer (number of hours spent on the lab)'",
        "'Cannot read time.txt'",
        "\"QEMU\"",
        "\"GDBClient\"",
        "\"make\"",
        "\"make\"",
        "\"-s\"",
        "\"--no-print-directory\"",
        "\"\"",
        "\"make\"",
        "\"-s\"",
        "\"--no-print-directory\"",
        "\"print-gdbport\"",
        "\"Failed to get gdbport: make exited with %d\"",
        "\"utf-8\"",
        "\"replace\"",
        "b\"\"",
        "'utf-8'",
        "\"localhost\"",
        "\"\"",
        "\"ascii\"",
        "\"replace\"",
        "\"\"",
        "\"\"",
        "r\"\\$([^#]*)#[0-9a-zA-Z]{2}\"",
        "\"T05\"",
        "\"$%s#%02x\"",
        "\"ascii\"",
        "b\"\\x03\"",
        "\"c\"",
        "\"Z1,%x,1\"",
        "\"TerminateTest\"",
        "\"Runner\"",
        "\"qemu\"",
        "\"-gdb\"",
        "\"Failed to connect to QEMU; output:\"",
        "b\"\\n\"",
        "\"Timeout! \"",
        "\"obj/kern/init.o\"",
        "\"obj/kern/kernel\"",
        "\"snapshot\"",
        "\"make_args\"",
        "\"QEMUEXTRA+=-snapshot\"",
        "\"run-%s\"",
        "\"save\"",
        "\"stop_breakpoint\"",
        "\"call_on_line\"",
        "\"stop_on_line\"",
        "\"shell_script\"",
        "\".\"",
        "\"    QEMU output saved to %s\"",
        "\"    (Old %s failure log removed)\"",
        "\"wb\"",
        "\"kernel/kernel.sym\"",
        "\"Symbol %s not found\"",
        "b\"\\n\"",
        "b\"\\n\"",
        "\"utf-8\"",
        "\"replace\"",
        "'utf-8'",
        "'replace'",
        "b'$ '",
        "'\\n'"
    ],
    "variables": [
        "__all__",
        "TESTS",
        "TOTAL",
        "POSSIBLE",
        "PART_TOTAL",
        "PART_POSSIBLE",
        "CURRENT_TEST",
        "title",
        "title",
        "run_test",
        "complete",
        "parent_failed",
        "parent_failed",
        "fail",
        "start",
        "CURRENT_TEST",
        "fail",
        "CURRENT_TEST",
        "run_test",
        "ok",
        "run_test",
        "run_test",
        "title",
        "run_test",
        "complete",
        "run_test",
        "ok",
        "run_test",
        "on_finish",
        "PART_TOTAL",
        "PART_POSSIBLE",
        "show_part",
        "title",
        "parser",
        "options",
        "args",
        "limit",
        "no",
        "lines",
        "good",
        "bad",
        "regexps",
        "show",
        "msg",
        "last",
        "last",
        "MAKE_TIMESTAMP",
        "MAKE_TIMESTAMP",
        "COLORS",
        "letters",
        "d",
        "_GDBPORT",
        "cmd",
        "proc",
        "output",
        "outbytes",
        "on_output",
        "p",
        "_",
        "QEMU",
        "_GDBPORT",
        "buf",
        "output",
        "buf",
        "proc",
        "start",
        "sock",
        "__buf",
        "data",
        "data",
        "sock",
        "m",
        "pkt",
        "__buf",
        "packet",
        "sock",
        "__default_monitors",
        "target_base",
        "make_args",
        "timeout",
        "qemu",
        "gdb",
        "on_output",
        "on_output",
        "reactors",
        "gdb",
        "deadline",
        "timeleft",
        "rset",
        "rset",
        "_",
        "_",
        "save_path",
        "f",
        "addrs",
        "buf",
        "line",
        "line",
        "n",
        "buf",
        "context",
        "buf"
    ],
    "comments": [
        "",
        "Test structure",
        "",
        "Handle test dependencies",
        "Run the test",
        "Display and handle test result",
        "Record test metadata on the test wrapper function",
        "Handle command line",
        "Start with a full build to catch build errors",
        "Clean the file system if there is one",
        "Run tests",
        "",
        "Assertions",
        "",
        "Check text against regexps",
        "We failed; construct an informative failure message",
        "",
        "Utilities",
        "",
        "",
        "Controllers",
        "",
        "Check that QEMU is not currently running",
        "Accumulated output as a string",
        "Accumulated output as a bytearray",
        "Breakpoint",
        "",
        "QEMU test runner",
        "",
        "Start QEMU",
        "Wait for QEMU to start or make to fail.  This will set",
        "self.gdb if QEMU starts.",
        "QEMU and GDB are up",
        "Start monitoring",
        "Run and react",
        "Shutdown QEMU",
        "",
        "Monitors",
        ""
    ],
    "docstrings": [
        "\"\"\"Decorator for declaring test functions.  If title is None, the\n    title of the test will be derived from the function name by\n    stripping the leading \"test_\" and replacing underscores with\n    spaces.\"\"\"",
        "\"\"\"Set up for testing and run the registered test functions.\"\"\"",
        "\"\"\"Assert that all of regexps match some line in text.  If a 'no'\n    keyword argument is given, it must be a list of regexps that must\n    *not* match any line in text.\"\"\"",
        "\"\"\"Delay prior to running make to ensure file mtimes change.\"\"\"",
        "\"\"\"Record the time after make completes so that the next run of\n    make can be delayed if needed.\"\"\"",
        "\"\"\"\\\nGDB stub found on port %d.\nQEMU appears to already be running.  Please exit it if possible or use\n'killall qemu' or 'killall qemu.real'.\"\"\"",
        "\"\"\"Run a QEMU-based test.  monitors should functions that will\n        be called with this Runner instance once QEMU and GDB are\n        started.  Typically, they should register callbacks that throw\n        TerminateTest when stop events occur.  The target_base\n        argument gives the make target to run.  The make_args argument\n        should be a list of additional arguments to pass to make.  The\n        timeout argument bounds how long to run before returning.\"\"\"",
        "\"\"\"\\\nFailed to shutdown QEMU.  You might need to 'killall qemu' or\n'killall qemu.real'.\n\"\"\"",
        "\"\"\"Run a user test using the specified binary.  Monitors and\n        keyword arguments are as for run_qemu.  This runs on a disk\n        snapshot unless the keyword argument 'snapshot' is False.\"\"\"",
        "\"\"\"Shortcut to call assert_lines_match on the most recent QEMU\n        output.\"\"\"",
        "\"\"\"Return a monitor that writes QEMU's output to path.  If the\n    test fails, copy the output to path.test-name.\"\"\"",
        "\"\"\"Returns a monitor that stops when addr is reached.  addr may be\n    a number or the name of a symbol.\"\"\"",
        "\"\"\"Returns a monitor that calls 'callback' when QEMU prints a line\n    matching 'regexp'.\"\"\"",
        "\"\"\"Returns a monitor that stops when QEMU prints a line matching\n    'regexp'.\"\"\"",
        "\"\"\"Returns a monitor that plays the script, and stops when the script is\n    done executing.\"\"\""
    ],
    "functions": [
        "test",
        "register_test",
        "run_test",
        "end_part",
        "show_part",
        "run_tests",
        "get_current_test",
        "assert_equal",
        "assert_lines_match",
        "assert_lines_match_kw",
        "pre_make",
        "post_make",
        "make",
        "show_command",
        "maybe_unlink",
        "color",
        "reset_fs",
        "random_str",
        "check_time",
        "get_gdb_port",
        "fileno",
        "handle_read",
        "write",
        "wait",
        "kill",
        "fileno",
        "handle_read",
        "__send",
        "__send_break",
        "close",
        "cont",
        "breakpoint",
        "run_qemu",
        "run_qemu_kw",
        "__monitor_start",
        "__react",
        "user_test",
        "match",
        "save",
        "setup_save",
        "save_on_finish",
        "stop_breakpoint",
        "setup_breakpoint",
        "call_on_line",
        "setup_call_on_line",
        "handle_output",
        "stop_on_line",
        "stop",
        "shell_script",
        "setup_call_on_line",
        "handle_output"
    ],
    "classes": [
        "QEMU",
        "GDBClient",
        "TerminateTest",
        "Runner",
        "context"
    ]
}