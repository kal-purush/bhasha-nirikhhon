{
    "identifiers": [
        "argparse",
        "os",
        "glob",
        "time",
        "pprint",
        "pprint",
        "torch",
        "torch",
        "nn",
        "nn",
        "torch",
        "backends",
        "cudnn",
        "cudnn",
        "torch",
        "utils",
        "data",
        "libs",
        "core",
        "load_config",
        "libs",
        "datasets",
        "make_dataset",
        "make_data_loader",
        "libs",
        "modeling",
        "make_meta_arch",
        "libs",
        "utils",
        "valid_one_epoch",
        "ANETdetection",
        "fix_random_seed",
        "args",
        "os",
        "path",
        "isfile",
        "args",
        "config",
        "load_config",
        "args",
        "config",
        "ValueError",
        "len",
        "cfg",
        "args",
        "ckpt",
        "os",
        "path",
        "isfile",
        "args",
        "ckpt",
        "args",
        "ckpt",
        "os",
        "path",
        "isdir",
        "args",
        "ckpt",
        "sorted",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "args",
        "ckpt",
        "ckpt_file_list",
        "args",
        "topk",
        "cfg",
        "args",
        "topk",
        "pprint",
        "cfg",
        "fix_random_seed",
        "include_cuda",
        "make_dataset",
        "cfg",
        "cfg",
        "cfg",
        "make_data_loader",
        "val_dataset",
        "cfg",
        "make_meta_arch",
        "cfg",
        "cfg",
        "nn",
        "DataParallel",
        "model",
        "device_ids",
        "cfg",
        "format",
        "ckpt_file",
        "torch",
        "load",
        "ckpt_file",
        "map_location",
        "storage",
        "loc",
        "storage",
        "cuda",
        "cfg",
        "model",
        "load_state_dict",
        "checkpoint",
        "checkpoint",
        "args",
        "saveonly",
        "val_dataset",
        "get_attributes",
        "ANETdetection",
        "val_dataset",
        "json_file",
        "val_dataset",
        "split",
        "tiou_thresholds",
        "val_db_vars",
        "os",
        "path",
        "join",
        "os",
        "path",
        "split",
        "ckpt_file",
        "format",
        "cfg",
        "time",
        "time",
        "valid_one_epoch",
        "val_loader",
        "model",
        "evaluator",
        "det_eval",
        "output_file",
        "output_file",
        "ext_score_file",
        "cfg",
        "tb_writer",
        "print_freq",
        "args",
        "print_freq",
        "time",
        "time",
        "format",
        "end",
        "start",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "metavar",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "main",
        "args"
    ],
    "literals": [
        "\"Config file does not exist.\"",
        "'val_split'",
        "\"Test set must be specified!\"",
        "\".pth.tar\"",
        "\"CKPT file does not exist!\"",
        "\"CKPT file folder does not exist!\"",
        "'*.pth.tar'",
        "'model'",
        "'test_cfg'",
        "'max_seg_num'",
        "'dataset_name'",
        "'val_split'",
        "'dataset'",
        "'loader'",
        "'num_workers'",
        "'model_name'",
        "'model'",
        "'devices'",
        "\"=> loading checkpoint '{}'\"",
        "'devices'",
        "\"Loading from EMA model ...\"",
        "'state_dict_ema'",
        "'tiou_thresholds'",
        "'eval_results.pkl'",
        "\"\\nStart testing model {:s} ...\"",
        "'model_name'",
        "'test_cfg'",
        "'ext_score_file'",
        "\"All done! Total time: {:0.2f} sec\"",
        "'__main__'",
        "'Train a point-based transformer for action localization'",
        "'config'",
        "'DIR'",
        "'path to a config file'",
        "'ckpt'",
        "'DIR'",
        "'path to a checkpoint'",
        "'-t'",
        "'--topk'",
        "'max number of output actions (default: -1)'",
        "'--saveonly'",
        "'store_true'",
        "'Only save the ouputs without evaluation (e.g., for test set)'",
        "'-p'",
        "'--print-freq'",
        "'print frequency (default: 10 iterations)'"
    ],
    "variables": [
        "cfg",
        "ckpt_file",
        "ckpt_file_list",
        "ckpt_file",
        "_",
        "val_dataset",
        "val_loader",
        "model",
        "model",
        "checkpoint",
        "det_eval",
        "output_file",
        "val_db_vars",
        "det_eval",
        "output_file",
        "start",
        "mAP",
        "end",
        "parser",
        "args"
    ],
    "comments": [
        "python imports",
        "torch imports",
        "our code",
        "",
        "sanity check",
        "fix the random seeds (this will fix everything)",
        "set bs = 1, and disable shuffle",
        "model",
        "not ideal for multi GPU training, ok for now",
        "load ckpt, reset epoch / best rmse",
        "load ema model instead",
        "set up evaluator",
        "",
        "the arg parser"
    ],
    "docstrings": [
        "\"\"\"0. load config\"\"\"",
        "\"\"\"1. fix all randomness\"\"\"",
        "\"\"\"2. create dataset / dataloader\"\"\"",
        "\"\"\"3. create model and evaluator\"\"\"",
        "\"\"\"4. load ckpt\"\"\"",
        "\"\"\"5. Test the model\"\"\"",
        "\"\"\"Entry Point\"\"\""
    ],
    "functions": [
        "main"
    ],
    "classes": []
}