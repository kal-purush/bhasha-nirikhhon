{
    "identifiers": [
        "torch",
        "torch",
        "manual_seed",
        "torch",
        "nn",
        "nn",
        "torchvision",
        "datasets",
        "transforms",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "numpy",
        "np",
        "scipy",
        "os",
        "nn",
        "Module",
        "PATH",
        "num_batches",
        "PATH",
        "num_batches",
        "len",
        "getdata",
        "len",
        "getdata",
        "transforms",
        "Compose",
        "transforms",
        "ToTensor",
        "transforms",
        "Normalize",
        "datasets",
        "CIFAR100",
        "path",
        "train",
        "download",
        "transform",
        "transformer",
        "datasets",
        "CIFAR100",
        "path",
        "train",
        "download",
        "transform",
        "transformer",
        "DataLoader",
        "traindata",
        "batch_size",
        "num_batches",
        "shuffle",
        "DataLoader",
        "testdata",
        "batch_size",
        "num_batches",
        "shuffle",
        "trainloader",
        "testloader",
        "Loader",
        "PATH",
        "num_batches"
    ],
    "literals": [
        "f\"Trainloader length = {len(self.getdata()[0])} | Testloader length = {len(self.getdata()[1])}\"",
        "\"__main__\"",
        "\"/home/agastya123/PycharmProjects/CIFAR-100/data\""
    ],
    "variables": [
        "path",
        "num_batches",
        "transformer",
        "traindata",
        "testdata",
        "trainloader",
        "testloader",
        "loader"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nPython class to load and transform the data.\n\"\"\"",
        "\"\"\"\n    Class to load the CIFAR-100 data from torchvision and return a tensor \n    \"\"\"",
        "\"\"\"\n        Function to download and store the data into dataloaders. \n        \"\"\"",
        "\"\"\"\n        Testing the class defined above.\n    \"\"\""
    ],
    "functions": [
        "__str__",
        "getdata"
    ],
    "classes": [
        "Loader"
    ]
}