{
    "identifiers": [
        "com",
        "epam",
        "mjc",
        "nio",
        "org",
        "apache",
        "commons",
        "io",
        "FileUtils",
        "org",
        "apache",
        "commons",
        "lang3",
        "RandomStringUtils",
        "org",
        "junit",
        "AfterClass",
        "org",
        "junit",
        "BeforeClass",
        "org",
        "junit",
        "Test",
        "java",
        "io",
        "File",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertFalse",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "TEST_FILE",
        "Path",
        "of",
        "READER_CLASS",
        "Path",
        "of",
        "SOURCE_CODE_LOCATION",
        "profile",
        "BeforeClass",
        "randomString",
        "RandomStringUtils",
        "randomAlphabetic",
        "randomInt",
        "getRandomInt",
        "profile",
        "randomString",
        "randomInt",
        "randomString",
        "randomInt",
        "longValue",
        "createTestFile",
        "randomString",
        "randomInt",
        "AfterClass",
        "Files",
        "TEST_FILE",
        "e",
        "e",
        "Test",
        "fileReader",
        "actual",
        "fileReader",
        "getDataFromFile",
        "TEST_FILE",
        "toUri",
        "assertEquals",
        "profile",
        "actual",
        "Test",
        "sources",
        "Path",
        "of",
        "SOURCE_CODE_LOCATION",
        "Files",
        "walk",
        "sources",
        "Files",
        "isRegularFile",
        "p",
        "p",
        "toString",
        "endsWith",
        "forEach",
        "assertSourceWithoutExternalUtils",
        "Test",
        "sourceCode",
        "readFileIntoString",
        "READER_CLASS",
        "assertTrue",
        "sourceCode",
        "contains",
        "sourceCode",
        "contains",
        "sourceCode",
        "contains",
        "Test",
        "sourceCode",
        "readFileIntoString",
        "READER_CLASS",
        "assertTrue",
        "sourceCode",
        "contains",
        "path",
        "sourceCode",
        "readFileIntoString",
        "path",
        "assertFalse",
        "sourceCode",
        "contains",
        "assertFalse",
        "sourceCode",
        "contains",
        "assertFalse",
        "sourceCode",
        "contains",
        "assertFalse",
        "sourceCode",
        "contains",
        "assertFalse",
        "sourceCode",
        "contains",
        "sourcePath",
        "Files",
        "readString",
        "sourcePath",
        "e",
        "e",
        "min",
        "max",
        "random",
        "max",
        "min",
        "min",
        "randomString",
        "randomInt",
        "FileUtils",
        "writeStringToFile",
        "TEST_FILE",
        "toUri",
        "randomString",
        "lineSeparator",
        "randomInt",
        "lineSeparator",
        "randomString",
        "lineSeparator",
        "randomInt",
        "lineSeparator",
        "e",
        "e"
    ],
    "literals": [
        "\"src/test/resources/test.txt\"",
        "\"src/main/java/com/epam/mjc/nio/FileReader.java\"",
        "\"src/main/java\"",
        "\".java\"",
        "\"Code doesn't contain closing or try-with-resources\"",
        "\"try (\"",
        "\"try(\"",
        "\".close()\"",
        "\".nio\"",
        "\"Code contains prohibited \\\"FileUtils\\\"\"",
        "\"FileUtils\"",
        "\"Code contains prohibited \\\"IOUtils\\\"\"",
        "\"IOUtils\"",
        "\"Code contains prohibited \\\"Scanner\\\"\"",
        "\"Scanner\"",
        "\"Code contains prohibited \\\"StreamTokenizer\\\"\"",
        "\"StreamTokenizer\"",
        "\"Code contains prohibited \\\"com.google\\\"\"",
        "\"com.google\"",
        "\"Name: \"",
        "\"Age: \"",
        "\"Email: \"",
        "\"Phone: \"",
        "\"UTF-8\""
    ],
    "variables": [
        "profile"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "setup",
        "clean",
        "testProgramReadsDataCorrectly",
        "testCodeWithoutExternalUtils",
        "testCodeHasStreamClosing",
        "testCodeHasNio",
        "assertSourceWithoutExternalUtils",
        "readFileIntoString",
        "getRandomInt",
        "createTestFile"
    ],
    "classes": [
        "FileReaderTest"
    ]
}