{
    "identifiers": [
        "deprecate",
        "fn",
        "msg",
        "config",
        "fn",
        "warned",
        "config",
        "msg",
        "config",
        "msg",
        "msg",
        "warned",
        "fn",
        "arguments",
        "deprecated",
        "name",
        "_",
        "name",
        "val",
        "val"
    ],
    "literals": [
        "'noDeprecation'",
        "'throwDeprecation'",
        "'traceDeprecation'",
        "'true'"
    ],
    "variables": [
        "warned",
        "val"
    ],
    "comments": [
        "accessing global.localStorage can trigger a DOMException in sandboxed iframes"
    ],
    "docstrings": [
        "* Module exports.",
        "* Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public",
        "* Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private"
    ],
    "functions": [
        "deprecate",
        "deprecated",
        "config"
    ],
    "classes": []
}