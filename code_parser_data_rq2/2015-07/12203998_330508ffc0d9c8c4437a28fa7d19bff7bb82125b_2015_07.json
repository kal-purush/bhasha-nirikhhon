{
    "identifiers": [
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "x",
        "parseInt",
        "x",
        "a",
        "b",
        "b",
        "a",
        "lengths",
        "matches",
        "lengths",
        "i",
        "i",
        "lengths",
        "i",
        "min",
        "cuts",
        "lengths",
        "i",
        "lengths",
        "i",
        "cuts",
        "lengths",
        "matches",
        "lengths"
    ],
    "literals": [
        "'8\\n1 13 3 8 14 9 4 4'",
        "'\\n'",
        "' '"
    ],
    "variables": [
        "matches",
        "lengths",
        "min",
        "cuts",
        "i"
    ],
    "comments": [
        "stuff this function reminded me of was that JavaScripts sort fxn lexicographically sorts so you have to pass in a custom compare fxn to properly sort \n   numbers. One other thing is that if you iterate through an array and delete in the middle of the loop, iterate backwards so you aren't affected by\n   the length change",
        "Enter your code here"
    ],
    "docstrings": [],
    "functions": [
        "processData"
    ],
    "classes": []
}