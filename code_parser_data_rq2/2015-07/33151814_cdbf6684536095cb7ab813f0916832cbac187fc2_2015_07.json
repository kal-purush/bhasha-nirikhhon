{
    "identifiers": [
        "testBase",
        "testBase",
        "data",
        "expected",
        "testBase",
        "data",
        "expected",
        "i",
        "i",
        "testBase",
        "data",
        "expected",
        "testBase",
        "data",
        "expected",
        "testBase",
        "data",
        "expected",
        "testBase",
        "data",
        "expected",
        "i",
        "i",
        "testBase",
        "data",
        "expected",
        "i",
        "i",
        "i",
        "i",
        "testBase",
        "data",
        "expected",
        "testBase",
        "data",
        "data",
        "testBase",
        "data",
        "expected",
        "n",
        "n",
        "data",
        "testBase",
        "data",
        "expected",
        "testBase",
        "query",
        "data",
        "results",
        "results",
        "expected",
        "testBase",
        "query",
        "data",
        "expected",
        "testBase",
        "query",
        "data",
        "expected",
        "testBase",
        "query",
        "data",
        "data",
        "testBase",
        "query",
        "data",
        "expected",
        "testBase",
        "query",
        "data",
        "expected",
        "testBase",
        "query",
        "data",
        "expected"
    ],
    "literals": [
        "'assert'",
        "'./testBase'",
        "\"SELECT Value AS Blah FROM 'var://Test'\"",
        "\"SELECT \\\"Blah\\\": Value FROM 'var://Test'\"",
        "\"Thing.Value\"",
        "\"Thing.Value\"",
        "\"Thing.Value\"",
        "\"SELECT Thing.Value FROM 'var://Test'\"",
        "\"SELECT Thing FROM 'var://Test'\"",
        "\"Thing.A\"",
        "\"Thing.A\"",
        "\"SELECT Thing.A FROM 'var://Test'\"",
        "\"Thing.A\"",
        "\"Thing.A\"",
        "\"SELECT Thing.A FROM 'var://Test'\"",
        "\"SELECT Thing FROM 'var://Test'\"",
        "\"Thing.Value[1]\"",
        "\"Thing.Value[1]\"",
        "\"Thing.Value[1]\"",
        "\"SELECT Thing.Value[1] FROM 'var://Test'\"",
        "'A'",
        "'B'",
        "'C'",
        "\"SELECT * FROM 'var://Test'\"",
        "'A'",
        "'blah'",
        "'B'",
        "'C'",
        "'blah'",
        "\"SELECT Child.* FROM 'var://Test'\"",
        "\"SELECT TOP 3 Value FROM 'var://Test'\"",
        "\"SELECT A + B AS C FROM 'var://Test'\"",
        "'Bob'",
        "'Green'",
        "'Janet'",
        "'Blue'",
        "\"SELECT Name + ' has ' + HairColour + ' hair.' AS Sentence FROM 'var://Test'\"",
        "'Bob has Green hair.'",
        "'Janet has Blue hair.'",
        "\"SELECT Value + 1 AS Incremented FROM 'var://Test'\"",
        "\"SELECT a.Value AS Value FROM 'var://Test' AS a\"",
        "\"First Name\"",
        "\"Tim\"",
        "\"Favourite food\"",
        "\"Chips\"",
        "\"First Name\"",
        "\"Dave\"",
        "\"Favourite food\"",
        "\"Batteries\"",
        "\"FirstName\"",
        "\"Tim\"",
        "\"FavouriteFood\"",
        "\"Chips\"",
        "\"FirstName\"",
        "\"Dave\"",
        "\"FavouriteFood\"",
        "\"Batteries\"",
        "\"SELECT person['First Name'] AS FirstName, person[\\\"Favourite food\\\"] AS FavouriteFood FROM 'var://Test' AS person\"",
        "\"FirstName\"",
        "\"Tim\"",
        "\"FirstName\"",
        "\"Dave\"",
        "\"First Name\"",
        "\"Tim\"",
        "\"First Name\"",
        "\"Dave\"",
        "\"SELECT FirstName AS 'First Name' FROM 'var://Test'\"",
        "\"FirstName\"",
        "\"Tim\"",
        "\"FirstName\"",
        "\"Dave\"",
        "\"First Name\"",
        "\"Tim\"",
        "\"First Name\"",
        "\"Dave\"",
        "\"SELECT FirstName AS \\\"First Name\\\" FROM 'var://Test'\""
    ],
    "variables": [
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "data",
        "expected",
        "data",
        "expected",
        "data",
        "query",
        "expected",
        "data",
        "query",
        "expected",
        "data",
        "query",
        "expected",
        "data",
        "query",
        "data",
        "expected",
        "query",
        "data",
        "expected",
        "query",
        "data",
        "expected",
        "query"
    ],
    "comments": [
        "Have to assert inside setTimeout to get the async test to work",
        "https://nodejstools.codeplex.com/discussions/550545"
    ],
    "docstrings": [],
    "functions": [
        "ExpressionAlias",
        "JsonPropertySyntax",
        "NestedProperty",
        "NonUniversalProperty",
        "NonUniversalParentProperty",
        "NonUniversalChildProperty",
        "SelectObject",
        "ArrayProperty",
        "SelectStar",
        "SelectNestedStar",
        "SelectTopX",
        "SelectNumericExpression",
        "SelectStringExpression",
        "SelectWithNumericConstant",
        "SelectWithSingleAliasedDatasource",
        "SelectUsingSquareBracketAccessorOnTableAlias",
        "SelectWithSingleQuotedColumnAlias",
        "SelectWithDoubleQuotedColumnAlias"
    ],
    "classes": []
}