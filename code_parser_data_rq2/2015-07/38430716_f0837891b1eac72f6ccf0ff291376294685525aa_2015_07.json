{
    "identifiers": [
        "Accounts",
        "Mongo",
        "PersistentMinimongo",
        "Accounts",
        "Accounts",
        "Accounts",
        "web3",
        "e",
        "res",
        "e",
        "_this",
        "_this",
        "Accounts",
        "_",
        "Accounts",
        "account",
        "web3",
        "account",
        "err",
        "res",
        "Accounts",
        "account",
        "res",
        "Accounts",
        "web3",
        "e",
        "accounts",
        "Accounts",
        "_",
        "_",
        "localAccounts",
        "accounts",
        "_",
        "localAccounts",
        "account",
        "_",
        "accounts",
        "account",
        "Accounts",
        "account",
        "web3",
        "account",
        "e",
        "balance",
        "e",
        "Accounts",
        "account",
        "balance",
        "accounts",
        "_",
        "accounts",
        "account",
        "_",
        "accounts",
        "address",
        "web3",
        "address",
        "e",
        "balance",
        "e",
        "web3",
        "e",
        "coinbase",
        "Accounts",
        "address",
        "balance",
        "address",
        "coinbase",
        "address",
        "Accounts",
        "Tracker",
        "_this",
        "_this",
        "_this",
        "_this"
    ],
    "literals": [
        "'accounts'",
        "'latest'",
        "'address'",
        "''",
        "'Coinbase'"
    ],
    "variables": [
        "_this",
        "localAccounts",
        "_this"
    ],
    "comments": [
        "@module Ethereum:accounts",
        "The accounts collection, with some ethereum additions.\n\n@class Accounts\n@constructor",
        "Updates the accounts balances, by watching for new blocks and checking the balance.\n\n@method _watchBalance",
        "UPDATE SIMPLE ACCOUNTS balance on each new block",
        "Updates the accounts balances.\n\n@method _updateBalance",
        "Updates the accounts list,\nif its finds a difference between the accounts in the collection and the accounts in the accounts array.\n\n@method _addAccounts",
        "UPDATE normal accounts on start",
        "if the accounts are different, update the local ones",
        "set status deactivated, if it seem to be gone",
        "ADD missing accounts",
        "Starts fetching and watching the accounts\n\n@method init"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}