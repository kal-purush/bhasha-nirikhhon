{
    "identifiers": [
        "NServiceBus",
        "AcceptanceTests",
        "Outbox",
        "Threading",
        "Threading",
        "Tasks",
        "AcceptanceTesting",
        "AcceptanceTesting",
        "Customization",
        "EndpointTemplates",
        "Features",
        "NServiceBus",
        "Pipeline",
        "NUnit",
        "Framework",
        "NServiceBusAcceptanceTest",
        "Test",
        "Requires",
        "OutboxPersistence",
        "Scenario",
        "Define",
        "Context",
        "WithEndpoint",
        "Publisher",
        "b",
        "When",
        "c",
        "Subscriber1Subscribed",
        "c",
        "Subscriber2Subscribed",
        "session",
        "c",
        "c",
        "AddTrace",
        "session",
        "SendLocal",
        "TriggerMessage",
        "WithEndpoint",
        "Subscriber1",
        "b",
        "When",
        "session",
        "ctx",
        "session",
        "Subscribe",
        "MyEvent",
        "ctx",
        "HasNativePubSubSupport",
        "ctx",
        "Subscriber1Subscribed",
        "ctx",
        "AddTrace",
        "ctx",
        "AddTrace",
        "WithEndpoint",
        "Subscriber2",
        "b",
        "When",
        "session",
        "ctx",
        "session",
        "Subscribe",
        "MyEvent",
        "ctx",
        "HasNativePubSubSupport",
        "ctx",
        "Subscriber2Subscribed",
        "ctx",
        "AddTrace",
        "ctx",
        "AddTrace",
        "Done",
        "c",
        "Subscriber1GotTheEvent",
        "c",
        "Subscriber2GotTheEvent",
        "Run",
        "TimeSpan",
        "FromSeconds",
        "Assert",
        "context",
        "Subscriber1GotTheEvent",
        "Assert",
        "context",
        "Subscriber2GotTheEvent",
        "ScenarioContext",
        "EndpointConfigurationBuilder",
        "EndpointSetup",
        "DefaultPublisher",
        "b",
        "ConfigureTransport",
        "TransportTransactionMode",
        "TransportTransactionMode",
        "ReceiveOnly",
        "b",
        "EnableOutbox",
        "b",
        "Pipeline",
        "Register",
        "BlowUpAfterDispatchBehavior",
        "b",
        "Recoverability",
        "Immediate",
        "i",
        "NumberOfRetries",
        "b",
        "OnEndpointSubscribed",
        "Context",
        "s",
        "context",
        "Conventions",
        "EndpointNamingConvention",
        "Subscriber1",
        "s",
        "SubscriberEndpoint",
        "Contains",
        "subscriber1",
        "context",
        "Subscriber1Subscribed",
        "context",
        "AddTrace",
        "subscriber1",
        "Conventions",
        "EndpointNamingConvention",
        "Subscriber2",
        "s",
        "SubscriberEndpoint",
        "Contains",
        "subscriber2",
        "context",
        "AddTrace",
        "subscriber2",
        "context",
        "Subscriber2Subscribed",
        "b",
        "DisableFeature",
        "AutoSubscribe",
        "IHandleMessages",
        "TriggerMessage",
        "TriggerMessage",
        "message",
        "IMessageHandlerContext",
        "context",
        "context",
        "Publish",
        "MyEvent",
        "IBehavior",
        "IBatchDispatchContext",
        "IBatchDispatchContext",
        "IBatchDispatchContext",
        "context",
        "Func",
        "IBatchDispatchContext",
        "next",
        "Interlocked",
        "Increment",
        "invocationCounter",
        "SimulatedException",
        "next",
        "context",
        "ConfigureAwait",
        "EndpointConfigurationBuilder",
        "EndpointSetup",
        "DefaultServer",
        "c",
        "DisableFeature",
        "AutoSubscribe",
        "metadata",
        "RegisterPublisherFor",
        "MyEvent",
        "Publisher",
        "Context",
        "testContext",
        "IHandleMessages",
        "MyEvent",
        "MyEvent",
        "message",
        "IMessageHandlerContext",
        "context",
        "testContext",
        "Subscriber1GotTheEvent",
        "CompletedTask",
        "EndpointConfigurationBuilder",
        "EndpointSetup",
        "DefaultServer",
        "c",
        "DisableFeature",
        "AutoSubscribe",
        "metadata",
        "RegisterPublisherFor",
        "MyEvent",
        "Publisher",
        "Context",
        "testContext",
        "IHandleMessages",
        "MyEvent",
        "MyEvent",
        "messageThatIsEnlisted",
        "IMessageHandlerContext",
        "context",
        "testContext",
        "Subscriber2GotTheEvent",
        "CompletedTask",
        "IEvent",
        "ICommand"
    ],
    "literals": [
        "\"Both subscribers are subscribed, going to send TriggerMessage\"",
        "\"Subscriber1 is now subscribed (at least we have asked the broker to be subscribed)\"",
        "\"Subscriber1 has now asked to be subscribed to MyEvent\"",
        "\"Subscriber2 is now subscribed (at least we have asked the broker to be subscribed)\"",
        "\"Subscriber2 has now asked to be subscribed to MyEvent\"",
        "\"ensure outbox dispatch fails\""
    ],
    "variables": [
        "Context",
        "context",
        "Subscriber1GotTheEvent",
        "Subscriber2GotTheEvent",
        "Subscriber1Subscribed",
        "Subscriber2Subscribed",
        "subscriber1",
        "subscriber2",
        "invocationCounter"
    ],
    "comments": [
        "Send a trigger message that will invoke the handler method that publishes the event",
        "Test the outbox behavior in situations where messages are deserialized and dispatched from the outbox storage by injecting an exception into the dispatch pipeline"
    ],
    "docstrings": [],
    "functions": [
        "Should_be_delivered_to_all_subscribers",
        "Publisher",
        "Handle",
        "Invoke",
        "Subscriber1",
        "Handle",
        "Subscriber2",
        "Handle"
    ],
    "classes": [
        "When_publishing_with_outbox",
        "Context",
        "Publisher",
        "TriggerHandler",
        "BlowUpAfterDispatchBehavior",
        "Subscriber1",
        "MyHandler",
        "Subscriber2",
        "MyHandler",
        "MyEvent",
        "TriggerMessage"
    ]
}