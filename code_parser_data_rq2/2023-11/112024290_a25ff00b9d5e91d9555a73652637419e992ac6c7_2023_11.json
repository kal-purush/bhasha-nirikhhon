{
    "identifiers": [
        "requests",
        "json",
        "dumps",
        "NotifyBase",
        "NotifyBase",
        "URLBase",
        "PrivacyMode",
        "common",
        "NotifyType",
        "AppriseLocale",
        "gettext_lazy",
        "_",
        "NotifyBase",
        "NotifyBase",
        "template_tokens",
        "_",
        "_",
        "_",
        "_",
        "_",
        "NotifyBase",
        "template_args",
        "_",
        "_",
        "token",
        "headers",
        "file_url",
        "kwargs",
        "kwargs",
        "token",
        "token",
        "format",
        "token",
        "logger",
        "warning",
        "msg",
        "msg",
        "kwargs",
        "get",
        "file_url",
        "headers",
        "headers",
        "update",
        "headers",
        "privacy",
        "args",
        "kwargs",
        "file_url",
        "file_url",
        "update",
        "url_parameters",
        "privacy",
        "privacy",
        "args",
        "kwargs",
        "update",
        "format",
        "k",
        "v",
        "k",
        "v",
        "headers",
        "items",
        "user",
        "password",
        "format",
        "user",
        "NotifySynology",
        "quote",
        "user",
        "safe",
        "password",
        "pprint",
        "password",
        "privacy",
        "mode",
        "PrivacyMode",
        "Secret",
        "safe",
        "user",
        "format",
        "user",
        "NotifySynology",
        "quote",
        "user",
        "safe",
        "secure",
        "format",
        "schema",
        "secure_protocol",
        "secure",
        "protocol",
        "auth",
        "auth",
        "hostname",
        "host",
        "port",
        "port",
        "port",
        "default_port",
        "format",
        "port",
        "token",
        "pprint",
        "token",
        "privacy",
        "safe",
        "fullpath",
        "NotifySynology",
        "quote",
        "fullpath",
        "safe",
        "fullpath",
        "NotifySynology",
        "urlencode",
        "body",
        "title",
        "notify_type",
        "NotifyType",
        "INFO",
        "kwargs",
        "app_id",
        "headers",
        "update",
        "headers",
        "body",
        "file_url",
        "file_url",
        "token",
        "user",
        "user",
        "password",
        "secure",
        "schema",
        "host",
        "isinstance",
        "port",
        "url",
        "port",
        "url",
        "fullpath",
        "logger",
        "debug",
        "url",
        "verify_certificate",
        "logger",
        "debug",
        "payload",
        "throttle",
        "requests",
        "post",
        "url",
        "data",
        "dumps",
        "payload",
        "headers",
        "headers",
        "auth",
        "auth",
        "verify",
        "verify_certificate",
        "timeout",
        "request_timeout",
        "r",
        "status_code",
        "r",
        "status_code",
        "NotifySynology",
        "http_response_code_lookup",
        "r",
        "status_code",
        "logger",
        "warning",
        "status_str",
        "status_str",
        "r",
        "status_code",
        "logger",
        "debug",
        "format",
        "r",
        "content",
        "logger",
        "info",
        "requests",
        "RequestException",
        "e",
        "logger",
        "warning",
        "host",
        "logger",
        "debug",
        "e",
        "staticmethod",
        "url",
        "NotifyBase",
        "parse_url",
        "url",
        "results",
        "results",
        "NotifySynology",
        "unquote",
        "x",
        "NotifySynology",
        "unquote",
        "y",
        "x",
        "y",
        "results",
        "items",
        "results",
        "len",
        "results",
        "NotifySynology",
        "unquote",
        "results",
        "NotifySynology",
        "split_path",
        "results",
        "entries",
        "entries",
        "pop",
        "results",
        "len",
        "results",
        "results",
        "len",
        "results",
        "NotifySynology",
        "unquote",
        "results",
        "results"
    ],
    "literals": [
        "'Synology Chat'",
        "'https://www.synology.com/'",
        "'synology'",
        "'synologys'",
        "'https://github.com/caronc/apprise/wiki/Notify_synology_chat'",
        "'{schema}://{host}/{token}'",
        "'{schema}://{host}:{port}/{token}'",
        "'{schema}://{user}@{host}/{token}'",
        "'{schema}://{user}@{host}:{port}/{token}'",
        "'{schema}://{user}:{password}@{host}/{token}'",
        "'{schema}://{user}:{password}@{host}:{port}/{token}'",
        "'host'",
        "'name'",
        "'Hostname'",
        "'type'",
        "'string'",
        "'required'",
        "'port'",
        "'name'",
        "'Port'",
        "'type'",
        "'int'",
        "'min'",
        "'max'",
        "'user'",
        "'name'",
        "'Username'",
        "'type'",
        "'string'",
        "'password'",
        "'name'",
        "'Password'",
        "'type'",
        "'string'",
        "'private'",
        "'token'",
        "'name'",
        "'Token'",
        "'type'",
        "'string'",
        "'required'",
        "'private'",
        "'file_url'",
        "'name'",
        "'Upload'",
        "'type'",
        "'string'",
        "'token'",
        "'alias_of'",
        "'token'",
        "'headers'",
        "'name'",
        "'HTTP Header'",
        "'prefix'",
        "'+'",
        "'An invalid Synology Token '",
        "'({}) was specified.'",
        "'fullpath'",
        "'file_url'",
        "'+{}'",
        "''",
        "'{user}:{password}@'",
        "''",
        "''",
        "'{user}@'",
        "''",
        "'{schema}://{auth}{hostname}{port}/{token}'",
        "'{fullpath}?{params}'",
        "''",
        "':{}'",
        "''",
        "'/'",
        "'/'",
        "''",
        "'User-Agent'",
        "'Content-Type'",
        "'application/x-www-form-urlencoded'",
        "'Accept'",
        "'*/*'",
        "'text'",
        "'file_url'",
        "'api'",
        "'SYNO.Chat.External'",
        "'method'",
        "'incoming'",
        "'version'",
        "'token'",
        "'https'",
        "'http'",
        "'%s://%s'",
        "':%d'",
        "'/webapi/entry.cgi'",
        "'Synology Chat POST URL: %s (cert_verify=%r)'",
        "'Synology Chat Payload: %s'",
        "f\"payload={dumps(payload)}\"",
        "'Failed to send Synology Chat %s notification: '",
        "'%serror=%s.'",
        "', '",
        "''",
        "'Response Details:\\r\\n{}'",
        "'Sent Synology Chat notification.'",
        "'A Connection error occurred sending Synology '",
        "'Chat notification to %s.'",
        "'Socket Exception: %s'",
        "'headers'",
        "'qsd+'",
        "'token'",
        "'qsd'",
        "'qsd'",
        "'token'",
        "'token'",
        "'qsd'",
        "'token'",
        "'fullpath'",
        "'token'",
        "'fullpath'",
        "'fullpath'",
        "'token'",
        "'file_url'",
        "'qsd'",
        "'qsd'",
        "'file_url'",
        "'file_url'",
        "'qsd'",
        "'file_url'"
    ],
    "variables": [
        "service_name",
        "service_url",
        "protocol",
        "secure_protocol",
        "setup_url",
        "title_maxlen",
        "request_rate_per_sec",
        "templates",
        "template_tokens",
        "template_args",
        "template_kwargs",
        "token",
        "msg",
        "fullpath",
        "file_url",
        "headers",
        "auth",
        "auth",
        "auth",
        "default_port",
        "headers",
        "payload",
        "payload",
        "auth",
        "auth",
        "schema",
        "url",
        "r",
        "status_str",
        "results",
        "results",
        "results",
        "entries",
        "results",
        "results",
        "results"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "BSD 2-Clause License",
        "",
        "Apprise - Push Notification Library.",
        "Copyright (c) 2023, Chris Caron <lead2gold@gmail.com>",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions are met:",
        "",
        "1. Redistributions of source code must retain the above copyright notice,",
        "this list of conditions and the following disclaimer.",
        "",
        "2. Redistributions in binary form must reproduce the above copyright notice,",
        "this list of conditions and the following disclaimer in the documentation",
        "and/or other materials provided with the distribution.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",
        "AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",
        "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE",
        "ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE",
        "LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR",
        "CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF",
        "SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS",
        "INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN",
        "CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)",
        "ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE",
        "POSSIBILITY OF SUCH DAMAGE.",
        "For API Details see:",
        "https://kb.synology.com/en-au/DSM/help/Chat/chat_integration",
        "The default descriptive name associated with the Notification",
        "The services URL",
        "The default protocol",
        "The default secure protocol",
        "A URL that takes you to the setup/help of the specific protocol",
        "Title is to be part of body",
        "Disable throttle rate for Synology requests since they are normally",
        "local anyway",
        "Define object templates",
        "Define our tokens; these are the minimum tokens required required to",
        "be passed into this function (as arguments). The syntax appends any",
        "previously defined in the base package and builds onto them",
        "Define our template arguments",
        "Define any kwargs we're using",
        "A URL to an attachment you want to upload (must be less then 32MB",
        "Acording to API details (at the time of writing plugin)",
        "Store our extra headers",
        "Define any URL parameters",
        "Extend our parameters",
        "Append our headers into our parameters",
        "Determine Authentication",
        "never encode hostname since we're expecting it to be a valid",
        "one",
        "Prepare HTTP Headers",
        "Apply any/all header over-rides defined",
        "prepare Synology Object",
        "Prepare our parameters",
        "Set our schema",
        "Prepare our Synology API URL",
        "Always call throttle before any remote server i/o is made",
        "We had a problem",
        "Return; we're done",
        "Return; we're done",
        "We're done early as we couldn't load the results",
        "Add our headers that the user can potentially over-ride if they wish",
        "to to our returned result set and tidy entries by unquoting them",
        "Set our token if found as an argument",
        "Get unquoted entries",
        "Pop the first element",
        "Update our fullpath to not include our token",
        "Set upload/file_url if not otherwise set"
    ],
    "docstrings": [
        "\"\"\"\n    A wrapper for Synology Chat Notifications\n    \"\"\"",
        "\"\"\"\n        Initialize Synology Chat Object\n\n        headers can be a dictionary of key/value pairs that you want to\n        additionally include as part of the server headers to post with\n\n        \"\"\"",
        "\"\"\"\n        Returns the URL built dynamically based on specified arguments.\n        \"\"\"",
        "\"\"\"\n        Perform Synology Chat Notification\n        \"\"\"",
        "\"\"\"\n        Parses the URL and returns enough arguments that can allow\n        us to re-instantiate this object.\n\n        \"\"\""
    ],
    "functions": [
        "url",
        "send",
        "parse_url"
    ],
    "classes": [
        "NotifySynology"
    ]
}