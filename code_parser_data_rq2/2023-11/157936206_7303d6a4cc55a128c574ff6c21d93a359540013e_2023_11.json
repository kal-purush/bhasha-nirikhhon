{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "collections",
        "typing",
        "Any",
        "Dict",
        "Optional",
        "Text",
        "gymnasium",
        "gym",
        "gymnasium",
        "spaces",
        "numpy",
        "np",
        "tensorflow",
        "tf",
        "tf_agents",
        "specs",
        "tf_agents",
        "environments",
        "py_environment",
        "tf_agents",
        "specs",
        "BoundedArraySpec",
        "ArraySpec",
        "tf_agents",
        "trajectories",
        "time_step",
        "ts",
        "tf_agents",
        "typing",
        "types",
        "tensorflow",
        "python",
        "util",
        "nest",
        "space",
        "gym",
        "Space",
        "simplify_box_bounds",
        "name",
        "Optional",
        "Text",
        "BoundedArraySpec",
        "ArraySpec",
        "ArraySpec",
        "ArraySpec",
        "collections",
        "OrderedDict",
        "ArraySpec",
        "np_array",
        "np_array",
        "item",
        "np",
        "all",
        "np_array",
        "first_value",
        "np",
        "array",
        "first_value",
        "dtype",
        "np_array",
        "dtype",
        "np_array",
        "spec",
        "child_name",
        "name",
        "child_name",
        "name",
        "child_name",
        "spec_from_gym_space",
        "spec",
        "simplify_box_bounds",
        "nested_name",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "Discrete",
        "space",
        "n",
        "specs",
        "BoundedArraySpec",
        "shape",
        "dtype",
        "np",
        "int64",
        "minimum",
        "maximum",
        "maximum",
        "name",
        "name",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "MultiDiscrete",
        "np",
        "integer",
        "try_simplify_array_to_value",
        "np",
        "asarray",
        "space",
        "nvec",
        "dtype",
        "dtype",
        "specs",
        "BoundedArraySpec",
        "shape",
        "space",
        "shape",
        "dtype",
        "dtype",
        "minimum",
        "maximum",
        "maximum",
        "name",
        "name",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "MultiBinary",
        "specs",
        "BoundedArraySpec",
        "shape",
        "space",
        "shape",
        "dtype",
        "np",
        "int8",
        "minimum",
        "maximum",
        "name",
        "name",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "Box",
        "space",
        "dtype",
        "np",
        "asarray",
        "space",
        "low",
        "dtype",
        "dtype",
        "np",
        "asarray",
        "space",
        "high",
        "dtype",
        "dtype",
        "simplify_box_bounds",
        "try_simplify_array_to_value",
        "minimum",
        "try_simplify_array_to_value",
        "maximum",
        "simple_minimum",
        "shape",
        "simple_maximum",
        "shape",
        "simple_minimum",
        "simple_maximum",
        "specs",
        "BoundedArraySpec",
        "shape",
        "space",
        "shape",
        "dtype",
        "dtype",
        "minimum",
        "minimum",
        "maximum",
        "maximum",
        "name",
        "name",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "Tuple",
        "nested_spec",
        "s",
        "i",
        "i",
        "s",
        "space",
        "spaces",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "Dict",
        "collections",
        "OrderedDict",
        "key",
        "nested_spec",
        "s",
        "key",
        "key",
        "s",
        "space",
        "spaces",
        "items",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "Sequence",
        "nested_spec",
        "space",
        "feature_space",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "Graph",
        "nested_spec",
        "space",
        "node_space",
        "nested_spec",
        "space",
        "edge_space",
        "isinstance",
        "space",
        "gym",
        "spaces",
        "Text",
        "specs",
        "ArraySpec",
        "shape",
        "space",
        "shape",
        "dtype",
        "tf",
        "name",
        "name",
        "ValueError",
        "format",
        "space",
        "py_environment",
        "PyEnvironment",
        "gym_env",
        "gym",
        "Env",
        "discount",
        "types",
        "auto_reset",
        "simplify_box_bounds",
        "GymnasiumWrapper",
        "auto_reset",
        "gym_env",
        "discount",
        "isinstance",
        "_gym_env",
        "action_space",
        "gym",
        "spaces",
        "Discrete",
        "spec_from_gym_space",
        "_gym_env",
        "observation_space",
        "simplify_box_bounds",
        "spec_from_gym_space",
        "_gym_env",
        "action_space",
        "simplify_box_bounds",
        "tf",
        "nest",
        "flatten",
        "_observation_spec",
        "property",
        "gym",
        "Env",
        "_gym_env",
        "name",
        "Text",
        "Any",
        "GymnasiumWrapper",
        "__getattribute__",
        "getattr",
        "gym_env",
        "name",
        "Any",
        "_info",
        "_info",
        "_gym_env",
        "reset",
        "ts",
        "restart",
        "observation",
        "property",
        "_terminated",
        "property",
        "_truncated",
        "action",
        "_action_is_discrete",
        "isinstance",
        "action",
        "np",
        "ndarray",
        "action",
        "item",
        "_terminated",
        "_truncated",
        "_info",
        "_gym_env",
        "step",
        "action",
        "_terminated",
        "ts",
        "termination",
        "observation",
        "reward",
        "_truncated",
        "ts",
        "truncation",
        "observation",
        "reward",
        "_discount",
        "ts",
        "transition",
        "observation",
        "reward",
        "_discount",
        "types",
        "NestedArraySpec",
        "_observation_spec",
        "types",
        "NestedArraySpec",
        "_action_spec",
        "_gym_env",
        "close",
        "seed",
        "types",
        "Seed",
        "types",
        "Seed",
        "_gym_env",
        "seed",
        "seed",
        "seed_value",
        "seed_value",
        "mode",
        "Text",
        "Any",
        "_gym_env",
        "render",
        "state",
        "Any",
        "_gym_env",
        "set_state",
        "state",
        "Any",
        "_gym",
        "get_state"
    ],
    "literals": [
        "'/'",
        "'tuple_%d'",
        "'nested_space'",
        "'node_space'",
        "'edge_space'",
        "'The gymnasium space {} is currently not supported.'",
        "'observation'",
        "'action'",
        "'_gym_env'",
        "'rgb_array'"
    ],
    "variables": [
        "first_value",
        "nested_name",
        "maximum",
        "dtype",
        "maximum",
        "dtype",
        "minimum",
        "maximum",
        "simple_minimum",
        "simple_maximum",
        "minimum",
        "maximum",
        "_gym_env",
        "_discount",
        "_action_is_discrete",
        "_observation_spec",
        "_action_spec",
        "_flat_obs_spec",
        "_info",
        "_truncated",
        "gym_env",
        "observation",
        "_terminated",
        "_truncated",
        "action",
        "observation",
        "reward",
        "seed_value"
    ],
    "comments": [
        "coding=utf-8",
        "Copyright 2020 The TF-Agents Authors.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "https://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "pylint:disable=g-direct-tensorflow-import  # TF internal",
        "We try to simplify redundant arrays to make logging and debugging less",
        "verbose and easier to read since the printed spec bounds may be large.",
        "Discrete spaces span the set {0, 1, ... , n-1} while Bounded Array specs",
        "are inclusive on their bounds.",
        "Can only simplify if both bounds are simplified. Otherwise",
        "broadcasting doesn't work from non-simplified to simplified.",
        "TODO(oars): Upcoming update on gym adds **kwargs on reset. Update this to",
        "support that.",
        "Some environments (e.g. FrozenLake) use the action as a key to the",
        "transition probability, so it has to be hashable. In the case of discrete",
        "actions we have a numpy scalar (e.g array(2)) which is not hashable",
        "in this case, we simply pull out the scalar value which will be hashable.",
        "TODO(oars): Figure out how tuple or dict actions will be generated by the",
        "agents and if we can pass them through directly to gym.",
        "mode should be set for key \"render_mode\" in make()",
        "pytype: disable=attribute-error",
        "pytype: enable=attribute-error"
    ],
    "docstrings": [
        "\"\"\"Wrapper providing a PyEnvironmentBase adapter for Gymnasium environments.\"\"\"",
        "\"\"\"Converts gymnasium spaces into array specs, or a collection thereof.\n\n  Please note:\n    Unlike OpenAI's gym, Farama's gymnasium provides a dtype for\n    each current implementation of spaces. dtype should be defined\n    in all specific subclasses of gymnasium.Space even if it is still\n    optional in the superclass.\n\n  Args:\n    space: gymnasium.Space to turn into a spec.\n    simplify_box_bounds: Whether to replace bounds of Box space that are arrays\n      with identical values with one number and rely on broadcasting.\n    name: Name of the spec.\n\n  Returns:\n    A BoundedArraySpec or an ArraySpec nest mirroring the given space structure.\n    The result can be a tuple, sequence or dict of specs for specific Spaces.\n  Raises:\n    ValueError: If there is an unknown space type.\n  \"\"\"",
        "\"\"\"If given numpy array has all the same values, returns that value.\"\"\"",
        "\"\"\"Returns the nested spec with a unique name.\"\"\"",
        "\"\"\"Base wrapper implementing PyEnvironmentBaseWrapper interface for Gymnasium envs.\n\n  Action and observation specs are automatically generated from the action and\n  observation spaces. See base class for py_environment.Base details.\n  \"\"\"",
        "\"\"\"Forward all other calls to the base environment.\"\"\"",
        "\"\"\"Returns the gym environment info returned on the last step.\"\"\""
    ],
    "functions": [
        "spec_from_gym_space",
        "try_simplify_array_to_value",
        "nested_spec",
        "gym",
        "__getattr__",
        "get_info",
        "_reset",
        "terminated",
        "truncated",
        "_step",
        "observation_spec",
        "action_spec",
        "close",
        "seed",
        "render",
        "set_state",
        "get_state"
    ],
    "classes": [
        "GymnasiumWrapper"
    ]
}