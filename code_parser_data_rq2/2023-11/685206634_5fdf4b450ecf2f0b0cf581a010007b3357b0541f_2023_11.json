{
    "identifiers": [
        "stepdefinitions",
        "io",
        "cucumber",
        "java",
        "en",
        "Given",
        "io",
        "cucumber",
        "java",
        "en",
        "Then",
        "io",
        "cucumber",
        "java",
        "en",
        "When",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "i",
        "direction",
        "booleans",
        "Given",
        "direction",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "directionFromString",
        "Then",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "LEFT",
        "direction",
        "Then",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "RIGHT",
        "direction",
        "Then",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "UP",
        "direction",
        "Then",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "DOWN",
        "direction",
        "Then",
        "Assertions",
        "assertThrows",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "directionFromInt",
        "Then",
        "Assertions",
        "assertThrows",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "directionFromString",
        "Then",
        "Assertions",
        "assertThrows",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "randomDirectionFromBooleanArray",
        "Assertions",
        "assertThrows",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "randomDirectionFromBooleanArray",
        "Then",
        "Assertions",
        "assertNull",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "randomDirectionFromBooleanArray",
        "booleans",
        "Then",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "UP",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "randomDirectionFromBooleanArray",
        "booleans",
        "Then",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "LEFT",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "randomDirectionFromBooleanArray",
        "booleans",
        "Given",
        "integer",
        "i",
        "parseInt",
        "integer",
        "When",
        "integer",
        "direction",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "directionFromInt",
        "i",
        "Then",
        "returnDirection",
        "returnDirection",
        "equalsIgnoreCase",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "LEFT",
        "direction",
        "returnDirection",
        "equalsIgnoreCase",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "RIGHT",
        "direction",
        "returnDirection",
        "equalsIgnoreCase",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "UP",
        "direction",
        "returnDirection",
        "equalsIgnoreCase",
        "Assertions",
        "assertEquals",
        "team",
        "rocket",
        "Enums",
        "Direction",
        "DOWN",
        "direction",
        "Given",
        "first",
        "second",
        "third",
        "fourth",
        "booleans",
        "first",
        "booleans",
        "second",
        "booleans",
        "third",
        "booleans",
        "fourth"
    ],
    "literals": [
        "\"{string} is passed into directionFromString\"",
        "\"the returned direction should be left\"",
        "\"the returned direction should be right\"",
        "\"the returned direction should be up\"",
        "\"the returned direction should be down\"",
        "\"directionFromInt should throw illegalArgumentException when five is passed into it\"",
        "\"directionFromString should throw illegalArgumentException when a non-direction is passed into it\"",
        "\"hello\"",
        "\"randomDirectionFromBooleanArray should throw IllegalArgumentException when a too long boolean array is passed in\"",
        "\"randomDirectionFromBooleanArray returns null when passed the array\"",
        "\"randomDirectionFromBooleanArray returns UP\"",
        "\"randomDirectionFromBooleanArray returns LEFT\"",
        "\"The {} is saved.\"",
        "\"{} is passed into directionFromInt\"",
        "\"the return direction from directionFromInt is {}\"",
        "\"left\"",
        "\"right\"",
        "\"up\"",
        "\"down\"",
        "\"a boolean array with values \\\\({int} , {int} , {int} , {int}) is made\""
    ],
    "variables": [
        "i",
        "direction"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "isPassedIntoDirectionFromString",
        "theReturnedDirectionShouldBeLeft",
        "theReturnedDirectionShouldBeRight",
        "theReturnedDirectionShouldBeUp",
        "theReturnedDirectionShouldBeDown",
        "directionfromintShouldThrowIllegalArgumentExceptionWhenFiveIsPassedIntoIt",
        "directionfromstringShouldThrowIllegalArgumentExceptionWhenANonDirectionIsPassedIntoIt",
        "randomdirectionfrombooleanarrayShouldThrowIllegalArgumentExceptionWhenATooLongBooleanArrayIsPassedIn",
        "randomdirectionfrombooleanarrayReturnsNullWhenPassedTheArray",
        "randomdirectionfrombooleanarrayReturnsUP",
        "randomdirectionfrombooleanarrayReturnsLEFT",
        "theIsSaved",
        "isPassedIntoDirectionFromInt",
        "theReturnDirectionFromDirectionFromIntIs",
        "aBooleanArrayWithValuesIsMade"
    ],
    "classes": [
        "Direction"
    ]
}