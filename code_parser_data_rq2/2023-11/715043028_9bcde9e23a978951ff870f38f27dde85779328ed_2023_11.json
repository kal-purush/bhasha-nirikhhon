{
    "identifiers": [
        "sys",
        "requests",
        "os",
        "msg",
        "sys",
        "stdout",
        "buffer",
        "write",
        "msg",
        "encode",
        "msg",
        "sys",
        "stderr",
        "buffer",
        "write",
        "msg",
        "encode",
        "file",
        "os",
        "path",
        "getsize",
        "file",
        "OSError",
        "format",
        "file",
        "file_path",
        "format",
        "open",
        "file_path",
        "read",
        "requests",
        "post",
        "u",
        "headers",
        "h",
        "data",
        "d",
        "r",
        "status_code",
        "ConnectionError",
        "r",
        "json",
        "get",
        "m",
        "messages",
        "m",
        "m",
        "res",
        "append",
        "format",
        "file_path",
        "m",
        "res",
        "append",
        "format",
        "file_path",
        "m",
        "m",
        "res",
        "file_path",
        "file_path",
        "endswith",
        "__is_empty",
        "file_path",
        "__validate",
        "file_path",
        "file_path",
        "endswith",
        "__is_empty",
        "file_path",
        "__validate",
        "file_path",
        "file_path",
        "endswith",
        "__is_empty",
        "file_path",
        "__validate",
        "file_path",
        "OSError",
        "format",
        "file_path",
        "allowed_files",
        "len",
        "result",
        "msg",
        "result",
        "__print_stderr",
        "format",
        "msg",
        "nb_errors",
        "__print_stdout",
        "format",
        "file_path",
        "e",
        "__print_stderr",
        "format",
        "e",
        "__class__",
        "e",
        "nb_errors",
        "file_path",
        "sys",
        "argv",
        "nb_errors",
        "__analyse",
        "file_path",
        "nb_errors",
        "len",
        "sys",
        "argv",
        "__print_stderr",
        "exit",
        "sys",
        "exit",
        "__files_loop"
    ],
    "literals": [
        "'utf-8'",
        "'utf-8'",
        "\"File '{}' is empty.\"",
        "'Content-Type'",
        "\"{}; charset=utf-8\"",
        "\"rb\"",
        "\"https://validator.w3.org/nu/?out=json\"",
        "\"Unable to connect to API endpoint.\"",
        "'messages'",
        "'type'",
        "'error'",
        "'type'",
        "'info'",
        "\"'{}' => {}\"",
        "'message'",
        "\"[{}:{}] {}\"",
        "'lastLine'",
        "'message'",
        "\".css\"",
        "\"text/css\"",
        "\".html\"",
        "\".htm\"",
        "\"text/html\"",
        "\".svg\"",
        "\"image/svg+xml\"",
        "\"'.css', '.html', '.htm' and '.svg'\"",
        "\"File {} does not have a valid file extension.\\nOnly {} are \"",
        "\"allowed.\"",
        "\"{}\\n\"",
        "\"'{}' => OK\\n\"",
        "\"'{}' => {}\\n\"",
        "\"__main__\"",
        "\"usage: w3c_validator.py file1 file2 ...\\n\""
    ],
    "variables": [
        "h",
        "d",
        "u",
        "r",
        "res",
        "messages",
        "nb_errors",
        "result",
        "result",
        "result",
        "result",
        "allowed_files",
        "nb_errors"
    ],
    "comments": [
        "!/usr/bin/python3",
        "Open files in binary mode:",
        "https://requests.readthedocs.io/en/master/user/advanced/",
        "Capture files that have incomplete or broken HTML"
    ],
    "docstrings": [
        "\"\"\"\nW3C validator for Holberton School\n\nFor HTML and CSS files.\n\nBased on 1 API:\n- https://validator.w3.org/docs/api.html\n\nUsage:\n\nSimple file:\n\n```\n./w3c_validator.py index.html\n```\n\nMultiple files:\n\n```\n./w3c_validator.py index.html header.html styles/common.css\n```\n\nAll errors are printed in `STDERR`\n\nReturn:\nExit status is the # of errors, 0 on Success\n\"\"\"",
        "\"\"\"Print message in STDOUT\n    \"\"\"",
        "\"\"\"Print message in STDERR\n    \"\"\"",
        "\"\"\"\n    Start validation of files\n    \"\"\"",
        "\"\"\"Start analyse of a file and print the result\n    \"\"\"",
        "\"\"\"Loop that analyses for each file from input arguments\n    \"\"\"",
        "\"\"\"Main\n    \"\"\"",
        "\"\"\"execute tests, then exit. Exit status = # of errors (0 on success)\n    \"\"\""
    ],
    "functions": [
        "__print_stdout",
        "__print_stderr",
        "__is_empty",
        "__validate",
        "__analyse",
        "__files_loop"
    ],
    "classes": []
}