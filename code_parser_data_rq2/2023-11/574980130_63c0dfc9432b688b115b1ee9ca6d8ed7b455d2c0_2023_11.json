{
    "identifiers": [
        "SignerWithAddress",
        "chalk",
        "task",
        "TaskArguments",
        "createInstance",
        "getSigners",
        "eSigners",
        "eSigners",
        "eSigners",
        "eSigners",
        "eSigners",
        "task",
        "taskArguments",
        "taskArguments",
        "ethers",
        "ethers",
        "contractAddress",
        "signers",
        "chalk",
        "chalk",
        "contract",
        "signers",
        "addRegistrarTx",
        "e",
        "chalk",
        "chalk",
        "contract",
        "signers",
        "signers",
        "contract",
        "signers",
        "signers",
        "contract",
        "signers",
        "signers",
        "contract",
        "signers",
        "signers",
        "tx1",
        "tx2",
        "tx3",
        "tx4",
        "e",
        "chalk",
        "chalk",
        "createInstance",
        "contractAddress",
        "signers",
        "ethers",
        "instance",
        "instance",
        "contract",
        "signers",
        "signers",
        "country1",
        "contract",
        "signers",
        "signers",
        "country1",
        "contract",
        "signers",
        "signers",
        "country1",
        "contract",
        "signers",
        "signers",
        "country2",
        "tx1Identifier",
        "tx2Identifier",
        "tx3Identifier",
        "tx4Identifier",
        "task",
        "taskArguments",
        "taskArguments",
        "taskArguments",
        "ethers",
        "ethers",
        "registryAddress",
        "ethers",
        "erc20Address",
        "chalk",
        "chalk",
        "erc20",
        "identifiers",
        "chalk",
        "chalk",
        "registry",
        "signers",
        "erc20Address",
        "identifiers",
        "registry",
        "signers",
        "erc20Address",
        "identifiers",
        "registry",
        "signers",
        "erc20Address",
        "identifiers",
        "registry",
        "signers",
        "erc20Address",
        "identifiers",
        "txs",
        "tx",
        "tx",
        "task",
        "taskArguments",
        "taskArguments",
        "ethers",
        "ethers",
        "erc20Address",
        "createInstance",
        "erc20Address",
        "signers",
        "ethers",
        "chalk",
        "chalk",
        "instance",
        "erc20",
        "encryptedAmount",
        "transaction",
        "chalk",
        "chalk",
        "instance",
        "instance",
        "erc20",
        "signers",
        "amount20k",
        "erc20",
        "signers",
        "amount10k",
        "txT1",
        "txT2",
        "task",
        "taskArguments",
        "ethers",
        "getSigners",
        "eSigners",
        "taskArguments",
        "taskArguments",
        "signers",
        "taskArguments",
        "signers",
        "taskArguments",
        "ethers",
        "erc20Address",
        "createInstance",
        "erc20Address",
        "signers",
        "ethers",
        "chalk",
        "amount",
        "to",
        "chalk",
        "amount",
        "instance",
        "amount",
        "erc20",
        "signers",
        "signers",
        "to",
        "encryptedAmount",
        "transaction",
        "amount",
        "to",
        "task",
        "taskArguments",
        "ethers",
        "getSigners",
        "eSigners",
        "taskArguments",
        "taskArguments",
        "signers",
        "ethers",
        "erc20Address",
        "createInstance",
        "erc20Address",
        "signers",
        "user",
        "ethers",
        "instance",
        "erc20Address",
        "erc20",
        "signers",
        "user",
        "signers",
        "user",
        "token",
        "token",
        "chalk",
        "instance",
        "erc20Address",
        "balance"
    ],
    "literals": [
        "'@nomicfoundation/hardhat-ethers/signers'",
        "'chalk'",
        "'hardhat/config'",
        "'hardhat/types'",
        "'./utils'",
        "'task:identity:initRegistry'",
        "'registry'",
        "'Registry contract address'",
        "'IdentityRegistry'",
        "'Step 1: Adding registrar'",
        "'eg: registry.addRegistrar(wallet, id)'",
        "\"=> Bob is a registrar with registrar id '1'\"",
        "'=> Bob is already a registrar'",
        "'---'",
        "'Step 2: Adding decentralized id for 4 users (Alice, Bob, Carol and Dave)'",
        "'eg: registry.addDid(wallet)'",
        "'=> Did added for Alice, Bob, Carol and Dave'",
        "'=> Did was already added'",
        "'---'",
        "'Step 3: Adding country identifiers'",
        "\"eg: registry.setIdentifier(wallet, 'country', Enc(1))\"",
        "'country'",
        "'country'",
        "'country'",
        "'country'",
        "\"=> Alice, Bob and Carol are from country '1'\"",
        "\"=> Dave is from country '2'\"",
        "'task:identity:grantAccess'",
        "'registry'",
        "'Registry contract address'",
        "'erc20'",
        "'ERC20 contract address'",
        "'IdentityRegistry'",
        "'CompliantERC20'",
        "'Step 1: Getting list of identifiers from ERC20 contract'",
        "'eg: erc20.identifiers()'",
        "'=> List of identifiers needed:'",
        "'---'",
        "'Step 2: Grant access to the ERC20 contract to these identifiers'",
        "\"eg: erc20.grantAccess(erc20Address, ['country', 'blacklist'])\"",
        "'=> Access granted to the ERC20 contract for all users.'",
        "'task:identity:mint'",
        "'erc20'",
        "'ERC20 contract address'",
        "'CompliantERC20'",
        "'Step 1: Alice mints 100 000 tokens on the compliant contract'",
        "'eg: erc20.mint(Enc(100000))'",
        "'=> 10000 tokens have been minted'",
        "'---'",
        "'Step 2: Alice transfers some tokens'",
        "'eg: erc20.transfer(wallet, Enc(20000))'",
        "'transfer(address,bytes)'",
        "'transfer(address,bytes)'",
        "'=> Carol received 20000 tokens'",
        "'=> Dave received 10000 tokens'",
        "'task:identity:transfer'",
        "'erc20'",
        "'ERC20 contract address'",
        "'from'",
        "'From wallet'",
        "'to'",
        "'To wallet'",
        "'amount'",
        "'Amount'",
        "'CompliantERC20'",
        "Sending ${amount} from ${from} to ${to}",
        "eg: erc20.transfer(to, Enc(${amount}))",
        "'transfer(address,bytes)'",
        "=> ${amount} tokens have been transferred from ${from} to ${to}",
        "'task:identity:balanceOf'",
        "'erc20'",
        "'ERC20 contract address'",
        "'user'",
        "'User wallet'",
        "'CompliantERC20'",
        "=> ${chalk.bold('Balance')}: ${instance.decrypt(erc20Address, balance)} tokens",
        "'Balance'"
    ],
    "variables": [
        "getSigners",
        "contractAddress",
        "signers",
        "contract",
        "addRegistrarTx",
        "tx1",
        "tx2",
        "tx3",
        "tx4",
        "instance",
        "country1",
        "country2",
        "tx1Identifier",
        "tx2Identifier",
        "tx3Identifier",
        "tx4Identifier",
        "registryAddress",
        "erc20Address",
        "signers",
        "registry",
        "erc20",
        "identifiers",
        "txs",
        "erc20Address",
        "signers",
        "erc20",
        "instance",
        "encryptedAmount",
        "transaction",
        "amount20k",
        "amount10k",
        "txT1",
        "txT2",
        "eSigners",
        "signers",
        "erc20Address",
        "to",
        "amount",
        "erc20",
        "instance",
        "encryptedAmount",
        "transaction",
        "eSigners",
        "signers",
        "erc20Address",
        "user",
        "erc20",
        "instance",
        "token",
        "balance"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}