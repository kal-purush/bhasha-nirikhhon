{
    "identifiers": [
        "os",
        "sys",
        "datetime",
        "date",
        "logging",
        "argparse",
        "dns",
        "resolver",
        "txt_string",
        "txt_string",
        "replace",
        "replace",
        "replace",
        "replace",
        "domain",
        "retry_count",
        "dns",
        "resolver",
        "Answer",
        "dns",
        "resolver",
        "resolve",
        "domain",
        "records",
        "dns",
        "resolver",
        "NXDOMAIN",
        "logging",
        "error",
        "domain",
        "dns",
        "resolver",
        "Timeout",
        "retry_count",
        "logging",
        "warning",
        "domain",
        "dns_resolve_domain",
        "domain",
        "retry_count",
        "logging",
        "error",
        "domain",
        "dns",
        "resolver",
        "NoNameservers",
        "logging",
        "error",
        "domain",
        "dns",
        "resolver",
        "DNSException",
        "except_error",
        "logging",
        "error",
        "domain",
        "except_error",
        "sys",
        "exit",
        "file_path",
        "os",
        "path",
        "isfile",
        "file_path",
        "file_path",
        "open",
        "file_path",
        "encoding",
        "file",
        "line",
        "strip",
        "line",
        "file",
        "readlines",
        "logging",
        "debug",
        "domains_to_check",
        "domains_to_check",
        "domain",
        "logging",
        "debug",
        "domain",
        "dns_resolve_domain",
        "domain",
        "record",
        "records",
        "record",
        "to_text",
        "txt_record",
        "startswith",
        "clean_txt_string",
        "txt_record",
        "txt_string_formatted",
        "split",
        "split_spf_record",
        "split_spf_record",
        "mechanism",
        "spf_ip_list",
        "mechanism",
        "logging",
        "error",
        "sys",
        "exit",
        "mechanism",
        "startswith",
        "retrieve_spf_records",
        "mechanism",
        "flattened_ip_list",
        "extend",
        "include_ip_list",
        "mechanism",
        "startswith",
        "flattened_ip_list",
        "append",
        "mechanism",
        "flattened_ip_list",
        "append",
        "mechanism",
        "flattened_ip_list",
        "all_qualifier",
        "flattened_ips",
        "ips_to_be_checked",
        "domain",
        "ip_list",
        "ips_to_be_checked",
        "items",
        "ip_list",
        "ip",
        "ip",
        "ip_list",
        "ip",
        "flattened_ips",
        "ips_not_in_flattened_ips",
        "missing_ips",
        "setdefault",
        "domain",
        "extend",
        "ips_not_in_flattened_ips",
        "ip",
        "ip",
        "flattened_ips",
        "ip",
        "ip_values",
        "ip_values",
        "ips_to_be_checked",
        "values",
        "missing_ips",
        "extra_ips",
        "debug_flag",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "DEBUG",
        "debug_flag",
        "logging",
        "INFO",
        "format",
        "datefmt",
        "handlers",
        "logging",
        "StreamHandler",
        "sys",
        "stdout",
        "domain",
        "file_path",
        "logging",
        "info",
        "domain",
        "retrieve_spf_records",
        "domain",
        "logging",
        "debug",
        "each_domain",
        "process_domain_file",
        "file_path",
        "retrieve_spf_records",
        "each_domain",
        "file_domain_ip_list",
        "logging",
        "debug",
        "flattened_ips_to_be_checked",
        "find_missing_and_extra_ips",
        "flattened_ips_current",
        "flattened_ips_to_be_checked",
        "join",
        "flattened_ips_current",
        "all_qualifier",
        "logging",
        "info",
        "domain",
        "output_flattened_spf_record",
        "missing_ips",
        "logging",
        "info",
        "logging",
        "warning",
        "missing_ips",
        "extra_ips",
        "logging",
        "info",
        "logging",
        "warning",
        "extra_ips",
        "logging",
        "info",
        "output_flattened_spf_record",
        "missing_ips",
        "extra_ips",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "set_logging_config",
        "args",
        "debug",
        "logging",
        "info",
        "args",
        "file_path",
        "logging",
        "warning",
        "sys",
        "exit",
        "args",
        "domain",
        "logging",
        "warning",
        "sys",
        "exit",
        "is_valid_file_path",
        "args",
        "file_path",
        "logging",
        "error",
        "args",
        "file_path",
        "sys",
        "exit",
        "logging",
        "info",
        "args",
        "domain",
        "main",
        "args",
        "domain",
        "args",
        "file_path"
    ],
    "literals": [
        "'\" \"'",
        "\"\"",
        "'\"'",
        "\"\"",
        "\"\\n\"",
        "\"\"",
        "\"\\r\"",
        "\"\"",
        "\"TXT\"",
        "\"SPF records not found for %s\"",
        "\"DNS resolution timed out for %s. Retrying...\"",
        "\"DNS resolution timed out for %s. Exiting..\"",
        "\"No reachable DNS servers for %s. Exiting..\"",
        "\"An unknown error occurred while resolving SPF for domain %s: %s. Exiting..\"",
        "\"r\"",
        "\"utf-8\"",
        "\"Domains to be checked against: %s\"",
        "\"Processing domain: %s\"",
        "'\"v=spf'",
        "\"=\"",
        "\"Record has special modifiers, please parse manually. Exiting..\"",
        "\"include:\"",
        "\"ip4\"",
        "\"ip6\"",
        "\"[%(levelname)s] %(asctime)s - %(message)s\"",
        "\"%Y-%m-%d %H:%M:%S\"",
        "\"Flattening SPF records for %s\"",
        "\"Retrieving the domains and their spf records from the input file\"",
        "\"Domains and their IPs to be checked against: %s\"",
        "\"v=spf1 \"",
        "\" \"",
        "\" \"",
        "\"Flattened SPF record for %s : %s\"",
        "\"No missing IP's found\"",
        "\"Missing IP's: %s\"",
        "\"No extra IP's found\"",
        "\"Extra IP's: %s\"",
        "\"Script execution completed.\"",
        "\"__main__\"",
        "\"Tool to compare SPF records of a domain with the domains in input file, highlighting missing and extra IPs\"",
        "\"--debug\"",
        "\"store_true\"",
        "\"Enable debug logging\"",
        "\"--domain\"",
        "\"Input domain\"",
        "\"--file-path\"",
        "\"Path to the file with domain list\"",
        "\"Script execution started\"",
        "\"Input file path not provided\"",
        "\"Input domain is not provided\"",
        "\"Invalid file path or file does not exist: %s. Exiting..\"",
        "\"Starting SPF parsing for the domain: %s\""
    ],
    "variables": [
        "records",
        "domains_to_check",
        "records",
        "flattened_ip_list",
        "txt_record",
        "txt_string_formatted",
        "split_spf_record",
        "spf_ip_list",
        "all_qualifier",
        "include_ip_list",
        "_",
        "missing_ips",
        "extra_ips",
        "ips_not_in_flattened_ips",
        "extra_ips",
        "flattened_ips_current",
        "all_qualifier",
        "flattened_ips_to_be_checked",
        "file_domain_ip_list",
        "_",
        "flattened_ips_to_be_checked",
        "each_domain",
        "missing_ips",
        "extra_ips",
        "output_flattened_spf_record",
        "parser",
        "args"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Retrying for 3 times to resolve the SPF record when timeout error occurs",
        "Remove the unnecessary characters like \" \" from the txt_record for processing",
        "Discard the prefix \"v=spf1\" from the record and get the IP list and qualifier",
        "Parse each mechanism in the spf record",
        "Check if the mechanism is a special modifier like redirect, ptr etc.",
        "Recursively process the include domains",
        "Retrieve all IP4/IP6 addresses",
        "Retrieve other mechanisms (e.g., mx, exists, -ip4/-ip6) that differ from the previous cases",
        "Need to be modified for adding/removing mechanisms",
        "Initialize dictionaries to store missing and extra IPs",
        "Identify missing IPs",
        "Find IPs in ip_list that are not in flattened_ips",
        "Identify extra IPs",
        "Return missing and extra IPs",
        "Configure the logging module based on the debug_flag",
        "If debug_flag is True, set logging level to DEBUG; otherwise, use INFO",
        "Log to the console (stdout)",
        "Initialize a dict for IPs to be checked",
        "Iterate over domains in the input file to get the spf records and flatten the IP's",
        "Find missing and extra IPs",
        "Log missing entries",
        "Log extra entries",
        "Print and return the list of extra IPs",
        "Parse command-line arguments",
        "Configure logging based on debug flag",
        "Check if input arguments are not provided and default values are considered",
        "Check if the input file is valid",
        "Execute the main function"
    ],
    "docstrings": [
        "\"\"\"Tool to flattend and compare SPF records of a domain, highlighting missing/extra IP ranges and mechanisms.\"\"\"",
        "\"\"\"Clean TXT string by removing unnecessary characters considering the spf TXT format.\"\"\"",
        "\"\"\"Resolve SPF TXT records for a domain and handles common DNS resolution errors.\"\"\"",
        "\"\"\"Check if the provided path is a valid file.\"\"\"",
        "\"\"\"Validate and extract domains from the input file.\"\"\"",
        "\"\"\"Retrieve the IP list and qualifier from the domain's spf record.\"\"\"",
        "\"\"\"Identify the missing IPs from the domain.\"\"\"",
        "\"\"\"Create the log file and sets the configuration needed for logging.\"\"\"",
        "\"\"\"Retrieve and flatten domain's SPF record IPs, identify missing ones by comparing with the input file.\"\"\""
    ],
    "functions": [
        "clean_txt_string",
        "dns_resolve_domain",
        "is_valid_file_path",
        "process_domain_file",
        "retrieve_spf_records",
        "find_missing_and_extra_ips",
        "set_logging_config",
        "main"
    ],
    "classes": []
}