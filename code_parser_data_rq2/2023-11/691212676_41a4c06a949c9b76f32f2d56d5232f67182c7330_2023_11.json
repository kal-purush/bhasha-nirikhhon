{
    "identifiers": [
        "re",
        "typing",
        "Any",
        "Dict",
        "Tuple",
        "Union",
        "langchain",
        "output_parsers",
        "format_instructions",
        "PANDAS_DATAFRAME_FORMAT_INSTRUCTIONS",
        "langchain",
        "pydantic_v1",
        "validator",
        "langchain",
        "schema",
        "BaseOutputParser",
        "OutputParserException",
        "BaseOutputParser",
        "Any",
        "validator",
        "cls",
        "val",
        "Any",
        "Any",
        "pandas",
        "pd",
        "issubclass",
        "val",
        "pd",
        "DataFrame",
        "val",
        "pd",
        "DataFrame",
        "val",
        "empty",
        "ValueError",
        "array",
        "original_request_params",
        "Tuple",
        "Union",
        "Union",
        "re",
        "match",
        "array",
        "i",
        "i",
        "re",
        "findall",
        "array",
        "re",
        "match",
        "array",
        "re",
        "match",
        "array",
        "match",
        "match",
        "groups",
        "start",
        "end",
        "OutputParserException",
        "array",
        "re",
        "match",
        "array",
        "re",
        "match",
        "array",
        "match",
        "match",
        "group",
        "strip",
        "split",
        "OutputParserException",
        "array",
        "parsed_array",
        "OutputParserException",
        "original_request_params",
        "isinstance",
        "parsed_array",
        "parsed_array",
        "dataframe",
        "index",
        "max",
        "OutputParserException",
        "parsed_array",
        "dataframe",
        "index",
        "max",
        "parsed_array",
        "original_request_params",
        "split",
        "request",
        "Dict",
        "Any",
        "request",
        "strip",
        "split",
        "len",
        "splitted_request",
        "OutputParserException",
        "request",
        "splitted_request",
        "request_type",
        "OutputParserException",
        "request",
        "re",
        "search",
        "request_params",
        "array_exists",
        "parse_array",
        "array_exists",
        "group",
        "request_params",
        "request_type",
        "dataframe",
        "dataframe",
        "index",
        "isin",
        "parsed_array",
        "len",
        "parsed_array",
        "filtered_df",
        "stripped_request_params",
        "iloc",
        "parsed_array",
        "filtered_df",
        "stripped_request_params",
        "request_type",
        "dataframe",
        "dataframe",
        "columns",
        "intersection",
        "parsed_array",
        "len",
        "parsed_array",
        "filtered_df",
        "iloc",
        "stripped_request_params",
        "parsed_array",
        "filtered_df",
        "iloc",
        "stripped_request_params",
        "dataframe",
        "dataframe",
        "index",
        "isin",
        "parsed_array",
        "getattr",
        "filtered_df",
        "stripped_request_params",
        "request_type",
        "request_type",
        "dataframe",
        "request_params",
        "request_type",
        "dataframe",
        "iloc",
        "request_params",
        "getattr",
        "dataframe",
        "request_params",
        "request_type",
        "AttributeError",
        "IndexError",
        "KeyError",
        "request_type",
        "OutputParserException",
        "request_type",
        "OutputParserException",
        "request_params",
        "stripped_request_params",
        "stripped_request_params",
        "result",
        "PANDAS_DATAFRAME_FORMAT_INSTRUCTIONS",
        "format",
        "columns",
        "join",
        "dataframe",
        "columns"
    ],
    "literals": [
        "\"dataframe\"",
        "\"DataFrame cannot be empty.\"",
        "\"Wrong type for 'dataframe', must be a subclass \\\n                of Pandas DataFrame (pd.DataFrame)\"",
        "r\"\\[\\d+(,\\s*\\d+)*\\]\"",
        "r\"\\d+\"",
        "r\"\\[(\\d+)\\.\\.(\\d+)\\]\"",
        "r\"\\[(\\d+)\\.\\.(\\d+)\\]\"",
        "f\"Unable to parse the array provided in {array}. \\\n                        Please check the format instructions.\"",
        "r\"\\[[a-zA-Z0-9_]+(?:,[a-zA-Z0-9_]+)*\\]\"",
        "r\"\\[[a-zA-Z0-9_]+(?:,[a-zA-Z0-9_]+)*\\]\"",
        "\"[]\"",
        "\",\"",
        "f\"Unable to parse the array provided in {array}. \\\n                        Please check the format instructions.\"",
        "f\"Invalid array format in '{original_request_params}'. \\\n                    Please check the format instructions.\"",
        "f\"The maximum index {parsed_array[-1]} exceeds the maximum index of \\\n                    the Pandas DataFrame {self.dataframe.index.max()}.\"",
        "\"[\"",
        "\":\"",
        "f\"Request '{request}' is not correctly formatted. \\\n                    Please refer to the format instructions.\"",
        "\"Invalid column\"",
        "\"Invalid operation\"",
        "f\"{request}. Please check the format instructions.\"",
        "r\"(\\[.*?\\])\"",
        "\"column\"",
        "\"row\"",
        "\"column\"",
        "\"row\"",
        "\"column\"",
        "\"row\"",
        "f\"Unsupported request type '{request_type}'. \\\n                        Please check the format instructions.\"",
        "f\"\"\"Requested index {\n                    request_params\n                    if stripped_request_params is None\n                    else stripped_request_params\n                } is out of bounds.\"\"\"",
        "\", \""
    ],
    "variables": [
        "dataframe",
        "parsed_array",
        "parsed_array",
        "match",
        "start",
        "end",
        "parsed_array",
        "match",
        "parsed_array",
        "stripped_request_params",
        "splitted_request",
        "result",
        "request_type",
        "request_params",
        "array_exists",
        "parsed_array",
        "stripped_request_params",
        "filtered_df",
        "result",
        "stripped_request_params",
        "result",
        "stripped_request_params",
        "filtered_df",
        "result",
        "stripped_request_params",
        "result",
        "stripped_request_params",
        "filtered_df",
        "result",
        "request_type",
        "result",
        "request_params",
        "result",
        "request_params",
        "result",
        "request_type"
    ],
    "comments": [
        "Check if the format is [1,3,5]",
        "Check if the format is [1..5]",
        "Check if the format is [\"column_name\"]",
        "Validate the array"
    ],
    "docstrings": [
        "\"\"\"Parse an output using Pandas DataFrame format.\"\"\"",
        "\"\"\"The Pandas DataFrame to parse.\"\"\""
    ],
    "functions": [
        "validate_dataframe",
        "parse_array",
        "parse",
        "get_format_instructions"
    ],
    "classes": [
        "PandasDataFrameOutputParser"
    ]
}