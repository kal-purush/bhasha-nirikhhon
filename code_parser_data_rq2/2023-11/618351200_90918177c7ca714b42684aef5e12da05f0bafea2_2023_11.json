{
    "identifiers": [
        "describe",
        "it",
        "vi",
        "TestContext",
        "createTestServices",
        "vi",
        "expect",
        "createTestServices",
        "validate",
        "model",
        "validateView",
        "view",
        "validate",
        "view",
        "validateRules",
        "rules",
        "validateView",
        "rules",
        "view",
        "validateView",
        "view",
        "expect",
        "errors",
        "view",
        "validateView",
        "view",
        "expect",
        "errors",
        "rules",
        "validateRules",
        "rules",
        "expect",
        "errors",
        "rules",
        "validateRules",
        "rules",
        "expect",
        "errors",
        "describe",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "invalid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "invalid",
        "invalid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "describe",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid",
        "invalid",
        "invalid",
        "invalid",
        "valid",
        "valid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "invalid",
        "invalid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid",
        "invalid",
        "valid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid",
        "valid",
        "invalid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid",
        "invalid",
        "valid",
        "invalid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid",
        "valid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "invalid",
        "valid",
        "valid",
        "valid",
        "valid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "invalid",
        "valid",
        "valid",
        "valid",
        "valid",
        "valid",
        "valid",
        "describe",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid",
        "valid",
        "it",
        "ctx",
        "mkTestServices",
        "ctx",
        "valid",
        "valid"
    ],
    "literals": [
        "'vitest'",
        "'../test'",
        "'../logger'",
        "specification {\n    element component\n    tag epic-123\n    tag next\n  }\n  model {\n    component user\n    component system {\n      component backend {\n        component model\n        component api {\n          #next\n        }\n      }\n      component auth {\n        component api\n      }\n      component frontend\n    }\n    component infra {\n      component database\n    }\n\n    backend.model -> infra.database\n    backend.api -> backend.model\n    auth.api -> backend.api\n    frontend -> auth.api\n    frontend -> backend.api\n    user -> frontend\n  }",
        "'model.c4'",
        "string",
        "views {\n        ${view}\n      }",
        "string",
        "view {\n        ${rules}\n      }",
        "string",
        "'\\n'",
        "''",
        "string",
        "string",
        "'\\n'",
        "''",
        "string",
        "'views2'",
        "'valid views'",
        "view index {\n      }",
        "view system.backend {\n      }",
        "view index2 of system.backend {\n      }",
        "view of system.backend {\n      }",
        "'view scope'",
        "view of system {\n        include api\n      }",
        "view of system.api {\n        include *\n      }",
        "view of system.auth {\n        include api\n      }",
        "'view properties'",
        "view {\n        title 'Index'\n        description: \"\n          Index view description\n        \";\n        link https://domain.com/path\n\n        include *\n      }",
        "view {\n        #epic-123 #next\n        title \"Index\";\n        include *\n      }",
        "'autoLayout and rules order'",
        "view {\n        include *\n        style * {\n          color: secondary\n        }\n        autoLayout BottomTop\n        exclude -> infra\n      }\n      view {\n        autoLayout LeftRight\n        include *\n      }",
        "'include'",
        "'element'",
        "include *",
        "include system.backend",
        "include ,",
        "include random",
        "include system.api",
        "include *, system.backend",
        "exclude *, system,\n        include infra,",
        "include\n          system.backend,\n          system.backend.*,\n          infra.*",
        "exclude\n          system.backend,\n          system.backend.*,\n          infra.*",
        "'element []'",
        "include system.backend.* [ ]",
        "include * [ ]",
        "include system.backend.api [ ]",
        "include\n          system.backend.*,\n          system.backend.api [ ],\n          system.model [ ],",
        "'-> element'",
        "include -> *",
        "include -> system.backend.api",
        "include -> system.backend.api [],",
        "include -> system.backend.*",
        "include\n          -> *,\n          -> system.backend.api,\n          -> system.backend.*",
        "exclude\n          -> *,\n          -> system.backend.api,\n          -> system.backend.*",
        "'-> element ->'",
        "include -> * ->",
        "include -> system.backend.api ->",
        "include -> system.backend.* ->",
        "include -> random.* ->",
        "include\n          -> * ->,\n          -> system.backend.api ->,\n          -> system.backend.* ->,",
        "exclude\n          -> * ->,\n          -> system.backend.api ->,\n          -> system.backend.* ->,",
        "'element -> element'",
        "include * -> *",
        "include system -> infra",
        "include system [ ] -> infra",
        "include system.backend.* -> infra.*",
        "include system.backend.* -> random",
        "include\n          * -> *,\n          * -> infra,\n          * -> infra.*,\n          system -> infra,\n          system.backend.* -> infra.*,\n          system.backend.* -> *",
        "exclude\n          * -> *,\n          * -> infra,\n          * -> infra.*,\n          system -> infra,\n          system.backend.* -> infra.*,\n          system.backend.* -> *",
        "'element ->'",
        "include * ->",
        "include system ->",
        "include system.backend.* ->",
        "include\n          * ->,\n          system ->,\n          system.backend.* ->,",
        "exclude\n          * ->,\n          system ->,\n          system.backend.* ->,",
        "'element.kind'",
        "include element.kind = component",
        "include element.kind = cmp",
        "include element.kind == component",
        "include element.kind != component",
        "include element.kind !== component",
        "include\n          element.kind = component,\n          element.kind == component,\n          element.kind != component,",
        "exclude\n          element.kind = component,\n          element.kind == component,\n          element.kind != component,",
        "include\n          -> element.kind = component,\n          * -> element.kind == component,\n          element.kind != component ->",
        "'element.tag'",
        "include element.tag = #next",
        "include element.tag = #invalid",
        "include element.tag == #epic-123",
        "include element.tag != #next",
        "include element.tag !== #next",
        "include\n          element.tag = #epic-123,\n          element.tag == #next,\n          element.tag != #epic-123,",
        "exclude\n          element.tag = #next,\n          element.tag == #epic-123,\n          element.tag != #epic-123,",
        "include\n          -> element.tag = #epic-123,\n          * -> element.tag == #next,\n          element.tag != #epic-123 ->",
        "'style'",
        "'element'",
        "style * {\n          color secondary\n        }\n        style system, infra, {\n          color: secondary\n        }",
        "style *, system.backend {\n          color secondary\n        }",
        "style infra.*, system.backend.api {\n          icon https://icons.terrastruct.com/dev%2Ftypescript.svg\n        }",
        "'element.kind/tag'",
        "style element.kind == component {\n          color secondary\n        }",
        "style element.tag != #epic-123 {\n          color secondary\n        }"
    ],
    "variables": [
        "model",
        "validateView",
        "validateRules"
    ],
    "comments": [
        "inambiqutes \"of\"",
        "resolve",
        "inambiqutes Two api: in backend and auth",
        "await invalid(`",
        "exclude system.backend.api [ ]",
        "`)"
    ],
    "docstrings": [],
    "functions": [
        "mkTestServices"
    ],
    "classes": []
}