{
    "identifiers": [
        "java",
        "util",
        "concurrent",
        "Semaphore",
        "java",
        "util",
        "Random",
        "buf",
        "readCount",
        "mutex",
        "wrt",
        "readerSem",
        "numReaders",
        "numWriters",
        "numAccesses",
        "args",
        "args",
        "length",
        "exit",
        "numReaders",
        "parseInt",
        "args",
        "numWriters",
        "parseInt",
        "args",
        "numAccesses",
        "parseInt",
        "args",
        "numReaders",
        "numWriters",
        "readerThreads",
        "numReaders",
        "writerThreads",
        "numWriters",
        "i",
        "i",
        "numReaders",
        "i",
        "readerThreads",
        "i",
        "i",
        "readerThreads",
        "i",
        "start",
        "i",
        "i",
        "numWriters",
        "i",
        "writerThreads",
        "i",
        "i",
        "writerThreads",
        "i",
        "start",
        "name",
        "rand",
        "name",
        "name",
        "name",
        "i",
        "i",
        "numAccesses",
        "i",
        "readerSem",
        "acquire",
        "mutex",
        "acquire",
        "readCount",
        "readCount",
        "wrt",
        "acquire",
        "mutex",
        "release",
        "readerSem",
        "release",
        "name",
        "buf",
        "mutex",
        "acquire",
        "readCount",
        "readCount",
        "wrt",
        "release",
        "mutex",
        "release",
        "sleep",
        "rand",
        "nextInt",
        "e",
        "e",
        "printStackTrace",
        "name",
        "rand",
        "name",
        "name",
        "name",
        "i",
        "i",
        "numAccesses",
        "i",
        "wrt",
        "acquire",
        "newData",
        "rand",
        "nextInt",
        "buf",
        "newData",
        "name",
        "newData",
        "wrt",
        "release",
        "sleep",
        "rand",
        "nextInt",
        "e",
        "e",
        "printStackTrace"
    ],
    "literals": [
        "\"Welcome to the Reader-Writer Synchronization Program!\"",
        "\"Please provide the number of readers, number of writers, and the number of accesses each should perform.\"",
        "\"Number of Readers (<# of readers>): Number of reader threads to create. Each will attempt to read from the shared buffer.\"",
        "\"Number of Writers (<# of writers>): Number of writer threads to create. Each will attempt to write to the shared buffer.\"",
        "\"Number of Accesses (<# of access>): Number of times each thread (both readers and writers) will access the shared buffer.\\n\"",
        "\"Usage: java RW <# of readers> <# of writers> <# of access>\"",
        "\"# of readers is: \"",
        "\"# of writers is: \"",
        "\"Reader \"",
        "\"Writer \"",
        "\" retrieved \"",
        "\" set buffer to \""
    ],
    "variables": [
        "numReaders",
        "numWriters",
        "numAccesses",
        "name",
        "name"
    ],
    "comments": [
        "Data",
        "Welcome message and instructions",
        "Entry Section",
        "Writers have priority",
        "Reading the data",
        "Exit Section",
        "Allow a waiting writer to enter",
        "Simulate a real situation with sleep",
        "Entry Section",
        "Writing the data",
        "Exit Section",
        "Simulate a real situation with sleep"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "Reader",
        "run",
        "Writer",
        "run"
    ],
    "classes": [
        "RW",
        "Reader",
        "Writer"
    ]
}