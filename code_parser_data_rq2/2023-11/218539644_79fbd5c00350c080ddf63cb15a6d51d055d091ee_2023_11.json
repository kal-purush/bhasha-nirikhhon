{
    "identifiers": [
        "com",
        "sforce",
        "eventbus",
        "org",
        "apache",
        "avro",
        "message",
        "BinaryMessageDecoder",
        "org",
        "apache",
        "avro",
        "message",
        "BinaryMessageEncoder",
        "org",
        "apache",
        "avro",
        "message",
        "SchemaStore",
        "org",
        "apache",
        "avro",
        "specific",
        "SpecificData",
        "org",
        "apache",
        "avro",
        "util",
        "Utf8",
        "org",
        "apache",
        "avro",
        "specific",
        "AvroGenerated",
        "serialVersionUID",
        "SCHEMA$",
        "parse",
        "SCHEMA$",
        "MODEL$",
        "ENCODER",
        "MODEL$",
        "SCHEMA$",
        "DECODER",
        "MODEL$",
        "SCHEMA$",
        "ENCODER",
        "DECODER",
        "resolver",
        "MODEL$",
        "SCHEMA$",
        "resolver",
        "ENCODER",
        "encode",
        "b",
        "DECODER",
        "decode",
        "b",
        "CreatedDate",
        "CreatedById",
        "Test_Field__c",
        "CreatedDate",
        "CreatedById",
        "Test_Field__c",
        "CreatedDate",
        "CreatedDate",
        "CreatedById",
        "CreatedById",
        "Test_Field__c",
        "Test_Field__c",
        "Override",
        "MODEL$",
        "Override",
        "SCHEMA$",
        "Override",
        "field$",
        "field$",
        "CreatedDate",
        "CreatedById",
        "Test_Field__c",
        "field$",
        "Override",
        "SuppressWarnings",
        "value",
        "field$",
        "value$",
        "field$",
        "CreatedDate",
        "value$",
        "CreatedById",
        "value$",
        "Test_Field__c",
        "value$",
        "field$",
        "CreatedDate",
        "value",
        "CreatedDate",
        "value",
        "CreatedById",
        "value",
        "CreatedById",
        "value",
        "Test_Field__c",
        "value",
        "Test_Field__c",
        "value",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "org",
        "apache",
        "avro",
        "specific",
        "AvroGenerated",
        "CreatedDate",
        "CreatedById",
        "Test_Field__c",
        "SCHEMA$",
        "MODEL$",
        "other",
        "other",
        "isValidValue",
        "fields",
        "other",
        "CreatedDate",
        "CreatedDate",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "CreatedDate",
        "fieldSetFlags",
        "other",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "CreatedById",
        "CreatedById",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "CreatedById",
        "fieldSetFlags",
        "other",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "Test_Field__c",
        "Test_Field__c",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "Test_Field__c",
        "fieldSetFlags",
        "other",
        "fieldSetFlags",
        "other",
        "SCHEMA$",
        "MODEL$",
        "isValidValue",
        "fields",
        "other",
        "CreatedDate",
        "CreatedDate",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "CreatedDate",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "CreatedById",
        "CreatedById",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "CreatedById",
        "fieldSetFlags",
        "isValidValue",
        "fields",
        "other",
        "Test_Field__c",
        "Test_Field__c",
        "data",
        "deepCopy",
        "fields",
        "schema",
        "other",
        "Test_Field__c",
        "fieldSetFlags",
        "CreatedDate",
        "value",
        "validate",
        "fields",
        "value",
        "CreatedDate",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "fieldSetFlags",
        "CreatedById",
        "value",
        "validate",
        "fields",
        "value",
        "CreatedById",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "CreatedById",
        "fieldSetFlags",
        "Test_Field__c",
        "value",
        "validate",
        "fields",
        "value",
        "Test_Field__c",
        "value",
        "fieldSetFlags",
        "fieldSetFlags",
        "Test_Field__c",
        "fieldSetFlags",
        "Override",
        "SuppressWarnings",
        "record",
        "record",
        "CreatedDate",
        "fieldSetFlags",
        "CreatedDate",
        "defaultValue",
        "fields",
        "record",
        "CreatedById",
        "fieldSetFlags",
        "CreatedById",
        "defaultValue",
        "fields",
        "record",
        "Test_Field__c",
        "fieldSetFlags",
        "Test_Field__c",
        "defaultValue",
        "fields",
        "record",
        "e",
        "e",
        "e",
        "e",
        "SuppressWarnings",
        "WRITER$",
        "MODEL$",
        "createDatumWriter",
        "SCHEMA$",
        "Override",
        "WRITER$",
        "write",
        "SpecificData",
        "getEncoder",
        "SuppressWarnings",
        "READER$",
        "MODEL$",
        "createDatumReader",
        "SCHEMA$",
        "Override",
        "READER$",
        "read",
        "SpecificData",
        "getDecoder",
        "Override",
        "Override",
        "writeLong",
        "CreatedDate",
        "writeString",
        "CreatedById",
        "Test_Field__c",
        "writeIndex",
        "writeNull",
        "writeIndex",
        "writeString",
        "Test_Field__c",
        "Override",
        "fieldOrder",
        "readFieldOrderIfDiff",
        "fieldOrder",
        "CreatedDate",
        "readLong",
        "CreatedById",
        "readString",
        "CreatedById",
        "CreatedById",
        "readIndex",
        "readNull",
        "Test_Field__c",
        "Test_Field__c",
        "readString",
        "Test_Field__c",
        "Test_Field__c",
        "i",
        "i",
        "i",
        "fieldOrder",
        "i",
        "pos",
        "CreatedDate",
        "readLong",
        "CreatedById",
        "readString",
        "CreatedById",
        "CreatedById",
        "readIndex",
        "readNull",
        "Test_Field__c",
        "Test_Field__c",
        "readString",
        "Test_Field__c",
        "Test_Field__c"
    ],
    "literals": [
        "\"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"TestEvent__e\\\",\\\"namespace\\\":\\\"com.sforce.eventbus\\\",\\\"fields\\\":[{\\\"name\\\":\\\"CreatedDate\\\",\\\"type\\\":\\\"long\\\",\\\"doc\\\":\\\"CreatedDate:DateTime\\\"},{\\\"name\\\":\\\"CreatedById\\\",\\\"type\\\":\\\"string\\\",\\\"doc\\\":\\\"CreatedBy:EntityId\\\"},{\\\"name\\\":\\\"Test_Field__c\\\",\\\"type\\\":[\\\"null\\\",\\\"string\\\"],\\\"doc\\\":\\\"Data:Text\\\",\\\"default\\\":null}]}\"",
        "\"Invalid index: \"",
        "\"unchecked\"",
        "\"Invalid index: \"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"unchecked\"",
        "\"Corrupt ResolvingDecoder.\""
    ],
    "variables": [
        "CreatedDate",
        "CreatedById",
        "Test_Field__c",
        "CreatedDate",
        "CreatedById",
        "Test_Field__c"
    ],
    "comments": [
        "Used by DatumWriter.  Applications should not call.",
        "Used by DatumReader.  Applications should not call."
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Autogenerated by Avro\n *\n * DO NOT EDIT DIRECTLY",
        "* Return the BinaryMessageEncoder instance used by this class.\n     *\n     * @return the message encoder used by this class",
        "* Return the BinaryMessageDecoder instance used by this class.\n     *\n     * @return the message decoder used by this class",
        "* Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.\n     *\n     * @param  resolver a {@link SchemaStore} used to find schemas by fingerprint\n     * @return          a BinaryMessageDecoder instance for this class backed by the given SchemaStore",
        "* Serializes this TestEvent__e to a ByteBuffer.\n     *\n     * @return                     a buffer holding the serialized data for this instance\n     * @throws java.io.IOException if this instance could not be serialized",
        "* Deserializes a TestEvent__e from a ByteBuffer.\n     *\n     * @param  b                   a byte buffer holding serialized data for an instance of this class\n     * @return                     a TestEvent__e instance decoded from the given buffer\n     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class",
        "CreatedDate:DateTime",
        "CreatedBy:EntityId",
        "Data:Text",
        "* Default constructor. Note that this does not initialize fields\n     * to their default values from the schema. If that is desired then\n     * one should use <code>newBuilder()</code>.",
        "* All-args constructor.\n     *\n     * @param CreatedDate   CreatedDate:DateTime\n     * @param CreatedById   CreatedBy:EntityId\n     * @param Test_Field__c Data:Text",
        "* Gets the value of the 'CreatedDate' field.\n     *\n     * @return CreatedDate:DateTime",
        "* Sets the value of the 'CreatedDate' field.\n     * CreatedDate:DateTime\n     *\n     * @param value the value to set.",
        "* Gets the value of the 'CreatedById' field.\n     *\n     * @return CreatedBy:EntityId",
        "* Sets the value of the 'CreatedById' field.\n     * CreatedBy:EntityId\n     *\n     * @param value the value to set.",
        "* Gets the value of the 'Test_Field__c' field.\n     *\n     * @return Data:Text",
        "* Sets the value of the 'Test_Field__c' field.\n     * Data:Text\n     *\n     * @param value the value to set.",
        "* Creates a new TestEvent__e RecordBuilder.\n     *\n     * @return A new TestEvent__e RecordBuilder",
        "* Creates a new TestEvent__e RecordBuilder by copying an existing Builder.\n     *\n     * @param  other The existing builder to copy.\n     * @return       A new TestEvent__e RecordBuilder",
        "* Creates a new TestEvent__e RecordBuilder by copying an existing TestEvent__e instance.\n     *\n     * @param  other The existing instance to copy.\n     * @return       A new TestEvent__e RecordBuilder",
        "* RecordBuilder for TestEvent__e instances.",
        "CreatedDate:DateTime",
        "CreatedBy:EntityId",
        "Data:Text",
        "Creates a new Builder",
        "* Creates a Builder by copying an existing Builder.\n         *\n         * @param other The existing Builder to copy.",
        "* Creates a Builder by copying an existing TestEvent__e instance\n         *\n         * @param other The existing instance to copy.",
        "* Gets the value of the 'CreatedDate' field.\n         * CreatedDate:DateTime\n         *\n         * @return The value.",
        "* Sets the value of the 'CreatedDate' field.\n         * CreatedDate:DateTime\n         *\n         * @param  value The value of 'CreatedDate'.\n         * @return       This builder.",
        "* Checks whether the 'CreatedDate' field has been set.\n         * CreatedDate:DateTime\n         *\n         * @return True if the 'CreatedDate' field has been set, false otherwise.",
        "* Clears the value of the 'CreatedDate' field.\n         * CreatedDate:DateTime\n         *\n         * @return This builder.",
        "* Gets the value of the 'CreatedById' field.\n         * CreatedBy:EntityId\n         *\n         * @return The value.",
        "* Sets the value of the 'CreatedById' field.\n         * CreatedBy:EntityId\n         *\n         * @param  value The value of 'CreatedById'.\n         * @return       This builder.",
        "* Checks whether the 'CreatedById' field has been set.\n         * CreatedBy:EntityId\n         *\n         * @return True if the 'CreatedById' field has been set, false otherwise.",
        "* Clears the value of the 'CreatedById' field.\n         * CreatedBy:EntityId\n         *\n         * @return This builder.",
        "* Gets the value of the 'Test_Field__c' field.\n         * Data:Text\n         *\n         * @return The value.",
        "* Sets the value of the 'Test_Field__c' field.\n         * Data:Text\n         *\n         * @param  value The value of 'Test_Field__c'.\n         * @return       This builder.",
        "* Checks whether the 'Test_Field__c' field has been set.\n         * Data:Text\n         *\n         * @return True if the 'Test_Field__c' field has been set, false otherwise.",
        "* Clears the value of the 'Test_Field__c' field.\n         * Data:Text\n         *\n         * @return This builder."
    ],
    "functions": [
        "getClassSchema",
        "getEncoder",
        "getDecoder",
        "createDecoder",
        "toByteBuffer",
        "TestEvent__e",
        "fromByteBuffer",
        "TestEvent__e",
        "TestEvent__e",
        "getSpecificData",
        "getSchema",
        "get",
        "put",
        "getCreatedDate",
        "setCreatedDate",
        "getCreatedById",
        "setCreatedById",
        "getTestFieldC",
        "setTestFieldC",
        "newBuilder",
        "newBuilder",
        "newBuilder",
        "Builder",
        "Builder",
        "Builder",
        "getCreatedDate",
        "setCreatedDate",
        "hasCreatedDate",
        "clearCreatedDate",
        "getCreatedById",
        "setCreatedById",
        "hasCreatedById",
        "clearCreatedById",
        "getTestFieldC",
        "setTestFieldC",
        "hasTestFieldC",
        "clearTestFieldC",
        "TestEvent__e",
        "build",
        "writeExternal",
        "readExternal",
        "hasCustomCoders",
        "customEncode",
        "customDecode"
    ],
    "classes": [
        "TestEvent__e",
        "Builder"
    ]
}