{
    "identifiers": [
        "typing",
        "Callable",
        "Generic",
        "TypeVar",
        "TypeVar",
        "callable",
        "Callable",
        "Callable",
        "T",
        "T",
        "T",
        "T",
        "callable",
        "x",
        "x",
        "func1",
        "a",
        "a",
        "reveal_type",
        "v1",
        "expected_text",
        "func1",
        "a",
        "a",
        "reveal_type",
        "v2",
        "expected_text",
        "untyped",
        "func1",
        "a",
        "a",
        "untyped",
        "reveal_type",
        "v1",
        "expected_text",
        "Generic",
        "T",
        "value",
        "T",
        "value",
        "callable",
        "Callable",
        "A",
        "T",
        "A",
        "T",
        "T",
        "callable",
        "A",
        "value",
        "func2",
        "A",
        "A",
        "reveal_type",
        "v3",
        "expected_text",
        "func2",
        "A",
        "A",
        "reveal_type",
        "v4",
        "expected_text",
        "untyped",
        "func2",
        "A",
        "A",
        "untyped",
        "reveal_type",
        "v1",
        "expected_text"
    ],
    "literals": [
        "\"T\"",
        "\"int\"",
        "\"\"",
        "\"str\"",
        "\"Unknown\"",
        "\"int\"",
        "\"\"",
        "\"str\"",
        "\"Unknown\""
    ],
    "variables": [
        "T",
        "v1",
        "v2",
        "v1",
        "value",
        "v3",
        "v4",
        "v1"
    ],
    "comments": [
        "This sample tests the case where a lambda's expected type is a callable",
        "that accepts another generic callable as a parameter."
    ],
    "docstrings": [],
    "functions": [
        "func1",
        "test1",
        "func2",
        "test2"
    ],
    "classes": [
        "A"
    ]
}