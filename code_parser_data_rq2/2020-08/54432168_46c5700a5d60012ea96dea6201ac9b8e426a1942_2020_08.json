{
    "identifiers": [
        "transformCommentsToDescriptions",
        "parseGraphQLSDL",
        "Kind",
        "ObjectTypeDefinitionNode",
        "describe",
        "describe",
        "it",
        "expect",
        "parseGraphQLSDL",
        "doc",
        "Kind",
        "describe",
        "it",
        "transformCommentsToDescriptions",
        "ast",
        "transformed",
        "expect",
        "printed",
        "it",
        "parseGraphQLSDL",
        "ast",
        "transformed",
        "d",
        "d",
        "expect",
        "expect",
        "transformed",
        "expect",
        "printed"
    ],
    "literals": [
        "\"../src/parse-graphql-sdl\"",
        "'graphql'",
        "'parse sdl'",
        "'parseGraphQLSDL'",
        "'Should work correctly with empty document (everything is commented out)'",
        "#query test {\n        #  id\n        #}",
        "'a.graphql'",
        "'comment parsing'",
        "# test type comment\n      type Type {\n        # test field comment\n        f1: String!\n        # Line 1\n        #Line 2\n        f2: String!\n        # Line 1\n        \"line 2\"\n        f3: String!\n      }\n\n      # test extension\n      extend type Type {\n        # test extension field comment\n        f4: String!\n      }\n\n      type OtherType implements Node {\n        id: ID!\n        f: String!\n      }\n\n      # input test\n      input Input {\n        # Input field test\n        f: String\n      }\n\n      # Enum test\n      enum Enum {\n        # Enum value test\n        V1\n        V2\n      }\n\n      # Union test\n      union Union = Type | OtherType\n\n      # Inferface test\n      interface Node {\n        id: ID!\n      }\n\n      # Custom scalar test\n      scalar Date",
        "'should transform comments to descriptions correctly on all available nodes'",
        "'should transform comments to descriptions correctly on all available nodes with noLocation=true'",
        "'test.graphql'",
        "'Type'",
        "'test type comment'"
    ],
    "variables": [
        "doc",
        "ast",
        "transformed",
        "printed",
        "transformed",
        "printed"
    ],
    "comments": [
        "GraphQL",
        "GraphQL"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}