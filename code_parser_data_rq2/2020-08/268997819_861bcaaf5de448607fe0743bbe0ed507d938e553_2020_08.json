{
    "identifiers": [
        "concurrent",
        "futures",
        "logging",
        "os",
        "os",
        "path",
        "typing",
        "Dict",
        "shutil",
        "requests",
        "typeguard",
        "typechecked",
        "pyconfigurableml",
        "_core",
        "run_with_specified_config",
        "logging",
        "getLogger",
        "typechecked",
        "url",
        "path",
        "requests",
        "get",
        "url",
        "stream",
        "req",
        "open",
        "path",
        "file",
        "shutil",
        "copyfileobj",
        "req",
        "raw",
        "file",
        "log",
        "error",
        "url",
        "path",
        "os",
        "remove",
        "path",
        "OSError",
        "typechecked",
        "url",
        "path",
        "os",
        "path",
        "isfile",
        "path",
        "log",
        "warning",
        "url",
        "path",
        "download_url_to_file",
        "url",
        "path",
        "typechecked",
        "path_to_url",
        "Dict",
        "concurrent",
        "futures",
        "ThreadPoolExecutor",
        "max_workers",
        "executor",
        "key",
        "value",
        "path_to_url",
        "items",
        "futures",
        "append",
        "executor",
        "submit",
        "download_url_to_file_if_not_exists",
        "url",
        "value",
        "path",
        "key",
        "concurrent",
        "futures",
        "as_completed",
        "futures",
        "run_with_specified_config",
        "typechecked",
        "config",
        "inner_config",
        "Dict",
        "download_urls_to_files_if_not_exist",
        "inner_config",
        "config"
    ],
    "literals": [
        "'wb'",
        "f'Could not download {url} to {path}'",
        "f'Downloading {url} to {path}'"
    ],
    "variables": [
        "log",
        "futures"
    ],
    "comments": [
        "Attempt to clean up:",
        "https://stackoverflow.com/a/10840586",
        "noqa: E722"
    ],
    "docstrings": [
        "'''\nUtilities around configuring and downloading local files.\n'''",
        "'''\n    Efficient code for downloading a URL to a file. Will attempt to clean up\n    (delete the file) if downloading fails.\n    https://stackoverflow.com/a/39217788\n    '''",
        "'''\n    Download url to path only if the file at path doesn't already exist.\n    '''",
        "'''\n    Ensure that all paths in the mapping path -> URL exist, downloading them\n    in parallel (max 5 threads) if necessary.\n\n    Follows:\n    https://www.digitalocean.com/community/tutorials/how-to-use-threadpoolexecutor-in-python-3\n    '''",
        "'''\n    Ensure that the files configured by inner_config exist. Does not modify the\n    configuration itself.\n    '''"
    ],
    "functions": [
        "download_url_to_file",
        "download_url_to_file_if_not_exists",
        "download_urls_to_files_if_not_exist",
        "ensure_files_exist"
    ],
    "classes": []
}