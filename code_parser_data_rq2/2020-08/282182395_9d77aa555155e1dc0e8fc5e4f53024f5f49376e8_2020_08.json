{
    "identifiers": [],
    "literals": [
        "'game-page'",
        "'score-page'",
        "'splash-page'",
        "'countdown-page'",
        "'start-form'",
        "'.radio-container'",
        "'input'",
        "'.best-score-value'",
        "'.countdown'",
        "'.item-container'",
        "'.final-time'",
        "'.base-time'",
        "'.penalty-time'",
        "'.play-again'"
    ],
    "variables": [
        "gamePage",
        "scorePage",
        "splashPage",
        "countdownPage",
        "startForm",
        "radioContainers",
        "radioInputs",
        "bestScores",
        "countdown",
        "itemContainer",
        "finalTimeEl",
        "baseTimeEl",
        "penaltyTimeEl",
        "playAgainBtn",
        "equationsArray",
        "firstNumber",
        "secondNumber",
        "equationObject",
        "wrongFormat"
    ],
    "comments": [
        "Pages",
        "Splash Page",
        "Countdown Page",
        "Game Page",
        "Score Page",
        "Equations",
        "Game Page",
        "Time",
        "Scroll",
        "Create Correct/Incorrect Random Equations",
        "Randomly choose how many correct equations there should be",
        "const correctEquations =",
        "Set amount of wrong equations",
        "const wrongEquations =",
        "Loop through, multiply random numbers up to 9, push to array",
        "for (let i = 0; i < correctEquations; i++) {",
        "firstNumber =",
        "secondNumber =",
        "const equationValue = firstNumber * secondNumber;",
        "const equation = `${firstNumber} x ${secondNumber} = ${equationValue}`;",
        "equationObject = { value: equation, evaluated: 'true' };",
        "equationsArray.push(equationObject);",
        "}",
        "Loop through, mess with the equation results, push to array",
        "for (let i = 0; i < wrongEquations; i++) {",
        "firstNumber =",
        "secondNumber =",
        "const equationValue = firstNumber * secondNumber;",
        "wrongFormat[0] = `${firstNumber} x ${secondNumber + 1} = ${equationValue}`;",
        "wrongFormat[1] = `${firstNumber} x ${secondNumber} = ${equationValue - 1}`;",
        "wrongFormat[2] = `${firstNumber + 1} x ${secondNumber} = ${equationValue}`;",
        "const formatChoice =",
        "const equation = wrongFormat[formatChoice];",
        "equationObject = { value: equation, evaluated: 'false' };",
        "equationsArray.push(equationObject);",
        "}",
        "Dynamically adding correct/incorrect equations",
        "function populateGamePage() {",
        "// Reset DOM, Set Blank Space Above",
        "itemContainer.textContent = '';",
        "// Spacer",
        "const topSpacer = document.createElement('div');",
        "topSpacer.classList.add('height-240');",
        "// Selected Item",
        "const selectedItem = document.createElement('div');",
        "selectedItem.classList.add('selected-item');",
        "// Append",
        "itemContainer.append(topSpacer, selectedItem);",
        "// Create Equations, Build Elements in DOM",
        "// Set Blank Space Below",
        "const bottomSpacer = document.createElement('div');",
        "bottomSpacer.classList.add('height-500');",
        "itemContainer.appendChild(bottomSpacer);",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "createEquations"
    ],
    "classes": []
}