{
    "identifiers": [
        "jwt",
        "httpMocks",
        "getRepository",
        "AUTH_COOKIE_NAME",
        "User",
        "createUser",
        "authenticateRequest",
        "generateAuthToken",
        "hashPassword",
        "describe",
        "describe",
        "createRequestWithAuthCookie",
        "token",
        "httpMocks",
        "AUTH_COOKIE_NAME",
        "token",
        "it",
        "createUser",
        "createRequestWithAuthCookie",
        "generateAuthToken",
        "user",
        "authenticateRequest",
        "req",
        "expect",
        "authUser",
        "it",
        "createRequestWithAuthCookie",
        "expect",
        "authenticateRequest",
        "req",
        "it",
        "createUser",
        "createRequestWithAuthCookie",
        "jwt",
        "user",
        "expect",
        "authenticateRequest",
        "req",
        "it",
        "createUser",
        "createRequestWithAuthCookie",
        "generateAuthToken",
        "user",
        "getRepository",
        "User",
        "user",
        "expect",
        "authenticateRequest",
        "req",
        "it",
        "email",
        "password",
        "newEmail",
        "newPassword",
        "createUser",
        "createRequestWithAuthCookie",
        "generateAuthToken",
        "user",
        "user",
        "newEmail",
        "user",
        "hashPassword",
        "newPassword",
        "getRepository",
        "User",
        "user",
        "expect",
        "authenticateRequest",
        "req",
        "describe",
        "it",
        "createUser",
        "httpMocks",
        "authenticateRequest",
        "req",
        "expect",
        "authUser"
    ],
    "literals": [
        "\"jsonwebtoken\"",
        "\"node-mocks-http\"",
        "\"typeorm\"",
        "\"../config\"",
        "\"../database/entity\"",
        "\"../testUtils/factories\"",
        "\"./authentication\"",
        "\"./passwords\"",
        "\".authenticateRequest\"",
        "\"when the auth cookie is set\"",
        "string",
        "\"returns the current user when the token is valid\"",
        "\"raises an error when the token is invalid\"",
        "\"invalid access token\"",
        "\"Invalid token payload\"",
        "\"raises an error when the token has an invalid signature\"",
        "\"invalid access token secret\"",
        "\"invalid signature\"",
        "\"raises an error when a user cannot be found\"",
        "\"test@email.com\"",
        "\"password\"",
        "\"new@email.com\"",
        "\"password\"",
        "\"test@email.com\"",
        "\"password\"",
        "\"test@email.com\"",
        "\"new password\"",
        "\"raises an error when a user has changed email or password\"",
        "\"invalid signature\"",
        "\"when the auth cookie is not set\"",
        "\"returns undefined\""
    ],
    "variables": [
        "createRequestWithAuthCookie",
        "user",
        "req",
        "authUser",
        "req",
        "user",
        "req",
        "user",
        "req",
        "user",
        "req",
        "req",
        "authUser"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}