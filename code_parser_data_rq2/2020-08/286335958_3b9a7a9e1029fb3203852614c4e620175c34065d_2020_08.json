{
    "identifiers": [
        "Event",
        "Uri",
        "RefType",
        "Status",
        "key",
        "key",
        "value",
        "key",
        "treeish",
        "path",
        "path",
        "path",
        "paths",
        "patch",
        "reverse",
        "cached",
        "path",
        "path",
        "path",
        "path",
        "object1",
        "object2",
        "ref1",
        "ref2",
        "ref1",
        "ref2",
        "path",
        "data",
        "name",
        "checkout",
        "name",
        "force",
        "name",
        "name",
        "upstream",
        "ref1",
        "ref2",
        "treeish",
        "name",
        "url",
        "name",
        "remote",
        "depth",
        "unshallow",
        "remoteName",
        "branchName",
        "setUpstream",
        "path",
        "options",
        "version",
        "GitErrorCodes"
    ],
    "literals": [
        "'vscode'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'BadConfigFile'",
        "'AuthenticationFailed'",
        "'NoUserNameConfigured'",
        "'NoUserEmailConfigured'",
        "'NoRemoteRepositorySpecified'",
        "'NotAGitRepository'",
        "'NotAtRepositoryRoot'",
        "'Conflict'",
        "'StashConflict'",
        "'UnmergedChanges'",
        "'PushRejected'",
        "'RemoteConnectionError'",
        "'DirtyWorkTree'",
        "'CantOpenResource'",
        "'GitNotFound'",
        "'CantCreatePipe'",
        "'CantAccessRemote'",
        "'RepositoryNotFound'",
        "'RepositoryIsLocked'",
        "'BranchNotFullyMerged'",
        "'NoRemoteReference'",
        "'InvalidBranchName'",
        "'BranchAlreadyExists'",
        "'NoLocalChanges'",
        "'NoStashFound'",
        "'LocalChangesOverwritten'",
        "'NoUpstreamBranch'",
        "'IsInSubmodule'",
        "'WrongCase'",
        "'CantLockRef'",
        "'CantRebaseMultipleBranches'",
        "'PatchDoesNotApply'",
        "'NoPathFound'"
    ],
    "variables": [],
    "comments": [
        "---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------",
        "Max number of log entries to retrieve. If not specified, the default is 32."
    ],
    "docstrings": [
        "* Returns either `originalUri` or `renameUri`, depending\n\t * on whether this change is a rename change. When\n\t * in doubt always use `uri` over the other two alternatives.",
        "* Log options.",
        "* Returns a specific API version.\n\t *\n\t * Throws error if git extension is disabled. You can listed to the\n\t * [GitExtension.onDidChangeEnablement](#GitExtension.onDidChangeEnablement) event\n\t * to know when the extension becomes enabled/disabled.\n\t *\n\t * @param version Version number.\n\t * @returns API instance"
    ],
    "functions": [],
    "classes": []
}