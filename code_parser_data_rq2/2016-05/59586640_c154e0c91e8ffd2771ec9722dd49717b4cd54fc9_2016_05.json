{
    "identifiers": [
        "NUnit",
        "Framework",
        "Spectra",
        "Test",
        "TestFixture",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsTrue",
        "a",
        "IsSubRange",
        "b",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsFalse",
        "b",
        "IsSubRange",
        "a",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsFalse",
        "range1",
        "IsOverlapping",
        "range2",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsFalse",
        "range2",
        "IsOverlapping",
        "range1",
        "Test",
        "Range",
        "Assert",
        "IsFalse",
        "range1",
        "IsOverlapping",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsTrue",
        "range1",
        "IsOverlapping",
        "range2",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsTrue",
        "range2",
        "IsOverlapping",
        "range1",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsTrue",
        "range1",
        "IsOverlapping",
        "range2",
        "Test",
        "Range",
        "Range",
        "Assert",
        "IsTrue",
        "range2",
        "IsOverlapping",
        "range1",
        "Test",
        "Range",
        "Assert",
        "IsTrue",
        "range1",
        "IsOverlapping",
        "range1",
        "Test",
        "Range",
        "Assert",
        "IsTrue",
        "range1",
        "Contains",
        "Test",
        "Range",
        "Assert",
        "IsFalse",
        "range1",
        "Contains",
        "Test",
        "Range",
        "Assert",
        "IsFalse",
        "range1",
        "Contains",
        "Test",
        "Range",
        "Assert",
        "IsTrue",
        "range1",
        "Contains",
        "Test",
        "Range",
        "Assert",
        "IsTrue",
        "range1",
        "Contains",
        "Test",
        "Range",
        "CompareTo",
        "value",
        "Assert",
        "AreEqual",
        "comp",
        "Test",
        "Range",
        "CompareTo",
        "value",
        "Assert",
        "AreEqual",
        "comp",
        "Test",
        "Range",
        "CompareTo",
        "value",
        "Assert",
        "AreEqual",
        "comp",
        "Test",
        "Range",
        "Range",
        "Assert",
        "AreEqual",
        "range1",
        "range2",
        "Test",
        "Range",
        "Range",
        "Assert",
        "AreNotSame",
        "range1",
        "range2",
        "Test",
        "Assert",
        "Throws",
        "ArgumentException",
        "_ignore",
        "Range",
        "Test",
        "DoubleRange",
        "Tolerance",
        "ToleranceUnit",
        "DA",
        "Assert",
        "AreEqual",
        "range1",
        "Width",
        "Test",
        "DoubleRange",
        "Tolerance",
        "ToleranceUnit",
        "DA",
        "Assert",
        "AreEqual",
        "range1",
        "Mean",
        "Test",
        "DoubleRange",
        "Tolerance",
        "ToleranceUnit",
        "DA",
        "Assert",
        "AreEqual",
        "range1",
        "Minimum",
        "Test",
        "DoubleRange",
        "Tolerance",
        "ToleranceUnit",
        "DA",
        "Assert",
        "AreEqual",
        "range1",
        "Maximum",
        "Test",
        "DoubleRange",
        "Assert",
        "AreEqual",
        "range1",
        "Mean",
        "Test",
        "DoubleRange",
        "Assert",
        "AreEqual",
        "range1",
        "Width",
        "Test",
        "DoubleRange",
        "Assert",
        "AreEqual",
        "range1",
        "Minimum",
        "Test",
        "DoubleRange",
        "Assert",
        "AreEqual",
        "range1",
        "Maximum",
        "Test",
        "DoubleRange",
        "Tolerance",
        "ToleranceUnit",
        "DA",
        "DoubleRange",
        "Tolerance",
        "ToleranceUnit",
        "DA",
        "Assert",
        "AreEqual",
        "range1",
        "range2"
    ],
    "literals": [],
    "variables": [
        "_ignore",
        "a",
        "b",
        "a",
        "b",
        "range1",
        "range2",
        "range1",
        "range2",
        "range1",
        "range1",
        "range2",
        "range1",
        "range2",
        "range1",
        "range2",
        "range1",
        "range2",
        "range1",
        "range1",
        "range1",
        "range1",
        "range1",
        "range1",
        "value",
        "comp",
        "value",
        "comp",
        "value",
        "comp",
        "range1",
        "range2",
        "range1",
        "range2",
        "range1",
        "range1",
        "range1",
        "range1",
        "range1",
        "range1",
        "range1",
        "range1",
        "range1",
        "range2"
    ],
    "comments": [
        "Copyright 2012, 2013, 2014 Derek J. Bailey",
        "",
        "This file (RangeTestFixture.cs) is part of CSMSL.Tests.",
        "",
        "CSMSL.Tests is free software: you can redistribute it and/or modify it",
        "under the terms of the GNU Lesser General Public License as published",
        "by the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "CSMSL.Tests is distributed in the hope that it will be useful, but WITHOUT",
        "ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or",
        "FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public",
        "License for more details.",
        "",
        "You should have received a copy of the GNU Lesser General Public",
        "License along with CSMSL.Tests. If not, see <http://www.gnu.org/licenses/>.",
        "ReSharper disable NotAccessedField.Local",
        "ReSharper restore NotAccessedField.Local"
    ],
    "docstrings": [],
    "functions": [
        "RangeSubRange",
        "RangeSubRangeReverseIsFalse",
        "RangeOverlappingIsFalse",
        "RangeOverlappingIsFalseReverse",
        "RangeOverlappingIsFalseWhenNull",
        "RangeOverlappingIsTrue",
        "RangeOverlappingIsTrueReverse",
        "RangeOverlappingIsTrueLarger",
        "RangeOverlappingIsTrueSmaller",
        "RangeOverlappingIsTrueItSelf",
        "RangeDoesContainItem",
        "RangeDoesnotContainItemHigher",
        "RangeDoesnotContainItemLower",
        "RangeDoesContainItemLowerBounds",
        "RangeDoesContainItemUpperBounds",
        "RangeCompareToBelow",
        "RangeCompareToWithin",
        "RangeCompareToAbove",
        "RangesAreEquivalent",
        "RangesAreEquivalentNotReference",
        "RangeMinBiggerThanMax",
        "MassRangeFromDAWidth",
        "MassRangeFromDAMean",
        "MassRangeFromDAMin",
        "MassRangeFromDAMax",
        "MassRangeFromDANullMean",
        "MassRangeFromDANullWidth",
        "MassRangeFromDANullMin",
        "MassRangeFromDANullMax",
        "MassRangeFromDANegative"
    ],
    "classes": [
        "RangeTest"
    ]
}