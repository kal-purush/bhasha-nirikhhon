{
    "identifiers": [
        "distutils",
        "filecmp",
        "getpass",
        "shutil",
        "subprocess",
        "pwd",
        "grp",
        "setuptools",
        "setup",
        "find_packages",
        "pip",
        "req",
        "parse_requirements",
        "distutils",
        "util",
        "convert_path",
        "fnmatch",
        "fnmatchcase",
        "os",
        "sys",
        "uuid",
        "format",
        "ARCHIVER_TEMPLATE_FILENAME",
        "setuptools",
        "command",
        "install",
        "install",
        "AUTHOR",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "join",
        "__dir__",
        "target",
        "os",
        "path",
        "exists",
        "readme_path",
        "os",
        "path",
        "join",
        "__dir__",
        "target",
        "os",
        "path",
        "join",
        "__dir__",
        "os",
        "path",
        "join",
        "__dir__",
        "os",
        "path",
        "join",
        "__dir__",
        "ir",
        "hasattr",
        "ir",
        "ir",
        "url",
        "ir",
        "link",
        "ir",
        "link",
        "url",
        "where",
        "exclude",
        "standard_exclude",
        "exclude_directories",
        "standard_exclude_directories",
        "only_in_packages",
        "show_ignored",
        "convert_path",
        "where",
        "only_in_packages",
        "stack",
        "stack",
        "pop",
        "name",
        "os",
        "listdir",
        "where",
        "os",
        "path",
        "join",
        "where",
        "name",
        "os",
        "path",
        "isdir",
        "fn",
        "pattern",
        "exclude_directories",
        "fnmatchcase",
        "name",
        "pattern",
        "fn",
        "lower",
        "pattern",
        "lower",
        "show_ignored",
        "sys",
        "stderr",
        "write",
        "fn",
        "pattern",
        "bad_name",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "fn",
        "name",
        "name",
        "stack",
        "append",
        "fn",
        "new_package",
        "stack",
        "append",
        "fn",
        "prefix",
        "name",
        "only_in_packages",
        "only_in_packages",
        "pattern",
        "exclude",
        "fnmatchcase",
        "name",
        "pattern",
        "fn",
        "lower",
        "pattern",
        "lower",
        "show_ignored",
        "sys",
        "stderr",
        "write",
        "fn",
        "pattern",
        "bad_name",
        "setdefault",
        "append",
        "prefix",
        "name",
        "os",
        "path",
        "exists",
        "requirements_path",
        "parse_requirements",
        "requirements_path",
        "session",
        "uuid",
        "uuid1",
        "ir",
        "req",
        "ir",
        "requirements",
        "get_url",
        "ir",
        "ir",
        "requirements",
        "get_url",
        "ir",
        "INSTALL_REQUIRES",
        "find_packages",
        "__dir__",
        "packages",
        "os",
        "path",
        "join",
        "__dir__",
        "replace",
        "os",
        "path",
        "exists",
        "path",
        "os",
        "path",
        "islink",
        "path",
        "packages",
        "remove",
        "ROOT_INCLUDE",
        "x",
        "x",
        "packages",
        "modules",
        "package_data",
        "update",
        "find_package_data",
        "only_in_packages",
        "open",
        "readme_path",
        "read",
        "IOError",
        "os",
        "path",
        "exists",
        "version_path",
        "open",
        "version_path",
        "read",
        "replace",
        "__import__",
        "modules",
        "__version__",
        "os",
        "path",
        "exists",
        "scripts_path",
        "scripts_path",
        "replace",
        "__dir__",
        "scripts_dir_name",
        "scripts_dir_name",
        "startswith",
        "os",
        "sep",
        "scripts_dir_name",
        "os",
        "path",
        "join",
        "scripts_dir_name",
        "file",
        "file",
        "os",
        "listdir",
        "scripts_path",
        "d",
        "ROOT_INCLUDE",
        "os",
        "path",
        "exists",
        "os",
        "path",
        "join",
        "__dir__",
        "d",
        "ROOT_INCLUDE",
        "remove",
        "d",
        "STATUS_LEVEL",
        "key",
        "parts",
        "platforms_classifiers",
        "items",
        "key",
        "PLATFORMS",
        "CLASSIFIERS",
        "append",
        "format",
        "join",
        "parts",
        "x",
        "y",
        "jump",
        "x",
        "y",
        "x",
        "x",
        "jump",
        "version",
        "PYTHON_VERSIONS",
        "version",
        "version",
        "split",
        "len",
        "version",
        "ValueError",
        "format",
        "join",
        "version",
        "version",
        "version",
        "python_versions",
        "extend",
        "frange",
        "version",
        "version",
        "isinstance",
        "version",
        "version",
        "isdigit",
        "python_versions",
        "append",
        "version",
        "python_versions",
        "append",
        "version",
        "x",
        "x",
        "isinstance",
        "x",
        "x",
        "python_versions",
        "frange",
        "frange",
        "x",
        "x",
        "remove_python_versions",
        "python_versions",
        "version",
        "len",
        "x",
        "x",
        "version",
        "python_versions",
        "python_versions",
        "append",
        "version",
        "CLASSIFIERS",
        "extend",
        "version",
        "version",
        "python_versions",
        "CLASSIFIERS",
        "extend",
        "format",
        "NATURAL_LANGUAGE",
        "format",
        "STATUS_LEVEL",
        "status_name",
        "file",
        "os",
        "path",
        "lexists",
        "file",
        "file",
        "os",
        "path",
        "lexists",
        "backup_file",
        "format",
        "backup_file",
        "i",
        "os",
        "path",
        "lexists",
        "new_backup_file",
        "new_backup_file",
        "i",
        "shutil",
        "move",
        "file",
        "backup_file",
        "install",
        "do_egg_install",
        "getpass",
        "getuser",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "src",
        "dest",
        "SERVICES",
        "os",
        "path",
        "exists",
        "dest",
        "filecmp",
        "cmp",
        "os",
        "path",
        "join",
        "dir_path",
        "src",
        "dest",
        "create_backup",
        "dest",
        "shutil",
        "copy",
        "os",
        "path",
        "join",
        "dir_path",
        "src",
        "dest",
        "os",
        "makedirs",
        "os",
        "path",
        "dirname",
        "ARCHIVER_FILE",
        "exist_ok",
        "os",
        "path",
        "lexists",
        "ARCHIVER_FILE",
        "shutil",
        "copy",
        "os",
        "path",
        "join",
        "dir_path",
        "ARCHIVER_TEMPLATE_FILENAME",
        "ARCHIVER_FILE",
        "setup",
        "cmdclass",
        "SystemInstallCommand",
        "name",
        "PACKAGE_NAME",
        "version",
        "package_version",
        "description",
        "DESCRIPTION",
        "long_description",
        "long_description",
        "author",
        "AUTHOR",
        "author_email",
        "EMAIL",
        "url",
        "URL",
        "license",
        "LICENSE",
        "classifiers",
        "CLASSIFIERS",
        "platforms",
        "PLATFORMS",
        "provides",
        "modules",
        "install_requires",
        "install_requires",
        "dependency_links",
        "dependency_links",
        "packages",
        "packages",
        "include_package_data",
        "package_data",
        "package_data",
        "download_url",
        "PACKAGE_DOWNLOAD_URL",
        "keywords",
        "KEYWORDS",
        "scripts",
        "scripts",
        "zip_safe"
    ],
    "literals": [
        "'archiver-template.json'",
        "'/etc/auto-archive-files/{}'",
        "'services/archiver.service'",
        "'/usr/lib/systemd/system/archiver.service'",
        "'services/archiver-template.timer'",
        "'/usr/lib/systemd/system/archiver-template.timer'",
        "'Nekmo'",
        "'contacto@nekmo.com'",
        "'auto-archive-files'",
        "'https://github.com/Nekmo/auto-archive-files/archive/master.zip'",
        "'https://github.com/Nekmo/auto-archive-files'",
        "'linux'",
        "'unix'",
        "'monitor'",
        "'alert'",
        "'auto-archive-files'",
        "'move'",
        "'files'",
        "'archiver'",
        "'MIT'",
        "'License :: OSI Approved :: MIT License'",
        "'Topic :: System :: Networking :: Monitoring'",
        "'Topic :: System :: Networking :: Monitoring :: Hardware Watchdog'",
        "'Topic :: System :: Monitoring'",
        "'Operating System :: POSIX :: Linux'",
        "'Operating System :: POSIX :: BSD'",
        "'Operating System :: POSIX'",
        "'English'",
        "'linux'",
        "'requirements.txt'",
        "'VERSION'",
        "'LICENSE.txt'",
        "'2.7'",
        "'3.3-3.5'",
        "'README'",
        "'README.rst'",
        "'README.md'",
        "'VERSION'",
        "'requirements.txt'",
        "'scripts'",
        "'url'",
        "'*.py'",
        "'*.pyc'",
        "'*~'",
        "'.*'",
        "'*.bak'",
        "'*.swp*'",
        "'.*'",
        "'CVS'",
        "'_darcs'",
        "'./build'",
        "'./dist'",
        "'EGG-INFO'",
        "'*.egg-info'",
        "'.'",
        "''",
        "''",
        "\"Directory %s ignored by pattern %s\\n\"",
        "'__init__.py'",
        "'.'",
        "''",
        "'/'",
        "\"File %s ignored by pattern %s\\n\"",
        "'.'",
        "'/'",
        "''",
        "'.'",
        "'rt'",
        "''",
        "'\\n'",
        "''",
        "''",
        "'Planning'",
        "'Pre-Alpha'",
        "'Alpha'",
        "'Beta'",
        "'Production/Stable'",
        "'Mature'",
        "'Inactive'",
        "'linux'",
        "'POSIX'",
        "'Linux'",
        "'win'",
        "'Microsoft'",
        "'Windows'",
        "'solaris'",
        "'POSIX'",
        "'SunOS/Solaris'",
        "'aix'",
        "'POSIX'",
        "'Linux'",
        "'unix'",
        "'Unix'",
        "'bsd'",
        "'POSIX'",
        "'BSD'",
        "'Operating System :: {0}'",
        "' :: '",
        "'-'",
        "'-'",
        "'Invalid Python version range: {0}'",
        "'-'",
        "'%.1f'",
        "'%i :: Only'",
        "'Programming Language :: Python :: %s'",
        "'Natural Language :: {0}'",
        "'Development Status :: {0} - {1}'",
        "'.bak'",
        "'{}{}'",
        "'Starting Python module installation.'",
        "'-'",
        "'root'",
        "'WARNING: Auto-Archive-Files installed as \"{}\". Install as root to create the system files!'",
        "'Copying services'",
        "'Copying archiver template file'",
        "'install'"
    ],
    "variables": [
        "ARCHIVER_TEMPLATE_FILENAME",
        "ARCHIVER_FILE",
        "SERVICES",
        "AUTHOR",
        "EMAIL",
        "PACKAGE_NAME",
        "PACKAGE_DOWNLOAD_URL",
        "URL",
        "STATUS_LEVEL",
        "KEYWORDS",
        "LICENSE",
        "CLASSIFIERS",
        "NATURAL_LANGUAGE",
        "DESCRIPTION",
        "PLATFORMS",
        "ROOT_INCLUDE",
        "PYTHON_VERSIONS",
        "INSTALL_REQUIRES",
        "__author__",
        "__dir__",
        "readme_path",
        "readme_path",
        "version_path",
        "requirements_path",
        "scripts_path",
        "standard_exclude",
        "standard_exclude_directories",
        "stack",
        "where",
        "prefix",
        "only_in_packages",
        "fn",
        "bad_name",
        "bad_name",
        "new_package",
        "new_package",
        "bad_name",
        "bad_name",
        "requirements",
        "install_requires",
        "dependency_links",
        "install_requires",
        "dependency_links",
        "packages",
        "path",
        "package_data",
        "modules",
        "long_description",
        "long_description",
        "package_version",
        "package_version",
        "scripts_dir_name",
        "scripts_dir_name",
        "scripts",
        "scripts",
        "status_name",
        "platforms_classifiers",
        "python_versions",
        "version",
        "version",
        "python_versions",
        "remove_python_versions",
        "python_versions",
        "backup_file",
        "i",
        "new_backup_file",
        "backup_file",
        "dir_path"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "",
        "Configuración del paquete  #",
        "",
        "Instrucciones:",
        "1. Rellene la información de esta sección.",
        "2. Incluya un archivo requirements.txt con las dependencias.",
        "3. Cambie el archivo LICENSE.txt por el de su licencia.",
        "4. Añada un archivo README, README.rst o README.md, el cual se trata de la la descripción extendida.",
        "Información del autor",
        "Información del paquete",
        ".tar.gz",
        "Project url",
        "1:Planning 2:Pre-Alpha 3:Alpha 4:Beta 5:Production/Stable 6:Mature 7:Inactive",
        "https://github.com/github/choosealicense.com/tree/gh-pages/_licenses",
        "Common licenses",
        "'License :: OSI Approved :: GNU General Public License v3 (GPLv3)',",
        "'License :: OSI Approved :: BSD License',",
        "https://pypi.python.org/pypi?%3Aaction=list_classifiers",
        "English...",
        "Requerido para la correcta instalación del paquete",
        "'universal',",
        "'macosx',",
        "'solaris',",
        "'irix',",
        "'win'",
        "'bsd'",
        "'ios'",
        "'android'",
        "or ranges: 3.1-3.5, 2.6-3.4...",
        "Necesario si no hay un requirements.txt",
        "FIN DE LA CONFIGURACIÓN DEL PAQUTE ########",
        "paths",
        "",
        "find_package_data is an Ian Bicking creation.",
        "Provided as an attribute, so you can append to these instead",
        "of replicating them:",
        "is a file",
        "",
        "Lista de dependencias a instalar",
        "Todos los módulos y submódulos a instalar (module, module.submodule, module.submodule2...)",
        "Prevent include symbolic links",
        "Otros archivos que no son Python y que son requeridos",
        "Obtener la lista de módulos que se instalarán",
        "Descripción larga si existe un archivo README",
        "Tomar por defecto la versión de un archivo VERSION. Si no, del módulo",
        "Si hay un directorio scripts, tomar todos sus archivos",
        "Eliminar archivos de ROOT_INCLUDE que no existen",
        "Nombre del estado de desarrollo",
        "Añadir en los classifiers la plataforma",
        "Añadir la versión de Python a los Classifiers",
        "Para que frange incluya la última versión",
        "Eliminar versiones 0-2.3 y 2.8-2.9",
        "Sólo se encuentran versiones para la versión <version>",
        "Scan the input for package information",
        "to grab any data files (text, images, etc.)",
        "associated with sub-packages.",
        "entry_points={},"
    ],
    "docstrings": [
        "\"\"\"\\\nMove files that match conditions to another directory periodically.\n\"\"\"",
        "\"\"\"\n    Return a dictionary suitable for use in ``package_data``\n    in a distutils ``setup.py`` file.\n\n    The dictionary looks like::\n\n        {'package': [files]}\n\n    Where ``files`` is a list of all the files in that package that\n    don't match anything in ``exclude``.\n\n    If ``only_in_packages`` is true, then top-level directories that\n    are not packages won't be included (but directories under packages\n    will).\n\n    Directories matching any pattern in ``exclude_directories`` will\n    be ignored; by default directories with leading ``.``, ``CVS``,\n    and ``_darcs`` will be ignored.\n\n    If ``show_ignored`` is true, then all the files that aren't\n    included in package data are shown on stderr (for debugging\n    purposes).\n\n    Note patterns use wildcards, or can be exact paths (including\n    leading ``./``), and all searching is case-insensitive.\n\n    This function is by Ian Bicking.\n    \"\"\"",
        "\"\"\"Custom install setup to help run shell commands (outside shell) before installation\"\"\""
    ],
    "functions": [
        "get_url",
        "find_package_data",
        "frange",
        "create_backup",
        "run"
    ],
    "classes": [
        "SystemInstallCommand"
    ]
}