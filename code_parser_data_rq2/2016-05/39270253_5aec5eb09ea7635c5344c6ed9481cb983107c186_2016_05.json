{
    "identifiers": [
        "Linq",
        "Threading",
        "Tasks",
        "AllReady",
        "Areas",
        "Admin",
        "Models",
        "AllReady",
        "Models",
        "MediatR",
        "Microsoft",
        "Data",
        "Entity",
        "AllReady",
        "Areas",
        "Admin",
        "Features",
        "Events",
        "IAsyncRequestHandler",
        "DuplicateEventCommand",
        "AllReadyContext",
        "context",
        "_context",
        "context",
        "DuplicateEventCommand",
        "message",
        "GetEvent",
        "message",
        "FromEventId",
        "GetEvent",
        "message",
        "ToEventId",
        "fromEvent",
        "Tasks",
        "Any",
        "task",
        "fromEvent",
        "Tasks",
        "task",
        "Id",
        "task",
        "Event",
        "toEvent",
        "task",
        "StartDateTime",
        "HasValue",
        "task",
        "StartDateTime",
        "toEvent",
        "StartDateTime",
        "fromEvent",
        "StartDateTime",
        "task",
        "StartDateTime",
        "Value",
        "task",
        "EndDateTime",
        "HasValue",
        "task",
        "EndDateTime",
        "toEvent",
        "EndDateTime",
        "fromEvent",
        "EndDateTime",
        "task",
        "EndDateTime",
        "Value",
        "_context",
        "Tasks",
        "Add",
        "task",
        "_context",
        "SaveChangesAsync",
        "ConfigureAwait",
        "toEvent",
        "Id",
        "Event",
        "eventId",
        "_context",
        "Events",
        "Include",
        "a",
        "Tasks",
        "SingleOrDefaultAsync",
        "c",
        "Id",
        "eventId",
        "ConfigureAwait"
    ],
    "literals": [],
    "variables": [
        "AllReadyContext",
        "_context",
        "fromEvent",
        "toEvent"
    ],
    "comments": [
        "Todo: Check if this handles timezones correctly."
    ],
    "docstrings": [],
    "functions": [
        "DuplicateEventCommandHandler",
        "Handle",
        "GetEvent"
    ],
    "classes": [
        "DuplicateEventCommandHandler"
    ]
}