{
    "identifiers": [
        "java",
        "util",
        "Iterator",
        "java",
        "util",
        "NoSuchElementException",
        "head",
        "size",
        "Override",
        "size",
        "Override",
        "size",
        "Override",
        "e",
        "newNode",
        "e",
        "head",
        "head",
        "newNode",
        "probe",
        "head",
        "probe",
        "getNext",
        "probe",
        "probe",
        "getNext",
        "probe",
        "setNext",
        "newNode",
        "size",
        "Override",
        "head",
        "size",
        "Override",
        "index",
        "index",
        "size",
        "probe",
        "head",
        "i",
        "i",
        "index",
        "i",
        "probe",
        "probe",
        "getNext",
        "probe",
        "getData",
        "Override",
        "points",
        "points",
        "cursor",
        "check",
        "Override",
        "cursor",
        "size",
        "Override",
        "check",
        "hasNext",
        "get",
        "cursor",
        "Override",
        "check",
        "toRemove",
        "head",
        "i",
        "i",
        "cursor",
        "i",
        "toRemove",
        "toRemove",
        "getNext",
        "replace",
        "head",
        "i",
        "i",
        "cursor",
        "i",
        "replace",
        "replace",
        "getNext",
        "j",
        "cursor",
        "j",
        "size",
        "j",
        "replace",
        "replace",
        "getNext",
        "toRemove",
        "setNext",
        "replace",
        "size",
        "check",
        "head",
        "data",
        "next",
        "data",
        "data",
        "data",
        "data",
        "next",
        "data",
        "next",
        "next",
        "next",
        "next",
        "next",
        "next",
        "data"
    ],
    "literals": [],
    "variables": [
        "head",
        "size",
        "data",
        "next"
    ],
    "comments": [],
    "docstrings": [
        "* @author rkaul7, mclayton34\n * @version 0.1\n * @param <E> the type of object contained in this list",
        "* @return number of elements in this list",
        "* @return true if the list contains no elements",
        "* Appends the specified element at the end of the list.\n     *\n     * @param e element to be inserted\n     * @return true if the list has been modified, false otherwise",
        "* Removes all of the elements from this list\n     * The list will be empty after this call returns.",
        "* Returns the element at the specified position in this list.\n     *\n     * @param index of the element to return\n     * @return element at the specified position in the list",
        "****** Do not modify anything below this line! ********",
        "* For grading, returns the head\n     *\n     * @return the head of the list",
        "* @author mclayton34\n     * @version 0.1\n     * @param <E> the type of object contained in this node",
        "* Constructor for node, creates a node with data\n         * equal to parameter data\n         *\n         * @param data the data to exist in the node",
        "* @param data constructs a node with the reference\n         *             to the next node already included\n         * @param next the next node",
        "* @return the next node from this one",
        "* sets the next node for this node\n         *\n         * @param next the node to set as next",
        "* Gets the data for this node\n         *\n         * @return the data for this node"
    ],
    "functions": [
        "size",
        "isEmpty",
        "add",
        "clear",
        "E",
        "get",
        "iterator",
        "hasNext",
        "E",
        "next",
        "remove",
        "getHead",
        "Node",
        "Node",
        "getNext",
        "setNext",
        "T",
        "getData"
    ],
    "classes": [
        "MyLinkedList",
        "INeedPoints",
        "Node"
    ]
}