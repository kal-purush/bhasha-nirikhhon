{
    "identifiers": [
        "bot",
        "installer",
        "installer",
        "bot",
        "installer",
        "err",
        "convo",
        "err",
        "err",
        "convo",
        "convo",
        "process",
        "require",
        "config",
        "BotkitStorage",
        "process",
        "config",
        "process",
        "process",
        "process",
        "require",
        "process",
        "process",
        "process",
        "customIntegration",
        "token",
        "config",
        "onInstallation",
        "process",
        "process",
        "process",
        "require",
        "app",
        "process",
        "process",
        "process",
        "config",
        "onInstallation",
        "process",
        "controller",
        "bot",
        "controller",
        "bot",
        "controller",
        "bot",
        "message",
        "bot",
        "message",
        "controller",
        "bot",
        "message",
        "bot",
        "message"
    ],
    "literals": [
        "'I am a bot that has just joined your team'",
        "'You must now /invite me to a channel so that I can be of use!'",
        "'botkit-storage-mongo'",
        "'./db_slack_bot_ci/'",
        "'./db_slack_bot_a/'",
        "'./lib/custom_integrations'",
        "'./lib/apps'",
        "'Error: If this is a custom integration, please specify TOKEN in the environment. If this is an app, please specify CLIENTID, CLIENTSECRET, and PORT in the environment'",
        "'rtm_open'",
        "'** The RTM api just connected!'",
        "'rtm_close'",
        "'** The RTM api just closed'",
        "'bot_channel_join'",
        "\"I'm here!\"",
        "'hello'",
        "'direct_message'",
        "'Hello!'"
    ],
    "variables": [
        "config",
        "BotkitStorage",
        "customIntegration",
        "token",
        "controller",
        "app",
        "controller"
    ],
    "comments": [
        "use a different name if an app or CI",
        "Treat this as a custom integration",
        "Treat this as an app",
        "Handle events related to the websocket connection to Slack",
        "you may want to attempt to re-open",
        "BEGIN EDITING HERE!",
        "controller.on('direct_message,mention,direct_mention', function (bot, message) {",
        "bot.api.reactions.add({",
        "timestamp: message.ts,",
        "channel: message.channel,",
        "name: 'robot_face',",
        "}, function (err) {",
        "if (err) {",
        "console.log(err)",
        "}",
        "bot.reply(message, 'I heard you loud and clear boss.');",
        "});",
        "});"
    ],
    "docstrings": [
        "* A Bot for Slack!",
        "* Define a function for initiating a conversation on installation\n * With custom integrations, we don't have a way to find out who installed us, so we can't message them :(",
        "* Configure the persistence options",
        "* Are being run as an app or a custom integration? The initialization will differ, depending",
        "* A demonstration for how to handle websocket events. In this case, just log when we have and have not\n * been disconnected from the websocket. In the future, it would be super awesome to be able to specify\n * a reconnect policy, and do reconnections automatically. In the meantime, we aren't going to attempt reconnects,\n * WHICH IS A B0RKED WAY TO HANDLE BEING DISCONNECTED. So we need to fix this.\n *\n * TODO: fixed b0rked reconnect behavior",
        "* Core bot logic goes here!",
        "* AN example of what could be:\n * Any un-handled direct mention gets a reaction and a pat response!"
    ],
    "functions": [
        "onInstallation"
    ],
    "classes": []
}