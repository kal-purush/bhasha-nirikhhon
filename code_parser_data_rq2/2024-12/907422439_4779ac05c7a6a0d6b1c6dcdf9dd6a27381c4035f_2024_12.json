{
    "identifiers": [
        "langchain",
        "memory",
        "ConversationBufferMemory",
        "langchain_community",
        "chat_message_histories",
        "StreamlitChatMessageHistory",
        "langchain",
        "chains",
        "LLMChain",
        "langchain",
        "prompts",
        "PromptTemplate",
        "langchain_google_genai",
        "GoogleGenerativeAI",
        "LoadProperties",
        "LoadProperties",
        "LoadProperties",
        "GoogleGenerativeAI",
        "model",
        "google_api_key",
        "GEMINI_API_KEY",
        "StreamlitChatMessageHistory",
        "key",
        "ConversationBufferMemory",
        "chat_memory",
        "history",
        "PromptTemplate",
        "input_variables",
        "template",
        "template",
        "LLMChain",
        "llm",
        "llm",
        "prompt",
        "prompt",
        "memory",
        "memory",
        "streamlit",
        "st",
        "st",
        "title",
        "msg",
        "history",
        "messages",
        "st",
        "chat_message",
        "msg",
        "write",
        "msg",
        "content",
        "x",
        "st",
        "chat_input",
        "st",
        "chat_message",
        "write",
        "x",
        "llm_chain",
        "invoke",
        "x",
        "st",
        "chat_message",
        "write",
        "response"
    ],
    "literals": [
        "\"GEMINI_API_KEY\"",
        "\"gemini-1.5-flash\"",
        "\"chat_messages\"",
        "\"human_input\"",
        "'ðŸ¦œðŸ”— Welcome to the ChatBot'",
        "\"human\"",
        "\"ai\"",
        "\"text\""
    ],
    "variables": [
        "properties",
        "GEMINI_API_KEY",
        "llm",
        "history",
        "memory",
        "template",
        "prompt",
        "llm_chain",
        "response"
    ],
    "comments": [
        "In this demo we will explore using Streamlit session to store chat messages",
        "Step 1 - setup OCI Generative AI llm",
        "use default authN method API-key",
        "use default authN method",
        "Step 2 - here we create a history with a key \"chat_messages.",
        "StreamlitChatMessageHistory will store messages in Streamlit session state at the specified key=.",
        "A given StreamlitChatMessageHistory will NOT be persisted or shared across user sessions.",
        "Step 3 - here we create a memory object",
        "Step 4 - here we create template and prompt to accept a question",
        "Step 5 - here we create a chain object",
        "Step 6 - here we use streamlit to print all messages in the memory, create text imput, run chain and",
        "the question and response is automatically put in the StreamlitChatMessageHistory",
        "As usual, new messages are added to StreamlitChatMessageHistory when the Chain is called."
    ],
    "docstrings": [
        "\"\"\"You are an AI chatbot having a conversation with a human.\nHuman: {human_input}\nAI: \"\"\""
    ],
    "functions": [],
    "classes": []
}