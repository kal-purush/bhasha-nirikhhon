{
    "identifiers": [
        "com",
        "tecsup",
        "microservices",
        "license_command_service",
        "config",
        "com",
        "tecsup",
        "microservices",
        "common_models",
        "entity",
        "GenericEntity",
        "org",
        "apache",
        "kafka",
        "clients",
        "producer",
        "ProducerConfig",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Value",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "kafka",
        "core",
        "DefaultKafkaProducerFactory",
        "org",
        "springframework",
        "kafka",
        "core",
        "KafkaTemplate",
        "org",
        "springframework",
        "kafka",
        "core",
        "ProducerFactory",
        "org",
        "springframework",
        "kafka",
        "support",
        "serializer",
        "JsonSerializer",
        "java",
        "util",
        "java",
        "util",
        "Configuration",
        "Value",
        "kafkaServer",
        "Value",
        "kafkaPort",
        "kafkaProps",
        "kafkaProps",
        "put",
        "ProducerConfig",
        "BOOTSTRAP_SERVERS_CONFIG",
        "kafkaServer",
        "kafkaPort",
        "kafkaProps",
        "put",
        "ProducerConfig",
        "KEY_SERIALIZER_CLASS_CONFIG",
        "kafkaProps",
        "put",
        "ProducerConfig",
        "VALUE_SERIALIZER_CLASS_CONFIG",
        "kafkaProps",
        "Bean",
        "producerFactory"
    ],
    "literals": [
        "\"${kafka.license.server:127.0.0.1}\"",
        "\"${kafka.license.port:9092}\"",
        "\":\""
    ],
    "variables": [
        "kafkaServer",
        "kafkaPort"
    ],
    "comments": [
        "kafkaProps.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, StringSerializer.class);",
        "kafkaProps.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, StringSerializer.class);"
    ],
    "docstrings": [],
    "functions": [
        "producerFactory",
        "kafkaTemplate"
    ],
    "classes": [
        "KafkaConfig"
    ]
}