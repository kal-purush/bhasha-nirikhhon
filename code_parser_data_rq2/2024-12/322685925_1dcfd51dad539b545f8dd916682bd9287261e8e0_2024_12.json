{
    "identifiers": [
        "json",
        "re",
        "sys",
        "pathlib",
        "Path",
        "swagger_file",
        "open",
        "swagger_file",
        "encoding",
        "f",
        "json",
        "load",
        "f",
        "info",
        "info",
        "get",
        "path_str",
        "version",
        "re",
        "escape",
        "version",
        "re",
        "sub",
        "pattern",
        "path_str",
        "name",
        "re",
        "sub",
        "name",
        "re",
        "sub",
        "s1",
        "s2",
        "lower",
        "path_str",
        "method",
        "seg",
        "seg",
        "path_str",
        "split",
        "seg",
        "seg",
        "startswith",
        "segments",
        "segments",
        "method",
        "lower",
        "base_name",
        "method",
        "lower",
        "base_name",
        "method",
        "lower",
        "base_name",
        "method",
        "lower",
        "base_name",
        "method",
        "lower",
        "base_name",
        "fname",
        "lower",
        "replace",
        "swagger_data",
        "swagger_data",
        "get",
        "swagger_data",
        "get",
        "extract_version",
        "info",
        "class_name_base",
        "class_name_base",
        "version",
        "replace",
        "path",
        "path_obj",
        "paths",
        "items",
        "method",
        "method_obj",
        "path_obj",
        "items",
        "method_obj",
        "get",
        "method_obj",
        "get",
        "operation_id",
        "to_snake_case",
        "operation_id",
        "normalize_path",
        "path",
        "version",
        "generate_method_name",
        "normalized_path",
        "method",
        "method",
        "lower",
        "normalize_path",
        "path",
        "version",
        "method",
        "upper",
        "fname",
        "summary",
        "p",
        "get",
        "p",
        "method_obj",
        "get",
        "has_body",
        "normalize_path",
        "path",
        "version",
        "method",
        "upper",
        "fname",
        "summary",
        "normalize_path",
        "path",
        "version",
        "method",
        "upper",
        "fname",
        "summary",
        "endpoints",
        "append",
        "endpoint_code",
        "join",
        "endpoints",
        "version_enum_class",
        "version",
        "version",
        "factory_class",
        "version",
        "version_enum_class",
        "version_enum_class",
        "version_enum_class",
        "factory_class",
        "versioned_class",
        "factory_class",
        "version_enum_class",
        "version_enum_class",
        "endpoints_str",
        "factory_class",
        "version",
        "versioned_class",
        "code_template",
        "len",
        "sys",
        "argv",
        "sys",
        "exit",
        "sys",
        "argv",
        "sys",
        "argv",
        "load_swagger",
        "swagger_file",
        "generate_code",
        "swagger_data",
        "Path",
        "output_file",
        "write_text",
        "code",
        "encoding",
        "output_file"
    ],
    "literals": [
        "'r'",
        "'utf-8'",
        "\"version\"",
        "\"v1\"",
        "r'/'",
        "r'(\\b|/)'",
        "'<version>/'",
        "'(.)([A-Z][a-z]+)'",
        "r'\\1_\\2'",
        "'([a-z0-9])([A-Z])'",
        "r'\\1_\\2'",
        "'/'",
        "'<'",
        "'root'",
        "'get'",
        "f'get_{base_name}'",
        "'post'",
        "f'submit_{base_name}'",
        "'put'",
        "f'update_{base_name}'",
        "'delete'",
        "f'delete_{base_name}'",
        "f'{method.lower()}_{base_name}'",
        "'-'",
        "'_'",
        "\"info\"",
        "\"paths\"",
        "\"VendorShipments\"",
        "\"VendorShipmentsVersion\"",
        "f\"{class_name_base}V{version.replace('v','')}\"",
        "'v'",
        "''",
        "\"summary\"",
        "\"\"",
        "\"operationId\"",
        "'get'",
        "f\"\"\"    @sp_endpoint(\"{normalize_path(path, version)}\", method=\"{method.upper()}\")\n    def {fname}(self, **kwargs) -> ApiResponse:\n        \\\"\\\"\\\"{summary}\\\"\\\"\\\"\n        return self._request(kwargs.pop(\"path\"), params=kwargs)\n\"\"\"",
        "\"in\"",
        "\"body\"",
        "\"parameters\"",
        "f\"\"\"    @sp_endpoint(\"{normalize_path(path, version)}\", method=\"{method.upper()}\")\n    def {fname}(self, data, **kwargs) -> ApiResponse:\n        \\\"\\\"\\\"{summary}\\\"\\\"\\\"\n        return self._request(kwargs.pop(\"path\"), data={{**data, **kwargs}})\n\"\"\"",
        "f\"\"\"    @sp_endpoint(\"{normalize_path(path, version)}\", method=\"{method.upper()}\")\n    def {fname}(self, **kwargs) -> ApiResponse:\n        \\\"\\\"\\\"{summary}\\\"\\\"\\\"\n        return self._request(kwargs.pop(\"path\"), params=kwargs)\n\"\"\"",
        "\"\\n\"",
        "f'''import enum\nimport os\nfrom sp_api.base import Client, Marketplaces, ApiResponse, sp_endpoint, fill_query_params\n\nclass {version_enum_class}(str, enum.Enum):\n    V_1 = \"{version}\"\n    LATEST = \"{version}\"\n\nclass {factory_class}(Client):\n    \"\"\"\n    Vendor Shipments SP-API Client Factory\n    \"\"\"\n    _version_mapping = {{\n        \"{version}\": None  # will be set after class definition\n    }}\n\n    def __new__(cls, *args, **kwargs):\n        version = kwargs.pop(\"version\", {version_enum_class}.LATEST)\n        if isinstance(version, {version_enum_class}):\n            version = version.value\n        elif not isinstance(version, str):\n            raise ValueError(\"Version must be a string or {version_enum_class} Enum member.\")\n\n        selected_class = cls._version_mapping.get(version)\n        if not selected_class:\n            raise ValueError(f\"Unsupported version: {{version}}\")\n\n        instance = super({factory_class}, cls).__new__(selected_class)\n        return instance\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n\nclass {versioned_class}({factory_class}):\n    version: {version_enum_class} = {version_enum_class}.V_1\n\n{endpoints_str}\n\n{factory_class}._version_mapping[\"{version}\"] = {versioned_class}\n'''",
        "\"__main__\"",
        "\"Usage: python generate_code.py <swagger.json> <output.py>\"",
        "'utf-8'",
        "f\"Generated code in {output_file}\""
    ],
    "variables": [
        "pattern",
        "s1",
        "s2",
        "segments",
        "base_name",
        "base_name",
        "fname",
        "fname",
        "fname",
        "fname",
        "fname",
        "info",
        "paths",
        "version",
        "class_name_base",
        "version_enum_class",
        "factory_class",
        "versioned_class",
        "endpoints",
        "summary",
        "operation_id",
        "fname",
        "normalized_path",
        "fname",
        "endpoint_code",
        "has_body",
        "endpoint_code",
        "endpoint_code",
        "endpoints_str",
        "code_template",
        "swagger_file",
        "output_file",
        "swagger_data",
        "code"
    ],
    "comments": [
        "Extract version from the info block",
        "Replace the actual version in the path with <version>",
        "Convert a string (likely camelCase or PascalCase) to snake_case",
        "Determine method name",
        "Check if we have a body parameter (for POST/PUT)",
        "GET requests typically use params",
        "For non-GET methods, check parameters"
    ],
    "docstrings": [],
    "functions": [
        "load_swagger",
        "extract_version",
        "normalize_path",
        "to_snake_case",
        "generate_method_name",
        "generate_code"
    ],
    "classes": []
}