{
    "identifiers": [
        "frc",
        "lib",
        "math",
        "counts",
        "gearRatio",
        "counts",
        "gearRatio",
        "degrees",
        "gearRatio",
        "ticks",
        "degrees",
        "gearRatio",
        "ticks",
        "velocityCounts",
        "gearRatio",
        "motorRPM",
        "velocityCounts",
        "mechRPM",
        "motorRPM",
        "gearRatio",
        "mechRPM",
        "rpm",
        "gearRatio",
        "motorRPM",
        "rpm",
        "gearRatio",
        "sensorCounts",
        "motorRPM",
        "sensorCounts",
        "counts",
        "gearRatio",
        "circumference",
        "counts",
        "circumference",
        "gearRatio",
        "velocitycounts",
        "circumference",
        "gearRatio",
        "wheelRPM",
        "falconToRPM",
        "velocitycounts",
        "gearRatio",
        "wheelMPS",
        "wheelRPM",
        "circumference",
        "wheelMPS",
        "velocity",
        "circumference",
        "gearRatio",
        "wheelRPM",
        "velocity",
        "circumference",
        "wheelVelocity",
        "rpmToFalcon",
        "wheelRPM",
        "gearRatio",
        "wheelVelocity",
        "goal",
        "goal"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Mathematical conversions for swerve calculations",
        "* @param counts Falcon Counts\n     * @param gearRatio Gear Ratio between Falcon and Mechanism\n     * @return Degrees of Rotation of Mechanism falconToDegrees",
        "* @param degrees Degrees of rotation of Mechanism\n     * @param gearRatio Gear Ratio between Falcon and Mechanism\n     * @return Falcon Counts degreesToFalcon",
        "* @param velocityCounts Falcon Velocity Counts\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon RPM)\n     * @return RPM of Mechanism",
        "* @param rpm RPM of mechanism\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon RPM)\n     * @return RPM of Mechanism",
        "* @param counts Falcon Counts\n     * @param gearRatio Gear Ratio between Falcon and Mechanism\n     * @param circumference Circumference of Wheel\n     * @return Degrees of Rotation of Mechanism falconToDegrees",
        "* @param velocitycounts Falcon Velocity Counts\n     * @param circumference Circumference of Wheel\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon RPM)\n     * @return Falcon Velocity Counts",
        "* @param velocity Velocity MPS\n     * @param circumference Circumference of Wheel\n     * @param gearRatio Gear Ratio between Falcon and Mechanism (set to 1 for Falcon RPM)\n     * @return Falcon Velocity Counts",
        "* Normalize angle to between 0 to 360\n     *\n     * @param goal initial angle\n     * @return normalized angle"
    ],
    "functions": [
        "falconToDegrees",
        "degreesToFalcon",
        "falconToRPM",
        "rpmToFalcon",
        "falconToMeters",
        "falconToMPS",
        "mpsToFalcon",
        "reduceTo0_360"
    ],
    "classes": [
        "Conversions"
    ]
}