{
    "identifiers": [
        "os",
        "json",
        "uuid",
        "requests",
        "asyncio",
        "dotenv",
        "load_dotenv",
        "azure",
        "servicebus",
        "aio",
        "ServiceBusClient",
        "azure",
        "storage",
        "blob",
        "BlobServiceClient",
        "azure",
        "cosmos",
        "CosmosClient",
        "openai",
        "AzureOpenAI",
        "langchain_core",
        "documents",
        "Document",
        "langchain_text_splitters",
        "RecursiveCharacterTextSplitter",
        "langchain_openai",
        "AzureOpenAIEmbeddings",
        "langchain_community",
        "vectorstores",
        "azuresearch",
        "AzureSearch",
        "tiktoken",
        "re",
        "base64",
        "load_dotenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "os",
        "getenv",
        "BlobServiceClient",
        "from_connection_string",
        "os",
        "getenv",
        "servicebus_connection_string",
        "id",
        "title",
        "date",
        "last_updated",
        "author",
        "description",
        "source",
        "thumbnail_url",
        "topics",
        "entities",
        "content",
        "ServiceBusClient",
        "from_connection_string",
        "conn_str",
        "servicebus_connection_string",
        "servicebus_client",
        "servicebus_client",
        "servicebus_client",
        "get_queue_receiver",
        "receiver",
        "receiver",
        "receive_messages",
        "max_message_count",
        "max_wait_time",
        "message",
        "received_messages",
        "json",
        "loads",
        "message",
        "image_input",
        "update_status",
        "image_input",
        "index_image",
        "image_location",
        "update_status",
        "image_input",
        "save_to_cosmosdb",
        "input",
        "update_status",
        "image_input",
        "receiver",
        "complete_message",
        "message",
        "asyncio",
        "sleep",
        "input",
        "Input",
        "CosmosClient",
        "from_connection_string",
        "cosmosdb_connection_string",
        "client",
        "get_database_client",
        "database_name",
        "database",
        "get_container_client",
        "container_name",
        "container",
        "create_item",
        "body",
        "input",
        "to_dict",
        "request_id",
        "status",
        "status",
        "requests",
        "post",
        "status_endpoint",
        "request_id",
        "json",
        "status",
        "image_path",
        "open",
        "image_path",
        "image_file",
        "base64",
        "b64encode",
        "image_file",
        "read",
        "decode",
        "image_location",
        "Input",
        "blob_service_client",
        "get_blob_client",
        "container",
        "container_name",
        "blob",
        "image_location",
        "get_file",
        "image_location",
        "open",
        "download_file_path",
        "download_file",
        "download_file",
        "write",
        "blob_client",
        "download_blob",
        "readall",
        "encode_image",
        "download_file_path",
        "os",
        "environ",
        "AzureOpenAI",
        "api_key",
        "os",
        "environ",
        "azure_endpoint",
        "os",
        "environ",
        "api_version",
        "os",
        "environ",
        "azure_openai_client",
        "chat",
        "completions",
        "create",
        "model",
        "temperature",
        "top_p",
        "messages",
        "base64_image",
        "prompt_template",
        "choices",
        "message",
        "content",
        "corrected_content",
        "corrected_content",
        "replace",
        "re",
        "search",
        "corrected_content",
        "re",
        "search",
        "corrected_content",
        "re",
        "search",
        "corrected_content",
        "title_match",
        "group",
        "title_match",
        "description_match",
        "group",
        "description_match",
        "full_text_match",
        "group",
        "full_text_match",
        "title",
        "description",
        "full_text",
        "Document",
        "page_content",
        "metadata",
        "Input",
        "uuid",
        "uuid4",
        "title",
        "description",
        "documents",
        "metadata",
        "title",
        "metadata",
        "metadata",
        "description",
        "metadata",
        "metadata",
        "full_text",
        "RecursiveCharacterTextSplitter",
        "chunk_size",
        "chunk_overlap",
        "text_splitter",
        "split_documents",
        "documents",
        "AzureOpenAIEmbeddings",
        "api_key",
        "os",
        "environ",
        "azure_endpoint",
        "os",
        "environ",
        "api_version",
        "os",
        "environ",
        "azure_deployment",
        "os",
        "environ",
        "os",
        "getenv",
        "index_name",
        "index_name",
        "AzureSearch",
        "azure_search_endpoint",
        "os",
        "getenv",
        "azure_search_key",
        "os",
        "getenv",
        "index_name",
        "index_name",
        "embedding_function",
        "azure_openai_embeddings",
        "embed_query",
        "vector_store",
        "add_documents",
        "documents",
        "splits",
        "join",
        "doc",
        "page_content",
        "doc",
        "documents",
        "os",
        "remove",
        "download_file_path",
        "input",
        "file_name",
        "os",
        "path",
        "exists",
        "output_folder",
        "os",
        "makedirs",
        "output_folder",
        "os",
        "path",
        "join",
        "output_folder",
        "file_name",
        "encoding_name",
        "tiktoken",
        "encoding_for_model",
        "encoding_name",
        "len",
        "encoding",
        "encode",
        "num_tokens",
        "asyncio",
        "run",
        "main"
    ],
    "literals": [
        "\"SERVICEBUS_CONNECTION_STRING\"",
        "\"COSMOSDB_CONNECTION_STRING\"",
        "\"STATUS_ENDPOINT\"",
        "\"STORAGE_CONNECTION_STRING\"",
        "\"uploads\"",
        "f\"service_bus_connection_string: {servicebus_connection_string}\"",
        "\"id\"",
        "\"title\"",
        "\"date\"",
        "\"last_updated\"",
        "\"author\"",
        "\"description\"",
        "\"source\"",
        "\"type\"",
        "\"thumbnail_url\"",
        "\"topics\"",
        "\"entities\"",
        "\"content\"",
        "'image'",
        "'input'",
        "'request_id'",
        "\"Indexing\"",
        "'request_id'",
        "\"Indexed\"",
        "'request_id'",
        "\"Saved\"",
        "\"autopodcaster\"",
        "\"inputs\"",
        "\"status\"",
        "f\"{status_endpoint}/status/{request_id}\"",
        "\"rb\"",
        "\"utf-8\"",
        "\"wb\"",
        "f\"azure openai key: {os.environ['AZURE_OPENAI_KEY']}\"",
        "'AZURE_OPENAI_KEY'",
        "'AZURE_OPENAI_KEY'",
        "'AZURE_OPENAI_ENDPOINT'",
        "'AZURE_OPENAI_API_VERSION'",
        "\"gpt-4o\"",
        "\"role\"",
        "\"user\"",
        "\"content\"",
        "\"type\"",
        "\"image_url\"",
        "\"image_url\"",
        "\"url\"",
        "f\"data:image/png;base64,{base64_image}\"",
        "\"type\"",
        "\"text\"",
        "\"text\"",
        "f\"Corrected content: {corrected_content}\"",
        "'\\n'",
        "' '",
        "r'\\[\\[(.*?)\\]\\]'",
        "r'\\$\\$(.*?)\\$\\$'",
        "r'\\(\\((.*?)\\)\\)'",
        "f\"Title: {title}\"",
        "f\"Description: {description}\"",
        "f\"Full text: {full_text}\"",
        "\"\"",
        "''",
        "''",
        "''",
        "''",
        "'note'",
        "''",
        "'title'",
        "'source'",
        "''",
        "'description'",
        "'thumbnail_url'",
        "''",
        "'type'",
        "'note'",
        "'AZURE_OPENAI_KEY'",
        "'AZURE_OPENAI_ENDPOINT'",
        "'AZURE_OPENAI_API_VERSION'",
        "'AZURE_OPENAI_DEPLOYMENT_EMBEDDINGS'",
        "\"AZURE_SEARCH_INDEX_NAME\"",
        "\"\"",
        "\"knowledgebase\"",
        "\"AZURE_SEARCH_ENDPOINT\"",
        "\"AZURE_SEARCH_ADMIN_KEY\"",
        "'\\n\\n'",
        "'outputs'"
    ],
    "variables": [
        "servicebus_connection_string",
        "cosmosdb_connection_string",
        "status_endpoint",
        "blob_service_client",
        "container_name",
        "id",
        "title",
        "date",
        "last_updated",
        "author",
        "description",
        "source",
        "thumbnail_url",
        "topics",
        "entities",
        "content",
        "receiver",
        "received_messages",
        "image_input",
        "image_location",
        "input",
        "client",
        "database_name",
        "database",
        "container_name",
        "container",
        "status",
        "blob_client",
        "download_file_path",
        "base64_image",
        "prompt_template",
        "azure_openai_client",
        "corrected_content",
        "corrected_content",
        "title_match",
        "description_match",
        "full_text_match",
        "title",
        "description",
        "full_text",
        "documents",
        "input",
        "input",
        "id",
        "input",
        "title",
        "input",
        "date",
        "input",
        "last_updated",
        "input",
        "author",
        "input",
        "description",
        "input",
        "source",
        "input",
        "input",
        "thumbnail_url",
        "input",
        "topics",
        "input",
        "entities",
        "page_content",
        "text_splitter",
        "splits",
        "azure_openai_embeddings",
        "index_name",
        "index_name",
        "vector_store",
        "input",
        "content",
        "output_folder",
        "encoding",
        "num_tokens"
    ],
    "comments": [
        "We will generate a title and a description from the content.",
        "using OpenAI GPT-4.",
        "Create the prompt to generate the title and description.",
        "Create the gpt-4o model client",
        "Remove the line breaks from the corrected content.",
        "Title and description is returned in following format: [[Title goes here]] and $$Description goes here$$ and ((Full text goes here))",
        "Extract the title and short description and description from the corrected content.",
        "Create a document from the content."
    ],
    "docstrings": [
        "\"\"\"Get the content from the image and generate a title, short description (4 sentences) and full text for the content.\n       \n    Provide in following format:\n    [[Title goes here]]\n    $$Description goes here$$\n    ((Full text goes here))\n\n    \"\"\"",
        "\"\"\"Get file path\n\n    Args:\n        file_name (str): File name\n\n    Returns:\n        File path\n    \"\"\""
    ],
    "functions": [
        "to_dict",
        "main",
        "save_to_cosmosdb",
        "update_status",
        "encode_image",
        "index_image",
        "get_file",
        "num_tokens_from_string"
    ],
    "classes": [
        "Input"
    ]
}