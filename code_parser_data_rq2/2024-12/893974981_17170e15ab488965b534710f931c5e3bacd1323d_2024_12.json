{
    "identifiers": [
        "BrowserWindow",
        "path",
        "electronIsDev",
        "fileURLToPath",
        "dirname",
        "fileURLToPath",
        "dirname",
        "__filename",
        "getAppWindow",
        "appWindow",
        "appWindow",
        "installExtensions",
        "spawnAppWindow",
        "electronIsDev",
        "installExtensions",
        "electronIsDev",
        "path",
        "__dirname",
        "path",
        "process",
        "getAssetPath",
        "paths",
        "path",
        "RESOURCES_PATH",
        "paths",
        "appWindow",
        "BrowserWindow",
        "getAssetPath",
        "path",
        "__dirname",
        "appWindow",
        "electronIsDev",
        "path",
        "__dirname",
        "appWindow",
        "appWindow",
        "appWindow",
        "electronIsDev",
        "appWindow",
        "appWindow",
        "appWindow"
    ],
    "literals": [
        "'electron'",
        "'path'",
        "'electron-is-dev'",
        "'url'",
        "'path'",
        "'App window is not initialized'",
        "'../../assets'",
        "'assets'",
        "string",
        "string",
        "'icon.png'",
        "'preload.js'",
        "'http://localhost:3000'",
        "file://${path.join(__dirname, '../../frontend/build/index.html')}",
        "'../../frontend/build/index.html'",
        "'right'",
        "'closed'"
    ],
    "variables": [
        "__filename",
        "__dirname",
        "appWindow",
        "getAppWindow",
        "installExtensions",
        "spawnAppWindow",
        "RESOURCES_PATH",
        "getAssetPath"
    ],
    "comments": [
        "const {\n\t\tdefault: electronDevtoolsInstaller,\n\t\t//REACT_DEVELOPER_TOOLS,\n\t\tREDUX_DEVTOOLS,\n\t} = await import('electron-devtools-installer')\n\t// @ts-expect-error Weird behaviour\n\telectronDevtoolsInstaller.default([REDUX_DEVTOOLS]).catch(console.log)",
        "const PRELOAD_PATH = path.join(__dirname, 'preload.js')"
    ],
    "docstrings": [
        "* NOTE:\n\t * As of writing this comment, Electron does not support the `scripting` API,\n\t * which causes errors in the REACT_DEVELOPER_TOOLS extension.\n\t * A possible workaround could be to downgrade the extension but you're on your own with that."
    ],
    "functions": [],
    "classes": []
}