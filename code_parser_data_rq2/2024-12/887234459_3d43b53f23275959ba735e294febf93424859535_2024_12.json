{
    "identifiers": [
        "sys",
        "asyncio",
        "asyncqt",
        "sqlite3",
        "requests",
        "PyQt5",
        "QtCore",
        "Qt",
        "QTimer",
        "PyQt5",
        "QtWidgets",
        "QApplication",
        "QMainWindow",
        "QVBoxLayout",
        "QHBoxLayout",
        "QTableView",
        "QLineEdit",
        "QPushButton",
        "QWidget",
        "QMessageBox",
        "QProgressBar",
        "QStatusBar",
        "QDialog",
        "QFormLayout",
        "QDialogButtonBox",
        "PyQt5",
        "QtGui",
        "QStandardItemModel",
        "QStandardItem",
        "QMainWindow",
        "setWindowTitle",
        "resize",
        "sqlite3",
        "connect",
        "create_table_if_not_exists",
        "init_ui",
        "QTimer",
        "timer",
        "timeout",
        "connect",
        "check_updates",
        "timer",
        "start",
        "db_connection",
        "cursor",
        "cursor",
        "execute",
        "db_connection",
        "commit",
        "QWidget",
        "setCentralWidget",
        "central_widget",
        "QVBoxLayout",
        "central_widget",
        "QLineEdit",
        "search_field",
        "setPlaceholderText",
        "layout",
        "addWidget",
        "search_field",
        "QTableView",
        "layout",
        "addWidget",
        "table_view",
        "QStandardItemModel",
        "setup_table_model",
        "QHBoxLayout",
        "QPushButton",
        "load_button",
        "clicked",
        "connect",
        "load_data",
        "QPushButton",
        "add_button",
        "clicked",
        "connect",
        "add_record",
        "QPushButton",
        "delete_button",
        "clicked",
        "connect",
        "delete_record",
        "button_layout",
        "addWidget",
        "load_button",
        "button_layout",
        "addWidget",
        "add_button",
        "button_layout",
        "addWidget",
        "delete_button",
        "layout",
        "addLayout",
        "button_layout",
        "QStatusBar",
        "setStatusBar",
        "status_bar",
        "status_bar",
        "showMessage",
        "QProgressBar",
        "progress_bar",
        "setAlignment",
        "Qt",
        "AlignCenter",
        "progress_bar",
        "setRange",
        "progress_bar",
        "setValue",
        "layout",
        "addWidget",
        "progress_bar",
        "model",
        "setHorizontalHeaderLabels",
        "table_view",
        "setModel",
        "model",
        "load_table_data",
        "model",
        "removeRows",
        "model",
        "rowCount",
        "db_connection",
        "cursor",
        "cursor",
        "execute",
        "row",
        "cursor",
        "fetchall",
        "QStandardItem",
        "field",
        "field",
        "row",
        "model",
        "appendRow",
        "items",
        "search_field",
        "text",
        "lower",
        "row",
        "model",
        "rowCount",
        "model",
        "item",
        "row",
        "search_text",
        "title_item",
        "text",
        "lower",
        "table_view",
        "setRowHidden",
        "row",
        "table_view",
        "setRowHidden",
        "row",
        "status_bar",
        "showMessage",
        "progress_bar",
        "setValue",
        "asyncio",
        "sleep",
        "requests",
        "get",
        "url",
        "response",
        "status_code",
        "progress_bar",
        "setValue",
        "response",
        "json",
        "data",
        "QMessageBox",
        "warning",
        "data",
        "status_bar",
        "showMessage",
        "progress_bar",
        "setValue",
        "asyncio",
        "sleep",
        "db_connection",
        "cursor",
        "item",
        "data",
        "item",
        "get",
        "item",
        "get",
        "item",
        "get",
        "user_id",
        "cursor",
        "execute",
        "user_id",
        "title",
        "body",
        "db_connection",
        "commit",
        "progress_bar",
        "setValue",
        "fetch_data",
        "data",
        "save_data_to_db",
        "data",
        "load_table_data",
        "status_bar",
        "showMessage",
        "progress_bar",
        "setValue",
        "asyncio",
        "create_task",
        "load_data_task",
        "AddRecordDialog",
        "dialog",
        "exec_",
        "dialog",
        "user_id_input",
        "text",
        "dialog",
        "title_input",
        "text",
        "dialog",
        "body_input",
        "text",
        "user_id",
        "title",
        "body",
        "db_connection",
        "cursor",
        "cursor",
        "execute",
        "user_id",
        "title",
        "body",
        "db_connection",
        "commit",
        "load_table_data",
        "QMessageBox",
        "warning",
        "table_view",
        "selectionModel",
        "selectedRows",
        "selected_indexes",
        "QMessageBox",
        "warning",
        "QMessageBox",
        "question",
        "QMessageBox",
        "Yes",
        "QMessageBox",
        "No",
        "confirm",
        "QMessageBox",
        "Yes",
        "selected_indexes",
        "row",
        "model",
        "item",
        "row",
        "text",
        "db_connection",
        "cursor",
        "cursor",
        "execute",
        "record_id",
        "db_connection",
        "commit",
        "load_table_data",
        "QMessageBox",
        "information",
        "asyncio",
        "create_task",
        "fetch_updates",
        "asyncio",
        "sleep",
        "status_bar",
        "showMessage",
        "db_connection",
        "close",
        "closeEvent",
        "QDialog",
        "parent",
        "parent",
        "setWindowTitle",
        "QFormLayout",
        "QLineEdit",
        "QLineEdit",
        "QLineEdit",
        "layout",
        "addRow",
        "user_id_input",
        "layout",
        "addRow",
        "title_input",
        "layout",
        "addRow",
        "body_input",
        "QDialogButtonBox",
        "QDialogButtonBox",
        "Ok",
        "QDialogButtonBox",
        "Cancel",
        "buttons",
        "accepted",
        "connect",
        "accept",
        "buttons",
        "rejected",
        "connect",
        "reject",
        "layout",
        "addWidget",
        "buttons",
        "setLayout",
        "layout",
        "QApplication",
        "sys",
        "argv",
        "asyncqt",
        "QEventLoop",
        "app",
        "asyncio",
        "set_event_loop",
        "loop",
        "loop",
        "MainApp",
        "main_app",
        "show",
        "loop",
        "run_forever"
    ],
    "literals": [
        "\"Многозадачное приложение\"",
        "\"posts.db\"",
        "\"Поиск по заголовку...\"",
        "\"Загрузить данные\"",
        "\"Добавить запись\"",
        "\"Удалить запись\"",
        "\"Приложение запущено\"",
        "\"ID\"",
        "\"User ID\"",
        "\"Title\"",
        "\"Body\"",
        "\"SELECT * FROM posts\"",
        "\"https://jsonplaceholder.typicode.com/posts\"",
        "\"Загрузка данных...\"",
        "\"Ошибка\"",
        "\"Не удалось загрузить данные\"",
        "\"Сохранение данных...\"",
        "'userId'",
        "'title'",
        "'body'",
        "\"INSERT INTO posts (user_id, title, body) VALUES (?, ?, ?)\"",
        "\"Данные загружены и сохранены.\"",
        "\"INSERT INTO posts (user_id, title, body) VALUES (?, ?, ?)\"",
        "\"Ошибка\"",
        "\"Все поля должны быть заполнены.\"",
        "\"Удаление записи\"",
        "\"Выберите запись для удаления.\"",
        "\"Удаление записи\"",
        "\"Удалить выбранную запись?\"",
        "\"DELETE FROM posts WHERE id = ?\"",
        "\"Удаление записи\"",
        "\"Запись успешно удалена.\"",
        "\"Проверка обновлений завершена.\"",
        "\"Добавить запись\"",
        "\"User ID:\"",
        "\"Title:\"",
        "\"Body:\"",
        "\"__main__\""
    ],
    "variables": [
        "db_connection",
        "timer",
        "cursor",
        "central_widget",
        "layout",
        "search_field",
        "table_view",
        "model",
        "button_layout",
        "load_button",
        "add_button",
        "delete_button",
        "status_bar",
        "progress_bar",
        "cursor",
        "items",
        "search_text",
        "title_item",
        "url",
        "response",
        "data",
        "cursor",
        "user_id",
        "title",
        "body",
        "data",
        "dialog",
        "user_id",
        "title",
        "body",
        "cursor",
        "selected_indexes",
        "confirm",
        "row",
        "record_id",
        "cursor",
        "layout",
        "user_id_input",
        "title_input",
        "body_input",
        "buttons",
        "app",
        "loop",
        "main_app"
    ],
    "comments": [
        "Создать таблицу, если её нет",
        "Настройка таймера для периодических обновлений",
        "Проверка каждые 10 секунд",
        "Основной виджет",
        "Поле поиска",
        "Таблица",
        "Модель данных",
        "Кнопки",
        "Статус-бар",
        "Изначальное сообщение в статус-баре",
        "Сообщение исчезнет через 5 секунд",
        "Прогресс бар",
        "Очистка таблицы",
        "Установка значения прогресс бара",
        "Имитация задержки",
        "Установка значения прогресс бара",
        "Установка значения прогресс бара",
        "Имитация задержки",
        "Изменено на 'userId', так как API возвращает 'userId', а не 'user_id'",
        "Проверяем, что user_id существует",
        "Вставляем запись, даже если она уже существует",
        "Установка значения прогресс бара",
        "Сброс значения прогресс бара",
        "Проверяем, была ли нажата кнопка \"OK\"",
        "Проверяем, что все поля заполнены",
        "Сохраняем изменения",
        "Обновляем таблицу",
        "Имитация проверки обновлений",
        "Настройка интеграции asyncio и PyQt",
        "Запуск приложения"
    ],
    "docstrings": [
        "\"\"\"\n            CREATE TABLE IF NOT EXISTS posts (\n                id INTEGER PRIMARY KEY AUTOINCREMENT,\n                user_id INTEGER,\n                title TEXT,\n                body TEXT\n            )\n        \"\"\""
    ],
    "functions": [
        "create_table_if_not_exists",
        "init_ui",
        "setup_table_model",
        "load_table_data",
        "filter_table",
        "fetch_data",
        "save_data_to_db",
        "load_data_task",
        "load_data",
        "add_record",
        "delete_record",
        "check_updates",
        "fetch_updates",
        "closeEvent"
    ],
    "classes": [
        "MainApp",
        "AddRecordDialog"
    ]
}