{
    "identifiers": [
        "canvas",
        "gl",
        "alert",
        "canvas",
        "canvas",
        "gl",
        "canvas",
        "canvas",
        "on_resize",
        "mouse",
        "mouse",
        "scrn",
        "scrn",
        "mouse",
        "keys",
        "scrn",
        "scrn",
        "scrn",
        "scrn",
        "reload",
        "scrn",
        "reload",
        "scrn",
        "reload",
        "colors",
        "colorCycle",
        "reload",
        "colors",
        "colorCycle",
        "reload",
        "scrn",
        "scrn",
        "scrn",
        "reload",
        "julia",
        "julia",
        "scrn",
        "juliaC",
        "scrn",
        "juliaC",
        "scrn",
        "mandelbrotZ",
        "reload",
        "julia",
        "julia",
        "juliaC",
        "scrn",
        "scrn",
        "mandelbrotZ",
        "scrn",
        "scrn",
        "scrn",
        "scrn",
        "reload",
        "keys",
        "min",
        "max",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "min",
        "t",
        "max",
        "min",
        "min",
        "max",
        "t",
        "t",
        "min",
        "max",
        "min",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c",
        "c",
        "c",
        "c",
        "c",
        "t",
        "t",
        "t",
        "colorCycle",
        "a",
        "colors",
        "a",
        "t",
        "colors",
        "a",
        "t",
        "colors",
        "a",
        "c",
        "cubicLerp",
        "colors",
        "a",
        "colors",
        "a",
        "antiLerp",
        "colors",
        "a",
        "colors",
        "a",
        "t",
        "cubicLerp",
        "colors",
        "a",
        "colors",
        "a",
        "antiLerp",
        "colors",
        "a",
        "colors",
        "a",
        "t",
        "cubicLerp",
        "colors",
        "a",
        "colors",
        "a",
        "antiLerp",
        "colors",
        "a",
        "colors",
        "a",
        "t",
        "c",
        "c",
        "c",
        "ob",
        "ob",
        "scrn",
        "canvas",
        "scrn",
        "canvas",
        "ob",
        "scrn",
        "canvas",
        "scrn",
        "canvas",
        "ob",
        "ob",
        "canvas",
        "scrn",
        "canvas",
        "canvas",
        "scrn",
        "ob",
        "canvas",
        "scrn",
        "canvas",
        "canvas",
        "scrn",
        "a",
        "b",
        "resetMap",
        "c",
        "z",
        "sum",
        "product",
        "z",
        "z",
        "c",
        "julia",
        "a",
        "canvas",
        "a",
        "detail",
        "b",
        "canvas",
        "b",
        "detail",
        "a",
        "b",
        "a",
        "b",
        "iterate",
        "juliaC",
        "a",
        "b",
        "a",
        "b",
        "abs2",
        "a",
        "b",
        "a",
        "b",
        "fillPoint",
        "a",
        "b",
        "a",
        "canvas",
        "a",
        "detail",
        "b",
        "canvas",
        "b",
        "detail",
        "a",
        "b",
        "scrn",
        "a",
        "b",
        "a",
        "b",
        "iterate",
        "point",
        "point",
        "a",
        "b",
        "a",
        "b",
        "abs2",
        "a",
        "b",
        "a",
        "b",
        "fillPoint",
        "a",
        "b",
        "julia",
        "a",
        "canvas",
        "a",
        "a",
        "b",
        "canvas",
        "b",
        "scrn",
        "a",
        "b",
        "a",
        "b",
        "point",
        "point",
        "a",
        "canvas",
        "a",
        "a",
        "b",
        "canvas",
        "b",
        "a",
        "b",
        "resetMap",
        "on_resize",
        "canvas",
        "canvas",
        "gl",
        "gl",
        "gl",
        "vert_shader",
        "gl",
        "vert_shader",
        "gl",
        "vert_shader",
        "gl",
        "alert",
        "gl",
        "vert_shader",
        "gl",
        "vert_shader",
        "gl",
        "gl",
        "gl",
        "frag_shader",
        "gl",
        "frag_shader",
        "gl",
        "frag_shader",
        "gl",
        "alert",
        "gl",
        "frag_shader",
        "gl",
        "frag_shader",
        "gl",
        "gl",
        "program",
        "vert_shader",
        "gl",
        "program",
        "frag_shader",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "alert",
        "gl",
        "program",
        "gl",
        "gl",
        "gl",
        "vertex_buffer",
        "gl",
        "gl",
        "Float32Array",
        "gl",
        "gl",
        "gl",
        "program",
        "gl",
        "gl",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "gl",
        "requestAnimationFrame",
        "draw",
        "gl",
        "gl",
        "gl",
        "t",
        "gl",
        "gl",
        "program",
        "t",
        "gl",
        "gl",
        "draw"
    ],
    "literals": [
        "\"canvas\"",
        "\"webgl\"",
        "\"Couldn't initialize WebGL.\"",
        "\"resize\"",
        "\"mousemove\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"rgb(\"",
        "\", \"",
        "\", \"",
        "\")\"",
        "#version 100\nattribute vec2 position;\nvarying vec2 pos;\n\nuniform float time;\n\nvoid main() {\n    pos = position;\n    gl_Position = vec4(position, 0, 1);\n}",
        "An error occurred compiling the shaders: ${gl.getShaderInfoLog(vert_shader)}",
        "#version 100\nprecision highp float;\nvarying vec2 pos;\n\nuniform float time;\n\nvoid main() {\n    \n    vec2 z = vec2(0, 0);\n    \n    float steps = 0.0;\n    for (int i = 0; i < 12; i++) {\n        z = vec2(z.x*z.x - z.y*z.y, 2.0*z.x*z.y) + pos;\n        if (z.x*z.x + z.y*z.y <= 4.0) steps += 1.0;\n    }\n    \n    if (z.x*z.x + z.y*z.y > 4.0) {\n        gl_FragColor = vec4(float(steps) / 10.0, 1, 1, 1);\n    } else {\n        gl_FragColor = vec4(0, 0, 0, 1);\n    }\n}",
        "An error occurred compiling the shaders: ${gl.getShaderInfoLog(frag_shader)}",
        "Unable to initialize the shader program: ${gl.getProgramInfoLog(program)}",
        "\"position\"",
        "\"position\"",
        "\"time\""
    ],
    "variables": [
        "canvas",
        "gl",
        "keys",
        "colors",
        "colorCycle",
        "c",
        "a",
        "scrn",
        "juliaC",
        "mandelbrotZ",
        "julia",
        "detail",
        "fillPoint",
        "reload",
        "iterate",
        "step",
        "a",
        "b",
        "a",
        "b",
        "point",
        "resetMap",
        "a",
        "b",
        "point",
        "a",
        "b",
        "mouse",
        "vert_shader",
        "frag_shader",
        "program",
        "vertex_buffer",
        "t"
    ],
    "comments": [
        "color setup 1 (default)",
        "color setup 2",
        "p frame",
        "o frame",
        "new frame goes here",
        "window.addEventListener(\"resize\", \n\tfunction() {\n\t\tcanvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\t}\n);",
        "min about 4e-14",
        "ctx.fillStyle = colorMap(map[a][b].step);",
        "ctx.fillRect(a, b, detail, detail);",
        "ctx.fillStyle = \"#000000\";",
        "ctx.fillRect(0, 0, canvas.width, canvas.height);",
        "count",
        "type",
        "normalize",
        "elements to stride over",
        "start offset",
        "gl.enable(gl.DEPTH_TEST);",
        "gl.depthFunc(gl.LEQUAL);",
        "step();"
    ],
    "docstrings": [],
    "functions": [
        "on_resize",
        "cubicLerp",
        "antiLerp",
        "sum",
        "product",
        "abs2",
        "colorMap",
        "draw"
    ],
    "classes": []
}