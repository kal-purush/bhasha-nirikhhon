{
    "identifiers": [
        "DeskMotion",
        "Data",
        "DeskMotion",
        "Models",
        "DeskMotion",
        "Services",
        "Microsoft",
        "EntityFrameworkCore",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "Microsoft",
        "Extensions",
        "Logging",
        "Moq",
        "DeskMotion",
        "Tests",
        "Services",
        "Mock",
        "HttpClient",
        "Mock",
        "DeskService",
        "Mock",
        "ILogger",
        "DeskDataUpdater",
        "_httpClientMock",
        "Mock",
        "HttpClient",
        "_deskServiceMock",
        "Mock",
        "DeskService",
        "_httpClientMock",
        "_loggerMock",
        "Mock",
        "ILogger",
        "DeskDataUpdater",
        "ServiceCollection",
        "_",
        "services",
        "AddDbContext",
        "ApplicationDbContext",
        "options",
        "UseInMemoryDatabase",
        "_serviceProvider",
        "services",
        "BuildServiceProvider",
        "Fact",
        "Desk",
        "MacAddress",
        "IsLatest",
        "_",
        "_deskServiceMock",
        "Setup",
        "ds",
        "GetDeskIdsAsync",
        "ReturnsAsync",
        "deskIds",
        "_",
        "_deskServiceMock",
        "Setup",
        "ds",
        "GetDeskAsync",
        "ReturnsAsync",
        "deskData",
        "_",
        "_deskServiceMock",
        "Setup",
        "ds",
        "GetDeskAsync",
        "ReturnsAsync",
        "Desk",
        "MacAddress",
        "IsLatest",
        "DeskDataUpdater",
        "_deskServiceMock",
        "_serviceProvider",
        "_loggerMock",
        "CancellationTokenSource",
        "cancellationTokenSource",
        "CancelAfter",
        "TimeSpan",
        "FromSeconds",
        "deskDataUpdater",
        "StartAsync",
        "cancellationTokenSource",
        "Token",
        "_serviceProvider",
        "CreateScope",
        "scope",
        "ServiceProvider",
        "GetRequiredService",
        "ApplicationDbContext",
        "dbContext",
        "DeskMetadata",
        "ToListAsync",
        "dbContext",
        "Desks",
        "ToListAsync",
        "Assert",
        "Equal",
        "metadataList",
        "Count",
        "Assert",
        "Equal",
        "desks",
        "Count",
        "Assert",
        "All",
        "desks",
        "Assert",
        "d",
        "IsLatest",
        "Fact",
        "_",
        "_deskServiceMock",
        "Setup",
        "ds",
        "GetDeskIdsAsync",
        "ThrowsAsync",
        "DeskDataUpdater",
        "_deskServiceMock",
        "_serviceProvider",
        "_loggerMock",
        "CancellationTokenSource",
        "cancellationTokenSource",
        "CancelAfter",
        "TimeSpan",
        "FromSeconds",
        "deskDataUpdater",
        "StartAsync",
        "cancellationTokenSource",
        "Token",
        "_loggerMock",
        "Verify",
        "logger",
        "Log",
        "LogLevel",
        "It",
        "IsAny",
        "EventId",
        "It",
        "Is",
        "It",
        "IsAnyType",
        "state",
        "t",
        "state",
        "ToString",
        "Contains",
        "It",
        "Is",
        "ex",
        "Message",
        "Contains",
        "It",
        "IsAny",
        "Func",
        "It",
        "IsAnyType",
        "Times",
        "Once"
    ],
    "literals": [
        "\"TestDatabase\"",
        "\"desk1\"",
        "\"desk2\"",
        "\"desk1\"",
        "\"desk1\"",
        "\"desk2\"",
        "\"desk2\"",
        "\"Test Exception\"",
        "\"Error updating desk data\"",
        "\"Test Exception\""
    ],
    "variables": [
        "_httpClientMock",
        "_deskServiceMock",
        "_loggerMock",
        "IServiceProvider",
        "_serviceProvider",
        "services",
        "deskIds",
        "deskData",
        "deskDataUpdater",
        "cancellationTokenSource",
        "scope",
        "dbContext",
        "metadataList",
        "desks",
        "deskDataUpdater",
        "cancellationTokenSource"
    ],
    "comments": [
        "Copyright 2024 PET Group16",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"):",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "https://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert"
    ],
    "docstrings": [],
    "functions": [
        "DeskDataUpdaterTests",
        "ExecuteAsync_UpdatesDeskData",
        "ExecuteAsync_HandlesExceptionGracefully"
    ],
    "classes": [
        "DeskDataUpdaterTests"
    ]
}