{
    "identifiers": [
        "EventHubAggregatorToHBaseTopology",
        "Common",
        "Microsoft",
        "SCP",
        "Newtonsoft",
        "Json",
        "Linq",
        "Collections",
        "Collections",
        "Generic",
        "Configuration",
        "Diagnostics",
        "IO",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "EventHubAggregatorToHBaseTopology",
        "Bolts",
        "ISCPBolt",
        "Context",
        "context",
        "parms",
        "context",
        "context",
        "Type",
        "Type",
        "inputSchema",
        "Add",
        "Constants",
        "DEFAULT_STREAM_ID",
        "Type",
        "Type",
        "Type",
        "outputSchema",
        "Add",
        "Constants",
        "DEFAULT_STREAM_ID",
        "AggregatedTupleFields",
        "context",
        "DeclareComponentSchema",
        "ComponentStreamSchema",
        "inputSchema",
        "outputSchema",
        "context",
        "DeclareCustomizedDeserializer",
        "CustomizedInteropJSONDeserializer",
        "Initialize",
        "parms",
        "parms",
        "appConfig",
        "AppConfig",
        "PrimaryKey",
        "appConfig",
        "PrimaryKey",
        "SecondaryKey",
        "appConfig",
        "SecondaryKey",
        "IsNullOrWhiteSpace",
        "PrimaryKey",
        "IsNullOrWhiteSpace",
        "SecondaryKey",
        "Context",
        "Logger",
        "Info",
        "PrimaryKey",
        "SecondaryKey",
        "Context",
        "Logger",
        "Info",
        "Context",
        "Config",
        "stormConf",
        "ContainsKey",
        "Context",
        "Config",
        "stormConf",
        "Context",
        "Logger",
        "Info",
        "Context",
        "Config",
        "stormConf",
        "ContainsKey",
        "Context",
        "Config",
        "stormConf",
        "globalstopwatch",
        "Stopwatch",
        "globalstopwatch",
        "Start",
        "emitstopwatch",
        "Stopwatch",
        "emitstopwatch",
        "Start",
        "SCPTuple",
        "last_receive_count",
        "global_receive_count",
        "GetValue",
        "inputeventdata",
        "JObject",
        "Parse",
        "inputeventdata",
        "token",
        "SelectToken",
        "appConfig",
        "TimestampField",
        "TryParse",
        "timestampvalue",
        "timestamp",
        "timestamp",
        "Floor",
        "appConfig",
        "AggregationWindow",
        "token",
        "SelectToken",
        "PrimaryKey",
        "Utilities",
        "DEFAULT_VALUE",
        "token",
        "SelectToken",
        "SecondaryKey",
        "Utilities",
        "DEFAULT_VALUE",
        "Aggregate",
        "aggregationTimestamp",
        "primarykeyvalue",
        "secondarykeyvalue",
        "context",
        "Ack",
        "ex",
        "global_error_count",
        "Context",
        "Logger",
        "ex",
        "ToString",
        "context",
        "Fail",
        "aggregationTimestamp",
        "primarykeyvalue",
        "secondarykeyvalue",
        "value",
        "current_cache_size",
        "aggregatedCounts",
        "ContainsKey",
        "aggregationTimestamp",
        "aggregatedCounts",
        "aggregationTimestamp",
        "ContainsKey",
        "primarykeyvalue",
        "aggregatedCounts",
        "aggregationTimestamp",
        "primarykeyvalue",
        "ContainsKey",
        "secondarykeyvalue",
        "aggregatedCounts",
        "aggregationTimestamp",
        "primarykeyvalue",
        "secondarykeyvalue",
        "value",
        "current_cache_size",
        "aggregatedCounts",
        "aggregationTimestamp",
        "primarykeyvalue",
        "Add",
        "secondarykeyvalue",
        "value",
        "newsecondaryaggregation",
        "Add",
        "secondarykeyvalue",
        "value",
        "aggregatedCounts",
        "aggregationTimestamp",
        "Add",
        "primarykeyvalue",
        "newsecondaryaggregation",
        "newsecondaryaggregation",
        "Add",
        "secondarykeyvalue",
        "value",
        "newprimaryaggregation",
        "Add",
        "primarykeyvalue",
        "newsecondaryaggregation",
        "aggregatedCounts",
        "Add",
        "aggregationTimestamp",
        "newprimaryaggregation",
        "EmitAggregations",
        "Context",
        "Logger",
        "Info",
        "last_receive_count",
        "last_receive_count",
        "last_emit_in_secs",
        "last_emit_count",
        "last_emit_count",
        "last_emit_in_secs",
        "last_error_count",
        "last_receive_count",
        "last_emit_count",
        "last_error_count",
        "global_receive_count",
        "Context",
        "Logger",
        "Info",
        "current_cache_size",
        "aggregationTimestamp",
        "globalstopwatch",
        "Elapsed",
        "TotalSeconds",
        "Context",
        "Logger",
        "Info",
        "global_receive_count",
        "global_receive_count",
        "global_emit_in_secs",
        "global_emit_count",
        "global_emit_count",
        "global_emit_in_secs",
        "global_error_count",
        "Context",
        "Logger",
        "Info",
        "Process",
        "GetCurrentProcess",
        "WorkingSet64",
        "Process",
        "GetCurrentProcess",
        "PeakWorkingSet64",
        "Process",
        "GetCurrentProcess",
        "PrivateMemorySize64",
        "EmitAggregations",
        "topN",
        "emitstopwatch",
        "Elapsed",
        "appConfig",
        "AggregationWindow",
        "UtcNow",
        "Floor",
        "appConfig",
        "AggregationWindow",
        "Subtract",
        "appConfig",
        "EmitWindow",
        "dtkey",
        "aggregatedCounts",
        "Keys",
        "dtkey",
        "emitime",
        "pkey",
        "aggregatedCounts",
        "dtkey",
        "Keys",
        "topN",
        "aggregatedCounts",
        "dtkey",
        "pkey",
        "OrderByDescending",
        "r",
        "Value",
        "Take",
        "topN",
        "ToList",
        "row",
        "rows",
        "context",
        "Emit",
        "Constants",
        "DEFAULT_STREAM_ID",
        "Values",
        "dtkey",
        "pkey",
        "row",
        "Key",
        "row",
        "Value",
        "global_emit_count",
        "Context",
        "Logger",
        "Info",
        "dtkey",
        "pkey",
        "row",
        "Key",
        "row",
        "Value",
        "skey",
        "aggregatedCounts",
        "dtkey",
        "pkey",
        "Keys",
        "context",
        "Emit",
        "Constants",
        "DEFAULT_STREAM_ID",
        "Values",
        "dtkey",
        "pkey",
        "skey",
        "aggregatedCounts",
        "dtkey",
        "pkey",
        "skey",
        "global_emit_count",
        "Context",
        "Logger",
        "Info",
        "dtkey",
        "pkey",
        "skey",
        "aggregatedCounts",
        "dtkey",
        "pkey",
        "skey",
        "global_emit_count",
        "aggregatedCounts",
        "dtkey",
        "pkey",
        "Count",
        "last_emit_count",
        "aggregatedCounts",
        "dtkey",
        "pkey",
        "Count",
        "current_cache_size",
        "aggregatedCounts",
        "dtkey",
        "pkey",
        "Count",
        "keystoremove",
        "Add",
        "dtkey",
        "key",
        "keystoremove",
        "aggregatedCounts",
        "Remove",
        "key",
        "last_emit_in_secs",
        "emitstopwatch",
        "Elapsed",
        "TotalSeconds",
        "emitstopwatch",
        "Restart",
        "last_emit_count",
        "ex",
        "last_error_count",
        "global_error_count",
        "Context",
        "Logger",
        "ex",
        "ToString",
        "Context",
        "context",
        "parms",
        "EventAggregator",
        "context",
        "parms",
        "Type",
        "Type"
    ],
    "literals": [
        "\"PrimaryKey or SecondaryKey cannot be null.\"",
        "\"PrimaryKey = {0} SecondaryKey = {1}\"",
        "\"primary.key = {0}\"",
        "\"primary.key\"",
        "\"primary.key\"",
        "\"not found\"",
        "\"secondary.key = {0}\"",
        "\"secondary.key\"",
        "\"secondary.key\"",
        "\"not found\"",
        "\"Events Summary (Last Window): \"",
        "\"Received = \"",
        "\" (\"",
        "\" events/sec)\"",
        "\", Emitted = \"",
        "\" (\"",
        "\" events/sec)\"",
        "\", Errors = \"",
        "\"Current Cache Size = {0}, Last received event aggregation timestamp = {1}\"",
        "\"Events Summary (Global): \"",
        "\"Received = \"",
        "\" (\"",
        "\" events/sec)\"",
        "\", Emitted = \"",
        "\" (\"",
        "\" events/sec)\"",
        "\", Errors = \"",
        "\"Process Info: \"",
        "\"WorkingSet64 = \"",
        "\", PeakWorkingSet64 = \"",
        "\", PrivateMemorySize64 = \"",
        "\"Last aggregation tuple emitted: DateTime = {0} PrimaryKey = {1} SecondaryKey = {2} AggregatedValue = {3}\"",
        "\"Last aggregation tuple emitted: DateTime = {0} PrimaryKey = {1} SecondaryKey = {2} AggregatedValue = {3}\""
    ],
    "variables": [
        "Context",
        "context",
        "AppConfig",
        "appConfig",
        "global_error_count",
        "global_receive_count",
        "global_emit_count",
        "last_error_count",
        "last_receive_count",
        "last_emit_count",
        "last_emit_in_secs",
        "current_cache_size",
        "aggregatedCounts",
        "PrimaryKey",
        "SecondaryKey",
        "Stopwatch",
        "globalstopwatch",
        "Stopwatch",
        "emitstopwatch",
        "inputSchema",
        "outputSchema",
        "inputeventdata",
        "JToken",
        "token",
        "timestampvalue",
        "timestamp",
        "result",
        "aggregationTimestamp",
        "primarykeyvalue",
        "secondarykeyvalue",
        "newsecondaryaggregation",
        "newsecondaryaggregation",
        "newprimaryaggregation",
        "global_emit_in_secs",
        "emitime",
        "keystoremove",
        "rows",
        "AggregatedTupleFields"
    ],
    "comments": [
        "This is the primary bolt that starts to count the primary key and secondary key combinations over time",
        "The aggregation example here is of counts, which can be easily extended to Sum without lot of work,",
        "you just have to deserialize the field as a number than count on it.",
        "</summary>",
        "This variable helps in tracking the size of aggregations you have in memory to help while debugging and logging",
        "</summary>",
        "The primary key of your aggregations, that is count the occurences of SecondaryKey for each primary key during a aggregation window.",
        "Example 1: Consider a Web Result Log where Client IP = PrimaryKey, Http Status = SecondaryKey,",
        "this way for each client you will get how many times a particular status code occured.",
        "Example 2: Consider the opposite example where Http Status = PrimaryKey, Client IP = SecondaryKey,",
        "this way for each http status type you will get how many times that client IP occured.",
        "Adding aggregators for each of above examples in same topology can provide you easy reverse lookups.",
        "The Example 2 extends for a great addition to a Ranking Bolt as Ranking Bolt will provide you top clients that hit a particular http status code.",
        "</summary>",
        "The secondary key of your aggregations, this is counted for each primary key for your aggregations.",
        "</summary>",
        "This assumes that you wish to respect the timestamp field in your tuple",
        "If you dont care on the order or timestamp of tuple, you can send a DateTime.UtcNow i.e. the receive time",
        "This will allow you to aggregate based on current time than original event time.",
        "This computes an additional timestamp which is floored to your aggregation window",
        "This acts as an alternative strategy to TickTuples as this allows you to process multiple windows at same time",
        "and events arriving slightly out of order. For events that are huge apart i.e.",
        "do not even fit in multiple AggregationWindows can potentially overwrite your previous aggregations",
        "if you dont handle it properly later in your topology by doing right merges.",
        "Based on your topology, you can choose which strategy suits you better",
        "Aggregate the current input. The final argument can actually be a value of any field in your input,",
        "allowing you to use this aggregation as sum than count.",
        "We emit the aggregated tuples as part of aggregation process and expiry of the window.",
        "Ack the tuple to the spout so that the spout can move forward and remove the tuple from its cache.",
        "This is mandatory requirement if you use the default constructor for EventHubSpout as it uses the ack based PartitionManager",
        "Fail the tuple in spout if you were not able to deserialize or emit it.",
        "",
        "</summary>",
        "<returns></returns>",
        "",
        "</summary>",
        "<param name=\"topN\"></param>",
        "<returns></returns>",
        "AggregationTimestamp",
        "PrimaryKey",
        "SecondaryKey",
        "AggregatedValue"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "EventAggregator",
        "EventAggregator",
        "Initialize",
        "Execute",
        "Aggregate",
        "EmitAggregations",
        "EmitAggregations",
        "EventAggregator",
        "Get"
    ],
    "classes": [
        "EventAggregator"
    ]
}