{
    "identifiers": [
        "sys",
        "fileName",
        "number2Examine",
        "open",
        "fileName",
        "lin",
        "handle",
        "counter",
        "counter",
        "counter",
        "lin",
        "strip",
        "split",
        "arr",
        "arr",
        "arr",
        "strandA",
        "arr",
        "arr",
        "arr",
        "strandB",
        "chrCumulativeLengthsDictionary",
        "chrA",
        "posA",
        "chrCumulativeLengthsDictionary",
        "chrB",
        "posB",
        "absoluteA",
        "absoluteB",
        "signA",
        "absoluteA",
        "signB",
        "absoluteB",
        "signB",
        "absoluteB",
        "signA",
        "absoluteA",
        "key",
        "dict2Return",
        "dict2Return",
        "key",
        "counter",
        "number2Examine",
        "handle",
        "close",
        "dict2Return",
        "counter",
        "toReturn",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "sys",
        "argv",
        "sys",
        "argv",
        "processDetectionsFile",
        "detectionsFileName",
        "numberToExamine",
        "processDetectionsFile",
        "detectionsFileName2",
        "numberToExamine",
        "len",
        "dictionary",
        "keys",
        "totalNumber",
        "len",
        "dictionary",
        "keys",
        "totalNumber",
        "k",
        "dictionary",
        "mone",
        "mone",
        "dictionary",
        "k",
        "observed",
        "totalNumber",
        "k",
        "dictionary2",
        "dictionary2",
        "k",
        "observed2",
        "totalNumber",
        "p_of_k",
        "p_of_k_2",
        "sum",
        "p_of_k_square",
        "sum"
    ],
    "literals": [
        "\"chrI\"",
        "\"chrII\"",
        "\"chrIII\"",
        "\"chrIV\"",
        "\"chrV\"",
        "\"chrX\"",
        "\"chrM\"",
        "\"chrI\"",
        "\"chrII\"",
        "\"chrIII\"",
        "\"chrIV\"",
        "\"chrV\"",
        "\"chrX\"",
        "\"chrM\"",
        "\"r\"",
        "\"Processed \"",
        "\" lines in  detections file\"",
        "'True'",
        "'True'",
        "\"\"",
        "\"ERROR in the input to the python script call\"",
        "\"ERROR, please use the path to the detections file as first parameter to this function\"",
        "\"ERROR in the input to the python script call\"",
        "\"\"",
        "\"Number of unique entries: \"",
        "\"Nuber of total entries: \"",
        "\"Number of second unique entries: \"",
        "\"Nuber of second total entries: \"",
        "\"Another million used\"",
        "\"The sigma of squared probabilities = \""
    ],
    "variables": [
        "chrLengthDict",
        "chrCumulativeLengthsDictionary",
        "dict2Return",
        "handle",
        "counter",
        "arr",
        "chrA",
        "posA",
        "strandA",
        "signA",
        "signA",
        "chrB",
        "posB",
        "strandB",
        "signB",
        "signB",
        "absoluteA",
        "absoluteB",
        "key",
        "key",
        "dict2Return",
        "key",
        "toReturn",
        "detectionsFileName",
        "detectionsFileName2",
        "numberToExamine",
        "dictionary",
        "totalNumber",
        "dictionary2",
        "totalNumber",
        "sum",
        "mone",
        "observed",
        "p_of_k",
        "observed2",
        "p_of_k_2",
        "p_of_k_square"
    ],
    "comments": [
        "print \"Scanned \"+str(counter)+\" entries\"",
        "else:",
        "print \"NOT PRESENT!!! \" + str(k)",
        "if sum>0:",
        "break"
    ],
    "docstrings": [
        "'''\nFunction processDetectionsFile takes as parameter the path to the file containing the detections (currently not filtered\nDetections would contain chunks from the reference genome aling with junctions.\nEach detection consists of chrA posA strandA and same for the other side of the detection (chrB, posB, strandB)\nWe would convert each side into ABSOLUTE numerical value (using the chromosome lengths etc. and then we will make a pair in which we will\nstore at the first place the smaller ABSOLUTE value, and the sign of th evalue will be dictated by the strandidness\nPair of two numbers will be the key to the dictionary of different detections.\nThe dictionary will store the number of occurrences of such a \"pair\".\nM03109:43:000000000-ACGWU:1:1101:10000:10610\tchrV\t3158715\tFalse\tTAGATGAATTCCATCTGGAATCGGGTCGACC\tchrV\t3158588\tTrue\tCGTTTCGACAATCTCCTTCTTCATGC\n\n'''"
    ],
    "functions": [
        "processDetectionsFile"
    ],
    "classes": []
}