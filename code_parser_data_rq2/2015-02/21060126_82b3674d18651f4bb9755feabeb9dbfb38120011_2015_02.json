{
    "identifiers": [
        "ts",
        "TokenClass",
        "ts",
        "require",
        "registry",
        "config",
        "require",
        "atom",
        "AtomTSBaseGrammar",
        "registry",
        "registry",
        "line",
        "ruleStack",
        "firstLine",
        "line",
        "ruleStack",
        "firstLine",
        "response",
        "ts",
        "ts",
        "line",
        "ruleStack",
        "firstLine",
        "firstLine",
        "ts",
        "ruleStack",
        "finalLexState",
        "ruleStack",
        "line",
        "finalLexState",
        "ruleStack",
        "output",
        "output",
        "classificationResults",
        "ruleStack",
        "classificationResults",
        "info",
        "line",
        "tokenStartPosition",
        "info",
        "totalLength",
        "totalLength",
        "info",
        "getAtomStyleForToken",
        "info",
        "style",
        "atomToken",
        "token",
        "ts",
        "token",
        "TokenClass",
        "TokenClass",
        "TokenClass",
        "TokenClass",
        "TokenClass",
        "TokenClass",
        "TokenClass",
        "TokenClass",
        "TokenClass"
    ],
    "literals": [
        "'typescript'",
        "'atom'",
        "\"/node_modules/first-mate/lib/grammar.js\"",
        "\"TypeScript\"",
        "\"source.ts\"",
        "'ts'",
        "'str'",
        "string",
        "\"\"",
        "\"source.ts\"",
        "\"source.ts\"",
        "string",
        "string",
        "'punctuation'",
        "'static'",
        "'public'",
        "'private'",
        "'export'",
        "'get'",
        "'set'",
        "'support.function'",
        "'class'",
        "'module'",
        "'var'",
        "'storage.modifier'",
        "'function'",
        "'storage.type.function'",
        "'string'",
        "'number'",
        "'void'",
        "'boolean'",
        "'keyword'",
        "'keyword'",
        "'keyword.operator.js'",
        "'comment'",
        "'whitespace'",
        "''",
        "'identifier'",
        "'constant.numeric'",
        "'string'",
        "'constant.character'"
    ],
    "variables": [
        "atom$",
        "response",
        "finalLexState",
        "output",
        "classificationResults",
        "totalLength",
        "tokens",
        "tokenStartPosition",
        "totalLength",
        "style",
        "atomToken"
    ],
    "comments": [
        "ts:ref=globals",
        "<reference path=\"../../globals.ts\"/> ///ts:ref:generated",
        "Help:",
        "https://github.com/fdecampredon/brackets-typescript/blob/master/src/main/mode.ts",
        "https://github.com/p-e-w/language-javascript-semantic/blob/master/lib/javascript-semantic-grammar.coffee",
        "This should be",
        "{Grammar} = require \"first-mate\"",
        "but doing so throws \"Error: Cannot find module 'first-mate'\"",
        "include: 'source.js' // Just makes us slower :P",
        "Select automatically",
        "",
        "THE REMAINING CODE IS SPECIFIC TO US ////////////////////////////////////////",
        "",
        "TODO: collapse whitespace + make state persistent using stack",
        "Atom's Token",
        "use finalLexState",
        "TypeScript classifier returns empty for \"\". But Atom wants to have some Token",
        "TODO: collapse Whitespace",
        "NOTE: best way I have found for these is to just look at theme \"less\" files",
        "Hacky fix for https://github.com/Microsoft/TypeScript/issues/1997",
        "This should not happen"
    ],
    "docstrings": [],
    "functions": [
        "tokenizeLine",
        "getAtomTokensForLine",
        "getAtomStyleForToken"
    ],
    "classes": [
        "AtomTSBaseGrammar",
        "TypeScriptSemanticGrammar"
    ]
}