{
    "identifiers": [
        "globals",
        "name",
        "name",
        "root",
        "name",
        "name",
        "parts",
        "root",
        "name",
        "parts",
        "name",
        "parts",
        "i",
        "length",
        "i",
        "part",
        "parts",
        "i",
        "part",
        "results",
        "part",
        "part",
        "results",
        "part",
        "results",
        "path",
        "path",
        "path",
        "name",
        "dirname",
        "path",
        "expand",
        "dir",
        "name",
        "globals",
        "absolute",
        "path",
        "name",
        "definition",
        "name",
        "cache",
        "name",
        "definition",
        "localRequire",
        "name",
        "name",
        "loaderPath",
        "expand",
        "name",
        "loaderPath",
        "loaderPath",
        "has",
        "cache",
        "path",
        "cache",
        "path",
        "has",
        "modules",
        "path",
        "initModule",
        "path",
        "modules",
        "path",
        "expand",
        "path",
        "has",
        "cache",
        "dirIndex",
        "cache",
        "dirIndex",
        "has",
        "modules",
        "dirIndex",
        "initModule",
        "dirIndex",
        "modules",
        "dirIndex",
        "name",
        "loaderPath",
        "bundle",
        "fn",
        "bundle",
        "key",
        "bundle",
        "has",
        "bundle",
        "key",
        "modules",
        "key",
        "bundle",
        "key",
        "modules",
        "bundle",
        "fn",
        "item",
        "modules",
        "has",
        "modules",
        "item",
        "result",
        "item",
        "result",
        "globals",
        "require",
        "globals",
        "define",
        "globals",
        "define",
        "globals",
        "globals",
        "Backbone",
        "Backbone",
        "SafeString",
        "__exports__",
        "SafeString",
        "__exports__",
        "__dependency1__",
        "chr",
        "escape",
        "chr",
        "obj",
        "value",
        "key",
        "value",
        "value",
        "key",
        "obj",
        "key",
        "value",
        "key",
        "__exports__",
        "extend",
        "__exports__",
        "toString",
        "value",
        "value",
        "isFunction",
        "isFunction",
        "value",
        "value",
        "toString",
        "value",
        "__exports__",
        "isFunction",
        "value",
        "value",
        "value",
        "toString",
        "value",
        "__exports__",
        "isArray",
        "SafeString",
        "possible",
        "badChars",
        "escapeChar",
        "__exports__",
        "escapeExpression",
        "value",
        "value",
        "value",
        "isArray",
        "value",
        "value",
        "__exports__",
        "isEmpty",
        "__exports__",
        "__module3__",
        "message",
        "node",
        "node",
        "node",
        "line",
        "node",
        "message",
        "line",
        "node",
        "message",
        "idx",
        "errorProps",
        "idx",
        "errorProps",
        "idx",
        "tmp",
        "errorProps",
        "idx",
        "line",
        "line",
        "node",
        "__exports__",
        "__exports__",
        "__dependency1__",
        "__dependency2__",
        "__exports__",
        "VERSION",
        "__exports__",
        "COMPILER_REVISION",
        "__exports__",
        "REVISION_CHANGES",
        "Utils",
        "Utils",
        "Utils",
        "helpers",
        "partials",
        "helpers",
        "partials",
        "registerDefaultHelpers",
        "__exports__",
        "HandlebarsEnvironment",
        "HandlebarsEnvironment",
        "HandlebarsEnvironment",
        "logger",
        "log",
        "name",
        "fn",
        "inverse",
        "toString",
        "name",
        "objectType",
        "inverse",
        "fn",
        "Utils",
        "name",
        "inverse",
        "fn",
        "inverse",
        "name",
        "fn",
        "name",
        "toString",
        "name",
        "objectType",
        "Utils",
        "name",
        "name",
        "instance",
        "instance",
        "arg",
        "arguments",
        "arg",
        "instance",
        "context",
        "options",
        "options",
        "options",
        "isFunction",
        "context",
        "context",
        "context",
        "context",
        "fn",
        "context",
        "context",
        "inverse",
        "isArray",
        "context",
        "context",
        "instance",
        "context",
        "options",
        "inverse",
        "fn",
        "context",
        "instance",
        "context",
        "options",
        "options",
        "options",
        "isFunction",
        "context",
        "context",
        "context",
        "options",
        "data",
        "createFrame",
        "options",
        "context",
        "context",
        "isArray",
        "context",
        "context",
        "i",
        "j",
        "i",
        "data",
        "data",
        "i",
        "data",
        "i",
        "data",
        "i",
        "context",
        "ret",
        "ret",
        "fn",
        "context",
        "i",
        "data",
        "key",
        "context",
        "context",
        "key",
        "data",
        "data",
        "key",
        "data",
        "i",
        "data",
        "i",
        "ret",
        "ret",
        "fn",
        "context",
        "key",
        "data",
        "i",
        "i",
        "ret",
        "inverse",
        "ret",
        "instance",
        "conditional",
        "options",
        "isFunction",
        "conditional",
        "conditional",
        "conditional",
        "options",
        "conditional",
        "Utils",
        "conditional",
        "options",
        "options",
        "instance",
        "conditional",
        "options",
        "instance",
        "conditional",
        "options",
        "options",
        "options",
        "instance",
        "context",
        "options",
        "isFunction",
        "context",
        "context",
        "context",
        "Utils",
        "context",
        "options",
        "context",
        "instance",
        "context",
        "options",
        "options",
        "options",
        "parseInt",
        "options",
        "instance",
        "level",
        "context",
        "level",
        "obj",
        "logger",
        "level",
        "logger",
        "level",
        "method",
        "method",
        "obj",
        "__exports__",
        "logger",
        "level",
        "obj",
        "logger",
        "level",
        "obj",
        "__exports__",
        "log",
        "Utils",
        "obj",
        "obj",
        "__exports__",
        "createFrame",
        "__exports__",
        "__module2__",
        "__module4__",
        "__dependency1__",
        "__dependency2__",
        "__dependency3__",
        "__dependency3__",
        "__dependency3__",
        "compilerInfo",
        "compilerInfo",
        "compilerInfo",
        "compilerRevision",
        "currentRevision",
        "compilerRevision",
        "currentRevision",
        "REVISION_CHANGES",
        "currentRevision",
        "REVISION_CHANGES",
        "compilerRevision",
        "runtimeVersions",
        "compilerVersions",
        "compilerInfo",
        "__exports__",
        "checkRevision",
        "templateSpec",
        "env",
        "env",
        "partial",
        "name",
        "context",
        "helpers",
        "partials",
        "data",
        "env",
        "arguments",
        "result",
        "result",
        "env",
        "helpers",
        "partials",
        "data",
        "partials",
        "name",
        "env",
        "partial",
        "data",
        "env",
        "partials",
        "name",
        "context",
        "options",
        "name",
        "Utils",
        "invokePartialWrapper",
        "i",
        "fn",
        "data",
        "i",
        "data",
        "programWrapper",
        "program",
        "i",
        "fn",
        "data",
        "programWrapper",
        "programWrapper",
        "i",
        "program",
        "i",
        "fn",
        "programWrapper",
        "param",
        "common",
        "param",
        "common",
        "param",
        "common",
        "param",
        "common",
        "ret",
        "Utils",
        "ret",
        "common",
        "Utils",
        "ret",
        "param",
        "ret",
        "env",
        "env",
        "context",
        "options",
        "options",
        "options",
        "options",
        "options",
        "env",
        "options",
        "helpers",
        "options",
        "partials",
        "options",
        "templateSpec",
        "container",
        "context",
        "helpers",
        "partials",
        "options",
        "options",
        "env",
        "container",
        "result",
        "__exports__",
        "template",
        "i",
        "fn",
        "data",
        "arguments",
        "context",
        "options",
        "options",
        "options",
        "fn",
        "context",
        "options",
        "data",
        "args",
        "prog",
        "i",
        "prog",
        "args",
        "prog",
        "__exports__",
        "programWithDepth",
        "i",
        "fn",
        "data",
        "context",
        "options",
        "options",
        "options",
        "fn",
        "context",
        "options",
        "data",
        "prog",
        "i",
        "prog",
        "prog",
        "__exports__",
        "program",
        "partial",
        "name",
        "context",
        "helpers",
        "partials",
        "data",
        "helpers",
        "partials",
        "data",
        "partial",
        "name",
        "partial",
        "partial",
        "context",
        "options",
        "__exports__",
        "invokePartial",
        "__exports__",
        "noop",
        "__exports__",
        "__module2__",
        "__module4__",
        "__module1__",
        "__dependency1__",
        "__dependency2__",
        "__dependency3__",
        "__dependency4__",
        "__dependency5__",
        "Utils",
        "hb",
        "hb",
        "SafeString",
        "hb",
        "hb",
        "Utils",
        "hb",
        "runtime",
        "hb",
        "spec",
        "runtime",
        "spec",
        "hb",
        "hb",
        "create",
        "Handlebars",
        "create",
        "__exports__",
        "Handlebars",
        "__exports__",
        "__module1__",
        "__module3__",
        "__module4__",
        "__module2__",
        "__module5__",
        "__module0__"
    ],
    "literals": [
        "'use strict'",
        "'undefined'",
        "'function'",
        "'/'",
        "'/'",
        "'/'",
        "'..'",
        "'.'",
        "''",
        "'/'",
        "'/'",
        "'/'",
        "'.'",
        "'/'",
        "'./index'",
        "'Cannot find module \"'",
        "'\" from '",
        "'\"'",
        "'\"'",
        "'object'",
        "\"use strict\"",
        "\"\"",
        "\"use strict\"",
        "\"&\"",
        "\"&amp;\"",
        "\"<\"",
        "\"&lt;\"",
        "\">\"",
        "\"&gt;\"",
        "'\"'",
        "\"&quot;\"",
        "\"'\"",
        "\"&#x27;\"",
        "\"`\"",
        "\"&#x60;\"",
        "\"&amp;\"",
        "'function'",
        "'function'",
        "'[object Function]'",
        "'object'",
        "'[object Array]'",
        "\"\"",
        "\"\"",
        "\"use strict\"",
        "'description'",
        "'fileName'",
        "'lineNumber'",
        "'message'",
        "'name'",
        "'number'",
        "'stack'",
        "' - '",
        "':'",
        "\"use strict\"",
        "\"1.3.0\"",
        "'<= 1.0.rc.2'",
        "'== 1.0.0-rc.3'",
        "'== 1.0.0-rc.4'",
        "'>= 1.0.0'",
        "'[object Object]'",
        "'Arg not supported with multiple helpers'",
        "'helperMissing'",
        "\"Missing helper: '\"",
        "\"'\"",
        "'blockHelperMissing'",
        "'each'",
        "\"\"",
        "'object'",
        "'if'",
        "'unless'",
        "'if'",
        "'with'",
        "'log'",
        "'debug'",
        "'info'",
        "'warn'",
        "'error'",
        "'undefined'",
        "\"use strict\"",
        "\"Template was precompiled with an older version of Handlebars than the current runtime. \"",
        "\"Please update your precompiler to a newer version (\"",
        "\") or downgrade your runtime to an older version (\"",
        "\").\"",
        "\"Template was precompiled with a newer version of Handlebars than the current runtime. \"",
        "\"Please update your runtime to a newer version (\"",
        "\").\"",
        "\"No environment passed to template\"",
        "\"The partial \"",
        "\" could not be compiled when running in runtime-only mode\"",
        "\"The partial \"",
        "\" could not be found\"",
        "\"\"",
        "\"use strict\""
    ],
    "variables": [
        "globals",
        "modules",
        "cache",
        "has",
        "expand",
        "results",
        "parts",
        "part",
        "i",
        "length",
        "dirname",
        "localRequire",
        "dir",
        "absolute",
        "initModule",
        "require",
        "path",
        "dirIndex",
        "define",
        "result",
        "Handlebars",
        "__module3__",
        "__exports__",
        "__module2__",
        "__exports__",
        "SafeString",
        "__dependency1__",
        "escape",
        "badChars",
        "possible",
        "toString",
        "isFunction",
        "isFunction",
        "isArray",
        "__module4__",
        "__exports__",
        "errorProps",
        "line",
        "tmp",
        "idx",
        "__module1__",
        "__exports__",
        "Utils",
        "__dependency1__",
        "__dependency2__",
        "VERSION",
        "COMPILER_REVISION",
        "REVISION_CHANGES",
        "isArray",
        "isFunction",
        "toString",
        "objectType",
        "inverse",
        "fn",
        "fn",
        "inverse",
        "i",
        "ret",
        "data",
        "j",
        "level",
        "logger",
        "method",
        "createFrame",
        "obj",
        "__module5__",
        "__exports__",
        "Utils",
        "__dependency1__",
        "__dependency2__",
        "COMPILER_REVISION",
        "REVISION_CHANGES",
        "compilerRevision",
        "currentRevision",
        "COMPILER_REVISION",
        "runtimeVersions",
        "compilerVersions",
        "invokePartialWrapper",
        "result",
        "options",
        "container",
        "programWrapper",
        "ret",
        "helpers",
        "partials",
        "result",
        "args",
        "prog",
        "prog",
        "options",
        "__module0__",
        "__exports__",
        "__dependency1__",
        "SafeString",
        "__dependency2__",
        "__dependency3__",
        "Utils",
        "__dependency4__",
        "runtime",
        "__dependency5__",
        "create",
        "hb",
        "Handlebars"
    ],
    "comments": [
        "! Brunch !",
        "!\n\n handlebars v1.3.0\n\nCopyright (C) 2011 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n@license",
        "exported Handlebars",
        "handlebars/safe-string.js",
        "Build out our basic SafeString type",
        "handlebars/utils.js",
        "jshint -W004",
        "Sourced from lodash",
        "https://github.com/bestiejs/lodash/blob/master/LICENSE.txt",
        "fallback for older versions of Chrome and Safari",
        "don't escape SafeStrings, since they're already safe",
        "Force a string conversion as this will be done by the append regardless and",
        "the regex test will do this transparently behind the scenes, causing issues if",
        "an object's to string has escaped characters in it.",
        "handlebars/exception.js",
        "Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.",
        "handlebars/base.js",
        "1.0.rc.2 is actually rev2 but doesn't report it",
        "Default behavior is to render the positive path if the value is truthy and not empty.",
        "The `includeZero` option may be set to treat the condtional as purely not empty based on the",
        "behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.",
        "State enum",
        "can be overridden in the host environment",
        "handlebars/runtime.js",
        "Use the embedded version info since the runtime doesn't know about this revision yet",
        "TODO: Remove this line and break up compilePartial",
        "Note: Using env.VM references rather than local var references throughout this section to allow",
        "for external users to override these as psuedo-supported APIs.",
        "Just add water",
        ", $depth",
        "handlebars.runtime.js",
        "globals Handlebars: true",
        "Each of these augment the Handlebars object. No need to setup here.",
        "(This is done to easily share code between commonjs and browse envs)",
        "For compatibility and usage outside of module systems, make the Handlebars object a namespace",
        "# sourceMappingURL=vendor.js.map"
    ],
    "docstrings": [],
    "functions": [
        "SafeString",
        "escapeChar",
        "extend",
        "escapeExpression",
        "isEmpty",
        "HandlebarsEnvironment",
        "registerDefaultHelpers",
        "log",
        "checkRevision",
        "template",
        "programWithDepth",
        "program",
        "invokePartial",
        "noop"
    ],
    "classes": []
}