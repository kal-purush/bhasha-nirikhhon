{
    "identifiers": [
        "define",
        "OnocTooltips",
        "OnocTooltips",
        "tooltip",
        "tooltip",
        "tooltip",
        "tooltip",
        "OnocTooltips",
        "OnocTooltips",
        "force",
        "force",
        "force",
        "OnocTooltips",
        "template",
        "target",
        "template",
        "target",
        "clientRect",
        "clientRect",
        "clientRect",
        "clientRect",
        "content",
        "x",
        "y",
        "OnocTooltips",
        "OnocTooltips",
        "element",
        "element",
        "element",
        "element",
        "elem",
        "element",
        "elem",
        "element",
        "element",
        "a",
        "element",
        "elem",
        "a",
        "element",
        "a",
        "element",
        "elem",
        "element",
        "elem",
        "OnocTooltips",
        "text",
        "text",
        "text",
        "text",
        "OnocTooltips",
        "template",
        "template",
        "template",
        "toto",
        "template",
        "template",
        "root",
        "root",
        "template",
        "level",
        "template",
        "level",
        "root",
        "level",
        "root",
        "OnocTooltips",
        "root",
        "template",
        "e",
        "template",
        "template",
        "e",
        "template",
        "e",
        "elem",
        "template",
        "e",
        "root",
        "elem",
        "root",
        "OnocTooltips"
    ],
    "literals": [
        "'main'",
        "\"div\"",
        "'tag'",
        "'div'",
        "'class'",
        "'tooltip disabled'",
        "'boolean'",
        "'class'",
        "'tooltip disabled'",
        "'class'",
        "'tooltip enabled'",
        "'style'",
        "'left:'",
        "'px;top:'",
        "'px;'",
        "\"string\"",
        "\"[onoc.tooltips] Unable to set namespace\"",
        "\"object\"",
        "\"[onoc.tooltips] can't create element\"",
        "\"string\"",
        "\"[onoc.tooltips] can't create text element\"",
        "\"object\"",
        "\"string\"",
        "\"[onoc.tooltips] Can't parse template, must be a string or an object\""
    ],
    "variables": [
        "OnocTooltips",
        "tooltip",
        "content",
        "clientRect",
        "x",
        "y",
        "elem",
        "root",
        "level",
        "template",
        "elem"
    ],
    "comments": [
        "hide and flush any existent tooltip",
        "TODO: get cursor or element position",
        "target.getBoundingClientRect()[0] + window.scrollX + window.scrollY"
    ],
    "docstrings": [
        "* This file is part of Omega Noc\n * Copyright Omega Noc (C) 2014 Omega Cube and contributors\n * Nicolas Lantoing, nicolas@omegacube.fr\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "* Manage tooltips\n     * [WIP] WORK IN PROGRESS",
        "* Create and/or return the tooltip container",
        "* Create the tooltip container",
        "* Flush tooltip",
        "* Display or hide tooltip\n     * @param {Boolean} force - If defined will force show or hide mode",
        "* Show new tooltip\n     * @param {JSON} template     - DOMTree\n     * @param {DOMElement} target - tooltip target",
        "*",
        "* Create a new element from the current namespace if any",
        "* Create a new text element from the current namespace if any",
        "* Build a DOM Structure from template\n     * @param {Array} template - DOM structure",
        "* Recursive function, append a template tree to the root element\n     * @param {DOMElement} root - Top element\n     * @param {Array} template   - DOM structure\n     * @return root"
    ],
    "functions": [],
    "classes": []
}