{
    "identifiers": [
        "alert",
        "google",
        "initialize",
        "alert",
        "google",
        "google",
        "latLng",
        "google",
        "p",
        "p",
        "paths",
        "p",
        "path",
        "paths",
        "p",
        "i",
        "i",
        "path",
        "i",
        "bounds",
        "path",
        "i",
        "bounds",
        "google",
        "latLng",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "lat",
        "arguments",
        "lng",
        "arguments",
        "arguments",
        "bounds",
        "bounds",
        "bounds",
        "latLng",
        "lat",
        "latLng",
        "lng",
        "latLng",
        "numPaths",
        "p",
        "p",
        "numPaths",
        "p",
        "path",
        "p",
        "numPoints",
        "path",
        "j",
        "numPoints",
        "i",
        "i",
        "numPoints",
        "i",
        "vertex1",
        "path",
        "i",
        "vertex2",
        "path",
        "j",
        "vertex1",
        "lng",
        "vertex2",
        "lng",
        "vertex2",
        "lng",
        "vertex1",
        "lng",
        "vertex1",
        "lng",
        "vertex1",
        "vertex2",
        "vertex1",
        "vertex2",
        "vertex1",
        "lat",
        "inPoly",
        "inPoly",
        "j",
        "i",
        "inPoly",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "arthurkill",
        "google",
        "arthurkillCoords",
        "arthurkill",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "eastriver",
        "google",
        "eastriverCoords",
        "eastriver",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "paerdegat",
        "google",
        "paerdegatCoords",
        "paerdegat",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "jamaica",
        "google",
        "jamaicaCoords",
        "jamaica",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "lisound",
        "google",
        "lisoundCoords",
        "lisound",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "upper",
        "google",
        "upperCoords",
        "upper",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "google",
        "raritan",
        "google",
        "raritanCoords",
        "raritan",
        "variable",
        "query",
        "i",
        "vars",
        "i",
        "vars",
        "i",
        "pair",
        "variable",
        "pair",
        "isWithin_site",
        "alert",
        "isWithin_site",
        "parseFloat",
        "getQueryVariable",
        "parseFloat",
        "getQueryVariable",
        "alert",
        "arthurkill",
        "fish_warning_lat",
        "fish_warning_lng",
        "alert_isWithin",
        "eastriver",
        "fish_warning_lat",
        "fish_warning_lng",
        "alert_isWithin",
        "eastriver",
        "paerdegat",
        "fish_warning_lat",
        "fish_warning_lng",
        "alert_isWithin",
        "paerdegat",
        "jamaica",
        "fish_warning_lat",
        "fish_warning_lng",
        "alert_isWithin",
        "jamaica",
        "lisound",
        "fish_warning_lat",
        "fish_warning_lng",
        "alert_isWithin",
        "lisound",
        "upper",
        "fish_warning_lat",
        "fish_warning_lng",
        "alert_isWithin",
        "upper",
        "raritan",
        "fish_warning_lat",
        "fish_warning_lng",
        "alert_isWithin",
        "raritan",
        "isWithin_arthurkill",
        "alert"
    ],
    "literals": [
        "\"raritan works\"",
        "'load'",
        "\"raritan works\"",
        "\"number\"",
        "\"number\"",
        "\"function\"",
        "\"Wrong number of inputs in google.maps.Polygon.prototype.contains.LatLng\"",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "'#FF0000'",
        "\"&\"",
        "\"=\"",
        "\"lat\"",
        "\"lng\"",
        "\"alert works\"",
        "\"arthurkill\""
    ],
    "variables": [
        "bounds",
        "paths",
        "path",
        "p",
        "i",
        "inPoly",
        "bounds",
        "lat",
        "lng",
        "numPaths",
        "p",
        "path",
        "numPoints",
        "i",
        "j",
        "vertex1",
        "vertex2",
        "arthurkill",
        "arthurkillCoords",
        "eastriver",
        "eastriverCoords",
        "paerdegat",
        "paerdegatCoords",
        "jamaica",
        "jamaicaCoords",
        "lisound",
        "lisoundCoords",
        "upper",
        "upperCoords",
        "raritan",
        "raritanCoords",
        "query",
        "vars",
        "i",
        "pair",
        "alert_isWithin",
        "fish_warning_lat",
        "fish_warning_lng",
        "isWithin_arthurkill",
        "isWithin_eastriver",
        "isWithin_paerdegat",
        "isWithin_jamaica",
        "isWithin_lisound",
        "isWithin_upper",
        "isWithin_raritan"
    ],
    "comments": [
        "Polygon contains lat/lng function",
        "Polygon getBounds extension - google-maps-extensions",
        "https://github.com/tparkin/Google-Maps-Point-in-Polygon",
        "http://code.google.com/p/google-maps-extensions/source/browse/google.maps.Polygon.getBounds.js",
        "Polygon containsLatLng - method to determine if a latLng is within a polygon",
        "Exclude points outside of bounds as there is no way they are in the poly",
        "Arguments are a pair of lat, lng variables",
        "callback = arguments[2];",
        "Raycast point in polygon method",
        "callback(inPoly);",
        "Fish warning area polygons",
        "Arthur Kill, Newark Bay and Kill Van Kull",
        "Arthur kills east point",
        "south east point",
        "north east point",
        "Arthur Kills north point",
        "East River to the Throgs Neck, Harlem, Hudson and Bronx Rivers)",
        "bottom intersection (east river)",
        "top intersection (east river)",
        "top intersection (harlem)",
        "bottom intersection (harlem)",
        "throgs neck",
        "middle of throgs",
        "Paerdegat Basin",
        "center of maguire",
        "endof mouth on right",
        "Jamaica Bay, Atlantic Ocean/Long Island South Shore, Lower NY Bay, Raritan Bay East of Wolf's Pond Park",
        "southern lower bay entrance/east sandy hook bay",
        "western sandy hook entrance",
        "west upper bay mouth",
        "east upper bay mouth",
        "center of maguire",
        "Long Island Sound",
        "throgs neck top",
        "middle of throgs",
        "Upper Bay (hudson, east, lower bay, kill van kull)",
        "carrol gardens",
        "bottom intersection (east river)",
        "liberty science center",
        "kill van kull north",
        "kill van kull south",
        "west upper bay mouth",
        "east upper bay mouth",
        "Raritan Bay West of Wolfe's Pond Park",
        "Tottenville",
        "south east bound",
        "north east bound",
        "visible: true",
        "alert(isWithin_arthurkill);",
        "alert(isWithin_eastriver);",
        "alert(isWithin_paerdegat);",
        "alert(isWithin_jamaica);",
        "alert(isWithin_lisound);",
        "alert(isWithin_upper);",
        "alert(isWithin_raritan);",
        "var isWithinPolygon = polygon.containsLatLng(lat, lng);",
        "set isWithinPolygon for each site",
        "grab params lat long and check if isWithinPolygon is true/false",
        "if isWithinPolygon is true, alert(fish is in Polygon)"
    ],
    "docstrings": [],
    "functions": [
        "initialize",
        "getQueryVariable"
    ],
    "classes": []
}