{
    "identifiers": [
        "cytoscape",
        "cytoscape",
        "cytoscape",
        "arguments",
        "$$",
        "$$",
        "options",
        "options",
        "options",
        "$$",
        "options",
        "$$",
        "options",
        "$$",
        "options",
        "$$",
        "$$",
        "arguments",
        "$$",
        "cytoscape",
        "define",
        "define",
        "define",
        "cytoscape",
        "cytoscape",
        "$$",
        "$$",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "isNaN",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$$",
        "obj",
        "$$",
        "obj",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "obj",
        "obj",
        "HTMLElement",
        "obj",
        "HTMLElement",
        "obj",
        "$$",
        "obj",
        "$$",
        "obj",
        "$$",
        "obj",
        "$$",
        "obj",
        "$$",
        "obj",
        "DocumentTouch",
        "InstallTrigger",
        "webkitURL",
        "chrome",
        "navigator",
        "$$",
        "$$",
        "$$",
        "ActiveXObject",
        "navigator",
        "navigator",
        "navigator",
        "navigator",
        "navigator",
        "navigator",
        "navigator",
        "navigator",
        "cytoscape",
        "$$",
        "$$",
        "arguments",
        "arguments",
        "target",
        "deep",
        "target",
        "target",
        "arguments",
        "i",
        "target",
        "$$",
        "target",
        "target",
        "length",
        "i",
        "target",
        "i",
        "i",
        "length",
        "i",
        "options",
        "arguments",
        "i",
        "name",
        "options",
        "src",
        "target",
        "name",
        "copy",
        "options",
        "name",
        "target",
        "copy",
        "deep",
        "copy",
        "$$",
        "copy",
        "copyIsArray",
        "$$",
        "copy",
        "copyIsArray",
        "copyIsArray",
        "clone",
        "src",
        "$$",
        "src",
        "src",
        "clone",
        "src",
        "$$",
        "src",
        "src",
        "target",
        "name",
        "$$",
        "deep",
        "clone",
        "copy",
        "copy",
        "target",
        "name",
        "copy",
        "target",
        "name",
        "callback",
        "options",
        "options",
        "$$",
        "options",
        "ret",
        "done",
        "callback",
        "ret",
        "next",
        "ret",
        "name",
        "ret",
        "fulfil",
        "ret",
        "next",
        "next",
        "done",
        "checkCommonJs",
        "onCheckCommonJsDone",
        "next",
        "require",
        "ret",
        "require",
        "name",
        "ret",
        "fulfil",
        "ret",
        "next",
        "next",
        "done",
        "checkAmd",
        "onCheckAmdDone",
        "next",
        "define",
        "define",
        "require",
        "require",
        "name",
        "nameImpl",
        "ret",
        "nameImpl",
        "ret",
        "fulfil",
        "ret",
        "next",
        "next",
        "done",
        "options",
        "$$",
        "name",
        "checkWindow",
        "onCheckWindowDone",
        "names",
        "callback",
        "i",
        "names",
        "i",
        "gotImpl",
        "i",
        "callback",
        "callback",
        "impls",
        "i",
        "names",
        "i",
        "names",
        "i",
        "$$",
        "name",
        "impl",
        "impls",
        "index",
        "impl",
        "gotImpl",
        "index",
        "checkDone",
        "func",
        "wait",
        "options",
        "options",
        "leading",
        "$$",
        "options",
        "leading",
        "options",
        "options",
        "leading",
        "trailing",
        "options",
        "options",
        "trailing",
        "options",
        "options",
        "options",
        "leading",
        "options",
        "wait",
        "options",
        "trailing",
        "$$",
        "func",
        "wait",
        "options",
        "func",
        "wait",
        "options",
        "$$",
        "func",
        "wait",
        "wait",
        "options",
        "trailing",
        "$$",
        "options",
        "leading",
        "options",
        "maxWait",
        "options",
        "wait",
        "options",
        "trailing",
        "options",
        "options",
        "trailing",
        "wait",
        "$$",
        "stamp",
        "remaining",
        "maxTimeoutId",
        "clearTimeout",
        "maxTimeoutId",
        "maxTimeoutId",
        "timeoutId",
        "trailingCall",
        "isCalled",
        "lastCalled",
        "$$",
        "result",
        "func",
        "thisArg",
        "args",
        "timeoutId",
        "maxTimeoutId",
        "args",
        "thisArg",
        "timeoutId",
        "setTimeout",
        "delayed",
        "remaining",
        "timeoutId",
        "clearTimeout",
        "timeoutId",
        "maxTimeoutId",
        "timeoutId",
        "trailingCall",
        "trailing",
        "maxWait",
        "wait",
        "lastCalled",
        "$$",
        "result",
        "func",
        "thisArg",
        "args",
        "timeoutId",
        "maxTimeoutId",
        "args",
        "thisArg",
        "args",
        "arguments",
        "stamp",
        "$$",
        "thisArg",
        "trailingCall",
        "trailing",
        "timeoutId",
        "leading",
        "maxWait",
        "leading",
        "timeoutId",
        "maxTimeoutId",
        "leading",
        "lastCalled",
        "stamp",
        "maxWait",
        "stamp",
        "lastCalled",
        "remaining",
        "isCalled",
        "maxTimeoutId",
        "maxTimeoutId",
        "clearTimeout",
        "maxTimeoutId",
        "lastCalled",
        "stamp",
        "result",
        "func",
        "thisArg",
        "args",
        "maxTimeoutId",
        "maxTimeoutId",
        "setTimeout",
        "maxDelayed",
        "remaining",
        "isCalled",
        "timeoutId",
        "timeoutId",
        "clearTimeout",
        "timeoutId",
        "timeoutId",
        "wait",
        "maxWait",
        "timeoutId",
        "setTimeout",
        "delayed",
        "wait",
        "leadingCall",
        "isCalled",
        "result",
        "func",
        "thisArg",
        "args",
        "isCalled",
        "timeoutId",
        "maxTimeoutId",
        "args",
        "thisArg",
        "result",
        "msg",
        "arguments",
        "arguments",
        "msg",
        "msg",
        "obj",
        "i",
        "obj",
        "obj",
        "i",
        "target",
        "i",
        "obj",
        "i",
        "target",
        "obj",
        "obj",
        "obj",
        "$$",
        "obj",
        "obj",
        "$$",
        "obj",
        "$$",
        "obj",
        "obj",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "i",
        "empty",
        "empty",
        "options",
        "$$",
        "options",
        "array",
        "$$",
        "$",
        "options",
        "options",
        "array",
        "options",
        "options",
        "options",
        "options",
        "keys",
        "i",
        "l",
        "i",
        "keys",
        "i",
        "$$",
        "key",
        "$$",
        "i",
        "keys",
        "obj",
        "key",
        "obj",
        "key",
        "obj",
        "obj",
        "key",
        "obj",
        "key",
        "options",
        "options",
        "options",
        "options",
        "keys",
        "i",
        "l",
        "i",
        "keys",
        "i",
        "$$",
        "key",
        "$$",
        "obj",
        "obj",
        "key",
        "obj",
        "obj",
        "obj",
        "options",
        "options",
        "options",
        "keys",
        "options",
        "i",
        "l",
        "i",
        "keys",
        "i",
        "$$",
        "key",
        "$$",
        "i",
        "options",
        "lastKey",
        "keepChildren",
        "child",
        "obj",
        "keepChildren",
        "child",
        "obj",
        "child",
        "obj",
        "key",
        "obj",
        "obj",
        "key",
        "$$",
        "i",
        "i",
        "i",
        "ch",
        "ch",
        "chLowerCase",
        "isUpperCase",
        "ret",
        "ret",
        "chLowerCase",
        "ret",
        "ch",
        "ret",
        "noUpperCases",
        "ret",
        "i",
        "i",
        "i",
        "ch",
        "isDash",
        "nextIsUpper",
        "nextIsUpper",
        "ret",
        "ch",
        "ret",
        "ch",
        "nextIsUpper",
        "ret",
        "first",
        "first",
        "first",
        "first",
        "last",
        "last",
        "first",
        "last",
        "last",
        "first",
        "last",
        "hex",
        "hex",
        "hex",
        "hex",
        "hex",
        "shortHex",
        "r",
        "parseInt",
        "hex",
        "hex",
        "g",
        "parseInt",
        "hex",
        "hex",
        "b",
        "parseInt",
        "hex",
        "hex",
        "r",
        "parseInt",
        "hex",
        "hex",
        "g",
        "parseInt",
        "hex",
        "hex",
        "b",
        "parseInt",
        "hex",
        "hex",
        "r",
        "g",
        "b",
        "hsl",
        "p",
        "q",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "p",
        "q",
        "p",
        "t",
        "t",
        "q",
        "t",
        "p",
        "q",
        "p",
        "t",
        "p",
        "$$",
        "hsl",
        "m",
        "h",
        "parseInt",
        "m",
        "h",
        "h",
        "h",
        "h",
        "h",
        "h",
        "h",
        "s",
        "parseFloat",
        "m",
        "s",
        "s",
        "s",
        "s",
        "l",
        "parseFloat",
        "m",
        "l",
        "l",
        "l",
        "l",
        "a",
        "m",
        "a",
        "a",
        "parseFloat",
        "a",
        "a",
        "a",
        "s",
        "r",
        "g",
        "b",
        "l",
        "l",
        "l",
        "s",
        "l",
        "s",
        "l",
        "s",
        "l",
        "q",
        "r",
        "hue2rgb",
        "p",
        "q",
        "h",
        "g",
        "hue2rgb",
        "p",
        "q",
        "h",
        "b",
        "hue2rgb",
        "p",
        "q",
        "h",
        "ret",
        "r",
        "g",
        "b",
        "a",
        "ret",
        "rgb",
        "$$",
        "rgb",
        "m",
        "ret",
        "i",
        "i",
        "m",
        "i",
        "channel",
        "channel",
        "isPct",
        "i",
        "channel",
        "parseFloat",
        "channel",
        "isPct",
        "i",
        "channel",
        "channel",
        "channel",
        "channel",
        "ret",
        "channel",
        "isPct",
        "isPct",
        "isPct",
        "isPct",
        "isPct",
        "isPct",
        "atLeastOneIsPct",
        "allArePct",
        "m",
        "alpha",
        "alpha",
        "parseFloat",
        "alpha",
        "alpha",
        "alpha",
        "ret",
        "alpha",
        "ret",
        "color",
        "$$",
        "color",
        "color",
        "$$",
        "color",
        "color",
        "$$",
        "color",
        "$$",
        "color",
        "$$",
        "color",
        "$$",
        "color",
        "ch",
        "ch",
        "hex",
        "hex",
        "hex",
        "hex",
        "ch2hex",
        "r",
        "ch2hex",
        "g",
        "ch2hex",
        "b",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "raf",
        "raf",
        "fn",
        "fn",
        "setTimeout",
        "fn",
        "$$",
        "fn",
        "raf",
        "fn",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "x",
        "x",
        "x",
        "$$",
        "p1",
        "p2",
        "p2",
        "p1",
        "p2",
        "p1",
        "dx",
        "dx",
        "dy",
        "dy",
        "$$",
        "p0",
        "p1",
        "p2",
        "t",
        "t",
        "t",
        "p0",
        "t",
        "t",
        "p1",
        "t",
        "t",
        "p2",
        "$$",
        "p0",
        "p1",
        "p2",
        "t",
        "$$",
        "p0",
        "p1",
        "p2",
        "t",
        "$$",
        "p0",
        "p1",
        "p2",
        "t",
        "$$",
        "bb1",
        "bb2",
        "bb1",
        "bb2",
        "bb2",
        "bb1",
        "bb1",
        "bb2",
        "bb2",
        "bb1",
        "bb1",
        "bb2",
        "bb2",
        "bb1",
        "bb1",
        "bb2",
        "bb2",
        "bb1",
        "$$",
        "bb",
        "x",
        "y",
        "bb",
        "x",
        "x",
        "bb",
        "bb",
        "y",
        "y",
        "bb",
        "$$",
        "bb",
        "pt",
        "bb",
        "pt",
        "pt",
        "$$",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "width",
        "height",
        "width",
        "height",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "padding",
        "nodeY",
        "halfHeight",
        "padding",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "padding",
        "straightLineIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "topStartX",
        "topStartY",
        "topEndX",
        "topEndY",
        "straightLineIntersections",
        "straightLineIntersections",
        "nodeX",
        "halfWidth",
        "padding",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "padding",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "padding",
        "straightLineIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "rightStartX",
        "rightStartY",
        "rightEndX",
        "rightEndY",
        "straightLineIntersections",
        "straightLineIntersections",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "padding",
        "nodeY",
        "halfHeight",
        "padding",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "padding",
        "straightLineIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "bottomStartX",
        "bottomStartY",
        "bottomEndX",
        "bottomEndY",
        "straightLineIntersections",
        "straightLineIntersections",
        "nodeX",
        "halfWidth",
        "padding",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "padding",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "padding",
        "straightLineIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "leftStartX",
        "leftStartY",
        "leftEndX",
        "leftEndY",
        "straightLineIntersections",
        "straightLineIntersections",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "arcIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "topLeftCenterX",
        "topLeftCenterY",
        "cornerRadius",
        "padding",
        "arcIntersections",
        "arcIntersections",
        "topLeftCenterX",
        "arcIntersections",
        "topLeftCenterY",
        "arcIntersections",
        "arcIntersections",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "arcIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "topRightCenterX",
        "topRightCenterY",
        "cornerRadius",
        "padding",
        "arcIntersections",
        "arcIntersections",
        "topRightCenterX",
        "arcIntersections",
        "topRightCenterY",
        "arcIntersections",
        "arcIntersections",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "arcIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "bottomRightCenterX",
        "bottomRightCenterY",
        "cornerRadius",
        "padding",
        "arcIntersections",
        "arcIntersections",
        "bottomRightCenterX",
        "arcIntersections",
        "bottomRightCenterY",
        "arcIntersections",
        "arcIntersections",
        "nodeX",
        "halfWidth",
        "cornerRadius",
        "nodeY",
        "halfHeight",
        "cornerRadius",
        "arcIntersections",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "bottomLeftCenterX",
        "bottomLeftCenterY",
        "cornerRadius",
        "padding",
        "arcIntersections",
        "arcIntersections",
        "bottomLeftCenterX",
        "arcIntersections",
        "bottomLeftCenterY",
        "arcIntersections",
        "arcIntersections",
        "$$",
        "boxX1",
        "boxY1",
        "boxX2",
        "boxY2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "width",
        "height",
        "centerX",
        "width",
        "padding",
        "centerY",
        "height",
        "cornerRadius",
        "padding",
        "centerX",
        "width",
        "padding",
        "centerY",
        "height",
        "cornerRadius",
        "padding",
        "centerX",
        "width",
        "cornerRadius",
        "padding",
        "centerY",
        "height",
        "padding",
        "centerX",
        "width",
        "cornerRadius",
        "padding",
        "centerY",
        "height",
        "padding",
        "boxX1",
        "boxX2",
        "boxX1",
        "boxX2",
        "boxY1",
        "boxY2",
        "boxY1",
        "boxY2",
        "boxMaxX",
        "hBoxTopLeftX",
        "boxMinX",
        "hBoxBottomRightX",
        "boxMaxY",
        "vBoxTopLeftY",
        "boxMinY",
        "vBoxBottomRightY",
        "hBoxTopLeftX",
        "boxMinX",
        "hBoxTopLeftX",
        "boxMaxX",
        "hBoxTopLeftY",
        "boxMinY",
        "hBoxTopLeftY",
        "boxMaxY",
        "hBoxBottomRightX",
        "boxMinX",
        "hBoxBottomRightX",
        "boxMaxX",
        "hBoxTopLeftY",
        "boxMinY",
        "hBoxTopLeftY",
        "boxMaxY",
        "hBoxBottomRightX",
        "boxMinX",
        "hBoxBottomRightX",
        "boxMaxX",
        "hBoxBottomRightY",
        "boxMinY",
        "hBoxBottomRightY",
        "boxMaxY",
        "hBoxTopLeftX",
        "boxMinX",
        "hBoxTopLeftX",
        "boxMaxX",
        "hBoxBottomRightY",
        "boxMinY",
        "hBoxBottomRightY",
        "boxMaxY",
        "boxMinX",
        "hBoxTopLeftX",
        "boxMinX",
        "hBoxBottomRightX",
        "boxMinY",
        "hBoxTopLeftY",
        "boxMinY",
        "hBoxBottomRightY",
        "boxMaxX",
        "hBoxTopLeftX",
        "boxMaxX",
        "hBoxBottomRightX",
        "boxMinY",
        "hBoxTopLeftY",
        "boxMinY",
        "hBoxBottomRightY",
        "boxMaxX",
        "hBoxTopLeftX",
        "boxMaxX",
        "hBoxBottomRightX",
        "boxMaxY",
        "hBoxTopLeftY",
        "boxMaxY",
        "hBoxBottomRightY",
        "boxMinX",
        "hBoxTopLeftX",
        "boxMinX",
        "hBoxBottomRightX",
        "boxMaxY",
        "hBoxTopLeftY",
        "boxMaxY",
        "hBoxBottomRightY",
        "vBoxTopLeftX",
        "boxMinX",
        "vBoxTopLeftX",
        "boxMaxX",
        "vBoxTopLeftY",
        "boxMinY",
        "vBoxTopLeftY",
        "boxMaxY",
        "vBoxBottomRightX",
        "boxMinX",
        "vBoxBottomRightX",
        "boxMaxX",
        "vBoxTopLeftY",
        "boxMinY",
        "vBoxTopLeftY",
        "boxMaxY",
        "vBoxBottomRightX",
        "boxMinX",
        "vBoxBottomRightX",
        "boxMaxX",
        "vBoxBottomRightY",
        "boxMinY",
        "vBoxBottomRightY",
        "boxMaxY",
        "vBoxTopLeftX",
        "boxMinX",
        "vBoxTopLeftX",
        "boxMaxX",
        "vBoxBottomRightY",
        "boxMinY",
        "vBoxBottomRightY",
        "boxMaxY",
        "boxMinX",
        "vBoxTopLeftX",
        "boxMinX",
        "vBoxBottomRightX",
        "boxMinY",
        "vBoxTopLeftY",
        "boxMinY",
        "vBoxBottomRightY",
        "boxMaxX",
        "vBoxTopLeftX",
        "boxMaxX",
        "vBoxBottomRightX",
        "boxMinY",
        "vBoxTopLeftY",
        "boxMinY",
        "vBoxBottomRightY",
        "boxMaxX",
        "vBoxTopLeftX",
        "boxMaxX",
        "vBoxBottomRightX",
        "boxMaxY",
        "vBoxTopLeftY",
        "boxMaxY",
        "vBoxBottomRightY",
        "boxMinX",
        "vBoxTopLeftX",
        "boxMinX",
        "vBoxBottomRightX",
        "boxMaxY",
        "vBoxTopLeftY",
        "boxMaxY",
        "vBoxBottomRightY",
        "boxMinX",
        "boxMinY",
        "boxMaxX",
        "boxMaxY",
        "padding",
        "cornerRadius",
        "cornerRadius",
        "vBoxTopLeftX",
        "padding",
        "hBoxTopLeftY",
        "padding",
        "boxMinX",
        "boxMinY",
        "boxMaxX",
        "boxMaxY",
        "padding",
        "cornerRadius",
        "cornerRadius",
        "vBoxBottomRightX",
        "padding",
        "hBoxTopLeftY",
        "padding",
        "boxMinX",
        "boxMinY",
        "boxMaxX",
        "boxMaxY",
        "padding",
        "cornerRadius",
        "cornerRadius",
        "vBoxBottomRightX",
        "padding",
        "hBoxBottomRightY",
        "padding",
        "boxMinX",
        "boxMinY",
        "boxMaxX",
        "boxMaxY",
        "padding",
        "cornerRadius",
        "cornerRadius",
        "vBoxTopLeftX",
        "padding",
        "hBoxBottomRightY",
        "padding",
        "$$",
        "x",
        "y",
        "farthestPointSqDistance",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "x",
        "x",
        "centerX",
        "width",
        "padding",
        "y",
        "y",
        "centerY",
        "height",
        "padding",
        "x",
        "x",
        "y",
        "y",
        "farthestPointSqDistance",
        "$$",
        "x1box",
        "y1box",
        "x2box",
        "y2box",
        "x1",
        "y1",
        "x2",
        "y2",
        "x3",
        "y3",
        "tolerance",
        "x1",
        "x2",
        "x3",
        "y1",
        "y2",
        "y3",
        "x1box",
        "x2box",
        "tolerance",
        "y1box",
        "y2box",
        "tolerance",
        "x1box",
        "x2box",
        "tolerance",
        "y1box",
        "y2box",
        "tolerance",
        "x1",
        "boxMinX",
        "x1",
        "boxMaxX",
        "y1",
        "boxMinY",
        "y1",
        "boxMaxY",
        "x3",
        "boxMinX",
        "x3",
        "boxMaxX",
        "y3",
        "boxMinY",
        "y3",
        "boxMaxY",
        "midX",
        "boxMinX",
        "midX",
        "boxMaxX",
        "midY",
        "boxMinY",
        "midY",
        "boxMaxY",
        "x2",
        "boxMinX",
        "x2",
        "boxMaxX",
        "y2",
        "boxMinY",
        "y2",
        "boxMaxY",
        "x1",
        "midX",
        "x3",
        "y1",
        "midY",
        "y3",
        "x1",
        "midX",
        "x3",
        "y1",
        "midY",
        "y3",
        "curveMinX",
        "boxMaxX",
        "curveMaxX",
        "boxMinX",
        "curveMinY",
        "boxMaxY",
        "curveMaxY",
        "boxMinY",
        "$$",
        "x1box",
        "y1box",
        "x2box",
        "y2box",
        "x1",
        "y1",
        "x2",
        "y2",
        "x3",
        "y3",
        "tolerance",
        "t",
        "$$",
        "x1",
        "x2",
        "x3",
        "t",
        "$$",
        "y1",
        "y2",
        "y3",
        "t",
        "x1box",
        "x",
        "x",
        "x2box",
        "y1box",
        "y",
        "y",
        "y2box",
        "t",
        "t",
        "sampleInBox",
        "t",
        "$$",
        "x1box",
        "y1box",
        "x2box",
        "y2box",
        "x1",
        "y1",
        "x2",
        "y2",
        "tolerance",
        "x1box",
        "x1",
        "x1",
        "x2box",
        "x1box",
        "x2",
        "x2",
        "x2box",
        "y1box",
        "y1",
        "y1",
        "y2box",
        "y1box",
        "y2",
        "y2",
        "y2box",
        "$$",
        "x1box",
        "y1box",
        "x2box",
        "y2box",
        "x1",
        "y1",
        "x2",
        "y2",
        "tolerance",
        "x1box",
        "x2box",
        "tolerance",
        "y1box",
        "y2box",
        "tolerance",
        "x1box",
        "x2box",
        "tolerance",
        "y1box",
        "y2box",
        "tolerance",
        "x2",
        "x1",
        "y2",
        "y1",
        "aX",
        "x1",
        "boxMinX",
        "x1",
        "boxMaxX",
        "y1",
        "y2",
        "boxMinY",
        "y1",
        "y2",
        "boxMaxY",
        "boxMinX",
        "bX",
        "aX",
        "tLeft",
        "tLeft",
        "yValue",
        "aY",
        "tLeft",
        "bY",
        "yValue",
        "boxMinY",
        "yValue",
        "boxMaxY",
        "boxMaxX",
        "bX",
        "aX",
        "tRight",
        "tRight",
        "yValue",
        "aY",
        "tRight",
        "bY",
        "yValue",
        "boxMinY",
        "yValue",
        "boxMaxY",
        "boxMinY",
        "bY",
        "aY",
        "tTop",
        "tTop",
        "xValue",
        "aX",
        "tTop",
        "bX",
        "xValue",
        "boxMinX",
        "xValue",
        "boxMaxX",
        "boxMaxY",
        "bY",
        "aY",
        "tBottom",
        "tBottom",
        "xValue",
        "aX",
        "tBottom",
        "bX",
        "xValue",
        "boxMinX",
        "xValue",
        "boxMaxX",
        "$$",
        "x1box",
        "y1box",
        "x2box",
        "y2box",
        "x1",
        "y1",
        "x2",
        "y2",
        "x3",
        "y3",
        "tolerance",
        "x1box",
        "x2box",
        "tolerance",
        "y1box",
        "y2box",
        "tolerance",
        "x1box",
        "x2box",
        "tolerance",
        "y1box",
        "y2box",
        "tolerance",
        "x1",
        "boxMinX",
        "x1",
        "boxMaxX",
        "y1",
        "boxMinY",
        "y1",
        "boxMaxY",
        "x3",
        "boxMinX",
        "x3",
        "boxMaxX",
        "y3",
        "boxMinY",
        "y3",
        "boxMaxY",
        "x1",
        "x2",
        "x3",
        "x1",
        "x2",
        "aX",
        "boxMinX",
        "x1",
        "bX",
        "boxMaxX",
        "x1",
        "bX",
        "xIntervals",
        "leftParam",
        "rightParam",
        "bX",
        "bX",
        "aX",
        "cX",
        "boxMinX",
        "discriminantX1",
        "discriminantX1",
        "tX1",
        "bX",
        "sqrt",
        "aX",
        "tX2",
        "bX",
        "sqrt",
        "aX",
        "xIntervals",
        "tX1",
        "tX2",
        "bX",
        "bX",
        "aX",
        "cX",
        "boxMaxX",
        "discriminantX2",
        "discriminantX2",
        "tX3",
        "bX",
        "sqrt",
        "aX",
        "tX4",
        "bX",
        "sqrt",
        "aX",
        "xIntervals",
        "tX3",
        "tX4",
        "xIntervals",
        "a",
        "b",
        "a",
        "b",
        "y1",
        "y2",
        "y3",
        "y1",
        "y2",
        "aY",
        "boxMinY",
        "y1",
        "bY",
        "boxMaxY",
        "y1",
        "bY",
        "yIntervals",
        "topParam",
        "bottomParam",
        "bY",
        "bY",
        "aY",
        "cY",
        "boxMinY",
        "discriminantY1",
        "discriminantY1",
        "tY1",
        "bY",
        "sqrt",
        "aY",
        "tY2",
        "bY",
        "sqrt",
        "aY",
        "yIntervals",
        "tY1",
        "tY2",
        "bY",
        "bY",
        "aY",
        "cY",
        "boxMaxY",
        "discriminantY2",
        "discriminantY2",
        "tY3",
        "bY",
        "sqrt",
        "aY",
        "tY4",
        "bY",
        "sqrt",
        "aY",
        "yIntervals",
        "tY3",
        "tY4",
        "yIntervals",
        "a",
        "b",
        "a",
        "b",
        "index",
        "xIntervals",
        "index",
        "yIndex",
        "yIntervals",
        "yIndex",
        "xIntervals",
        "index",
        "yIntervals",
        "yIndex",
        "yIntervals",
        "yIndex",
        "xIntervals",
        "index",
        "xIntervals",
        "index",
        "yIntervals",
        "yIndex",
        "yIntervals",
        "yIndex",
        "xIntervals",
        "index",
        "$$",
        "x",
        "y",
        "lx1",
        "ly1",
        "lx2",
        "ly2",
        "tolerance",
        "lx1",
        "lx2",
        "lx1",
        "lx2",
        "ly1",
        "ly2",
        "ly1",
        "ly2",
        "x1",
        "t",
        "x",
        "x",
        "x2",
        "t",
        "y1",
        "t",
        "y",
        "y",
        "y2",
        "t",
        "$$",
        "x",
        "y",
        "x1",
        "y1",
        "x2",
        "y2",
        "x3",
        "y3",
        "toleranceSquared",
        "x1",
        "x3",
        "x2",
        "x1",
        "x3",
        "x2",
        "y1",
        "y3",
        "y2",
        "y1",
        "y3",
        "y2",
        "x",
        "bb",
        "x",
        "bb",
        "y",
        "bb",
        "y",
        "bb",
        "$$",
        "a",
        "b",
        "c",
        "d",
        "result",
        "b",
        "a",
        "c",
        "a",
        "d",
        "a",
        "q",
        "c",
        "b",
        "b",
        "r",
        "d",
        "b",
        "c",
        "b",
        "b",
        "r",
        "discriminant",
        "q",
        "q",
        "q",
        "r",
        "r",
        "result",
        "term1",
        "b",
        "discriminant",
        "s",
        "r",
        "discriminant",
        "s",
        "s",
        "s",
        "s",
        "t",
        "r",
        "discriminant",
        "t",
        "t",
        "t",
        "t",
        "result",
        "term1",
        "s",
        "t",
        "term1",
        "s",
        "t",
        "result",
        "result",
        "term1",
        "term1",
        "t",
        "s",
        "result",
        "term1",
        "result",
        "term1",
        "result",
        "result",
        "discriminant",
        "r13",
        "r",
        "r",
        "r",
        "result",
        "term1",
        "r13",
        "result",
        "result",
        "r13",
        "term1",
        "q",
        "q",
        "dum1",
        "q",
        "q",
        "q",
        "dum1",
        "r",
        "dum1",
        "r13",
        "q",
        "result",
        "term1",
        "r13",
        "dum1",
        "result",
        "term1",
        "r13",
        "dum1",
        "result",
        "term1",
        "r13",
        "dum1",
        "$$",
        "x",
        "y",
        "x1",
        "y1",
        "x2",
        "y2",
        "x3",
        "y3",
        "x1",
        "x1",
        "x1",
        "x2",
        "x1",
        "x3",
        "x2",
        "x2",
        "x2",
        "x3",
        "x3",
        "x3",
        "y1",
        "y1",
        "y1",
        "y2",
        "y1",
        "y3",
        "y2",
        "y2",
        "y2",
        "y3",
        "y3",
        "y3",
        "x1",
        "x2",
        "x1",
        "x1",
        "x1",
        "x3",
        "x2",
        "x2",
        "x2",
        "x3",
        "y1",
        "y2",
        "y1",
        "y1",
        "y1",
        "y3",
        "y2",
        "y2",
        "y2",
        "y3",
        "x1",
        "x1",
        "x1",
        "x2",
        "x1",
        "x3",
        "x1",
        "x",
        "x2",
        "x2",
        "x2",
        "x",
        "x3",
        "x",
        "y1",
        "y1",
        "y1",
        "y2",
        "y1",
        "y3",
        "y1",
        "y",
        "y2",
        "y2",
        "y2",
        "y",
        "y3",
        "y",
        "x1",
        "x2",
        "x1",
        "x1",
        "x1",
        "x",
        "x2",
        "x",
        "y1",
        "y2",
        "y1",
        "y1",
        "y1",
        "y",
        "y2",
        "y",
        "a",
        "b",
        "c",
        "d",
        "roots",
        "index",
        "index",
        "roots",
        "index",
        "zeroThreshold",
        "roots",
        "index",
        "roots",
        "index",
        "roots",
        "index",
        "i",
        "i",
        "curX",
        "i",
        "x1",
        "i",
        "i",
        "x2",
        "i",
        "i",
        "x3",
        "curY",
        "i",
        "y1",
        "i",
        "i",
        "y2",
        "i",
        "i",
        "y3",
        "distSquared",
        "curX",
        "x",
        "curY",
        "y",
        "minDistanceSquared",
        "distSquared",
        "minDistanceSquared",
        "minDistanceSquared",
        "distSquared",
        "closestParam",
        "i",
        "minDistanceSquared",
        "distSquared",
        "closestParam",
        "i",
        "minDistanceSquared",
        "$$",
        "x",
        "y",
        "x1",
        "y1",
        "x2",
        "y2",
        "x",
        "x1",
        "y",
        "y1",
        "x2",
        "x1",
        "y2",
        "y1",
        "line",
        "line",
        "line",
        "line",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "line",
        "offset",
        "line",
        "dotProduct",
        "dotProduct",
        "lineSq",
        "dotProduct",
        "hypSq",
        "adjSq",
        "lineSq",
        "x",
        "x2",
        "x",
        "x2",
        "y",
        "y2",
        "y",
        "y2",
        "hypSq",
        "adjSq",
        "$$",
        "x",
        "y",
        "basePoints",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "basePoints",
        "direction",
        "direction",
        "direction",
        "direction",
        "direction",
        "direction",
        "angle",
        "angle",
        "angle",
        "angle",
        "angle",
        "angle",
        "i",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "width",
        "basePoints",
        "i",
        "cos",
        "basePoints",
        "i",
        "sin",
        "transformedPoints",
        "i",
        "height",
        "basePoints",
        "i",
        "cos",
        "basePoints",
        "i",
        "sin",
        "transformedPoints",
        "i",
        "centerX",
        "transformedPoints",
        "i",
        "centerY",
        "padding",
        "transformedPoints",
        "padding",
        "points",
        "expandedLineSet",
        "points",
        "transformedPoints",
        "i",
        "points",
        "i",
        "x1",
        "points",
        "i",
        "y1",
        "points",
        "i",
        "i",
        "points",
        "x2",
        "points",
        "i",
        "y2",
        "points",
        "i",
        "x2",
        "points",
        "i",
        "points",
        "y2",
        "points",
        "i",
        "points",
        "x1",
        "x",
        "x2",
        "x",
        "x1",
        "x",
        "x",
        "x2",
        "x1",
        "x",
        "x",
        "x2",
        "y3",
        "x",
        "x1",
        "x2",
        "x1",
        "y2",
        "y1",
        "y1",
        "y3",
        "y",
        "up",
        "y3",
        "y",
        "down",
        "up",
        "$$",
        "lineSet",
        "lineSet",
        "i",
        "lineSet",
        "i",
        "currentLineStartX",
        "lineSet",
        "i",
        "currentLineStartY",
        "lineSet",
        "i",
        "currentLineEndX",
        "lineSet",
        "i",
        "currentLineEndY",
        "lineSet",
        "i",
        "i",
        "lineSet",
        "nextLineStartX",
        "lineSet",
        "i",
        "nextLineStartY",
        "lineSet",
        "i",
        "nextLineEndX",
        "lineSet",
        "i",
        "nextLineEndY",
        "lineSet",
        "i",
        "nextLineStartX",
        "lineSet",
        "nextLineStartY",
        "lineSet",
        "nextLineEndX",
        "lineSet",
        "nextLineEndY",
        "lineSet",
        "currentLineStartX",
        "currentLineStartY",
        "currentLineEndX",
        "currentLineEndY",
        "nextLineStartX",
        "nextLineStartY",
        "nextLineEndX",
        "nextLineEndY",
        "vertices",
        "i",
        "intersection",
        "vertices",
        "i",
        "intersection",
        "vertices",
        "$$",
        "points",
        "pad",
        "points",
        "i",
        "points",
        "i",
        "currentPointX",
        "points",
        "i",
        "currentPointY",
        "points",
        "i",
        "i",
        "points",
        "nextPointX",
        "points",
        "i",
        "nextPointY",
        "points",
        "i",
        "nextPointX",
        "points",
        "nextPointY",
        "points",
        "nextPointY",
        "currentPointY",
        "nextPointX",
        "currentPointX",
        "offsetX",
        "offsetX",
        "offsetY",
        "offsetY",
        "offsetX",
        "offsetLength",
        "offsetY",
        "offsetLength",
        "expandedLineSet",
        "i",
        "currentPointX",
        "normalizedOffsetX",
        "pad",
        "expandedLineSet",
        "i",
        "currentPointY",
        "normalizedOffsetY",
        "pad",
        "expandedLineSet",
        "i",
        "nextPointX",
        "normalizedOffsetX",
        "pad",
        "expandedLineSet",
        "i",
        "nextPointY",
        "normalizedOffsetY",
        "pad",
        "expandedLineSet",
        "$$",
        "x",
        "y",
        "centerX",
        "centerY",
        "ellipseWradius",
        "ellipseHradius",
        "centerX",
        "x",
        "centerY",
        "y",
        "dispX",
        "ellipseWradius",
        "dispY",
        "ellipseHradius",
        "dispX",
        "dispX",
        "dispY",
        "dispY",
        "len",
        "newLength",
        "newLength",
        "len",
        "centerX",
        "x",
        "lenProportion",
        "x",
        "centerY",
        "y",
        "lenProportion",
        "y",
        "$$",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "vec1",
        "vec2",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "centerX",
        "centerY",
        "radius",
        "x2",
        "x1",
        "y2",
        "y1",
        "centerX",
        "centerY",
        "x1",
        "centerX",
        "y1",
        "centerY",
        "d",
        "d",
        "d",
        "d",
        "f",
        "d",
        "f",
        "d",
        "f",
        "f",
        "f",
        "f",
        "radius",
        "radius",
        "b",
        "b",
        "a",
        "c",
        "discriminant",
        "b",
        "discriminant",
        "a",
        "b",
        "discriminant",
        "a",
        "t1",
        "t2",
        "t1",
        "t2",
        "tMin",
        "tMin",
        "inRangeParams",
        "tMin",
        "tMax",
        "tMax",
        "inRangeParams",
        "tMax",
        "inRangeParams",
        "inRangeParams",
        "d",
        "x1",
        "inRangeParams",
        "d",
        "y1",
        "inRangeParams",
        "inRangeParams",
        "inRangeParams",
        "nearIntersectionX",
        "nearIntersectionY",
        "inRangeParams",
        "d",
        "x1",
        "inRangeParams",
        "d",
        "y1",
        "nearIntersectionX",
        "nearIntersectionY",
        "farIntersectionX",
        "farIntersectionY",
        "nearIntersectionX",
        "nearIntersectionY",
        "$$",
        "centerX",
        "centerY",
        "radius",
        "farX",
        "farY",
        "farX",
        "centerX",
        "farY",
        "centerY",
        "displacementX",
        "displacementX",
        "displacementY",
        "displacementY",
        "displacementX",
        "distance",
        "displacementY",
        "distance",
        "centerX",
        "unitDisplacementX",
        "radius",
        "centerY",
        "unitDisplacementY",
        "radius",
        "$$",
        "points",
        "i",
        "points",
        "i",
        "sqDistance",
        "points",
        "i",
        "points",
        "i",
        "points",
        "i",
        "points",
        "i",
        "sqDistance",
        "maxSqDistance",
        "maxSqDistance",
        "sqDistance",
        "maxSqDistance",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "x3",
        "y3",
        "x4",
        "y4",
        "infiniteLines",
        "x4",
        "x3",
        "y1",
        "y3",
        "y4",
        "y3",
        "x1",
        "x3",
        "x2",
        "x1",
        "y1",
        "y3",
        "y2",
        "y1",
        "x1",
        "x3",
        "y4",
        "y3",
        "x2",
        "x1",
        "x4",
        "x3",
        "y2",
        "y1",
        "u_b",
        "ua_t",
        "u_b",
        "ub_t",
        "u_b",
        "ua",
        "ua",
        "ub",
        "ub",
        "x1",
        "ua",
        "x2",
        "x1",
        "y1",
        "ua",
        "y2",
        "y1",
        "infiniteLines",
        "x1",
        "ua",
        "x2",
        "x1",
        "y1",
        "ua",
        "y2",
        "y1",
        "ua_t",
        "ub_t",
        "x1",
        "x2",
        "x4",
        "x4",
        "x4",
        "y4",
        "x1",
        "x2",
        "x3",
        "x3",
        "x3",
        "y3",
        "x3",
        "x4",
        "x2",
        "x2",
        "x2",
        "y2",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "x2",
        "x1",
        "x1",
        "x2",
        "x2",
        "oldX1",
        "y2",
        "y1",
        "y1",
        "y2",
        "y2",
        "oldY1",
        "centerX",
        "width",
        "padding",
        "centerY",
        "centerX",
        "width",
        "padding",
        "centerY",
        "centerX",
        "centerY",
        "height",
        "padding",
        "centerX",
        "centerY",
        "height",
        "padding",
        "x2",
        "west",
        "x1",
        "east",
        "y1",
        "south",
        "y2",
        "north",
        "x1",
        "east",
        "east",
        "x2",
        "y1",
        "east",
        "east",
        "y2",
        "x1",
        "west",
        "west",
        "x2",
        "y1",
        "west",
        "west",
        "y2",
        "x1",
        "north",
        "north",
        "x2",
        "y1",
        "north",
        "north",
        "y2",
        "x1",
        "south",
        "south",
        "x2",
        "y1",
        "south",
        "south",
        "y2",
        "x1",
        "x1",
        "centerX",
        "width",
        "padding",
        "x2",
        "x2",
        "centerX",
        "width",
        "padding",
        "y1",
        "y1",
        "centerY",
        "height",
        "padding",
        "y2",
        "y2",
        "centerY",
        "height",
        "padding",
        "x1",
        "x1",
        "y1",
        "y1",
        "x2",
        "x2",
        "y1",
        "y1",
        "x2",
        "x2",
        "y2",
        "y2",
        "x1",
        "x1",
        "y2",
        "y2",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "basePoints",
        "width",
        "height",
        "centerX",
        "centerY",
        "direction",
        "padding",
        "x2",
        "x1",
        "x1",
        "x2",
        "x2",
        "oldX1",
        "y2",
        "y1",
        "y1",
        "y2",
        "y2",
        "oldY1",
        "basePoints",
        "direction",
        "direction",
        "direction",
        "direction",
        "direction",
        "direction",
        "angle",
        "angle",
        "angle",
        "angle",
        "angle",
        "angle",
        "i",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "width",
        "basePoints",
        "i",
        "cos",
        "basePoints",
        "i",
        "sin",
        "transformedPoints",
        "i",
        "height",
        "basePoints",
        "i",
        "cos",
        "basePoints",
        "i",
        "sin",
        "transformedPoints",
        "i",
        "centerX",
        "transformedPoints",
        "i",
        "centerY",
        "transformedPoints",
        "transformedPoints",
        "transformedPoints",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "maxTransformedX",
        "maxTransformedX",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "minTransformedX",
        "minTransformedX",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "maxTransformedY",
        "maxTransformedY",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "minTransformedY",
        "minTransformedY",
        "transformedPoints",
        "i",
        "x2",
        "minTransformedX",
        "padding",
        "x1",
        "maxTransformedX",
        "padding",
        "y2",
        "minTransformedY",
        "padding",
        "y1",
        "maxTransformedY",
        "padding",
        "padding",
        "$$",
        "transformedPoints",
        "padding",
        "points",
        "$$",
        "expandedLineSet",
        "points",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "x1",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "x2",
        "y1",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "y2",
        "i",
        "points",
        "i",
        "points",
        "i",
        "points",
        "i",
        "i",
        "points",
        "nextX",
        "points",
        "i",
        "nextY",
        "points",
        "i",
        "nextX",
        "points",
        "nextY",
        "points",
        "$$",
        "currentX",
        "currentY",
        "nextX",
        "nextY",
        "x1",
        "y1",
        "x2",
        "y1",
        "$$",
        "currentX",
        "currentY",
        "nextX",
        "nextY",
        "x1",
        "y2",
        "x2",
        "y2",
        "$$",
        "currentX",
        "currentY",
        "nextX",
        "nextY",
        "x1",
        "y1",
        "x1",
        "y2",
        "$$",
        "currentX",
        "currentY",
        "nextX",
        "nextY",
        "x2",
        "y1",
        "x2",
        "y2",
        "$$",
        "x",
        "y",
        "basePoints",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "basePoints",
        "i",
        "transformedPoints",
        "i",
        "transformedPoints",
        "i",
        "basePoints",
        "i",
        "width",
        "centerX",
        "transformedPoints",
        "i",
        "basePoints",
        "i",
        "height",
        "centerY",
        "padding",
        "$$",
        "transformedPoints",
        "padding",
        "points",
        "$$",
        "expandedLineSet",
        "points",
        "transformedPoints",
        "i",
        "points",
        "i",
        "currentX",
        "points",
        "i",
        "currentY",
        "points",
        "i",
        "i",
        "points",
        "nextX",
        "points",
        "i",
        "nextY",
        "points",
        "i",
        "nextX",
        "points",
        "nextY",
        "points",
        "intersection",
        "x",
        "y",
        "centerX",
        "centerY",
        "currentX",
        "currentY",
        "nextX",
        "nextY",
        "intersection",
        "intersections",
        "intersection",
        "intersection",
        "intersections",
        "$$",
        "intersection",
        "offset",
        "amount",
        "intersection",
        "offset",
        "intersection",
        "offset",
        "disp",
        "disp",
        "disp",
        "disp",
        "length",
        "amount",
        "length",
        "lenRatio",
        "lenRatio",
        "offset",
        "lenRatio",
        "disp",
        "offset",
        "lenRatio",
        "disp",
        "$$",
        "sides",
        "rotationRadians",
        "$$",
        "sides",
        "rotationRadians",
        "points",
        "$$",
        "points",
        "points",
        "$$",
        "points",
        "points",
        "Infinity",
        "Infinity",
        "i",
        "sides",
        "i",
        "x",
        "points",
        "i",
        "y",
        "points",
        "i",
        "minX",
        "minX",
        "x",
        "maxX",
        "maxX",
        "x",
        "minY",
        "minY",
        "y",
        "maxY",
        "maxY",
        "y",
        "maxX",
        "minX",
        "maxY",
        "minY",
        "i",
        "sides",
        "i",
        "x",
        "points",
        "i",
        "points",
        "i",
        "sx",
        "y",
        "points",
        "i",
        "points",
        "i",
        "sy",
        "minX",
        "minX",
        "x",
        "maxX",
        "maxX",
        "x",
        "minY",
        "minY",
        "y",
        "maxY",
        "maxY",
        "y",
        "minY",
        "i",
        "sides",
        "i",
        "y",
        "points",
        "i",
        "points",
        "i",
        "minY",
        "points",
        "$$",
        "sides",
        "rotationRadians",
        "sides",
        "sides",
        "increment",
        "startAngle",
        "rotationRadians",
        "sides",
        "i",
        "sides",
        "i",
        "currentAngle",
        "i",
        "increment",
        "startAngle",
        "x",
        "points",
        "i",
        "currentAngle",
        "y",
        "points",
        "i",
        "currentAngle",
        "points",
        "$$",
        "width",
        "height",
        "width",
        "height",
        "cytoscape",
        "$$",
        "$$",
        "extensions",
        "$$",
        "modules",
        "name",
        "registrant",
        "impl",
        "name",
        "registrant",
        "$$",
        "impl",
        "registrant",
        "i",
        "optLayoutFns",
        "i",
        "optLayoutFns",
        "i",
        "layoutProto",
        "fnName",
        "layoutProto",
        "fnName",
        "layoutProto",
        "layoutProto",
        "layoutProto",
        "layoutProto",
        "layoutProto",
        "layoutProto",
        "layoutProto",
        "$$",
        "layoutProto",
        "$$",
        "layoutProto",
        "$$",
        "layoutProto",
        "$$",
        "layoutProto",
        "$$",
        "layoutProto",
        "layoutProto",
        "layoutProto",
        "layoutProto",
        "$$",
        "extensions",
        "name",
        "registrant",
        "name",
        "$$",
        "extensions",
        "name",
        "name",
        "moduleType",
        "moduleName",
        "registrant",
        "$$",
        "modules",
        "name",
        "moduleType",
        "moduleName",
        "registrant",
        "name",
        "moduleType",
        "moduleName",
        "$$",
        "modules",
        "name",
        "moduleType",
        "moduleName",
        "$$",
        "arguments",
        "getExtension",
        "arguments",
        "arguments",
        "setExtension",
        "arguments",
        "arguments",
        "getModule",
        "arguments",
        "arguments",
        "setModule",
        "arguments",
        "$$",
        "cytoscape",
        "$",
        "$$",
        "$",
        "$ele",
        "$ele",
        "$ele",
        "d",
        "$",
        "opts",
        "$",
        "opts",
        "cyReg",
        "$this",
        "$$",
        "opts",
        "cyReg",
        "$this",
        "cy",
        "cy",
        "cy",
        "ready",
        "cyReg",
        "$this",
        "data",
        "data",
        "readies",
        "ready",
        "$$",
        "opts",
        "$this",
        "$",
        "opts",
        "$",
        "cytoscape",
        "options",
        "$",
        "cytoscape",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "jQuery",
        "jQuery",
        "cytoscape",
        "$$",
        "$$",
        "src",
        "props",
        "$$",
        "$$",
        "src",
        "props",
        "src",
        "src",
        "src",
        "src",
        "src",
        "returnTrue",
        "returnFalse",
        "src",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "props",
        "src",
        "src",
        "$$",
        "returnTrue",
        "e",
        "e",
        "e",
        "returnTrue",
        "e",
        "e",
        "e",
        "returnTrue",
        "returnFalse",
        "returnFalse",
        "returnFalse",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "defaults",
        "dataImpl",
        "name",
        "value",
        "selfIsArrayLike",
        "selfIsArrayLike",
        "$$",
        "name",
        "p",
        "value",
        "single",
        "ret",
        "single",
        "p",
        "name",
        "ret",
        "p",
        "value",
        "p",
        "name",
        "valid",
        "all",
        "i",
        "l",
        "i",
        "p",
        "all",
        "i",
        "all",
        "i",
        "p",
        "name",
        "value",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "$$",
        "name",
        "k",
        "obj",
        "v",
        "obj",
        "k",
        "p",
        "k",
        "valid",
        "all",
        "i",
        "l",
        "i",
        "p",
        "all",
        "i",
        "all",
        "i",
        "p",
        "k",
        "v",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "$$",
        "name",
        "p",
        "fn",
        "p",
        "name",
        "single",
        "ret",
        "single",
        "p",
        "ret",
        "$$",
        "defaults",
        "removeDataImpl",
        "names",
        "selfIsArrayLike",
        "$$",
        "names",
        "names",
        "keys",
        "i",
        "l",
        "i",
        "keys",
        "i",
        "$$",
        "key",
        "p",
        "key",
        "valid",
        "all",
        "i_a",
        "l_a",
        "i_a",
        "all",
        "i_a",
        "p",
        "key",
        "p",
        "p",
        "p",
        "names",
        "all",
        "i_a",
        "l_a",
        "i_a",
        "all",
        "i_a",
        "p",
        "key",
        "_privateFields",
        "p",
        "key",
        "validKeyToDelete",
        "_privateFields",
        "key",
        "p",
        "p",
        "p",
        "$$",
        "defaults",
        "onImpl",
        "events",
        "selector",
        "data",
        "callback",
        "selfIsArrayLike",
        "$$",
        "events",
        "$$",
        "selector",
        "callback",
        "data",
        "data",
        "selector",
        "selector",
        "$$",
        "selector",
        "selector",
        "callback",
        "selector",
        "data",
        "selector",
        "$$",
        "data",
        "data",
        "callback",
        "data",
        "data",
        "$$",
        "callback",
        "callback",
        "eventsIsString",
        "eventsIsString",
        "events",
        "callback",
        "events",
        "evts",
        "events",
        "callback",
        "events",
        "evts",
        "callback",
        "callback",
        "$$",
        "$$",
        "callback",
        "evts",
        "evts",
        "i",
        "evts",
        "i",
        "evts",
        "i",
        "$$",
        "evt",
        "evt",
        "$$",
        "match",
        "match",
        "match",
        "match",
        "callback",
        "data",
        "selector",
        "selector",
        "$$",
        "selector",
        "p",
        "p",
        "all",
        "j",
        "all",
        "j",
        "all",
        "j",
        "listener",
        "offImpl",
        "$$",
        "defaults",
        "events",
        "selector",
        "callback",
        "selfIsArrayLike",
        "$$",
        "events",
        "arguments",
        "i",
        "all",
        "i",
        "all",
        "i",
        "$$",
        "selector",
        "selector",
        "callback",
        "selector",
        "selector",
        "eventsIsString",
        "events",
        "callback",
        "events",
        "evts",
        "events",
        "callback",
        "events",
        "evts",
        "callback",
        "callback",
        "$$",
        "evts",
        "evts",
        "h",
        "evts",
        "h",
        "evts",
        "h",
        "$$",
        "evt",
        "evt",
        "$$",
        "match",
        "match",
        "match",
        "match",
        "match",
        "i",
        "all",
        "i",
        "all",
        "i",
        "j",
        "listeners",
        "j",
        "listeners",
        "j",
        "listener",
        "listener",
        "callback",
        "callback",
        "listener",
        "nsMatches",
        "typeMatches",
        "cbMatches",
        "listenerMatches",
        "listeners",
        "j",
        "j",
        "$$",
        "defaults",
        "triggerImpl",
        "events",
        "extraParams",
        "fnToTrigger",
        "selfIsArrayLike",
        "$$",
        "events",
        "$$",
        "events",
        "$$",
        "events",
        "cy",
        "eventsIsString",
        "events",
        "events",
        "i",
        "evts",
        "i",
        "evts",
        "i",
        "$$",
        "evt",
        "evt",
        "$$",
        "match",
        "match",
        "match",
        "events",
        "eventsIsObject",
        "events",
        "eventArgObj",
        "extraParams",
        "$$",
        "extraParams",
        "extraParams",
        "extraParams",
        "extraParams",
        "i",
        "events",
        "i",
        "events",
        "i",
        "j",
        "all",
        "j",
        "all",
        "j",
        "triggerer",
        "$$",
        "triggerer",
        "triggererIsElement",
        "eventsIsEvent",
        "evt",
        "evtObj",
        "evt",
        "evt",
        "triggerer",
        "evt",
        "evt",
        "cy",
        "evt",
        "$$",
        "evtObj",
        "triggerer",
        "cy",
        "evtObj",
        "evtObj",
        "evt",
        "evtObj",
        "evt",
        "triggerer",
        "evt",
        "evt",
        "cy",
        "cy",
        "evt",
        "pos",
        "zoom",
        "pan",
        "pos",
        "zoom",
        "pan",
        "fnToTrigger",
        "listeners",
        "evt",
        "evt",
        "fnToTrigger",
        "k",
        "listeners",
        "k",
        "listeners",
        "k",
        "lis",
        "lis",
        "evt",
        "lis",
        "evt",
        "lis",
        "triggerer",
        "evt",
        "$$",
        "evt",
        "lis",
        "evt",
        "nsMatches",
        "typeMatches",
        "targetMatches",
        "listenerMatches",
        "evt",
        "args",
        "args",
        "extraParams",
        "lis",
        "evt",
        "lis",
        "evt",
        "lis",
        "lis",
        "listeners",
        "k",
        "k",
        "lis",
        "lis",
        "l",
        "binders",
        "l",
        "binders",
        "l",
        "binder",
        "binder",
        "triggerer",
        "binder",
        "m",
        "binderListeners",
        "m",
        "binderListeners",
        "m",
        "binderListener",
        "lis",
        "binderListeners",
        "m",
        "m",
        "lis",
        "evt",
        "triggerer",
        "lis",
        "context",
        "args",
        "ret",
        "evt",
        "bubbleUp",
        "ret",
        "evt",
        "evt",
        "bubbleUp",
        "hasCompounds",
        "triggerer",
        "parent",
        "parent",
        "hasParent",
        "parent",
        "parent",
        "parent",
        "evt",
        "cy",
        "evt",
        "fnParams",
        "fnParams",
        "$$",
        "defaults",
        "fnParams",
        "animatedImpl",
        "selfIsArrayLike",
        "cy",
        "all",
        "ele",
        "ele",
        "fnParams",
        "fnParams",
        "$$",
        "defaults",
        "fnParams",
        "clearQueueImpl",
        "selfIsArrayLike",
        "cy",
        "i",
        "all",
        "i",
        "all",
        "i",
        "ele",
        "fnParams",
        "fnParams",
        "$$",
        "defaults",
        "fnParams",
        "delayImpl",
        "time",
        "complete",
        "cy",
        "time",
        "time",
        "complete",
        "fnParams",
        "fnParams",
        "$$",
        "defaults",
        "fnParams",
        "animateImpl",
        "properties",
        "selfIsArrayLike",
        "selfIsArrayLike",
        "isCore",
        "cy",
        "cy",
        "properties",
        "i",
        "properties",
        "propertiesEmpty",
        "propertiesEmpty",
        "properties",
        "isEles",
        "properties",
        "style",
        "properties",
        "properties",
        "isEles",
        "properties",
        "cy",
        "cy",
        "properties",
        "rpos",
        "pan",
        "zoom",
        "rpos",
        "pan",
        "zoom",
        "properties",
        "isCore",
        "properties",
        "cy",
        "properties",
        "cyPan",
        "panBy",
        "cyPan",
        "panBy",
        "properties",
        "properties",
        "center",
        "isCore",
        "cy",
        "center",
        "properties",
        "centerPan",
        "properties",
        "centerPan",
        "properties",
        "isCore",
        "properties",
        "cy",
        "fit",
        "fit",
        "fit",
        "fitVp",
        "properties",
        "fitVp",
        "properties",
        "fitVp",
        "i",
        "all",
        "i",
        "all",
        "i",
        "ele",
        "q",
        "ele",
        "q",
        "ele",
        "q",
        "properties",
        "callTime",
        "isEles",
        "cy",
        "fnParams",
        "fnParams",
        "$$",
        "defaults",
        "fnParams",
        "stopImpl",
        "clearQueue",
        "jumpToEnd",
        "selfIsArrayLike",
        "cy",
        "i",
        "all",
        "i",
        "all",
        "i",
        "ele",
        "j",
        "anis",
        "j",
        "anis",
        "j",
        "jumpToEnd",
        "animation",
        "clearQueue",
        "ele",
        "jumpToEnd",
        "ele",
        "cy",
        "cytoscape",
        "$$",
        "$$",
        "options",
        "name",
        "name",
        "$$",
        "name",
        "fn",
        "$$",
        "onlyThisGroup",
        "selector",
        "$$",
        "$$",
        "onlyThisGroup",
        "selector",
        "selector",
        "onlyThisGroup",
        "selector",
        "onlyThisGroup",
        "onlyThisGroup",
        "selector",
        "$$",
        "selector",
        "selector",
        "onlyThisGroup",
        "newQuery",
        "onlyThisGroup",
        "$$",
        "selector",
        "$$",
        "selector",
        "newQuery",
        "collection",
        "$$",
        "selector",
        "newQuery",
        "selector",
        "$$",
        "selector",
        "newQuery",
        "selector",
        "$$",
        "selector",
        "$$",
        "tokens",
        "tokens",
        "tokens",
        "tokens",
        "tokens",
        "tokens",
        "tokens",
        "tokens",
        "tokens",
        "tokens",
        "match",
        "$1",
        "offset",
        "original",
        "$1",
        "tokens",
        "i",
        "ops",
        "i",
        "ops",
        "i",
        "tokens",
        "op",
        "tokens",
        "i",
        "ops",
        "i",
        "ops",
        "i",
        "op",
        "op",
        "tokens",
        "op",
        "group",
        "group",
        "group",
        "group",
        "state",
        "state",
        "tokens",
        "id",
        "cleanMetaChars",
        "id",
        "tokens",
        "className",
        "cleanMetaChars",
        "className",
        "tokens",
        "variable",
        "cleanMetaChars",
        "variable",
        "tokens",
        "tokens",
        "tokens",
        "variable",
        "comparatorOp",
        "value",
        "tokens",
        "value",
        "valueIsString",
        "value",
        "value",
        "value",
        "value",
        "parseFloat",
        "value",
        "cleanMetaChars",
        "variable",
        "comparatorOp",
        "value",
        "tokens",
        "tokens",
        "boolOp",
        "variable",
        "cleanMetaChars",
        "variable",
        "boolOp",
        "tokens",
        "tokens",
        "tokens",
        "meta",
        "comparatorOp",
        "number",
        "cleanMetaChars",
        "meta",
        "comparatorOp",
        "parseFloat",
        "number",
        "tokens",
        "i",
        "newQuery",
        "currentSubject",
        "tokens",
        "newQuery",
        "childQuery",
        "childQuery",
        "currentSubject",
        "i",
        "childQuery",
        "tokens",
        "newQuery",
        "descendantQuery",
        "descendantQuery",
        "currentSubject",
        "i",
        "descendantQuery",
        "tokens",
        "currentSubject",
        "$$",
        "selector",
        "currentSubject",
        "name",
        "exprs",
        "exprs",
        "j",
        "exprs",
        "name",
        "exprs",
        "j",
        "name",
        "j",
        "exprs",
        "j",
        "selector",
        "expectation",
        "j",
        "exprs",
        "j",
        "exprs",
        "j",
        "e",
        "$$",
        "expectation",
        "expectation",
        "n",
        "e",
        "remaining",
        "e",
        "m",
        "match",
        "m",
        "expr",
        "e",
        "name",
        "n",
        "m",
        "remaining",
        "remaining",
        "consumed",
        "expr",
        "match",
        "name",
        "remaining",
        "match",
        "match",
        "remaining",
        "remaining",
        "consumed",
        "newQuery",
        "consumeWhitespace",
        "consumeExpr",
        "check",
        "$$",
        "selector",
        "j",
        "check",
        "j",
        "args",
        "check",
        "j",
        "check",
        "i",
        "args",
        "ret",
        "remaining",
        "i",
        "j",
        "j",
        "j",
        "j",
        "query",
        "query",
        "query",
        "query",
        "query",
        "child",
        "parent",
        "child",
        "query",
        "parent",
        "query",
        "query",
        "descendant",
        "ancestor",
        "descendant",
        "query",
        "ancestor",
        "$$",
        "query",
        "j",
        "query",
        "onlyThisGroup",
        "j",
        "j",
        "j",
        "j",
        "onlyThisGroup",
        "$$",
        "j",
        "onlyThisGroup",
        "selector",
        "j",
        "onlyThisGroup",
        "$$",
        "selector",
        "$$",
        "$$",
        "$$",
        "$$",
        "i",
        "i",
        "$$",
        "query",
        "element",
        "query",
        "query",
        "query",
        "element",
        "element",
        "k",
        "query",
        "k",
        "query",
        "k",
        "sel",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "element",
        "allColonSelectorsMatch",
        "element",
        "element",
        "allColonSelectorsMatch",
        "element",
        "element",
        "allColonSelectorsMatch",
        "element",
        "element",
        "element",
        "allColonSelectorsMatch",
        "element",
        "element",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "element",
        "allColonSelectorsMatch",
        "$$",
        "allColonSelectorsMatch",
        "allColonSelectorsMatch",
        "k",
        "query",
        "k",
        "query",
        "k",
        "element",
        "allIdsMatch",
        "allIdsMatch",
        "id",
        "actualId",
        "allIdsMatch",
        "allIdsMatch",
        "k",
        "query",
        "k",
        "query",
        "k",
        "allClassesMatch",
        "allClassesMatch",
        "element",
        "cls",
        "allClassesMatch",
        "allClassesMatch",
        "k",
        "query",
        "k",
        "query",
        "k",
        "data",
        "data",
        "data",
        "value",
        "field",
        "$$",
        "fieldVal",
        "$$",
        "fieldVal",
        "fieldVal",
        "value",
        "fieldStr",
        "fieldStr",
        "valStr",
        "valStr",
        "caseInsensitive",
        "notExpr",
        "caseInsensitive",
        "value",
        "valStr",
        "fieldVal",
        "fieldStr",
        "matches",
        "fieldStr",
        "valStr",
        "matches",
        "valStr",
        "fieldStr",
        "matches",
        "valStr",
        "fieldStr",
        "matches",
        "fieldVal",
        "value",
        "matches",
        "fieldVal",
        "value",
        "matches",
        "notExpr",
        "fieldVal",
        "value",
        "fieldVal",
        "value",
        "handledNotExpr",
        "matches",
        "notExpr",
        "fieldVal",
        "value",
        "fieldVal",
        "value",
        "handledNotExpr",
        "matches",
        "notExpr",
        "fieldVal",
        "value",
        "fieldVal",
        "value",
        "handledNotExpr",
        "matches",
        "notExpr",
        "fieldVal",
        "value",
        "fieldVal",
        "value",
        "handledNotExpr",
        "matches",
        "matches",
        "field",
        "matches",
        "field",
        "matches",
        "field",
        "matches",
        "field",
        "notExpr",
        "handledNotExpr",
        "matches",
        "matches",
        "handledNotExpr",
        "matches",
        "allDataMatches",
        "allDataMatches",
        "operandsMatch",
        "field",
        "element",
        "field",
        "field",
        "field",
        "field",
        "element",
        "field",
        "field",
        "element",
        "field",
        "allDataMatches",
        "operandsMatch",
        "field",
        "element",
        "field",
        "field",
        "field",
        "field",
        "element",
        "field",
        "field",
        "element",
        "field",
        "allMetaMatches",
        "query",
        "query",
        "element",
        "matchesAny",
        "query",
        "element",
        "query",
        "query",
        "elements",
        "query",
        "cy",
        "elements",
        "elements",
        "i",
        "elements",
        "i",
        "queryMatches",
        "query",
        "elements",
        "i",
        "matches",
        "matches",
        "confirmRelations",
        "query",
        "element",
        "confirmRelations",
        "query",
        "element",
        "confirmRelations",
        "query",
        "element",
        "confirmRelations",
        "query",
        "element",
        "$$",
        "collection",
        "collection",
        "$$",
        "cy",
        "i",
        "element",
        "j",
        "j",
        "j",
        "queryMatches",
        "query",
        "element",
        "selectorFunction",
        "collection",
        "selectorFunction",
        "filteredCollection",
        "$$",
        "ele",
        "j",
        "j",
        "j",
        "queryMatches",
        "query",
        "ele",
        "$$",
        "$$",
        "obj",
        "isValue",
        "$$",
        "obj",
        "isValue",
        "obj",
        "obj",
        "query",
        "query",
        "query",
        "clean",
        "query",
        "group",
        "group",
        "j",
        "query",
        "j",
        "query",
        "j",
        "data",
        "data",
        "clean",
        "data",
        "clean",
        "data",
        "clean",
        "data",
        "data",
        "j",
        "query",
        "j",
        "query",
        "j",
        "meta",
        "clean",
        "meta",
        "clean",
        "meta",
        "j",
        "query",
        "j",
        "query",
        "i",
        "sel",
        "j",
        "query",
        "j",
        "query",
        "i",
        "sel",
        "j",
        "query",
        "j",
        "query",
        "i",
        "sel",
        "query",
        "queryToString",
        "query",
        "query",
        "queryToString",
        "query",
        "query",
        "queryToString",
        "query",
        "query",
        "queryToString",
        "query",
        "i",
        "i",
        "i",
        "queryToString",
        "query",
        "i",
        "cytoscape",
        "$$",
        "$$",
        "cy",
        "$$",
        "$$",
        "cy",
        "$$",
        "cy",
        "$$",
        "cy",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "fnMap",
        "options",
        "fnName",
        "fnMap",
        "fnMap",
        "fnName",
        "$$",
        "fn",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "prefix",
        "prefix",
        "prefix",
        "prefix",
        "number",
        "number",
        "number",
        "rgba",
        "hsla",
        "hex3",
        "hex6",
        "number",
        "rgba",
        "hsla",
        "hex3",
        "hex6",
        "$$",
        "data",
        "data",
        "mapData",
        "mapData",
        "$$",
        "$$",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "$$",
        "props",
        "t",
        "i",
        "$$",
        "i",
        "props",
        "i",
        "t",
        "props",
        "i",
        "t",
        "props",
        "i",
        "t",
        "i",
        "props",
        "i",
        "props",
        "i",
        "props",
        "prop",
        "prop",
        "$$",
        "color",
        "textTransform",
        "fontFamily",
        "fontStyle",
        "fontWeight",
        "fontSize",
        "$$",
        "$$",
        "i",
        "i",
        "i",
        "$$",
        "$$",
        "$$",
        "name",
        "value",
        "propIsBypass",
        "propIsFlat",
        "name",
        "$$",
        "name",
        "$$",
        "name",
        "property",
        "value",
        "value",
        "$$",
        "value",
        "valueIsString",
        "value",
        "$$",
        "value",
        "property",
        "propIsBypass",
        "value",
        "value",
        "name",
        "value",
        "valueIsString",
        "propIsFlat",
        "data",
        "$$",
        "value",
        "layoutData",
        "$$",
        "value",
        "propIsBypass",
        "layoutData",
        "data",
        "data",
        "layoutData",
        "name",
        "data",
        "value",
        "isLayout",
        "$$",
        "$$",
        "data",
        "propIsBypass",
        "name",
        "mapData",
        "$$",
        "value",
        "mapLayoutData",
        "$$",
        "value",
        "propIsBypass",
        "mapLayoutData",
        "mapData",
        "mapData",
        "mapLayoutData",
        "name",
        "mapData",
        "valueMin",
        "valueMin",
        "name",
        "mapData",
        "valueMax",
        "valueMax",
        "valueMin",
        "valueMax",
        "valueMin",
        "valueMax",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c2",
        "c1",
        "c1",
        "c2",
        "c2",
        "same",
        "name",
        "mapData",
        "value",
        "isLayout",
        "$$",
        "$$",
        "mapData",
        "parseFloat",
        "mapData",
        "parseFloat",
        "mapData",
        "valueMin",
        "valueMax",
        "propIsBypass",
        "name",
        "units",
        "implicitUnits",
        "valueIsString",
        "units",
        "unitsRegex",
        "units",
        "value",
        "$$",
        "unitsRegex",
        "match",
        "value",
        "match",
        "units",
        "match",
        "implicitUnits",
        "units",
        "units",
        "implicitUnits",
        "value",
        "parseFloat",
        "value",
        "isNaN",
        "value",
        "isNaN",
        "value",
        "value",
        "passedValue",
        "i",
        "i",
        "i",
        "en",
        "value",
        "name",
        "value",
        "value",
        "propIsBypass",
        "$$",
        "value",
        "value",
        "value",
        "name",
        "value",
        "value",
        "units",
        "units",
        "units",
        "propIsBypass",
        "name",
        "value",
        "value",
        "value",
        "units",
        "units",
        "ret",
        "units",
        "units",
        "value",
        "value",
        "units",
        "units",
        "ret",
        "units",
        "value",
        "value",
        "ret",
        "value",
        "propsStr",
        "propsStr",
        "i",
        "propsSplit",
        "i",
        "$$",
        "propsSplit",
        "i",
        "$$",
        "propName",
        "props",
        "propName",
        "props",
        "name",
        "props",
        "props",
        "props",
        "propIsBypass",
        "$$",
        "value",
        "name",
        "value",
        "propIsBypass",
        "i",
        "i",
        "i",
        "en",
        "value",
        "name",
        "value",
        "value",
        "propIsBypass",
        "regex",
        "value",
        "m",
        "name",
        "m",
        "value",
        "propIsBypass",
        "name",
        "value",
        "value",
        "propIsBypass",
        "$$",
        "selectorStr",
        "selectorStr",
        "$$",
        "selectorStr",
        "i",
        "selector",
        "i",
        "$$",
        "args",
        "args",
        "i",
        "$$",
        "i",
        "$$",
        "i",
        "prop",
        "mapVal",
        "mapVal",
        "$$",
        "prop",
        "mapVal",
        "prop",
        "mapVal",
        "args",
        "args",
        "$$",
        "name",
        "value",
        "name",
        "value",
        "property",
        "i",
        "property",
        "i",
        "property",
        "property",
        "property",
        "property",
        "i",
        "property",
        "i",
        "currentSelectorIsCore",
        "property",
        "property",
        "cytoscape",
        "$$",
        "$$",
        "eles",
        "ie",
        "eles",
        "ie",
        "eles",
        "ie",
        "ele",
        "cxtMeta",
        "cxtMeta",
        "cxtStyle",
        "ele",
        "ele",
        "app",
        "ele",
        "$$",
        "oldCxtKey",
        "newCxtKey",
        "oldCxtKey",
        "newCxtKey",
        "cache",
        "dualCxtKey",
        "cachedVal",
        "cachedVal",
        "i",
        "i",
        "i",
        "oldCxtKey",
        "i",
        "newCxtKey",
        "i",
        "oldHasCxt",
        "newHasCxt",
        "cxt",
        "cxtHasDiffed",
        "cxtHasMappedProps",
        "cxtHasDiffed",
        "cxtHasMappedProps",
        "props",
        "cxt",
        "cxtHasDiffed",
        "props",
        "cxt",
        "cxtHasMappedProps",
        "props",
        "cxt",
        "j",
        "props",
        "j",
        "props",
        "j",
        "prop",
        "i",
        "k",
        "k",
        "k",
        "newCxtKey",
        "k",
        "hasLaterCxt",
        "laterCxtOverrides",
        "laterCxt",
        "prop",
        "laterCxtOverrides",
        "addedProp",
        "name",
        "laterCxtOverrides",
        "addedProp",
        "name",
        "diffProps",
        "name",
        "cache",
        "dualCxtKey",
        "diffProps",
        "diffProps",
        "$$",
        "ele",
        "ele",
        "prevKey",
        "i",
        "i",
        "i",
        "context",
        "context",
        "ele",
        "contextSelectorMatches",
        "cxtKey",
        "cxtKey",
        "diffProps",
        "prevKey",
        "cxtKey",
        "ele",
        "cxtKey",
        "cxtKey",
        "diffProps",
        "$$",
        "cxtMeta",
        "cxtMeta",
        "cxtStyles",
        "cxtKey",
        "cxtStyles",
        "cxtKey",
        "cxtKey",
        "i",
        "i",
        "i",
        "cxtKey",
        "i",
        "hasCxt",
        "j",
        "cxt",
        "j",
        "cxt",
        "j",
        "style",
        "prop",
        "prop",
        "styProp",
        "cxt",
        "cxtStyles",
        "cxtKey",
        "style",
        "style",
        "$$",
        "cxtMeta",
        "cxtStyle",
        "ele",
        "cxtMeta",
        "i",
        "diffProps",
        "i",
        "diffProps",
        "i",
        "cxtStyle",
        "diffPropName",
        "ele",
        "diffPropName",
        "cxtProp",
        "eleProp",
        "cxtProp",
        "retDiffProps",
        "diffPropName",
        "eleProp",
        "ele",
        "cxtProp",
        "retDiffProp",
        "ele",
        "diffPropName",
        "retDiffProp",
        "retDiffProp",
        "retDiffProp",
        "retDiffProp",
        "retDiffProps",
        "$$",
        "ele",
        "ele",
        "_p",
        "_p",
        "i",
        "$$",
        "i",
        "_p",
        "i",
        "size",
        "hasPie",
        "_p",
        "hasPie",
        "style",
        "style",
        "style",
        "style",
        "style",
        "style",
        "style",
        "style",
        "style",
        "_p",
        "fStyle",
        "size",
        "family",
        "weight",
        "content",
        "transform",
        "valign",
        "halign",
        "oWidth",
        "_p",
        "fStyle",
        "weight",
        "size",
        "family",
        "style",
        "style",
        "style",
        "_p",
        "width",
        "height",
        "borderW",
        "ele",
        "style",
        "style",
        "style",
        "style",
        "style",
        "_p",
        "cpss",
        "cpd",
        "cpw",
        "curve",
        "_p",
        "$$",
        "ele",
        "parsedProp",
        "ele",
        "$$",
        "prop",
        "prop",
        "style",
        "prop",
        "origProp",
        "origProp",
        "parsedProp",
        "parsedProp",
        "parsedProp",
        "ele",
        "ele",
        "propIsBypass",
        "prop",
        "style",
        "prop",
        "currentProp",
        "currentProp",
        "currentProp",
        "style",
        "prop",
        "currentProp",
        "$$",
        "ele",
        "prop",
        "prop",
        "prop",
        "prop",
        "prop",
        "$$",
        "$$",
        "prop",
        "$$",
        "prop",
        "isLayout",
        "ele",
        "ele",
        "i",
        "fields",
        "fieldVal",
        "i",
        "fields",
        "i",
        "fieldVal",
        "fieldVal",
        "field",
        "$$",
        "fieldVal",
        "percent",
        "percent",
        "fieldVal",
        "prop",
        "prop",
        "prop",
        "percent",
        "percent",
        "percent",
        "percent",
        "prop",
        "prop",
        "prop",
        "prop",
        "prop",
        "prop",
        "prop",
        "prop",
        "prop",
        "prop",
        "r1",
        "r2",
        "r1",
        "percent",
        "g1",
        "g2",
        "g1",
        "percent",
        "b1",
        "b2",
        "b1",
        "percent",
        "a1",
        "a2",
        "a1",
        "percent",
        "flatProp",
        "prop",
        "prop",
        "clr",
        "clr",
        "clr",
        "clr",
        "prop",
        "prop",
        "prop",
        "percent",
        "flatProp",
        "prop",
        "calcValue",
        "prop",
        "flatProp",
        "flatProp",
        "prop",
        "origProp",
        "prop",
        "flatProp",
        "printMappingErr",
        "flatProp",
        "prop",
        "prop",
        "flatProp",
        "$$",
        "$$",
        "prop",
        "$$",
        "prop",
        "isLayout",
        "ele",
        "ele",
        "i",
        "fields",
        "fieldVal",
        "i",
        "fields",
        "i",
        "fieldVal",
        "fieldVal",
        "field",
        "flatProp",
        "prop",
        "fieldVal",
        "prop",
        "flatProp",
        "origProp",
        "origProp",
        "flatProp",
        "prop",
        "flatPropVal",
        "prop",
        "flatProp",
        "printMappingErr",
        "flatProp",
        "prop",
        "prop",
        "flatProp",
        "propIsBypass",
        "origPropIsBypass",
        "prop",
        "origProp",
        "prop",
        "origProp",
        "style",
        "prop",
        "prop",
        "origPropIsBypass",
        "origProp",
        "prop",
        "style",
        "prop",
        "prop",
        "$$",
        "cy",
        "eles",
        "$$",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "j",
        "$$",
        "j",
        "$$",
        "j",
        "style",
        "prop",
        "propInStyle",
        "propInStyle",
        "propInStyle",
        "ele",
        "mapping",
        "ele",
        "$$",
        "ele",
        "diffProps",
        "isBypass",
        "ele",
        "style",
        "style",
        "style",
        "props",
        "duration",
        "i",
        "props",
        "i",
        "props",
        "i",
        "style",
        "prop",
        "diffProps",
        "prop",
        "diffProp",
        "diffProp",
        "diffProp",
        "diffProp",
        "styProp",
        "fromProp",
        "$$",
        "fromProp",
        "$$",
        "toProp",
        "diff",
        "fromProp",
        "toProp",
        "$$",
        "fromProp",
        "$$",
        "toProp",
        "diff",
        "fromProp",
        "toProp",
        "$$",
        "fromProp",
        "$$",
        "toProp",
        "diff",
        "fromProp",
        "toProp",
        "fromProp",
        "toProp",
        "fromProp",
        "toProp",
        "diff",
        "css",
        "prop",
        "toProp",
        "ele",
        "prop",
        "fromProp",
        "anyPrev",
        "anyPrev",
        "ele",
        "ele",
        "delay",
        "ele",
        "delay",
        "ele",
        "css",
        "duration",
        "isBypass",
        "ele",
        "props",
        "ele",
        "ele",
        "ele",
        "ele",
        "props",
        "ele",
        "cytoscape",
        "$$",
        "$$",
        "eles",
        "name",
        "value",
        "updateTransitions",
        "name",
        "name",
        "value",
        "i",
        "$$",
        "i",
        "$$",
        "i",
        "prop",
        "name",
        "value",
        "parsedProp",
        "props",
        "parsedProp",
        "$$",
        "name",
        "name",
        "value",
        "parsedProp",
        "props",
        "parsedProp",
        "$$",
        "name",
        "updateTransitions",
        "value",
        "i",
        "$$",
        "i",
        "$$",
        "i",
        "prop",
        "specifiedProps",
        "name",
        "value",
        "value",
        "specifiedProps",
        "$$",
        "name",
        "value",
        "name",
        "value",
        "parsedProp",
        "props",
        "parsedProp",
        "props",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "j",
        "props",
        "j",
        "props",
        "j",
        "updateTransitions",
        "style",
        "prop",
        "diffProp",
        "diffProps",
        "prop",
        "prevProp",
        "ret",
        "ele",
        "prop",
        "ret",
        "updateTransitions",
        "diffProp",
        "style",
        "prop",
        "updateTransitions",
        "ele",
        "diffProps",
        "isBypass",
        "ret",
        "$$",
        "eles",
        "name",
        "value",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "$$",
        "name",
        "prop",
        "ele",
        "name",
        "value",
        "prop",
        "value",
        "prop",
        "value",
        "$$",
        "eles",
        "updateTransitions",
        "j",
        "eles",
        "j",
        "eles",
        "j",
        "ele",
        "i",
        "$$",
        "i",
        "$$",
        "i",
        "prop",
        "name",
        "value",
        "style",
        "prop",
        "diffProps",
        "prop",
        "prevProp",
        "ele",
        "parsedProp",
        "diffProp",
        "style",
        "prop",
        "updateTransitions",
        "ele",
        "diffProps",
        "isBypass",
        "$$",
        "eles",
        "props",
        "updateTransitions",
        "j",
        "eles",
        "j",
        "eles",
        "j",
        "ele",
        "i",
        "props",
        "i",
        "props",
        "i",
        "$$",
        "name",
        "name",
        "value",
        "style",
        "prop",
        "diffProps",
        "prop",
        "prevProp",
        "ele",
        "parsedProp",
        "diffProp",
        "style",
        "prop",
        "updateTransitions",
        "ele",
        "diffProps",
        "isBypass",
        "cytoscape",
        "$$",
        "$$",
        "cy",
        "domElement",
        "domElement",
        "parseFloat",
        "pxAsStr",
        "px",
        "$$",
        "propName",
        "cy",
        "domElement",
        "domElement",
        "propName",
        "$$",
        "propName",
        "propName",
        "propName",
        "propStr",
        "prop",
        "$$",
        "propName",
        "propName",
        "prop",
        "prop",
        "cytoscape",
        "$$",
        "$$",
        "ele",
        "ele",
        "ele",
        "ele",
        "cy",
        "i",
        "$$",
        "i",
        "$$",
        "i",
        "style",
        "prop",
        "styleProp",
        "styleProp",
        "styleProp",
        "styleProp",
        "zoom",
        "rstyle",
        "prop",
        "val",
        "rstyle",
        "$$",
        "prop",
        "val",
        "rstyle",
        "$$",
        "ele",
        "ele",
        "ele",
        "ele",
        "i",
        "$$",
        "i",
        "$$",
        "i",
        "style",
        "prop",
        "styleProp",
        "rstyle",
        "prop",
        "styleProp",
        "rstyle",
        "$$",
        "prop",
        "styleProp",
        "rstyle",
        "$$",
        "ele",
        "opts",
        "opts",
        "opts",
        "opts",
        "$$",
        "ele",
        "style",
        "ele",
        "style",
        "ele",
        "style",
        "i",
        "$$",
        "i",
        "$$",
        "i",
        "style",
        "prop",
        "style",
        "$$",
        "prop",
        "styleProp",
        "$$",
        "styleProp",
        "styleProp",
        "prop",
        "styleProp",
        "styleProp",
        "opts",
        "rstyle",
        "styleProp",
        "rstyle",
        "prop",
        "styleProp",
        "rstyle",
        "$$",
        "prop",
        "styleProp",
        "rstyle",
        "cytoscape",
        "$$",
        "$$",
        "style",
        "json",
        "i",
        "json",
        "i",
        "json",
        "i",
        "context",
        "context",
        "style",
        "selector",
        "name",
        "props",
        "props",
        "name",
        "style",
        "name",
        "value",
        "style",
        "$$",
        "cy",
        "json",
        "$$",
        "cy",
        "$$",
        "style",
        "json",
        "style",
        "$$",
        "json",
        "style",
        "$$",
        "style",
        "json",
        "style",
        "$$",
        "i",
        "i",
        "i",
        "cxt",
        "cxt",
        "j",
        "props",
        "j",
        "props",
        "j",
        "css",
        "prop",
        "prop",
        "json",
        "selector",
        "selector",
        "css",
        "json",
        "cytoscape",
        "$$",
        "$$",
        "style",
        "remaining",
        "remaining",
        "remaining",
        "selAndBlockStr",
        "remaining",
        "remaining",
        "selAndBlockStr",
        "remaining",
        "blockRem",
        "propAndValStr",
        "blockRem",
        "blockRem",
        "propAndValStr",
        "blockRem",
        "remaining",
        "nothingLeftToParse",
        "remaining",
        "selAndBlock",
        "$$",
        "remaining",
        "selAndBlockStr",
        "selAndBlock",
        "selAndBlock",
        "$$",
        "selectorStr",
        "selector",
        "selectorStr",
        "$$",
        "selectorStr",
        "removeSelAndBlockFromRemaining",
        "selAndBlock",
        "blockRem",
        "blockStr",
        "blockRem",
        "nothingLeftToParse",
        "blockRem",
        "propAndVal",
        "$$",
        "blockStr",
        "invalidBlock",
        "propAndValStr",
        "propAndVal",
        "propAndVal",
        "propAndVal",
        "$$",
        "propStr",
        "prop",
        "$$",
        "propAndValStr",
        "removePropAndValFromRem",
        "style",
        "propStr",
        "valStr",
        "parsedProp",
        "$$",
        "propAndValStr",
        "removePropAndValFromRem",
        "props",
        "propStr",
        "valStr",
        "removePropAndValFromRem",
        "invalidBlock",
        "removeSelAndBlockFromRemaining",
        "style",
        "selectorStr",
        "i",
        "props",
        "i",
        "props",
        "i",
        "style",
        "prop",
        "prop",
        "removeSelAndBlockFromRemaining",
        "style",
        "$$",
        "cy",
        "$$",
        "cy",
        "$$",
        "style",
        "style",
        "$$",
        "style",
        "$$",
        "style",
        "style",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "selector",
        "i",
        "selector",
        "$$",
        "name",
        "value",
        "$$",
        "name",
        "i",
        "name",
        "value",
        "$$",
        "name",
        "j",
        "$$",
        "j",
        "$$",
        "j",
        "prop",
        "mapVal",
        "mapVal",
        "$$",
        "prop",
        "mapVal",
        "prop",
        "i",
        "name",
        "value",
        "$$",
        "cy",
        "$$",
        "cy",
        "i",
        "i",
        "i",
        "context",
        "context",
        "style",
        "selector",
        "j",
        "props",
        "j",
        "props",
        "j",
        "style",
        "prop",
        "prop",
        "style",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "defaults",
        "$$",
        "opts",
        "defaults",
        "$$",
        "origDefaults",
        "opts",
        "$$",
        "fnMap",
        "options",
        "name",
        "fnMap",
        "fnMap",
        "name",
        "$$",
        "name",
        "fn",
        "$$",
        "opts",
        "$$",
        "$$",
        "opts",
        "opts",
        "$$",
        "defaults",
        "opts",
        "opts",
        "container",
        "container",
        "reg",
        "reg",
        "reg",
        "reg",
        "container",
        "container",
        "container",
        "container",
        "reg",
        "reg",
        "reg",
        "reg",
        "container",
        "container",
        "reg",
        "reg",
        "cy",
        "container",
        "opts",
        "options",
        "$$",
        "head",
        "options",
        "options",
        "$$",
        "head",
        "options",
        "val",
        "altVal",
        "val",
        "val",
        "altVal",
        "altVal",
        "options",
        "options",
        "$$",
        "defVal",
        "options",
        "defVal",
        "options",
        "defVal",
        "options",
        "defVal",
        "options",
        "defVal",
        "options",
        "defVal",
        "options",
        "options",
        "defVal",
        "options",
        "options",
        "defVal",
        "options",
        "options",
        "head",
        "options",
        "$$",
        "options",
        "options",
        "$$",
        "options",
        "$$",
        "options",
        "options",
        "$$",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "selType",
        "selType",
        "selType",
        "isTouch",
        "_p",
        "_p",
        "_p",
        "selType",
        "$$",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "_p",
        "options",
        "_p",
        "options",
        "$$",
        "options",
        "options",
        "_p",
        "options",
        "$$",
        "options",
        "options",
        "_p",
        "options",
        "_p",
        "options",
        "cy",
        "$$",
        "options",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "options",
        "defVal",
        "$$",
        "$$",
        "options",
        "options",
        "options",
        "options",
        "cy",
        "options",
        "cy",
        "cy",
        "cy",
        "options",
        "cy",
        "cy",
        "$$",
        "options",
        "cy",
        "options",
        "i",
        "readies",
        "i",
        "readies",
        "i",
        "cy",
        "fn",
        "reg",
        "reg",
        "cy",
        "options",
        "$$",
        "$$",
        "$$",
        "fn",
        "fn",
        "fn",
        "domEle",
        "parEle",
        "parEle",
        "domEle",
        "id",
        "id",
        "index",
        "index",
        "$$",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "id2index",
        "id",
        "index",
        "alreadyInPool",
        "index",
        "elements",
        "elements",
        "ele",
        "id2index",
        "id",
        "index",
        "ele",
        "index",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "id2index",
        "id",
        "index",
        "inPool",
        "id",
        "elements",
        "index",
        "j",
        "elements",
        "j",
        "elements",
        "j",
        "id2index",
        "jid",
        "$$",
        "json",
        "cy",
        "i",
        "ele",
        "ele",
        "json",
        "group",
        "json",
        "group",
        "json",
        "group",
        "ele",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "cy",
        "json",
        "fn",
        "cy",
        "_p",
        "q",
        "fn",
        "_p",
        "_p",
        "setTimeout",
        "q",
        "q",
        "_p",
        "cytoscape",
        "$$",
        "f",
        "f",
        "ready",
        "setTimeout",
        "fn",
        "f",
        "$$",
        "opts",
        "$$",
        "opts",
        "eles",
        "cy",
        "elements",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "jsons",
        "ele",
        "elements",
        "$$",
        "cy",
        "jsons",
        "$$",
        "opts",
        "elements",
        "$$",
        "cy",
        "jsons",
        "$$",
        "opts",
        "$$",
        "opts",
        "$$",
        "opts",
        "grs",
        "i",
        "il",
        "i",
        "grs",
        "i",
        "elesByGroup",
        "group",
        "$$",
        "elesArray",
        "elesArray",
        "j",
        "jl",
        "j",
        "elesArray",
        "j",
        "json",
        "group",
        "jsons",
        "json",
        "elements",
        "$$",
        "cy",
        "jsons",
        "elements",
        "$$",
        "cy",
        "json",
        "elements",
        "collection",
        "$$",
        "collection",
        "collection",
        "collection",
        "$$",
        "collection",
        "collection",
        "selector",
        "collection",
        "elements",
        "onload",
        "ondone",
        "cy",
        "oldEles",
        "oldEles",
        "cy",
        "elements",
        "$$",
        "elements",
        "$$",
        "elements",
        "cy",
        "elements",
        "cy",
        "e",
        "cy",
        "cy",
        "e",
        "cy",
        "cy",
        "cy",
        "onload",
        "cy",
        "cy",
        "ondone",
        "cy",
        "$$",
        "cy",
        "layoutOpts",
        "cy",
        "cy",
        "layoutOpts",
        "ready",
        "callback",
        "callback",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "eles",
        "cy",
        "cy",
        "eles",
        "cy",
        "$$",
        "now",
        "handleElements",
        "now",
        "globalAnimationStep",
        "globalAnimationStep",
        "now",
        "now",
        "cy",
        "ele",
        "isCore",
        "ele",
        "ele",
        "current",
        "queue",
        "queue",
        "next",
        "next",
        "now",
        "current",
        "next",
        "current",
        "i",
        "i",
        "current",
        "i",
        "ani",
        "startAnimation",
        "ele",
        "ani",
        "step",
        "ele",
        "ani",
        "now",
        "isCore",
        "ani",
        "completes",
        "ani",
        "current",
        "i",
        "ranAnis",
        "i",
        "completes",
        "i",
        "completes",
        "i",
        "ani",
        "$$",
        "complete",
        "complete",
        "ele",
        "now",
        "isCore",
        "current",
        "queue",
        "doneEles",
        "ele",
        "ranAnis",
        "e",
        "eles",
        "e",
        "eles",
        "e",
        "handleElement",
        "ele",
        "handleElement",
        "cy",
        "eles",
        "ranCoreAni",
        "eles",
        "eles",
        "toNotify",
        "updatedEles",
        "eles",
        "updatedEles",
        "eles",
        "cy",
        "toNotify",
        "eles",
        "doneEles",
        "ani",
        "$$",
        "isCore",
        "cy",
        "isEles",
        "ele",
        "pos",
        "pos",
        "style",
        "ele",
        "isCore",
        "cy",
        "pan",
        "pan",
        "cy",
        "ani",
        "ani",
        "ani",
        "startPosition",
        "ani",
        "startStyle",
        "ani",
        "startPan",
        "ani",
        "startZoom",
        "animation",
        "now",
        "isCore",
        "cy",
        "animation",
        "animation",
        "animation",
        "isCore",
        "animation",
        "percent",
        "percent",
        "now",
        "startTime",
        "animation",
        "percent",
        "percent",
        "percent",
        "percent",
        "properties",
        "animation",
        "properties",
        "endPos",
        "isEles",
        "valid",
        "startPos",
        "endPos",
        "pos",
        "ease",
        "startPos",
        "endPos",
        "percent",
        "valid",
        "startPos",
        "endPos",
        "pos",
        "ease",
        "startPos",
        "endPos",
        "percent",
        "animation",
        "properties",
        "endPan",
        "isCore",
        "animatingPan",
        "valid",
        "startPan",
        "endPan",
        "pan",
        "ease",
        "startPan",
        "endPan",
        "percent",
        "valid",
        "startPan",
        "endPan",
        "pan",
        "ease",
        "startPan",
        "endPan",
        "percent",
        "animation",
        "properties",
        "endZoom",
        "isCore",
        "animatingZoom",
        "valid",
        "startZoom",
        "endZoom",
        "ease",
        "startZoom",
        "endZoom",
        "percent",
        "animatingPan",
        "animatingZoom",
        "properties",
        "isEles",
        "properties",
        "i",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "animation",
        "name",
        "ease",
        "start",
        "end",
        "percent",
        "style",
        "name",
        "easedVal",
        "$$",
        "now",
        "percent",
        "animation",
        "percent",
        "start",
        "end",
        "start",
        "end",
        "$$",
        "start",
        "$$",
        "end",
        "start",
        "end",
        "startProp",
        "endProp",
        "percent",
        "percent",
        "percent",
        "percent",
        "percent",
        "startProp",
        "startProp",
        "start",
        "startProp",
        "startProp",
        "startProp",
        "start",
        "startProp",
        "endProp",
        "endProp",
        "end",
        "endProp",
        "endProp",
        "endProp",
        "end",
        "endProp",
        "$$",
        "start",
        "$$",
        "end",
        "start",
        "end",
        "start",
        "percent",
        "$$",
        "start",
        "$$",
        "end",
        "ch1",
        "ch2",
        "ch2",
        "ch1",
        "percent",
        "diff",
        "min",
        "ch",
        "c1",
        "c2",
        "ch",
        "c1",
        "c2",
        "ch",
        "c1",
        "c2",
        "r",
        "g",
        "b",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "options",
        "options",
        "options",
        "renderer",
        "options",
        "cytoscape",
        "$$",
        "$$",
        "layout",
        "options",
        "options",
        "$$",
        "options",
        "$$",
        "options",
        "$$",
        "name",
        "LayoutProto",
        "$$",
        "name",
        "options",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "LayoutProto",
        "$$",
        "options",
        "$$",
        "layout",
        "layout",
        "layout",
        "layout",
        "layout",
        "cytoscape",
        "$$",
        "$$",
        "i",
        "i",
        "i",
        "bEles",
        "ele",
        "bEles",
        "ele",
        "bTypes",
        "bTypes",
        "renderer",
        "p",
        "p",
        "callback",
        "callback",
        "_p",
        "_p",
        "_p",
        "_p",
        "_p",
        "_p",
        "_p",
        "_p",
        "_p",
        "$$",
        "_p",
        "_p",
        "_p",
        "_p",
        "callback",
        "callback",
        "id",
        "id",
        "cy",
        "id",
        "ele",
        "data",
        "cytoscape",
        "$$",
        "$$",
        "context",
        "zoom",
        "pan",
        "pxRatio",
        "r",
        "context",
        "zoom",
        "pan",
        "pxRatio",
        "options",
        "$$",
        "options",
        "RendererProto",
        "$$",
        "options",
        "RendererProto",
        "$$",
        "options",
        "cy",
        "cy",
        "cytoscape",
        "$$",
        "$$",
        "eles",
        "$$",
        "eles",
        "eles",
        "$$",
        "eles",
        "eles",
        "$$",
        "eles",
        "$$",
        "eles",
        "$$",
        "selector",
        "selector",
        "nodes",
        "selector",
        "nodes",
        "selector",
        "selector",
        "edges",
        "selector",
        "edges",
        "selector",
        "$$",
        "selector",
        "eles",
        "selector",
        "eles",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "newStyle",
        "newStyle",
        "newStyle",
        "s",
        "style",
        "$$",
        "style",
        "_p",
        "style",
        "$$",
        "style",
        "_p",
        "$$",
        "style",
        "$$",
        "style",
        "_p",
        "$$",
        "style",
        "_p",
        "$$",
        "_p",
        "cytoscape",
        "$$",
        "$$",
        "args",
        "pan",
        "$$",
        "args",
        "dim",
        "args",
        "pan",
        "dim",
        "$$",
        "args",
        "dims",
        "args",
        "x",
        "dims",
        "y",
        "dims",
        "$$",
        "x",
        "pan",
        "x",
        "$$",
        "y",
        "pan",
        "y",
        "dim",
        "args",
        "val",
        "args",
        "dim",
        "dim",
        "$$",
        "val",
        "pan",
        "dim",
        "val",
        "args",
        "$$",
        "args",
        "dims",
        "args",
        "x",
        "dims",
        "y",
        "dims",
        "$$",
        "x",
        "pan",
        "x",
        "$$",
        "y",
        "pan",
        "y",
        "dim",
        "args",
        "val",
        "args",
        "dim",
        "dim",
        "$$",
        "val",
        "pan",
        "dim",
        "val",
        "elements",
        "padding",
        "elements",
        "padding",
        "viewportState",
        "_p",
        "viewportState",
        "_p",
        "viewportState",
        "elements",
        "padding",
        "$$",
        "elements",
        "padding",
        "padding",
        "elements",
        "elements",
        "$$",
        "elements",
        "elements",
        "sel",
        "$$",
        "elements",
        "bb",
        "bbe",
        "bbe",
        "bbe",
        "bbe",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "$$",
        "elements",
        "elements",
        "bb",
        "bb",
        "elements",
        "padding",
        "$$",
        "padding",
        "padding",
        "isNaN",
        "w",
        "isNaN",
        "h",
        "w",
        "h",
        "isNaN",
        "bb",
        "isNaN",
        "bb",
        "bb",
        "bb",
        "zoom",
        "w",
        "padding",
        "bb",
        "h",
        "padding",
        "bb",
        "zoom",
        "zoom",
        "zoom",
        "zoom",
        "zoom",
        "zoom",
        "w",
        "zoom",
        "bb",
        "bb",
        "h",
        "zoom",
        "bb",
        "bb",
        "zoom",
        "pan",
        "zoom",
        "zoom",
        "$$",
        "zoom",
        "zoom",
        "zoom",
        "zoom",
        "$$",
        "zoom",
        "zoom",
        "$$",
        "zoom",
        "$$",
        "zoom",
        "pos",
        "p",
        "z",
        "pan",
        "p",
        "z",
        "pan",
        "pos",
        "pos",
        "$$",
        "zoom",
        "pos",
        "$$",
        "pos",
        "$$",
        "pos",
        "zoom",
        "zoom",
        "zoom",
        "zoom",
        "zoom",
        "zoom",
        "pos",
        "zoom2",
        "zoom1",
        "pos",
        "pan1",
        "pos",
        "zoom2",
        "zoom1",
        "pos",
        "pan1",
        "pos",
        "zoom",
        "pan2",
        "pan1",
        "pan2",
        "pan1",
        "pan2",
        "posChanged",
        "zoom",
        "opts",
        "opts",
        "$$",
        "opts",
        "zoomDefd",
        "$$",
        "opts",
        "panDefd",
        "zoomDefd",
        "panDefd",
        "zoomDefd",
        "opts",
        "z",
        "_p",
        "z",
        "_p",
        "_p",
        "zoomFailed",
        "_p",
        "z",
        "events",
        "panDefd",
        "zoomFailed",
        "opts",
        "_p",
        "opts",
        "$$",
        "p",
        "_p",
        "p",
        "panFailed",
        "$$",
        "p",
        "_p",
        "p",
        "panFailed",
        "panFailed",
        "events",
        "events",
        "events",
        "events",
        "elements",
        "elements",
        "pan",
        "pan",
        "elements",
        "zoom",
        "$$",
        "elements",
        "elements",
        "selector",
        "$$",
        "elements",
        "elements",
        "elements",
        "zoom",
        "zoom",
        "zoom",
        "w",
        "zoom",
        "bb",
        "bb",
        "h",
        "zoom",
        "bb",
        "bb",
        "pan",
        "container",
        "container",
        "container",
        "container",
        "rb",
        "pan",
        "zoom",
        "rb",
        "pan",
        "zoom",
        "rb",
        "pan",
        "zoom",
        "rb",
        "pan",
        "zoom",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "width",
        "height",
        "width",
        "height",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "fnMap",
        "options",
        "name",
        "fnMap",
        "fnMap",
        "name",
        "$$",
        "name",
        "fn",
        "cy",
        "element",
        "tryThisId",
        "$$",
        "element",
        "element",
        "element",
        "json",
        "tryThisId",
        "tryThisId",
        "group",
        "group",
        "cy",
        "id",
        "group",
        "cy",
        "id",
        "id",
        "group",
        "group",
        "id",
        "$$",
        "cy",
        "restore",
        "$$",
        "$$",
        "cy",
        "restore",
        "restore",
        "restore",
        "restore",
        "cy",
        "$$",
        "cy",
        "$$",
        "$$",
        "cy",
        "cy",
        "cy",
        "rpos",
        "pan",
        "zoom",
        "rpos",
        "pan",
        "zoom",
        "$$",
        "classes",
        "i",
        "l",
        "i",
        "classes",
        "i",
        "cls",
        "cls",
        "cls",
        "cy",
        "restore",
        "restore",
        "$$",
        "cy",
        "elements",
        "options",
        "$$",
        "$$",
        "cy",
        "elements",
        "cy",
        "$$",
        "cy",
        "$$",
        "elements",
        "elements",
        "elements",
        "$$",
        "elements",
        "$$",
        "elements",
        "createdElements",
        "elements",
        "i",
        "l",
        "i",
        "elements",
        "i",
        "json",
        "json",
        "json",
        "data",
        "data",
        "idFactory",
        "cy",
        "json",
        "cy",
        "data",
        "elesIds",
        "data",
        "$$",
        "cy",
        "json",
        "eles",
        "ele",
        "elesIds",
        "data",
        "elements",
        "eles",
        "elements",
        "i",
        "l",
        "i",
        "elements",
        "i",
        "element",
        "element",
        "options",
        "options",
        "ids",
        "id",
        "ids",
        "id",
        "element",
        "indexes",
        "id",
        "element",
        "cy",
        "ids",
        "indexes",
        "createdElements",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "id",
        "id",
        "ele",
        "ele",
        "$$",
        "cy",
        "$$",
        "ele",
        "ele",
        "$$",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "cls",
        "p",
        "p",
        "cls",
        "classes",
        "cls",
        "i",
        "classes",
        "i",
        "classes",
        "i",
        "json",
        "cls",
        "i",
        "classes",
        "json",
        "$$",
        "i",
        "i",
        "i",
        "ele",
        "jsons",
        "json",
        "jsons",
        "$$",
        "i",
        "i",
        "i",
        "ele",
        "$$",
        "cy",
        "json",
        "elesArr",
        "clone",
        "$$",
        "cy",
        "elesArr",
        "$$",
        "notifyRenderer",
        "notifyRenderer",
        "notifyRenderer",
        "i",
        "l",
        "i",
        "i",
        "ele",
        "nodes",
        "ele",
        "numNodes",
        "edges",
        "ele",
        "numEdges",
        "elements",
        "nodes",
        "edges",
        "elements",
        "i",
        "l",
        "i",
        "elements",
        "i",
        "ele",
        "ele",
        "_private",
        "data",
        "data",
        "idFactory",
        "cy",
        "ele",
        "$$",
        "data",
        "$$",
        "data",
        "$$",
        "data",
        "cy",
        "data",
        "$$",
        "data",
        "data",
        "ele",
        "fields",
        "j",
        "fieldsLength",
        "j",
        "fields",
        "j",
        "data",
        "field",
        "val",
        "val",
        "$$",
        "id",
        "field",
        "badSourceOrTarget",
        "cy",
        "val",
        "$$",
        "id",
        "field",
        "val",
        "badSourceOrTarget",
        "badSourceOrTarget",
        "cy",
        "data",
        "cy",
        "data",
        "src",
        "edge",
        "tgt",
        "edge",
        "edge",
        "src",
        "edge",
        "tgt",
        "_private",
        "_private",
        "id",
        "ele",
        "_private",
        "cy",
        "ele",
        "restored",
        "ele",
        "i",
        "numNodes",
        "i",
        "elements",
        "i",
        "node",
        "node",
        "parentId",
        "specifiedParent",
        "cy",
        "parentId",
        "parent",
        "data",
        "ancestor",
        "node",
        "ancestor",
        "selfAsParent",
        "data",
        "ancestor",
        "ancestor",
        "selfAsParent",
        "parent",
        "node",
        "node",
        "parent",
        "cy",
        "restored",
        "$$",
        "cy",
        "restored",
        "restored",
        "restored",
        "restored",
        "restored",
        "toUpdateStyle",
        "notifyRenderer",
        "notifyRenderer",
        "restored",
        "restored",
        "$$",
        "ele",
        "ele",
        "$$",
        "ele",
        "ele",
        "$$",
        "notifyRenderer",
        "notifyRenderer",
        "notifyRenderer",
        "node",
        "node",
        "i",
        "edges",
        "i",
        "add",
        "edges",
        "i",
        "node",
        "node",
        "i",
        "children",
        "i",
        "add",
        "children",
        "i",
        "ele",
        "elesToRemoveIds",
        "ele",
        "alreadyAdded",
        "elesToRemoveIds",
        "ele",
        "ele",
        "elesToRemove",
        "ele",
        "addConnectedEdges",
        "ele",
        "addChildren",
        "ele",
        "elesToRemove",
        "ele",
        "i",
        "l",
        "i",
        "i",
        "add",
        "ele",
        "node",
        "edge",
        "node",
        "j",
        "connectedEdges",
        "j",
        "connectedEdges",
        "j",
        "edge",
        "connectedEdge",
        "connectedEdges",
        "j",
        "parent",
        "ele",
        "ele",
        "ele",
        "parent",
        "parent",
        "parent",
        "j",
        "children",
        "j",
        "children",
        "j",
        "ele",
        "children",
        "j",
        "i",
        "elesToRemove",
        "i",
        "elesToRemove",
        "i",
        "ele",
        "cy",
        "ele",
        "removed",
        "ele",
        "ele",
        "ele",
        "ele",
        "removeEdgeRef",
        "src",
        "ele",
        "removeEdgeRef",
        "tgt",
        "ele",
        "ele",
        "parent",
        "removeChildRef",
        "parent",
        "ele",
        "cy",
        "cy",
        "i",
        "elesStillInside",
        "i",
        "elesStillInside",
        "i",
        "ele",
        "cy",
        "$$",
        "removed",
        "removedElements",
        "notifyRenderer",
        "removedElements",
        "removedElements",
        "i",
        "elesToRemove",
        "i",
        "elesToRemove",
        "i",
        "ele",
        "ele",
        "isNode",
        "parentId",
        "checkedParentId",
        "parentId",
        "checkedParentId",
        "parentId",
        "cy",
        "parentId",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "$$",
        "cy",
        "srcId",
        "cy",
        "tgtId",
        "srcExists",
        "tgtExists",
        "i",
        "jsons",
        "i",
        "jsons",
        "i",
        "json",
        "srcExists",
        "json",
        "srcId",
        "tgtExists",
        "json",
        "tgtId",
        "cy",
        "jsons",
        "parentId",
        "cy",
        "parentId",
        "parentExists",
        "descs",
        "descs",
        "i",
        "i",
        "jsons",
        "i",
        "json",
        "json",
        "parentId",
        "parentId",
        "cy",
        "jsons",
        "descsEtc",
        "cytoscape",
        "$$",
        "$$",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "roots",
        "fn",
        "directed",
        "$$",
        "roots",
        "$$",
        "roots",
        "options",
        "roots",
        "roots",
        "options",
        "fn",
        "options",
        "directed",
        "options",
        "std",
        "options",
        "thisArg",
        "options",
        "directed",
        "arguments",
        "$$",
        "fn",
        "fn",
        "directed",
        "fn",
        "$$",
        "fn",
        "fn",
        "$$",
        "roots",
        "roots",
        "roots",
        "i",
        "v",
        "i",
        "v",
        "i",
        "Q",
        "v",
        "i",
        "V",
        "v",
        "i",
        "connectedNodes",
        "v",
        "i",
        "id2depth",
        "v",
        "i",
        "Q",
        "Q",
        "id2depth",
        "v",
        "connectedBy",
        "v",
        "prevEdge",
        "prevEdge",
        "v",
        "std",
        "ret",
        "fn",
        "thisArg",
        "v",
        "prevEdge",
        "prevNode",
        "j",
        "depth",
        "ret",
        "fn",
        "v",
        "j",
        "depth",
        "v",
        "prevEdge",
        "prevNode",
        "ret",
        "found",
        "v",
        "ret",
        "v",
        "directed",
        "v",
        "edges",
        "i",
        "vwEdges",
        "i",
        "vwEdges",
        "i",
        "e",
        "v",
        "nodes",
        "w",
        "V",
        "w",
        "w",
        "w",
        "Q",
        "w",
        "V",
        "w",
        "id2depth",
        "w",
        "id2depth",
        "v",
        "connectedNodes",
        "w",
        "connectedBy",
        "w",
        "e",
        "i",
        "connectedNodes",
        "i",
        "connectedNodes",
        "i",
        "connectedBy",
        "node",
        "edge",
        "connectedEles",
        "edge",
        "connectedEles",
        "node",
        "$$",
        "cy",
        "connectedEles",
        "$$",
        "cy",
        "found",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "roots",
        "fn",
        "directed",
        "$$",
        "roots",
        "$$",
        "roots",
        "options",
        "roots",
        "roots",
        "options",
        "fn",
        "options",
        "directed",
        "options",
        "std",
        "options",
        "thisArg",
        "options",
        "directed",
        "arguments",
        "$$",
        "fn",
        "fn",
        "directed",
        "fn",
        "$$",
        "fn",
        "fn",
        "$$",
        "roots",
        "roots",
        "roots",
        "i",
        "v",
        "i",
        "v",
        "i",
        "S",
        "v",
        "i",
        "connectedNodes",
        "v",
        "i",
        "id2depth",
        "v",
        "i",
        "S",
        "S",
        "discovered",
        "v",
        "discovered",
        "v",
        "id2depth",
        "v",
        "connectedBy",
        "v",
        "prevEdge",
        "prevEdge",
        "v",
        "std",
        "ret",
        "fn",
        "thisArg",
        "v",
        "prevEdge",
        "prevNode",
        "j",
        "depth",
        "ret",
        "fn",
        "v",
        "j",
        "depth",
        "v",
        "prevEdge",
        "prevNode",
        "ret",
        "found",
        "v",
        "ret",
        "v",
        "directed",
        "v",
        "edges",
        "i",
        "vwEdges",
        "i",
        "vwEdges",
        "i",
        "e",
        "v",
        "nodes",
        "w",
        "discovered",
        "w",
        "w",
        "w",
        "S",
        "w",
        "id2depth",
        "w",
        "id2depth",
        "v",
        "connectedNodes",
        "w",
        "connectedBy",
        "w",
        "e",
        "i",
        "connectedNodes",
        "i",
        "connectedNodes",
        "i",
        "connectedBy",
        "node",
        "edge",
        "connectedEles",
        "edge",
        "connectedEles",
        "node",
        "$$",
        "cy",
        "connectedEles",
        "$$",
        "cy",
        "found",
        "weightFn",
        "weightFn",
        "$$",
        "weightFn",
        "weightFn",
        "ele",
        "i",
        "forest",
        "i",
        "forest",
        "i",
        "eles",
        "ele",
        "eles",
        "i",
        "$$",
        "i",
        "nodes",
        "i",
        "forest",
        "nodes",
        "i",
        "edges",
        "a",
        "b",
        "weightFn",
        "a",
        "a",
        "weightFn",
        "b",
        "b",
        "weightA",
        "weightB",
        "i",
        "S",
        "i",
        "S",
        "i",
        "edge",
        "edge",
        "findSet",
        "u",
        "findSet",
        "v",
        "setU",
        "setV",
        "A",
        "A",
        "edge",
        "forest",
        "setU",
        "setU",
        "setV",
        "forest",
        "setV",
        "nodes",
        "A",
        "root",
        "weightFn",
        "directed",
        "$$",
        "root",
        "$$",
        "root",
        "options",
        "root",
        "root",
        "options",
        "weightFn",
        "options",
        "directed",
        "options",
        "directed",
        "$$",
        "weightFn",
        "weightFn",
        "directed",
        "weightFn",
        "$$",
        "weightFn",
        "weightFn",
        "$$",
        "root",
        "root",
        "root",
        "i",
        "nodes",
        "i",
        "dist",
        "nodes",
        "i",
        "nodes",
        "i",
        "source",
        "Infinity",
        "Q",
        "nodes",
        "i",
        "node",
        "dist",
        "node",
        "Q",
        "$$",
        "cy",
        "Q",
        "$$",
        "cy",
        "Q",
        "valueFn",
        "u",
        "v",
        "directed",
        "u",
        "v",
        "u",
        "v",
        "edges",
        "i",
        "uvs",
        "i",
        "uvs",
        "i",
        "weightFn",
        "edge",
        "edge",
        "weight",
        "smallestDistance",
        "smallestEdge",
        "smallestDistance",
        "weight",
        "smallestEdge",
        "edge",
        "smallestEdge",
        "smallestDistance",
        "heap",
        "heap",
        "smallestEl",
        "smallestEl",
        "cy",
        "uid",
        "knownDist",
        "uid",
        "smalletsDist",
        "smalletsDist",
        "u",
        "nodes",
        "i",
        "neighbors",
        "i",
        "neighbors",
        "i",
        "v",
        "distBetween",
        "u",
        "v",
        "smalletsDist",
        "vDist",
        "alt",
        "heap",
        "vid",
        "heap",
        "vid",
        "alt",
        "prev",
        "vid",
        "u",
        "vDist",
        "node",
        "$$",
        "node",
        "nodes",
        "node",
        "node",
        "knownDist",
        "target",
        "node",
        "$$",
        "node",
        "nodes",
        "node",
        "node",
        "target",
        "S",
        "target",
        "prev",
        "u",
        "prev",
        "u",
        "S",
        "p",
        "S",
        "p",
        "u",
        "p",
        "$$",
        "cy",
        "S",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "options",
        "options",
        "options",
        "debug",
        "arguments",
        "start",
        "end",
        "cameFromMap",
        "pathAcum",
        "start",
        "end",
        "pathAcum",
        "cy",
        "end",
        "pathAcum",
        "end",
        "cameFromMap",
        "cameFromMap",
        "end",
        "cameFromEdge",
        "end",
        "pathAcum",
        "cy",
        "end",
        "pathAcum",
        "cy",
        "previousEdge",
        "reconstructPath",
        "start",
        "previous",
        "cameFromMap",
        "pathAcum",
        "openSet",
        "fScore",
        "openSet",
        "fScore",
        "openSet",
        "i",
        "openSet",
        "i",
        "fScore",
        "openSet",
        "i",
        "s",
        "tempScore",
        "tempScore",
        "s",
        "minPos",
        "i",
        "minPos",
        "options",
        "options",
        "logDebug",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "logDebug",
        "source",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "logDebug",
        "target",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "e",
        "options",
        "options",
        "source",
        "gScore",
        "source",
        "fScore",
        "source",
        "heuristic",
        "source",
        "openSet",
        "findMin",
        "openSet",
        "fScore",
        "openSet",
        "minPos",
        "steps",
        "logDebug",
        "steps",
        "logDebug",
        "cMin",
        "fScore",
        "cMin",
        "cMin",
        "target",
        "logDebug",
        "reconstructPath",
        "source",
        "target",
        "cameFrom",
        "rPath",
        "logDebug",
        "rPath",
        "gScore",
        "cMin",
        "$$",
        "cy",
        "rPath",
        "steps",
        "closedSet",
        "cMin",
        "openSet",
        "minPos",
        "logDebug",
        "logDebug",
        "cMin",
        "directed",
        "cMin",
        "edges",
        "i",
        "vwEdges",
        "i",
        "vwEdges",
        "i",
        "e",
        "cMin",
        "nodes",
        "logDebug",
        "w",
        "closedSet",
        "w",
        "logDebug",
        "gScore",
        "cMin",
        "weightFn",
        "e",
        "e",
        "logDebug",
        "tempScore",
        "openSet",
        "w",
        "gScore",
        "w",
        "tempScore",
        "fScore",
        "w",
        "tempScore",
        "heuristic",
        "w",
        "openSet",
        "w",
        "cameFrom",
        "w",
        "cMin",
        "cameFromEdge",
        "w",
        "e",
        "logDebug",
        "logDebug",
        "w",
        "tempScore",
        "tempScore",
        "gScore",
        "w",
        "gScore",
        "w",
        "tempScore",
        "fScore",
        "w",
        "tempScore",
        "heuristic",
        "w",
        "cameFrom",
        "w",
        "cMin",
        "logDebug",
        "logDebug",
        "w",
        "tempScore",
        "logDebug",
        "steps",
        "options",
        "options",
        "options",
        "debug",
        "arguments",
        "options",
        "options",
        "logDebug",
        "options",
        "$$",
        "options",
        "options",
        "e",
        "options",
        "options",
        "nodes",
        "i",
        "numNodes",
        "i",
        "id2position",
        "nodes",
        "i",
        "i",
        "i",
        "numNodes",
        "i",
        "numNodes",
        "j",
        "numNodes",
        "j",
        "i",
        "j",
        "newRow",
        "j",
        "newRow",
        "j",
        "Infinity",
        "dist",
        "newRow",
        "next",
        "i",
        "numNodes",
        "i",
        "numNodes",
        "j",
        "numNodes",
        "j",
        "newRow",
        "j",
        "next",
        "newRow",
        "initMatrix",
        "next",
        "initMatrix",
        "edgeNext",
        "i",
        "edges",
        "i",
        "id2position",
        "edges",
        "i",
        "id2position",
        "edges",
        "i",
        "weightFn",
        "edges",
        "i",
        "edges",
        "i",
        "dist",
        "sourceIndex",
        "targetIndex",
        "weight",
        "dist",
        "sourceIndex",
        "targetIndex",
        "weight",
        "next",
        "sourceIndex",
        "targetIndex",
        "targetIndex",
        "edgeNext",
        "sourceIndex",
        "targetIndex",
        "edges",
        "i",
        "directed",
        "i",
        "edges",
        "i",
        "id2position",
        "edges",
        "i",
        "id2position",
        "edges",
        "i",
        "weightFn",
        "edges",
        "i",
        "edges",
        "i",
        "dist",
        "sourceIndex",
        "targetIndex",
        "weight",
        "dist",
        "sourceIndex",
        "targetIndex",
        "weight",
        "next",
        "sourceIndex",
        "targetIndex",
        "targetIndex",
        "edgeNext",
        "sourceIndex",
        "targetIndex",
        "edges",
        "i",
        "k",
        "numNodes",
        "k",
        "i",
        "numNodes",
        "i",
        "j",
        "numNodes",
        "j",
        "dist",
        "i",
        "k",
        "dist",
        "k",
        "j",
        "dist",
        "i",
        "j",
        "dist",
        "i",
        "j",
        "dist",
        "i",
        "k",
        "dist",
        "k",
        "j",
        "next",
        "i",
        "j",
        "next",
        "i",
        "k",
        "i",
        "numNodes",
        "i",
        "position2id",
        "nodes",
        "i",
        "to",
        "$$",
        "cy",
        "$$",
        "to",
        "cy",
        "to",
        "to",
        "dist",
        "id2position",
        "fromId",
        "id2position",
        "toId",
        "to",
        "to",
        "next",
        "position2id",
        "edgeNext",
        "to",
        "cy",
        "position2id",
        "next",
        "to",
        "cy",
        "position2id",
        "to",
        "prev",
        "next",
        "to",
        "edgeNext",
        "prev",
        "path",
        "edge",
        "path",
        "cy",
        "position2id",
        "path",
        "$$",
        "cy",
        "$$",
        "to",
        "cy",
        "to",
        "to",
        "reconstructPathAux",
        "id2position",
        "fromId",
        "id2position",
        "toId",
        "next",
        "position2id",
        "edgeNext",
        "$$",
        "cy",
        "pathArr",
        "res",
        "options",
        "options",
        "options",
        "debug",
        "arguments",
        "options",
        "options",
        "logDebug",
        "options",
        "$$",
        "options",
        "options",
        "e",
        "options",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "options",
        "logDebug",
        "source",
        "$$",
        "nodes",
        "i",
        "numNodes",
        "i",
        "id2position",
        "nodes",
        "i",
        "i",
        "i",
        "numNodes",
        "i",
        "nodes",
        "i",
        "source",
        "cost",
        "i",
        "cost",
        "i",
        "Infinity",
        "predecessor",
        "i",
        "i",
        "numNodes",
        "i",
        "flag",
        "e",
        "edges",
        "e",
        "id2position",
        "edges",
        "e",
        "id2position",
        "edges",
        "e",
        "weightFn",
        "edges",
        "e",
        "edges",
        "e",
        "cost",
        "sourceIndex",
        "weight",
        "temp",
        "cost",
        "targetIndex",
        "cost",
        "targetIndex",
        "temp",
        "predecessor",
        "targetIndex",
        "sourceIndex",
        "predEdge",
        "targetIndex",
        "edges",
        "e",
        "flag",
        "directed",
        "cost",
        "targetIndex",
        "weight",
        "temp",
        "cost",
        "sourceIndex",
        "cost",
        "sourceIndex",
        "temp",
        "predecessor",
        "sourceIndex",
        "targetIndex",
        "predEdge",
        "sourceIndex",
        "edges",
        "e",
        "flag",
        "flag",
        "flag",
        "e",
        "edges",
        "e",
        "id2position",
        "edges",
        "e",
        "id2position",
        "edges",
        "e",
        "weightFn",
        "edges",
        "e",
        "edges",
        "e",
        "cost",
        "sourceIndex",
        "weight",
        "cost",
        "targetIndex",
        "$$",
        "i",
        "numNodes",
        "i",
        "position2id",
        "nodes",
        "i",
        "to",
        "$$",
        "to",
        "cy",
        "to",
        "to",
        "cost",
        "id2position",
        "toId",
        "to",
        "predecessor",
        "fromPos",
        "toPos",
        "position2id",
        "acumPath",
        "predEdge",
        "acumPath",
        "cy",
        "position2id",
        "toPos",
        "acumPath",
        "predEdge",
        "toPos",
        "fromPos",
        "toPos",
        "acumPath",
        "predecessor",
        "toPos",
        "predPos",
        "toPos",
        "predPos",
        "$$",
        "to",
        "cy",
        "to",
        "to",
        "reconstructPathAux",
        "predecessor",
        "id2position",
        "source",
        "id2position",
        "toId",
        "position2id",
        "path",
        "predEdge",
        "res",
        "res",
        "$$",
        "cy",
        "res",
        "res",
        "options",
        "options",
        "options",
        "debug",
        "arguments",
        "edgeIndex",
        "nodeMap",
        "remainingEdges",
        "remainingEdges",
        "edgeIndex",
        "edgeInfo",
        "edgeInfo",
        "nodeMap",
        "sourceIn",
        "nodeMap",
        "targetIn",
        "remainingEdges",
        "edge",
        "nodeMap",
        "edge",
        "partition1",
        "nodeMap",
        "edge",
        "partition2",
        "nodeMap",
        "edge",
        "partition2",
        "nodeMap",
        "edge",
        "partition1",
        "i",
        "newEdges",
        "i",
        "newEdges",
        "i",
        "edge",
        "partition2",
        "newEdges",
        "i",
        "edge",
        "newEdges",
        "i",
        "partition1",
        "edge",
        "partition2",
        "newEdges",
        "i",
        "edge",
        "newEdges",
        "i",
        "partition1",
        "i",
        "nodeMap",
        "i",
        "nodeMap",
        "i",
        "partition2",
        "nodeMap",
        "i",
        "partition1",
        "newEdges",
        "metaNodeMap",
        "remainingEdges",
        "size",
        "sizeLimit",
        "size",
        "sizeLimit",
        "remainingEdges",
        "remainingEdges",
        "colapse",
        "edgeIndex",
        "metaNodeMap",
        "remainingEdges",
        "contractUntil",
        "metaNodeMap",
        "newEdges",
        "size",
        "sizeLimit",
        "options",
        "options",
        "options",
        "logDebug",
        "nodes",
        "edges",
        "numNodes",
        "numNodes",
        "numNodes",
        "$$",
        "i",
        "numNodes",
        "i",
        "id2position",
        "nodes",
        "i",
        "i",
        "i",
        "numEdges",
        "i",
        "edges",
        "i",
        "edgeIndexes",
        "i",
        "id2position",
        "e",
        "id2position",
        "e",
        "i",
        "numNodes",
        "i",
        "originalMetaNode",
        "i",
        "iter",
        "numIter",
        "iter",
        "originalMetaNode",
        "contractUntil",
        "metaNodeMap",
        "edgeIndexes",
        "numNodes",
        "stopSize",
        "metaNodeMap",
        "contractUntil",
        "metaNodeMap",
        "edgesState",
        "stopSize",
        "contractUntil",
        "metaNodeMap2",
        "edgesState",
        "stopSize",
        "res1",
        "res2",
        "res1",
        "minCutSize",
        "minCutSize",
        "res1",
        "minCut",
        "res1",
        "metaNodeMap",
        "res2",
        "res1",
        "res2",
        "minCutSize",
        "minCutSize",
        "res2",
        "minCut",
        "res2",
        "metaNodeMap2",
        "minCut",
        "e",
        "edges",
        "e",
        "minCut",
        "i",
        "minCut",
        "i",
        "minCut",
        "i",
        "partitionId",
        "witnessNodePartition",
        "partition1",
        "nodes",
        "i",
        "partition2",
        "nodes",
        "i",
        "$$",
        "cy",
        "resEdges",
        "$$",
        "cy",
        "partition1",
        "$$",
        "cy",
        "partition2",
        "ret",
        "options",
        "options",
        "options",
        "vector",
        "vector",
        "i",
        "length",
        "i",
        "total",
        "vector",
        "i",
        "i",
        "length",
        "i",
        "vector",
        "i",
        "vector",
        "i",
        "total",
        "debug",
        "arguments",
        "options",
        "options",
        "options",
        "logDebug",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "e",
        "nodes",
        "edges",
        "i",
        "numNodes",
        "i",
        "id2position",
        "nodes",
        "i",
        "i",
        "dampingFactor",
        "numNodes",
        "i",
        "numNodes",
        "i",
        "j",
        "numNodes",
        "j",
        "newRow",
        "matrix",
        "newRow",
        "columnSum",
        "i",
        "numEdges",
        "i",
        "edges",
        "i",
        "id2position",
        "edge",
        "id2position",
        "edge",
        "weightFn",
        "edge",
        "edge",
        "matrix",
        "t",
        "s",
        "w",
        "columnSum",
        "s",
        "w",
        "numNodes",
        "additionalProb",
        "j",
        "numNodes",
        "j",
        "columnSum",
        "j",
        "i",
        "numNodes",
        "i",
        "matrix",
        "i",
        "j",
        "p",
        "i",
        "numNodes",
        "i",
        "matrix",
        "i",
        "j",
        "matrix",
        "i",
        "j",
        "columnSum",
        "j",
        "additionalProb",
        "i",
        "numNodes",
        "i",
        "eigenvector",
        "nullVector",
        "iter",
        "numIter",
        "iter",
        "nullVector",
        "i",
        "numNodes",
        "i",
        "j",
        "numNodes",
        "j",
        "temp",
        "i",
        "matrix",
        "i",
        "j",
        "eigenvector",
        "j",
        "normalizeVector",
        "temp",
        "previous",
        "eigenvector",
        "eigenvector",
        "temp",
        "i",
        "numNodes",
        "i",
        "diff",
        "previous",
        "i",
        "eigenvector",
        "i",
        "diff",
        "epsilon",
        "logDebug",
        "iter",
        "logDebug",
        "eigenvector",
        "node",
        "$$",
        "node",
        "cy",
        "node",
        "node",
        "eigenvector",
        "id2position",
        "nodeId",
        "res",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "opts",
        "$$",
        "opts",
        "fn",
        "opts",
        "$$",
        "opts",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "opts",
        "fn",
        "fn",
        "ele",
        "i",
        "ele",
        "opts",
        "opts",
        "j",
        "opts",
        "j",
        "opts",
        "j",
        "ele",
        "cls",
        "ele",
        "cls",
        "hasClass",
        "eleChanged",
        "changed",
        "ele",
        "eleChanged",
        "opts",
        "j",
        "opts",
        "j",
        "opts",
        "j",
        "ele",
        "cls",
        "ele",
        "cls",
        "hasClass",
        "eleChanged",
        "changed",
        "ele",
        "eleChanged",
        "opts",
        "j",
        "opts",
        "j",
        "opts",
        "j",
        "ele",
        "cls",
        "ele",
        "cls",
        "hasClass",
        "eleChanged",
        "changed",
        "ele",
        "eleChanged",
        "changed",
        "$$",
        "changed",
        "classes",
        "classes",
        "classes",
        "i",
        "classes",
        "i",
        "classes",
        "i",
        "$$",
        "cls",
        "j",
        "j",
        "j",
        "ele",
        "cls",
        "ele",
        "cls",
        "hasClass",
        "changed",
        "ele",
        "changed",
        "$$",
        "changed",
        "className",
        "ele",
        "ele",
        "className",
        "classesStr",
        "toggle",
        "classesStr",
        "i",
        "il",
        "i",
        "i",
        "j",
        "classes",
        "j",
        "classes",
        "j",
        "$$",
        "cls",
        "ele",
        "cls",
        "toggle",
        "toggle",
        "hasClass",
        "shouldAdd",
        "ele",
        "cls",
        "hasClass",
        "changed",
        "ele",
        "ele",
        "cls",
        "hasClass",
        "changed",
        "ele",
        "changed",
        "$$",
        "changed",
        "classes",
        "classes",
        "classes",
        "i",
        "i",
        "i",
        "j",
        "classes",
        "j",
        "classes",
        "j",
        "cls",
        "cls",
        "ele",
        "cls",
        "ele",
        "cls",
        "hasClass",
        "changed",
        "ele",
        "changed",
        "$$",
        "changed",
        "classes",
        "duration",
        "duration",
        "duration",
        "duration",
        "classes",
        "setTimeout",
        "classes",
        "duration",
        "cytoscape",
        "$$",
        "$$",
        "selector",
        "selector",
        "selector",
        "selector",
        "fn",
        "thisArg",
        "i",
        "i",
        "fn",
        "thisArg",
        "i",
        "i",
        "ret",
        "fn",
        "thisArg",
        "i",
        "i",
        "fn",
        "thisArg",
        "i",
        "i",
        "ret",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "collection",
        "cytoscape",
        "$$",
        "$$",
        "selector",
        "i",
        "i",
        "i",
        "cy",
        "ele",
        "parent",
        "parents",
        "parent",
        "$$",
        "cy",
        "parents",
        "selector",
        "selector",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "parents",
        "ele",
        "eles",
        "eles",
        "$$",
        "parents",
        "selector",
        "selector",
        "i",
        "i",
        "i",
        "ele",
        "ancestors",
        "ancestors",
        "parents",
        "ancestors",
        "ancestors",
        "parents",
        "ancestors",
        "selector",
        "selector",
        "ele",
        "ele",
        "ele",
        "selector",
        "selector",
        "ele",
        "ele",
        "ele",
        "selector",
        "selector",
        "i",
        "i",
        "i",
        "children",
        "children",
        "ele",
        "$$",
        "children",
        "selector",
        "selector",
        "selector",
        "ele",
        "ele",
        "ele",
        "ele",
        "ele",
        "selector",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "elements",
        "ele",
        "ele",
        "add",
        "ele",
        "add",
        "$$",
        "elements",
        "selector",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "ele",
        "ele",
        "$$",
        "eles",
        "eles",
        "updatedEles",
        "ele",
        "ele",
        "$$",
        "eles",
        "eles",
        "ele",
        "ele",
        "pos",
        "silent",
        "$$",
        "pos",
        "pos",
        "$$",
        "pos",
        "i",
        "i",
        "i",
        "fn",
        "ele",
        "i",
        "ele",
        "pos",
        "ele",
        "ele",
        "elePos",
        "pos",
        "elePos",
        "pos",
        "updatedEles",
        "updatedEles",
        "silent",
        "toTrigger",
        "toTrigger",
        "pos",
        "pos",
        "cy",
        "cy",
        "cy",
        "parent",
        "parent",
        "parent",
        "children",
        "style",
        "style",
        "style",
        "style",
        "parent",
        "style",
        "parent",
        "bb",
        "padding",
        "padding",
        "pos",
        "bb",
        "bb",
        "padding",
        "padding",
        "didUpdate",
        "style",
        "parent",
        "bb",
        "padding",
        "padding",
        "pos",
        "bb",
        "bb",
        "padding",
        "padding",
        "didUpdate",
        "didUpdate",
        "updated",
        "parent",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "update",
        "ele",
        "eles",
        "eles",
        "$$",
        "cy",
        "updated",
        "dim",
        "val",
        "cy",
        "cy",
        "$$",
        "dim",
        "dim",
        "rpos",
        "val",
        "$$",
        "dim",
        "ele",
        "ele",
        "setting",
        "i",
        "i",
        "i",
        "val",
        "ele",
        "dim",
        "val",
        "pan",
        "dim",
        "zoom",
        "rpos",
        "ele",
        "rpos",
        "pan",
        "zoom",
        "rpos",
        "pan",
        "zoom",
        "ele",
        "rpos",
        "pos",
        "zoom",
        "pan",
        "pos",
        "zoom",
        "pan",
        "dim",
        "rpos",
        "rpos",
        "dim",
        "setting",
        "dim",
        "val",
        "$$",
        "dim",
        "dim",
        "ppos",
        "val",
        "$$",
        "dim",
        "cy",
        "ele",
        "ele",
        "setting",
        "i",
        "i",
        "i",
        "hasCompoundNodes",
        "ele",
        "parent",
        "parent",
        "hasParent",
        "parent",
        "parent",
        "relativeToParent",
        "parent",
        "val",
        "ele",
        "dim",
        "val",
        "origin",
        "dim",
        "ppos",
        "ele",
        "ppos",
        "origin",
        "ppos",
        "origin",
        "ele",
        "hasCompoundNodes",
        "ele",
        "parent",
        "parent",
        "hasParent",
        "parent",
        "parent",
        "relativeToParent",
        "parent",
        "ppos",
        "pos",
        "origin",
        "pos",
        "origin",
        "dim",
        "ppos",
        "ppos",
        "dim",
        "setting",
        "ele",
        "cy",
        "ele",
        "styleEnabled",
        "ele",
        "w",
        "ele",
        "w",
        "ele",
        "cy",
        "ele",
        "styleEnabled",
        "ele",
        "style",
        "ele",
        "style",
        "style",
        "style",
        "borderWidthMultiplier",
        "borderWidthAdjustment",
        "width",
        "border",
        "ele",
        "ele",
        "width",
        "ele",
        "ele",
        "owidth",
        "ele",
        "cy",
        "ele",
        "ele",
        "styleEnabled",
        "ele",
        "h",
        "ele",
        "h",
        "ele",
        "cy",
        "ele",
        "ele",
        "styleEnabled",
        "ele",
        "style",
        "ele",
        "style",
        "style",
        "style",
        "borderWidthMultiplier",
        "borderWidthAdjustment",
        "height",
        "border",
        "ele",
        "ele",
        "ele",
        "height",
        "ele",
        "ele",
        "ele",
        "oheight",
        "options",
        "options",
        "cy",
        "cy",
        "bb",
        "zoom",
        "pan",
        "bb",
        "zoom",
        "pan",
        "bb",
        "zoom",
        "pan",
        "bb",
        "zoom",
        "pan",
        "x1",
        "x2",
        "y1",
        "y2",
        "x2",
        "x1",
        "y2",
        "y1",
        "options",
        "eles",
        "cy",
        "cy_p",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "styleEnabled",
        "cy_p",
        "Infinity",
        "Infinity",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "styleEnabled",
        "_p",
        "_p",
        "display",
        "isNode",
        "includeNodes",
        "includedEle",
        "_p",
        "x",
        "pos",
        "y",
        "pos",
        "ele",
        "w",
        "ele",
        "h",
        "ex1",
        "x",
        "halfW",
        "ex2",
        "x",
        "halfW",
        "ey1",
        "y",
        "halfH",
        "ey2",
        "y",
        "halfH",
        "x1",
        "ex1",
        "x1",
        "ex1",
        "x1",
        "x2",
        "ex2",
        "x2",
        "ex2",
        "x2",
        "y1",
        "ey1",
        "y1",
        "ey1",
        "y1",
        "y2",
        "ey2",
        "y2",
        "ey2",
        "y2",
        "ele",
        "includeEdges",
        "includedEle",
        "ele",
        "ele",
        "ele",
        "ex1",
        "n1pos",
        "ex2",
        "n2pos",
        "ey1",
        "n1pos",
        "ey2",
        "n2pos",
        "ex1",
        "ex2",
        "ex1",
        "ex2",
        "ex2",
        "temp",
        "ey1",
        "ey2",
        "ey1",
        "ey2",
        "ey2",
        "temp",
        "x1",
        "ex1",
        "x1",
        "ex1",
        "x1",
        "x2",
        "ex2",
        "x2",
        "ex2",
        "x2",
        "y1",
        "ey1",
        "y1",
        "ey1",
        "y1",
        "y2",
        "ey2",
        "y2",
        "ey2",
        "y2",
        "styleEnabled",
        "rstyle",
        "ele",
        "w",
        "j",
        "bpts",
        "j",
        "bpts",
        "j",
        "ex1",
        "bpt",
        "wHalf",
        "ex2",
        "bpt",
        "wHalf",
        "ey1",
        "bpt",
        "wHalf",
        "ey2",
        "bpt",
        "wHalf",
        "x1",
        "ex1",
        "x1",
        "ex1",
        "x1",
        "x2",
        "ex2",
        "x2",
        "ex2",
        "x2",
        "y1",
        "ey1",
        "y1",
        "ey1",
        "y1",
        "y2",
        "ey2",
        "y2",
        "ey2",
        "y2",
        "styleEnabled",
        "ele",
        "ele",
        "style",
        "style",
        "style",
        "style",
        "rstyle",
        "rstyle",
        "rstyle",
        "rstyle",
        "includedEle",
        "includeLabels",
        "label",
        "fontSize",
        "labelHeight",
        "labelWidth",
        "labelX",
        "labelY",
        "halign",
        "valign",
        "ele",
        "lx1",
        "labelX",
        "lw",
        "lx2",
        "labelX",
        "lw",
        "ly1",
        "labelY",
        "lh",
        "ly2",
        "labelY",
        "lh",
        "halign",
        "lx1",
        "labelX",
        "lw",
        "lx2",
        "labelX",
        "lx1",
        "labelX",
        "lw",
        "lx2",
        "labelX",
        "lw",
        "lx1",
        "labelX",
        "lx2",
        "labelX",
        "lw",
        "valign",
        "ly1",
        "labelY",
        "lh",
        "ly2",
        "labelY",
        "ly1",
        "labelY",
        "lh",
        "ly2",
        "labelY",
        "lh",
        "ly1",
        "labelY",
        "ly2",
        "labelY",
        "lh",
        "x1",
        "lx1",
        "x1",
        "lx1",
        "x1",
        "x2",
        "lx2",
        "x2",
        "lx2",
        "x2",
        "y1",
        "ly1",
        "y1",
        "ly1",
        "y1",
        "y2",
        "ly2",
        "y2",
        "ly2",
        "y2",
        "x1",
        "x2",
        "y1",
        "y2",
        "x2",
        "x1",
        "y2",
        "y1",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "callback",
        "includeLoops",
        "includeLoops",
        "includeLoops",
        "node",
        "i",
        "connectedEdges",
        "i",
        "connectedEdges",
        "i",
        "includeLoops",
        "edge",
        "degree",
        "callback",
        "node",
        "edge",
        "degree",
        "$$",
        "defineDegreeFunction",
        "node",
        "edge",
        "edge",
        "edge",
        "defineDegreeFunction",
        "node",
        "edge",
        "edge",
        "node",
        "defineDegreeFunction",
        "node",
        "edge",
        "edge",
        "node",
        "degreeFn",
        "callback",
        "includeLoops",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "ele",
        "degreeFn",
        "includeLoops",
        "degree",
        "ret",
        "callback",
        "degree",
        "ret",
        "ret",
        "degree",
        "ret",
        "$$",
        "defineDegreeBoundsFunction",
        "degree",
        "min",
        "degree",
        "min",
        "defineDegreeBoundsFunction",
        "degree",
        "max",
        "degree",
        "max",
        "defineDegreeBoundsFunction",
        "degree",
        "min",
        "degree",
        "min",
        "defineDegreeBoundsFunction",
        "degree",
        "max",
        "degree",
        "max",
        "defineDegreeBoundsFunction",
        "degree",
        "min",
        "degree",
        "min",
        "defineDegreeBoundsFunction",
        "degree",
        "max",
        "degree",
        "max",
        "$$",
        "includeLoops",
        "i",
        "nodes",
        "i",
        "total",
        "nodes",
        "i",
        "includeLoops",
        "total",
        "cytoscape",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "extraParams",
        "extraParams",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "selector",
        "i",
        "element",
        "element",
        "selector",
        "selector",
        "i",
        "element",
        "element",
        "selector",
        "$$",
        "i",
        "i",
        "i",
        "ele",
        "i",
        "ele",
        "elements",
        "ele",
        "$$",
        "cy",
        "elements",
        "$$",
        "$$",
        "$$",
        "$$",
        "cy",
        "toRemove",
        "toRemove",
        "$$",
        "toRemove",
        "toRemove",
        "toRemove",
        "i",
        "i",
        "i",
        "toRemove",
        "element",
        "remove",
        "elements",
        "element",
        "$$",
        "cy",
        "elements",
        "other",
        "$$",
        "other",
        "selector",
        "other",
        "col1Smaller",
        "col2",
        "col1",
        "col1Smaller",
        "col1",
        "col2",
        "i",
        "col",
        "i",
        "col",
        "i",
        "ids2",
        "id",
        "ele",
        "elements",
        "ele",
        "$$",
        "cy",
        "elements",
        "toAdd",
        "toAdd",
        "$$",
        "toAdd",
        "toAdd",
        "cy",
        "selector",
        "i",
        "i",
        "elements",
        "i",
        "i",
        "toAdd",
        "i",
        "toAdd",
        "i",
        "add",
        "elements",
        "toAdd",
        "i",
        "$$",
        "cy",
        "elements",
        "toAdd",
        "_p",
        "toAdd",
        "$$",
        "toAdd",
        "toAdd",
        "cy",
        "selector",
        "i",
        "toAdd",
        "i",
        "toAdd",
        "i",
        "toAddEle",
        "_p",
        "id",
        "add",
        "index",
        "toAddEle",
        "_p",
        "id",
        "toAddEle",
        "_p",
        "id",
        "index",
        "ele",
        "ele",
        "ele",
        "ele",
        "_p",
        "id",
        "i",
        "i",
        "_p",
        "id",
        "_p",
        "id",
        "i",
        "unmergedLastEle",
        "lastEleI",
        "lastEleI",
        "i",
        "lastEle",
        "_p",
        "lastEle",
        "i",
        "toRemove",
        "toRemove",
        "$$",
        "toRemove",
        "toRemove",
        "cy",
        "selector",
        "i",
        "toRemove",
        "i",
        "toRemove",
        "i",
        "mapFn",
        "thisArg",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "mapFn",
        "thisArg",
        "ele",
        "i",
        "eles",
        "arr",
        "ret",
        "arr",
        "fn",
        "thisArg",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "fn",
        "thisArg",
        "ele",
        "i",
        "eles",
        "include",
        "filterEles",
        "ele",
        "$$",
        "cy",
        "filterEles",
        "valFn",
        "thisArg",
        "Infinity",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "valFn",
        "thisArg",
        "ele",
        "i",
        "eles",
        "val",
        "max",
        "max",
        "val",
        "maxEle",
        "ele",
        "max",
        "maxEle",
        "valFn",
        "thisArg",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "valFn",
        "thisArg",
        "ele",
        "i",
        "eles",
        "val",
        "min",
        "min",
        "val",
        "minEle",
        "ele",
        "min",
        "minEle",
        "cytoscape",
        "$$",
        "$$",
        "ele",
        "ele",
        "cytoscape",
        "$$",
        "$$",
        "fn",
        "$$",
        "fn",
        "i",
        "i",
        "i",
        "fn",
        "ele",
        "i",
        "ele",
        "ret",
        "fn",
        "thisArg",
        "$$",
        "fn",
        "i",
        "i",
        "i",
        "fn",
        "thisArg",
        "ele",
        "i",
        "ret",
        "i",
        "i",
        "array",
        "i",
        "array",
        "start",
        "end",
        "end",
        "end",
        "thisSize",
        "start",
        "start",
        "start",
        "start",
        "thisSize",
        "start",
        "end",
        "end",
        "thisSize",
        "end",
        "i",
        "i",
        "end",
        "i",
        "thisSize",
        "i",
        "array",
        "i",
        "$$",
        "array",
        "i",
        "i",
        "$$",
        "$$",
        "$$",
        "sortFn",
        "$$",
        "sortFn",
        "sortFn",
        "$$",
        "cy",
        "sorted",
        "$$",
        "ele",
        "ele",
        "_p",
        "group",
        "_p",
        "ele",
        "_p",
        "_p",
        "src",
        "src",
        "tgt",
        "tgt",
        "srcDepth",
        "tgtDepth",
        "$$",
        "a",
        "b",
        "a",
        "a",
        "b",
        "a_p",
        "b_p",
        "cy",
        "a_p",
        "a_p",
        "b_p",
        "b_p",
        "hasCompoundNodes",
        "depthA",
        "a",
        "depthB",
        "b",
        "depthA",
        "depthB",
        "depthDiff",
        "sameDepth",
        "aIsNode",
        "bIsEdge",
        "aIsEdge",
        "bIsNode",
        "zDiff",
        "a_p",
        "b_p",
        "zDiff",
        "depthDiff",
        "cytoscape",
        "$$",
        "$$",
        "layout",
        "options",
        "fn",
        "layout",
        "layout",
        "options",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "i",
        "nodes",
        "fn",
        "node",
        "i",
        "node",
        "node",
        "$$",
        "pos",
        "$$",
        "pos",
        "node",
        "node",
        "newPos",
        "options",
        "lastNode",
        "options",
        "cy",
        "options",
        "lastNode",
        "options",
        "cy",
        "options",
        "options",
        "cy",
        "options",
        "options",
        "cy",
        "options",
        "layout",
        "options",
        "layout",
        "layout",
        "layout",
        "options",
        "layout",
        "layout",
        "nodes",
        "fn",
        "options",
        "cy",
        "options",
        "options",
        "cy",
        "options",
        "options",
        "cy",
        "options",
        "layout",
        "options",
        "layout",
        "layout",
        "layout",
        "options",
        "layout",
        "layout",
        "options",
        "cy",
        "$$",
        "options",
        "options",
        "cy",
        "$$",
        "options",
        "cytoscape",
        "$$",
        "$$",
        "notifyRenderer",
        "cy",
        "cy",
        "cy",
        "i",
        "i",
        "i",
        "bEles",
        "ele",
        "bEles",
        "ele",
        "cy",
        "notifyRenderer",
        "notifyRenderer",
        "notifyRenderer",
        "style",
        "updatedCompounds",
        "updatedCompounds",
        "notifyRenderer",
        "toNotify",
        "toNotify",
        "notifyRenderer",
        "cy",
        "notifyRenderer",
        "notifyRenderer",
        "notifyRenderer",
        "cy",
        "style",
        "updatedCompounds",
        "updatedCompounds",
        "notifyRenderer",
        "toNotify",
        "toNotify",
        "property",
        "cy",
        "ele",
        "ele",
        "ele",
        "property",
        "renstyle",
        "renstyle",
        "property",
        "name",
        "value",
        "cy",
        "cy",
        "$$",
        "name",
        "style",
        "props",
        "updateTransitions",
        "updatedCompounds",
        "updatedCompounds",
        "toNotify",
        "$$",
        "name",
        "value",
        "ele",
        "ele",
        "name",
        "style",
        "name",
        "value",
        "updateTransitions",
        "updatedCompounds",
        "updatedCompounds",
        "toNotify",
        "name",
        "ele",
        "style",
        "ele",
        "names",
        "cy",
        "cy",
        "names",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "style",
        "ele",
        "updateTransitions",
        "names",
        "names",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "style",
        "ele",
        "names",
        "updateTransitions",
        "updatedCompounds",
        "updatedCompounds",
        "toNotify",
        "cy",
        "cy",
        "ele",
        "ele",
        "style",
        "style",
        "ele",
        "hasCompoundNodes",
        "ele",
        "ele",
        "parents",
        "i",
        "parents",
        "i",
        "parents",
        "i",
        "parent",
        "pStyle",
        "pStyle",
        "pVis",
        "pDis",
        "ele",
        "ele",
        "src",
        "tgt",
        "ele",
        "ele",
        "cy",
        "cy",
        "ele",
        "ele",
        "_p",
        "hasCompoundNodes",
        "parentOpacity",
        "_p",
        "ele",
        "parents",
        "i",
        "parents",
        "i",
        "parents",
        "i",
        "parent",
        "parentOpacity",
        "opacity",
        "parentOpacity",
        "parentOpacity",
        "ele",
        "ele",
        "hasCompoundNodes",
        "ele",
        "ele",
        "cy",
        "ele",
        "ele",
        "ele",
        "ele",
        "autoW",
        "autoH",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "args",
        "args",
        "args",
        "data",
        "handler",
        "args",
        "args",
        "handler",
        "args",
        "i",
        "i",
        "i",
        "ele",
        "ele",
        "overrideAble",
        "able",
        "overrideAble",
        "overrideAble",
        "able",
        "ele",
        "$$",
        "ele",
        "ele",
        "val",
        "val",
        "ele",
        "$$",
        "defineSwitchFunction",
        "$$",
        "defineSwitchFunction",
        "defineSwitchSet",
        "ele",
        "ele",
        "defineSwitchSet",
        "ele",
        "ele",
        "defineSwitchSet",
        "ele",
        "ele",
        "defineSwitchSet",
        "ele",
        "ele",
        "$$",
        "ele",
        "ele",
        "defineSwitchSet",
        "$$",
        "ele",
        "ele",
        "cytoscape",
        "$$",
        "$$",
        "selector",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "ele",
        "ele",
        "ele",
        "hasEdgesPointingIn",
        "roots",
        "ele",
        "$$",
        "roots",
        "selector",
        "selector",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "ele",
        "ele",
        "ele",
        "hasEdgesPointingOut",
        "leaves",
        "ele",
        "$$",
        "leaves",
        "selector",
        "selector",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "ele",
        "ele",
        "j",
        "edges",
        "j",
        "edges",
        "j",
        "edge",
        "edge",
        "srcId",
        "eleId",
        "tgtId",
        "eleId",
        "oEles",
        "edge",
        "oEles",
        "edge",
        "$$",
        "oEles",
        "selector",
        "selector",
        "eles",
        "outgoers",
        "i",
        "outgoers",
        "i",
        "outgoers",
        "i",
        "outgoer",
        "sElesIds",
        "outgoerId",
        "sElesIds",
        "outgoerId",
        "sEles",
        "outgoer",
        "newOutgoers",
        "newOutgoers",
        "eles",
        "outgoers",
        "$$",
        "sEles",
        "selector",
        "selector",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "ele",
        "ele",
        "j",
        "edges",
        "j",
        "edges",
        "j",
        "edge",
        "edge",
        "tgtId",
        "eleId",
        "srcId",
        "eleId",
        "oEles",
        "edge",
        "oEles",
        "edge",
        "$$",
        "oEles",
        "selector",
        "selector",
        "eles",
        "incomers",
        "i",
        "incomers",
        "i",
        "incomers",
        "i",
        "incomer",
        "pElesIds",
        "incomerId",
        "pElesIds",
        "incomerId",
        "pEles",
        "incomer",
        "newIncomers",
        "newIncomers",
        "eles",
        "incomers",
        "$$",
        "pEles",
        "selector",
        "$$",
        "selector",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "node",
        "j",
        "connectedEdges",
        "j",
        "connectedEdges",
        "j",
        "edge",
        "node",
        "otherNode",
        "elements",
        "otherNode",
        "elements",
        "edge",
        "$$",
        "cy",
        "elements",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "$$",
        "selector",
        "ele",
        "src",
        "ele",
        "src",
        "selector",
        "src",
        "selector",
        "src",
        "selector",
        "ele",
        "tgt",
        "ele",
        "tgt",
        "selector",
        "tgt",
        "selector",
        "tgt",
        "defineSourceFunction",
        "defineSourceFunction",
        "selector",
        "i",
        "i",
        "i",
        "ele",
        "src",
        "sources",
        "src",
        "$$",
        "cy",
        "sources",
        "selector",
        "$$",
        "defineEdgesWithFunction",
        "defineEdgesWithFunction",
        "otherNodes",
        "$$",
        "otherNodes",
        "otherNodes",
        "cy",
        "otherNodes",
        "otherNodes",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "edge",
        "p",
        "edgeData",
        "p",
        "foundId",
        "thisIds",
        "idToFind",
        "foundId",
        "thisIds",
        "edgeData",
        "thisIds",
        "edgeData",
        "foundId",
        "elements",
        "edge",
        "$$",
        "cy",
        "elements",
        "$$",
        "selector",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "node",
        "node",
        "j",
        "edges",
        "j",
        "edges",
        "j",
        "retEles",
        "edge",
        "$$",
        "cy",
        "retEles",
        "selector",
        "selector",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "edge",
        "retEles",
        "edge",
        "retEles",
        "edge",
        "$$",
        "cy",
        "retEles",
        "selector",
        "defineParallelEdgesFunction",
        "defineParallelEdgesFunction",
        "$$",
        "defaults",
        "selector",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "edge1",
        "src1",
        "edge1",
        "tgt1",
        "src1",
        "j",
        "srcEdges1",
        "j",
        "srcEdges1",
        "j",
        "edge2",
        "edge2data",
        "edge2data",
        "tgtid2",
        "tgtid1",
        "srcid2",
        "srcid1",
        "srcid1",
        "tgtid2",
        "tgtid1",
        "srcid2",
        "p",
        "codirected",
        "p",
        "codirected",
        "oppdirected",
        "elements",
        "edge2",
        "$$",
        "cy",
        "elements",
        "selector",
        "cytoscape",
        "$$",
        "$$",
        "cytoscape",
        "$$",
        "$$",
        "cy",
        "eles",
        "valueFn",
        "$$",
        "cy",
        "eles",
        "$$",
        "valueFn",
        "$$",
        "cy",
        "eles",
        "valueFn",
        "$$",
        "cy",
        "eles",
        "$$",
        "valueFn",
        "$$",
        "cy",
        "eles",
        "comparator",
        "valueFn",
        "comparator",
        "eles",
        "valueFn",
        "valueFn",
        "$$",
        "eles",
        "eles",
        "cy",
        "elesLen",
        "eles",
        "i",
        "i",
        "elesLen",
        "i",
        "sourceHeap",
        "valueFn",
        "cy",
        "eles",
        "i",
        "i",
        "eles",
        "id",
        "eles",
        "i",
        "pointers",
        "id",
        "id",
        "pointers",
        "id",
        "i",
        "elements",
        "id",
        "cy",
        "sourceHeap",
        "pointers",
        "elements",
        "comparator",
        "valueFn",
        "elesLen",
        "i",
        "elesLen",
        "i",
        "i",
        "heap",
        "i",
        "heap",
        "$$",
        "node",
        "node",
        "$$",
        "a",
        "b",
        "a",
        "b",
        "$$",
        "a",
        "b",
        "a",
        "b",
        "$$",
        "fnMap",
        "options",
        "name",
        "fnMap",
        "fnMap",
        "name",
        "$$",
        "name",
        "fn",
        "$$",
        "$$",
        "$$",
        "$$",
        "eles",
        "cy",
        "cy",
        "cy",
        "$$",
        "eles",
        "result",
        "eles",
        "eles",
        "i",
        "sourceEles",
        "i",
        "sourceEles",
        "i",
        "cy",
        "id",
        "ele",
        "resultArray",
        "ele",
        "result",
        "$$",
        "cy",
        "resultArray",
        "result",
        "$$",
        "array",
        "i",
        "i",
        "arrlen",
        "i",
        "left",
        "i",
        "right",
        "left",
        "lCheck",
        "left",
        "arrlen",
        "comparator",
        "array",
        "left",
        "array",
        "i",
        "rCheck",
        "right",
        "arrlen",
        "comparator",
        "array",
        "right",
        "array",
        "i",
        "lCheck",
        "rCheck",
        "$$",
        "i",
        "j",
        "heap",
        "i",
        "elements",
        "i",
        "elements",
        "i",
        "elements",
        "j",
        "heap",
        "i",
        "heap",
        "j",
        "elements",
        "i",
        "elements",
        "j",
        "pointers",
        "idI",
        "j",
        "pointers",
        "idJ",
        "i",
        "heap",
        "j",
        "swapValue",
        "elements",
        "j",
        "swapElems",
        "$$",
        "i",
        "rootToLeaf",
        "rootToLeaf",
        "rootToLeaf",
        "array",
        "treeLen",
        "array",
        "comparator",
        "current",
        "i",
        "condHeap",
        "rootToLeaf",
        "left",
        "current",
        "right",
        "left",
        "best",
        "current",
        "left",
        "treeLen",
        "comparator",
        "array",
        "left",
        "array",
        "best",
        "best",
        "left",
        "right",
        "treeLen",
        "comparator",
        "array",
        "right",
        "array",
        "best",
        "best",
        "right",
        "condHeap",
        "best",
        "current",
        "condHeap",
        "best",
        "current",
        "current",
        "best",
        "parent",
        "current",
        "best",
        "current",
        "condHeap",
        "parent",
        "comparator",
        "array",
        "best",
        "array",
        "parent",
        "condHeap",
        "best",
        "parent",
        "current",
        "parent",
        "$$",
        "eles",
        "eles",
        "elements",
        "i",
        "i",
        "elsize",
        "i",
        "element",
        "elements",
        "i",
        "elindex",
        "elvalue",
        "element",
        "elid",
        "element",
        "elid",
        "elid",
        "elvalue",
        "elid",
        "elid",
        "elindex",
        "elindex",
        "$$",
        "elementId",
        "elementId",
        "elementId",
        "elementIndex",
        "$$",
        "eles",
        "eles",
        "i",
        "elements",
        "i",
        "elements",
        "i",
        "elementId",
        "$$",
        "$$",
        "lastIndex",
        "removeCandidate",
        "lastIndex",
        "removeValue",
        "lastIndex",
        "remId",
        "removeCandidate",
        "remId",
        "top",
        "$$",
        "index",
        "index",
        "parent",
        "array",
        "index",
        "array",
        "parent",
        "index",
        "condHeap",
        "$$",
        "eles",
        "edit",
        "eles",
        "i",
        "elements",
        "i",
        "elements",
        "i",
        "elementId",
        "elementIndex",
        "$$",
        "edit",
        "elementIndex",
        "edit",
        "$$",
        "edit",
        "elementIndex",
        "edit",
        "elementValue",
        "elementIndex",
        "elementIndex",
        "$$",
        "eles",
        "eles",
        "i",
        "elements",
        "i",
        "elements",
        "i",
        "elementId",
        "elementIndex",
        "lastIndex",
        "elementIndex",
        "lastIndex",
        "removeCandidate",
        "lastIndex",
        "removeValue",
        "lastIndex",
        "remId",
        "removeCandidate",
        "remId",
        "elementIndex",
        "removeValue",
        "cytoscape",
        "$$",
        "options",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "options",
        "options",
        "options",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "options",
        "containerStyle",
        "containerStyle",
        "containerStyle",
        "i",
        "CanvasRenderer",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "CanvasRenderer",
        "i",
        "i",
        "i",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "i",
        "CanvasRenderer",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "CanvasRenderer",
        "CanvasRenderer",
        "$$",
        "Path2D",
        "CanvasRenderer",
        "pathsImpld",
        "CanvasRenderer",
        "$$",
        "types",
        "types",
        "i",
        "types",
        "i",
        "types",
        "i",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "i",
        "i",
        "i",
        "b",
        "b",
        "b",
        "b",
        "fnName",
        "$$",
        "CanvasRenderer",
        "fnName",
        "$$",
        "fnName",
        "$$",
        "CanvasRenderer",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "centerX",
        "width",
        "centerX",
        "width",
        "centerY",
        "height",
        "centerY",
        "height",
        "x1",
        "x",
        "x",
        "x2",
        "y1",
        "y",
        "y",
        "y2",
        "x",
        "y",
        "size",
        "angle",
        "translation",
        "angle",
        "angle",
        "x",
        "angle",
        "y",
        "angle",
        "x",
        "angle",
        "y",
        "angle",
        "xRotated",
        "size",
        "yRotated",
        "size",
        "xScaled",
        "translation",
        "yScaled",
        "translation",
        "xTranslated",
        "yTranslated",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "arrowShapes",
        "$$",
        "x",
        "y",
        "points",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "arrowShapes",
        "i",
        "points",
        "i",
        "transform",
        "points",
        "i",
        "points",
        "i",
        "size",
        "angle",
        "translation",
        "context",
        "pt",
        "pt",
        "edge",
        "edge",
        "edge",
        "arrowShapes",
        "arrowShapes",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "arrowShapes",
        "$$",
        "x",
        "y",
        "points",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "arrowShapes",
        "i",
        "points",
        "i",
        "transform",
        "points",
        "i",
        "points",
        "i",
        "size",
        "angle",
        "translation",
        "i",
        "firstPt",
        "pt",
        "context",
        "pt",
        "pt",
        "transform",
        "ctrlPt",
        "ctrlPt",
        "size",
        "angle",
        "translation",
        "context",
        "ctrlPtTrans",
        "ctrlPtTrans",
        "firstPt",
        "firstPt",
        "edge",
        "edge",
        "edge",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "arrowShapes",
        "arrowShapes",
        "$$",
        "x",
        "y",
        "teePts",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "$$",
        "x",
        "y",
        "triPts",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "inside",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "arrowShapes",
        "i",
        "triPts",
        "i",
        "transform",
        "triPts",
        "i",
        "triPts",
        "i",
        "size",
        "angle",
        "translation",
        "context",
        "pt",
        "pt",
        "arrowShapes",
        "transform",
        "teePts",
        "teePts",
        "size",
        "angle",
        "translation",
        "context",
        "firstTeePt",
        "firstTeePt",
        "i",
        "teePts",
        "i",
        "transform",
        "teePts",
        "i",
        "teePts",
        "i",
        "size",
        "angle",
        "translation",
        "context",
        "pt",
        "pt",
        "edge",
        "edge",
        "edge",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "$$",
        "x",
        "y",
        "points",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "i",
        "points",
        "i",
        "transform",
        "points",
        "i",
        "points",
        "i",
        "size",
        "angle",
        "translation",
        "context",
        "pt",
        "pt",
        "edge",
        "edge",
        "edge",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "context",
        "edge",
        "edge",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "width",
        "height",
        "height",
        "padding",
        "width",
        "padding",
        "y",
        "aspectRatio",
        "centerY",
        "aspectRatio",
        "centerX",
        "x",
        "centerY",
        "y",
        "width",
        "padding",
        "arrowShapes",
        "centerX",
        "x",
        "centerY",
        "y",
        "width",
        "padding",
        "arrowShapes",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "context",
        "translation",
        "translation",
        "arrowShapes",
        "size",
        "edge",
        "rendFunc",
        "edge",
        "arrowShapes",
        "edge",
        "edge",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "arrowShapes",
        "$$",
        "x",
        "y",
        "points",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "arrowShapes",
        "i",
        "points",
        "i",
        "transform",
        "points",
        "i",
        "points",
        "i",
        "size",
        "angle",
        "translation",
        "context",
        "pt",
        "pt",
        "edge",
        "edge",
        "arrowShapes",
        "arrowShapes",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "arrowShapes",
        "$$",
        "x",
        "y",
        "points",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "arrowShapes",
        "i",
        "points",
        "i",
        "transform",
        "points",
        "i",
        "points",
        "i",
        "size",
        "angle",
        "translation",
        "context",
        "pt",
        "pt",
        "edge",
        "edge",
        "edge",
        "arrowShapes",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "arrowShapes",
        "$$",
        "x",
        "y",
        "points",
        "centerX",
        "centerY",
        "width",
        "height",
        "direction",
        "padding",
        "bbCollide",
        "context",
        "size",
        "angle",
        "translation",
        "arrowShapes",
        "i",
        "points",
        "i",
        "transform",
        "points",
        "i",
        "points",
        "i",
        "size",
        "angle",
        "translation",
        "context",
        "pt",
        "pt",
        "edge",
        "edge",
        "edge",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "data",
        "data",
        "data",
        "data",
        "cy",
        "data",
        "CanvasRenderer",
        "data",
        "data",
        "data",
        "cy",
        "CanvasRenderer",
        "data",
        "data",
        "data",
        "data",
        "cy",
        "data",
        "CanvasRenderer",
        "data",
        "data",
        "data",
        "cy",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "clientX",
        "clientY",
        "offsets",
        "offsets",
        "clientX",
        "offsetLeft",
        "clientY",
        "offsetTop",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "CanvasRenderer",
        "container",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "bb",
        "CanvasRenderer",
        "CanvasRenderer",
        "x",
        "y",
        "visibleElementsOnly",
        "CanvasRenderer",
        "isTouch",
        "zoom",
        "isTouch",
        "zoom",
        "node",
        "node",
        "node",
        "width",
        "height",
        "node",
        "pos",
        "hw",
        "x",
        "x",
        "pos",
        "hw",
        "pos",
        "hh",
        "y",
        "y",
        "pos",
        "hh",
        "visibleElementsOnly",
        "node",
        "node",
        "visibleElementsOnly",
        "visible",
        "CanvasRenderer",
        "node",
        "node",
        "shape",
        "x",
        "y",
        "borderWO",
        "width",
        "nodeThreshold",
        "height",
        "nodeThreshold",
        "pos",
        "pos",
        "near",
        "node",
        "edge",
        "edge",
        "edge",
        "style",
        "width",
        "width",
        "width",
        "edge",
        "edge",
        "passedVisibilityCheck",
        "passedVisibilityCheck",
        "visibleElementsOnly",
        "passedVisibilityCheck",
        "edge",
        "edge",
        "visible",
        "passedVisibilityCheck",
        "passedVisibilityCheck",
        "rs",
        "inEdgeBB",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "widthSq",
        "passesVisibilityCheck",
        "widthSq",
        "edgeThreshold",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "inEdgeBB",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "widthSq",
        "passesVisibilityCheck",
        "widthSq",
        "edgeThreshold",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "near",
        "edge",
        "rs",
        "style",
        "radius",
        "tgt",
        "tgt",
        "tgt",
        "src",
        "src",
        "src",
        "srcPos",
        "rs",
        "srcW",
        "halfRadius",
        "srcPos",
        "rs",
        "srcH",
        "halfRadius",
        "tgtPos",
        "rs",
        "tgtW",
        "halfRadius",
        "tgtPos",
        "rs",
        "tgtH",
        "halfRadius",
        "inEdgeBB",
        "$$",
        "x",
        "y",
        "startX",
        "startY",
        "endX",
        "endY",
        "width2",
        "passesVisibilityCheck",
        "widthSq",
        "edgeThreshold",
        "$$",
        "x",
        "y",
        "startX",
        "startY",
        "endX",
        "endY",
        "near",
        "edge",
        "rs",
        "inEdgeBB",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "width2",
        "passesVisibilityCheck",
        "widthSq",
        "edgeThreshold",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "near",
        "edge",
        "rs",
        "inEdgeBB",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "widthSq",
        "passesVisibilityCheck",
        "widthSq",
        "edgeThreshold",
        "$$",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "near",
        "edge",
        "inEdgeBB",
        "passesVisibilityCheck",
        "near",
        "near",
        "near",
        "edge",
        "CanvasRenderer",
        "style",
        "CanvasRenderer",
        "style",
        "src",
        "edge",
        "tgt",
        "edge",
        "tgt",
        "src",
        "style",
        "style",
        "srcShape",
        "x",
        "y",
        "rs",
        "rs",
        "srcArW",
        "srcArH",
        "rs",
        "srcPos",
        "rs",
        "srcPos",
        "srcShape",
        "x",
        "y",
        "rs",
        "rs",
        "srcArW",
        "srcArH",
        "rs",
        "srcPos",
        "rs",
        "srcPos",
        "tgtShape",
        "x",
        "y",
        "rs",
        "rs",
        "tgtArW",
        "tgtArH",
        "rs",
        "tgtPos",
        "rs",
        "tgtPos",
        "tgtShape",
        "x",
        "y",
        "rs",
        "rs",
        "tgtArW",
        "tgtArH",
        "rs",
        "tgtPos",
        "rs",
        "tgtPos",
        "near",
        "edge",
        "hasCompounds",
        "near",
        "near",
        "near",
        "edge",
        "checkNode",
        "src",
        "checkNode",
        "tgt",
        "eles",
        "i",
        "i",
        "eles",
        "i",
        "near",
        "ele",
        "checkNode",
        "eles",
        "i",
        "checkEdge",
        "eles",
        "i",
        "near",
        "near",
        "near",
        "CanvasRenderer",
        "x1",
        "y1",
        "x2",
        "y2",
        "x1",
        "x2",
        "x1",
        "x2",
        "y1",
        "y2",
        "y1",
        "y2",
        "x1",
        "x1c",
        "x2",
        "x2c",
        "y1",
        "y1c",
        "y2",
        "y2c",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "CanvasRenderer",
        "nShape",
        "shapeObj",
        "x1",
        "y1",
        "x2",
        "y2",
        "w",
        "h",
        "pos",
        "pos",
        "border",
        "box",
        "nodes",
        "i",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "heur",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "heur",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "box",
        "edges",
        "i",
        "rs",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "heur",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "box",
        "edges",
        "i",
        "rs",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "heur",
        "heur",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "rs",
        "rs",
        "rs",
        "rs",
        "edges",
        "i",
        "box",
        "edges",
        "i",
        "rs",
        "edges",
        "i",
        "tgt",
        "edges",
        "i",
        "src",
        "srcPos",
        "rs",
        "srcPos",
        "rs",
        "tgtPos",
        "rs",
        "tgtPos",
        "rs",
        "x1",
        "startX",
        "startX",
        "x2",
        "y1",
        "startY",
        "startY",
        "y2",
        "x1",
        "endX",
        "endX",
        "x2",
        "y1",
        "endY",
        "endY",
        "y2",
        "startInBox",
        "endInBox",
        "box",
        "edges",
        "i",
        "box",
        "CanvasRenderer",
        "node",
        "node",
        "CanvasRenderer",
        "node",
        "node",
        "CanvasRenderer",
        "node",
        "node",
        "node",
        "shape",
        "shape",
        "shape",
        "shape",
        "CanvasRenderer",
        "node",
        "node",
        "node",
        "node",
        "node",
        "isNaN",
        "left",
        "left",
        "isNaN",
        "right",
        "right",
        "isNaN",
        "top",
        "top",
        "isNaN",
        "bottom",
        "bottom",
        "left",
        "right",
        "top",
        "bottom",
        "CanvasRenderer",
        "$$",
        "CanvasRenderer",
        "CanvasRenderer",
        "forceRecalc",
        "forceRecalc",
        "lastNodes",
        "lastEdges",
        "lastNodes",
        "nodes",
        "lastEdges",
        "edges",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "eles",
        "nodes",
        "i",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "eles",
        "edges",
        "i",
        "eles",
        "eles",
        "eles",
        "nodes",
        "edges",
        "eles",
        "CanvasRenderer",
        "edge",
        "$$",
        "edge",
        "edge",
        "pts",
        "bpts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "bpts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "bpts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "bpts",
        "mid",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "mid",
        "rs",
        "mid",
        "bpts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "bpts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "bpts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "qbezierAt",
        "pts",
        "pts",
        "pts",
        "rs",
        "pushBezierPts",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "pushBezierPts",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "pushBezierPts",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "CanvasRenderer",
        "node",
        "node",
        "content",
        "content",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "textHalign",
        "textX",
        "nodePos",
        "nodeWidth",
        "textX",
        "nodePos",
        "nodeWidth",
        "textX",
        "nodePos",
        "textValign",
        "textY",
        "nodePos",
        "nodeHeight",
        "textY",
        "nodePos",
        "nodeHeight",
        "textY",
        "nodePos",
        "rs",
        "textX",
        "rs",
        "textY",
        "rstyle",
        "textX",
        "rstyle",
        "textY",
        "node",
        "CanvasRenderer",
        "edge",
        "edge",
        "content",
        "content",
        "edge",
        "edge",
        "rs",
        "edgeCenterX",
        "rs",
        "edgeCenterY",
        "rs",
        "rs",
        "edgeCenterX",
        "rs",
        "rs",
        "edgeCenterY",
        "rs",
        "rs",
        "rs",
        "edgeCenterX",
        "$$",
        "rs",
        "rs",
        "rs",
        "edgeCenterY",
        "$$",
        "rs",
        "rs",
        "rs",
        "rs",
        "edge",
        "edge",
        "edgeCenterX",
        "srcPos",
        "rs",
        "tgtPos",
        "rs",
        "edgeCenterY",
        "srcPos",
        "rs",
        "tgtPos",
        "rs",
        "textX",
        "edgeCenterX",
        "textY",
        "edgeCenterY",
        "rs",
        "textX",
        "rs",
        "textY",
        "rstyle",
        "textX",
        "rstyle",
        "textY",
        "edge",
        "CanvasRenderer",
        "ele",
        "ele",
        "ele",
        "ele",
        "ele",
        "text",
        "rstyle",
        "labelDims",
        "rs",
        "labelDims",
        "rstyle",
        "labelDims",
        "rs",
        "labelDims",
        "CanvasRenderer",
        "ele",
        "ele",
        "ele",
        "style",
        "textTransform",
        "textTransform",
        "text",
        "text",
        "textTransform",
        "text",
        "text",
        "text",
        "CanvasRenderer",
        "ele",
        "text",
        "ele",
        "style",
        "style",
        "style",
        "style",
        "ele",
        "r",
        "r",
        "cache",
        "cacheKey",
        "cache",
        "cacheKey",
        "div",
        "div",
        "div",
        "div",
        "ds",
        "family",
        "ds",
        "fStyle",
        "ds",
        "size",
        "ds",
        "weight",
        "ds",
        "ds",
        "ds",
        "ds",
        "ds",
        "ds",
        "ds",
        "ds",
        "div",
        "text",
        "cache",
        "cacheKey",
        "div",
        "div",
        "cache",
        "cacheKey",
        "CanvasRenderer",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "_p",
        "_p",
        "_p",
        "rs",
        "_p",
        "rs",
        "rs",
        "_p",
        "rs",
        "bbStyleSame",
        "labelStyleSame",
        "ele",
        "_p",
        "rstyle",
        "rstyle",
        "pos",
        "rstyle",
        "pos",
        "rstyle",
        "posSame",
        "styleSame",
        "nodes",
        "ele",
        "rstyle",
        "pos",
        "rstyle",
        "pos",
        "ele",
        "ele",
        "rstyle",
        "rstyle",
        "srcPos",
        "rstyle",
        "srcPos",
        "rstyle",
        "rstyle",
        "rstyle",
        "tgtPos",
        "rstyle",
        "tgtPos",
        "rstyle",
        "srcSame",
        "tgtSame",
        "positionsSame",
        "styleSame",
        "_p",
        "curveType",
        "handledEdge",
        "id",
        "edges",
        "ele",
        "handledEdge",
        "id",
        "ele",
        "i",
        "parallelEdges",
        "i",
        "parallelEdges",
        "i",
        "pEdge",
        "handledEdge",
        "pId",
        "edges",
        "pEdge",
        "handledEdge",
        "pId",
        "edges",
        "ele",
        "rstyle",
        "srcPos",
        "rstyle",
        "srcPos",
        "rstyle",
        "tgtPos",
        "rstyle",
        "tgtPos",
        "rs",
        "_p",
        "rs",
        "_p",
        "edges",
        "nodes",
        "edges",
        "CanvasRenderer",
        "nodes",
        "edges",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "CanvasRenderer",
        "edges",
        "edges",
        "CanvasRenderer",
        "edges",
        "edges",
        "edges",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "edge",
        "style",
        "style",
        "style",
        "haystackEdges",
        "edge",
        "edge",
        "edge",
        "pairId",
        "srcId",
        "tgtId",
        "tgtId",
        "srcId",
        "srcId",
        "tgtId",
        "edgeIsUnbundled",
        "pairId",
        "edge",
        "hashTable",
        "pairId",
        "hashTable",
        "pairId",
        "pairIds",
        "pairId",
        "hashTable",
        "pairId",
        "edge",
        "edgeIsUnbundled",
        "hashTable",
        "pairId",
        "p",
        "pairIds",
        "p",
        "pairId",
        "pairIds",
        "p",
        "hashTable",
        "pairId",
        "pairEdges",
        "edge1",
        "edge2",
        "edge1",
        "edge2",
        "src",
        "pairEdges",
        "tgt",
        "pairEdges",
        "src",
        "tgt",
        "src",
        "tgt",
        "tgt",
        "temp",
        "srcPos",
        "src",
        "tgtPos",
        "tgt",
        "srcW",
        "src",
        "srcH",
        "src",
        "tgtW",
        "tgt",
        "tgtH",
        "tgt",
        "srcShape",
        "CanvasRenderer",
        "src",
        "tgtShape",
        "CanvasRenderer",
        "tgt",
        "srcBorder",
        "src",
        "tgtBorder",
        "tgt",
        "badBezier",
        "pairEdges",
        "src",
        "tgt",
        "pairEdges",
        "srcShape",
        "srcPos",
        "srcPos",
        "srcW",
        "srcH",
        "tgtPos",
        "tgtPos",
        "srcBorder",
        "tgtShape",
        "tgtPos",
        "tgtPos",
        "tgtW",
        "tgtH",
        "srcPos",
        "srcPos",
        "tgtBorder",
        "srcOutside",
        "tgtOutside",
        "srcOutside",
        "tgtOutside",
        "tgtOutside",
        "srcOutside",
        "tgtOutside",
        "srcOutside",
        "dx",
        "dx",
        "dy",
        "dy",
        "dx",
        "dy",
        "vector",
        "l",
        "vector",
        "l",
        "vectorNormInverse",
        "vectorNorm",
        "vectorNorm",
        "tgtShape",
        "srcOutside",
        "srcOutside",
        "tgtBorder",
        "tgtW",
        "tgtH",
        "tgtPos",
        "tgtPos",
        "srcShape",
        "tgtOutside",
        "tgtOutside",
        "srcBorder",
        "srcW",
        "srcH",
        "srcPos",
        "srcPos",
        "vectorNormInverse",
        "badBezier",
        "i",
        "pairEdges",
        "i",
        "edge",
        "pairEdges",
        "i",
        "rs",
        "edge",
        "rs",
        "rs",
        "pairEdges",
        "edge",
        "eStyle",
        "eStyle",
        "eStyle",
        "eStyle",
        "eStyle",
        "rs",
        "srcPos",
        "rs",
        "srcPos",
        "rs",
        "src",
        "rs",
        "src",
        "rs",
        "tgtPos",
        "rs",
        "tgtPos",
        "rs",
        "tgt",
        "rs",
        "tgt",
        "rs",
        "eStyle",
        "badBezier",
        "rs",
        "rs",
        "srcX1",
        "srcX2",
        "srcY1",
        "srcY2",
        "srcW1",
        "srcW2",
        "srcH1",
        "srcH2",
        "tgtX1",
        "tgtX2",
        "tgtY1",
        "tgtY2",
        "tgtW1",
        "tgtW2",
        "tgtH1",
        "tgtH2",
        "width1",
        "width2",
        "edgeIndex1",
        "edgeIndex2",
        "numEdges1",
        "numEdges2",
        "edgeIsUnbundled",
        "rs",
        "srcX2",
        "rs",
        "srcY2",
        "rs",
        "srcW2",
        "rs",
        "srcH2",
        "rs",
        "tgtX2",
        "rs",
        "tgtY2",
        "rs",
        "tgtW2",
        "rs",
        "tgtH2",
        "rs",
        "edgeIndex2",
        "rs",
        "numEdges2",
        "rs",
        "width2",
        "src",
        "tgt",
        "rs",
        "edgeIsUnbundled",
        "j",
        "loopDist",
        "stepDist",
        "rs",
        "srcPos",
        "rs",
        "srcPos",
        "srcH",
        "loopDist",
        "j",
        "rs",
        "src",
        "srcW",
        "loopDist",
        "j",
        "rs",
        "srcPos",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "pairEdges",
        "i",
        "pairEdges",
        "edgeIsUnbundled",
        "rs",
        "pairEdges",
        "i",
        "stepSize",
        "$$",
        "normStepDist",
        "edgeIsUnbundled",
        "manStepDist",
        "stepDist",
        "manStepDist",
        "stepDist",
        "sign",
        "stepDist",
        "manStepDist",
        "manStepDist",
        "normStepDist",
        "stepWeight",
        "edge",
        "src",
        "swappedDirection",
        "w1",
        "stepWeight",
        "w2",
        "stepWeight",
        "midptSrcPts",
        "w1",
        "midptSrcPts",
        "w2",
        "midptSrcPts",
        "w1",
        "midptSrcPts",
        "w2",
        "rs",
        "rs",
        "adjustedMidpt",
        "vectorNormInverse",
        "distanceFromMidpoint",
        "rs",
        "adjustedMidpt",
        "vectorNormInverse",
        "distanceFromMidpoint",
        "edge",
        "$$",
        "rs",
        "$$",
        "rs",
        "$$",
        "rs",
        "$$",
        "rs",
        "$$",
        "rs",
        "$$",
        "rs",
        "$$",
        "rs",
        "$$",
        "rs",
        "edge",
        "CanvasRenderer",
        "minCpADistFactor",
        "arrowW",
        "$$",
        "rs",
        "rs",
        "rs",
        "rs",
        "startACpDist",
        "minCpADist",
        "$$",
        "rs",
        "rs",
        "rs",
        "rs",
        "endACpDist",
        "minCpADist",
        "rs",
        "badStart",
        "badAStart",
        "closeStartACp",
        "overlapping",
        "rs",
        "srcPos",
        "rs",
        "srcPos",
        "cpD",
        "cpD",
        "cpD",
        "cpD",
        "cpD",
        "cpL",
        "cpD",
        "cpL",
        "srcW",
        "srcH",
        "rs",
        "cpM",
        "radius",
        "rs",
        "cpM",
        "radius",
        "srcShape",
        "srcPos",
        "srcPos",
        "srcW",
        "srcH",
        "cpProj",
        "cpProj",
        "srcBorder",
        "closeStartACp",
        "rs",
        "rs",
        "cpM",
        "minCpADist",
        "startACpDist",
        "rs",
        "rs",
        "cpM",
        "minCpADist",
        "startACpDist",
        "rs",
        "srcCtrlPtIntn",
        "cpM",
        "minCpADist",
        "rs",
        "srcCtrlPtIntn",
        "cpM",
        "minCpADist",
        "badEnd",
        "badAEnd",
        "closeEndACp",
        "overlapping",
        "rs",
        "tgtPos",
        "rs",
        "tgtPos",
        "cpD",
        "cpD",
        "cpD",
        "cpD",
        "cpD",
        "cpL",
        "cpD",
        "cpL",
        "srcW",
        "srcH",
        "rs",
        "cpM",
        "radius",
        "rs",
        "cpM",
        "radius",
        "tgtShape",
        "tgtPos",
        "tgtPos",
        "tgtW",
        "tgtH",
        "cpProj",
        "cpProj",
        "tgtBorder",
        "closeEndACp",
        "rs",
        "rs",
        "cpM",
        "minCpADist",
        "endACpDist",
        "rs",
        "rs",
        "cpM",
        "minCpADist",
        "endACpDist",
        "rs",
        "tgtCtrlPtIntn",
        "cpM",
        "minCpADist",
        "rs",
        "tgtCtrlPtIntn",
        "cpM",
        "minCpADist",
        "overlapping",
        "edge",
        "rs",
        "rs",
        "srcX2",
        "tgtX2",
        "rs",
        "srcY2",
        "tgtY2",
        "edge",
        "i",
        "haystackEdges",
        "i",
        "haystackEdges",
        "i",
        "edge",
        "rscratch",
        "rscratch",
        "angle",
        "angle",
        "rscratch",
        "angle",
        "angle",
        "rscratch",
        "rscratch",
        "hashTable",
        "CanvasRenderer",
        "edge",
        "edge",
        "edge",
        "edge",
        "edge",
        "target",
        "source",
        "edge",
        "edge",
        "rs",
        "rs",
        "intersect",
        "CanvasRenderer",
        "target",
        "target",
        "target",
        "target",
        "target",
        "cp",
        "cp",
        "tgtBorderW",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "tgtArShape",
        "edge",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "tgtArShape",
        "edge",
        "rs",
        "edgeEnd",
        "rs",
        "edgeEnd",
        "rs",
        "arrowEnd",
        "rs",
        "arrowEnd",
        "rs",
        "rs",
        "intersect",
        "CanvasRenderer",
        "source",
        "source",
        "source",
        "source",
        "source",
        "cp",
        "cp",
        "srcBorderW",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "srcArShape",
        "edge",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "srcArShape",
        "edge",
        "rs",
        "edgeStart",
        "rs",
        "edgeStart",
        "rs",
        "arrowStart",
        "rs",
        "arrowStart",
        "rs",
        "intersect",
        "CanvasRenderer",
        "target",
        "target",
        "target",
        "target",
        "target",
        "source",
        "source",
        "tgtBorderW",
        "intersect",
        "rs",
        "rs",
        "$$",
        "intersect",
        "source",
        "source",
        "CanvasRenderer",
        "tgtArShape",
        "edge",
        "$$",
        "intersect",
        "source",
        "source",
        "CanvasRenderer",
        "tgtArShape",
        "edge",
        "rs",
        "edgeEnd",
        "rs",
        "edgeEnd",
        "rs",
        "arrowEnd",
        "rs",
        "arrowEnd",
        "intersect",
        "CanvasRenderer",
        "source",
        "source",
        "source",
        "source",
        "source",
        "target",
        "target",
        "srcBorderW",
        "intersect",
        "rs",
        "rs",
        "$$",
        "intersect",
        "target",
        "target",
        "CanvasRenderer",
        "srcArShape",
        "edge",
        "$$",
        "intersect",
        "target",
        "target",
        "CanvasRenderer",
        "srcArShape",
        "edge",
        "rs",
        "edgeStart",
        "rs",
        "edgeStart",
        "rs",
        "arrowStart",
        "rs",
        "arrowStart",
        "rs",
        "rs",
        "rs",
        "intersect",
        "CanvasRenderer",
        "target",
        "target",
        "target",
        "target",
        "target",
        "cp",
        "cp",
        "tgtBorderW",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "tgtArShape",
        "edge",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "tgtArShape",
        "edge",
        "rs",
        "edgeEnd",
        "rs",
        "edgeEnd",
        "rs",
        "arrowEnd",
        "rs",
        "arrowEnd",
        "intersect",
        "CanvasRenderer",
        "source",
        "source",
        "source",
        "source",
        "source",
        "cp",
        "cp",
        "srcBorderW",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "srcArShape",
        "edge",
        "$$",
        "intersect",
        "cp",
        "CanvasRenderer",
        "srcArShape",
        "edge",
        "rs",
        "edgeStart",
        "rs",
        "edgeStart",
        "rs",
        "arrowStart",
        "rs",
        "arrowStart",
        "rs",
        "CanvasRenderer",
        "nodeSet",
        "i",
        "nodeSet",
        "i",
        "hashTable",
        "nodeSet",
        "i",
        "nodeSet",
        "i",
        "i",
        "edges",
        "i",
        "hashTable",
        "edges",
        "i",
        "hashTable",
        "edges",
        "i",
        "adjacentEdges",
        "edges",
        "i",
        "adjacentEdges",
        "CanvasRenderer",
        "CanvasRenderer",
        "edgeWidth",
        "cache",
        "edgeWidth",
        "cachedVal",
        "cachedVal",
        "cachedVal",
        "edgeWidth",
        "cache",
        "edgeWidth",
        "cachedVal",
        "cachedVal",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "context",
        "edge",
        "drawOverlayInstead",
        "edge",
        "CanvasRenderer",
        "rs",
        "rs",
        "rs",
        "isNaN",
        "rs",
        "edge",
        "style",
        "style",
        "style",
        "style",
        "drawOverlayInstead",
        "overlayOpacity",
        "context",
        "overlayColor",
        "overlayColor",
        "overlayColor",
        "overlayOpacity",
        "context",
        "edge",
        "usePaths",
        "context",
        "style",
        "context",
        "lineColor",
        "lineColor",
        "lineColor",
        "style",
        "context",
        "source",
        "startNode",
        "edge",
        "target",
        "endNode",
        "edge",
        "target",
        "target",
        "target",
        "source",
        "source",
        "source",
        "style",
        "drawOverlayInstead",
        "overlayPadding",
        "drawOverlayInstead",
        "style",
        "context",
        "edgeWidth",
        "rs",
        "rs",
        "style",
        "radius",
        "edge",
        "context",
        "rs",
        "rs",
        "sourceW",
        "halfRadius",
        "sourcePos",
        "rs",
        "sourceH",
        "halfRadius",
        "sourcePos",
        "rs",
        "targetW",
        "halfRadius",
        "targetPos",
        "rs",
        "targetH",
        "halfRadius",
        "targetPos",
        "lineStyle",
        "edgeWidth",
        "rs",
        "edge",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "edge",
        "edge",
        "context",
        "points",
        "lineStyle",
        "edgeWidth",
        "rs",
        "endNode",
        "startNode",
        "endNode",
        "startNode",
        "rs",
        "rs",
        "rs",
        "rs",
        "nodeDirectionX",
        "edgeDirectionX",
        "nodeDirectionY",
        "edgeDirectionY",
        "rs",
        "edge",
        "context",
        "details",
        "details",
        "details",
        "details",
        "lineStyle",
        "edgeWidth",
        "rs",
        "edge",
        "context",
        "details",
        "details",
        "details",
        "details",
        "details",
        "details",
        "lineStyle",
        "edgeWidth",
        "rs",
        "context",
        "edge",
        "drawOverlayInstead",
        "rs",
        "rs",
        "context",
        "edge",
        "drawOverlayInstead",
        "CanvasRenderer",
        "edge",
        "context",
        "pts",
        "width",
        "edge",
        "CanvasRenderer",
        "usePaths",
        "rs",
        "pathCacheKey",
        "rs",
        "keyMatches",
        "i",
        "pathCacheKey",
        "i",
        "rs",
        "i",
        "pathCacheKey",
        "i",
        "keyMatches",
        "keyMatches",
        "path",
        "context",
        "rs",
        "pathCacheHit",
        "path",
        "context",
        "Path2D",
        "rs",
        "pathCacheKey",
        "rs",
        "path",
        "canvasCxt",
        "canvasCxt",
        "canvasCxt",
        "canvasCxt",
        "pathCacheHit",
        "context",
        "context",
        "context",
        "pts",
        "pts",
        "pts",
        "context",
        "pts",
        "pts",
        "pts",
        "pts",
        "pts",
        "context",
        "pts",
        "pts",
        "pts",
        "pts",
        "context",
        "pts",
        "pts",
        "pts",
        "pts",
        "context",
        "pts",
        "pts",
        "context",
        "canvasCxt",
        "usePaths",
        "context",
        "path",
        "context",
        "context",
        "context",
        "CanvasRenderer",
        "context",
        "edge",
        "drawOverlayInstead",
        "drawOverlayInstead",
        "edge",
        "rs",
        "edge",
        "edge",
        "isHaystack",
        "startX",
        "rs",
        "startY",
        "rs",
        "endX",
        "rs",
        "endY",
        "rs",
        "startX",
        "rs",
        "startY",
        "rs",
        "endX",
        "rs",
        "endY",
        "rs",
        "edge",
        "prefix",
        "x",
        "y",
        "dispX",
        "dispY",
        "style",
        "prefix",
        "arrowShape",
        "context",
        "context",
        "context",
        "style",
        "prefix",
        "style",
        "prefix",
        "arrowShape",
        "arrowFill",
        "arrowClearFill",
        "edge",
        "prefix",
        "context",
        "arrowClearFill",
        "style",
        "style",
        "prefix",
        "x",
        "y",
        "dispX",
        "dispY",
        "context",
        "gco",
        "style",
        "prefix",
        "context",
        "color",
        "color",
        "color",
        "style",
        "edge",
        "prefix",
        "context",
        "arrowFill",
        "style",
        "style",
        "prefix",
        "x",
        "y",
        "dispX",
        "dispY",
        "dispX",
        "startX",
        "srcPos",
        "dispY",
        "startY",
        "srcPos",
        "isHaystack",
        "isNaN",
        "startX",
        "isNaN",
        "startY",
        "isNaN",
        "dispX",
        "isNaN",
        "dispY",
        "drawArrowhead",
        "startX",
        "startY",
        "dispX",
        "dispY",
        "rs",
        "rs",
        "isHaystack",
        "midX",
        "startX",
        "endX",
        "midY",
        "startY",
        "endY",
        "dispX",
        "startX",
        "endX",
        "dispY",
        "startY",
        "endY",
        "rs",
        "dispX",
        "dispY",
        "isNaN",
        "midX",
        "isNaN",
        "midY",
        "drawArrowhead",
        "midX",
        "midY",
        "dispX",
        "dispY",
        "dispX",
        "dispY",
        "isNaN",
        "midX",
        "isNaN",
        "midY",
        "drawArrowhead",
        "midX",
        "midY",
        "dispX",
        "dispY",
        "dispX",
        "endX",
        "tgtPos",
        "dispY",
        "endY",
        "tgtPos",
        "isHaystack",
        "isNaN",
        "endX",
        "isNaN",
        "endY",
        "isNaN",
        "dispX",
        "isNaN",
        "dispY",
        "drawArrowhead",
        "endX",
        "endY",
        "dispX",
        "dispY",
        "CanvasRenderer",
        "edge",
        "arrowType",
        "context",
        "fill",
        "edgeWidth",
        "shape",
        "x",
        "y",
        "dispX",
        "dispY",
        "CanvasRenderer",
        "edge",
        "x",
        "y",
        "dispY",
        "dispX",
        "dispX",
        "dispY",
        "dispY",
        "dispX",
        "angle",
        "angle",
        "angle",
        "angle",
        "edgeWidth",
        "CanvasRenderer",
        "shape",
        "usePaths",
        "size",
        "shape",
        "angle",
        "x",
        "y",
        "rs",
        "rs",
        "rs",
        "rs",
        "rs",
        "arrowType",
        "pathCacheKey",
        "alreadyCached",
        "path",
        "context",
        "rs",
        "arrowType",
        "pathCacheHit",
        "path",
        "context",
        "Path2D",
        "rs",
        "arrowType",
        "pathCacheKey",
        "rs",
        "arrowType",
        "path",
        "context",
        "context",
        "pathCacheHit",
        "shapeImpl",
        "context",
        "size",
        "angle",
        "translation",
        "shapeImpl",
        "context",
        "context",
        "context",
        "canvasContext",
        "fill",
        "fill",
        "usePaths",
        "context",
        "path",
        "context",
        "fill",
        "fill",
        "context",
        "shapeImpl",
        "edgeWidth",
        "context",
        "usePaths",
        "context",
        "path",
        "context",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "url",
        "onLoad",
        "r",
        "r",
        "imageCache",
        "url",
        "imageCache",
        "url",
        "imageCache",
        "url",
        "imageCache",
        "url",
        "imageCache",
        "url",
        "cache",
        "Image",
        "image",
        "onLoad",
        "image",
        "url",
        "image",
        "CanvasRenderer",
        "context",
        "img",
        "node",
        "node",
        "node",
        "node",
        "style",
        "style",
        "style",
        "style",
        "node",
        "node",
        "node",
        "style",
        "clip",
        "style",
        "img",
        "img",
        "w",
        "h",
        "fit",
        "nodeW",
        "w",
        "nodeH",
        "h",
        "w",
        "scale",
        "h",
        "scale",
        "fit",
        "nodeW",
        "w",
        "nodeH",
        "h",
        "w",
        "scale",
        "h",
        "scale",
        "nodeX",
        "nodeW",
        "xPos",
        "x",
        "nodeW",
        "w",
        "xPos",
        "x",
        "xPos",
        "nodeY",
        "nodeH",
        "yPos",
        "y",
        "nodeH",
        "h",
        "yPos",
        "y",
        "yPos",
        "rs",
        "x",
        "nodeX",
        "y",
        "nodeY",
        "nodeX",
        "nodeY",
        "context",
        "context",
        "imgOpacity",
        "repeat",
        "shouldClip",
        "context",
        "rs",
        "context",
        "rs",
        "CanvasRenderer",
        "r",
        "node",
        "context",
        "nodeX",
        "nodeY",
        "nodeW",
        "nodeH",
        "context",
        "context",
        "img",
        "img",
        "img",
        "x",
        "y",
        "w",
        "h",
        "shouldClip",
        "context",
        "context",
        "img",
        "repeat",
        "context",
        "pattern",
        "CanvasRenderer",
        "r",
        "node",
        "context",
        "nodeX",
        "nodeY",
        "nodeW",
        "nodeH",
        "context",
        "x",
        "y",
        "context",
        "context",
        "x",
        "y",
        "context",
        "gAlpha",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "context",
        "edge",
        "edge",
        "text",
        "text",
        "edge",
        "edge",
        "edge",
        "computedSize",
        "minSize",
        "context",
        "context",
        "edge",
        "context",
        "edge",
        "rs",
        "rs",
        "CanvasRenderer",
        "context",
        "node",
        "node",
        "text",
        "text",
        "node",
        "node",
        "node",
        "computedSize",
        "minSize",
        "node",
        "node",
        "node",
        "textHalign",
        "context",
        "context",
        "context",
        "textValign",
        "context",
        "context",
        "context",
        "context",
        "node",
        "rs",
        "rs",
        "CanvasRenderer",
        "context",
        "i",
        "i",
        "cache",
        "i",
        "cache",
        "context",
        "cache",
        "cache",
        "context",
        "cache",
        "cache",
        "CanvasRenderer",
        "context",
        "element",
        "element",
        "element",
        "style",
        "style",
        "style",
        "style",
        "style",
        "style",
        "parentOpacity",
        "style",
        "opacity",
        "style",
        "style",
        "element",
        "context",
        "cache",
        "fontCacheKey",
        "context",
        "labelStyle",
        "labelWeight",
        "labelSize",
        "labelFamily",
        "cache",
        "fontCacheKey",
        "style",
        "style",
        "textTransform",
        "textTransform",
        "text",
        "text",
        "textTransform",
        "text",
        "text",
        "context",
        "context",
        "color",
        "color",
        "color",
        "opacity",
        "context",
        "outlineColor",
        "outlineColor",
        "outlineColor",
        "outlineOpacity",
        "text",
        "CanvasRenderer",
        "context",
        "element",
        "textX",
        "textY",
        "element",
        "element",
        "parentOpacity",
        "context",
        "element",
        "text",
        "isNaN",
        "textX",
        "isNaN",
        "textY",
        "style",
        "lineWidth",
        "context",
        "lineWidth",
        "context",
        "text",
        "textX",
        "textY",
        "context",
        "text",
        "textX",
        "textY",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "context",
        "node",
        "drawOverlayInstead",
        "node",
        "node",
        "CanvasRenderer",
        "style",
        "style",
        "style",
        "drawOverlayInstead",
        "overlayOpacity",
        "node",
        "parentOpacity",
        "nodeWidth",
        "node",
        "nodeHeight",
        "node",
        "context",
        "style",
        "drawOverlayInstead",
        "drawOverlayInstead",
        "style",
        "style",
        "style",
        "context",
        "bgColor",
        "bgColor",
        "bgColor",
        "style",
        "style",
        "parentOpacity",
        "context",
        "borderColor",
        "borderColor",
        "borderColor",
        "style",
        "style",
        "parentOpacity",
        "context",
        "context",
        "borderStyle",
        "context",
        "context",
        "context",
        "style",
        "style",
        "style",
        "node",
        "usePaths",
        "styleShape",
        "nodeWidth",
        "nodeHeight",
        "context",
        "pos",
        "pos",
        "rs",
        "pathCacheKey",
        "path",
        "context",
        "rs",
        "pathCacheHit",
        "path",
        "context",
        "Path2D",
        "rs",
        "pathCacheKey",
        "rs",
        "path",
        "pathCacheHit",
        "usePaths",
        "npos",
        "CanvasRenderer",
        "node",
        "context",
        "npos",
        "npos",
        "nodeWidth",
        "nodeHeight",
        "context",
        "canvasContext",
        "usePaths",
        "context",
        "path",
        "context",
        "url",
        "url",
        "r",
        "CanvasRenderer",
        "r",
        "CanvasRenderer",
        "r",
        "image",
        "context",
        "image",
        "node",
        "style",
        "style",
        "node",
        "context",
        "node",
        "darkness",
        "borderWidth",
        "usePaths",
        "CanvasRenderer",
        "node",
        "context",
        "pos",
        "pos",
        "nodeWidth",
        "nodeHeight",
        "darkness",
        "context",
        "darkness",
        "usePaths",
        "context",
        "path",
        "context",
        "darkness",
        "context",
        "darkness",
        "usePaths",
        "context",
        "path",
        "context",
        "borderWidth",
        "usePaths",
        "context",
        "path",
        "context",
        "borderStyle",
        "context",
        "style",
        "context",
        "context",
        "usePaths",
        "context",
        "path",
        "context",
        "context",
        "gco",
        "usePaths",
        "context",
        "pos",
        "pos",
        "context",
        "context",
        "overlayOpacity",
        "context",
        "overlayColor",
        "overlayColor",
        "overlayColor",
        "overlayOpacity",
        "CanvasRenderer",
        "context",
        "node",
        "node",
        "nodeWidth",
        "overlayPadding",
        "nodeHeight",
        "overlayPadding",
        "context",
        "CanvasRenderer",
        "node",
        "node",
        "node",
        "node",
        "CanvasRenderer",
        "context",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "nodeW",
        "nodeH",
        "CanvasRenderer",
        "usePaths",
        "x",
        "y",
        "pieSize",
        "radius",
        "radius",
        "pieSize",
        "pieSize",
        "radius",
        "pieSize",
        "i",
        "$$",
        "i",
        "node",
        "i",
        "node",
        "i",
        "node",
        "i",
        "size",
        "lastPercent",
        "percent",
        "angleStart",
        "angleDelta",
        "size",
        "lastPercent",
        "lastPercent",
        "percent",
        "context",
        "context",
        "x",
        "y",
        "context",
        "x",
        "y",
        "radius",
        "angleStart",
        "angleEnd",
        "context",
        "context",
        "color",
        "color",
        "color",
        "opacity",
        "context",
        "lastPercent",
        "percent",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "backingStore",
        "CanvasRenderer",
        "context",
        "i",
        "caches",
        "i",
        "cache",
        "caches",
        "i",
        "cache",
        "context",
        "needToCreateCache",
        "needToCreateCache",
        "cache",
        "context",
        "caches",
        "cache",
        "cache",
        "CanvasRenderer",
        "context",
        "r",
        "g",
        "b",
        "a",
        "context",
        "r",
        "g",
        "b",
        "a",
        "CanvasRenderer",
        "context",
        "r",
        "g",
        "b",
        "a",
        "context",
        "r",
        "g",
        "b",
        "a",
        "CanvasRenderer",
        "container",
        "container",
        "container",
        "width",
        "pixelRatio",
        "height",
        "pixelRatio",
        "canvasWidth",
        "canvasHeight",
        "data",
        "canvasContainer",
        "width",
        "canvasContainer",
        "height",
        "i",
        "CanvasRenderer",
        "i",
        "canvas",
        "data",
        "i",
        "canvas",
        "canvasWidth",
        "canvas",
        "canvasHeight",
        "canvas",
        "canvasWidth",
        "canvas",
        "canvasHeight",
        "canvas",
        "width",
        "canvas",
        "height",
        "i",
        "CanvasRenderer",
        "i",
        "canvas",
        "data",
        "i",
        "canvas",
        "canvasWidth",
        "canvas",
        "canvasHeight",
        "canvas",
        "canvasWidth",
        "canvas",
        "canvasHeight",
        "canvas",
        "width",
        "canvas",
        "height",
        "pixelRatio",
        "canvas",
        "data",
        "CanvasRenderer",
        "canvas",
        "canvasWidth",
        "canvas",
        "canvasHeight",
        "canvasWidth",
        "canvasHeight",
        "CanvasRenderer",
        "cxt",
        "zoom",
        "pan",
        "pxRatio",
        "cxt",
        "zoom",
        "pan",
        "pxRatio",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "r",
        "r",
        "data",
        "options",
        "options",
        "r",
        "motionBlur",
        "motionBlur",
        "forcedContext",
        "r",
        "motionBlur",
        "r",
        "clearTimeout",
        "r",
        "forcedContext",
        "clearTimeout",
        "CanvasRenderer",
        "CanvasRenderer",
        "redrawLimit",
        "minRedrawLimit",
        "redrawLimit",
        "minRedrawLimit",
        "redrawLimit",
        "redrawLimit",
        "redrawLimit",
        "maxRedrawLimit",
        "redrawLimit",
        "maxRedrawLimit",
        "nowTime",
        "timeElapsed",
        "redrawLimit",
        "forcedContext",
        "callAfterLimit",
        "setTimeout",
        "r",
        "redrawLimit",
        "nowTime",
        "r",
        "cy",
        "cy",
        "forcedZoom",
        "forcedZoom",
        "zoom",
        "cy",
        "pan",
        "pan",
        "forcedPan",
        "effectivePan",
        "forcedPan",
        "effectiveZoom",
        "pixelRatio",
        "effectivePan",
        "pixelRatio",
        "effectivePan",
        "pixelRatio",
        "context",
        "clear",
        "context",
        "clear",
        "context",
        "context",
        "r",
        "context",
        "context",
        "r",
        "r",
        "context",
        "gco",
        "forcedContext",
        "clear",
        "clear",
        "context",
        "r",
        "r",
        "drawAllLayers",
        "context",
        "effectivePan",
        "effectivePan",
        "context",
        "effectiveZoom",
        "effectiveZoom",
        "forcedPan",
        "context",
        "forcedPan",
        "forcedPan",
        "forcedZoom",
        "context",
        "forcedZoom",
        "forcedZoom",
        "r",
        "forcedContext",
        "r",
        "r",
        "r",
        "r",
        "textureDraw",
        "r",
        "r",
        "bb",
        "r",
        "cy",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "CanvasRenderer",
        "cxt",
        "cxt",
        "r",
        "r",
        "r",
        "r",
        "r",
        "cxt",
        "pixelRatio",
        "r",
        "r",
        "cy",
        "cy",
        "r",
        "r",
        "vp",
        "vp",
        "vp",
        "vp",
        "vp",
        "needDraw",
        "CanvasRenderer",
        "needDraw",
        "CanvasRenderer",
        "data",
        "CanvasRenderer",
        "r",
        "r",
        "bb",
        "r",
        "context",
        "context",
        "vp",
        "vp",
        "coreStyle",
        "coreStyle",
        "r",
        "context",
        "outsideBgColor",
        "outsideBgColor",
        "outsideBgColor",
        "outsideBgOpacity",
        "context",
        "vp",
        "vp",
        "cy",
        "setContextTransform",
        "context",
        "context",
        "vp",
        "vp",
        "vp",
        "vp",
        "pixelRatio",
        "vp",
        "vp",
        "pixelRatio",
        "context",
        "texture",
        "vp",
        "vp",
        "vp",
        "vp",
        "pixelRatio",
        "vp",
        "vp",
        "pixelRatio",
        "r",
        "forcedContext",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "vpManip",
        "r",
        "vpManip",
        "needDraw",
        "CanvasRenderer",
        "needDraw",
        "CanvasRenderer",
        "drawAllLayers",
        "drawOnlyNodeLayer",
        "hideEdges",
        "r",
        "edges",
        "r",
        "cy",
        "i",
        "zEles",
        "i",
        "zEles",
        "i",
        "forcedContext",
        "ele",
        "forcedContext",
        "$$",
        "extent",
        "bb",
        "insideExtent",
        "ele",
        "eles",
        "eles",
        "ele",
        "context",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "ele",
        "r",
        "context",
        "ele",
        "hideLabels",
        "r",
        "context",
        "ele",
        "r",
        "context",
        "ele",
        "hideEdges",
        "r",
        "context",
        "ele",
        "hideLabels",
        "r",
        "context",
        "ele",
        "r",
        "context",
        "ele",
        "needDraw",
        "CanvasRenderer",
        "needDraw",
        "CanvasRenderer",
        "motionBlur",
        "r",
        "nodeLayerNeedsMotionClear",
        "r",
        "needDraw",
        "CanvasRenderer",
        "drawAllLayers",
        "drawOnlyNodeLayer",
        "nodeLayerNeedsMotionClear",
        "forcedContext",
        "data",
        "CanvasRenderer",
        "setContextTransform",
        "context",
        "motionBlur",
        "nodeLayerNeedsMotionClear",
        "drawElements",
        "eles",
        "context",
        "drawAllLayers",
        "needDraw",
        "CanvasRenderer",
        "drawOnlyNodeLayer",
        "needDraw",
        "CanvasRenderer",
        "drawAllLayers",
        "forcedContext",
        "data",
        "CanvasRenderer",
        "setContextTransform",
        "context",
        "motionBlur",
        "drawElements",
        "eles",
        "context",
        "drawAllLayers",
        "needDraw",
        "CanvasRenderer",
        "r",
        "drawOnlyNodeLayer",
        "needDraw",
        "CanvasRenderer",
        "drawAllLayers",
        "forcedContext",
        "data",
        "CanvasRenderer",
        "setContextTransform",
        "context",
        "data",
        "r",
        "data",
        "coreStyle",
        "zoom",
        "context",
        "borderWidth",
        "context",
        "coreStyle",
        "coreStyle",
        "coreStyle",
        "coreStyle",
        "context",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "borderWidth",
        "context",
        "coreStyle",
        "coreStyle",
        "coreStyle",
        "coreStyle",
        "context",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "r",
        "data",
        "data",
        "context",
        "coreStyle",
        "coreStyle",
        "coreStyle",
        "coreStyle",
        "context",
        "context",
        "pos",
        "pos",
        "coreStyle",
        "zoom",
        "context",
        "r",
        "r",
        "timeToRender",
        "timeToRender",
        "timeToRender",
        "timeToRender",
        "context",
        "context",
        "context",
        "context",
        "context",
        "timeToRender",
        "fps",
        "context",
        "context",
        "fps",
        "maxFps",
        "drawAllLayers",
        "needDraw",
        "CanvasRenderer",
        "r",
        "r",
        "endTime",
        "startTime",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "endTime",
        "startTime",
        "r",
        "endTime",
        "startTime",
        "r",
        "r",
        "endTime",
        "startTime",
        "r",
        "r",
        "r",
        "r",
        "r",
        "motionBlur",
        "r",
        "setTimeout",
        "r",
        "r",
        "r",
        "r",
        "needDraw",
        "CanvasRenderer",
        "needDraw",
        "CanvasRenderer",
        "r",
        "CanvasRenderer",
        "forcedContext",
        "$$",
        "drawToContext",
        "drawToContext",
        "forcedContext",
        "r",
        "r",
        "cy",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "context",
        "x",
        "y",
        "width",
        "height",
        "points",
        "width",
        "height",
        "context",
        "context",
        "context",
        "x",
        "halfW",
        "points",
        "y",
        "halfH",
        "points",
        "i",
        "points",
        "i",
        "context",
        "x",
        "halfW",
        "points",
        "i",
        "y",
        "halfH",
        "points",
        "i",
        "context",
        "CanvasRenderer",
        "context",
        "x",
        "y",
        "width",
        "height",
        "points",
        "context",
        "x",
        "y",
        "width",
        "height",
        "points",
        "context",
        "CanvasRenderer",
        "context",
        "x",
        "y",
        "width",
        "height",
        "radius",
        "width",
        "height",
        "$$",
        "width",
        "height",
        "context",
        "context",
        "context",
        "x",
        "y",
        "halfHeight",
        "context",
        "x",
        "halfWidth",
        "y",
        "halfHeight",
        "x",
        "halfWidth",
        "y",
        "cornerRadius",
        "context",
        "x",
        "halfWidth",
        "y",
        "halfHeight",
        "x",
        "y",
        "halfHeight",
        "cornerRadius",
        "context",
        "x",
        "halfWidth",
        "y",
        "halfHeight",
        "x",
        "halfWidth",
        "y",
        "cornerRadius",
        "context",
        "x",
        "halfWidth",
        "y",
        "halfHeight",
        "x",
        "y",
        "halfHeight",
        "cornerRadius",
        "context",
        "x",
        "y",
        "halfHeight",
        "context",
        "CanvasRenderer",
        "context",
        "x",
        "y",
        "width",
        "height",
        "radius",
        "context",
        "x",
        "y",
        "width",
        "height",
        "radius",
        "context",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "w",
        "h",
        "buffer",
        "w",
        "buffer",
        "h",
        "buffer",
        "buffer",
        "CanvasRenderer",
        "options",
        "data",
        "cy",
        "options",
        "bb",
        "options",
        "bb",
        "options",
        "width",
        "options",
        "height",
        "options",
        "scale",
        "options",
        "buffCanvas",
        "width",
        "buffCanvas",
        "height",
        "buffCanvas",
        "width",
        "buffCanvas",
        "height",
        "buffCanvas",
        "width",
        "height",
        "buffCxt",
        "width",
        "height",
        "options",
        "buffCxt",
        "options",
        "buffCxt",
        "width",
        "height",
        "buffCxt",
        "buffCxt",
        "options",
        "buffCxt",
        "scale",
        "bb",
        "scale",
        "bb",
        "scale",
        "cy",
        "cyPan",
        "scale",
        "cyPan",
        "scale",
        "cy",
        "scale",
        "buffCxt",
        "zoom",
        "pan",
        "buffCanvas",
        "CanvasRenderer",
        "options",
        "options",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "target",
        "handler",
        "useCapture",
        "target",
        "handler",
        "useCapture",
        "target",
        "handler",
        "useCapture",
        "CanvasRenderer",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "CanvasRenderer",
        "opts",
        "opts",
        "r",
        "opts",
        "opts",
        "i",
        "opts",
        "i",
        "opts",
        "i",
        "opts",
        "ele",
        "listHasId",
        "opts",
        "listHasId",
        "node",
        "opts",
        "node",
        "getDragListIds",
        "opts",
        "node",
        "i",
        "innerNodes",
        "i",
        "innerNodes",
        "i",
        "iNode",
        "opts",
        "_p",
        "opts",
        "listHasId",
        "iNode",
        "opts",
        "iNode",
        "listHasId",
        "iNode",
        "_p",
        "_p",
        "opts",
        "j",
        "edges",
        "j",
        "edges",
        "j",
        "node",
        "opts",
        "node",
        "getDragListIds",
        "opts",
        "opts",
        "_p",
        "opts",
        "listHasId",
        "node",
        "opts",
        "node",
        "listHasId",
        "node",
        "_p",
        "_p",
        "opts",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "addDescendantsToDrag",
        "node",
        "opts",
        "updateAncestorsInDragLayer",
        "node",
        "node",
        "opts",
        "node",
        "parent",
        "parent",
        "parent",
        "parent",
        "node",
        "parent",
        "parent",
        "node",
        "node",
        "nodes",
        "getDragListIds",
        "opts",
        "i",
        "nodes",
        "i",
        "opts",
        "nodes",
        "i",
        "opts",
        "opts",
        "listHasId",
        "nodes",
        "i",
        "opts",
        "nodes",
        "i",
        "listHasId",
        "nodes",
        "i",
        "nodes",
        "i",
        "opts",
        "j",
        "edges",
        "j",
        "edges",
        "j",
        "opts",
        "MutationObserver",
        "r",
        "MutationObserver",
        "mutns",
        "i",
        "mutns",
        "i",
        "mutns",
        "i",
        "mutn",
        "rNodes",
        "j",
        "rNodes",
        "j",
        "rNodes",
        "j",
        "rNode",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "e",
        "r",
        "r",
        "$$",
        "e",
        "r",
        "r",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "domEle",
        "r",
        "domEle",
        "e",
        "r",
        "r",
        "invalCtnrBBOnScroll",
        "bbCtnr",
        "bbCtnr",
        "bbCtnr",
        "bbCtnr",
        "r",
        "r",
        "e",
        "e",
        "r",
        "r",
        "r",
        "e",
        "e",
        "r",
        "r",
        "e",
        "r",
        "r",
        "e",
        "e",
        "r",
        "r",
        "pos",
        "pos",
        "r",
        "r",
        "pos",
        "r",
        "clearTimeout",
        "r",
        "r",
        "setTimeout",
        "r",
        "r",
        "ele",
        "ele",
        "$$",
        "e",
        "pos",
        "pos",
        "cy",
        "$$",
        "e",
        "pos",
        "pos",
        "r",
        "e",
        "r",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "near",
        "near",
        "cxtEvt",
        "r",
        "near",
        "cy",
        "cxtEvt",
        "r",
        "r",
        "e",
        "near",
        "near",
        "near",
        "r",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "near",
        "draggedElements",
        "r",
        "addNodeToDrag",
        "near",
        "draggedElements",
        "near",
        "grabEvent",
        "near",
        "near",
        "draggedElements",
        "r",
        "cy",
        "i",
        "selectedNodes",
        "i",
        "r",
        "selectedNodes",
        "i",
        "addNodeToDrag",
        "selectedNodes",
        "i",
        "draggedElements",
        "near",
        "grabEvent",
        "r",
        "CanvasRenderer",
        "r",
        "CanvasRenderer",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "cy",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "r",
        "near",
        "r",
        "near",
        "near",
        "select",
        "CanvasRenderer",
        "r",
        "clearTimeout",
        "r",
        "cy",
        "near",
        "near",
        "r",
        "setTimeout",
        "near",
        "near",
        "r",
        "pos",
        "pos",
        "checkForTaphold",
        "r",
        "CanvasRenderer",
        "r",
        "timeUntilActive",
        "r",
        "pos",
        "pos",
        "checkForTaphold",
        "r",
        "CanvasRenderer",
        "r",
        "select",
        "select",
        "pos",
        "select",
        "select",
        "pos",
        "r",
        "$$",
        "e",
        "r",
        "capture",
        "r",
        "e",
        "containerPageCoords",
        "e",
        "containerPageCoords",
        "r",
        "e",
        "containerPageCoords",
        "e",
        "containerPageCoords",
        "r",
        "r",
        "e",
        "target",
        "tParent",
        "tParent",
        "cyContainer",
        "containerIsTarget",
        "tParent",
        "tParent",
        "containerIsTarget",
        "r",
        "cy",
        "cy",
        "r",
        "e",
        "e",
        "r",
        "r",
        "near",
        "r",
        "pos",
        "pos",
        "r",
        "r",
        "pos",
        "select",
        "pos",
        "select",
        "r",
        "select",
        "select",
        "dx",
        "dx",
        "select",
        "select",
        "dy",
        "dy",
        "dx2",
        "dy2",
        "dist2",
        "zoom",
        "zoom",
        "r",
        "r",
        "r",
        "dragDelta",
        "dragDelta",
        "dragDelta",
        "dragDelta",
        "disp",
        "dragDelta",
        "disp",
        "preventDefault",
        "near",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "cy",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "r",
        "$$",
        "e",
        "pos",
        "pos",
        "down",
        "down",
        "cxtEvt",
        "cy",
        "cxtEvt",
        "r",
        "r",
        "near",
        "r",
        "r",
        "r",
        "$$",
        "e",
        "pos",
        "pos",
        "r",
        "near",
        "near",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "r",
        "preventDefault",
        "cy",
        "cy",
        "r",
        "r",
        "deltaP",
        "pos",
        "mdPos",
        "zoom",
        "pos",
        "mdPos",
        "zoom",
        "r",
        "deltaP",
        "disp",
        "zoom",
        "disp",
        "zoom",
        "cy",
        "deltaP",
        "pos",
        "r",
        "e",
        "e",
        "select",
        "down",
        "down",
        "cy",
        "r",
        "CanvasRenderer",
        "r",
        "rdist2",
        "r",
        "cy",
        "cy",
        "r",
        "r",
        "r",
        "select",
        "cy",
        "select",
        "select",
        "select",
        "select",
        "select",
        "clearTimeout",
        "r",
        "r",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "down",
        "down",
        "down",
        "down",
        "near",
        "last",
        "last",
        "last",
        "$$",
        "e",
        "pos",
        "pos",
        "last",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "r",
        "near",
        "down",
        "down",
        "r",
        "down",
        "rdist2",
        "r",
        "r",
        "justStartedDrag",
        "r",
        "CanvasRenderer",
        "r",
        "i",
        "draggedElements",
        "i",
        "draggedElements",
        "i",
        "r",
        "addNodeToDrag",
        "dEle",
        "dEle",
        "r",
        "dEle",
        "dEle",
        "dEle",
        "toTrigger",
        "dEle",
        "$$",
        "disp",
        "$$",
        "disp",
        "dPos",
        "disp",
        "dPos",
        "disp",
        "justStartedDrag",
        "r",
        "$$",
        "dragDelta",
        "$$",
        "dragDelta",
        "dPos",
        "dragDelta",
        "dPos",
        "dragDelta",
        "r",
        "$$",
        "cy",
        "toTrigger",
        "tcol",
        "tcol",
        "r",
        "CanvasRenderer",
        "r",
        "updateDragDelta",
        "preventDefault",
        "select",
        "pos",
        "select",
        "pos",
        "preventDefault",
        "e",
        "e",
        "e",
        "e",
        "r",
        "e",
        "r",
        "capture",
        "r",
        "r",
        "r",
        "e",
        "e",
        "r",
        "r",
        "pos",
        "pos",
        "r",
        "r",
        "e",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "r",
        "clearTimeout",
        "r",
        "r",
        "r",
        "r",
        "down",
        "down",
        "r",
        "$$",
        "e",
        "pos",
        "pos",
        "down",
        "down",
        "cxtEvt",
        "cy",
        "cxtEvt",
        "r",
        "$$",
        "e",
        "pos",
        "pos",
        "down",
        "down",
        "cxtTap",
        "cy",
        "cxtTap",
        "r",
        "r",
        "down",
        "r",
        "select",
        "select",
        "select",
        "select",
        "select",
        "r",
        "cy",
        "draggedElements",
        "r",
        "CanvasRenderer",
        "r",
        "draggedElements",
        "near",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "cy",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "select",
        "select",
        "select",
        "select",
        "near",
        "near",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "cy",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "$$",
        "e",
        "pos",
        "pos",
        "near",
        "down",
        "r",
        "near",
        "near",
        "r",
        "cy",
        "shiftDown",
        "near",
        "near",
        "near",
        "shiftDown",
        "cy",
        "near",
        "near",
        "r",
        "CanvasRenderer",
        "cy",
        "select",
        "select",
        "select",
        "select",
        "select",
        "r",
        "select",
        "select",
        "select",
        "select",
        "r",
        "CanvasRenderer",
        "box",
        "r",
        "CanvasRenderer",
        "i",
        "box",
        "i",
        "box",
        "i",
        "newlySelected",
        "box",
        "i",
        "$$",
        "cy",
        "newlySelected",
        "cy",
        "newlySelCol",
        "shiftDown",
        "cy",
        "newlySelCol",
        "newlySelCol",
        "r",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "r",
        "select",
        "r",
        "CanvasRenderer",
        "r",
        "CanvasRenderer",
        "i",
        "draggedElements",
        "i",
        "draggedElements",
        "i",
        "draggedElements",
        "i",
        "draggedElements",
        "i",
        "draggedElements",
        "i",
        "j",
        "sEdges",
        "j",
        "sEdges",
        "j",
        "updateAncestorsInDragLayer",
        "draggedElements",
        "i",
        "draggedElements",
        "i",
        "draggedElements",
        "i",
        "down",
        "down",
        "select",
        "r",
        "r",
        "r",
        "e",
        "r",
        "r",
        "r",
        "e",
        "e",
        "pos",
        "cy",
        "cy",
        "pos",
        "cy",
        "cy",
        "r",
        "r",
        "r",
        "inBoxSelection",
        "e",
        "cy",
        "cy",
        "cy",
        "cy",
        "e",
        "r",
        "clearTimeout",
        "r",
        "r",
        "setTimeout",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "e",
        "e",
        "e",
        "diff",
        "diff",
        "r",
        "e",
        "needsWheelFix",
        "diff",
        "cy",
        "cy",
        "diff",
        "rpos",
        "rpos",
        "r",
        "r",
        "wheelHandler",
        "r",
        "e",
        "r",
        "clearTimeout",
        "r",
        "r",
        "setTimeout",
        "r",
        "r",
        "r",
        "e",
        "r",
        "e",
        "e",
        "r",
        "$$",
        "e",
        "pos",
        "pos",
        "r",
        "r",
        "e",
        "r",
        "e",
        "e",
        "r",
        "$$",
        "e",
        "pos",
        "pos",
        "x1",
        "y1",
        "x2",
        "y2",
        "x2",
        "x1",
        "x2",
        "x1",
        "y2",
        "y1",
        "y2",
        "y1",
        "x1",
        "y1",
        "x2",
        "y2",
        "x2",
        "x1",
        "x2",
        "x1",
        "y2",
        "y1",
        "y2",
        "y1",
        "r",
        "r",
        "e",
        "clearTimeout",
        "e",
        "r",
        "e",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "eles",
        "i",
        "release",
        "nodes",
        "release",
        "edges",
        "r",
        "offsetLeft",
        "offsets",
        "offsetTop",
        "offsets",
        "containerWidth",
        "offsets",
        "containerHeight",
        "offsets",
        "f1x1",
        "e",
        "offsetLeft",
        "f1y1",
        "e",
        "offsetTop",
        "f2x1",
        "e",
        "offsetLeft",
        "f2y1",
        "e",
        "offsetTop",
        "twoFingersStartInside",
        "f1x1",
        "f1x1",
        "containerWidth",
        "f2x1",
        "f2x1",
        "containerWidth",
        "f1y1",
        "f1y1",
        "containerHeight",
        "f2y1",
        "f2y1",
        "containerHeight",
        "cy",
        "cy",
        "distance1",
        "distance",
        "f1x1",
        "f1y1",
        "f2x1",
        "f2y1",
        "distance1Sq",
        "distanceSq",
        "f1x1",
        "f1y1",
        "f2x1",
        "f2y1",
        "center1",
        "f1x1",
        "f2x1",
        "f1y1",
        "f2y1",
        "modelCenter1",
        "center1",
        "pan",
        "zoom",
        "center1",
        "pan",
        "zoom",
        "cxtDistThreshold",
        "cxtDistThreshold",
        "distance1Sq",
        "cxtDistThresholdSq",
        "e",
        "r",
        "now",
        "now",
        "r",
        "now",
        "now",
        "near1",
        "near1",
        "near1",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "near1",
        "near2",
        "near2",
        "near2",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "near2",
        "cy",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "e",
        "e",
        "e",
        "r",
        "now",
        "now",
        "near",
        "near",
        "r",
        "near",
        "near",
        "r",
        "near",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "CanvasRenderer",
        "near",
        "cy",
        "k",
        "selectedNodes",
        "k",
        "selectedNodes",
        "k",
        "r",
        "selectedNode",
        "addNodeToDrag",
        "selectedNode",
        "draggedEles",
        "addNodeToDrag",
        "near",
        "draggedEles",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "cy",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "pos",
        "pos",
        "r",
        "CanvasRenderer",
        "r",
        "i",
        "now",
        "i",
        "earlier",
        "i",
        "now",
        "i",
        "r",
        "i",
        "now",
        "i",
        "r",
        "r",
        "clearTimeout",
        "r",
        "r",
        "setTimeout",
        "r",
        "r",
        "r",
        "r",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "$$",
        "e",
        "now",
        "now",
        "cy",
        "r",
        "r",
        "$$",
        "e",
        "r",
        "r",
        "capture",
        "e",
        "r",
        "r",
        "r",
        "cy",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "j",
        "now",
        "j",
        "disp",
        "j",
        "now",
        "j",
        "earlier",
        "j",
        "r",
        "now",
        "startPos",
        "dx",
        "dx",
        "now",
        "startPos",
        "dy",
        "dy",
        "dx2",
        "dy2",
        "dist2",
        "zoom",
        "zoom",
        "capture",
        "r",
        "e",
        "offsetLeft",
        "e",
        "offsetTop",
        "e",
        "offsetLeft",
        "e",
        "offsetTop",
        "distanceSq",
        "f1x2",
        "f1y2",
        "f2x2",
        "f2y2",
        "distance2Sq",
        "distance1Sq",
        "distThreshold",
        "distThreshold",
        "factorThreshold",
        "factorThreshold",
        "factorSq",
        "factorThresholdSq",
        "distance2Sq",
        "distThresholdSq",
        "r",
        "r",
        "r",
        "r",
        "r",
        "r",
        "CanvasRenderer",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "r",
        "cxtEvt",
        "cy",
        "cxtEvt",
        "capture",
        "r",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "r",
        "cxtEvt",
        "cy",
        "cxtEvt",
        "r",
        "r",
        "r",
        "r",
        "now",
        "now",
        "r",
        "near",
        "r",
        "r",
        "r",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "near",
        "near",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "capture",
        "e",
        "cy",
        "r",
        "clearTimeout",
        "r",
        "CanvasRenderer",
        "select",
        "select",
        "select",
        "select",
        "now",
        "now",
        "now",
        "select",
        "now",
        "now",
        "now",
        "select",
        "now",
        "now",
        "now",
        "select",
        "now",
        "now",
        "now",
        "select",
        "now",
        "now",
        "now",
        "select",
        "now",
        "now",
        "now",
        "select",
        "r",
        "capture",
        "e",
        "cy",
        "cy",
        "cy",
        "cy",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "draggedEles",
        "r",
        "CanvasRenderer",
        "i",
        "draggedEles",
        "i",
        "draggedEles",
        "i",
        "draggedEles",
        "i",
        "e",
        "offsetLeft",
        "e",
        "offsetTop",
        "e",
        "offsetLeft",
        "e",
        "offsetTop",
        "distance",
        "f1x2",
        "f1y2",
        "f2x2",
        "f2y2",
        "distance2",
        "distance1",
        "factor",
        "twoFingersStartInside",
        "f1x2",
        "f1x1",
        "f1y2",
        "f1y1",
        "f2x2",
        "f2x1",
        "f2y2",
        "f2y1",
        "df1x",
        "df2x",
        "df1y",
        "df2y",
        "cy",
        "zoom1",
        "factor",
        "cy",
        "modelCenter1",
        "zoom1",
        "pan1",
        "modelCenter1",
        "zoom1",
        "pan1",
        "zoom2",
        "zoom1",
        "ctrx",
        "pan1",
        "tx",
        "ctrx",
        "zoom2",
        "zoom1",
        "ctry",
        "pan1",
        "ty",
        "ctry",
        "r",
        "r",
        "draggedEles",
        "i",
        "draggedEles",
        "i",
        "draggedEles",
        "i",
        "draggedEles",
        "i",
        "r",
        "r",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "cy",
        "zoom2",
        "pan2",
        "distance1",
        "distance2",
        "f1x1",
        "f1x2",
        "f1y1",
        "f1y2",
        "f2x1",
        "f2x2",
        "f2y1",
        "f2y2",
        "r",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "r",
        "near",
        "r",
        "now",
        "now",
        "start",
        "start",
        "r",
        "start",
        "rdist2",
        "r",
        "r",
        "k",
        "draggedEles",
        "k",
        "draggedEles",
        "k",
        "r",
        "draggedEle",
        "draggedEle",
        "draggedEle",
        "r",
        "draggedEle",
        "r",
        "$$",
        "disp",
        "$$",
        "disp",
        "dPos",
        "disp",
        "dPos",
        "disp",
        "justStartedDrag",
        "addNodeToDrag",
        "draggedEle",
        "r",
        "$$",
        "dragDelta",
        "$$",
        "dragDelta",
        "dPos",
        "dragDelta",
        "dPos",
        "dragDelta",
        "$$",
        "cy",
        "draggedEle",
        "tcol",
        "tcol",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "earlier",
        "r",
        "earlier",
        "r",
        "CanvasRenderer",
        "r",
        "r",
        "r",
        "dragDelta",
        "dragDelta",
        "dragDelta",
        "dragDelta",
        "disp",
        "dragDelta",
        "disp",
        "start",
        "start",
        "$$",
        "e",
        "now",
        "now",
        "start",
        "$$",
        "e",
        "now",
        "now",
        "start",
        "$$",
        "e",
        "now",
        "now",
        "start",
        "near",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "cy",
        "$$",
        "e",
        "now",
        "now",
        "cy",
        "$$",
        "e",
        "now",
        "now",
        "cy",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "last",
        "last",
        "last",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "near",
        "i",
        "now",
        "i",
        "now",
        "i",
        "r",
        "i",
        "now",
        "i",
        "r",
        "i",
        "r",
        "capture",
        "start",
        "start",
        "cy",
        "cy",
        "r",
        "cy",
        "disp",
        "zoom",
        "disp",
        "zoom",
        "rdist2",
        "r",
        "r",
        "cy",
        "dx",
        "zoom",
        "dy",
        "zoom",
        "start",
        "start",
        "r",
        "r",
        "now",
        "now",
        "r",
        "CanvasRenderer",
        "r",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "j",
        "now",
        "j",
        "earlier",
        "j",
        "now",
        "j",
        "r",
        "e",
        "r",
        "r",
        "start",
        "start",
        "r",
        "e",
        "r",
        "r",
        "capture",
        "r",
        "e",
        "r",
        "r",
        "r",
        "r",
        "cy",
        "r",
        "r",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "e",
        "r",
        "e",
        "e",
        "now",
        "pos",
        "now",
        "pos",
        "start",
        "start",
        "r",
        "ctxTapend",
        "$$",
        "e",
        "now",
        "now",
        "start",
        "start",
        "ctxTapend",
        "cy",
        "ctxTapend",
        "r",
        "$$",
        "e",
        "now",
        "now",
        "start",
        "start",
        "ctxTap",
        "cy",
        "ctxTap",
        "r",
        "r",
        "r",
        "r",
        "r",
        "e",
        "cy",
        "clearTimeout",
        "r",
        "select",
        "select",
        "select",
        "select",
        "select",
        "select",
        "select",
        "select",
        "select",
        "r",
        "CanvasRenderer",
        "i",
        "box",
        "i",
        "box",
        "i",
        "newlySelected",
        "box",
        "i",
        "$$",
        "cy",
        "newlySelected",
        "cy",
        "cy",
        "newlySelCol",
        "newlySelCol",
        "newlySelCol",
        "r",
        "CanvasRenderer",
        "r",
        "start",
        "start",
        "updateStartStyle",
        "start",
        "e",
        "r",
        "r",
        "CanvasRenderer",
        "e",
        "e",
        "e",
        "r",
        "r",
        "CanvasRenderer",
        "start",
        "start",
        "start",
        "start",
        "start",
        "start",
        "j",
        "sEdges",
        "j",
        "sEdges",
        "j",
        "updateAncestorsInDragLayer",
        "start",
        "start",
        "cy",
        "k",
        "selectedNodes",
        "k",
        "selectedNodes",
        "k",
        "selectedNode",
        "selectedNode",
        "selectedNode",
        "j",
        "sEdges",
        "j",
        "sEdges",
        "j",
        "updateAncestorsInDragLayer",
        "selectedNode",
        "r",
        "CanvasRenderer",
        "r",
        "CanvasRenderer",
        "start",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "start",
        "r",
        "r",
        "now",
        "now",
        "near",
        "near",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "near",
        "cy",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "now",
        "dx",
        "dx",
        "r",
        "now",
        "dy",
        "dy",
        "dx2",
        "dy2",
        "dist2",
        "zoom",
        "zoom",
        "start",
        "r",
        "start",
        "rdist2",
        "r",
        "r",
        "cy",
        "cy",
        "start",
        "start",
        "start",
        "start",
        "start",
        "updateStartStyle",
        "r",
        "CanvasRenderer",
        "r",
        "start",
        "start",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "cy",
        "$$",
        "e",
        "now",
        "now",
        "$$",
        "e",
        "now",
        "now",
        "r",
        "j",
        "now",
        "j",
        "earlier",
        "j",
        "now",
        "j",
        "r",
        "e",
        "r",
        "updateStartStyle",
        "start",
        "start",
        "e",
        "r",
        "r",
        "CanvasRenderer",
        "r",
        "cytoscape",
        "$$",
        "$$",
        "CanvasRenderer",
        "CanvasRenderer",
        "CanvasRenderer",
        "i",
        "i",
        "ellipseStepSize",
        "sin",
        "i",
        "i",
        "cos",
        "i",
        "i",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "context",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "usePaths",
        "context",
        "context",
        "width",
        "height",
        "i",
        "i",
        "ellipseStepSize",
        "xPos",
        "centerX",
        "rw",
        "sin",
        "i",
        "sin0",
        "rw",
        "cos",
        "i",
        "cos0",
        "yPos",
        "centerY",
        "rh",
        "cos",
        "i",
        "sin0",
        "rh",
        "sin",
        "i",
        "cos0",
        "i",
        "context",
        "xPos",
        "yPos",
        "context",
        "xPos",
        "yPos",
        "context",
        "context",
        "context",
        "context",
        "centerX",
        "centerY",
        "context",
        "width",
        "height",
        "context",
        "context",
        "context",
        "width",
        "height",
        "context",
        "centerX",
        "centerY",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "$$",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "width",
        "padding",
        "height",
        "padding",
        "intersect",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "x",
        "centerX",
        "y",
        "centerY",
        "x",
        "width",
        "padding",
        "y",
        "height",
        "padding",
        "x",
        "y",
        "nodeShapes",
        "$$",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "nodeShapes",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "points",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "nodeShapes",
        "$$",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "nodeShapes",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "points",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "nodeShapes",
        "nodeShapes",
        "nodeShapes",
        "nodeShapes",
        "$$",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "$$",
        "x",
        "y",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "width",
        "height",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "cornerRadius",
        "padding",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "cornerRadius",
        "height",
        "padding",
        "x",
        "y",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "x",
        "centerX",
        "y",
        "centerY",
        "x",
        "width",
        "padding",
        "y",
        "height",
        "padding",
        "x",
        "y",
        "checkInEllipse",
        "x",
        "y",
        "centerX",
        "width",
        "cornerRadius",
        "centerY",
        "height",
        "cornerRadius",
        "cornerRadius",
        "cornerRadius",
        "padding",
        "checkInEllipse",
        "x",
        "y",
        "centerX",
        "width",
        "cornerRadius",
        "centerY",
        "height",
        "cornerRadius",
        "cornerRadius",
        "cornerRadius",
        "padding",
        "checkInEllipse",
        "x",
        "y",
        "centerX",
        "width",
        "cornerRadius",
        "centerY",
        "height",
        "cornerRadius",
        "cornerRadius",
        "cornerRadius",
        "padding",
        "checkInEllipse",
        "x",
        "y",
        "centerX",
        "width",
        "cornerRadius",
        "centerY",
        "height",
        "cornerRadius",
        "cornerRadius",
        "cornerRadius",
        "padding",
        "nodeShapes",
        "$$",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "renderer",
        "x",
        "y",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "nodeShapes",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "points",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "nodeShapes",
        "$$",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "nodeShapes",
        "$$",
        "x1",
        "y1",
        "x2",
        "y2",
        "points",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "nodeShapes",
        "$$",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "renderer",
        "x",
        "y",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "nodeShapes",
        "renderer",
        "x1",
        "y1",
        "x2",
        "y2",
        "points",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "nodeShapes",
        "$$",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "renderer",
        "x",
        "y",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "nodeShapes",
        "renderer",
        "x1",
        "y1",
        "x2",
        "y2",
        "points",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "$$",
        "$$",
        "innerRadius",
        "i",
        "innerPoints",
        "i",
        "innerPoints",
        "i",
        "innerRadius",
        "innerPoints",
        "i",
        "innerRadius",
        "i",
        "i",
        "star5Points",
        "i",
        "outerPoints",
        "i",
        "star5Points",
        "i",
        "outerPoints",
        "i",
        "star5Points",
        "i",
        "innerPoints",
        "i",
        "star5Points",
        "i",
        "innerPoints",
        "i",
        "star5Points",
        "$$",
        "star5Points",
        "nodeShapes",
        "nodeShapes",
        "star5Points",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "renderer",
        "context",
        "centerX",
        "centerY",
        "width",
        "height",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "x",
        "y",
        "padding",
        "renderer",
        "x",
        "y",
        "nodeShapes",
        "nodeX",
        "nodeY",
        "width",
        "height",
        "padding",
        "x1",
        "y1",
        "x2",
        "y2",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "nodeShapes",
        "renderer",
        "x1",
        "y1",
        "x2",
        "y2",
        "points",
        "width",
        "height",
        "centerX",
        "centerY",
        "padding",
        "x",
        "y",
        "padding",
        "width",
        "height",
        "centerX",
        "centerY",
        "$$",
        "x",
        "y",
        "nodeShapes",
        "centerX",
        "centerY",
        "width",
        "height",
        "padding",
        "cytoscape",
        "$$",
        "energy",
        "e",
        "e",
        "options",
        "$$",
        "defaults",
        "options",
        "ArborLayout",
        "$$",
        "arbor",
        "options",
        "options",
        "eles",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "layout",
        "layout",
        "options",
        "options",
        "options",
        "cy",
        "options",
        "cy",
        "cy",
        "bb",
        "bb",
        "bb",
        "bb",
        "layout",
        "options",
        "layout",
        "layout",
        "layout",
        "options",
        "layout",
        "layout",
        "layout",
        "arbor",
        "sys",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "cy",
        "bb",
        "options",
        "system",
        "sys",
        "options",
        "options",
        "energy",
        "energy",
        "options",
        "energy",
        "layout",
        "options",
        "doneTime",
        "Infinity",
        "clearTimeout",
        "doneTimeout",
        "doneTimeout",
        "setTimeout",
        "doneHandler",
        "doneTime",
        "cy",
        "sys",
        "n",
        "point",
        "n",
        "data",
        "node",
        "node",
        "node",
        "node",
        "bb",
        "point",
        "bb",
        "point",
        "movedNodes",
        "node",
        "options",
        "movedNodes",
        "simUpdatingPos",
        "movedNodes",
        "options",
        "cy",
        "options",
        "lastDraw",
        "simUpdatingPos",
        "ready",
        "ready",
        "layout",
        "options",
        "layout",
        "layout",
        "sys",
        "sysRenderer",
        "sys",
        "bb",
        "bb",
        "sys",
        "options",
        "options",
        "options",
        "options",
        "sys",
        "options",
        "element",
        "value",
        "value",
        "value",
        "value",
        "element",
        "element",
        "nodes",
        "edges",
        "element",
        "value",
        "nodes",
        "grabHandler",
        "e",
        "simUpdatingPos",
        "sys",
        "pos",
        "apos",
        "arbor",
        "apos",
        "apos",
        "options",
        "bb",
        "padding",
        "pos",
        "pos",
        "bb",
        "padding",
        "bb",
        "padding",
        "pos",
        "pos",
        "bb",
        "padding",
        "p",
        "e",
        "nodes",
        "lockHandler",
        "e",
        "node",
        "node",
        "eles",
        "removeHandler",
        "e",
        "cy",
        "addHandler",
        "cy",
        "resizeHandler",
        "options",
        "layout",
        "cy",
        "cy",
        "sys",
        "w",
        "h",
        "node",
        "node",
        "node",
        "calculateValueForElement",
        "node",
        "options",
        "node",
        "node",
        "sys",
        "nPos",
        "nPos",
        "node",
        "sys",
        "id",
        "node",
        "mass",
        "locked",
        "locked",
        "pos",
        "locked",
        "pos",
        "edge",
        "edge",
        "edge",
        "calculateValueForElement",
        "edge",
        "options",
        "edge",
        "sys",
        "src",
        "tgt",
        "length",
        "nodes",
        "i",
        "node",
        "addNode",
        "node",
        "edges",
        "i",
        "edge",
        "addEdge",
        "edge",
        "nodes",
        "options",
        "grabbableNodes",
        "layout",
        "layout",
        "options",
        "options",
        "cy",
        "nodes",
        "nodes",
        "grabHandler",
        "nodes",
        "lockHandler",
        "eles",
        "removeHandler",
        "cy",
        "addHandler",
        "cy",
        "resizeHandler",
        "options",
        "grabbableNodes",
        "layout",
        "options",
        "layout",
        "layout",
        "sys",
        "options",
        "options",
        "options",
        "options",
        "Infinity",
        "setTimeout",
        "layout",
        "options",
        "ArborLayout",
        "$$",
        "ArborLayout",
        "cytoscape",
        "$$",
        "options",
        "$$",
        "defaults",
        "options",
        "BreadthFirstLayout",
        "options",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "$$",
        "options",
        "roots",
        "options",
        "$$",
        "options",
        "i",
        "options",
        "i",
        "options",
        "i",
        "cy",
        "id",
        "rootsArray",
        "ele",
        "roots",
        "$$",
        "cy",
        "rootsArray",
        "$$",
        "options",
        "roots",
        "cy",
        "options",
        "options",
        "roots",
        "nodes",
        "unhandledNodes",
        "cy",
        "eles",
        "unhandledNodes",
        "i",
        "depth",
        "node",
        "edge",
        "pNode",
        "currComp",
        "currComp",
        "node",
        "unhandledNodes",
        "unhandledNodes",
        "currComp",
        "components",
        "currComp",
        "roots",
        "cy",
        "i",
        "components",
        "i",
        "components",
        "i",
        "comp",
        "comp",
        "maxDegree",
        "roots",
        "roots",
        "compRoots",
        "graph",
        "roots",
        "options",
        "i",
        "depth",
        "node",
        "edge",
        "pNode",
        "ele",
        "depths",
        "depth",
        "depths",
        "depth",
        "depths",
        "depth",
        "ele",
        "foundByBfs",
        "id",
        "id2depth",
        "id",
        "depth",
        "prevNode",
        "id",
        "pNode",
        "prevEdge",
        "id",
        "edge",
        "pNode",
        "pNode",
        "successors",
        "prevId",
        "successors",
        "prevId",
        "succ",
        "node",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "foundByBfs",
        "ele",
        "orphanNodes",
        "ele",
        "orphanNodes",
        "orphanNodes",
        "checks",
        "maxChecks",
        "orphanNodes",
        "node",
        "i",
        "neighbors",
        "i",
        "id2depth",
        "neighbors",
        "i",
        "depth",
        "depths",
        "depth",
        "node",
        "assignedDepth",
        "assignedDepth",
        "orphanNodes",
        "node",
        "checks",
        "orphanNodes",
        "orphanNodes",
        "assignedDepth",
        "depths",
        "depths",
        "depths",
        "node",
        "i",
        "depths",
        "i",
        "depths",
        "i",
        "j",
        "eles",
        "j",
        "eles",
        "j",
        "ele",
        "i",
        "j",
        "assignDepthsToEles",
        "node",
        "node",
        "node",
        "node",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "edge",
        "otherNode",
        "thisInfo",
        "otherInfo",
        "highestDepthOfOther",
        "otherInfo",
        "highestDepthOfOther",
        "otherInfo",
        "highestOther",
        "otherNode",
        "highestOther",
        "adj",
        "options",
        "adj",
        "depths",
        "i",
        "nDepths",
        "i",
        "depths",
        "i",
        "depth",
        "j",
        "nDepth",
        "j",
        "depth",
        "j",
        "ele",
        "intersectsDepth",
        "ele",
        "intEle",
        "info",
        "intEle",
        "elesToMove",
        "ele",
        "i",
        "elesToMove",
        "i",
        "elesToMove",
        "i",
        "ele",
        "info",
        "intEle",
        "depths",
        "info",
        "info",
        "intInfo",
        "newDepth",
        "depths",
        "depths",
        "depths",
        "newDepth",
        "ele",
        "info",
        "newDepth",
        "info",
        "depths",
        "newDepth",
        "assignDepthsToEles",
        "options",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "minDistance",
        "minDistance",
        "w",
        "h",
        "minDistance",
        "ele",
        "cachedWeightedPercent",
        "ele",
        "cachedWeightedPercent",
        "ele",
        "ele",
        "ele",
        "i",
        "neighbors",
        "i",
        "neighbors",
        "i",
        "neighbor",
        "neighbor",
        "depths",
        "depth",
        "eleDepth",
        "depth",
        "eleDepth",
        "percent",
        "index",
        "nDepth",
        "samples",
        "samples",
        "samples",
        "percent",
        "percent",
        "samples",
        "samples",
        "percent",
        "cachedWeightedPercent",
        "ele",
        "percent",
        "percent",
        "a",
        "b",
        "getWeightedPercent",
        "a",
        "getWeightedPercent",
        "b",
        "apct",
        "bpct",
        "times",
        "times",
        "i",
        "depths",
        "i",
        "depths",
        "i",
        "depths",
        "i",
        "sortFn",
        "assignDepthsToEles",
        "i",
        "depths",
        "i",
        "biggestDepthSize",
        "depths",
        "i",
        "biggestDepthSize",
        "bb",
        "bb",
        "bb",
        "bb",
        "ele",
        "isBottomDepth",
        "ele",
        "info",
        "info",
        "depths",
        "depth",
        "options",
        "depthSize",
        "biggestDepthSize",
        "bb",
        "depthSize",
        "minDistance",
        "bb",
        "depths",
        "minDistance",
        "bb",
        "depths",
        "bb",
        "depths",
        "radiusStepSize",
        "radiusStepSize",
        "minDistance",
        "options",
        "options",
        "center",
        "index",
        "depthSize",
        "distanceX",
        "depth",
        "distanceY",
        "isBottomDepth",
        "epos",
        "successors",
        "ele",
        "succs",
        "epos",
        "i",
        "succs",
        "i",
        "pos",
        "succs",
        "i",
        "epos",
        "spos",
        "epos",
        "succs",
        "epos",
        "options",
        "radiusStepSize",
        "depth",
        "radiusStepSize",
        "depths",
        "depths",
        "radiusStepSize",
        "depths",
        "depth",
        "index",
        "depth",
        "depths",
        "radius",
        "center",
        "radius",
        "theta",
        "center",
        "radius",
        "theta",
        "center",
        "index",
        "depthSize",
        "distanceX",
        "depth",
        "distanceY",
        "depths",
        "i",
        "i",
        "depths",
        "i",
        "j",
        "depth",
        "j",
        "depth",
        "j",
        "pos",
        "node",
        "getPosition",
        "node",
        "i",
        "depths",
        "nodes",
        "options",
        "pos",
        "$$",
        "BreadthFirstLayout",
        "cytoscape",
        "$$",
        "options",
        "$$",
        "defaults",
        "options",
        "CircleLayout",
        "options",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "bb",
        "bb",
        "bb",
        "bb",
        "options",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "minDistance",
        "minDistance",
        "w",
        "h",
        "$$",
        "options",
        "r",
        "options",
        "nodes",
        "r",
        "r",
        "bb",
        "bb",
        "minDistance",
        "nodes",
        "options",
        "minDistance",
        "nodes",
        "dTheta",
        "dTheta",
        "minDistance",
        "minDistance",
        "dcos",
        "dcos",
        "dsin",
        "dsin",
        "r",
        "rMin",
        "r",
        "i",
        "ele",
        "r",
        "theta",
        "r",
        "theta",
        "center",
        "rx",
        "center",
        "ry",
        "theta",
        "options",
        "theta",
        "dTheta",
        "theta",
        "dTheta",
        "pos",
        "nodes",
        "options",
        "getPos",
        "$$",
        "CircleLayout",
        "cytoscape",
        "$$",
        "node",
        "options",
        "$$",
        "defaults",
        "options",
        "ColaLayout",
        "$$",
        "cola",
        "options",
        "options",
        "eles",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "val",
        "ele",
        "$$",
        "val",
        "fn",
        "ele",
        "ele",
        "val",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "node",
        "x",
        "x",
        "scratch",
        "x",
        "x",
        "scratch",
        "y",
        "y",
        "scratch",
        "y",
        "y",
        "scratch",
        "nodes",
        "i",
        "node",
        "node",
        "node",
        "node",
        "pos",
        "bb",
        "scratch",
        "x",
        "pos",
        "bb",
        "scratch",
        "y",
        "ready",
        "onReady",
        "ready",
        "options",
        "cy",
        "options",
        "layout",
        "options",
        "grabbableNodes",
        "nodes",
        "grabHandler",
        "nodes",
        "lockHandler",
        "layout",
        "options",
        "layout",
        "layout",
        "layout",
        "options",
        "layout",
        "layout",
        "options",
        "options",
        "tickSkip",
        "options",
        "ticksPerFrame",
        "ticksPerFrame",
        "ticksPerFrame",
        "cola",
        "e",
        "e",
        "options",
        "updateNodePositions",
        "updateNodePositions",
        "options",
        "layout",
        "onDone",
        "tick",
        "tick",
        "ret",
        "options",
        "adaptor",
        "ret",
        "skip",
        "skip",
        "tickSkip",
        "thisSkip",
        "i",
        "ticksPerFrame",
        "ret",
        "i",
        "ret",
        "ret",
        "inftick",
        "ret",
        "options",
        "multitick",
        "$$",
        "frame",
        "$$",
        "frame",
        "inftick",
        "listener",
        "layout",
        "adaptor",
        "nodes",
        "options",
        "grabbableNodes",
        "nodes",
        "grabHandler",
        "e",
        "node",
        "node",
        "node",
        "scrCola",
        "pos",
        "bb",
        "scrCola",
        "pos",
        "bb",
        "adaptor",
        "scrCola",
        "$$",
        "scrCola",
        "$$",
        "scrCola",
        "pos",
        "scrCola",
        "bb",
        "pos",
        "scrCola",
        "bb",
        "e",
        "adaptor",
        "scrCola",
        "adaptor",
        "adaptor",
        "scrCola",
        "nodes",
        "lockHandler",
        "e",
        "node",
        "node",
        "adaptor",
        "scrCola",
        "adaptor",
        "scrCola",
        "nodes",
        "node",
        "node",
        "adaptor",
        "nonparentNodes",
        "node",
        "i",
        "getOptVal",
        "options",
        "node",
        "node",
        "node",
        "options",
        "bb",
        "pos",
        "options",
        "bb",
        "pos",
        "node",
        "padding",
        "node",
        "padding",
        "i",
        "options",
        "nonparentNodes",
        "node",
        "getOptVal",
        "options",
        "node",
        "node",
        "scrCola",
        "align",
        "align",
        "offsetsX",
        "index",
        "align",
        "align",
        "offsetsY",
        "index",
        "align",
        "offsetsX",
        "constraints",
        "offsetsX",
        "offsetsY",
        "constraints",
        "offsetsY",
        "adaptor",
        "constraints",
        "adaptor",
        "nodes",
        "node",
        "node",
        "node",
        "i",
        "node",
        "i",
        "node",
        "child",
        "child",
        "child",
        "child",
        "node",
        "node",
        "node",
        "node",
        "child",
        "child",
        "child",
        "child",
        "node",
        "options",
        "length",
        "options",
        "lengthFnName",
        "options",
        "length",
        "options",
        "lengthFnName",
        "options",
        "length",
        "options",
        "lengthFnName",
        "length",
        "lengthFnName",
        "link",
        "link",
        "adaptor",
        "edges",
        "edge",
        "edge",
        "edge",
        "edge",
        "i",
        "edge",
        "edge",
        "edge",
        "length",
        "c",
        "getOptVal",
        "length",
        "edge",
        "c",
        "adaptor",
        "bb",
        "bb",
        "length",
        "adaptor",
        "lengthFnName",
        "lengthGetter",
        "options",
        "$$",
        "options",
        "flow",
        "options",
        "defMinSep",
        "$$",
        "options",
        "flow",
        "defAxis",
        "options",
        "$$",
        "options",
        "flow",
        "options",
        "flow",
        "flow",
        "defAxis",
        "flow",
        "flow",
        "flow",
        "defMinSep",
        "flow",
        "defAxis",
        "defMinSep",
        "adaptor",
        "flow",
        "flow",
        "adaptor",
        "options",
        "options",
        "options",
        "options",
        "options",
        "layout",
        "layout",
        "options",
        "setTimeout",
        "adaptor",
        "options",
        "ColaLayout",
        "$$",
        "ColaLayout",
        "cytoscape",
        "$$",
        "nodes",
        "nodes",
        "options",
        "$$",
        "defaults",
        "options",
        "ConcentricLayout",
        "options",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "bb",
        "bb",
        "bb",
        "bb",
        "options",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "value",
        "options",
        "node",
        "nodeValues",
        "value",
        "node",
        "node",
        "value",
        "nodes",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "maxNodeSize",
        "maxNodeSize",
        "node",
        "node",
        "nodeValues",
        "a",
        "b",
        "b",
        "a",
        "options",
        "nodes",
        "levels",
        "i",
        "nodeValues",
        "i",
        "nodeValues",
        "i",
        "currentLevel",
        "currentLevel",
        "val",
        "diff",
        "levelWidth",
        "currentLevel",
        "levels",
        "currentLevel",
        "currentLevel",
        "val",
        "maxNodeSize",
        "options",
        "options",
        "levels",
        "levels",
        "bb",
        "bb",
        "minDist",
        "maxR",
        "levels",
        "firstLvlHasMulti",
        "minDist",
        "minDist",
        "rStep",
        "i",
        "levels",
        "i",
        "levels",
        "i",
        "level",
        "level",
        "options",
        "dTheta",
        "dTheta",
        "minDist",
        "minDist",
        "dcos",
        "dcos",
        "dsin",
        "dsin",
        "r",
        "rMin",
        "r",
        "j",
        "level",
        "j",
        "level",
        "j",
        "options",
        "options",
        "dTheta",
        "j",
        "center",
        "r",
        "theta",
        "center",
        "r",
        "theta",
        "pos",
        "val",
        "p",
        "r",
        "minDist",
        "nodes",
        "options",
        "pos",
        "id",
        "$$",
        "ConcentricLayout",
        "cytoscape",
        "$$",
        "options",
        "$$",
        "defaults",
        "options",
        "CoseLayout",
        "options",
        "layout",
        "layout",
        "layout",
        "options",
        "DEBUG",
        "DEBUG",
        "createLayoutInfo",
        "cy",
        "layout",
        "options",
        "DEBUG",
        "printLayoutInfo",
        "layoutInfo",
        "options",
        "randomizePositions",
        "layoutInfo",
        "cy",
        "updatePositions",
        "layoutInfo",
        "cy",
        "options",
        "i",
        "layout",
        "logDebug",
        "i",
        "step",
        "layoutInfo",
        "cy",
        "options",
        "i",
        "layoutInfo",
        "layoutInfo",
        "options",
        "logDebug",
        "layoutInfo",
        "layoutInfo",
        "options",
        "logDebug",
        "i",
        "refreshPositions",
        "layoutInfo",
        "cy",
        "options",
        "options",
        "cy",
        "options",
        "endTime",
        "startTime",
        "layout",
        "options",
        "layout",
        "layout",
        "options",
        "f",
        "options",
        "i",
        "options",
        "mainLoop",
        "i",
        "loopRet",
        "f",
        "i",
        "refreshPositions",
        "layoutInfo",
        "cy",
        "options",
        "options",
        "cy",
        "options",
        "loopRet",
        "i",
        "options",
        "$$",
        "frame",
        "done",
        "$$",
        "frame",
        "i",
        "options",
        "i",
        "mainLoop",
        "i",
        "done",
        "CoseLayout",
        "cy",
        "layout",
        "options",
        "options",
        "options",
        "layout",
        "nodes",
        "edges",
        "options",
        "cy",
        "cy",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "i",
        "layoutInfo",
        "i",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "tempNode",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "nodes",
        "i",
        "tempNode",
        "nodes",
        "i",
        "layoutInfo",
        "tempNode",
        "layoutInfo",
        "tempNode",
        "i",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "n",
        "p_id",
        "layoutInfo",
        "layoutInfo",
        "p_id",
        "n",
        "queue",
        "end",
        "n",
        "tempGraph",
        "n",
        "layoutInfo",
        "tempGraph",
        "start",
        "end",
        "queue",
        "start",
        "layoutInfo",
        "node_id",
        "layoutInfo",
        "node_ix",
        "node",
        "children",
        "layoutInfo",
        "children",
        "i",
        "children",
        "i",
        "queue",
        "end",
        "children",
        "i",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "j",
        "graph",
        "j",
        "layoutInfo",
        "graph",
        "j",
        "layoutInfo",
        "index",
        "i",
        "i",
        "layoutInfo",
        "i",
        "edges",
        "i",
        "tempEdge",
        "e",
        "tempEdge",
        "e",
        "tempEdge",
        "e",
        "options",
        "layoutInfo",
        "tempEdge",
        "layoutInfo",
        "tempEdge",
        "layoutInfo",
        "sourceIx",
        "layoutInfo",
        "targetIx",
        "sourceGraph",
        "targetGraph",
        "findLCA",
        "tempEdge",
        "tempEdge",
        "layoutInfo",
        "layoutInfo",
        "lca",
        "layoutInfo",
        "sourceIx",
        "$",
        "tempNode",
        "lcaGraph",
        "tempNode",
        "layoutInfo",
        "layoutInfo",
        "tempNode",
        "depth",
        "tempNode",
        "layoutInfo",
        "targetIx",
        "$",
        "tempNode",
        "lcaGraph",
        "tempNode",
        "layoutInfo",
        "layoutInfo",
        "tempNode",
        "depth",
        "logDebug",
        "tempEdge",
        "tempEdge",
        "lca",
        "lcaGraph",
        "depth",
        "idealLength",
        "depth",
        "options",
        "tempEdge",
        "idealLength",
        "layoutInfo",
        "tempEdge",
        "layoutInfo",
        "node1",
        "node2",
        "layoutInfo",
        "findLCA_aux",
        "node1",
        "node2",
        "layoutInfo",
        "res",
        "res",
        "node1",
        "node2",
        "graphIx",
        "layoutInfo",
        "layoutInfo",
        "graphIx",
        "$",
        "node1",
        "graph",
        "$",
        "node2",
        "graph",
        "graphIx",
        "i",
        "graph",
        "i",
        "graph",
        "i",
        "layoutInfo",
        "nodeId",
        "layoutInfo",
        "nodeIx",
        "children",
        "layoutInfo",
        "layoutInfo",
        "children",
        "findLCA_aux",
        "node1",
        "node2",
        "childGraphIx",
        "layoutInfo",
        "result",
        "result",
        "c",
        "c",
        "result",
        "c",
        "graphIx",
        "layoutInfo",
        "DEBUG",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "i",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "s",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "i",
        "i",
        "i",
        "i",
        "layoutInfo",
        "i",
        "s",
        "i",
        "layoutInfo",
        "i",
        "s",
        "s",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "s",
        "i",
        "e",
        "e",
        "e",
        "e",
        "s",
        "s",
        "layoutInfo",
        "s",
        "layoutInfo",
        "s",
        "layoutInfo",
        "s",
        "layoutInfo",
        "cy",
        "layoutInfo",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "n",
        "n",
        "width",
        "n",
        "height",
        "layoutInfo",
        "cy",
        "options",
        "logDebug",
        "s",
        "layoutInfo",
        "options",
        "layoutInfo",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "options",
        "nodes",
        "node",
        "layoutInfo",
        "layoutInfo",
        "node",
        "coseBB",
        "coseBB",
        "lnode",
        "coseBB",
        "coseBB",
        "lnode",
        "coseBB",
        "coseBB",
        "lnode",
        "coseBB",
        "coseBB",
        "lnode",
        "coseBB",
        "coseBB",
        "coseBB",
        "coseBB",
        "coseBB",
        "coseBB",
        "nodes",
        "i",
        "ele",
        "layoutInfo",
        "layoutInfo",
        "ele",
        "s",
        "lnode",
        "lnode",
        "lnode",
        "logDebug",
        "s",
        "options",
        "lnode",
        "coseBB",
        "coseBB",
        "lnode",
        "coseBB",
        "coseBB",
        "bb",
        "pctX",
        "bb",
        "bb",
        "pctY",
        "bb",
        "lnode",
        "lnode",
        "layoutInfo",
        "s",
        "logDebug",
        "s",
        "layoutInfo",
        "layout",
        "options",
        "layout",
        "layoutInfo",
        "cy",
        "options",
        "step",
        "s",
        "step",
        "s",
        "logDebug",
        "s",
        "calculateNodeForces",
        "layoutInfo",
        "cy",
        "options",
        "calculateEdgeForces",
        "layoutInfo",
        "cy",
        "options",
        "calculateGravityForces",
        "layoutInfo",
        "cy",
        "options",
        "propagateForces",
        "layoutInfo",
        "cy",
        "options",
        "updatePositions",
        "layoutInfo",
        "cy",
        "options",
        "layoutInfo",
        "cy",
        "options",
        "logDebug",
        "s",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "graph",
        "s",
        "graph",
        "logDebug",
        "s",
        "j",
        "numNodes",
        "j",
        "layoutInfo",
        "layoutInfo",
        "graph",
        "j",
        "j",
        "k",
        "numNodes",
        "k",
        "layoutInfo",
        "layoutInfo",
        "graph",
        "k",
        "nodeRepulsion",
        "node1",
        "node2",
        "layoutInfo",
        "cy",
        "options",
        "node1",
        "node2",
        "layoutInfo",
        "cy",
        "options",
        "node1",
        "node2",
        "node2",
        "node1",
        "node2",
        "node1",
        "s",
        "directionX",
        "directionY",
        "directionX",
        "directionY",
        "s",
        "nodesOverlap",
        "node1",
        "node2",
        "directionX",
        "directionY",
        "overlap",
        "s",
        "s",
        "overlap",
        "options",
        "overlap",
        "directionX",
        "directionX",
        "directionY",
        "directionY",
        "s",
        "distance",
        "force",
        "directionX",
        "distance",
        "force",
        "directionY",
        "distance",
        "s",
        "findClippingPoint",
        "node1",
        "directionX",
        "directionY",
        "findClippingPoint",
        "node2",
        "directionX",
        "directionY",
        "point2",
        "point1",
        "point2",
        "point1",
        "distanceX",
        "distanceX",
        "distanceY",
        "distanceY",
        "distanceSqr",
        "s",
        "distance",
        "options",
        "distanceSqr",
        "force",
        "distanceX",
        "distance",
        "force",
        "distanceY",
        "distance",
        "node1",
        "forceX",
        "node1",
        "forceY",
        "node2",
        "forceX",
        "node2",
        "forceY",
        "s",
        "forceX",
        "forceY",
        "logDebug",
        "s",
        "node",
        "dX",
        "dY",
        "node",
        "node",
        "node",
        "node",
        "dY",
        "dX",
        "H",
        "W",
        "node",
        "H",
        "W",
        "dX",
        "dY",
        "dX",
        "dY",
        "res",
        "X",
        "s",
        "res",
        "Y",
        "H",
        "dX",
        "dY",
        "res",
        "X",
        "res",
        "Y",
        "H",
        "s",
        "dX",
        "nodeSlope",
        "dirSlope",
        "dirSlope",
        "nodeSlope",
        "res",
        "X",
        "W",
        "res",
        "Y",
        "W",
        "dY",
        "dX",
        "s",
        "dX",
        "nodeSlope",
        "dirSlope",
        "dirSlope",
        "nodeSlope",
        "res",
        "X",
        "W",
        "res",
        "Y",
        "W",
        "dY",
        "dX",
        "s",
        "dY",
        "dirSlope",
        "nodeSlope",
        "dirSlope",
        "nodeSlope",
        "res",
        "X",
        "H",
        "dX",
        "dY",
        "res",
        "Y",
        "H",
        "s",
        "dY",
        "dirSlope",
        "nodeSlope",
        "dirSlope",
        "nodeSlope",
        "res",
        "X",
        "H",
        "dX",
        "dY",
        "res",
        "Y",
        "H",
        "s",
        "s",
        "res",
        "res",
        "logDebug",
        "s",
        "res",
        "node1",
        "node2",
        "dX",
        "dY",
        "dX",
        "node1",
        "node2",
        "node2",
        "node1",
        "dY",
        "node1",
        "node2",
        "node2",
        "node1",
        "overlapX",
        "overlapY",
        "overlapX",
        "overlapX",
        "overlapY",
        "overlapY",
        "layoutInfo",
        "cy",
        "options",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "edge",
        "layoutInfo",
        "sourceIx",
        "layoutInfo",
        "edge",
        "layoutInfo",
        "targetIx",
        "target",
        "source",
        "target",
        "source",
        "directionX",
        "directionY",
        "findClippingPoint",
        "source",
        "directionX",
        "directionY",
        "findClippingPoint",
        "target",
        "directionX",
        "directionY",
        "point2",
        "point1",
        "point2",
        "point1",
        "lx",
        "lx",
        "ly",
        "ly",
        "edge",
        "l",
        "options",
        "l",
        "force",
        "lx",
        "l",
        "force",
        "ly",
        "l",
        "source",
        "forceX",
        "source",
        "forceY",
        "target",
        "forceX",
        "target",
        "forceY",
        "source",
        "target",
        "s",
        "l",
        "forceX",
        "forceY",
        "logDebug",
        "s",
        "layoutInfo",
        "cy",
        "options",
        "logDebug",
        "s",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "graph",
        "s",
        "graph",
        "logDebug",
        "s",
        "i",
        "layoutInfo",
        "layoutInfo",
        "layoutInfo",
        "layoutInfo",
        "graph",
        "layoutInfo",
        "layoutInfo",
        "temp",
        "parent",
        "parent",
        "s",
        "centerX",
        "centerY",
        "logDebug",
        "s",
        "j",
        "numNodes",
        "j",
        "layoutInfo",
        "layoutInfo",
        "graph",
        "j",
        "s",
        "node",
        "centerX",
        "node",
        "centerY",
        "node",
        "dx",
        "dx",
        "dy",
        "dy",
        "d",
        "options",
        "dx",
        "d",
        "options",
        "dy",
        "d",
        "node",
        "fx",
        "node",
        "fy",
        "s",
        "fx",
        "fy",
        "s",
        "logDebug",
        "s",
        "layoutInfo",
        "cy",
        "options",
        "logDebug",
        "queue",
        "queue",
        "layoutInfo",
        "end",
        "layoutInfo",
        "start",
        "end",
        "queue",
        "start",
        "layoutInfo",
        "nodeId",
        "layoutInfo",
        "nodeIndex",
        "node",
        "children",
        "node",
        "node",
        "node",
        "offX",
        "offY",
        "s",
        "children",
        "logDebug",
        "s",
        "i",
        "children",
        "i",
        "layoutInfo",
        "layoutInfo",
        "children",
        "i",
        "childNode",
        "offX",
        "childNode",
        "offY",
        "queue",
        "end",
        "children",
        "i",
        "node",
        "node",
        "layoutInfo",
        "cy",
        "options",
        "logDebug",
        "s",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "n",
        "logDebug",
        "n",
        "n",
        "n",
        "n",
        "n",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "n",
        "logDebug",
        "n",
        "s",
        "n",
        "n",
        "n",
        "limitForce",
        "n",
        "n",
        "layoutInfo",
        "n",
        "tempForce",
        "n",
        "tempForce",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "s",
        "n",
        "n",
        "logDebug",
        "s",
        "updateAncestryBoundaries",
        "n",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "layoutInfo",
        "i",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "s",
        "n",
        "s",
        "n",
        "n",
        "s",
        "n",
        "n",
        "logDebug",
        "s",
        "forceX",
        "forceY",
        "max",
        "forceX",
        "forceY",
        "max",
        "forceX",
        "forceX",
        "forceY",
        "forceY",
        "force",
        "max",
        "max",
        "forceX",
        "force",
        "max",
        "forceY",
        "force",
        "forceX",
        "forceY",
        "s",
        "res",
        "res",
        "logDebug",
        "s",
        "res",
        "node",
        "layoutInfo",
        "node",
        "node",
        "parentId",
        "s",
        "logDebug",
        "s",
        "layoutInfo",
        "layoutInfo",
        "parentId",
        "p",
        "node",
        "p",
        "p",
        "p",
        "node",
        "p",
        "flag",
        "s",
        "p",
        "p",
        "p",
        "node",
        "p",
        "p",
        "p",
        "node",
        "p",
        "flag",
        "s",
        "p",
        "p",
        "p",
        "node",
        "p",
        "p",
        "p",
        "node",
        "p",
        "flag",
        "s",
        "p",
        "p",
        "p",
        "node",
        "p",
        "p",
        "p",
        "node",
        "p",
        "flag",
        "s",
        "p",
        "p",
        "flag",
        "logDebug",
        "s",
        "updateAncestryBoundaries",
        "p",
        "layoutInfo",
        "s",
        "p",
        "logDebug",
        "s",
        "text",
        "DEBUG",
        "text",
        "$$",
        "CoseLayout",
        "cytoscape",
        "$$",
        "edge",
        "options",
        "$$",
        "defaults",
        "options",
        "DagreLayout",
        "$$",
        "dagre",
        "options",
        "options",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "dagre",
        "eles",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "g",
        "node",
        "node",
        "node",
        "eles",
        "i",
        "edges",
        "i",
        "edges",
        "i",
        "g",
        "edge",
        "edge",
        "edge",
        "$$",
        "options",
        "options",
        "edge",
        "edge",
        "options",
        "dagre",
        "options",
        "d",
        "options",
        "options",
        "d",
        "options",
        "options",
        "d",
        "options",
        "options",
        "d",
        "options",
        "d",
        "d",
        "g",
        "d",
        "id",
        "n",
        "cy",
        "id",
        "n",
        "options",
        "dagreBB",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "nodes",
        "node",
        "node",
        "dagreBB",
        "dagreBB",
        "dModel",
        "dagreBB",
        "dagreBB",
        "dModel",
        "dagreBB",
        "dagreBB",
        "dModel",
        "dagreBB",
        "dagreBB",
        "dModel",
        "dagreBB",
        "dagreBB",
        "dagreBB",
        "dagreBB",
        "dagreBB",
        "dagreBB",
        "dagreBB",
        "bb",
        "p",
        "options",
        "p",
        "dagreBB",
        "dagreBB",
        "p",
        "dagreBB",
        "dagreBB",
        "bb",
        "xPct",
        "bb",
        "bb",
        "yPct",
        "bb",
        "p",
        "nodes",
        "layout",
        "options",
        "constrainPos",
        "dModel",
        "dModel",
        "$$",
        "DagreLayout",
        "cytoscape",
        "$$",
        "node",
        "options",
        "$$",
        "defaults",
        "options",
        "GridLayout",
        "options",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "bb",
        "bb",
        "nodes",
        "options",
        "bb",
        "bb",
        "nodes",
        "cells",
        "bb",
        "bb",
        "splits",
        "bb",
        "bb",
        "splits",
        "val",
        "val",
        "rows",
        "cols",
        "rows",
        "cols",
        "min",
        "rows",
        "rows",
        "val",
        "cols",
        "val",
        "val",
        "val",
        "rows",
        "cols",
        "rows",
        "cols",
        "max",
        "rows",
        "rows",
        "val",
        "cols",
        "val",
        "options",
        "options",
        "rows",
        "options",
        "cols",
        "options",
        "options",
        "options",
        "rows",
        "options",
        "cols",
        "cells",
        "rows",
        "options",
        "options",
        "cols",
        "options",
        "rows",
        "cells",
        "cols",
        "cols",
        "rows",
        "cells",
        "small",
        "large",
        "sm",
        "lg",
        "cells",
        "small",
        "sm",
        "lg",
        "sm",
        "cells",
        "large",
        "lg",
        "cols",
        "rows",
        "cells",
        "small",
        "large",
        "lg",
        "sm",
        "cells",
        "large",
        "lg",
        "small",
        "sm",
        "bb",
        "cols",
        "bb",
        "rows",
        "options",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "node",
        "node",
        "cellWidth",
        "cellWidth",
        "w",
        "cellHeight",
        "cellHeight",
        "h",
        "row",
        "col",
        "cellUsed",
        "row",
        "col",
        "row",
        "col",
        "cellUsed",
        "row",
        "col",
        "col",
        "col",
        "cols",
        "col",
        "row",
        "i",
        "nodes",
        "i",
        "nodes",
        "i",
        "options",
        "node",
        "rcPos",
        "rcPos",
        "rcPos",
        "rcPos",
        "rcPos",
        "pos",
        "pos",
        "used",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "used",
        "pos",
        "pos",
        "pos",
        "id2manPos",
        "node",
        "pos",
        "use",
        "pos",
        "pos",
        "i",
        "element",
        "element",
        "element",
        "id2manPos",
        "element",
        "rcPos",
        "x",
        "rcPos",
        "cellWidth",
        "cellWidth",
        "bb",
        "y",
        "rcPos",
        "cellHeight",
        "cellHeight",
        "bb",
        "used",
        "row",
        "col",
        "moveToNextCell",
        "x",
        "col",
        "cellWidth",
        "cellWidth",
        "bb",
        "y",
        "row",
        "cellHeight",
        "cellHeight",
        "bb",
        "use",
        "row",
        "col",
        "moveToNextCell",
        "x",
        "y",
        "nodes",
        "options",
        "getPos",
        "$$",
        "GridLayout",
        "cytoscape",
        "$$",
        "options",
        "$$",
        "defaults",
        "options",
        "NullLayout",
        "options",
        "options",
        "layout",
        "eles",
        "layout",
        "options",
        "layout",
        "layout",
        "options",
        "layout",
        "NullLayout",
        "$$",
        "NullLayout",
        "cytoscape",
        "$$",
        "options",
        "$$",
        "defaults",
        "options",
        "PresetLayout",
        "options",
        "eles",
        "$$",
        "options",
        "node",
        "options",
        "posIsFn",
        "options",
        "node",
        "node",
        "options",
        "node",
        "pos",
        "pos",
        "nodes",
        "options",
        "i",
        "node",
        "getPosition",
        "node",
        "node",
        "position",
        "position",
        "$$",
        "PresetLayout",
        "cytoscape",
        "$$",
        "options",
        "$$",
        "defaults",
        "options",
        "RandomLayout",
        "options",
        "options",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "i",
        "node",
        "bb",
        "bb",
        "bb",
        "bb",
        "nodes",
        "options",
        "getPos",
        "$$",
        "RandomLayout",
        "cytoscape",
        "$$",
        "options",
        "$$",
        "defaults",
        "options",
        "SpringyLayout",
        "$$",
        "Springy",
        "options",
        "layout",
        "layout",
        "options",
        "eles",
        "eles",
        "$$",
        "options",
        "options",
        "cy",
        "cy",
        "Springy",
        "nodes",
        "i",
        "node",
        "node",
        "graph",
        "node",
        "edges",
        "i",
        "edge",
        "edge",
        "edge",
        "edge",
        "graph",
        "fdSrc",
        "fdTgt",
        "edge",
        "Springy",
        "graph",
        "options",
        "options",
        "options",
        "options",
        "sim",
        "Infinity",
        "sim",
        "p",
        "currentBB",
        "sim",
        "currentBB",
        "currentBB",
        "p",
        "currentBB",
        "size",
        "bb",
        "bb",
        "p",
        "currentBB",
        "size",
        "bb",
        "bb",
        "Springy",
        "sx",
        "sy",
        "s",
        "currentBB",
        "sim",
        "currentBB",
        "currentBB",
        "s",
        "bb",
        "bb",
        "size",
        "currentBB",
        "s",
        "bb",
        "bb",
        "size",
        "currentBB",
        "Springy",
        "px",
        "py",
        "cy",
        "cy",
        "Springy",
        "sim",
        "clear",
        "movedNodes",
        "options",
        "simUpdatingPos",
        "movedNodes",
        "options",
        "cy",
        "options",
        "movedNodes",
        "cy",
        "simUpdatingPos",
        "drawEdge",
        "edge",
        "p1",
        "p2",
        "drawNode",
        "node",
        "p",
        "toScreen",
        "p",
        "node",
        "element",
        "element",
        "element",
        "v",
        "v",
        "movedNodes",
        "element",
        "drawnNodes",
        "numNodes",
        "layout",
        "options",
        "layout",
        "layout",
        "drawnNodes",
        "nodes",
        "i",
        "ele",
        "options",
        "setLayoutPositionForElement",
        "ele",
        "nodes",
        "dragHandler",
        "simUpdatingPos",
        "setLayoutPositionForElement",
        "element",
        "element",
        "fdRenderer",
        "fdId",
        "element",
        "pos",
        "pos",
        "fromScreen",
        "element",
        "fdP",
        "positionInFd",
        "fdP",
        "positionInFd",
        "nodes",
        "options",
        "grabbableNodes",
        "fdRenderer",
        "graph",
        "options",
        "grabbableNodes",
        "options",
        "cy",
        "options",
        "nodes",
        "dragHandler",
        "layout",
        "options",
        "layout",
        "layout",
        "start",
        "options",
        "setTimeout",
        "options",
        "SpringyLayout",
        "$$",
        "SpringyLayout",
        "cytoscape",
        "$$",
        "options",
        "options",
        "NullRenderer",
        "NullRenderer",
        "$$",
        "NullRenderer",
        "cytoscape"
    ],
    "literals": [
        "'use strict'",
        "'2.3.9'",
        "'undefined'",
        "'undefined'",
        "'cytoscape'",
        "'undefined'",
        "'use strict'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'undefined'",
        "'ontouchstart'",
        "'undefined'",
        "'MozAppearance'",
        "'undefined'",
        "'WebkitAppearance'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'use strict'",
        "'boolean'",
        "'object'",
        "'undefined'",
        "'undefined'",
        "'Cytoscape.js tried to pull in dependency `'",
        "'` but no module (i.e. CommonJS, AMD, or window) was found'",
        "'leading'",
        "'trailing'",
        "'maxWait'",
        "'trailing'",
        "'Tried to set map with object key'",
        "'Tried to get map with object key'",
        "'Tried to delete map with object key'",
        "'-'",
        "''",
        "'-'",
        "''",
        "' '",
        "' '",
        "\"#\"",
        "\"^\"",
        "\"$\"",
        "\"^\"",
        "\"$\"",
        "\"%\"",
        "'0'",
        "'#'",
        "\"(?:[-]?\\\\d*\\\\.\\\\d+|[-]?\\\\d+|[-]?\\\\d*\\\\.\\\\d+[eE]\\\\d+)\"",
        "\"rgb[a]?\\\\((\"",
        "\"[%]?)\\\\s*,\\\\s*(\"",
        "\"[%]?)\\\\s*,\\\\s*(\"",
        "\"[%]?)(?:\\\\s*,\\\\s*(\"",
        "\"))?\\\\)\"",
        "\"rgb[a]?\\\\((?:\"",
        "\"[%]?)\\\\s*,\\\\s*(?:\"",
        "\"[%]?)\\\\s*,\\\\s*(?:\"",
        "\"[%]?)(?:\\\\s*,\\\\s*(?:\"",
        "\"))?\\\\)\"",
        "\"hsl[a]?\\\\((\"",
        "\")\\\\s*,\\\\s*(\"",
        "\"[%])\\\\s*,\\\\s*(\"",
        "\"[%])(?:\\\\s*,\\\\s*(\"",
        "\"))?\\\\)\"",
        "\"hsl[a]?\\\\((?:\"",
        "\")\\\\s*,\\\\s*(?:\"",
        "\"[%])\\\\s*,\\\\s*(?:\"",
        "\"[%])(?:\\\\s*,\\\\s*(?:\"",
        "\"))?\\\\)\"",
        "\"\\\\#[0-9a-fA-F]{3}\"",
        "\"\\\\#[0-9a-fA-F]{6}\"",
        "'undefined'",
        "'use strict'",
        "'dot product: arguments are not vectors'",
        "'use strict'",
        "'core'",
        "'collection'",
        "'layout'",
        "'stop'",
        "'Invalid extension access syntax'",
        "'use strict'",
        "'get'",
        "'ready'",
        "'undefined'",
        "'use strict'",
        "'use strict'",
        "'data'",
        "'data'",
        "'data'",
        "'trigger'",
        "'data'",
        "'data'",
        "'trigger'",
        "'slow'",
        "'fast'",
        "'draw'",
        "'use strict'",
        "'[\\\\!\\\\\"\\\\#\\\\$\\\\%\\\\&\\\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\.\\\\/\\\\:\\\\;\\\\<\\\\=\\\\>\\\\?\\\\@\\\\[\\\\]\\\\^\\\\`\\\\{\\\\|\\\\}\\\\~]'",
        "'=|\\\\!=|>|>=|<|<=|\\\\$=|\\\\^=|\\\\*='",
        "'\\\\?|\\\\!|\\\\^'",
        "'\"(?:\\\\\\\\\"|[^\"])+\"'",
        "'|'",
        "\"'(?:\\\\\\\\'|[^'])+'\"",
        "'degree|indegree|outdegree'",
        "'\\\\s*,\\\\s*'",
        "'\\\\s+'",
        "'\\\\s+>\\\\s+'",
        "'\\\\$'",
        "'(?:[\\\\w-]|(?:\\\\\\\\'",
        "'))+'",
        "'|'",
        "'\\\\\\\\('",
        "')'",
        "'g'",
        "'|'",
        "'|@'",
        "'|'",
        "'!'",
        "'='",
        "'|\\\\!'",
        "'(node|edge|\\\\*)'",
        "\"*\"",
        "'s'",
        "'(:selected|:unselected|:locked|:unlocked|:visible|:hidden|:transparent|:grabbed|:free|:removed|:inside|:grabbable|:ungrabbable|:animated|:unanimated|:selectable|:unselectable|:orphan|:nonorphan|:parent|:child|:loop|:simple|:active|:inactive|:touch)'",
        "'\\\\#('",
        "')'",
        "'\\\\.('",
        "')'",
        "'\\\\[\\\\s*('",
        "')\\\\s*\\\\]'",
        "'\\\\[\\\\s*('",
        "')\\\\s*('",
        "')\\\\s*('",
        "')\\\\s*\\\\]'",
        "'^'",
        "'$'",
        "'\\\\[\\\\s*('",
        "')\\\\s*('",
        "')\\\\s*\\\\]'",
        "'\\\\[\\\\[\\\\s*('",
        "')\\\\s*('",
        "')\\\\s*('",
        "')\\\\s*\\\\]\\\\]'",
        "'Redefinition of subject in selector `'",
        "'`'",
        "'^'",
        "'The selector `'",
        "'`is invalid'",
        "'When adjusting references for the selector `'",
        "'`, neither parent nor ancestor was found'",
        "'Group `'",
        "'` conflicts with implicit group `'",
        "'` in selector `'",
        "'`'",
        "'A selector must be created from a string; found '",
        "'*'",
        "':selected'",
        "':unselected'",
        "':selectable'",
        "':unselectable'",
        "':locked'",
        "':unlocked'",
        "':visible'",
        "':hidden'",
        "':transparent'",
        "':grabbed'",
        "':free'",
        "':removed'",
        "':inside'",
        "':grabbable'",
        "':ungrabbable'",
        "':animated'",
        "':unanimated'",
        "':parent'",
        "':child'",
        "':nonorphan'",
        "':orphan'",
        "':loop'",
        "'source'",
        "'target'",
        "':simple'",
        "'source'",
        "'target'",
        "':active'",
        "':inactive'",
        "':touch'",
        "''",
        "''",
        "''",
        "'@'",
        "'@'",
        "''",
        "'!'",
        "'!'",
        "''",
        "'*='",
        "'$='",
        "'$'",
        "'^='",
        "'^'",
        "'='",
        "'!='",
        "'>'",
        "'>='",
        "'<'",
        "'<='",
        "'?'",
        "'!'",
        "'^'",
        "'data'",
        "'element._private.data.'",
        "'meta'",
        "'element.'",
        "'()'",
        "''",
        "'\"'",
        "'\"'",
        "''",
        "''",
        "'$'",
        "'['",
        "']'",
        "'['",
        "']'",
        "'[['",
        "']]'",
        "'#'",
        "'.'",
        "' > '",
        "' '",
        "' > '",
        "' '",
        "', '",
        "'use strict'",
        "'A style must have a core reference'",
        "'^'",
        "'\\\\s*\\\\(\\\\s*([\\\\w\\\\.]+)\\\\s*\\\\)$'",
        "'^'",
        "'\\\\s*\\\\(([\\\\w\\\\.]+)\\\\s*\\\\,\\\\s*('",
        "')\\\\s*\\\\,\\\\s*('",
        "')\\\\s*,\\\\s*('",
        "'|\\\\w+|'",
        "'|'",
        "'|'",
        "'|'",
        "')\\\\s*\\\\,\\\\s*('",
        "'|\\\\w+|'",
        "'|'",
        "'|'",
        "'|'",
        "')\\\\)$'",
        "'s|ms'",
        "'ms'",
        "'%'",
        "'parent'",
        "'origin'",
        "'auto'",
        "'repeat'",
        "'repeat-x'",
        "'repeat-y'",
        "'no-repeat'",
        "'none'",
        "'contain'",
        "'cover'",
        "'none'",
        "'node'",
        "'solid'",
        "'dotted'",
        "'dashed'",
        "'solid'",
        "'dotted'",
        "'dashed'",
        "'double'",
        "'bezier'",
        "'unbundled-bezier'",
        "'haystack'",
        "'^([\\\\w- ]+(?:\\\\s*,\\\\s*[\\\\w- ]+)*)$'",
        "'small-caps'",
        "'normal'",
        "'italic'",
        "'normal'",
        "'oblique'",
        "'normal'",
        "'bold'",
        "'bolder'",
        "'lighter'",
        "'100'",
        "'200'",
        "'300'",
        "'400'",
        "'500'",
        "'600'",
        "'800'",
        "'900'",
        "'none'",
        "'underline'",
        "'overline'",
        "'line-through'",
        "'none'",
        "'uppercase'",
        "'lowercase'",
        "'rectangle'",
        "'roundrectangle'",
        "'ellipse'",
        "'triangle'",
        "'square'",
        "'pentagon'",
        "'hexagon'",
        "'heptagon'",
        "'octagon'",
        "'star'",
        "'tee'",
        "'triangle'",
        "'triangle-tee'",
        "'triangle-backcurve'",
        "'half-triangle-overshot'",
        "'square'",
        "'circle'",
        "'diamond'",
        "'none'",
        "'filled'",
        "'hollow'",
        "'element'",
        "'none'",
        "'hidden'",
        "'visible'",
        "'top'",
        "'center'",
        "'bottom'",
        "'left'",
        "'center'",
        "'right'",
        "'data'",
        "'layoutData'",
        "'mapData'",
        "'mapLayoutData'",
        "'^url\\\\s*\\\\(\\\\s*([^\\\\s]+)\\\\s*\\\\s*\\\\)|none|(.+)$'",
        "'deg|rad'",
        "'text-valign'",
        "'text-halign'",
        "'color'",
        "'content'",
        "'text-outline-color'",
        "'text-outline-width'",
        "'text-outline-opacity'",
        "'text-opacity'",
        "'text-transform'",
        "'font-family'",
        "'font-style'",
        "'font-weight'",
        "'font-size'",
        "'min-zoomed-font-size'",
        "'display'",
        "'visibility'",
        "'opacity'",
        "'z-index'",
        "'overlay-padding'",
        "'overlay-color'",
        "'overlay-opacity'",
        "'transition-property'",
        "'transition-duration'",
        "'transition-delay'",
        "'height'",
        "'width'",
        "'shape'",
        "'background-color'",
        "'background-opacity'",
        "'background-blacken'",
        "'border-color'",
        "'border-opacity'",
        "'border-width'",
        "'border-style'",
        "'background-image'",
        "'background-image-opacity'",
        "'background-position-x'",
        "'background-position-y'",
        "'background-repeat'",
        "'background-fit'",
        "'background-clip'",
        "'padding-left'",
        "'padding-right'",
        "'padding-top'",
        "'padding-bottom'",
        "'position'",
        "'line-style'",
        "'line-color'",
        "'control-point-step-size'",
        "'control-point-distance'",
        "'control-point-weight'",
        "'curve-style'",
        "'haystack-radius'",
        "'source-arrow-shape'",
        "'target-arrow-shape'",
        "'mid-source-arrow-shape'",
        "'mid-target-arrow-shape'",
        "'source-arrow-color'",
        "'target-arrow-color'",
        "'mid-source-arrow-color'",
        "'mid-target-arrow-color'",
        "'source-arrow-fill'",
        "'target-arrow-fill'",
        "'mid-source-arrow-fill'",
        "'mid-target-arrow-fill'",
        "'selection-box-color'",
        "'selection-box-opacity'",
        "'selection-box-border-color'",
        "'selection-box-border-width'",
        "'active-bg-color'",
        "'active-bg-opacity'",
        "'active-bg-size'",
        "'outside-texture-bg-color'",
        "'outside-texture-bg-opacity'",
        "'pie-size'",
        "'pie-'",
        "'-background-color'",
        "'pie-'",
        "'-background-size'",
        "'pie-'",
        "'-background-opacity'",
        "'Helvetica'",
        "'font-family'",
        "'sans-serif'",
        "'normal'",
        "'font-style'",
        "'normal'",
        "'normal'",
        "'font-weight'",
        "'normal'",
        "'#000'",
        "'color'",
        "'#000'",
        "'none'",
        "'text-transform'",
        "'none'",
        "'font-size'",
        "'node, edge'",
        "'text-valign'",
        "'top'",
        "'text-halign'",
        "'center'",
        "'color'",
        "'text-outline-color'",
        "'#000'",
        "'text-outline-width'",
        "'text-outline-opacity'",
        "'text-opacity'",
        "'text-decoration'",
        "'none'",
        "'text-transform'",
        "'font-family'",
        "'font-style'",
        "'font-weight'",
        "'font-size'",
        "'min-zoomed-font-size'",
        "'visibility'",
        "'visible'",
        "'display'",
        "'element'",
        "'opacity'",
        "'z-index'",
        "'content'",
        "''",
        "'overlay-opacity'",
        "'overlay-color'",
        "'#000'",
        "'overlay-padding'",
        "'transition-property'",
        "'none'",
        "'transition-duration'",
        "'transition-delay'",
        "'background-blacken'",
        "'background-color'",
        "'#888'",
        "'background-opacity'",
        "'background-image'",
        "'none'",
        "'background-image-opacity'",
        "'background-position-x'",
        "'50%'",
        "'background-position-y'",
        "'50%'",
        "'background-repeat'",
        "'no-repeat'",
        "'background-fit'",
        "'none'",
        "'background-clip'",
        "'node'",
        "'border-color'",
        "'#000'",
        "'border-opacity'",
        "'border-width'",
        "'border-style'",
        "'solid'",
        "'height'",
        "'width'",
        "'shape'",
        "'ellipse'",
        "'padding-top'",
        "'padding-bottom'",
        "'padding-left'",
        "'padding-right'",
        "'position'",
        "'origin'",
        "'pie-size'",
        "'100%'",
        "'pie-1-background-color'",
        "'black'",
        "'pie-2-background-color'",
        "'black'",
        "'pie-3-background-color'",
        "'black'",
        "'pie-4-background-color'",
        "'black'",
        "'pie-5-background-color'",
        "'black'",
        "'pie-6-background-color'",
        "'black'",
        "'pie-7-background-color'",
        "'black'",
        "'pie-8-background-color'",
        "'black'",
        "'pie-9-background-color'",
        "'black'",
        "'pie-10-background-color'",
        "'black'",
        "'pie-11-background-color'",
        "'black'",
        "'pie-12-background-color'",
        "'black'",
        "'pie-13-background-color'",
        "'black'",
        "'pie-14-background-color'",
        "'black'",
        "'pie-15-background-color'",
        "'black'",
        "'pie-16-background-color'",
        "'black'",
        "'pie-1-background-size'",
        "'0%'",
        "'pie-2-background-size'",
        "'0%'",
        "'pie-3-background-size'",
        "'0%'",
        "'pie-4-background-size'",
        "'0%'",
        "'pie-5-background-size'",
        "'0%'",
        "'pie-6-background-size'",
        "'0%'",
        "'pie-7-background-size'",
        "'0%'",
        "'pie-8-background-size'",
        "'0%'",
        "'pie-9-background-size'",
        "'0%'",
        "'pie-10-background-size'",
        "'0%'",
        "'pie-11-background-size'",
        "'0%'",
        "'pie-12-background-size'",
        "'0%'",
        "'pie-13-background-size'",
        "'0%'",
        "'pie-14-background-size'",
        "'0%'",
        "'pie-15-background-size'",
        "'0%'",
        "'pie-16-background-size'",
        "'0%'",
        "'pie-1-background-opacity'",
        "'pie-2-background-opacity'",
        "'pie-3-background-opacity'",
        "'pie-4-background-opacity'",
        "'pie-5-background-opacity'",
        "'pie-6-background-opacity'",
        "'pie-7-background-opacity'",
        "'pie-8-background-opacity'",
        "'pie-9-background-opacity'",
        "'pie-10-background-opacity'",
        "'pie-11-background-opacity'",
        "'pie-12-background-opacity'",
        "'pie-13-background-opacity'",
        "'pie-14-background-opacity'",
        "'pie-15-background-opacity'",
        "'pie-16-background-opacity'",
        "'source-arrow-shape'",
        "'none'",
        "'mid-source-arrow-shape'",
        "'none'",
        "'target-arrow-shape'",
        "'none'",
        "'mid-target-arrow-shape'",
        "'none'",
        "'source-arrow-color'",
        "'#ddd'",
        "'mid-source-arrow-color'",
        "'#ddd'",
        "'target-arrow-color'",
        "'#ddd'",
        "'mid-target-arrow-color'",
        "'#ddd'",
        "'source-arrow-fill'",
        "'filled'",
        "'mid-source-arrow-fill'",
        "'filled'",
        "'target-arrow-fill'",
        "'filled'",
        "'mid-target-arrow-fill'",
        "'filled'",
        "'line-style'",
        "'solid'",
        "'line-color'",
        "'#ddd'",
        "'control-point-step-size'",
        "'control-point-weight'",
        "'curve-style'",
        "'bezier'",
        "'haystack-radius'",
        "'$node > node'",
        "'width'",
        "'auto'",
        "'height'",
        "'auto'",
        "'shape'",
        "'rectangle'",
        "'background-opacity'",
        "'padding-top'",
        "'padding-right'",
        "'padding-left'",
        "'padding-bottom'",
        "'edge'",
        "'width'",
        "':active'",
        "'overlay-color'",
        "'black'",
        "'overlay-padding'",
        "'overlay-opacity'",
        "'core'",
        "'selection-box-color'",
        "'#ddd'",
        "'selection-box-opacity'",
        "'selection-box-border-color'",
        "'#aaa'",
        "'selection-box-border-width'",
        "'active-bg-color'",
        "'black'",
        "'active-bg-opacity'",
        "'active-bg-size'",
        "'outside-texture-bg-color'",
        "'#000'",
        "'outside-texture-bg-opacity'",
        "''",
        "''",
        "''",
        "'px'",
        "'px|em'",
        "'|\\\\%'",
        "''",
        "'^('",
        "')('",
        "')?'",
        "'$'",
        "''",
        "''",
        "''",
        "''",
        "'px'",
        "'em'",
        "'px'",
        "'ms'",
        "'s'",
        "'ms'",
        "''",
        "'none'",
        "','",
        "'none'",
        "', '",
        "''",
        "''",
        "''",
        "''",
        "'core'",
        "'use strict'",
        "'-'",
        "'t'",
        "'t'",
        "'t'",
        "''",
        "''",
        "''",
        "'t'",
        "'f'",
        "'t'",
        "'nodes'",
        "'pie-'",
        "'-background-size'",
        "'text-transform'",
        "'content'",
        "'font-style'",
        "'font-size'",
        "'px'",
        "'font-family'",
        "'font-weight'",
        "'text-valign'",
        "'text-valign'",
        "'text-outline-width'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'width'",
        "'height'",
        "'border-width'",
        "'$'",
        "'$'",
        "'edges'",
        "'control-point-step-size'",
        "'control-point-distance'",
        "'control-point-distance'",
        "'control-point-weight'",
        "'curve-style'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'height'",
        "'width'",
        "'auto'",
        "'Do not assign mappings to elements without corresponding data (e.g. ele `'",
        "'` for property `'",
        "'` with data field `'",
        "'`); try a `['",
        "']` selector to limit scope to elements with `'",
        "'` defined'",
        "\".\"",
        "'rgb('",
        "', '",
        "', '",
        "')'",
        "\".\"",
        "''",
        "'transition-property'",
        "'transition-duration'",
        "'transition-delay'",
        "'use strict'",
        "\"*\"",
        "\"**\"",
        "''",
        "''",
        "'use strict'",
        "'font-size'",
        "'undefined'",
        "'use strict'",
        "'px'",
        "'use strict'",
        "'core'",
        "'use strict'",
        "''",
        "''",
        "''",
        "''",
        "'Halting stylesheet parsing: String stylesheet contains more to parse but no selector and block found in: '",
        "'core'",
        "'Skipping parsing of block: Invalid selector found in string stylesheet: '",
        "'Skipping parsing of block: Invalid formatting of style property and value definitions found in:'",
        "'Skipping property: Invalid property name in: '",
        "'Skipping property: Invalid property definition in: '",
        "'use strict'",
        "'use strict'",
        "'destroy'",
        "'grid'",
        "'null'",
        "'canvas'",
        "'null'",
        "'additive'",
        "'single'",
        "'additive'",
        "'single'",
        "'auto'",
        "'initrender'",
        "'initrender'",
        "'ready'",
        "'ready'",
        "'ready'",
        "'ready'",
        "'ready'",
        "'destroy'",
        "'undefined'",
        "'use strict'",
        "'interactive'",
        "'complete'",
        "'nodes'",
        "'edges'",
        "'layoutready'",
        "'load'",
        "'load'",
        "'load'",
        "'layoutstop'",
        "'done'",
        "'done'",
        "'undefined'",
        "'use strict'",
        "'draw'",
        "'pan'",
        "'zoom'",
        "'viewport'",
        "'undefined'",
        "'use strict'",
        "'data'",
        "'data'",
        "'data'",
        "'trigger'",
        "'data'",
        "'data'",
        "'trigger'",
        "'scratch'",
        "'scratch'",
        "'use strict'",
        "'use strict'",
        "'use strict'",
        "'Layout options must be specified to make a layout'",
        "'A `name` must be specified to make a layout'",
        "'layout'",
        "'Can not apply layout: No such layout `'",
        "'` found; did you include its JS file?'",
        "'use strict'",
        "'use strict'",
        "'draw'",
        "'resize'",
        "'resize'",
        "'renderer'",
        "'Can not initialise: No such renderer `%s` found; did you include its JS file?'",
        "'use strict'",
        "'use strict'",
        "'use strict'",
        "'pan viewport'",
        "'x'",
        "'y'",
        "'pan viewport'",
        "'viewport'",
        "'pan viewport'",
        "'x'",
        "'y'",
        "'pan viewport'",
        "'viewport'",
        "'pan zoom viewport'",
        "'viewport'",
        "' zoom '",
        "' pan '",
        "''",
        "' viewport '",
        "'zoom viewport'",
        "'viewport'",
        "'zoom'",
        "'pan'",
        "'viewport'",
        "' '",
        "'viewport'",
        "'pan viewport'",
        "'viewport'",
        "'use strict'",
        "'n'",
        "'e'",
        "'An element must have a core reference and parameters set'",
        "'nodes'",
        "'edges'",
        "'An element must be of type `nodes` or `edges`; you specified `'",
        "'`'",
        "''",
        "'A collection must have a reference to the core'",
        "''",
        "' '",
        "''",
        "'Can not create element with invalid string ID `'",
        "'`'",
        "'Can not create second element with ID `'",
        "'`'",
        "'source'",
        "'target'",
        "''",
        "'Can not create edge `'",
        "'` with unspecified '",
        "'Can not create edge `'",
        "'` with nonexistant '",
        "' `'",
        "'`'",
        "'add'",
        "'add'",
        "'remove'",
        "'remove'",
        "'nodes'",
        "'edges'",
        "'nodes'",
        "'use strict'",
        "'source'",
        "'source'",
        "'use strict'",
        "\"Starting aStar...\"",
        "\"Source node: %s\"",
        "\"Target node: %s\"",
        "':loop'",
        "\"#\"",
        "\"\\nStep: %s\"",
        "\"Processing node: %s, fScore = %s\"",
        "\"Found goal node!\"",
        "\"Path: %s\"",
        "\"Added node to closedSet, removed from openSet.\"",
        "\"Processing neighbors...\"",
        "'[source = \"'",
        "'\"]'",
        "'[id != \"'",
        "'\"]'",
        "\"   processing neighbor: %s\"",
        "\"   already in closedSet, ignoring it.\"",
        "\"   tentative gScore: %d\"",
        "\"   not in openSet, adding it. \"",
        "\"   fScore(%s) = %s\"",
        "\"   better score, replacing gScore. \"",
        "\"   fScore(%s) = %s\"",
        "\"Reached end of computation without finding our goal\"",
        "\"Starting floydWarshall...\"",
        "':loop'",
        "\"Starting bellmanFord...\"",
        "\"Source node: %s\"",
        "\"options.root required\"",
        "':loop'",
        "\"Error: graph contains a negative weigth cycle!\"",
        "\"undefined\"",
        "\"Starting kargerStein...\"",
        "':loop'",
        "\"At least 2 nodes are required for KargerSteing algorithm!\"",
        "\"Starting pageRank...\"",
        "':loop'",
        "\"Stoped at iteration %s\"",
        "\"Result:\\n\"",
        "'use strict'",
        "'use strict'",
        "'class'",
        "'class'",
        "'class'",
        "''",
        "'class'",
        "'use strict'",
        "'use strict'",
        "'use strict'",
        "'data'",
        "'data'",
        "'data'",
        "'trigger'",
        "'id'",
        "'source'",
        "'target'",
        "'parent'",
        "'data'",
        "'data'",
        "'trigger'",
        "'id'",
        "'source'",
        "'target'",
        "'parent'",
        "'scratch'",
        "'scratch'",
        "'rscratch'",
        "'rscratch'",
        "'position'",
        "'position'",
        "'position'",
        "'rtrigger'",
        "'x'",
        "'y'",
        "'position'",
        "'position'",
        "'position'",
        "'position'",
        "'trigger'",
        "'x'",
        "'y'",
        "'position'",
        "'position'",
        "'padding-top'",
        "'padding-bottom'",
        "'padding-left'",
        "'padding-right'",
        "'width'",
        "'auto'",
        "'height'",
        "'auto'",
        "'position'",
        "'position'",
        "'auto'",
        "'auto'",
        "'border-width'",
        "'border-width'",
        "'nodes'",
        "'auto'",
        "'nodes'",
        "'auto'",
        "'border-width'",
        "'border-width'",
        "'nodes'",
        "'nodes'",
        "'display'",
        "'element'",
        "'nodes'",
        "'none'",
        "'width'",
        "'content'",
        "'font-size'",
        "'text-halign'",
        "'text-valign'",
        "'left'",
        "'center'",
        "'right'",
        "'top'",
        "'center'",
        "'bottom'",
        "'use strict'",
        "'degree'",
        "'degree'",
        "'indegree'",
        "'indegree'",
        "'outdegree'",
        "'outdegree'",
        "'use strict'",
        "'use strict'",
        "'use strict'",
        "'nodes'",
        "'edges'",
        "'use strict'",
        "'nodes'",
        "'z-index'",
        "'z-index'",
        "'nodes'",
        "'edges'",
        "'nodes'",
        "'edges'",
        "'use strict'",
        "'layoutstart'",
        "'layoutstop'",
        "'layoutstop'",
        "'layoutready'",
        "'layoutready'",
        "'layoutready'",
        "'layoutready'",
        "'layoutstop'",
        "'layoutstop'",
        "'use strict'",
        "'style'",
        "'style'",
        "'style'",
        "'style'",
        "'style'",
        "'style'",
        "'style'",
        "'display'",
        "'element'",
        "'display'",
        "'none'",
        "'visibility'",
        "'visible'",
        "'display'",
        "'element'",
        "'nodes'",
        "'visibility'",
        "'display'",
        "'visible'",
        "'element'",
        "'width'",
        "'auto'",
        "'height'",
        "'auto'",
        "'use strict'",
        "'locked'",
        "'lock'",
        "'unlock'",
        "'grabbable'",
        "'grabify'",
        "'ungrabify'",
        "'selected'",
        "'selectable'",
        "'select'",
        "'unselect'",
        "'selectable'",
        "'selectify'",
        "'unselectify'",
        "'active'",
        "'activate'",
        "'unactivate'",
        "'use strict'",
        "'target'",
        "'source'",
        "'source'",
        "'target'",
        "'source'",
        "'target'",
        "'source'",
        "'use strict'",
        "\"use strict\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"ERROR: Multiple items with the same id found: \"",
        "\"undefined\"",
        "\"undefined\"",
        "\"ERROR: Multiple items with the same id found: \"",
        "'use strict'",
        "'div'",
        "'absolute'",
        "'0'",
        "'hidden'",
        "'canvas'",
        "'2d'",
        "'absolute'",
        "'data-id'",
        "'layer'",
        "'data-id'",
        "'layer'",
        "'-node'",
        "'data-id'",
        "'layer'",
        "'-selectbox'",
        "'data-id'",
        "'layer'",
        "'-drag'",
        "'canvas'",
        "'2d'",
        "'absolute'",
        "'data-id'",
        "'buffer'",
        "'hidden'",
        "'undefined'",
        "'destroy'",
        "'add'",
        "'remove'",
        "'load'",
        "'viewport'",
        "'style'",
        "'load'",
        "'resize'",
        "'renderer'",
        "'canvas'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'arrow'",
        "'arrow'",
        "'arrow'",
        "'width'",
        "'triangle'",
        "'arrow'",
        "'triangle-backcurve'",
        "'triangle'",
        "'triangle'",
        "'width'",
        "'triangle-tee'",
        "'triangle-tee'",
        "'triangle-tee'",
        "'triangle-tee'",
        "'triangle-tee'",
        "'width'",
        "'half-triangle-overshot'",
        "'width'",
        "'none'",
        "'circle'",
        "'circle'",
        "'circle'",
        "'circle'",
        "'width'",
        "'circle'",
        "'width'",
        "'inhibitor'",
        "'inhibitor'",
        "'inhibitor'",
        "'tee'",
        "'inhibitor'",
        "'square'",
        "'square'",
        "'square'",
        "'width'",
        "'diamond'",
        "'diamond'",
        "'diamond'",
        "'width'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'border-width'",
        "'width'",
        "'self'",
        "'haystack'",
        "'haystack-radius'",
        "'straight'",
        "'bezier'",
        "'source-arrow-shape'",
        "'target-arrow-shape'",
        "'width'",
        "'width'",
        "'nodes'",
        "'border-width'",
        "'self'",
        "'width'",
        "'width'",
        "'width'",
        "'width'",
        "'bezier'",
        "'width'",
        "'width'",
        "'straight'",
        "'width'",
        "'width'",
        "'haystack'",
        "'shape'",
        "'rectangle'",
        "'roundrectangle'",
        "'rectangle'",
        "'padding-left'",
        "'padding-right'",
        "'padding-top'",
        "'padding-bottom'",
        "'self'",
        "'self'",
        "'bezier'",
        "'content'",
        "'text-halign'",
        "'text-valign'",
        "'left'",
        "'right'",
        "'top'",
        "'bottom'",
        "'content'",
        "'self'",
        "'straight'",
        "'bezier'",
        "'haystack'",
        "'content'",
        "'text-transform'",
        "'none'",
        "'uppercase'",
        "'lowercase'",
        "'font-style'",
        "'font-size'",
        "'px'",
        "'font-family'",
        "'font-weight'",
        "'div'",
        "'absolute'",
        "'-9999px'",
        "'-9999px'",
        "'-1'",
        "'hidden'",
        "'none'",
        "'0'",
        "'1'",
        "'nodes'",
        "'curve-style'",
        "'bezier'",
        "'curve-style'",
        "'unbundled-bezier'",
        "'none'",
        "'curve-style'",
        "'haystack'",
        "'-'",
        "'-'",
        "'unbundled'",
        "'border-width'",
        "'border-width'",
        "'control-point-step-size'",
        "'control-point-distance'",
        "'control-point-distance'",
        "'control-point-weight'",
        "'curve-style'",
        "'unbundled-bezier'",
        "'control-point-step-size'",
        "'self'",
        "'straight'",
        "'bezier'",
        "'width'",
        "'bezier'",
        "'straight'",
        "'haystack'",
        "'target-arrow-shape'",
        "'source-arrow-shape'",
        "'border-width'",
        "'border-width'",
        "'self'",
        "'straight'",
        "'bezier'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'bezier'",
        "'straight'",
        "'width'",
        "'overlay-padding'",
        "'overlay-opacity'",
        "'overlay-color'",
        "'round'",
        "'self'",
        "'butt'",
        "'line-color'",
        "'butt'",
        "'width'",
        "'solid'",
        "'line-style'",
        "'haystack'",
        "'haystack'",
        "'haystack-radius'",
        "'self'",
        "'straight'",
        "'haystack'",
        "'dotted'",
        "'dashed'",
        "'solid'",
        "'haystack'",
        "'-arrow-shape'",
        "'none'",
        "'destination-out'",
        "'-arrow-fill'",
        "'hollow'",
        "'both'",
        "'filled'",
        "'-arrow-fill'",
        "'half-triangle-overshot'",
        "'hollow'",
        "'hollow'",
        "'width'",
        "'-arrow-shape'",
        "'-arrow-color'",
        "'width'",
        "'-arrow-shape'",
        "'source'",
        "'self'",
        "'mid-target'",
        "'mid-source'",
        "'target'",
        "'$'",
        "'$'",
        "'$'",
        "'$'",
        "'filled'",
        "'both'",
        "'hollow'",
        "'both'",
        "'miter'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'load'",
        "'background-fit'",
        "'background-position-x'",
        "'background-position-y'",
        "'background-repeat'",
        "'background-clip'",
        "'node'",
        "'background-image-opacity'",
        "'contain'",
        "'cover'",
        "'%'",
        "'%'",
        "'no-repeat'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'content'",
        "'font-size'",
        "'min-zoomed-font-size'",
        "'center'",
        "'middle'",
        "'content'",
        "'font-size'",
        "'min-zoomed-font-size'",
        "'text-halign'",
        "'text-valign'",
        "'left'",
        "'right'",
        "'right'",
        "'left'",
        "'center'",
        "'top'",
        "'bottom'",
        "'bottom'",
        "'top'",
        "'middle'",
        "'font-style'",
        "'font-size'",
        "'px'",
        "'font-family'",
        "'font-weight'",
        "'text-opacity'",
        "'opacity'",
        "'text-outline-opacity'",
        "'color'",
        "'text-outline-color'",
        "' '",
        "' '",
        "' '",
        "'content'",
        "'text-transform'",
        "'none'",
        "'uppercase'",
        "'lowercase'",
        "'round'",
        "'text-outline-width'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'overlay-padding'",
        "'overlay-opacity'",
        "'overlay-color'",
        "'border-width'",
        "'background-color'",
        "'border-color'",
        "'border-style'",
        "'background-opacity'",
        "'opacity'",
        "'border-opacity'",
        "'opacity'",
        "'miter'",
        "'dotted'",
        "'dashed'",
        "'solid'",
        "'double'",
        "'background-image'",
        "'background-image'",
        "'shape'",
        "'$'",
        "'$'",
        "'background-blacken'",
        "'border-width'",
        "'double'",
        "'border-width'",
        "'destination-out'",
        "'roundrectangle'",
        "'pie-size'",
        "'%'",
        "'pie-'",
        "'-background-size'",
        "'pie-'",
        "'-background-color'",
        "'pie-'",
        "'-background-opacity'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'rgba('",
        "','",
        "','",
        "','",
        "')'",
        "'rgba('",
        "','",
        "','",
        "','",
        "')'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'motionBlur'",
        "'destination-out'",
        "'outside-texture-bg-color'",
        "'outside-texture-bg-opacity'",
        "'motionBlur'",
        "'motionBlur'",
        "'selection-box-border-width'",
        "\"rgba(\"",
        "'selection-box-color'",
        "\",\"",
        "'selection-box-color'",
        "\",\"",
        "'selection-box-color'",
        "\",\"",
        "'selection-box-opacity'",
        "\")\"",
        "\"rgba(\"",
        "'selection-box-border-color'",
        "\",\"",
        "'selection-box-border-color'",
        "\",\"",
        "'selection-box-border-color'",
        "\",\"",
        "'selection-box-opacity'",
        "\")\"",
        "\"rgba(\"",
        "'active-bg-color'",
        "\",\"",
        "'active-bg-color'",
        "\",\"",
        "'active-bg-color'",
        "\",\"",
        "'active-bg-opacity'",
        "\")\"",
        "'active-bg-size'",
        "'rgba(255, 0, 0, 0.75)'",
        "'rgba(255, 0, 0, 0.75)'",
        "'1 frame = '",
        "' ms = '",
        "' fps'",
        "'initrender'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'canvas'",
        "'2d'",
        "'canvas'",
        "'px'",
        "'px'",
        "'2d'",
        "'source-over'",
        "'image/png'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'opacity'",
        "'visibility'",
        "'visible'",
        "'display'",
        "'element'",
        "'undefined'",
        "'DOMNodeRemoved'",
        "'resize'",
        "'scroll'",
        "'contextmenu'",
        "'mousedown'",
        "'taphold'",
        "'taphold'",
        "'cxttapstart'",
        "'grab'",
        "'mousedown'",
        "'tapstart'",
        "'vmousedown'",
        "'mousedown'",
        "'tapstart'",
        "'vmousedown'",
        "'mousemove'",
        "'mousemove'",
        "'vmousemove'",
        "'tapdrag'",
        "'mousemove'",
        "'vmousemove'",
        "'tapdrag'",
        "'cxtdrag'",
        "'cxtdragout'",
        "'cxtdragover'",
        "'mouseout'",
        "'tapdragout'",
        "'mouseover'",
        "'tapdragover'",
        "'position drag'",
        "'mouseup'",
        "'cxttapend'",
        "'cxttap'",
        "'mouseup'",
        "'tapend'",
        "'vmouseup'",
        "'mouseup'",
        "'tapend'",
        "'vmouseup'",
        "'click'",
        "'tap'",
        "'vclick'",
        "'click'",
        "'tap'",
        "'vclick'",
        "'additive'",
        "':selected'",
        "'additive'",
        "':selected'",
        "'nodes'",
        "'edges'",
        "'free'",
        "'wheel'",
        "'scroll'",
        "'mouseout'",
        "'mouseout'",
        "'mouseover'",
        "'mouseover'",
        "'touchstart'",
        "'cxttapstart'",
        "'cxttapstart'",
        "'cxttapstart'",
        "'grab'",
        "'touchstart'",
        "'tapstart'",
        "'vmousdown'",
        "'touchstart'",
        "'tapstart'",
        "'vmousedown'",
        "'taphold'",
        "'taphold'",
        "':selected'",
        "'touchmove'",
        "'cxttapend'",
        "'cxtdrag'",
        "'cxtdragout'",
        "'cxtdragover'",
        "'free'",
        "'unactivate'",
        "'nodes'",
        "'position drag'",
        "'touchmove'",
        "'tapdrag'",
        "'vmousemove'",
        "'touchmove'",
        "'tapdrag'",
        "'vmousemove'",
        "'touchmove'",
        "'tapdrag'",
        "'vmousemove'",
        "'tapdragout'",
        "'tapdragover'",
        "'touchcancel'",
        "'touchend'",
        "'cxttapend'",
        "'cxttap'",
        "'single'",
        "':selected'",
        "'free'",
        "'node:selected'",
        "'touchend'",
        "'tapend'",
        "'vmouseup'",
        "'touchend'",
        "'tapend'",
        "'vmouseup'",
        "'touchend'",
        "'tapend'",
        "'vmouseup'",
        "'single'",
        "':selected'",
        "'tap'",
        "'vclick'",
        "'tap'",
        "'vclick'",
        "'use strict'",
        "'renderer'",
        "'canvas'",
        "'ellipse'",
        "'ellipse'",
        "'triangle'",
        "'triangle'",
        "'triangle'",
        "'triangle'",
        "'triangle'",
        "'triangle'",
        "'square'",
        "'square'",
        "'square'",
        "'square'",
        "'square'",
        "'square'",
        "'rectangle'",
        "'square'",
        "'octogon'",
        "'roundrectangle'",
        "'roundrectangle'",
        "'roundrectangle'",
        "'pentagon'",
        "'pentagon'",
        "'pentagon'",
        "'pentagon'",
        "'pentagon'",
        "'pentagon'",
        "'hexagon'",
        "'hexagon'",
        "'hexagon'",
        "'hexagon'",
        "'hexagon'",
        "'hexagon'",
        "'heptagon'",
        "'heptagon'",
        "'heptagon'",
        "'heptagon'",
        "'heptagon'",
        "'heptagon'",
        "'octagon'",
        "'octagon'",
        "'octagon'",
        "'octagon'",
        "'octagon'",
        "'octagon'",
        "'star5'",
        "'star'",
        "'star5'",
        "'star5'",
        "'star5'",
        "'star5'",
        "'star5'",
        "'use strict'",
        "'arbor'",
        "':parent'",
        "'layoutstart'",
        "'layoutready'",
        "'layoutready'",
        "'layoutstop'",
        "'layoutstop'",
        "'position'",
        "'layoutready'",
        "'layoutready'",
        "'grab free position'",
        "'grab'",
        "'free'",
        "'lock unlock'",
        "'remove'",
        "'add'",
        "'*'",
        "'resize'",
        "\":grabbable\"",
        "'position'",
        "'grab free position'",
        "'lock unlock'",
        "'remove'",
        "'add'",
        "'*'",
        "'resize'",
        "'layoutstop'",
        "'layoutstop'",
        "'layout'",
        "'arbor'",
        "'use strict'",
        "':parent'",
        "'target'",
        "'layout'",
        "'breadthfirst'",
        "'use strict'",
        "':parent'",
        "'layout'",
        "'circle'",
        "'use strict'",
        "'cola'",
        "'grab free position'",
        "'lock unlock'",
        "'layoutstop'",
        "'layoutstop'",
        "'layoutready'",
        "'layoutready'",
        "'tick'",
        "'end'",
        "':grabbable'",
        "'grab free position'",
        "'grab'",
        "'free'",
        "'lock unlock'",
        "'alignment'",
        "'x'",
        "'alignment'",
        "'y'",
        "'linkDistance'",
        "'symmetricDiffLinkLengths'",
        "'jaccardLinkLengths'",
        "'linkDistance'",
        "'y'",
        "'layoutstart'",
        "'layout'",
        "'cola'",
        "'use strict'",
        "':parent'",
        "'layout'",
        "'concentric'",
        "'use strict'",
        "'layoutstart'",
        "\"Layout manually stopped. Stopping computation in step \"",
        "\"New temperature: \"",
        "\"Temperature drop below minimum threshold. Stopping computation in step \"",
        "'Layout took '",
        "' ms'",
        "'layoutstop'",
        "'layoutstop'",
        "'id'",
        "'parent'",
        "'x'",
        "'y'",
        "'padding-left'",
        "'padding-right'",
        "'padding-top'",
        "'padding-bottom'",
        "'id'",
        "'source'",
        "'target'",
        "'LCA of nodes '",
        "' and '",
        "\". Index: \"",
        "\" Contents: \"",
        "\". Depth: \"",
        "\"layoutNodes:\"",
        "\"\\nindex: \"",
        "\"\\nId: \"",
        "\"\\nChildren: \"",
        "\"\\nparentId: \"",
        "\"\\npositionX: \"",
        "\"\\npositionY: \"",
        "\"\\nOffsetX: \"",
        "\"\\nOffsetY: \"",
        "\"\\npadLeft: \"",
        "\"\\npadRight: \"",
        "\"\\npadTop: \"",
        "\"\\npadBottom: \"",
        "'idToIndex'",
        "\"Id: \"",
        "\"\\nIndex: \"",
        "'Graph Set'",
        "\"Set : \"",
        "\": \"",
        "'IndexToGraph'",
        "\"\\nIndex : \"",
        "\" Graph: \"",
        "'Layout Edges'",
        "\"\\nEdge Index: \"",
        "\" ID: \"",
        "\" SouceID: \"",
        "\" TargetId: \"",
        "\" Ideal Length: \"",
        "\"nodeSize: \"",
        "\"\\nedgeSize: \"",
        "\"\\ntemperature: \"",
        "'Refreshing positions'",
        "'id'",
        "'id'",
        "\"Node: \"",
        "\". Refreshed position: (\"",
        "\", \"",
        "\").\"",
        "'Triggering layoutready'",
        "'layoutready'",
        "'layoutready'",
        "\"\\n\\n###############################\"",
        "\"\\nSTEP: \"",
        "\"\\n###############################\\n\"",
        "'calculateNodeForces'",
        "\"Set: \"",
        "\"Node repulsion. Node1: \"",
        "\" Node2: \"",
        "\"\\ndirectionX: \"",
        "\", directionY: \"",
        "\"\\nNodes have the same position.\"",
        "\"\\nNodes DO overlap.\"",
        "\"\\nOverlap: \"",
        "\"\\nDistance: \"",
        "\"\\nNodes do NOT overlap.\"",
        "\"\\nDistance: \"",
        "\"\\nForceX: \"",
        "\" ForceY: \"",
        "'Computing clipping point of node '",
        "\" . Height:  \"",
        "\", Width: \"",
        "\"\\nDirection \"",
        "\", \"",
        "\"\\nUp direction\"",
        "\"\\nDown direction\"",
        "\"\\nRightborder\"",
        "\"\\nLeftborder\"",
        "\"\\nTop border\"",
        "\"\\nBottom border\"",
        "\"\\nClipping point found at \"",
        "\", \"",
        "'Edge force between nodes '",
        "' and '",
        "\"\\nDistance: \"",
        "\" Force: (\"",
        "\", \"",
        "\")\"",
        "'calculateGravityForces'",
        "\"Set: \"",
        "\"Center found at: \"",
        "\", \"",
        "\"Node: \"",
        "\": Applied force: \"",
        "\", \"",
        "\": skypped since it's too close to center\"",
        "'propagateForces'",
        "\"Propagating offset from parent node : \"",
        "\". OffsetX: \"",
        "\". OffsetY: \"",
        "\"\\n Children: \"",
        "'Updating positions'",
        "\"Resetting boundaries of compound node: \"",
        "\"Skipping position update of node: \"",
        "\"Node: \"",
        "\" Previous position: (\"",
        "\", \"",
        "\").\"",
        "\" New Position: (\"",
        "\", \"",
        "\").\"",
        "\"Updating position, size of compound node \"",
        "\"\\nPositionX: \"",
        "\", PositionY: \"",
        "\"\\nWidth: \"",
        "\", Height: \"",
        "\"Limiting force: (\"",
        "\", \"",
        "\"). Max: \"",
        "\".\\nResult: (\"",
        "\", \"",
        "\")\"",
        "\"Propagating new position/size of node \"",
        "\". No parent node.\"",
        "\"\\nNew maxX for parent node \"",
        "\": \"",
        "\"\\nNew minX for parent node \"",
        "\": \"",
        "\"\\nNew maxY for parent node \"",
        "\": \"",
        "\"\\nNew minY for parent node \"",
        "\": \"",
        "\". No changes in boundaries/position of parent node \"",
        "'layout'",
        "'cose'",
        "'use strict'",
        "'dagre'",
        "':parent'",
        "'layout'",
        "'dagre'",
        "'use strict'",
        "':parent'",
        "'c-'",
        "'-'",
        "'c-'",
        "'-'",
        "'layout'",
        "'grid'",
        "'use strict'",
        "'layoutstart'",
        "'layoutready'",
        "'layoutready'",
        "'layoutstop'",
        "'layoutstop'",
        "'layout'",
        "'null'",
        "'use strict'",
        "'layout'",
        "'preset'",
        "'use strict'",
        "':parent'",
        "'layout'",
        "'random'",
        "'use strict'",
        "'Springy'",
        "'layoutstart'",
        "':parent'",
        "'springy'",
        "'springy'",
        "'springy'",
        "'springy'",
        "'position'",
        "'layoutready'",
        "'layoutready'",
        "'position'",
        "'springy'",
        "\":grabbable\"",
        "'drag position'",
        "'layoutstop'",
        "'layoutstop'",
        "'layout'",
        "'springy'",
        "'use strict'",
        "'renderer'",
        "'null'"
    ],
    "variables": [
        "cytoscape",
        "$$",
        "options",
        "name",
        "src",
        "copy",
        "copyIsArray",
        "clone",
        "target",
        "i",
        "length",
        "deep",
        "ret",
        "done",
        "fulfil",
        "checkWindow",
        "onCheckWindowDone",
        "checkCommonJs",
        "onCheckCommonJsDone",
        "checkAmd",
        "onCheckAmdDone",
        "impls",
        "gotImpl",
        "checkDone",
        "i",
        "i",
        "name",
        "index",
        "i",
        "leading",
        "trailing",
        "args",
        "maxTimeoutId",
        "result",
        "stamp",
        "thisArg",
        "timeoutId",
        "trailingCall",
        "lastCalled",
        "maxWait",
        "trailing",
        "leading",
        "delayed",
        "remaining",
        "isCalled",
        "trailingCall",
        "maxDelayed",
        "leadingCall",
        "remaining",
        "isCalled",
        "target",
        "empty",
        "array",
        "obj",
        "key",
        "keys",
        "l",
        "i",
        "key",
        "obj",
        "keys",
        "l",
        "i",
        "key",
        "obj",
        "keys",
        "l",
        "keepChildren",
        "i",
        "key",
        "lastKey",
        "ret",
        "i",
        "ch",
        "chLowerCase",
        "isUpperCase",
        "noUpperCases",
        "ret",
        "nextIsUpper",
        "i",
        "ch",
        "isDash",
        "first",
        "last",
        "shortHex",
        "r",
        "g",
        "b",
        "ret",
        "h",
        "s",
        "l",
        "a",
        "r",
        "g",
        "b",
        "m",
        "q",
        "p",
        "ret",
        "m",
        "isPct",
        "i",
        "channel",
        "atLeastOneIsPct",
        "allArePct",
        "alpha",
        "r",
        "g",
        "b",
        "hex",
        "raf",
        "dx",
        "dy",
        "cornerRadius",
        "halfWidth",
        "halfHeight",
        "straightLineIntersections",
        "topStartX",
        "topStartY",
        "topEndX",
        "topEndY",
        "topStartY",
        "rightStartX",
        "rightStartY",
        "rightEndX",
        "rightStartX",
        "rightEndY",
        "bottomStartX",
        "bottomStartY",
        "bottomEndX",
        "bottomEndY",
        "bottomStartY",
        "leftStartX",
        "leftStartY",
        "leftEndX",
        "leftStartX",
        "leftEndY",
        "arcIntersections",
        "topLeftCenterX",
        "topLeftCenterY",
        "topRightCenterX",
        "topRightCenterY",
        "bottomRightCenterX",
        "bottomRightCenterY",
        "bottomLeftCenterX",
        "bottomLeftCenterY",
        "cornerRadius",
        "hBoxTopLeftX",
        "hBoxTopLeftY",
        "hBoxBottomRightX",
        "hBoxBottomRightY",
        "vBoxTopLeftX",
        "vBoxTopLeftY",
        "vBoxBottomRightX",
        "vBoxBottomRightY",
        "boxMinX",
        "boxMaxX",
        "boxMinY",
        "boxMaxY",
        "midX",
        "midY",
        "boxMinX",
        "boxMinY",
        "boxMaxX",
        "boxMaxY",
        "curveMinX",
        "curveMinY",
        "curveMaxX",
        "curveMaxY",
        "x",
        "y",
        "t",
        "boxMinX",
        "boxMinY",
        "boxMaxX",
        "boxMaxY",
        "aX",
        "bX",
        "x1",
        "yValue",
        "aY",
        "bY",
        "y1",
        "xValue",
        "tLeft",
        "tRight",
        "tTop",
        "tBottom",
        "boxMinX",
        "boxMinY",
        "boxMaxX",
        "boxMaxY",
        "aX",
        "bX",
        "cX",
        "x1",
        "xIntervals",
        "leftParam",
        "rightParam",
        "discriminantX1",
        "tX1",
        "tX2",
        "sqrt",
        "discriminantX2",
        "tX3",
        "tX4",
        "sqrt",
        "aY",
        "bY",
        "cY",
        "y1",
        "yIntervals",
        "topParam",
        "bottomParam",
        "discriminantY1",
        "tY1",
        "tY2",
        "sqrt",
        "discriminantY2",
        "tY3",
        "tY4",
        "sqrt",
        "index",
        "yIndex",
        "t",
        "tolerance",
        "x1",
        "x2",
        "y1",
        "y2",
        "bb",
        "discriminant",
        "q",
        "r",
        "dum1",
        "s",
        "t",
        "term1",
        "r13",
        "a",
        "b",
        "c",
        "d",
        "roots",
        "zeroThreshold",
        "index",
        "minDistanceSquared",
        "closestParam",
        "curX",
        "curY",
        "distSquared",
        "i",
        "offset",
        "line",
        "lineSq",
        "hypSq",
        "dotProduct",
        "adjSq",
        "transformedPoints",
        "angle",
        "cos",
        "sin",
        "i",
        "points",
        "expandedLineSet",
        "x1",
        "y1",
        "x2",
        "y2",
        "y3",
        "up",
        "down",
        "i",
        "vertices",
        "currentLineStartX",
        "currentLineStartY",
        "currentLineEndX",
        "currentLineEndY",
        "nextLineStartX",
        "nextLineStartY",
        "nextLineEndX",
        "nextLineEndY",
        "i",
        "intersection",
        "expandedLineSet",
        "currentPointX",
        "currentPointY",
        "nextPointX",
        "nextPointY",
        "i",
        "offsetX",
        "offsetY",
        "offsetLength",
        "normalizedOffsetX",
        "normalizedOffsetY",
        "dispX",
        "dispY",
        "len",
        "newLength",
        "lenProportion",
        "d",
        "c",
        "f",
        "a",
        "b",
        "c",
        "discriminant",
        "t1",
        "t2",
        "tMin",
        "tMax",
        "inRangeParams",
        "nearIntersectionX",
        "nearIntersectionY",
        "farIntersectionX",
        "farIntersectionY",
        "displacementX",
        "displacementY",
        "distance",
        "unitDisplacementX",
        "unitDisplacementY",
        "maxSqDistance",
        "sqDistance",
        "i",
        "ua_t",
        "ub_t",
        "u_b",
        "ua",
        "ub",
        "oldX1",
        "x1",
        "oldY1",
        "y1",
        "west",
        "east",
        "north",
        "south",
        "oldX1",
        "x1",
        "oldY1",
        "y1",
        "transformedPoints",
        "angle",
        "cos",
        "sin",
        "i",
        "minTransformedX",
        "maxTransformedX",
        "minTransformedY",
        "maxTransformedY",
        "i",
        "points",
        "expandedLineSet",
        "i",
        "i",
        "currentX",
        "currentY",
        "nextX",
        "nextY",
        "intersections",
        "intersection",
        "transformedPoints",
        "i",
        "points",
        "expandedLineSet",
        "currentX",
        "currentY",
        "nextX",
        "nextY",
        "i",
        "disp",
        "length",
        "lenRatio",
        "points",
        "x",
        "y",
        "sides",
        "minX",
        "Infinity",
        "minY",
        "Infinity",
        "maxX",
        "maxY",
        "i",
        "sx",
        "sy",
        "i",
        "i",
        "increment",
        "startAngle",
        "points",
        "currentAngle",
        "x",
        "y",
        "i",
        "extensions",
        "modules",
        "impl",
        "layoutProto",
        "optLayoutFns",
        "i",
        "fnName",
        "cyReg",
        "d",
        "$this",
        "ready",
        "opts",
        "cy",
        "data",
        "readies",
        "options",
        "e",
        "e",
        "defaults",
        "p",
        "selfIsArrayLike",
        "all",
        "single",
        "ret",
        "valid",
        "i",
        "l",
        "obj",
        "name",
        "k",
        "v",
        "valid",
        "i",
        "l",
        "fn",
        "name",
        "ret",
        "defaults",
        "p",
        "selfIsArrayLike",
        "all",
        "keys",
        "l",
        "i",
        "key",
        "valid",
        "i_a",
        "l_a",
        "i_a",
        "l_a",
        "_privateFields",
        "validKeyToDelete",
        "defaults",
        "selfIsArrayLike",
        "all",
        "eventsIsString",
        "p",
        "i",
        "evt",
        "match",
        "listener",
        "j",
        "defaults",
        "selfIsArrayLike",
        "all",
        "eventsIsString",
        "i",
        "h",
        "evt",
        "match",
        "i",
        "listeners",
        "j",
        "listener",
        "nsMatches",
        "typeMatches",
        "cbMatches",
        "listenerMatches",
        "defaults",
        "selfIsArrayLike",
        "all",
        "eventsIsString",
        "eventsIsObject",
        "eventsIsEvent",
        "cy",
        "hasCompounds",
        "evts",
        "i",
        "evt",
        "match",
        "eventArgObj",
        "events",
        "i",
        "evtObj",
        "j",
        "triggerer",
        "listeners",
        "triggererIsElement",
        "bubbleUp",
        "evt",
        "pos",
        "zoom",
        "pan",
        "k",
        "lis",
        "nsMatches",
        "typeMatches",
        "targetMatches",
        "listenerMatches",
        "args",
        "binders",
        "l",
        "binder",
        "binderListeners",
        "m",
        "binderListener",
        "context",
        "ret",
        "parent",
        "hasParent",
        "defaults",
        "selfIsArrayLike",
        "all",
        "cy",
        "ele",
        "defaults",
        "selfIsArrayLike",
        "all",
        "cy",
        "i",
        "ele",
        "defaults",
        "cy",
        "defaults",
        "selfIsArrayLike",
        "all",
        "cy",
        "isCore",
        "isEles",
        "callTime",
        "style",
        "q",
        "propertiesEmpty",
        "rpos",
        "pan",
        "zoom",
        "panBy",
        "cyPan",
        "center",
        "centerPan",
        "fit",
        "fitVp",
        "i",
        "ele",
        "defaults",
        "selfIsArrayLike",
        "all",
        "cy",
        "i",
        "ele",
        "anis",
        "j",
        "animation",
        "fn",
        "collection",
        "currentSubject",
        "newQuery",
        "tokens",
        "cleanMetaChars",
        "ops",
        "i",
        "op",
        "ops",
        "i",
        "op",
        "exprs",
        "valueIsString",
        "childQuery",
        "descendantQuery",
        "j",
        "remaining",
        "selector",
        "i",
        "consumeExpr",
        "expr",
        "match",
        "name",
        "j",
        "e",
        "n",
        "m",
        "consumed",
        "consumeWhitespace",
        "match",
        "consumed",
        "check",
        "args",
        "j",
        "ret",
        "query",
        "parent",
        "child",
        "query",
        "ancestor",
        "descendant",
        "query",
        "j",
        "queryMatches",
        "cy",
        "allColonSelectorsMatch",
        "k",
        "sel",
        "allIdsMatch",
        "k",
        "id",
        "actualId",
        "allClassesMatch",
        "k",
        "cls",
        "operandsMatch",
        "allDataMatches",
        "k",
        "data",
        "value",
        "field",
        "matches",
        "fieldVal",
        "fieldStr",
        "valStr",
        "caseInsensitive",
        "notExpr",
        "handledNotExpr",
        "allDataMatches",
        "allMetaMatches",
        "matchesAny",
        "confirmRelations",
        "matches",
        "i",
        "cy",
        "selectorFunction",
        "j",
        "query",
        "filteredCollection",
        "j",
        "query",
        "clean",
        "queryToString",
        "group",
        "j",
        "data",
        "j",
        "meta",
        "j",
        "sel",
        "j",
        "sel",
        "j",
        "sel",
        "i",
        "query",
        "fn",
        "number",
        "rgba",
        "hsla",
        "hex3",
        "hex6",
        "data",
        "mapData",
        "t",
        "props",
        "i",
        "i",
        "prop",
        "fontFamily",
        "fontStyle",
        "fontWeight",
        "color",
        "textTransform",
        "fontSize",
        "i",
        "property",
        "passedValue",
        "value",
        "valueIsString",
        "data",
        "mapData",
        "layoutData",
        "mapLayoutData",
        "isLayout",
        "isLayout",
        "valueMin",
        "valueMax",
        "c1",
        "c2",
        "same",
        "units",
        "implicitUnits",
        "unitsRegex",
        "match",
        "i",
        "en",
        "ret",
        "props",
        "propsStr",
        "propsSplit",
        "i",
        "propName",
        "i",
        "en",
        "regex",
        "m",
        "selector",
        "i",
        "args",
        "arguments",
        "i",
        "prop",
        "mapVal",
        "property",
        "i",
        "currentSelectorIsCore",
        "ie",
        "ele",
        "cxtMeta",
        "cxtStyle",
        "app",
        "cache",
        "dualCxtKey",
        "cachedVal",
        "diffProps",
        "addedProp",
        "i",
        "cxt",
        "oldHasCxt",
        "newHasCxt",
        "cxtHasDiffed",
        "cxtHasMappedProps",
        "props",
        "j",
        "prop",
        "name",
        "laterCxtOverrides",
        "k",
        "laterCxt",
        "hasLaterCxt",
        "cxtKey",
        "diffProps",
        "prevKey",
        "i",
        "context",
        "contextSelectorMatches",
        "cxtKey",
        "cxtStyles",
        "style",
        "i",
        "cxt",
        "hasCxt",
        "j",
        "prop",
        "styProp",
        "diffProps",
        "retDiffProps",
        "i",
        "diffPropName",
        "cxtProp",
        "eleProp",
        "retDiffProp",
        "_p",
        "style",
        "hasPie",
        "i",
        "size",
        "transform",
        "content",
        "fStyle",
        "size",
        "family",
        "weight",
        "valign",
        "halign",
        "oWidth",
        "width",
        "height",
        "borderW",
        "cpss",
        "cpd",
        "cpw",
        "curve",
        "prop",
        "parsedProp",
        "style",
        "fieldVal",
        "flatProp",
        "propIsBypass",
        "origProp",
        "origPropIsBypass",
        "currentProp",
        "printMappingErr",
        "isLayout",
        "fields",
        "fieldVal",
        "i",
        "field",
        "percent",
        "r1",
        "r2",
        "g1",
        "g2",
        "b1",
        "b2",
        "a1",
        "a2",
        "clr",
        "calcValue",
        "isLayout",
        "fields",
        "fieldVal",
        "i",
        "field",
        "flatPropVal",
        "cy",
        "eles",
        "i",
        "ele",
        "style",
        "j",
        "prop",
        "propInStyle",
        "mapping",
        "style",
        "props",
        "duration",
        "delay",
        "css",
        "anyPrev",
        "i",
        "prop",
        "styProp",
        "diffProp",
        "prevProp",
        "fromProp",
        "prevProp",
        "toProp",
        "diff",
        "props",
        "isBypass",
        "i",
        "prop",
        "name",
        "parsedProp",
        "parsedProp",
        "specifiedProps",
        "name",
        "i",
        "prop",
        "name",
        "value",
        "parsedProp",
        "ret",
        "i",
        "ele",
        "style",
        "diffProps",
        "diffProp",
        "j",
        "prop",
        "prevProp",
        "i",
        "ele",
        "prop",
        "isBypass",
        "j",
        "ele",
        "diffProps",
        "style",
        "i",
        "prop",
        "name",
        "value",
        "parsedProp",
        "prevProp",
        "diffProp",
        "isBypass",
        "j",
        "ele",
        "diffProps",
        "style",
        "i",
        "name",
        "prop",
        "value",
        "parsedProp",
        "prevProp",
        "diffProp",
        "cy",
        "domElement",
        "pxAsStr",
        "px",
        "cy",
        "domElement",
        "propStr",
        "prop",
        "prop",
        "ele",
        "rstyle",
        "style",
        "cy",
        "zoom",
        "i",
        "prop",
        "styleProp",
        "val",
        "ele",
        "rstyle",
        "style",
        "i",
        "prop",
        "styleProp",
        "rstyle",
        "style",
        "i",
        "prop",
        "styleProp",
        "i",
        "context",
        "selector",
        "props",
        "value",
        "style",
        "style",
        "json",
        "i",
        "cxt",
        "selector",
        "props",
        "css",
        "j",
        "prop",
        "remaining",
        "selAndBlockStr",
        "blockRem",
        "propAndValStr",
        "nothingLeftToParse",
        "selAndBlock",
        "selectorStr",
        "selector",
        "blockStr",
        "invalidBlock",
        "props",
        "nothingLeftToParse",
        "propAndVal",
        "propStr",
        "valStr",
        "prop",
        "parsedProp",
        "i",
        "prop",
        "style",
        "style",
        "i",
        "i",
        "name",
        "j",
        "prop",
        "mapVal",
        "name",
        "value",
        "mapVal",
        "style",
        "i",
        "context",
        "selector",
        "props",
        "j",
        "prop",
        "isTouch",
        "defaults",
        "origDefaults",
        "fn",
        "cy",
        "container",
        "reg",
        "readies",
        "head",
        "options",
        "opts",
        "defVal",
        "_p",
        "selType",
        "i",
        "fn",
        "domEle",
        "parEle",
        "index",
        "elements",
        "id2index",
        "i",
        "ele",
        "id",
        "index",
        "alreadyInPool",
        "elements",
        "id2index",
        "i",
        "ele",
        "id",
        "index",
        "inPool",
        "j",
        "index",
        "jid",
        "json",
        "cy",
        "group",
        "cy",
        "_p",
        "q",
        "fn",
        "elements",
        "cy",
        "eles",
        "opts",
        "jsons",
        "i",
        "ele",
        "jsons",
        "opts",
        "elesByGroup",
        "opts",
        "jsons",
        "grs",
        "i",
        "il",
        "group",
        "elesArray",
        "j",
        "jl",
        "json",
        "json",
        "opts",
        "selector",
        "collection",
        "cy",
        "oldEles",
        "layoutOpts",
        "cy",
        "cy",
        "eles",
        "doneEles",
        "current",
        "queue",
        "ranAnis",
        "next",
        "completes",
        "i",
        "ani",
        "i",
        "ani",
        "complete",
        "e",
        "ele",
        "ranCoreAni",
        "toNotify",
        "updatedEles",
        "isCore",
        "isEles",
        "ele",
        "style",
        "pos",
        "startPosition",
        "startStyle",
        "pan",
        "startPan",
        "startZoom",
        "style",
        "properties",
        "startTime",
        "percent",
        "isEles",
        "startPos",
        "endPos",
        "pos",
        "startPan",
        "endPan",
        "pan",
        "animatingPan",
        "startZoom",
        "endZoom",
        "animatingZoom",
        "props",
        "i",
        "name",
        "prop",
        "end",
        "prop",
        "start",
        "easedVal",
        "start",
        "end",
        "c1",
        "start",
        "c2",
        "end",
        "ch",
        "diff",
        "min",
        "ch1",
        "r",
        "g",
        "b",
        "renderer",
        "layout",
        "name",
        "LayoutProto",
        "layout",
        "bEles",
        "bTypes",
        "i",
        "ele",
        "renderer",
        "p",
        "_p",
        "_p",
        "cy",
        "data",
        "ele",
        "r",
        "cy",
        "RendererProto",
        "nodes",
        "edges",
        "eles",
        "s",
        "_p",
        "args",
        "arguments",
        "pan",
        "dim",
        "val",
        "dims",
        "x",
        "y",
        "args",
        "arguments",
        "pan",
        "dim",
        "val",
        "dims",
        "x",
        "y",
        "viewportState",
        "_p",
        "bb",
        "sel",
        "elements",
        "bbe",
        "elements",
        "w",
        "h",
        "zoom",
        "pan",
        "pos",
        "zoom",
        "p",
        "pan",
        "z",
        "pan1",
        "zoom1",
        "zoom2",
        "zoom",
        "pan2",
        "posChanged",
        "_p",
        "zoomDefd",
        "panDefd",
        "events",
        "zoomFailed",
        "panFailed",
        "z",
        "p",
        "pan",
        "selector",
        "elements",
        "bb",
        "w",
        "h",
        "pan",
        "container",
        "container",
        "pan",
        "zoom",
        "rb",
        "b",
        "width",
        "height",
        "fn",
        "idFactory",
        "json",
        "group",
        "id",
        "rpos",
        "pan",
        "zoom",
        "classes",
        "i",
        "l",
        "cls",
        "ids",
        "indexes",
        "createdElements",
        "eles",
        "elesIds",
        "i",
        "l",
        "json",
        "data",
        "ele",
        "i",
        "l",
        "element",
        "id",
        "cy",
        "ele",
        "ele",
        "p",
        "json",
        "classes",
        "i",
        "cls",
        "jsons",
        "i",
        "ele",
        "json",
        "cy",
        "elesArr",
        "i",
        "ele",
        "json",
        "clone",
        "restored",
        "cy",
        "elements",
        "nodes",
        "edges",
        "numNodes",
        "numEdges",
        "i",
        "l",
        "ele",
        "i",
        "l",
        "ele",
        "_private",
        "data",
        "id",
        "edge",
        "ele",
        "fields",
        "fieldsLength",
        "badSourceOrTarget",
        "j",
        "field",
        "val",
        "src",
        "tgt",
        "i",
        "node",
        "data",
        "parentId",
        "specifiedParent",
        "parent",
        "selfAsParent",
        "ancestor",
        "parent",
        "toUpdateStyle",
        "ele",
        "ele",
        "removed",
        "elesToRemove",
        "elesToRemoveIds",
        "cy",
        "edges",
        "i",
        "children",
        "i",
        "alreadyAdded",
        "i",
        "l",
        "ele",
        "connectedEdges",
        "j",
        "connectedEdge",
        "children",
        "j",
        "i",
        "ele",
        "src",
        "tgt",
        "parent",
        "elesStillInside",
        "i",
        "ele",
        "removedElements",
        "checkedParentId",
        "i",
        "ele",
        "isNode",
        "parentId",
        "parent",
        "cy",
        "srcId",
        "tgtId",
        "srcExists",
        "tgtExists",
        "jsons",
        "i",
        "json",
        "parentId",
        "parentExists",
        "jsons",
        "descs",
        "descsEtc",
        "i",
        "json",
        "options",
        "std",
        "thisArg",
        "cy",
        "v",
        "Q",
        "connectedNodes",
        "connectedBy",
        "id2depth",
        "V",
        "j",
        "found",
        "nodes",
        "edges",
        "i",
        "v",
        "depth",
        "prevEdge",
        "prevNode",
        "ret",
        "vwEdges",
        "i",
        "e",
        "w",
        "connectedEles",
        "i",
        "node",
        "edge",
        "options",
        "std",
        "thisArg",
        "cy",
        "v",
        "S",
        "connectedNodes",
        "connectedBy",
        "id2depth",
        "discovered",
        "j",
        "found",
        "edges",
        "nodes",
        "i",
        "v",
        "depth",
        "prevEdge",
        "prevNode",
        "ret",
        "vwEdges",
        "i",
        "e",
        "w",
        "connectedEles",
        "i",
        "node",
        "edge",
        "i",
        "eles",
        "A",
        "forest",
        "nodes",
        "i",
        "edges",
        "S",
        "weightA",
        "weightB",
        "i",
        "edge",
        "u",
        "v",
        "setU",
        "setV",
        "options",
        "cy",
        "source",
        "dist",
        "prev",
        "knownDist",
        "edges",
        "nodes",
        "Q",
        "i",
        "valueFn",
        "heap",
        "distBetween",
        "uvs",
        "smallestDistance",
        "Infinity",
        "smallestEdge",
        "i",
        "edge",
        "weight",
        "smallestEl",
        "smalletsDist",
        "uid",
        "u",
        "neighbors",
        "i",
        "v",
        "vid",
        "vDist",
        "alt",
        "target",
        "target",
        "S",
        "u",
        "target",
        "p",
        "logDebug",
        "reconstructPath",
        "previous",
        "previousEdge",
        "findMin",
        "minPos",
        "tempScore",
        "i",
        "s",
        "debug",
        "debug",
        "cy",
        "source",
        "target",
        "heuristic",
        "heuristic",
        "weightFn",
        "weightFn",
        "directed",
        "directed",
        "closedSet",
        "openSet",
        "cameFrom",
        "cameFromEdge",
        "gScore",
        "fScore",
        "edges",
        "nodes",
        "steps",
        "minPos",
        "cMin",
        "rPath",
        "vwEdges",
        "i",
        "e",
        "w",
        "tempScore",
        "logDebug",
        "debug",
        "debug",
        "cy",
        "weightFn",
        "weightFn",
        "directed",
        "directed",
        "edges",
        "nodes",
        "numNodes",
        "id2position",
        "i",
        "dist",
        "i",
        "newRow",
        "j",
        "next",
        "edgeNext",
        "initMatrix",
        "i",
        "newRow",
        "j",
        "i",
        "sourceIndex",
        "targetIndex",
        "weight",
        "i",
        "sourceIndex",
        "targetIndex",
        "weight",
        "k",
        "i",
        "j",
        "position2id",
        "i",
        "res",
        "fromId",
        "fromId",
        "toId",
        "toId",
        "reconstructPathAux",
        "path",
        "prev",
        "edge",
        "fromId",
        "fromId",
        "toId",
        "toId",
        "pathArr",
        "logDebug",
        "debug",
        "debug",
        "weightFn",
        "weightFn",
        "directed",
        "directed",
        "source",
        "source",
        "cy",
        "edges",
        "nodes",
        "numNodes",
        "id2position",
        "i",
        "cost",
        "predecessor",
        "predEdge",
        "i",
        "flag",
        "i",
        "e",
        "sourceIndex",
        "targetIndex",
        "weight",
        "temp",
        "temp",
        "e",
        "sourceIndex",
        "targetIndex",
        "weight",
        "position2id",
        "i",
        "res",
        "toId",
        "toId",
        "reconstructPathAux",
        "predPos",
        "toId",
        "toId",
        "path",
        "res",
        "logDebug",
        "colapse",
        "edgeInfo",
        "sourceIn",
        "targetIn",
        "partition1",
        "partition2",
        "newEdges",
        "i",
        "edge",
        "i",
        "contractUntil",
        "edgeIndex",
        "newEdges",
        "debug",
        "debug",
        "cy",
        "edges",
        "nodes",
        "numNodes",
        "numEdges",
        "numIter",
        "stopSize",
        "id2position",
        "i",
        "edgeIndexes",
        "i",
        "e",
        "minCutSize",
        "Infinity",
        "minCut",
        "originalMetaNode",
        "i",
        "iter",
        "metaNodeMap",
        "edgesState",
        "metaNodeMap2",
        "res1",
        "res2",
        "resEdges",
        "partition1",
        "partition2",
        "witnessNodePartition",
        "i",
        "partitionId",
        "ret",
        "normalizeVector",
        "length",
        "total",
        "i",
        "i",
        "logDebug",
        "debug",
        "debug",
        "dampingFactor",
        "dampingFactor",
        "epsilon",
        "epsilon",
        "numIter",
        "numIter",
        "weightFn",
        "weightFn",
        "cy",
        "edges",
        "nodes",
        "numNodes",
        "numEdges",
        "id2position",
        "i",
        "matrix",
        "columnSum",
        "additionalProb",
        "i",
        "newRow",
        "j",
        "i",
        "edge",
        "s",
        "t",
        "w",
        "p",
        "j",
        "i",
        "i",
        "eigenvector",
        "nullVector",
        "previous",
        "i",
        "iter",
        "temp",
        "i",
        "j",
        "diff",
        "i",
        "res",
        "nodeId",
        "nodeId",
        "eles",
        "changed",
        "fn",
        "i",
        "ele",
        "eleChanged",
        "j",
        "cls",
        "hasClass",
        "j",
        "cls",
        "hasClass",
        "j",
        "cls",
        "hasClass",
        "changed",
        "i",
        "cls",
        "j",
        "ele",
        "hasClass",
        "ele",
        "classes",
        "changed",
        "i",
        "il",
        "ele",
        "j",
        "cls",
        "hasClass",
        "shouldAdd",
        "changed",
        "i",
        "ele",
        "j",
        "cls",
        "hasClass",
        "i",
        "ret",
        "i",
        "ret",
        "parents",
        "cy",
        "i",
        "ele",
        "parent",
        "parents",
        "eles",
        "i",
        "ele",
        "ancestors",
        "i",
        "ele",
        "parents",
        "children",
        "i",
        "ele",
        "ele",
        "ele",
        "elements",
        "i",
        "ele",
        "borderWidthMultiplier",
        "borderWidthAdjustment",
        "ele",
        "updatedEles",
        "fn",
        "pos",
        "i",
        "ele",
        "pos",
        "elePos",
        "updatedEles",
        "toTrigger",
        "cy",
        "updated",
        "children",
        "style",
        "bb",
        "padding",
        "pos",
        "didUpdate",
        "eles",
        "i",
        "ele",
        "ele",
        "cy",
        "zoom",
        "pan",
        "rpos",
        "setting",
        "i",
        "ele",
        "pos",
        "ele",
        "cy",
        "ppos",
        "setting",
        "hasCompoundNodes",
        "i",
        "ele",
        "parent",
        "hasParent",
        "relativeToParent",
        "hasParent",
        "origin",
        "pos",
        "parent",
        "hasParent",
        "relativeToParent",
        "hasParent",
        "origin",
        "ele",
        "cy",
        "styleEnabled",
        "w",
        "ele",
        "cy",
        "styleEnabled",
        "style",
        "width",
        "border",
        "ele",
        "width",
        "ele",
        "owidth",
        "ele",
        "cy",
        "styleEnabled",
        "h",
        "ele",
        "cy",
        "styleEnabled",
        "style",
        "height",
        "border",
        "ele",
        "height",
        "ele",
        "oheight",
        "bb",
        "cy",
        "zoom",
        "pan",
        "x1",
        "x2",
        "y1",
        "y2",
        "eles",
        "cy",
        "cy_p",
        "styleEnabled",
        "includeNodes",
        "includeEdges",
        "includeLabels",
        "x1",
        "Infinity",
        "x2",
        "y1",
        "Infinity",
        "y2",
        "i",
        "ele",
        "_p",
        "display",
        "isNode",
        "ex1",
        "ex2",
        "ey1",
        "ey2",
        "x",
        "y",
        "includedEle",
        "pos",
        "w",
        "halfW",
        "h",
        "halfH",
        "n1pos",
        "n2pos",
        "rstyle",
        "temp",
        "ex1",
        "temp",
        "ey1",
        "bpts",
        "w",
        "wHalf",
        "j",
        "bpt",
        "style",
        "rstyle",
        "label",
        "fontSize",
        "halign",
        "valign",
        "labelWidth",
        "labelHeight",
        "labelX",
        "labelY",
        "lh",
        "labelHeight",
        "lw",
        "labelWidth",
        "lx1",
        "lx2",
        "ly1",
        "ly2",
        "degree",
        "node",
        "connectedEdges",
        "i",
        "edge",
        "ret",
        "nodes",
        "i",
        "ele",
        "degree",
        "total",
        "nodes",
        "i",
        "cy",
        "elements",
        "i",
        "ele",
        "cy",
        "elements",
        "i",
        "element",
        "remove",
        "cy",
        "selector",
        "other",
        "elements",
        "col1",
        "col2",
        "other",
        "col1Smaller",
        "ids2",
        "col",
        "i",
        "id",
        "ele",
        "cy",
        "selector",
        "toAdd",
        "elements",
        "i",
        "i",
        "add",
        "_p",
        "cy",
        "selector",
        "toAdd",
        "i",
        "toAddEle",
        "id",
        "add",
        "index",
        "_p",
        "id",
        "i",
        "unmergedLastEle",
        "lastEleI",
        "lastEle",
        "cy",
        "selector",
        "toRemove",
        "i",
        "arr",
        "eles",
        "i",
        "ele",
        "ret",
        "filterEles",
        "eles",
        "cy",
        "i",
        "ele",
        "include",
        "max",
        "maxEle",
        "eles",
        "i",
        "ele",
        "val",
        "min",
        "Infinity",
        "minEle",
        "eles",
        "i",
        "ele",
        "val",
        "ele",
        "i",
        "ele",
        "ret",
        "i",
        "ele",
        "ret",
        "array",
        "i",
        "array",
        "thisSize",
        "i",
        "start",
        "cy",
        "sorted",
        "ele",
        "_p",
        "group",
        "src",
        "tgt",
        "srcDepth",
        "tgtDepth",
        "cy",
        "a_p",
        "b_p",
        "zDiff",
        "depthA",
        "depthB",
        "hasCompoundNodes",
        "aIsNode",
        "aIsEdge",
        "bIsNode",
        "bIsEdge",
        "depthDiff",
        "sameDepth",
        "nodes",
        "cy",
        "i",
        "node",
        "lastNode",
        "newPos",
        "pos",
        "cy",
        "cy",
        "cy",
        "bEles",
        "i",
        "ele",
        "style",
        "updatedCompounds",
        "toNotify",
        "cy",
        "style",
        "updatedCompounds",
        "toNotify",
        "cy",
        "ele",
        "renstyle",
        "cy",
        "updateTransitions",
        "style",
        "props",
        "name",
        "updatedCompounds",
        "toNotify",
        "ele",
        "updatedCompounds",
        "toNotify",
        "ele",
        "cy",
        "updateTransitions",
        "style",
        "eles",
        "i",
        "ele",
        "i",
        "ele",
        "updatedCompounds",
        "toNotify",
        "cy",
        "ele",
        "hasCompoundNodes",
        "style",
        "parents",
        "i",
        "parent",
        "pStyle",
        "pVis",
        "pDis",
        "src",
        "tgt",
        "ele",
        "cy",
        "hasCompoundNodes",
        "ele",
        "_p",
        "parentOpacity",
        "parents",
        "i",
        "parent",
        "opacity",
        "ele",
        "hasCompoundNodes",
        "cy",
        "ele",
        "autoW",
        "autoH",
        "args",
        "arguments",
        "data",
        "handler",
        "handler",
        "i",
        "ele",
        "able",
        "overrideAble",
        "ele",
        "val",
        "ele",
        "ele",
        "eles",
        "roots",
        "i",
        "ele",
        "hasEdgesPointingIn",
        "eles",
        "leaves",
        "i",
        "ele",
        "hasEdgesPointingOut",
        "eles",
        "oEles",
        "i",
        "ele",
        "eleId",
        "edges",
        "j",
        "edge",
        "srcId",
        "tgtId",
        "eles",
        "sEles",
        "sElesIds",
        "outgoers",
        "newOutgoers",
        "i",
        "outgoer",
        "outgoerId",
        "eles",
        "oEles",
        "i",
        "ele",
        "eleId",
        "edges",
        "j",
        "edge",
        "srcId",
        "tgtId",
        "eles",
        "pEles",
        "pElesIds",
        "incomers",
        "newIncomers",
        "i",
        "incomer",
        "incomerId",
        "elements",
        "cy",
        "nodes",
        "i",
        "node",
        "connectedEdges",
        "j",
        "edge",
        "otherNode",
        "ele",
        "src",
        "ele",
        "tgt",
        "sources",
        "cy",
        "i",
        "ele",
        "src",
        "elements",
        "cy",
        "p",
        "edges",
        "thisIds",
        "i",
        "edge",
        "foundId",
        "edgeData",
        "idToFind",
        "retEles",
        "cy",
        "eles",
        "i",
        "node",
        "edges",
        "j",
        "edge",
        "retEles",
        "cy",
        "eles",
        "i",
        "edge",
        "defaults",
        "cy",
        "elements",
        "edges",
        "p",
        "i",
        "edge1",
        "src1",
        "srcid1",
        "tgt1",
        "tgtid1",
        "srcEdges1",
        "j",
        "edge2",
        "edge2data",
        "tgtid2",
        "srcid2",
        "codirected",
        "oppdirected",
        "sourceHeap",
        "pointers",
        "elements",
        "i",
        "id",
        "heap",
        "elesLen",
        "fn",
        "result",
        "resultArray",
        "sourceEles",
        "i",
        "id",
        "ele",
        "array",
        "arrlen",
        "i",
        "left",
        "right",
        "lCheck",
        "rCheck",
        "comparator",
        "heap",
        "pointers",
        "elements",
        "swapValue",
        "swapElems",
        "idI",
        "idJ",
        "treeLen",
        "condHeap",
        "array",
        "current",
        "left",
        "right",
        "best",
        "comparator",
        "parent",
        "elements",
        "elsize",
        "element",
        "elindex",
        "elvalue",
        "elid",
        "i",
        "elementIndex",
        "elements",
        "i",
        "elementId",
        "top",
        "lastIndex",
        "removeCandidate",
        "removeValue",
        "remId",
        "parent",
        "array",
        "condHeap",
        "elements",
        "i",
        "elementId",
        "elementIndex",
        "elementValue",
        "elements",
        "i",
        "elementId",
        "elementIndex",
        "lastIndex",
        "removeCandidate",
        "removeValue",
        "remId",
        "containerStyle",
        "i",
        "i",
        "pathsImpld",
        "types",
        "i",
        "i",
        "binding",
        "b",
        "binding",
        "CanvasRenderer",
        "rendFunc",
        "arrowShapes",
        "bbCollide",
        "x1",
        "x2",
        "y1",
        "y2",
        "transform",
        "xRotated",
        "yRotated",
        "xScaled",
        "yScaled",
        "xTranslated",
        "yTranslated",
        "points",
        "points",
        "i",
        "pt",
        "points",
        "points",
        "firstPt",
        "i",
        "pt",
        "ctrlPt",
        "ctrlPtTrans",
        "triPts",
        "teePts",
        "inside",
        "triPts",
        "i",
        "pt",
        "teePts",
        "firstTeePt",
        "i",
        "pt",
        "points",
        "points",
        "i",
        "pt",
        "aspectRatio",
        "points",
        "points",
        "i",
        "pt",
        "points",
        "points",
        "i",
        "pt",
        "points",
        "points",
        "i",
        "pt",
        "CanvasRenderer",
        "data",
        "cy",
        "data",
        "cy",
        "data",
        "cy",
        "data",
        "cy",
        "CanvasRenderer",
        "offsets",
        "offsetLeft",
        "offsetTop",
        "x",
        "y",
        "container",
        "bb",
        "eles",
        "near",
        "isTouch",
        "zoom",
        "hasCompounds",
        "edgeThreshold",
        "nodeThreshold",
        "width",
        "height",
        "hw",
        "hh",
        "pos",
        "visible",
        "shape",
        "borderWO",
        "rs",
        "style",
        "width",
        "widthSq",
        "width2",
        "src",
        "tgt",
        "inEdgeBB",
        "passedVisibilityCheck",
        "passesVisibilityCheck",
        "visible",
        "radius",
        "halfRadius",
        "tgtPos",
        "tgtW",
        "tgtH",
        "srcPos",
        "srcW",
        "srcH",
        "startX",
        "startY",
        "endX",
        "endY",
        "srcShape",
        "tgtShape",
        "src",
        "tgt",
        "tgtPos",
        "srcPos",
        "srcArW",
        "srcArH",
        "tgtArW",
        "srcArW",
        "tgtArH",
        "srcArH",
        "i",
        "ele",
        "nodes",
        "edges",
        "box",
        "x1c",
        "x2c",
        "y1c",
        "y2c",
        "heur",
        "i",
        "pos",
        "nShape",
        "w",
        "h",
        "border",
        "shapeObj",
        "i",
        "rs",
        "tgt",
        "tgtPos",
        "src",
        "srcPos",
        "startX",
        "startY",
        "endX",
        "endY",
        "startInBox",
        "endInBox",
        "shape",
        "left",
        "right",
        "top",
        "bottom",
        "lastNodes",
        "lastEdges",
        "nodes",
        "edges",
        "eles",
        "i",
        "i",
        "qbezierAt",
        "rs",
        "bpts",
        "mid",
        "content",
        "textX",
        "textY",
        "nodeWidth",
        "nodeHeight",
        "nodePos",
        "textHalign",
        "textValign",
        "rs",
        "rstyle",
        "content",
        "textX",
        "textY",
        "edgeCenterX",
        "edgeCenterY",
        "rs",
        "rstyle",
        "srcPos",
        "tgtPos",
        "rs",
        "rstyle",
        "text",
        "labelDims",
        "style",
        "text",
        "textTransform",
        "r",
        "style",
        "fStyle",
        "size",
        "family",
        "weight",
        "cacheKey",
        "cache",
        "div",
        "ds",
        "edges",
        "nodes",
        "handledEdge",
        "i",
        "ele",
        "_p",
        "rs",
        "rstyle",
        "id",
        "bbStyleSame",
        "labelStyleSame",
        "styleSame",
        "pos",
        "posSame",
        "srcPos",
        "tgtPos",
        "srcSame",
        "tgtSame",
        "positionsSame",
        "curveType",
        "parallelEdges",
        "i",
        "pEdge",
        "pId",
        "i",
        "i",
        "hashTable",
        "pairIds",
        "haystackEdges",
        "pairId",
        "i",
        "edge",
        "style",
        "edgeIsUnbundled",
        "srcId",
        "tgtId",
        "src",
        "tgt",
        "srcPos",
        "tgtPos",
        "srcW",
        "srcH",
        "tgtW",
        "tgtH",
        "srcShape",
        "tgtShape",
        "srcBorder",
        "tgtBorder",
        "vectorNormInverse",
        "badBezier",
        "p",
        "pairEdges",
        "temp",
        "src",
        "srcOutside",
        "tgtOutside",
        "midptSrcPts",
        "dy",
        "dx",
        "l",
        "vector",
        "vectorNorm",
        "edge",
        "rs",
        "i",
        "edgeIndex1",
        "edgeIndex2",
        "i",
        "numEdges1",
        "numEdges2",
        "eStyle",
        "stepSize",
        "stepDist",
        "stepWeight",
        "edgeIsUnbundled",
        "srcX1",
        "srcX2",
        "srcY1",
        "srcY2",
        "srcW1",
        "srcW2",
        "srcH1",
        "srcH2",
        "tgtX1",
        "tgtX2",
        "tgtY1",
        "tgtY2",
        "tgtW1",
        "tgtW2",
        "tgtH1",
        "tgtH2",
        "width1",
        "width2",
        "j",
        "i",
        "loopDist",
        "stepSize",
        "normStepDist",
        "manStepDist",
        "sign",
        "distanceFromMidpoint",
        "w1",
        "w2",
        "stepWeight",
        "swappedDirection",
        "adjustedMidpt",
        "badStart",
        "badAStart",
        "badEnd",
        "badAEnd",
        "minCpADistFactor",
        "arrowW",
        "minCpADist",
        "startACpDist",
        "closeStartACp",
        "endACpDist",
        "closeEndACp",
        "overlapping",
        "cpD",
        "cpL",
        "cpM",
        "radius",
        "cpProj",
        "srcCtrlPtIntn",
        "cpD",
        "cpL",
        "cpM",
        "radius",
        "cpProj",
        "tgtCtrlPtIntn",
        "i",
        "edge",
        "rscratch",
        "angle",
        "angle",
        "intersect",
        "source",
        "target",
        "tgtArShape",
        "srcArShape",
        "tgtBorderW",
        "srcBorderW",
        "rs",
        "cp",
        "arrowEnd",
        "edgeEnd",
        "cp",
        "arrowStart",
        "edgeStart",
        "arrowEnd",
        "edgeEnd",
        "arrowStart",
        "edgeStart",
        "cp",
        "arrowEnd",
        "edgeEnd",
        "arrowStart",
        "edgeStart",
        "edges",
        "hashTable",
        "adjacentEdges",
        "i",
        "i",
        "cache",
        "cachedVal",
        "CanvasRenderer",
        "rs",
        "usePaths",
        "style",
        "overlayPadding",
        "overlayOpacity",
        "overlayColor",
        "lineColor",
        "startNode",
        "endNode",
        "source",
        "target",
        "targetPos",
        "targetW",
        "targetH",
        "sourcePos",
        "sourceW",
        "sourceH",
        "edgeWidth",
        "lineStyle",
        "radius",
        "halfRadius",
        "details",
        "points",
        "details",
        "nodeDirectionX",
        "nodeDirectionY",
        "edgeDirectionX",
        "edgeDirectionY",
        "details",
        "rs",
        "details",
        "rs",
        "rs",
        "canvasCxt",
        "context",
        "path",
        "pathCacheHit",
        "usePaths",
        "pathCacheKey",
        "pts",
        "keyLengthMatches",
        "keyMatches",
        "keyLengthMatches",
        "i",
        "rs",
        "isHaystack",
        "dispX",
        "dispY",
        "startX",
        "startY",
        "endX",
        "endY",
        "srcPos",
        "tgtPos",
        "style",
        "arrowShape",
        "gco",
        "arrowClearFill",
        "arrowFill",
        "color",
        "midX",
        "midY",
        "usePaths",
        "rs",
        "pathCacheHit",
        "path",
        "canvasContext",
        "context",
        "translation",
        "angle",
        "size",
        "shapeImpl",
        "pathCacheKey",
        "alreadyCached",
        "CanvasRenderer",
        "r",
        "imageCache",
        "cache",
        "image",
        "r",
        "nodeX",
        "nodeY",
        "style",
        "fit",
        "xPos",
        "yPos",
        "repeat",
        "nodeW",
        "nodeH",
        "rs",
        "clip",
        "shouldClip",
        "imgOpacity",
        "w",
        "h",
        "scale",
        "scale",
        "x",
        "y",
        "gAlpha",
        "pattern",
        "CanvasRenderer",
        "text",
        "computedSize",
        "minSize",
        "rs",
        "text",
        "computedSize",
        "minSize",
        "textHalign",
        "textValign",
        "rs",
        "cache",
        "i",
        "parentOpacity",
        "style",
        "labelStyle",
        "labelSize",
        "labelFamily",
        "labelWeight",
        "opacity",
        "outlineOpacity",
        "color",
        "outlineColor",
        "fontCacheKey",
        "cache",
        "text",
        "textTransform",
        "style",
        "parentOpacity",
        "text",
        "lineWidth",
        "CanvasRenderer",
        "r",
        "nodeWidth",
        "nodeHeight",
        "style",
        "rs",
        "usePaths",
        "canvasContext",
        "context",
        "path",
        "pathCacheHit",
        "overlayPadding",
        "overlayOpacity",
        "overlayColor",
        "parentOpacity",
        "bgColor",
        "borderColor",
        "borderStyle",
        "url",
        "styleShape",
        "pos",
        "pathCacheKey",
        "npos",
        "pos",
        "image",
        "darkness",
        "borderWidth",
        "gco",
        "pieSize",
        "nodeW",
        "nodeH",
        "x",
        "y",
        "radius",
        "lastPercent",
        "usePaths",
        "i",
        "size",
        "color",
        "opacity",
        "percent",
        "angleStart",
        "angleDelta",
        "angleEnd",
        "CanvasRenderer",
        "context",
        "backingStore",
        "caches",
        "needToCreateCache",
        "cache",
        "i",
        "data",
        "width",
        "height",
        "pixelRatio",
        "canvasWidth",
        "canvasHeight",
        "canvas",
        "canvasContainer",
        "i",
        "i",
        "forcedContext",
        "drawAllLayers",
        "drawOnlyNodeLayer",
        "forcedZoom",
        "forcedPan",
        "r",
        "pixelRatio",
        "cy",
        "data",
        "needDraw",
        "motionBlur",
        "minRedrawLimit",
        "maxRedrawLimit",
        "redrawLimit",
        "nowTime",
        "timeElapsed",
        "callAfterLimit",
        "startTime",
        "edges",
        "coreStyle",
        "zoom",
        "effectiveZoom",
        "pan",
        "effectivePan",
        "eles",
        "gco",
        "textureDraw",
        "bb",
        "cxt",
        "vp",
        "context",
        "texture",
        "vp",
        "outsideBgColor",
        "outsideBgOpacity",
        "zoom",
        "vpManip",
        "hideEdges",
        "hideLabels",
        "zEles",
        "extent",
        "i",
        "ele",
        "bb",
        "insideExtent",
        "eles",
        "i",
        "ele",
        "nodeLayerNeedsMotionClear",
        "context",
        "context",
        "context",
        "zoom",
        "borderWidth",
        "zoom",
        "pos",
        "timeToRender",
        "fps",
        "maxFps",
        "endTime",
        "CanvasRenderer",
        "halfW",
        "halfH",
        "i",
        "halfWidth",
        "halfHeight",
        "cornerRadius",
        "CanvasRenderer",
        "buffer",
        "data",
        "cy",
        "bb",
        "width",
        "height",
        "scale",
        "buffCanvas",
        "buffCxt",
        "cyPan",
        "pan",
        "zoom",
        "CanvasRenderer",
        "r",
        "getDragListIds",
        "listHasId",
        "i",
        "ele",
        "addDescendantsToDrag",
        "listHasId",
        "innerNodes",
        "i",
        "iNode",
        "_p",
        "edges",
        "j",
        "addNodeToDrag",
        "_p",
        "listHasId",
        "edges",
        "i",
        "updateAncestorsInDragLayer",
        "parent",
        "node",
        "nodes",
        "edges",
        "listHasId",
        "i",
        "j",
        "i",
        "mutn",
        "rNodes",
        "j",
        "rNode",
        "invalCtnrBBOnScroll",
        "bbCtnr",
        "inBoxSelection",
        "cy",
        "pos",
        "select",
        "near",
        "draggedElements",
        "checkForTaphold",
        "ele",
        "cxtEvt",
        "grabEvent",
        "selectedNodes",
        "i",
        "timeUntilActive",
        "preventDefault",
        "capture",
        "containerPageCoords",
        "cyContainer",
        "target",
        "tParent",
        "containerIsTarget",
        "cy",
        "zoom",
        "pan",
        "pos",
        "select",
        "near",
        "last",
        "down",
        "disp",
        "draggedElements",
        "dx",
        "dx2",
        "dy",
        "dy2",
        "dist2",
        "rdist2",
        "updateDragDelta",
        "dragDelta",
        "cxtEvt",
        "deltaP",
        "mdPos",
        "justStartedDrag",
        "toTrigger",
        "i",
        "dEle",
        "dPos",
        "dragDelta",
        "tcol",
        "capture",
        "cy",
        "pos",
        "select",
        "near",
        "draggedElements",
        "down",
        "shiftDown",
        "cxtEvt",
        "cxtTap",
        "newlySelected",
        "box",
        "i",
        "newlySelCol",
        "i",
        "sEdges",
        "j",
        "wheelHandler",
        "cy",
        "pos",
        "rpos",
        "diff",
        "needsWheelFix",
        "pos",
        "pos",
        "f1x1",
        "f1y1",
        "f2x1",
        "f2y1",
        "distance1",
        "distance1Sq",
        "center1",
        "modelCenter1",
        "offsetLeft",
        "offsetTop",
        "containerWidth",
        "containerHeight",
        "twoFingersStartInside",
        "distance",
        "distanceSq",
        "cy",
        "nodes",
        "edges",
        "now",
        "earlier",
        "pos",
        "pos",
        "pos",
        "release",
        "i",
        "offsets",
        "pan",
        "zoom",
        "cxtDistThreshold",
        "cxtDistThresholdSq",
        "near1",
        "near2",
        "near",
        "draggedEles",
        "selectedNodes",
        "k",
        "selectedNode",
        "i",
        "select",
        "capture",
        "cy",
        "now",
        "earlier",
        "zoom",
        "pos",
        "pos",
        "pos",
        "disp",
        "j",
        "startPos",
        "dx",
        "dx2",
        "dy",
        "dy2",
        "dist2",
        "rdist2",
        "f1x2",
        "f1y2",
        "f2x2",
        "f2y2",
        "distance2Sq",
        "factorSq",
        "distThreshold",
        "distThresholdSq",
        "factorThreshold",
        "factorThresholdSq",
        "cxtEvt",
        "cxtEvt",
        "near",
        "draggedEles",
        "i",
        "f1x2",
        "f1y2",
        "f2x2",
        "f2y2",
        "distance2",
        "factor",
        "df1x",
        "df1y",
        "df2x",
        "df2y",
        "tx",
        "ty",
        "zoom1",
        "zoom2",
        "pan1",
        "ctrx",
        "ctry",
        "pan2",
        "draggedEles",
        "i",
        "pos",
        "pos",
        "pos",
        "start",
        "last",
        "near",
        "draggedEles",
        "k",
        "draggedEle",
        "dPos",
        "justStartedDrag",
        "dragDelta",
        "tcol",
        "dragDelta",
        "i",
        "pos",
        "j",
        "start",
        "start",
        "capture",
        "select",
        "cy",
        "zoom",
        "now",
        "earlier",
        "pos",
        "pos",
        "pos",
        "ctxTapend",
        "ctxTap",
        "newlySelected",
        "box",
        "i",
        "newlySelCol",
        "updateStartStyle",
        "sEdges",
        "j",
        "selectedNodes",
        "k",
        "selectedNode",
        "sEdges",
        "j",
        "near",
        "dx",
        "dx2",
        "dy",
        "dy2",
        "dist2",
        "rdist2",
        "j",
        "CanvasRenderer",
        "renderer",
        "usePaths",
        "nodeShapes",
        "sin0",
        "cos0",
        "sin",
        "cos",
        "ellipseStepSize",
        "i",
        "xPos",
        "yPos",
        "rw",
        "rh",
        "i",
        "intersect",
        "points",
        "points",
        "cornerRadius",
        "checkInEllipse",
        "points",
        "points",
        "points",
        "points",
        "star5Points",
        "outerPoints",
        "innerPoints",
        "innerRadius",
        "i",
        "i",
        "points",
        "defaults",
        "e",
        "energy",
        "layout",
        "options",
        "cy",
        "eles",
        "nodes",
        "edges",
        "bb",
        "simUpdatingPos",
        "sys",
        "doneTime",
        "doneTimeout",
        "ready",
        "lastDraw",
        "sysRenderer",
        "energy",
        "movedNodes",
        "data",
        "node",
        "grabHandler",
        "pos",
        "apos",
        "p",
        "padding",
        "lockHandler",
        "removeHandler",
        "addHandler",
        "resizeHandler",
        "w",
        "h",
        "id",
        "mass",
        "locked",
        "nPos",
        "pos",
        "src",
        "tgt",
        "length",
        "grabbableNodes",
        "doneHandler",
        "defaults",
        "options",
        "cy",
        "eles",
        "nodes",
        "graph",
        "eles",
        "bb",
        "roots",
        "rootsArray",
        "i",
        "id",
        "ele",
        "components",
        "unhandledNodes",
        "nodes",
        "currComp",
        "i",
        "comp",
        "maxDegree",
        "compRoots",
        "depths",
        "foundByBfs",
        "id2depth",
        "prevNode",
        "prevEdge",
        "successors",
        "ele",
        "id",
        "prevId",
        "succ",
        "orphanNodes",
        "i",
        "ele",
        "maxChecks",
        "checks",
        "node",
        "neighbors",
        "assignedDepth",
        "i",
        "depth",
        "node",
        "assignedDepth",
        "assignDepthsToEles",
        "i",
        "eles",
        "j",
        "ele",
        "intersectsDepth",
        "edges",
        "thisInfo",
        "highestDepthOfOther",
        "highestOther",
        "i",
        "edge",
        "otherNode",
        "otherInfo",
        "adj",
        "nDepths",
        "elesToMove",
        "i",
        "depth",
        "nDepth",
        "j",
        "ele",
        "info",
        "intEle",
        "i",
        "ele",
        "info",
        "intEle",
        "intInfo",
        "newDepth",
        "minDistance",
        "i",
        "w",
        "h",
        "cachedWeightedPercent",
        "getWeightedPercent",
        "eleDepth",
        "neighbors",
        "percent",
        "samples",
        "i",
        "neighbor",
        "index",
        "depth",
        "nDepth",
        "sortFn",
        "apct",
        "bpct",
        "times",
        "i",
        "biggestDepthSize",
        "i",
        "center",
        "getPosition",
        "info",
        "depth",
        "index",
        "depthSize",
        "distanceX",
        "distanceY",
        "radiusStepSize",
        "epos",
        "succs",
        "i",
        "spos",
        "radius",
        "theta",
        "pos",
        "i",
        "depth",
        "j",
        "node",
        "defaults",
        "options",
        "cy",
        "eles",
        "nodes",
        "bb",
        "center",
        "theta",
        "dTheta",
        "r",
        "minDistance",
        "i",
        "w",
        "h",
        "dTheta",
        "dcos",
        "dsin",
        "rMin",
        "getPos",
        "rx",
        "ry",
        "pos",
        "defaults",
        "layout",
        "options",
        "cy",
        "eles",
        "nodes",
        "edges",
        "ready",
        "bb",
        "getOptVal",
        "fn",
        "val",
        "updateNodePositions",
        "x",
        "y",
        "i",
        "node",
        "scratch",
        "pos",
        "scratch",
        "onDone",
        "onReady",
        "ticksPerFrame",
        "tickSkip",
        "adaptor",
        "skip",
        "inftick",
        "ret",
        "multitick",
        "ret",
        "thisSkip",
        "skip",
        "i",
        "frame",
        "grabbableNodes",
        "grabHandler",
        "node",
        "scrCola",
        "pos",
        "lockHandler",
        "node",
        "scrCola",
        "nonparentNodes",
        "padding",
        "pos",
        "offsetsX",
        "offsetsY",
        "align",
        "scrCola",
        "index",
        "constraints",
        "length",
        "lengthFnName",
        "lengthGetter",
        "c",
        "flow",
        "defAxis",
        "defMinSep",
        "defaults",
        "options",
        "cy",
        "eles",
        "nodes",
        "bb",
        "center",
        "nodeValues",
        "theta",
        "maxNodeSize",
        "i",
        "node",
        "value",
        "i",
        "node",
        "levelWidth",
        "levels",
        "currentLevel",
        "i",
        "val",
        "diff",
        "pos",
        "r",
        "minDist",
        "firstLvlHasMulti",
        "maxR",
        "rStep",
        "i",
        "level",
        "dTheta",
        "dcos",
        "dsin",
        "rMin",
        "j",
        "val",
        "theta",
        "p",
        "id",
        "DEBUG",
        "defaults",
        "options",
        "cy",
        "layout",
        "startTime",
        "layoutInfo",
        "mainLoop",
        "done",
        "endTime",
        "i",
        "frame",
        "f",
        "loopRet",
        "loopRet",
        "i",
        "createLayoutInfo",
        "edges",
        "nodes",
        "layoutInfo",
        "i",
        "tempNode",
        "queue",
        "start",
        "end",
        "tempGraph",
        "i",
        "n",
        "p_id",
        "node_id",
        "node_ix",
        "node",
        "children",
        "i",
        "i",
        "graph",
        "j",
        "index",
        "i",
        "e",
        "tempEdge",
        "idealLength",
        "sourceIx",
        "targetIx",
        "sourceGraph",
        "targetGraph",
        "lca",
        "lcaGraph",
        "depth",
        "tempNode",
        "findLCA",
        "res",
        "findLCA_aux",
        "graph",
        "c",
        "i",
        "nodeId",
        "nodeIx",
        "children",
        "childGraphIx",
        "result",
        "printLayoutInfo",
        "i",
        "n",
        "s",
        "i",
        "s",
        "i",
        "i",
        "e",
        "randomizePositions",
        "width",
        "height",
        "i",
        "n",
        "refreshPositions",
        "s",
        "layout",
        "nodes",
        "bb",
        "coseBB",
        "lnode",
        "lnode",
        "pctX",
        "pctY",
        "step",
        "s",
        "calculateNodeForces",
        "s",
        "i",
        "graph",
        "numNodes",
        "j",
        "node1",
        "k",
        "node2",
        "nodeRepulsion",
        "s",
        "directionX",
        "directionY",
        "overlap",
        "force",
        "distance",
        "forceX",
        "forceY",
        "point1",
        "point2",
        "distanceX",
        "distanceY",
        "distanceSqr",
        "distance",
        "force",
        "forceX",
        "forceY",
        "findClippingPoint",
        "X",
        "Y",
        "H",
        "W",
        "dirSlope",
        "nodeSlope",
        "s",
        "res",
        "nodesOverlap",
        "overlapX",
        "overlapX",
        "overlapY",
        "overlapY",
        "calculateEdgeForces",
        "i",
        "edge",
        "sourceIx",
        "source",
        "targetIx",
        "target",
        "directionX",
        "directionY",
        "point1",
        "point2",
        "lx",
        "ly",
        "l",
        "force",
        "forceX",
        "forceY",
        "forceX",
        "forceY",
        "s",
        "calculateGravityForces",
        "s",
        "i",
        "graph",
        "numNodes",
        "centerX",
        "centerY",
        "temp",
        "parent",
        "centerX",
        "centerY",
        "j",
        "node",
        "dx",
        "dy",
        "d",
        "fx",
        "fy",
        "propagateForces",
        "queue",
        "start",
        "end",
        "nodeId",
        "nodeIndex",
        "node",
        "children",
        "offX",
        "offY",
        "s",
        "i",
        "childNode",
        "updatePositions",
        "s",
        "i",
        "n",
        "i",
        "n",
        "tempForce",
        "i",
        "n",
        "limitForce",
        "s",
        "force",
        "res",
        "res",
        "updateAncestryBoundaries",
        "s",
        "parentId",
        "p",
        "flag",
        "logDebug",
        "defaults",
        "options",
        "layout",
        "cy",
        "eles",
        "bb",
        "g",
        "nodes",
        "i",
        "node",
        "edges",
        "i",
        "edge",
        "d",
        "dagreBB",
        "dModel",
        "constrainPos",
        "xPct",
        "yPct",
        "dModel",
        "defaults",
        "options",
        "cy",
        "eles",
        "nodes",
        "bb",
        "cells",
        "splits",
        "rows",
        "cols",
        "small",
        "min",
        "large",
        "max",
        "sm",
        "lg",
        "sm",
        "lg",
        "cellWidth",
        "cellHeight",
        "i",
        "node",
        "w",
        "h",
        "cellUsed",
        "used",
        "use",
        "row",
        "col",
        "moveToNextCell",
        "id2manPos",
        "i",
        "node",
        "rcPos",
        "pos",
        "getPos",
        "x",
        "y",
        "rcPos",
        "defaults",
        "options",
        "eles",
        "layout",
        "cy",
        "defaults",
        "options",
        "eles",
        "nodes",
        "posIsFn",
        "pos",
        "position",
        "defaults",
        "options",
        "cy",
        "eles",
        "nodes",
        "bb",
        "getPos",
        "defaults",
        "layout",
        "options",
        "simUpdatingPos",
        "cy",
        "eles",
        "nodes",
        "edges",
        "bb",
        "graph",
        "fdSrc",
        "fdTgt",
        "sim",
        "currentBB",
        "toScreen",
        "size",
        "sx",
        "sy",
        "fromScreen",
        "size",
        "px",
        "py",
        "movedNodes",
        "numNodes",
        "drawnNodes",
        "fdRenderer",
        "v",
        "element",
        "dragHandler",
        "fdId",
        "fdP",
        "pos",
        "positionInFd",
        "grabbableNodes"
    ],
    "comments": [
        "!\n * This file is part of Cytoscape.js 2.3.9.\n * \n * Cytoscape.js is free software: you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by the Free\n * Software Foundation, either version 3 of the License, or (at your option) any\n * later version.\n * \n * Cytoscape.js is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n * \n * You should have received a copy of the GNU Lesser General Public License along with\n * Cytoscape.js. If not, see <http://www.gnu.org/licenses/>.",
        "this is put as a global var in the browser",
        "or it's just a global to this module if commonjs",
        "the object iteself is a function that init's an instance of cytoscape",
        "jshint ignore:line",
        "allow functional access to cytoscape.js",
        "e.g. var cyto = $.cytoscape({ selector: \"#foo\", ... });",
        "var nodes = cyto.nodes();",
        "if no options specified, use default",
        "create instance",
        "allow for registration of extensions",
        "e.g. $.cytoscape('renderer', 'svg', SvgRenderer);",
        "e.g. $.cytoscape('renderer', 'svg', 'nodeshape', 'ellipse', SvgEllipseNodeShape);",
        "e.g. $.cytoscape('core', 'doSomething', function(){ /* doSomething code */ });",
        "e.g. $.cytoscape('collection', 'doSomething', function(){ /* doSomething code */ });",
        "define the function namespace here, since it has members in many places",
        "expose as a commonjs module",
        "expose as an amd/requirejs module",
        "make sure we always register in the window just in case (e.g. w/ derbyjs)",
        "type testing utility functions",
        "not undefined or null",
        "null is empty",
        "empty string is empty",
        "otherwise, we don't know what we've got",
        "we're not in a browser so it doesn't matter",
        "TODO probably a better way to detect this...",
        "@cc_on!@",
        "utility functions only for internal use",
        "the jquery extend() function",
        "NB: modified to use $$.is etc since we can't use jquery functions",
        "Handle a deep copy situation",
        "skip the boolean and the target",
        "Handle case when target is a string or something (possible in deep copy)",
        "extend jQuery itself if only one argument is passed",
        "Only deal with non-null/undefined values",
        "Extend the base object",
        "Prevent never-ending loop",
        "Recurse if we're merging plain objects or arrays",
        "Never move original objects, clone them",
        "Don't bring in undefined values",
        "Return the modified object",
        "require that pulls in module from commonjs, amd, or window (falling back until found)",
        "detected browser/window env",
        "detected commonjs env",
        "regular require",
        "detected amd env w/ defined module",
        "kick off 1st check: window",
        "multiple requires in one callback",
        "check have all impls",
        "otherwise, all got all impls => done",
        "w/scope",
        "ported lodash throttle function",
        "ported lodash debounce function",
        "TODO is this hasOwnProperty() call necessary for our use?",
        "gets a shallow copy of the argument",
        "makes a full bb (x1, y1, x2, y2, w, h) from implicit params",
        "has anything been set in the map",
        "jshint ignore:line",
        "pushes to the array at the end of a map (map may not be built)",
        "if empty, put initial array",
        "sets the value in a map (map may not be built)",
        "extend the map if necessary",
        "set the value",
        "gets the value in a map even if it's not built in places",
        "deletes the entry in the map",
        "then only delete child fields not in keepChildren",
        "cheaper than .join()",
        "strip spaces from beginning of string and end of string",
        "find first non-space char",
        "find last non-space char",
        "get [r, g, b] from #abc or #aabbcc",
        "get [r, g, b, a] from hsl(0, 0, 0) or hsla(0, 0, 0, 0)",
        "get hue",
        "normalise on [0, 1]",
        "saturation is [0, 100]",
        "normalise on [0, 1]",
        "lightness is [0, 100]",
        "normalise on [0, 1]",
        "alpha is [0, 1]",
        "now, convert to rgb",
        "code from http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript",
        "achromatic",
        "get [r, g, b, a] from rgb(0, 0, 0) or rgba(0, 0, 0, 0)",
        "normalise to [0, 255]",
        "invalid channel value",
        "must all be percent values if one is",
        "invalid alpha value",
        "special colour names",
        "NB alpha === 0",
        "regular colours",
        "from http://en.wikipedia.org/wiki/Bézier_curve#Quadratic_curves",
        "case: one bb to right of other",
        "case: one bb to left of other",
        "case: one bb above other",
        "case: one bb below other",
        "otherwise, must have some overlap",
        "Check intersections with straight line segments",
        "Top segment, left to right",
        "Right segment, top to bottom",
        "Bottom segment, left to right",
        "Left segment, top to bottom",
        "Check intersections with arc segments",
        "Top Left",
        "Ensure the intersection is on the desired quarter of the circle",
        "Top Right",
        "Ensure the intersection is on the desired quarter of the circle",
        "Bottom Right",
        "Ensure the intersection is on the desired quarter of the circle",
        "Bottom Left",
        "Ensure the intersection is on the desired quarter of the circle",
        "if nothing",
        "We have the following shpae",
        "_____",
        "_|     |_",
        "|         |",
        "|_       _|",
        "|_____|",
        "",
        "With a quarter circle at each corner.",
        "Check if the box is out of bounds",
        "Check if an hBox point is in given box",
        "Check if a given point box is in the hBox",
        "Check if an vBox point is in given box",
        "Check if a given point box is in the vBox",
        "Lastly, check if one of the ellipses coincide with the box",
        "@O Approximate collision functions",
        "Return values:",
        "0 - curve is not in box",
        "1 - curve may be in box; needs precise check",
        "2 - curve is in box",
        "midpoint",
        "(x1, y1) in box",
        "(x3, y3) in box",
        "(midX, midY) in box",
        "ctrl pt in box",
        "console.log(curveMinX + \", \" + curveMinY + \", \" + curveMaxX \n      + \", \" + curveMaxY);\n    if (curveMinX == undefined) {\n      console.log(\"undefined curveMinX: \" + x1 + \", \" + x2 + \", \" + x3);\n    }",
        "console.log(arguments);",
        "Check left + right bounds",
        "Top and bottom",
        "Find when x coordinate of the curve crosses the left side of the box",
        "Check if there exists values for the Bezier curve",
        "parameter between 0 and 1 where both the curve's",
        "x and y coordinates are within the bounds specified by the box",
        "if outside the rough bounding box for the bezier, then it can't be a hit",
        "console.log('bezier out of rough bb')",
        "console.log('do more expensive check');",
        "Solves a cubic function, returns root in form [r1, i1, r2, i2, r3, i3], where",
        "r is the real component, i is the imaginary component",
        "An implementation of the Cardano method from the year 1545",
        "http://en.wikipedia.org/wiki/Cubic_function#The_nature_of_the_roots",
        "Find minimum distance by using the minimum of the distance",
        "function between the given point and the curve",
        "This gives the coefficients of the resulting cubic equation",
        "whose roots tell us where a possible minimum is",
        "(Coefficients are divided by 4)",
        "debug(\"coefficients: \" + a / a + \", \" + b / a + \", \" + c / a + \", \" + d / a);",
        "Use the cubic solving algorithm",
        "debug('distance for param ' + params[i] + \": \" + Math.sqrt(distSquared));",
        "debugStats.clickX = x;\n    debugStats.clickY = y;\n    \n    debugStats.closestX = Math.pow(1.0 - closestParam, 2.0) * x1\n        + 2.0 * (1.0 - closestParam) * closestParam * x2\n        + closestParam * closestParam * x3;\n        \n    debugStats.closestY = Math.pow(1.0 - closestParam, 2.0) * y1\n        + 2.0 * (1.0 - closestParam) * closestParam * y2\n        + closestParam * closestParam * y3;",
        "debug(\"given: \"",
        "+ \"( \" + x + \", \" + y + \"), \"",
        "+ \"( \" + x1 + \", \" + y1 + \"), \"",
        "+ \"( \" + x2 + \", \" + y2 + \"), \"",
        "+ \"( \" + x3 + \", \" + y3 + \")\");",
        "debug(\"roots: \" + roots);",
        "debug(\"params: \" + params);",
        "debug(\"closest param: \" + closestParam);",
        "var direction = arguments[6];",
        "Gives negative angle",
        "console.log(\"base: \" + basePoints);",
        "Intersect with vertical line through (x, y)",
        "&      console.log(x1, x, x2);",
        "Current line: [currentPointX, currentPointY] to [nextPointX, nextPointY]",
        "Assume CCW polygon winding",
        "Normalize",
        "Returns intersections of increasing distance from line's start point",
        "Calculate d, direction vector of line",
        "Direction vector of line",
        "Center of circle",
        "Parallel, coincident lines. Check if overlap",
        "Check endpoint of second line",
        "Check start point of second line",
        "Endpoint of first line",
        "Parallel, non-coincident",
        "(boxMinX, boxMinY, boxMaxX, boxMaxY, padding,",
        "cornerRadius * 2, cornerRadius * 2, vBoxTopLeftX + padding, hBoxTopLeftY + padding)) {",
        "4 ortho extreme points",
        "out of bounds: return false",
        "1 of 4 ortho extreme points in box: return true",
        "box corner in ellipse: return true",
        "console.log(arguments);",
        "Gives negative of angle",
        "Assume transformedPoints.length > 0, and check if intersection is possible",
        "Continue checking with padding-corrected points",
        "Check if a point is in box",
        "Check for intersections with the selection box",
        "Intersection with top of selection box",
        "Intersection with bottom of selection box",
        "Intersection with left side of selection box",
        "Intersection with right side of selection box",
        "// Check if box corner in the polygon\n    if ($$.math.pointInsidePolygon(\n      x1, y1, points, 0, 0, 1, 1, 0, direction)) {\n      \n      return true;\n    } else if ($$.math.pointInsidePolygon(\n      x1, y2, points, 0, 0, 1, 1, 0, direction)) {\n      \n      return true;\n    } else if ($$.math.pointInsidePolygon(\n      x2, y2, points, 0, 0, 1, 1, 0, direction)) {\n       \n      return true; \n    } else if ($$.math.pointInsidePolygon(\n      x2, y1, points, 0, 0, 1, 1, 0, direction)) {\n      \n      return true;\n    }",
        "var points = transformedPoints;",
        "stretch factors",
        "console.log(nodeShapes['square']);",
        "Set the default radius, unless half of width or height is smaller than default",
        "registered extensions to cytoscape, indexed by name",
        "registered modules for extensions, indexed by name",
        "fill in missing layout functions in the prototype",
        "either .start() or .run() is defined, so autogen the other",
        "aliases for those folks who like old stuff:",
        "e.g. $$.extension('renderer', 'svg')",
        "e.g. $$.extension('renderer', 'svg', { ... })",
        "e.g. $$.extension('renderer', 'svg', 'nodeShape', 'ellipse')",
        "e.g. $$.extension('renderer', 'svg', 'nodeShape', 'ellipse', { ... })",
        "no jquery => don't need this",
        "allow calls on a jQuery selector by proxying calls to $.cytoscape",
        "e.g. $(\"#foo\").cytoscape(options) => $.cytoscape(options) on #foo",
        "get object",
        "bind to ready",
        "already ready so just trigger now",
        "not yet ready, so add to readies list",
        "proxy to create instance",
        "allow access to the global cytoscape object under jquery for legacy reasons",
        "use short alias (cy) if not already defined",
        "shamelessly taken from jQuery",
        "https://github.com/jquery/jquery/blob/master/src/event.js",
        "Allow instantiation without the 'new' keyword",
        "Event object",
        "Events bubbling up the document may have been marked as prevented",
        "by a handler lower down the tree; reflect the correct value.",
        "Event type",
        "Put explicitly provided properties onto the event object",
        "$$.util.extend( this, props );",
        "more efficient to manually copy fields we use",
        "Create a timestamp if incoming event doesn't have one",
        "jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding",
        "http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html",
        "if preventDefault exists run it on the original event",
        "if stopPropagation exists run it on the original event",
        "use this module to cherry pick functions into your prototype",
        "(useful for functions shared between the core and collections, for example)",
        "e.g.",
        "$$.fn.collection({",
        "foo: $$.define.foo({ /* params... */ })",
        "});",
        "access data field",
        "key => true if immutable",
        "put in array if not array-like",
        ".data('foo', ...)",
        "set or get property",
        ".data('foo')",
        "get",
        ".data('foo', 'bar')",
        "set",
        "update mappers if asked",
        "call onSet callback",
        ".data({ 'foo': 'bar' })",
        "extend",
        "update mappers if asked",
        "call onSet callback",
        ".data(function(){ ... })",
        "bind to event",
        ".data()",
        "get whole object",
        "maintain chainability",
        "function",
        "data",
        "remove data field",
        "key => true if immutable",
        "put in array if not array-like",
        ".removeData('foo bar')",
        "then get the list of keys, and delete them",
        "delete each non-empty key",
        "not valid if immutable",
        ".removeData()",
        "then delete all keys",
        "maintain chaining",
        "function",
        "removeData",
        "event function reusable stuff",
        "regex for matching event strings (e.g. \"click.namespace\")",
        "event binding",
        "put in array if not array-like",
        "selector is actually data",
        "selector is actually callback",
        "data is actually callback",
        "if there isn't a callback, we can't really do anything",
        "(can't speak for mapped events arg version)",
        "maintain chaining",
        "then convert to map",
        "type[.namespace]",
        "callback to run",
        "extra data in eventObj.data",
        "whether the evt is delegated",
        "the selector to match for delegated events",
        "cached selector object to save rebuilding",
        "the event type (e.g. 'click')",
        "the event namespace (e.g. \".foo\")",
        "who bound together",
        "for events array",
        "for events map",
        "maintain chaining",
        "function",
        "on",
        "put in array if not array-like",
        "then unbind all",
        "maintain chaining",
        "selector is actually callback",
        "then convert to map",
        "[type][.namespace]",
        "",
        "delete listener if it matches",
        "for listeners",
        "for all",
        "if match",
        "for events array",
        "for events map",
        "maintain chaining",
        "function",
        "off",
        "put in array if not array-like",
        "then make a plain event object for each event name",
        "type[.namespace]",
        "put in length 1 array",
        "make sure extra params are in an array if specified",
        "otherwise, we've got nothing",
        "trigger each event in order",
        "for each",
        "create the event for this element from the event object",
        "then just get the object",
        "then we have to make one",
        "if a layout was specified, then put it in the typed event",
        "if triggered by layout, put in event",
        "create a rendered position based on the passed position",
        "then override the listeners list with just the one we specified",
        "check each listener",
        "we're not going to validate the hierarchy; that's too expensive",
        "then trigger it",
        "add extra params to args list",
        "add on data plugged into binding",
        "or clear it in case the event obj is reused",
        "then remove listener",
        "then delete the listener for all binders",
        "already handled triggerer or we can't handle it",
        "delete listener from list",
        "run the callback",
        "then don't bubble",
        "returning false is a shorthand for stopping propagation and preventing the def. action",
        "if listener matches",
        "for each listener",
        "bubble up event for elements",
        "then bubble up to parent",
        "otherwise, bubble up to the core",
        "for each of all",
        "for each event",
        "maintain chaining",
        "function",
        "trigger",
        "put in array if not array-like",
        "animated",
        "put in array if not array-like",
        "clearQueue",
        "delay",
        "put in array if not array-like",
        "nothing to animate",
        "override pan w/ panBy if set",
        "override pan w/ center if set",
        "override pan & zoom w/ fit if set",
        "{ x: fitVp.pan.x, y: fitVp.pan.y };",
        "chaining",
        "animate",
        "put in array if not array-like",
        "next iteration of the animation loop, the animation",
        "will go straight to the end and be removed",
        "clear the queue of future animations",
        "we have to notify (the animation loop doesn't do it for us on `stop`)",
        "stop",
        "define",
        "ignore",
        "the current subject in the query",
        "storage for parsed queries",
        "fake selectors",
        "a collection to match against",
        "filter function",
        "these are defined in the upward direction rather than down (e.g. child)",
        "because we need to go up in Selector.filter()",
        "parent query obj",
        "ancestor query obj",
        "defines subject in compound query (subject query obj; points to self if subject)",
        "use these only when subject has been defined",
        "tokens in the query language",
        "chars we need to escape in var names, etc",
        "binary comparison op (used in data selectors)",
        "boolean (unary) operators (used in data selectors)",
        "string literals (used in data selectors) -- doublequotes | singlequotes",
        "number literal (used in data selectors) --- e.g. 0.1234, 1234, 12e123",
        "allowed metadata fields (i.e. allowed functions to use from $$.Collection)",
        "queries are separated by commas, e.g. edge[foo = 'bar'], node.someClass",
        "a variable name",
        "a value literal, either a string or number",
        "a class name (follows variable conventions)",
        "an element id (follows variable conventions)",
        "when a token like a variable has escaped meta characters, we need to clean the backslashes out",
        "so that values get compared properly in Selector.filter()",
        "add @ variants to comparatorOp",
        "add ! variants to comparatorOp",
        "skip ops that explicitly contain !",
        "skip = b/c != is explicitly defined",
        "NOTE: add new expression syntax here to have it recognised by the parser;",
        "- a query contains all adjacent (i.e. no separator in between) expressions;",
        "- the current query is stored in self[i] --- you can use the reference to `this` in the populate function;",
        "- you need to check the query objects in Selector.filter() for it actually filter properly, but that's pretty straight forward",
        "- when you add something here, also add to Selector.toString()",
        "NB: if one colon selector is a substring of another from its start, place the longer one first",
        "e.g. :foobar|:foo",
        "go on to next query",
        "this query is the parent of the following query",
        "we're now populating the child query with expressions that follow",
        "this query is the ancestor of the following query",
        "we're now populating the descendant query with expressions that follow",
        "of all the expressions, find the first match in the remaining text",
        "ignore this expression if it doesn't meet the expectation function",
        "we've consumed one expr, so we can return now",
        "consume all leading whitespace",
        "get started",
        "get rid of leading whitespace",
        "let the token populate the selector object (i.e. in self[i])",
        "exit if population failed",
        "we're done when there's nothing left to parse",
        "adjust references for subject",
        "go up the tree until we reach the subject",
        "done if subject is self",
        "swap parent/child reference",
        "go up the tree",
        "swap ancestor/descendant",
        "go up the tree",
        "for",
        "subject should be the root query",
        "if",
        "for",
        "make sure for each query that the subject group matches the implicit group if any",
        "set to implicit group",
        "get elements from the core and then filter them",
        "TODO impl if we decide to use a DB for storing elements",
        "check group",
        "check colon selectors",
        "check id",
        "check classes",
        "generic checking for data/metadata",
        "if we're doing a case insensitive comparison, then we're using a STRING comparison",
        "even if we're comparing numbers",
        "for",
        "operandsMatch",
        "check data matches",
        "check metadata matches",
        "check collection",
        "check filter function",
        "check parent/child relations",
        "make elements functional so we save cycles if query == null",
        "query must match for at least one element (may be recursive)",
        "we've reached the end, so we've matched everything for this query",
        "queryMatches",
        "filter an existing collection",
        "don't bother trying if it's invalid",
        "filter",
        "does selector match a single element?",
        "don't bother trying if it's invalid",
        "filter",
        "ith query to string",
        "nice-to-have aliases",
        "define functions in the Style prototype",
        "each visual style property has a type and needs to be validated according to it",
        "define visual style properties",
        "labels",
        "{ name: 'text-decoration', type: t.textDecoration }, // not supported in canvas",
        "{ name: 'text-rotation', type: t.angle }, // TODO disabled b/c rotation breaks bounding boxes",
        "{ name: 'font-variant', type: t.fontVariant }, // not useful",
        "visibility",
        "overlays",
        "transition anis",
        "node body",
        "node border",
        "node background images",
        "compound props",
        "edge line",
        "edge arrows",
        "these are just for the core",
        "pie backgrounds for nodes",
        "because the pie properties are numbered, give access to a constant N (for renderer use)",
        "allow access of properties by name ( e.g. $$.style.properties.height )",
        "allow lookup by name",
        "adds the default stylesheet to the current style",
        "to be nice, we build font related style properties from the core container",
        "so that cytoscape matches the style of its container by default",
        "",
        "unfortunately, this doesn't seem work consistently and can grab the default stylesheet values",
        "instead of the developer's values so let's just make it explicit for the dev for now",
        "",
        "delaying the read of these val's is not an opt'n: that would delay init'l load time",
        "var fontVariant = 'normal' || this.containerPropertyAsString('font-variant') || 'normal';",
        "fill the style with the default stylesheet",
        "common properties",
        "'font-variant': fontVariant,",
        "node props",
        "compound props",
        "node pie bg",
        "edge props",
        "compound (parent) node properties",
        "just edge properties",
        "just core properties",
        "remove all contexts",
        "chaining",
        "builds a style object for the 'core' selector",
        "parse a property; return null on invalid; return parsed property otherwise",
        "fields :",
        "- name : the name of the property",
        "- value : the parsed, native-typed value of the property",
        "- strValue : a string value that represents the property value in valid css",
        "- bypass : true iff the property is a bypass property",
        "make sure the property name is in dash form (e.g. 'property-name' not 'propertyName')",
        "return null on property of unknown name",
        "can't assign null",
        "trim the value to make parsing easier",
        "no type, no luck",
        "check if bypass is null or empty string (i.e. indication to delete bypass property)",
        "check if value is mapped",
        "then don't bother to do the expensive regex checks",
        "mappers not allowed in bypass",
        "mappers not allowed in bypass",
        "we can map only if the type is a colour or a number",
        "parse to validate",
        "can't be invalid or mapped",
        "parse to validate",
        "can't be invalid or mapped",
        "check if valueMin and valueMax are the same",
        "can't make much of a mapper without a range",
        "red",
        "green",
        "blue",
        "optional alpha",
        "same alpha outright",
        "full opacity for colour 1?",
        "full opacity for colour 2?",
        "can't make a mapper without a range",
        "min & max are numeric",
        "check the type and return the appropriate object",
        "not set => px",
        "use specified units if set",
        "only allow explicit units if so set",
        "implicitly px if unspecified",
        "if not a number and enums not allowed, then the value is invalid",
        "check if this number type also accepts special keywords in place of numbers",
        "(i.e. `left`, `auto`, etc)",
        "failed on enum after failing on number",
        "check if value must be an integer",
        "check value is within range",
        "normalise value in pixels",
        "then pxValue does not apply",
        "normalise value in ms",
        "leave empty",
        "go over each prop",
        "make a regex from the type",
        "regex matches",
        "regex doesn't match",
        "didn't match the regex so the value is bogus",
        "just return",
        "not a type we can handle",
        "create a new context from the specified selector string and switch to that context",
        "'core' is a special case and does not need a selector",
        "new context means new index",
        "chaining",
        "add one or many css rules to the current context",
        "do nothing if args are invalid",
        "chaining",
        "add a single css rule to the current context",
        "name-value pair",
        "add property to current context if valid",
        "allow access by name as well",
        "add to core style if necessary",
        "chaining",
        "(potentially expensive calculation)",
        "apply the style to the element based on",
        "- its bypass",
        "- what selectors match it",
        "clear style caches",
        "for elements",
        "suffices b/c mappedProperties is a subset of properties",
        "need to check them all",
        "only need to check mapped",
        "if a later context overrides this property, then the fact that this context has switched/diffed doesn't matter",
        "(semi expensive check since it makes this function O(n^2) on context length, but worth it since overall result",
        "is cached)",
        "can't override unless the context is active",
        "exit early as long as one later context overrides",
        "for props",
        "if",
        "for contexts",
        "since we need to apply all style if a fresh stylesheet",
        "get the cxt key",
        "NB: context.selector may be null for 'core'",
        "for context",
        "gets a computed ele style object based on matched contexts",
        "if already computed style, returned cached copy",
        "save cycles when the context prop doesn't need to be applied",
        "set whether has pie or not; for greater efficiency",
        "1..N",
        "var variant = style['font-variant'].strValue;",
        "probably safe to use applied time and much faster",
        "for( var i = 0; i < $$.style.properties.length; i++ ){",
        "var prop = $$.style.properties[i];",
        "var eleProp = _p.style[ prop.name ];",
        "var val = eleProp && eleProp.strValue ? eleProp.strValue : 'undefined';",
        "_p.styleKey += '$' + val;",
        "}",
        "apply a property to the style (for internal use)",
        "returns whether application was successful",
        "",
        "now, this function flattens the property, and here's how:",
        "",
        "for parsedProp:{ bypass: true, deleteBypass: true }",
        "no property is generated, instead the bypass property in the",
        "element's style is replaced by what's pointed to by the `bypassed`",
        "field in the bypass property (i.e. restoring the property the",
        "bypass was overriding)",
        "",
        "for parsedProp:{ mapped: truthy }",
        "the generated flattenedProp:{ mapping: prop }",
        "",
        "for parsedProp:{ bypass: true }",
        "the generated flattenedProp:{ bypassed: parsedProp }",
        "can't apply auto to width or height unless it's a parent node",
        "check if we need to delete the current bypass",
        "then this property is just here to indicate we need to delete",
        "can only delete if the current prop is a bypass and it points to the property it was overriding",
        "property is already not defined",
        "then replace the bypass property with the original",
        "because the bypassed property was already applied (and therefore parsed), we can just replace it (no reapplying necessary)",
        "we're unsuccessful deleting the bypass",
        "put the property in the style objects",
        "flatten the property if mapped",
        "flatten the field (e.g. data.foo.bar)",
        "then keep the mapping but assume 0% for now",
        "make sure to bound percent value",
        "colours are simple, so just create the flat property instead of expensive string parsing",
        "we're a bypass if the mapping property is a bypass",
        "can only map to colours and numbers",
        "if we can't flatten the property, then use the origProp so we still keep the mapping itself",
        "keep a reference to the mapping",
        "the flattened (mapped) property is the one we want",
        "direct mapping",
        "flatten the field (e.g. data.foo.bar)",
        "if we can't flatten the property, then use the origProp so we still keep the mapping itself",
        "keep a reference to the mapping",
        "the flattened (mapped) property is the one we want",
        "just set the property",
        "not a valid mapping",
        "if the property is a bypass property, then link the resultant property to the original one",
        "then this bypass overrides the existing one",
        "steal bypassed prop from old bypass",
        "then link the orig prop to the new bypass",
        "and set",
        "prop is not bypass",
        "then keep the orig prop (since it's a bypass) and link to the new prop",
        "then just replace the old prop with the new one",
        "updates the visual style for all elements (useful for manual style modification after init)",
        "just update the functional properties (i.e. mappings) in the elements'",
        "styles (less expensive than recalculation)",
        "for each ele",
        "for each prop",
        "reapply the mapping property",
        "diffProps : { name => { prev, next } }",
        "build up the style to animate towards",
        "consider px values",
        "consider numerical values",
        "consider colour values",
        "the previous value is good for an animation only if it's different",
        "to val",
        "from val",
        "end if props allow ani",
        "can't transition if there's nothing previous to transition from",
        "bypasses are applied to an existing style on an element, and just tacked on temporarily",
        "returns true iff application was successful for at least 1 specified property",
        "put all the properties (can specify one or many) in an array after parsing them",
        "apply to all property names",
        "then parse the single property",
        "then parse each property",
        "try camel case name too",
        "can't do anything without well defined properties",
        "we've failed if there are no valid properties",
        "now, apply the bypass properties on the elements",
        "return true if at least one succesful bypass applied",
        "for each ele",
        "for each prop",
        "for props",
        "for eles",
        "only useful in specific cases like animation",
        "need a bypass if one doesn't exist",
        "empty => remove bypass",
        "for props",
        "for eles",
        "empty => remove bypass",
        "for props",
        "for eles",
        "gets what an em size corresponds to in pixels relative to a dom element",
        "in case we're running outside of the browser",
        "gets css property from the core container",
        "gets the rendered style for an element",
        "insure it's an element",
        "gets the raw style for an element",
        "insure it's an element",
        "gets the value style for an element (useful for things like animations)",
        "just passed the style itself",
        "then make a prop of it",
        "apply selector",
        "apply property",
        "static function",
        "accessible cy.style() function",
        "get json from cy.style() api",
        "remove comments from the style string",
        "remove the parsed selector and block from the remaining text to parse",
        "remove the parsed property and value from the remaining block text to parse",
        "parse the selector",
        "skip this selector and block",
        "parse the block of properties and values",
        "skip this property in the block",
        "skip this property in the block",
        "put the parsed block in the style",
        "a dummy stylesheet object that doesn't need a reference to the core",
        "(useful for init)",
        "just store the selector to be parsed later",
        "chaining",
        "just store the property to be parsed later",
        "also try camel case name",
        "chaining",
        "generate a real style object from the dummy stylesheet",
        "apply selector",
        "apply property",
        "e.g. already registered some info (e.g. readies) via jquery",
        "clean the container",
        "destroy the renderer",
        "old instance => replace reg completely",
        "make sure container assoc'd reg points to this cy",
        "html dom ele container",
        "whether ready has been triggered",
        "has initrender has been triggered",
        "cached options",
        "array of elements",
        "element id => index in elements array",
        "list of listeners",
        "elements being animated",
        "scratch object for core",
        "whether notifications are sent to the renderer",
        "object for currently-running animations",
        "set selection type",
        "then set default",
        "init zoom bounds",
        "init style",
        "create the renderer",
        "trigger the passed function for the `initrender` event",
        "initial load",
        "onready",
        "if a ready callback is specified as an option, the bind it",
        "bind all the ready handlers registered before creating this instance",
        "clear b/c we've bound them all and don't want to keep it around in case a new core uses the same div etc",
        "short alias",
        "just calls fn as though triggered via ready event",
        "destroy the renderer",
        "worst case, return an empty collection",
        "chaining",
        "adjust the index of all elements past this index",
        "defer execution until not busy and guarantee relative execution order of deferred functions",
        "add the elements",
        "same instance => just restore",
        "otherwise, copy from json",
        "specify an array of options",
        "specify via opts.nodes and opts.edges",
        "specify options for one element",
        "remove old elements",
        "we missed this event by turning notifications off, so pass it on",
        "pull in animation functions",
        "save cycles when no style used",
        "save cycles when no style used",
        "don't execute the animation loop in headless environments",
        "first call",
        "if nothing currently animating, get something from the queue",
        "was queued, so update call time",
        "step and remove if done",
        "start if need be",
        "remove current[i]",
        "call complete callbacks",
        "handleElements",
        "handle all eles",
        "each element",
        "notify renderer",
        "remove elements from list of currently animating if its queues are empty",
        "handleElements",
        "then update",
        "for props",
        "if",
        "then assume a colour",
        ".on( events [, selector] [, data], handler)",
        ".off( events [, selector] [, handler] )",
        ".trigger( events [, extraParams] )",
        "aliases for those folks who like old stuff:",
        "chaining",
        "make sure layout has _private for use w/ std apis like .on()",
        "notifications are disabled during batching",
        "exit on disabled",
        "update style for dirty eles",
        "notify the renderer of queued eles and event types",
        "for backwards compatibility",
        "get a collection",
        "- empty collection on no args",
        "- collection of elements in the graph on selector arg",
        "- guarantee a returned collection when elements or collection specified",
        "search the graph like jQuery",
        "aliases",
        "chaining",
        "chaining",
        "chaining",
        "chaining",
        "chaining",
        "chaining",
        "chaining",
        "chaining",
        ".pan()",
        ".pan('x')",
        ".pan({ x: 0, y: 100 })",
        ".pan('x', 100)",
        "invalid",
        "notify the renderer that the viewport changed",
        "chaining",
        ".panBy({ x: 0, y: 100 })",
        ".panBy('x', 100)",
        "invalid",
        "notify the renderer that the viewport changed",
        "chaining",
        "notify the renderer that the viewport changed",
        "chaining",
        "elements is optional",
        "assume bb",
        "crop zoom",
        "now pan to middle",
        "in rendered px",
        "then get the zoom",
        "then set the zoom",
        "then zoom about a point",
        "convert to rendered px",
        "panning disabled",
        "zooming disabled",
        "can't zoom with invalid params",
        "crop zoom",
        "set zoom about position",
        "just set the zoom",
        "notify the renderer that the viewport changed",
        "chaining",
        "to trigger",
        "chaining",
        "notify the renderer that the viewport changed",
        "chaining",
        "middle",
        "chaining",
        "fallback if no container (not 0 b/c can be used for dividing etc)",
        "fallback if no container (not 0 b/c can be used for dividing etc)",
        "aliases",
        "backwards compatibility",
        "Use this interface to define functions for collections/elements.",
        "This interface is good, because it forces you to think in terms",
        "of the collections case (more than 1 element), so we don't need",
        "notification blocking nonsense everywhere.",
        "",
        "Other collection-*.js files depend on this being defined first.",
        "It's a trade off: It simplifies the code for Collection and",
        "Element integration so much that it's worth it to create the",
        "JS dependency.",
        "",
        "Having this integration guarantees that we can call any",
        "collection function on an element and vice versa.",
        "e.g. $$.fn.collection({ someFunc: function(){ /* ... */ } })",
        "factory for generating edge ids when no id is specified for a new element",
        "we've used the current id, so move it up",
        "otherwise keep trying successive unused ids",
        "Element",
        "",
        "represents a node or an edge",
        "validate group",
        "make the element array-like, just like a collection",
        "NOTE: when something is added here, add also to ele.json()",
        "indicates this is an element",
        "data object",
        "place for layouts to put calculated stats etc for mappers",
        "(x, y) position pair",
        "width and height of nodes calculated by the renderer when set to special 'auto' value",
        "array of bound listeners",
        "string; 'nodes' or 'edges'",
        "properties as set by the style",
        "properties for style sent from the renderer to the core",
        "applied style contexts from the styler",
        "whether it's inside the vis; true if removed (set true here since we call restore)",
        "whether it's selected",
        "whether it's selectable",
        "whether the element is locked (cannot be moved)",
        "whether the element is grabbed by the mouse; renderer sets this privately",
        "whether the element can be grabbed",
        "whether the element is active from user interaction",
        "map ( className => true )",
        "object for currently-running animations",
        "object in which the renderer can store information",
        "scratch objects",
        "array of connected edges",
        "array of children",
        "renderedPosition overrides if specified",
        "Collection",
        "",
        "represents a set of nodes, edges, or both together",
        "make elements from json and restore all at once later",
        "make sure newly created elements have valid ids",
        "can't create element if prior id already exists",
        "restore the elements if we created them from json",
        "Functions",
        "",
        "keep the prototypes in sync (an element has the same functions as a collection)",
        "and use $$.elefn and $$.elesfn as shorthands to the prototypes",
        "an element",
        "get ele or empty collection",
        "NB no restore",
        "create arrays of nodes and edges, since we need to",
        "restore the nodes first",
        "keep nodes first in the array and edges after",
        "put to front of array if node",
        "put to end of array if edge",
        "now, restore each element",
        "don't need to do anything",
        "set id and validate",
        "can't create element if it has empty string as id or non-string id",
        "can't create element if one already has that id",
        "id is finalised, now let's keep a ref",
        "extra checks for edges",
        "can't create if source or target is not defined properly",
        "can't create edge if one of its nodes doesn't exist",
        "can't create this",
        "if is edge",
        "create mock ids map for element so it can be used like collections",
        "for each element",
        "do compound node sanity checks",
        "each node",
        "non-existant parent; just remove it",
        "mark self as parent and remove from data",
        "remove parent reference",
        "exit or we loop forever",
        "connect with children",
        "let the core know we have a compound graph",
        "else",
        "if specified parent",
        "for each node",
        "chainability",
        "add connected edges",
        "add descendant nodes",
        "nodes are removed last",
        "edges are removed first",
        "make the list of elements to remove",
        "(may be removing more than specified due to connected edges etc)",
        "mark as removed",
        "remove from core pool",
        "add to list of removed elements",
        "remove references to this edge in its connected nodes",
        "remove reference to parent",
        "check to see if we have a compound graph or not",
        "must manually notify since trigger won't do this automatically once removed",
        "check for empty remaining parent nodes",
        "move node to new parent",
        "NB: also removes descendants and their connected edges",
        "if nothing done",
        "search, spanning trees, etc",
        "std functional ele first callback style",
        "do a breadth first search from the nodes in the collection",
        "from pseudocode on wikipedia",
        "enqueue v",
        "std functional ele first callback style",
        "do a depth first search on the nodes in the collection",
        "from pseudocode on wikipedia (iterative impl)",
        "push v",
        "kruskal's algorithm (finds min spanning tree, assuming undirected graph)",
        "implemented from pseudocode from wikipedia",
        "if not specified, assume each edge has equal weight (1)",
        "combine forests for u and v",
        "if not specified, assume each edge has equal weight (1)",
        "for",
        "while",
        "nice, short mathemathical alias",
        "Additional graph analysis algorithms",
        "Implemented from pseudocode from wikipedia",
        "options => options object",
        "root // starting node (either element or selector string)",
        "weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges",
        "heuristic: function( node ){} // specifies heuristic value for `node`/`this`",
        "directed // default false",
        "goal // target node (either element or selector string). Mandatory.",
        "retObj => returned object by function",
        "found : true/false // whether a path from root to goal has been found",
        "distance // Distance for the shortest path from root to goal",
        "path // Array of ids of nodes in shortest path",
        "Reconstructs the path from Start to End, acumulating the result in pathAcum",
        "Base case",
        "We know which node is before the last one",
        "We should not reach here!",
        "Returns the index of the element in openSet which has minimum fScore",
        "Should never be the case",
        "Parse options",
        "debug - optional",
        "root - mandatory!",
        "use it as a selector, e.g. \"#rootID",
        "goal - mandatory!",
        "use it as a selector, e.g. \"#goalID",
        "Heuristic function - optional",
        "use constant if unspecified",
        "$$.util.error(\"Missing required parameter (heuristic)! Aborting.\");",
        "return;",
        "Weight function - optional",
        "If not specified, assume each edge has equal weight (1)",
        "directed - optional",
        "Counter",
        "Main loop",
        "If we've found our goal, then we are done",
        "Add cMin to processed nodes",
        "Remove cMin from boundary nodes",
        "Update scores for neighbors of cMin",
        "Take into account if graph is directed or not",
        "if node is in closedSet, ignore it",
        "New tentative score for node w",
        "Update gScore for node w if:",
        "w not present in openSet",
        "OR",
        "tentative gScore is less than previous value",
        "w not in openSet",
        "Add node to openSet",
        "w already in openSet, but with greater gScore",
        "End of neighbors update",
        "End of main loop",
        "If we've reached here, then we've not reached our goal",
        "aStar()",
        "Implemented from pseudocode from wikipedia",
        "options => options object",
        "weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges",
        "directed // default false",
        "retObj => returned object by function",
        "pathTo : function(fromId, toId) // Returns the shortest path from node with ID \"fromID\" to node with ID \"toId\", as an array of node IDs",
        "distanceTo: function(fromId, toId) // Returns the distance of the shortest path from node with ID \"fromID\" to node with ID \"toId\"",
        "Parse options",
        "debug - optional",
        "Weight function - optional",
        "If not specified, assume each edge has equal weight (1)",
        "directed - optional",
        "mapping: node id -> position in nodes array",
        "Initialize distance matrix",
        "Initialize matrix used for path reconstruction",
        "Initialize distance matrix",
        "Process edges",
        "Check if already process another edge between same 2 nodes",
        "If undirected graph, process 'reversed' edges",
        "Check if already process another edge between same 2 nodes",
        "Main loop",
        "Build result object",
        "from is a selector string",
        "from is a node",
        "to is a selector string",
        "to is a node",
        "from is a selector string",
        "from is a node",
        "to is a selector string",
        "to is a node",
        "floydWarshall",
        "Implemented from pseudocode from wikipedia",
        "options => options object",
        "root: starting node (either element or selector string)",
        "weight: function( edge ){} // specifies weight to use for `edge`/`this`. If not present, it will be asumed a weight of 1 for all edges",
        "directed // default false",
        "retObj => returned object by function",
        "pathTo : function(toId) // Returns the shortest path from root node to node with ID \"toId\", as an array of node IDs",
        "distanceTo: function(toId) // Returns the distance of the shortest path from root node to node with ID \"toId\"",
        "hasNegativeWeightCycle: true/false (if true, pathTo and distanceTo will be undefined)",
        "Parse options",
        "debug - optional",
        "Weight function - optional",
        "If not specified, assume each edge has equal weight (1)",
        "directed - optional",
        "root - mandatory!",
        "use it as a selector, e.g. \"#rootID",
        "mapping: node id -> position in nodes array",
        "Initializations",
        "Edges relaxation",
        "If undirected graph, we need to take into account the 'reverse' edge",
        "Check for negative weight cycles",
        "Build result object",
        "to is a selector string",
        "to is a node",
        "Add toId to path",
        "reached starting node",
        "If no path exists, discart acumulated path and return undefined",
        "to is a selector string",
        "to is a node",
        "This returns a reversed path",
        "Get it in the correct order and return it",
        "bellmanFord",
        "Computes the minimum cut of an undirected graph",
        "Returns the correct answer with high probability",
        "options => options object",
        "",
        "retObj => returned object by function",
        "cut : list of IDs of edges in the cut,",
        "partition1: list of IDs of nodes in one partition",
        "partition2: list of IDs of nodes in the other partition",
        "Function which colapses 2 (meta) nodes into one",
        "Updates the remaining edge lists",
        "Receives as a paramater the edge which causes the collapse",
        "Delete all edges between partition1 and partition2",
        "All edges pointing to partition2 should now point to partition1",
        "Check source",
        "Check target",
        "Move all nodes from partition2 to partition1",
        "Contracts a graph until we reach a certain number of meta nodes",
        "Stop condition",
        "Choose an edge randomly",
        "Colapse graph based on edge",
        "Parse options",
        "debug - optional",
        "Create numerical identifiers for each node",
        "mapping: node id -> position in nodes array",
        "for reverse mapping, simply use nodes array",
        "Now store edge destination as indexes",
        "Format for each edge (edge index, source node index, target node index)",
        "We will store the best cut found here",
        "Initial meta node partition",
        "Main loop",
        "Create new meta node partition",
        "Contract until stop point (stopSize nodes)",
        "Create a copy of the colapsed nodes state",
        "Run 2 iterations starting in the stop state",
        "Is any of the 2 results the best cut so far?",
        "end of main loop",
        "Construct result",
        "traverse metaNodeMap for best cut",
        "",
        "options => options object",
        "dampingFactor: optional",
        "precision: optional",
        "iterations : optional",
        "retObj => returned object by function",
        "rank : function that returns the pageRank of a given node (object or selector string)",
        "First, get sum of all elements",
        "Now, divide each by the sum of all elements",
        "Parse options",
        "debug - optional",
        "dampingFactor - optional",
        "Default damping factor",
        "desired precision - optional",
        "Default precision",
        "Max number of iterations - optional",
        "Default number of iterations",
        "Weight function - optional",
        "If not specified, assume each edge has equal weight (1)",
        "Create numerical identifiers for each node",
        "mapping: node id -> position in nodes array",
        "for reverse mapping, simply use nodes array",
        "Construct transposed adjacency matrix",
        "First lets have a zeroed matrix of the right size",
        "We'll also keep track of the sum of each column",
        "Create null matric",
        "Now, process edges",
        "Update matrix",
        "Update column sum",
        "Add additional probability based on damping factor",
        "Also, take into account columns that have sum = 0",
        "Shorthand",
        "Traverse matrix, column by column",
        "No 'links' out from node jth, assume equal probability for each possible node",
        "Node jth has outgoing link, compute normalized probabilities",
        "Compute dominant eigenvector using power method",
        "Start with a vector of all 1's",
        "Also, initialize a null vector which will be used as shorthand",
        "New array with all 0's",
        "Multiply matrix with previous result",
        "Compute difference (squared module) of both vectors",
        "If difference is less than the desired threshold, stop iterating",
        "Construct result",
        "is a selector string",
        "is a node object",
        "pageRank",
        "$$.fn.eles",
        "needs opts or fn",
        "add classes",
        "remove classes",
        "toggle classes",
        "if didn't already have, add to list of changed",
        "trigger update style on those eles that had class changes",
        "eles who had classes changed",
        "then remove",
        "for j classes",
        "for i eles",
        "trigger update style on those eles that had class changes",
        "then we changed its set of classes",
        "trigger update style on those eles that had class changes",
        "nothing to do really",
        "cheap extra check",
        "Compound functions",
        "",
        "current list must be common with current ele parents set",
        "aliases",
        "position but no notification to renderer",
        "chaining",
        "save cycles for non compound graphs or when style disabled",
        "go up, level by level",
        "update each parent node in this level",
        "next level",
        "return changed",
        "get/set the rendered (i.e. on screen) positon of the element",
        "must have an element and must be a node to return position",
        "set one dimension",
        "set whole position",
        "getting",
        "then return the whole rendered position",
        "then return the specified dimension",
        "for empty collection case",
        "chaining",
        "get/set the position relative to the parent",
        "must have an element and must be a node to return position",
        "set one dimension",
        "set whole position",
        "getting",
        "then return the whole rendered position",
        "then return the specified dimension",
        "for empty collection case",
        "chaining",
        "convenience function to get a numerical value for the width of the node/edge",
        "convenience function to get a numerical value for the height of the node",
        "get the bounding box of the elements (in raw model position)",
        "recalculate projections etc",
        "find bounds of elements",
        "then ele doesn't take up space",
        "handle node dimensions",
        "",
        "handle edge dimensions (rough box estimate)",
        "",
        "handle points along edge (sanity check)",
        "",
        "edges",
        "handle label dimensions",
        "",
        "style enabled",
        "for",
        "in case some users want to be explicit",
        "Regular degree functions (works on single element)",
        "",
        "Collection degree stats",
        "",
        "Functions for binding & triggering events",
        "",
        ".on( events [, selector] [, data], handler)",
        ".off( events [, selector] [, handler] )",
        ".trigger( events [, extraParams] )",
        "for internal use only",
        "empty collections don't need to notify anything",
        "notify renderer",
        "aliases for those folks who like old stuff:",
        "if not handled by above, give 'em an empty collection",
        "if a selector is specified, then filter by it instead",
        "var ids1 = col1Smaller ? col1._private.ids : col2._private.ids;",
        "in place merge on calling collection",
        "chaining",
        "remove single ele in place in calling collection",
        "no need to remove",
        "remove ele",
        "replace empty spot with last ele in collection",
        "the collection is now 1 ele smaller",
        "remove eles in place on calling collection",
        "chaining",
        "Functions for iterating over collections",
        "",
        "exit each early on return false",
        "exit each early on return false",
        "depth of deepest parent and just a bit above",
        "no need to calculate element depth if there is no compound node",
        "'a' is a node, it should be drawn later",
        "'a' is an edge, it should be drawn first",
        "both nodes or both edges",
        "same z-index => compare indices in the core (order added to graph w/ last on top)",
        "elements on different level",
        "deeper element should be drawn later",
        "Functions for layouts on nodes",
        "",
        "using standard layout options, apply position function (w/ or w/o animation)",
        "chaining",
        "fully updates (recalculates) the style for the elements",
        "chaining and exit early when batching",
        "let renderer know we changed style",
        "just fire the event",
        "chaining",
        "just update the mappers in the elements' styles; cheaper than eles.updateStyle()",
        "let renderer know we changed style",
        "just fire the event",
        "chaining",
        "get the specified css property as a rendered value (i.e. on-screen value)",
        "or get the whole rendered style if no property specified (NB doesn't allow setting)",
        "read the calculated css style of the element or override the style (via a bypass)",
        "then extend the bypass",
        "let the renderer know we've updated style",
        "then get the property from the style",
        "empty collection => can't get any value",
        "then set the bypass with the property value",
        "let the renderer know we've updated style",
        "empty collection => can't get any value",
        "chaining",
        "let the renderer know we've updated style",
        "chaining",
        "chaining",
        "chaining",
        "Collection functions that toggle a boolean value",
        "",
        "e.g. cy.nodes().select( data, handler )",
        "e.g. cy.nodes().select( handler )",
        "e.g. cy.nodes().select()",
        "to save cycles assume not able for all on override",
        "change of state => possible change of style",
        "DAG functions",
        "",
        "get the root nodes in the DAG",
        "get the leaf nodes in the DAG",
        "normally called children in graph theory",
        "these nodes =edges=> outgoing nodes",
        "aka DAG descendants",
        "done if no outgoers left",
        "done if touched all outgoers already",
        "normally called parents in graph theory",
        "these nodes <=edges= incoming nodes",
        "aka DAG ancestors",
        "done if no incomers left",
        "done if touched all incomers already",
        "Neighbourhood functions",
        "",
        "for all nodes",
        "for each connected edge, add the edge and the other node",
        "need check in case of loop",
        "add node 1 hop away",
        "add connected edge",
        "Edge functions",
        "",
        "get elements if a selector is specified",
        "look at all the edges in the collection",
        "look at edges connected to the src node of this edge",
        "Min and Max heap predefaults",
        "static methods",
        "short alias",
        "object methods",
        "while",
        "collectionOrElement",
        "edit is a new value or function",
        "only values in heap are updated. elements themselves are not!",
        "The canvas renderer was written by Yue Dong.\n\n  Modifications tracked on Github.",
        "Coordinates for selection box, plus enabled flag",
        "--Pointer-related data",
        "These 3 fields related to tap, taphold events",
        "--",
        "--Wheel-related data",
        "--",
        "this.data.canvasContainer.appendChild(this.data.bufferCanvases[i]);",
        "on by default",
        "for initial kick off",
        "whether to use Path2D caching for drawing",
        "for",
        "copy the math functions into the renderer prototype",
        "unfortunately these functions are used interspersed t/o the code",
        "and this makes sure things work just in case a ref was missed in refactoring",
        "TODO remove this eventually",
        "Contract for arrow shapes:",
        "0, 0 is arrow tip",
        "(0, 1) is direction towards node",
        "(1, 0) is right",
        "",
        "functional api:",
        "collide: check x, y in shape",
        "roughCollide: called before collide, no false negatives",
        "draw: draw",
        "spacing: dist(arrowTip, nodeBoundary)",
        "gap: dist(edgeTip, nodeBoundary), edgeTip may != arrowTip",
        "b/c of notation used in arrow draw fn",
        "console.log(\"collide(): \" + direction);",
        "console.log(\"collide(): \" + direction);",
        "console.log(\"collide(): \" + direction);",
        "Transform x, y to get non-rotated ellipse",
        "Project mouse",
        "Find nearest element",
        "bb check x",
        "bb check y",
        "exit early if invisible edge and must be visible",
        "exit early if invisible edge and must be visible",
        "b/c have to half width/height",
        "for compound graphs, hitting edge may actually want a connected node instead (b/c edge may have greater z-index precedence)",
        "reverse order for precedence",
        "since we check in z-order, first found is top and best result => exit early",
        "then edge",
        "'Give me everything from this box'",
        "console.log('test', heur) == undefined &&",
        "TODO only allow rectangle for a compound node?",
        "if (node._private.style['width'].value == 'auto' ||",
        "node._private.style['height'].value == 'auto')",
        "{",
        "return 'rectangle';",
        "}",
        "console.time('cachezorder')",
        "console.log('make cache')",
        "console.timeEnd('cachezorder')",
        "console.log('read cache')",
        "e.g. center",
        "e.g. middle",
        "add center point to style so bounding box calculations can use it",
        "var variant = style['font-variant'].strValue;",
        "from ele style",
        "ds.fontVariant = variant;",
        "forced style",
        "put label content in div",
        "edges",
        "if positions diff",
        "update rstyle positions",
        "if edges",
        "Find edge control points",
        "create a table of edge (src, tgt) => list of edges between them",
        "ignore edges who are not to be displayed",
        "they shouldn't take up space",
        "for each pair (src, tgt), create the ctrl pts",
        "Nested for loop is OK; total number of iterations for both loops = edgeCount",
        "for each pair id, the edges should be sorted by index",
        "make sure src/tgt distinction is consistent",
        "(src/tgt in this case are just for ctrlpts and don't actually have to be true src/tgt)",
        "pt outside src shape to calc distance/displacement from src to tgt",
        "pt outside tgt shape to calc distance/displacement from src to tgt",
        "if src intersection is inside tgt or tgt intersection is inside src, then no ctrl pts to draw",
        "console.log('edge ctrl pt cache HIT')",
        "then the control points haven't changed and we can skip calculating them",
        "console.log('edge ctrl pt cache MISS')",
        "Self-edge",
        "New -- fix for large nodes",
        "Straight edge",
        "Bezier edge",
        "console.log(edge, midPointX, displacementX, distanceFromMidpoint);",
        "find endpts for edge",
        "project control point along line from src centre to outside the src shape",
        "(otherwise intersection will yield nothing)",
        "delta",
        "length of line",
        "normalised delta",
        "project control point along line from tgt centre to outside the tgt shape",
        "(otherwise intersection will yield nothing)",
        "delta",
        "length of line",
        "normalised delta",
        "recalc endpts",
        "project the edge into rstyle",
        "always override as haystack in case set to different type previously",
        "halfPointX,",
        "halfPointY",
        "return;",
        "return;",
        "console.log(\"1: \"\n        + CanvasRenderer.arrowShapes[srcArShape],\n          srcArShape);",
        "if( window.badArrow) debugger;",
        "halfPointX,",
        "halfPointY",
        "console.log(\"2: \"\n        + CanvasRenderer.arrowShapes[srcArShape],\n          srcArShape);",
        "halfPointX,",
        "halfPointY",
        "if( isNaN(rs.startX) || isNaN(rs.startY) ){",
        "debugger;",
        "}",
        "Find adjacent edges",
        "Draw edge",
        "if bezier ctrl pts can not be calculated, then die",
        "extra isNaN() for safari 7.1 b/c it mangles ctrlpt calcs",
        "Edge line width",
        "Edge color & opacity",
        "exit early if no overlay",
        "this.findEndpoints(edge);",
        "b/c have to half width/height",
        "3 points given -> assume Bezier",
        "2 -> assume straight",
        "for very outofdate browsers",
        "bezier",
        "double bezier loop",
        "line",
        "reset any line dashes",
        "for very outofdate browsers",
        "don't do anything for overlays",
        "Displacement gives direction for arrowhead orientation",
        "window.badArrow = true;",
        "debugger;",
        "Draw arrowshape",
        "Negative of the angle",
        "context.translate(x, y);",
        "context.translate(-x, -y);",
        "no point in drawing empty image (and chrome is broken in this case)",
        "left",
        "top",
        "Draw edge text",
        "save cycles on pinching",
        "Calculate text draw position",
        "this.recalculateEdgeLabelProjection( edge );",
        "Draw node text",
        "this.recalculateNodeLabelProjection( node );",
        "e.g. center",
        "e.g. center",
        "set up canvas context with font",
        "returns transformed text string",
        "Font style",
        "Calculate text draw position based on text alignment",
        "so text outlines aren't jagged",
        "Draw text",
        "Draw node",
        "exit early if drawing overlay but none to draw",
        "Node color & opacity",
        "so borders are square with the node shape",
        "for very outofdate browsers",
        "var image = this.getCachedImage('url');",
        "get image, and if not loaded then ask to redraw when later loaded",
        "redraw path for blacken and border",
        "Border width, draw border",
        "reset in case we changed the border style",
        "for very outofdate browsers",
        "draw the overlay",
        "does the node have at least one pie piece?",
        "ensure ele ref",
        "ensure ele ref",
        "must fit in node",
        "what % to continue drawing pie slices from on [0, 1]",
        "1..N",
        "map integer range [0, 100] to [0, 1]",
        "start at 12 o'clock and go clockwise",
        "ignore if",
        "- zero size",
        "- we're already beyond the full circle",
        "- adding the current slice would go beyond the full circle",
        "var isFirefox = typeof InstallTrigger !== 'undefined';",
        "console.log(window.devicePixelRatio, backingStore);",
        "if( isFirefox ){ // because ff can't scale canvas properly",
        "return 1;",
        "}",
        "turn off for now, seems context does its own caching",
        "var cache = this.paintCache(context);",
        "var fillStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';",
        "if( cache.fillStyle !== fillStyle ){",
        "context.fillStyle = cache.fillStyle = fillStyle;",
        "}",
        "turn off for now, seems context does its own caching",
        "var cache = this.paintCache(context);",
        "var strokeStyle = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';",
        "if( cache.strokeStyle !== strokeStyle ){",
        "context.strokeStyle = cache.strokeStyle = strokeStyle;",
        "}",
        "Resize canvas",
        "save cycles if same",
        "resizing resets the style",
        "people can't see much better than 60fps",
        "don't cap max b/c it's more important to be responsive than smooth",
        "Redraw frame",
        "console.log('redraw');",
        "estimate the ideal redraw limit based on how fast we can draw",
        "console.log('--\\nideal: %i; effective: %i', this.averageRedrawTime, redrawLimit);",
        "console.log('-- skip');",
        "we have new things to draw but we're busy, so try again when possibly free",
        "console.log('-- redraw --')",
        "startTime = +new Date();",
        "console.profile('draw' + startTime)",
        "apply pixel ratio",
        "clear the cache since we don't need it",
        "NB : VERY EXPENSIVE",
        "no need to render",
        "console.log('redrawing node layer');",
        "console.log('redrawing selection box');",
        "context.font = '20px helvetica';",
        "use a weighted average with a bias from the previous average so we don't spike so easily",
        "console.log('actual: %i, average: %i', endTime - startTime, this.averageRedrawTime);",
        "console.profileEnd('draw' + startTime)",
        "console.log('motion blur clear');",
        "draw to context",
        "makes direct renders to screen a bit more responsive",
        "@O Polygon drawing",
        "Draw path",
        "Fill path",
        "Round rectangle drawing",
        "Start at top middle",
        "Arc from middle top to right side",
        "Arc from right side to bottom",
        "Arc from bottom to left side",
        "Arc from left side to topBorder",
        "Join line",
        "Rasterize the layers, but only if container has nonzero size",
        "draw the full bounds of the graph",
        "draw the current view",
        "only needed for compound graphs",
        "build ids lookup if doesn't already exist",
        "helper function to determine which child nodes and inner edges",
        "of a compound node to be dragged as well as the grabbed and selected nodes",
        "TODO do not drag hidden children & children of hidden children?",
        "adds the given nodes, and its edges to the drag layer",
        "always add to drag",
        "also add nodes and edges related to the topmost ancestor",
        "helper function to determine which ancestor nodes and edges should go",
        "to the drag layer (or should be removed from drag layer).",
        "find top-level parent",
        "no parent node: no nodes to add to the drag layer",
        "auto resize",
        "stop right click menu from appearing on cy",
        "Primary key",
        "Right click button",
        "Primary button",
        "Element dragging",
        "If something is under the cursor and it is draggable, prepare to grab it",
        "Only add this selected node to drag if it is draggable, eg. has nonzero opacity",
        "Selection box",
        "Initialize selection box coordinates",
        "save cycles if mouse events aren't to be captured",
        "inside container bounds so OK",
        "if target is outisde cy container, then this event is not for us",
        "Mousemove event",
        "trigger context drag if rmouse down",
        "console.log('cxtdragout ' + r.hoverData.cxtOver.id());",
        "console.log('cxtdragover ' + near.id());",
        "Check if we are drag panning the entire graph",
        "Needs reproject due to pan changing viewport",
        "Checks primary button down & out of time & mouse not moved much",
        "&& (Math.abs(select[3] - select[1]) + Math.abs(select[2] - select[0]) < 4)",
        "deactivate bg on box selection",
        "then drag",
        "indicate that we actually did drag the node",
        "now, add the elements to the drag layer if not done already",
        "Locked nodes not draggable, as well as non-visible nodes",
        "otherwise save drag delta for when we actually start dragging so the relative grab pos is constant",
        "prevent the dragging from triggering text selection on the page",
        "console.log('--\\nmouseup', e)",
        "not active bg now",
        "if not right mouse",
        "Deselect all elements if nothing is currently under the mouse cursor and we aren't dragging something",
        "not mousedown on node",
        "didn't move the node around",
        "not box selection",
        "not panning",
        "Mouseup event",
        "console.log('trigger mouseup et al');",
        "Click event",
        "console.log('trigger click et al');",
        "Single selection",
        "console.log('single selection')",
        "if panning, don't change selection state",
        "always need redraw in case eles unselectable",
        "Cancel drag pan",
        "console.log('free at end', draggedElements)",
        "for compound nodes, also remove related nodes and edges from the drag layer",
        "draggedElements = r.dragData.possibleDragElements = [];",
        "else not right mouse",
        "r.data.canvasNeedsRedraw[CanvasRenderer.SELECT_BOX] = true;",
        "console.log('mu', pos[0], pos[1]);",
        "console.log('ss', select);",
        "while scrolling, ignore wheel-to-zoom",
        "if pan dragging or cxt dragging, wheel movements make no zoom",
        "fixes slow wheel events on ff/linux and ff/windows",
        "Functions to help with whether mouse wheel should trigger zooming",
        "--",
        "disable nonstandard wheel events",
        "r.registerBinding(r.data.container, 'mousewheel', wheelHandler, true);",
        "r.registerBinding(r.data.container, 'DOMMouseScroll', wheelHandler, true);",
        "r.registerBinding(r.data.container, 'MozMousePixelScroll', wheelHandler, true); // older firefox",
        "Functions to help with handling mouseout/mouseover on the Cytoscape container",
        "Handle mouseout on Cytoscape container",
        "starting points for pinch-to-zoom",
        "initial distance between finger 1 and finger 2 for pinch-to-zoom",
        "center point on start pinch to zoom",
        "record starting points for pinch-to-zoom",
        "anything in the set of dragged eles should be released",
        "consider context tap",
        "console.log(distance1)",
        "console.log('cxttapstart')",
        "console.log(center1);",
        "console.log('touchstart ptz');",
        "console.log(offsetLeft, offsetTop);",
        "console.log(f1x1, f1y1);",
        "console.log(f2x1, f2y1);",
        "console.log(distance1);",
        "console.log(center1);",
        "console.log('another tapstart')",
        "reset drag elements, since near will be added again",
        "Tap, taphold",
        "-----",
        "if pinching, then taphold unselect shouldn't take effect",
        "This time double constraint prevents multiple quick taps",
        "followed by a taphold triggering multiple taphold events",
        "&& Date.now() - r.touchData.singleTouchStartTime > 250",
        "console.log('taphold');",
        "r.redraw();",
        "console.log = function(m){ $('#console').append('<div>'+m+'</div>'); };",
        "if (!capture) { return; };",
        "var distance2 = distance( f1x2, f1y2, f2x2, f2y2 );",
        "console.log(factor, distance2)",
        "cancel ctx gestures if the distance b/t the fingers increases",
        "console.log('cxtdrag')",
        "console.log('cxtdragout');",
        "console.log('cxtdragover');",
        "two fingers => pinch to zoom",
        "console.log('touchmove ptz');",
        "(x2, y2) for fingers 1 and 2",
        "console.log( f1x2, f1y2 )",
        "console.log( f2x2, f2y2 )",
        "var distance2Sq = distanceSq( f1x2, f1y2, f2x2, f2y2 );",
        "var factor = Math.sqrt( distance2Sq ) / Math.sqrt( distance1Sq );",
        "console.log(distance2)",
        "console.log(factor)",
        "console.log(factor)",
        "console.log(distance2 + ' / ' + distance1);",
        "console.log('--');",
        "delta finger1",
        "delta finger 2",
        "translation is the normalised vector of the two fingers movement",
        "i.e. so pinching cancels out and moving together pans",
        "adjust factor by the speed multiplier",
        "var speed = 1.5;",
        "if( factor > 1 ){",
        "factor = (factor - 1) * speed + 1;",
        "} else {",
        "factor = 1 - (1 - factor) * speed;",
        "}",
        "now calculate the zoom",
        "the model center point converted to the current rendered pos",
        "console.log(pan2);",
        "console.log(zoom2);",
        "remove dragged eles",
        "Re-project",
        "then dragging can happen",
        "otherise keep track of drag delta for later",
        "Touchmove event",
        "Check to cancel taphold",
        "Re-project",
        "r.redraw();",
        "console.log('cxttapend')",
        "console.log('cxttap')",
        "no more box selection if we don't have three fingers",
        "this.threeFingerSelectTimeout = setTimeout(function(){",
        "console.log(box);",
        "}, 100);",
        "Last touch released",
        "Prepare to select the currently touched node, only if it hasn't been dragged past a certain distance",
        "didn't drag nodes around",
        "pinch to zoom should not affect selection",
        "Tap event, roughly same as mouse click event for touch",
        "console.log('tap');",
        "reset for next mousedown",
        "r.redraw();",
        "Node shape contract:",
        "",
        "draw: draw",
        "intersectLine: report intersection from x, y, to node center",
        "checkPoint: check x, y in node",
        "console.log('drawing ellipse');",
        "console.log(arguments);",
        "At origin, radius 1, 0 to 2pi",
        "console.log(arguments);",
        "polygonIntersectLine(x, y, basePoints, centerX, centerY, \n        width, height, padding);",
        "return renderer.polygonIntersectLine(\n        node, width, height,\n        x, y, nodeShapes['triangle'].points);",
        "Looks like the width passed into this function is actually the total width / 2",
        "Check hBox",
        "Check vBox",
        "Check top left quarter circle",
        "if (renderer.boxIntersectEllipse(x, y, x, y, padding, \n        cornerRadius * 2, cornerRadius * 2,\n        centerX - width + cornerRadius,\n        centerY - height + cornerRadius)) {\n        return true;\n      }",
        "Check top right quarter circle",
        "Check bottom right quarter circle",
        "Check bottom left quarter circle",
        "console.log(outerPoints);",
        "console.log(innerPoints);",
        "Outer radius is 1; inner radius of star is smaller",
        "console.log(star5Points);",
        "whether to show the layout as it's running",
        "max length in ms to run the layout",
        "on every layout reposition of nodes, fit the viewport",
        "padding around the simulation",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "so you can't drag nodes during layout",
        "callbacks on layout events",
        "callback on layoutready",
        "callback on layoutstop",
        "forces used by arbor (use arbor default on undefined)",
        "static numbers or functions that dynamically return what these",
        "values should be for each element",
        "e.g. nodeMass: function(n){ return n.data('weight') }",
        "smoothing of arbor bounding box",
        "function that returns true if the system is stable to indicate",
        "that the layout can be stopped",
        "infinite layout options",
        "overrides all other options for a forces-all-the-time mode",
        "backward compatibility for old animation option",
        "arbor doesn't work with just 1 node",
        "if we're stable (according to the client), we're done",
        "this.scratch().arbor.tempMass = 1000;",
        "TODO enable when layout add/remove api added",
        "var ele = this;",
        "var arborEle = ele.scratch().arbor;",
        "if( !arborEle ){ return; }",
        "if( ele.isNode() ){",
        "sys.pruneNode( arborEle );",
        "} else {",
        "sys.pruneEdge( arborEle );",
        "}",
        "TODO enable when layout add/remove api added",
        "var ele = this;",
        "if( ele.isNode() ){",
        "addNode( ele );",
        "} else {",
        "addEdge( ele );",
        "}",
        "they don't exist in the sim",
        "disable grabbing if so set",
        "unbind handlers",
        "enable back grabbing if so set",
        "require",
        "chaining",
        "chaining",
        "whether to fit the viewport to the graph",
        "whether the tree is directed downwards (or edges can point in any direction if false)",
        "padding on fit",
        "put depths in concentric circles if true, put depths top down if false",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "prevents node overlap, may overflow boundingBox if not enough space",
        "the roots of the trees",
        "how many times to try to position the nodes in a maximal way (i.e. no backtracking)",
        "whether to transition the node positions",
        "duration of animation in ms if enabled",
        "callback on layoutready",
        "callback on layoutstop",
        "find the depths of the nodes",
        "check for nodes not found by bfs",
        "assign orphan nodes a depth from their neighborhood",
        "assign orphan nodes that are still left to the depth of their subgraph",
        "var subgraph = graph.bfs( node ).path;",
        "for( var i = 0; i < subgraph.length; i++ ){",
        "var depth = id2depth[ subgraph[i].id() ];",
        "if( depth !== undefined ){",
        "depths[depth].push( node );",
        "assignedDepth = true;",
        "break;",
        "}",
        "}",
        "worst case if the graph really isn't tree friendly, then just dump it in 0",
        "assign the nodes a depth and index",
        "returns true if has edges pointing in from a higher depth",
        "make maximal if so set by adjusting depths",
        "remove from old depth & index",
        "add to end of new depth",
        "find min distance we need to leave between nodes",
        "just to have some nice spacing",
        "get the weighted percent for an element based on its connectivity to other levels",
        "only get influenced by elements above",
        "so lone nodes have a \"don't care\" state in sorting",
        "rearrange the indices in each depth level based on connectivity",
        "do it a few times b/c the depths are dynamic and we want a more stable result",
        "and update",
        "debugger;",
        "get positions in reverse depth order",
        "chaining",
        "whether to fit the viewport to the graph",
        "the padding on fit",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "prevents node overlap, may overflow boundingBox and radius if not enough space",
        "the radius of the circle",
        "the position of the first node",
        "whether the layout should go counterclockwise (true) or clockwise (false)",
        "whether to transition the node positions",
        "duration of animation in ms if enabled",
        "callback on layoutready",
        "callback on layoutstop",
        "calculate the radius",
        "but only if more than one node (can't overlap)",
        "just to have some nice spacing",
        "s.t. no nodes overlapping",
        "chaining",
        "default layout options",
        "whether to show the layout as it's running",
        "number of ticks per frame; higher is faster but more jerky",
        "max length in ms to run the layout",
        "so you can't drag nodes during layout",
        "on every layout reposition of nodes, fit the viewport",
        "padding around the simulation",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "layout event callbacks",
        "on layoutready",
        "on layoutstop",
        "positioning options",
        "use random node positions at beginning of layout",
        "if true, prevents overlap of node bounding boxes",
        "if true, avoids disconnected components from overlapping",
        "extra spacing around nodes",
        "use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }",
        "relative alignment constraints on nodes, e.g. function( node ){ return { x: 0, y: 1 } }",
        "different methods of specifying edge length",
        "each can be a constant numerical value or a function like `function( edge ){ return 2; }`",
        "sets edge length directly in simulation",
        "symmetric diff edge length in simulation",
        "jaccard edge length in simulation",
        "iterations of cola algorithm; uses default values on undefined",
        "unconstrained initial layout iterations",
        "initial layout iterations with user-specified constraints",
        "initial layout iterations with all constraints including non-overlap",
        "infinite layout options",
        "overrides all other options for a forces-all-the-time mode",
        "constructor",
        "options : object containing layout options",
        "runs the layout",
        "cy is automatically populated for us in the constructor",
        "trigger layoutstop when the layout stops (e.g. finishes)",
        "trigger layoutready when each node has had its position set at least once",
        "frames until a tick; used to slow down sim for debugging",
        "at least 1",
        "on sim event",
        "kick off the simulation",
        "resume layout if done",
        "resume => new kick",
        "allow regular finish b/c of new kick",
        "multiple ticks in a row",
        "skip ticks to slow down layout for debugging",
        "pick up true ret vals => sim done",
        "dummy; not needed",
        "TODO",
        "if set no grabbing during layout",
        "handle node dragging",
        "add nodes to cola",
        "then set alignment constraints",
        "add alignment constraints on nodes",
        "add compound nodes to cola",
        "add basic group incl leaf nodes",
        "add subgroups",
        "get the edge length setting mechanism",
        "add the edges to cola",
        "set the flow of cola",
        "e.g. options.flow: true",
        "require",
        "chaining",
        "called on continuous layouts to stop them before they finish",
        "chaining",
        "register the layout",
        "whether to fit the viewport to the graph",
        "the padding on fit",
        "the position of the first node",
        "whether the layout should go counterclockwise/anticlockwise (true) or clockwise (false)",
        "min spacing between outside of nodes (used for radius adjustment)",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "prevents node overlap, may overflow boundingBox if not enough space",
        "height of layout area (overrides container height)",
        "width of layout area (overrides container width)",
        "returns numeric value for each node, placing higher nodes in levels towards the centre",
        "the variation of concentric values in each level",
        "whether to transition the node positions",
        "duration of animation in ms if enabled",
        "callback on layoutready",
        "callback on layoutstop",
        "{ node, value }",
        "calculate the node value",
        "for style mapping",
        "in case we used the `concentric` in style",
        "calculate max size now based on potentially updated mappers",
        "sort node values in descreasing order",
        "put the values into levels",
        "create positions from levels",
        "id => position",
        "min dist between nodes",
        "then strictly constrain to bb",
        "calculate the radius",
        "but only if more than one node (can't overlap)",
        "s.t. no nodes overlapping",
        "position the nodes",
        "chaining",
        "The CoSE layout was written by Gerardo Huck.\n\n  Modifications tracked on Github.",
        "Called on `layoutready`",
        "Called on `layoutstop`",
        "Whether to animate while running the layout",
        "Number of iterations between consecutive screen positions update (0 -> only updated on the end)",
        "Whether to fit the network view after when done",
        "Padding on fit",
        "Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "Whether to randomize node positions on the beginning",
        "Whether to use the JS console to print debug messages",
        "Node repulsion (non overlapping) multiplier",
        "Node repulsion (overlapping) multiplier",
        "Ideal edge (non nested) length",
        "Divisor to compute edge forces",
        "Nesting factor (multiplier) to compute ideal edge length for nested edges",
        "Gravity force (constant)",
        "Maximum number of iterations to perform",
        "Initial temperature (maximum node displacement)",
        "Cooling factor (how the temperature is reduced between consecutive iterations",
        "Lower temperature threshold (below this point the layout will end)",
        "Set DEBUG - Global variable",
        "Get start time",
        "Initialize layout info",
        "Show LayoutInfo contents if debugging",
        "If required, randomize node positions",
        "Do one step in the phisical simulation",
        "Update temperature",
        "Fit the graph if necessary",
        "Get end time",
        "Layout has finished",
        "chaining",
        "chaining",
        "Shortcut",
        "Iterate over all nodes, creating layout nodes",
        "Add new node",
        "Add entry to id-index map",
        "Inline implementation of a queue, used for traversing the graph in BFS order",
        "Points to the start the queue",
        "Points to the end of the queue",
        "Second pass to add child information and",
        "initialize queue for hierarchical traversal",
        "Check if node n has a parent node",
        "Add node Id to parent's list of children",
        "If a node doesn't have a parent, then it's in the root graph",
        "Add root graph to graphSet",
        "Traverse the graph, level by level,",
        "Get the node to visit and remove it from queue",
        "Add children nodes as a new graph to graph set",
        "Add children to que queue to be visited",
        "Create indexToGraph map",
        "Iterate over all edges, creating Layout Edges",
        "Compute ideal length",
        "Check if it's an inter graph edge",
        "Find lowest common graph ancestor",
        "Compute sum of node depths, relative to lca graph",
        "Source depth",
        "Target depth",
        "Update idealLength",
        "Finally, return layoutInfo object",
        "Find their common ancester, starting from the root graph",
        "If aux function couldn't find the common ancester,",
        "then it is the root graph",
        "If both nodes belongs to graphIx",
        "Make recursive calls for all subgraphs",
        "If the node has no child, skip it",
        "Neither node1 nor node2 are present in this subgraph",
        "One of (node1, node2) is present in this subgraph",
        "We've already found both nodes, no need to keep searching",
        "Both nodes are present in this subgraph",
        "No need to randomize compound nodes",
        "then add extra bounding box constraint",
        "Trigger layoutReady only on first call",
        "Calculate node repulsions",
        "Calculate edge forces",
        "Calculate gravity forces",
        "Propagate forces from parent to child",
        "Update positions based on calculated forces",
        "Go through each of the graphs in graphSet",
        "Nodes only repel each other if they belong to the same graph",
        "Now get all the pairs of nodes",
        "Only get each pair once, (A, B) = (B, A)",
        "Get direction of line connecting both node centers",
        "If both centers are the same, apply a random force",
        "TODO",
        "If nodes overlap, repulsion force is proportional",
        "to the overlap",
        "Compute the module and components of the force vector",
        "If there's no overlap, force is inversely proportional",
        "to squared distance",
        "Get clipping points for both nodes",
        "Use clipping points to compute distance",
        "Compute the module and components of the force vector",
        "Apply force",
        "Shorcuts",
        "Compute intersection",
        "Case: Vertical direction (up)",
        "Case: Vertical direction (down)",
        "Case: Intersects the right border",
        "Case: Intersects the left border",
        "Case: Intersects the top border",
        "Case: Intersects the bottom border",
        "Iterate over all edges",
        "Get edge, source & target nodes",
        "Get direction of line connecting both node centers",
        "If both centers are the same, do nothing.",
        "A random force has already been applied as node repulsion",
        "Get clipping points for both nodes",
        "Add this force to target and source nodes",
        "Compute graph center",
        "Get Parent node for this graph, and use its position as center",
        "Apply force to all nodes in graph",
        "TODO: Use global variable for distance threshold",
        "Inline implementation of a queue, used for traversing the graph in BFS order",
        "Points to the start the queue",
        "Points to the end of the queue",
        "Start by visiting the nodes in the root graph",
        "Traverse the graph, level by level,",
        "Get the node to visit and remove it from queue",
        "We only need to process the node if it's compound",
        "Propagate offset",
        "Add children to queue to be visited",
        "Reset parent offsets",
        "Reset boundaries for compound nodes",
        "No need to set compound node position",
        "Limit displacement in order to improve stability",
        "Update ancestry boudaries",
        "Update size, position of compund nodes",
        "If there's no parent, we are done",
        "Get Parent Node",
        "MaxX",
        "MinX",
        "MaxY",
        "MinY",
        "If updated boundaries, propagate changes upward",
        "register the layout",
        "default layout options",
        "dagre algo options, uses default value on undefined",
        "the separation between adjacent nodes in the same rank",
        "the separation between adjacent edges in the same rank",
        "the separation between adjacent nodes in the same rank",
        "'TB' for top to bottom flow, 'LR' for left to right",
        "number of ranks to keep between the source and target of the edge",
        "general layout options",
        "whether to fit to viewport",
        "fit padding",
        "whether to transition the node positions",
        "duration of animation in ms if enabled",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "on layoutready",
        "on layoutstop",
        "constructor",
        "options : object containing layout options",
        "runs the layout",
        "cy is automatically populated for us in the constructor",
        "add nodes to dagre",
        "add edges to dagre",
        "require",
        "chaining",
        "register the layout",
        "whether to fit the viewport to the graph",
        "padding used on fit",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "prevents node overlap, may overflow boundingBox if not enough space",
        "force num of rows in the grid",
        "force num of cols in the grid",
        "returns { row, col } for element",
        "whether to transition the node positions",
        "duration of animation in ms if enabled",
        "callback on layoutready",
        "callback on layoutstop",
        "width/height * splits^2 = cells where splits is number of times to split width",
        "if rows or columns were set in options, use those values",
        "otherwise use the automatic values and adjust accordingly",
        "if rounding was up, see if we can reduce rows or columns",
        "reducing the small side takes away the most cells, so try it first",
        "if rounding was too low, add rows or columns",
        "try to add to larger side first (adds less in multiplication)",
        "e.g. 'c-0-2' => true",
        "to keep track of current cell position",
        "get a cache of all the manual positions",
        "must have at least row or col def'd",
        "find unused col",
        "find unused row",
        "see if we have a manual position set",
        "otherwise set automatically",
        "chaining",
        "default layout options",
        "on layoutready",
        "on layoutstop",
        "constructor",
        "options : object containing layout options",
        "runs the layout",
        "elements to consider in the layout",
        "cy is automatically populated for us in the constructor",
        "jshint ignore:line",
        "puts all nodes at (0, 0)",
        "trigger layoutready when each node has had its position set at least once",
        "trigger layoutstop when the layout stops (e.g. finishes)",
        "chaining",
        "called on continuous layouts to stop them before they finish",
        "chaining",
        "register the layout",
        "map of (node id) => (position obj); or function(node){ return somPos; }",
        "the zoom level to set (prob want fit = false if set)",
        "the pan level to set (prob want fit = false if set)",
        "whether to fit to viewport",
        "padding on fit",
        "whether to transition the node positions",
        "duration of animation in ms if enabled",
        "callback on layoutready",
        "callback on layoutstop",
        "chaining",
        "whether to fit to viewport",
        "fit padding",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "whether to transition the node positions",
        "duration of animation in ms if enabled",
        "callback on layoutready",
        "callback on layoutstop",
        "chaining",
        "register the layout",
        "we're registering a layout",
        "the layout name",
        "the layout prototype",
        "whether to show the layout as it's running",
        "max length in ms to run the layout",
        "so you can't drag nodes during layout",
        "whether to fit the viewport to the graph",
        "padding on fit",
        "constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }",
        "whether to use random initial positions",
        "overrides all other options for a forces-all-the-time mode",
        "callback on layoutready",
        "callback on layoutstop",
        "springy forces",
        "make a new graph",
        "make some nodes",
        "connect them with edges",
        "var targetBB = {bottomleft: new Springy.Vector(-2, -2), topright: new Springy.Vector(2, 2)};",
        "convert to/from screen coordinates",
        "draw an edge",
        "setLayoutPositionForElement(element);",
        "set initial node points",
        "update node positions when dragging",
        "disable grabbing if so set",
        "remove all nodes",
        "require",
        "chaining",
        "chaining",
        "the null renderer does nothing"
    ],
    "docstrings": [
        "*      console.log(\"line from (\" + x1 + \", \" + y1 + \") to (\" + x2 + \", \" + y2 + \")\");",
        "*        console.log(y3, y);",
        "*        console.log('22');",
        "*    console.log(\"up: \" + up + \", down: \" + down);",
        "* (1 + i/2);",
        "* (1 + i/2);",
        "* Returns the width of the given node. If the width is set to auto,\n   * returns the value of the autoWidth field.\n   *\n   * @param node          a node\n   * @return {number}     width of the node",
        "* Returns the height of the given node. If the height is set to auto,\n   * returns the value of the autoHeight field.\n   *\n   * @param node          a node\n   * @return {number}     width of the node",
        "* Returns the shape of the given node. If the height or width of the given node\n   * is set to auto, the node is considered to be a compound.\n   *\n   * @param node          a node\n   * @return {String}     shape of the node",
        "*2 radius guarantees outside shape",
        "*2 radius guarantees outside shape",
        "*2 b/c the stroke is drawn centred on the middle",
        "*0.999 b/c chrome rendering bug on full circle",
        "* @brief :  default layout options",
        "* @brief       : constructor\n   * @arg options : object containing layout options",
        "* @brief : runs the layout",
        "* @brief : called on continuous layouts to stop them before they finish",
        "* @brief     : Creates an object which is contains all the data\n   *              used in the layout process\n   * @arg cy    : cytoscape.js object\n   * @return    : layoutInfo object initialized",
        "* @brief : This function finds the index of the lowest common \n   *          graph ancestor between 2 nodes in the subtree \n   *          (from the graph hierarchy induced tree) whose\n   *          root is graphIx\n   *\n   * @arg node1: node1's ID\n   * @arg node2: node2's ID\n   * @arg layoutInfo: layoutInfo object\n   *",
        "* @brief          : Auxiliary function used for LCA computation\n   * \n   * @arg node1      : node1's ID\n   * @arg node2      : node2's ID\n   * @arg graphIx    : subgraph index\n   * @arg layoutInfo : layoutInfo object\n   *\n   * @return         : object of the form {count: X, graph: Y}, where:\n   *                   X is the number of ancesters (max: 2) found in \n   *                   graphIx (and it's subgraphs),\n   *                   Y is the graph index of the lowest graph containing \n   *                   all X nodes",
        "* @brief: printsLayoutInfo into js console\n   *         Only used for debbuging",
        "* @brief : Randomizes the position of all nodes",
        "* @brief          : Updates the positions of nodes in the network\n   * @arg layoutInfo : LayoutInfo object\n   * @arg cy         : Cytoscape object\n   * @arg options    : Layout options",
        "* @brief          : Performs one iteration of the physical simulation\n   * @arg layoutInfo : LayoutInfo object already initialized\n   * @arg cy         : Cytoscape object\n   * @arg options    : Layout options",
        "* @brief : Computes the node repulsion forces",
        "* @brief : Compute the node repulsion forces between a pair of nodes",
        "* @brief : Finds the point in which an edge (direction dX, dY) intersects \n   *          the rectangular bounding box of it's source/target node",
        "* @brief  : Determines whether two nodes overlap or not\n   * @return : Amount of overlapping (0 => no overlap)",
        "* @brief : Calculates all edge forces",
        "* @brief : Computes gravity forces for all nodes",
        "* @brief          : This function propagates the existing offsets from \n   *                   parent nodes to its descendents.\n   * @arg layoutInfo : layoutInfo Object\n   * @arg cy         : cytoscape Object\n   * @arg options    : Layout options",
        "* @brief : Updates the layout model positions, based on \n   *          the accumulated forces",
        "* @brief : Limits a force (forceX, forceY) to be not \n   *          greater (in modulo) than max. \n   8          Preserves force direction.",
        "* @brief : Function used for keeping track of compound node \n   *          sizes, since they should bound all their subnodes.",
        "* @brief : Logs a debug message in JS console, if DEBUG is ON"
    ],
    "functions": [
        "hue2rgb",
        "ch2hex",
        "sampleInBox",
        "setExtension",
        "getExtension",
        "setModule",
        "getModule",
        "returnFalse",
        "returnTrue",
        "removeSelAndBlockFromRemaining",
        "removePropAndValFromRem",
        "ready",
        "callback",
        "globalAnimationStep",
        "handleElements",
        "handleElement",
        "startAnimation",
        "step",
        "valid",
        "ease",
        "addConnectedEdges",
        "addChildren",
        "add",
        "removeEdgeRef",
        "removeChildRef",
        "findSet",
        "add",
        "update",
        "defineDegreeFunction",
        "defineDegreeBoundsFunction",
        "defineSwitchFunction",
        "defineSwitchSet",
        "defineSourceFunction",
        "defineEdgesWithFunction",
        "defineParallelEdgesFunction",
        "CanvasRenderer",
        "checkNode",
        "checkEdge",
        "pushBezierPts",
        "drawArrowhead",
        "drawToContext",
        "setContextTransform",
        "drawElements",
        "ArborLayout",
        "calculateValueForElement",
        "addNode",
        "addEdge",
        "BreadthFirstLayout",
        "CircleLayout",
        "ColaLayout",
        "ConcentricLayout",
        "CoseLayout",
        "DagreLayout",
        "GridLayout",
        "NullLayout",
        "PresetLayout",
        "getPosition",
        "RandomLayout",
        "SpringyLayout",
        "setLayoutPositionForElement",
        "start",
        "NullRenderer"
    ],
    "classes": []
}