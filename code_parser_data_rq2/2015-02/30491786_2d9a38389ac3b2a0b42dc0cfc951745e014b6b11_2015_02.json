{
    "identifiers": [
        "When",
        "value",
        "When",
        "When",
        "When",
        "value",
        "When",
        "When",
        "When",
        "value",
        "When",
        "When",
        "value",
        "When",
        "transform",
        "val",
        "When",
        "When",
        "value",
        "When",
        "transform",
        "val",
        "When",
        "When",
        "value",
        "transform",
        "val",
        "When",
        "When",
        "_",
        "a1",
        "a1",
        "a2",
        "a1",
        "a2",
        "a3",
        "a1",
        "a2",
        "a3",
        "a4",
        "a1",
        "a2",
        "a3",
        "a4",
        "a5",
        "a1",
        "a2",
        "a3",
        "a4",
        "a5",
        "a6",
        "err",
        "result",
        "_",
        "_",
        "_",
        "_",
        "_",
        "_",
        "attempt",
        "f",
        "_",
        "attempt",
        "f",
        "_",
        "arg1",
        "attempt",
        "f",
        "_",
        "arg1",
        "arg2",
        "attempt",
        "f",
        "_",
        "arg1",
        "arg2",
        "arg3",
        "attempt",
        "f",
        "_",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "attempt",
        "f",
        "_",
        "arg1",
        "arg2",
        "arg3",
        "arg4",
        "arg5",
        "lift",
        "f",
        "_",
        "_",
        "lift",
        "f",
        "_",
        "_",
        "lift",
        "f",
        "_",
        "_",
        "lift",
        "f",
        "_",
        "_",
        "lift",
        "f",
        "_",
        "_",
        "lift",
        "f",
        "_",
        "_",
        "promise",
        "resolver",
        "resolve",
        "value",
        "reject",
        "reason",
        "reject",
        "reason",
        "all",
        "promisesOrValues",
        "defer",
        "join",
        "promises",
        "join",
        "promises",
        "resolve",
        "promise",
        "resolve",
        "foreign",
        "resolve",
        "value",
        "update",
        "reason",
        "value",
        "value",
        "onRejected",
        "reason",
        "reason",
        "onRejected",
        "reason",
        "exceptionType",
        "onRejected",
        "reason",
        "onFulfilledOrRejected",
        "onFulfilledOrRejected",
        "value",
        "value",
        "value",
        "onFulfilledSideEffect",
        "value",
        "milliseconds",
        "milliseconds",
        "reason",
        "thisArg",
        "thisArg",
        "onRejected",
        "reason",
        "predicate",
        "reason",
        "onRejected",
        "reason",
        "exceptionType",
        "onRejected",
        "reason",
        "onFulfilled",
        "value",
        "onRejected",
        "reason",
        "onProgress",
        "update",
        "onFulfilled",
        "value",
        "onRejected",
        "reason",
        "combine",
        "value1",
        "value2",
        "value2",
        "onFulfilled",
        "value",
        "onRejected",
        "reason",
        "When",
        "when",
        "_",
        "when",
        "lift",
        "fn",
        "_",
        "_",
        "lift",
        "fn",
        "_",
        "_",
        "lift",
        "fn",
        "_",
        "_",
        "lift",
        "fn",
        "_",
        "_",
        "lift",
        "fn",
        "_",
        "_",
        "lift",
        "fn",
        "_",
        "_",
        "call",
        "fn",
        "_",
        "when",
        "call",
        "fn",
        "_",
        "arg1",
        "when",
        "when",
        "call",
        "fn",
        "_",
        "arg1",
        "when",
        "arg2",
        "when",
        "when",
        "call",
        "fn",
        "_",
        "arg1",
        "when",
        "arg2",
        "when",
        "arg3",
        "when",
        "when",
        "call",
        "fn",
        "_",
        "arg1",
        "when",
        "arg2",
        "when",
        "arg3",
        "when",
        "arg4",
        "when",
        "when",
        "call",
        "fn",
        "_",
        "arg1",
        "when",
        "arg2",
        "when",
        "arg3",
        "when",
        "arg4",
        "when",
        "arg5",
        "when",
        "when",
        "apply",
        "fn",
        "_",
        "args",
        "when",
        "apply",
        "fn",
        "_",
        "args",
        "when",
        "apply",
        "fn",
        "_",
        "args",
        "when",
        "apply",
        "fn",
        "_",
        "args",
        "when",
        "apply",
        "fn",
        "_",
        "args",
        "when",
        "apply",
        "fn",
        "_",
        "args",
        "when",
        "liftAll",
        "srcApi",
        "transform",
        "destApi",
        "liftedFunc",
        "name",
        "destApi",
        "liftCallback",
        "callback",
        "err",
        "arg",
        "value",
        "when",
        "when",
        "bindCallback",
        "arg",
        "when",
        "callback",
        "err",
        "arg",
        "when",
        "reason",
        "value",
        "value",
        "when",
        "createCallback",
        "resolver",
        "err",
        "arg"
    ],
    "literals": [
        "string",
        "\"when\"",
        "\"when/node\"",
        "'when'",
        "string"
    ],
    "variables": [],
    "comments": [
        "Type definitions for When 2.4.0",
        "Project: https://github.com/cujojs/when",
        "Definitions by: Derek Cicerone <https://github.com/derekcicerone>, Wim Looman <https://github.com/Nemo157>",
        "Definitions: https://github.com/borisyankov/DefinitelyTyped",
        "Helper interfaces",
        "Make sure you test any usage of these overloads, exceptionType must",
        "be a constructor with prototype set to an instance of Error.",
        "Make sure you test any usage of these overloads, exceptionType must",
        "be a constructor with prototype set to an instance of Error."
    ],
    "docstrings": [
        "* Return a promise that will resolve only once all the supplied promisesOrValues\n     * have resolved. The resolution value of the returned promise will be an array\n     * containing the resolution values of each of the promisesOrValues.\n     * @memberOf when\n     *\n     * @param promisesOrValues array of anything, may contain a mix\n     *      of {@link Promise}s and values",
        "* Creates a {promise, resolver} pair, either or both of which\n     * may be given out safely to consumers.\n     * The resolver has resolve, reject, and progress.  The promise\n     * has then plus extended promise API.",
        "* Joins multiple promises into a single returned promise.\n     * @return a promise that will fulfill when *all* the input promises\n     * have fulfilled, or will reject when *any one* of the input promises rejects.",
        "* Joins multiple promises into a single returned promise.\n     * @return a promise that will fulfill when *all* the input promises\n     * have fulfilled, or will reject when *any one* of the input promises rejects.",
        "* Returns a resolved promise. The returned promise will be\n     *  - fulfilled with promiseOrValue if it is a value, or\n     *  - if promiseOrValue is a promise\n     *    - fulfilled with promiseOrValue's value after it is fulfilled\n     *    - rejected with promiseOrValue's reason after it is rejected"
    ],
    "functions": [],
    "classes": []
}