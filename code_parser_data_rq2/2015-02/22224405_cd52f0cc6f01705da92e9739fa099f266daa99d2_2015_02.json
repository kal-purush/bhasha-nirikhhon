{
    "identifiers": [
        "unicode_literals",
        "egnyte",
        "exc",
        "resources",
        "Resource",
        "resources",
        "User",
        "_client",
        "id",
        "actor",
        "Resource",
        "start_id",
        "suppress",
        "folder",
        "types",
        "types",
        "join",
        "types",
        "__dict__",
        "copy",
        "d",
        "update",
        "filter_none_values",
        "start_id",
        "start_id",
        "suppress",
        "suppress",
        "types",
        "__class__",
        "d",
        "start_id",
        "count",
        "start_id",
        "start_id",
        "filter_none_values",
        "id",
        "start_id",
        "suppress",
        "suppress",
        "types",
        "count",
        "count",
        "_client",
        "get_url",
        "_url_template_list",
        "exc",
        "check_json_response",
        "_client",
        "GET",
        "url",
        "ResultList",
        "Event",
        "_client",
        "d",
        "d",
        "json",
        "get",
        "json",
        "start_id",
        "count",
        "start_id",
        "latest_event_id",
        "start_id",
        "count",
        "results",
        "results",
        "last",
        "id",
        "last",
        "timestamp",
        "_do_callbacks",
        "results",
        "results",
        "results"
    ],
    "literals": [
        "\"pubapi/v1/events/%(id)s\"",
        "\"pubapi/v1/events/cursor\"",
        "\"pubapi/v1/events\"",
        "'latest_event_id'",
        "'oldest_event_id'",
        "'timestamp'",
        "'|'",
        "'events'",
        "'latest_id'"
    ],
    "variables": [
        "_url_template",
        "_url_template",
        "_url_template_list",
        "_lazy_attributes",
        "start_id",
        "suppress",
        "folder",
        "types",
        "callbacks",
        "types",
        "d",
        "start_id",
        "url",
        "json",
        "start_id",
        "results",
        "last",
        "start_id",
        "timestamp"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Event.\n\n    Example attributes:\n    * id - event id\n    * timestamp - date of event in iso8061 format\n    * action_source - event source like [ WebUI | SyncEngine | Mobile | PublicAPI ]\n    * actor - id of user that generate event\n    * type - event type. For now we will support [ file_system | note ]\n    * action - event action. For now we will support [ create | delete | move | copy | rename ]\n    * object_detail - url to pub api that provide detail info about object from event like https://domain.egnyte.com/pubapi/v1/fs/Shared\n    * data - additional data specific for event type and action\n\n    Possible fields for 'data' field:\n    for 'type'='file' and action create or delete\n        'target_id' - entry id of create/deleted file\n        'target_path' - path to created/deleted file\n    for 'type'='file' and action move/copy/rename\n        'source_path' - source path to moved/copied/renamed file\n        'target_path' - target path to moved/copied/renamed file\n        'source_id' - source entry id of moved/copied/renamed file (for move/rename there is one entry id so could be only one field or same data for source_id and target_id)\n        'target_id' - target entry id of moved/copied/renamed file\n    for 'type'='folder' and action create or delete\n        'target_path' - path to created/deleted folder\n        'folder_id' - folder id of created/deleted folder\n    for 'type'='folder' and action move/copy/rename\n        'source_path' - source path to moved/copied/renamed folder\n        'target_path' - target path to moved/copied/renamed folder\n        'source_id' - source folder id of moved/copied/renamed folder\n        'target_id' - target folder id of moved/copied/renamed folder\n    for 'type'='note' and any available action (create, delete)\n        'note_id' - id of added/deleted note\n\n    \"\"\"",
        "\"\"\"Get a user object based on actor attributes\"\"\"",
        "\"\"\"\n    Events.\n    Attributes:\n\n    * latest_event_id - id of latest event\n    * oldest_event_id - id of oldest available event\n    * timestamp - iso8601 timestamp of latest event\n    \"\"\"",
        "\"\"\"\n        Returns a filtered view of the events,\n\n        Parameters:\n        * start_id - return all events occurred after id from the previous request (the events shouldn't overlap between calls). defaults to latest_event_id\n        * folder (optional) - return events occurred only for this folders and all its content (subfolders, files and notes).\n        * suppress (optional) - filter out events from requesting client or filter out events from requesting client done by requesting user. Allowed values: app, user or none (defaults to no filter)\n        * types (optional) - return only events of given types.\n\n        \"\"\"",
        "\"\"\"\n        Get detailed data about up to 'count' events 'start_id'.\n        \"\"\"",
        "\"\"\"\n        List events starting with latest_event_id, if any found, update start_id and return them.\n        \"\"\""
    ],
    "functions": [
        "user",
        "poll",
        "_do_callbacks",
        "start_polling"
    ],
    "classes": [
        "Event",
        "Events"
    ]
}