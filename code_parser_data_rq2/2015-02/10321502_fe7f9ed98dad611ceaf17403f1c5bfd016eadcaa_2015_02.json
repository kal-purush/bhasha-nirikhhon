{
    "identifiers": [
        "gdb",
        "linux",
        "tasks",
        "utils",
        "utils",
        "get_gdbserver_type",
        "utils",
        "GDBSERVER_QEMU",
        "gdb",
        "selected_thread",
        "num",
        "utils",
        "get_gdbserver_type",
        "utils",
        "GDBSERVER_KGDB",
        "gdb",
        "selected_thread",
        "ptid",
        "tid",
        "MAX_CPUS",
        "tid",
        "tasks",
        "get_thread_info",
        "tasks",
        "get_task_by_pid",
        "tid",
        "gdb",
        "GdbError",
        "var_ptr",
        "cpu",
        "cpu",
        "get_current_cpu",
        "utils",
        "is_target_arch",
        "gdb",
        "parse_and_eval",
        "format",
        "cpu",
        "gdb",
        "parse_and_eval",
        "format",
        "cpu",
        "gdb",
        "error",
        "var_ptr",
        "cast",
        "utils",
        "get_long_type",
        "offset",
        "pointer",
        "cast",
        "var_ptr",
        "dereference",
        "gdb",
        "PerCpu",
        "var_name",
        "cpu",
        "gdb",
        "parse_and_eval",
        "var_name",
        "per_cpu",
        "var_ptr",
        "cpu",
        "PerCpu"
    ],
    "literals": [
        "'cpu'",
        "\"Sorry, obtaining the current CPU is not yet \"",
        "\"supported with this gdb server.\"",
        "\"sparc:v9\"",
        "\"trap_block[{0}].__per_cpu_base\"",
        "\"__per_cpu_offset[{0}]\"",
        "\"lx_per_cpu\"",
        "\"&\""
    ],
    "variables": [
        "MAX_CPUS",
        "tid",
        "cpu",
        "offset",
        "offset",
        "offset",
        "pointer",
        "var_ptr"
    ],
    "comments": [
        "",
        "gdb helper commands and functions for Linux kernel debugging",
        "",
        "per-cpu tools",
        "",
        "Copyright (c) Siemens AG, 2011-2013",
        "",
        "Authors:",
        "Jan Kiszka <jan.kiszka@siemens.com>",
        "",
        "This work is licensed under the terms of the GNU GPL version 2.",
        "",
        "!CONFIG_SMP case"
    ],
    "docstrings": [
        "\"\"\"Return per-cpu variable.\n\n$lx_per_cpu(\"VAR\"[, CPU]): Return the per-cpu variable called VAR for the\ngiven CPU number. If CPU is omitted, the CPU of the current context is used.\nNote that VAR has to be quoted as string.\"\"\""
    ],
    "functions": [
        "get_current_cpu",
        "per_cpu",
        "invoke"
    ],
    "classes": [
        "PerCpu"
    ]
}