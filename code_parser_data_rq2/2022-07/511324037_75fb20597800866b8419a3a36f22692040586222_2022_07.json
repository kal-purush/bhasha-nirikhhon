{
    "identifiers": [
        "nums",
        "i",
        "nums",
        "i",
        "nums",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i1",
        "i2",
        "i1",
        "i1",
        "i2",
        "i2",
        "tmp",
        "e",
        "e",
        "curIndex",
        "curIndex",
        "curIndex",
        "curIndex",
        "curIndex",
        "curIndex",
        "curIndex",
        "firstElement",
        "cur",
        "cur",
        "cur",
        "cur",
        "cur",
        "smallChildInd",
        "cur",
        "smallChildInd",
        "cur",
        "cur",
        "smallChildInd",
        "cur",
        "smallChildInd",
        "points",
        "points",
        "n",
        "n",
        "i",
        "n",
        "i",
        "points",
        "i",
        "i",
        "j",
        "n",
        "j",
        "points",
        "j",
        "dist",
        "x1",
        "x2",
        "y1",
        "y2",
        "adjList",
        "i",
        "adjList",
        "i",
        "dist",
        "j",
        "adjList",
        "i",
        "dist",
        "j",
        "adjList",
        "j",
        "adjList",
        "j",
        "dist",
        "i",
        "adjList",
        "j",
        "dist",
        "i",
        "MinHeap",
        "visited",
        "n",
        "minHeap",
        "visited",
        "i",
        "finalCost",
        "partialCost",
        "visited",
        "i",
        "neighbourWithCost",
        "adjList",
        "i",
        "visited",
        "neighbourWithCost",
        "minHeap",
        "neighbourWithCost",
        "finalCost"
    ],
    "literals": [],
    "variables": [
        "i",
        "tmp",
        "firstElement",
        "cur",
        "smallChildInd",
        "minCostConnectPoints",
        "n",
        "finalCost",
        "x1",
        "x2",
        "y1",
        "y2",
        "dist",
        "adjList",
        "i",
        "x1",
        "y1",
        "j",
        "x2",
        "y2",
        "visited",
        "minHeap",
        "partialCost",
        "i",
        "partialCost",
        "i"
    ],
    "comments": [
        "Min Heap Implementation",
        "replace it with the last element in heap",
        "remove last elem",
        "get the smallest child (right or left)",
        "if one child (r or l) is less than curr we swap",
        "prepare adjacent list (each node has cost to every other node)",
        "prim's algorithm",
        "[cost,point]",
        "we gonna visit each node",
        "get the least cost & its correspondent node",
        "if the node hasn't been visited"
    ],
    "docstrings": [],
    "functions": [],
    "classes": [
        "MinHeap"
    ]
}