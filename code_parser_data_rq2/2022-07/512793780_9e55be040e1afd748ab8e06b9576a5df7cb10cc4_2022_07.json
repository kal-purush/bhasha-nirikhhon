{
    "identifiers": [
        "requests",
        "sys",
        "pandas",
        "pd",
        "thor_requests",
        "connect",
        "Connect",
        "sys",
        "path",
        "append",
        "local",
        "config",
        "URL",
        "VESEA_MARKET_ADDRESS",
        "VESEA_OFFERS_ADDRESS",
        "WOV_MARKET_ADDRESS",
        "WOV_OFFERS_ADDRESS",
        "url",
        "URL",
        "url",
        "__build_dictionary__",
        "Connect",
        "url",
        "url",
        "staticmethod",
        "pd",
        "read_csv",
        "sep",
        "_",
        "r",
        "df",
        "iterrows",
        "result",
        "update",
        "r",
        "r",
        "result",
        "staticmethod",
        "clause",
        "topic_size",
        "clause",
        "len",
        "clause",
        "topic_size",
        "clause",
        "len",
        "clause",
        "topic_size",
        "topic_array",
        "i",
        "i",
        "topic_size",
        "i",
        "len",
        "topic_array",
        "topic_size",
        "code",
        "topics",
        "tx_body",
        "requests",
        "post",
        "url",
        "url",
        "headers",
        "json",
        "tx_body",
        "timeout",
        "r",
        "json",
        "markets",
        "init_block",
        "end_block",
        "init_block",
        "end_block",
        "x",
        "x",
        "markets",
        "block_range",
        "criteria",
        "post_event_log",
        "tx_body",
        "tx_body",
        "collections",
        "init_block",
        "end_block",
        "init_block",
        "end_block",
        "x",
        "x",
        "collections",
        "block_range",
        "criteria",
        "post_event_log",
        "tx_body",
        "tx_body",
        "profile_contract_address",
        "method_hash",
        "user_address",
        "user_address",
        "user_address",
        "profile_contract_address",
        "method_hash",
        "user_address",
        "zfill",
        "lower",
        "clauses",
        "requests",
        "post",
        "url",
        "headers",
        "json",
        "tx_body",
        "timeout",
        "parse_tx",
        "r",
        "json",
        "r",
        "fromhex",
        "r",
        "decode",
        "err",
        "err",
        "profile_name",
        "replace",
        "staticmethod",
        "token_sc_address",
        "nft_id",
        "gateway",
        "token_sc_address",
        "hex",
        "nft_id",
        "zfill",
        "clauses",
        "requests",
        "post",
        "url",
        "headers",
        "json",
        "tx_body",
        "timeout",
        "fromhex",
        "r",
        "json",
        "decode",
        "strip",
        "token_uri",
        "replace",
        "token_uri",
        "replace",
        "gateway",
        "token_sc_address",
        "nft_id",
        "gateway",
        "__get_token_uri__",
        "token_sc_address",
        "token_sc_address",
        "nft_id",
        "nft_id",
        "gateway",
        "gateway",
        "requests",
        "get",
        "url",
        "token_uri",
        "result",
        "json",
        "result",
        "replace",
        "gateway",
        "result",
        "replace",
        "gateway",
        "x",
        "x",
        "x",
        "result",
        "x",
        "join",
        "attributes",
        "err",
        "err",
        "result",
        "err",
        "err",
        "result",
        "image_path",
        "attributes",
        "staticmethod",
        "token_sc_address",
        "nft_id",
        "gateway",
        "token_sc_address",
        "hex",
        "nft_id",
        "zfill",
        "clauses",
        "requests",
        "post",
        "url",
        "headers",
        "json",
        "tx_body",
        "timeout",
        "fromhex",
        "r",
        "json",
        "decode",
        "strip",
        "token_uri",
        "replace",
        "token_uri",
        "replace",
        "gateway",
        "token_uri",
        "token_uri",
        "token_sc_address",
        "nft_id",
        "gateway",
        "__get_community_token_uri__",
        "token_sc_address",
        "token_sc_address",
        "nft_id",
        "nft_id",
        "gateway",
        "gateway",
        "requests",
        "get",
        "url",
        "token_uri",
        "result",
        "json",
        "gateway",
        "result",
        "x",
        "result",
        "x",
        "x",
        "join",
        "attributes",
        "err",
        "err",
        "result",
        "err",
        "err",
        "result",
        "image_path",
        "attributes",
        "project_sc",
        "market",
        "init_block",
        "end_block",
        "market",
        "VESEA_OFFERS_ADDRESS",
        "VESEA_MARKET_ADDRESS",
        "WOV_OFFERS_ADDRESS",
        "WOV_MARKET_ADDRESS",
        "init_block",
        "end_block",
        "x",
        "topic",
        "project_sc",
        "x",
        "markets",
        "block_range",
        "criteria",
        "post_event_log",
        "tx_body",
        "tx_body"
    ],
    "literals": [
        "\"..\"",
        "\"../local/projects_config.csv\"",
        "\";\"",
        "\"project\"",
        "\"token_contract\"",
        "\"/logs/event\"",
        "\"accept\"",
        "\"application/json\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"unit\"",
        "\"block\"",
        "\"from\"",
        "\"to\"",
        "\"address\"",
        "\"range\"",
        "\"criteriaSet\"",
        "\"order\"",
        "\"desc\"",
        "\"unit\"",
        "\"block\"",
        "\"from\"",
        "\"to\"",
        "\"address\"",
        "\"topic0\"",
        "\"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"",
        "\"range\"",
        "\"criteriaSet\"",
        "\"order\"",
        "\"desc\"",
        "\"...\"",
        "\"to\"",
        "\"value\"",
        "\"0\"",
        "\"data\"",
        "\"clauses\"",
        "\"https://sync-mainnet.vechain.org/accounts/*\"",
        "\"accept\"",
        "\"application/json\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"data\"",
        "'utf-8'",
        "\"Error:\"",
        "\"\\x00\"",
        "\"\"",
        "\"to\"",
        "\"value\"",
        "\"0\"",
        "\"data\"",
        "\"0xc87b56dd\"",
        "\"clauses\"",
        "\"https://sync-mainnet.vechain.org/accounts/*\"",
        "\"accept\"",
        "\"application/json\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"data\"",
        "'utf-8'",
        "\"\\x00\"",
        "\"\"",
        "\"ipfs://\"",
        "\"image\"",
        "\"ipfs://\"",
        "\"Image\"",
        "\"ipfs://\"",
        "\"**\"",
        "\"trait_type\"",
        "\"**: \"",
        "\"value\"",
        "\"attributes\"",
        "\"trait_type\"",
        "\"Wealth Index\"",
        "\"\\n\"",
        "\"ERROR:\"",
        "\"Description\"",
        "\"ERROR:\"",
        "\"description\"",
        "\"to\"",
        "\"value\"",
        "\"0\"",
        "\"data\"",
        "\"0x4edea111\"",
        "\"clauses\"",
        "\"https://sync-mainnet.vechain.org/accounts/*\"",
        "\"accept\"",
        "\"application/json\"",
        "\"Content-Type\"",
        "\"application/json\"",
        "\"data\"",
        "'utf-8'",
        "\"\\x00\"",
        "\"\"",
        "\".\"",
        "\"\"",
        "\"fileHash\"",
        "\"\"",
        "\"**\"",
        "\"**: \"",
        "\"collectionName\"",
        "\"name\"",
        "\"description\"",
        "\"\\n\"",
        "\"ERROR:\"",
        "\"Description\"",
        "\"ERROR:\"",
        "\"description\"",
        "\"wov\"",
        "\"topic1\"",
        "\"topic2\"",
        "\"unit\"",
        "\"block\"",
        "\"from\"",
        "\"to\"",
        "\"address\"",
        "\"range\"",
        "\"criteriaSet\"",
        "\"order\"",
        "\"desc\""
    ],
    "variables": [
        "url",
        "dictionary",
        "connect",
        "df",
        "result",
        "code",
        "topic_array",
        "topics",
        "r",
        "block_range",
        "criteria",
        "tx_body",
        "block_range",
        "criteria",
        "tx_body",
        "profile_name",
        "clauses",
        "tx_body",
        "r",
        "r",
        "profile_name",
        "clauses",
        "tx_body",
        "r",
        "token_uri",
        "token_uri",
        "token_uri",
        "result",
        "result",
        "image_path",
        "image_path",
        "attributes",
        "attributes",
        "attributes",
        "clauses",
        "tx_body",
        "r",
        "token_uri",
        "token_uri",
        "token_uri",
        "token_uri",
        "token_uri",
        "result",
        "result",
        "image_path",
        "image_path",
        "attributes",
        "attributes",
        "attributes",
        "markets",
        "topic",
        "markets",
        "topic",
        "block_range",
        "criteria",
        "tx_body"
    ],
    "comments": [
        "all clause data has topics of 64 and a init consisting on the remainder chars.",
        "Topic0 is the topic that contains the transfer hash, which is specifically 0xddf25... for standard NFT smart contracts on vechain.",
        "Default method that applies to all NFT Smart Contracts on Vechain",
        "\"0xc87b56dd\" is the hash of the method to query for the token URI given the NFT ID.",
        "Hosting Gateway for IPFS METADATA depends on which platform minted the token.",
        "Method to get metadata from the URI: image and attributes -> Pretty standard for Vechain NFTs.",
        "Some collections have a field \"Image\" rather than \"image\", this clause is to prevent the code from crashing!",
        "Not all NFTs have attributes, but so far all have a description. This clause handles it.",
        "The WOV community NFT token contract has a specific method to query the the METADATA URI",
        "The rest is similar to the other method above.",
        "The community token metadata is different, because metadata has a different structure from standard mints.",
        "NOT HAPPY WITH THIS STILL, but it is working. I am lazy to build 2 more decoder functions. Work in progress!"
    ],
    "docstrings": [],
    "functions": [
        "__build_dictionary__",
        "parse_tx",
        "post_event_log",
        "get_market_event_log_data",
        "get_transfer_event_log_data",
        "get_profile",
        "__get_token_uri__",
        "get_nft_meta",
        "__get_community_token_uri__",
        "get_community_nft_meta",
        "get_market_event_log_data_for"
    ],
    "classes": [
        "Blockchain"
    ]
}