{
    "identifiers": [
        "btnBox",
        "btnBox",
        "backgroundColors",
        "currentColor",
        "backgroundColors",
        "nextColor",
        "backgroundColors",
        "colorChangeBtn",
        "index",
        "index",
        "backgroundColors",
        "index",
        "btnBox",
        "backgroundColors",
        "index",
        "currentColor",
        "backgroundColors",
        "index",
        "index",
        "backgroundColors",
        "nextColor",
        "backgroundColors",
        "nextColor",
        "backgroundColors",
        "index",
        "widthSpan",
        "heightSpan",
        "widthSpan",
        "heightSpan",
        "countSpan",
        "count",
        "mouseDiv",
        "count",
        "countSpan",
        "count"
    ],
    "literals": [
        "'snow'",
        "'royalblue'",
        "'lightgreen'",
        "'orangered'",
        "'.btn-box'",
        "'#bg-color'",
        "'#next-color'",
        "'button'",
        "'click'",
        "'#width-id'",
        "'#height-id'",
        "'resize'",
        "'.mouse-box'",
        "'#mouse-id'",
        "'mousemove'"
    ],
    "variables": [
        "backgroundColors",
        "index",
        "btnBox",
        "currentColor",
        "nextColor",
        "colorChangeBtn",
        "widthSpan",
        "heightSpan",
        "mouseDiv",
        "countSpan",
        "count"
    ],
    "comments": [
        "Start of the 'click' event listener section",
        "Defining the array of colors we'll be using for the background as well as the",
        "index variable which will help us move through the array",
        "Grabbing all the needed elements from the DOM",
        "Setting the initial values for all the elements",
        "Adding a 'click\" event listener on the button",
        "End of the 'click' event listener section",
        "Start of the 'resize' event listener section",
        "Grabbing all the needed elements from the DOM",
        "Setting the initial width and height values",
        "Adding a 'resize\" event listener on the window",
        "Another approach I didn't choose because I found it more",
        "complex",
        "window.addEventListener('resize', event => {\n    widthSpan.innerText=event.currentTarget.innerWidth;\n    heightSpan.innerText=event.currentTarget.innerHeight;\n});",
        "End of the 'resize' event listener section",
        "Start of the 'mousemove' event listener section",
        "Grabbing all the needed elements from the DOM",
        "Setting the initial values",
        "Adding a 'mousemove' event listener on the mouse-box div",
        "End of the 'mousemove' event listener section"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}