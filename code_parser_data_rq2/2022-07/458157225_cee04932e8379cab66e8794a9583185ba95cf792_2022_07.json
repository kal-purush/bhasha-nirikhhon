{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "sklearn",
        "model_selection",
        "train_test_split",
        "matplotlib",
        "rcParams",
        "gensim",
        "models",
        "word2vec",
        "Word2Vec",
        "konlpy",
        "tag",
        "Okt",
        "tensorflow",
        "tf",
        "tensorflow",
        "keras",
        "tensorflow",
        "keras",
        "datasets",
        "imdb",
        "tensorflow",
        "keras",
        "utils",
        "plot_model",
        "train_input",
        "train_target",
        "test_input",
        "test_target",
        "keras",
        "datasets",
        "fashion_mnist",
        "load_data",
        "train_input",
        "reshape",
        "train_test_split",
        "train_scaled",
        "train_target",
        "test_size",
        "random_state",
        "keras",
        "Sequential",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "padding",
        "input_shape",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "add",
        "keras",
        "layers",
        "Conv2D",
        "kernel_size",
        "activation",
        "padding",
        "model",
        "add",
        "keras",
        "layers",
        "MaxPooling2D",
        "model",
        "add",
        "keras",
        "layers",
        "Flatten",
        "model",
        "add",
        "keras",
        "layers",
        "Dense",
        "activation",
        "model",
        "add",
        "keras",
        "layers",
        "Dropout",
        "model",
        "add",
        "keras",
        "layers",
        "Dense",
        "activation",
        "model",
        "summary",
        "keras",
        "utils",
        "plot_model",
        "model",
        "keras",
        "utils",
        "plot_model",
        "model",
        "show_shapes",
        "to_file",
        "dpi",
        "model",
        "compile",
        "optimizer",
        "loss",
        "metrics",
        "keras",
        "callbacks",
        "ModelCheckpoint",
        "save_best_only",
        "keras",
        "callbacks",
        "EarlyStopping",
        "patience",
        "restore_best_weights",
        "model",
        "fit",
        "train_scaled",
        "train_target",
        "epochs",
        "validation_data",
        "val_scaled",
        "val_target",
        "callbacks",
        "checkpoint_cb",
        "early_stopping_cb",
        "plt",
        "plot",
        "history",
        "history",
        "plt",
        "plot",
        "history",
        "history",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "legend",
        "plt",
        "show",
        "model",
        "evaluate",
        "val_scaled",
        "val_target",
        "score",
        "plt",
        "imshow",
        "val_scaled",
        "reshape",
        "cmap",
        "plt",
        "show",
        "model",
        "predict",
        "val_scaled",
        "preds",
        "plt",
        "bar",
        "preds",
        "plt",
        "xlabel",
        "plt",
        "ylabel",
        "plt",
        "show",
        "classes",
        "np",
        "argmax",
        "preds",
        "test_input",
        "reshape",
        "model",
        "evaluate",
        "test_scaled",
        "test_target",
        "pandas",
        "pd",
        "numpy",
        "np",
        "matplotlib",
        "pyplot",
        "plt",
        "matplotlib",
        "sklearn",
        "model_selection",
        "train_test_split",
        "matplotlib",
        "rcParams",
        "gensim",
        "models",
        "word2vec",
        "Word2Vec",
        "konlpy",
        "tag",
        "Okt",
        "tensorflow",
        "tf",
        "tensorflow",
        "keras",
        "tensorflow",
        "keras",
        "datasets",
        "imdb",
        "tensorflow",
        "keras",
        "utils",
        "plot_model",
        "keras",
        "models",
        "load_model",
        "model",
        "layers",
        "model",
        "layers",
        "conv",
        "weights",
        "shape",
        "conv",
        "weights",
        "shape"
    ],
    "literals": [
        "'axes.unicode_minus'",
        "'relu'",
        "'same'",
        "'relu'",
        "'same'",
        "'relu'",
        "'softmax'",
        "'cnn-architecture.png'",
        "'adam'",
        "'sparse_categorical_crossentropy'",
        "'accuracy'",
        "'best-cnn-model.h5'",
        "'loss'",
        "'val_loss'",
        "'epoch'",
        "'loss'",
        "'train'",
        "'val'",
        "\"loss accuracy : \"",
        "'gray_r'",
        "'class'",
        "'prob.'",
        "'티셔츠'",
        "'바지'",
        "'스웨터'",
        "'드레스'",
        "'코트'",
        "'샌달'",
        "'셔츠'",
        "'스니커즈'",
        "'가방'",
        "'앵클 부츠'",
        "'axes.unicode_minus'",
        "'best-cnn-model.h5'"
    ],
    "variables": [
        "train_scaled",
        "train_scaled",
        "val_scaled",
        "train_target",
        "val_target",
        "model",
        "checkpoint_cb",
        "early_stopping_cb",
        "history",
        "score",
        "preds",
        "classes",
        "test_scaled",
        "model",
        "conv"
    ],
    "comments": [
        "-----------------------------------------------------------------------",
        "데이터 불러오기",
        "3차원 데이터 변환 : 3차원이어야 함.",
        "train,test데이터 분리",
        "-------------------------------------------------------------------------",
        "합성곱 신경망 선언",
        "32개필터, 3은 (3,3) depth 1- 입력크기와 같음,",
        "최대풀링 - 사이즈 절반으로 줄임 - (28,28,32) -> (14,14,32)",
        "1번 더 사용 크기는 64필터 - (14,14,32) -> 64",
        "모델 요약",
        "모델 input,output 정보",
        "이미지 저장",
        "-----------------------------------------------------------------",
        "모델 훈련",
        "그래프 그리기",
        "-----------------------------------------------------------",
        "정확도",
        "test데이터 0번 출력",
        "-------------------------------------------------------------",
        "1번 예측 - 10개의 확률 출력",
        "9번이 100% 예측",
        "1-10까지 막대그래프 출력",
        "예측 글자 출력 - 최대크기 위치 번호 출력 8 위치",
        "argmax 배열중 가장 큰 값 위치 출력",
        "test데이터 1개 입력데이터 만듬",
        "정확도",
        "-----------------------------------------------------------------------",
        "모델 불러오기",
        "모델의 층 객체를 list로 보여줌."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}