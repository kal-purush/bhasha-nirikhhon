{
    "identifiers": [
        "v4",
        "uuidv4",
        "businessname",
        "location",
        "storedArray",
        "obj",
        "obj",
        "location",
        "foundLocation",
        "foundLocation",
        "location",
        "qrID",
        "fetch",
        "qrID",
        "businessname",
        "uuidv4",
        "fetch",
        "newUUID",
        "businessname",
        "location",
        "firstScan",
        "e",
        "e",
        "locationArray",
        "location",
        "newUUID",
        "transform",
        "URLSearchParams",
        "URL",
        "urlParams",
        "scriptTag",
        "scriptTag",
        "location",
        "pathtotrack",
        "location",
        "checkQRid",
        "businessname",
        "location",
        "scriptTag",
        "centexQRCheck"
    ],
    "literals": [
        "\"use client\"",
        "\"https://jspm.dev/uuid\"",
        "\"uniqueQRs\"",
        "\"qrInfo\"",
        "${location}",
        "\"has location\"",
        "https://b66slqv47rtplrq2n6nxqddmja0jmxqs.lambda-url.us-east-1.on.aws/?scanID=${qrID}&business=${businessname}",
        "\"no location\"",
        "https://b66slqv47rtplrq2n6nxqddmja0jmxqs.lambda-url.us-east-1.on.aws/?scanID=${newUUID}&unique=true&business=${businessname}&from=${location}",
        "\"qrInfo\"",
        "${newUUID}",
        "\"qrInfo\"",
        "\"undefined\"",
        "\"from\"",
        "\"pathtotrack\"",
        "\"businessname\"",
        "\"we are running on the client\"",
        "\"correct path\"",
        "\"we are running on the server\""
    ],
    "variables": [
        "scriptTag",
        "storedArray",
        "foundLocation",
        "qrID",
        "response",
        "newUUID",
        "firstScan",
        "locationArray",
        "transform",
        "urlParams",
        "location",
        "pathtotrack",
        "businessname"
    ],
    "comments": [
        "check local storage for uuid",
        "if (typeof window !== \"undefined\") {",
        "scriptTag = document.getElementById(\"uniqueQRs\");",
        "}",
        "has the campaign past its end date?",
        "i think lambda does this now, need to check",
        "const currentDate = new Date()",
        "const hasPassed = currentDate.getTime() > savedDate.getTime();",
        "hasPassed === false from the if",
        "if this does do it im not sure how i was getting the saved date",
        "is location the same?",
        "increment the location found with its value(id)",
        "const full = await response.json();",
        "console.log(full);",
        "location not found, needs new scan on server",
        "const full = await firstScan.json();",
        "on success save localUUID to local",
        "console.log(newUUID, \"end\");",
        "pathtotrack,",
        "searchParams,",
        "businessname,",
        "location,",
        "pathtotrack here is the full url WITH a param value ie https://www.centexqrs.com/howitworks?fromQR=true",
        "then path to track is already ONLY from my QRs",
        "now the linkTo object should have the params for it as well",
        "EXAMPLE\n    link = \"https://www.centexqrs.com/howitworks?fromQR=true\"\n    pathtotrack = \"/howitworks?fromQR=true\"\n    businessname = \"CentexQRs\"\n    location = \"website\"",
        "Create a URLSearchParams object using the current URL",
        "const url = new URL(currentUrl);",
        "Get the value of a specific parameter",
        "var searchParams = location + qrParam",
        "localQRUUID = window.localStorage.getItem(\"localQRUUID\") || null;",
        "localQRUUID,",
        "window.location.search === searchParams",
        "localQRUUID = window.localStorage.getItem(\"localQRUUID\") || null;",
        "if (window.location.pathname === pathtotrack) {",
        "checkQRid(localQRUUID, businessname, location, link);",
        "}",
        "centexQRCheck(",
        "\"/howitworks\",",
        "\"?fromQR=true\",",
        "\"CentexQRs\",",
        "\"website\",",
        "\"https://www.centexqrs.com/howitworks?fromQR=true\"",
        ");",
        "the above should allow for a script to be called from a cdn",
        "then in a second script i should be able to email them the instructions;",
        "all they do is copy paste;",
        "<script src=\"locationofmyscript\" pathtotrack=\"location/on/website\" businessname=\"name\"/>"
    ],
    "docstrings": [],
    "functions": [
        "checkQRid",
        "centexQRCheck"
    ],
    "classes": []
}