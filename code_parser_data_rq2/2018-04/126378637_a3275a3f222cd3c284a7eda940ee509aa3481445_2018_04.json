{
    "identifiers": [
        "get_ipython",
        "magic",
        "numpy",
        "np",
        "pandas",
        "pd",
        "pd",
        "read_csv",
        "pd",
        "read_csv",
        "pd",
        "read_csv",
        "pd",
        "read_csv",
        "pd",
        "read_csv",
        "dfschz",
        "head",
        "dfadd",
        "head",
        "dfaut",
        "head",
        "dfbip",
        "head",
        "dfmdd",
        "head",
        "np",
        "log10",
        "dfschz",
        "dfschz",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "np",
        "log10",
        "dfadd",
        "dfadd",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "np",
        "log10",
        "dfaut",
        "dfaut",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "np",
        "log10",
        "dfbip",
        "dfbip",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "np",
        "log10",
        "dfmdd",
        "dfmdd",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "dfschz",
        "abs",
        "dfschz",
        "dfschz",
        "dfschz_extreme",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "dfadd",
        "abs",
        "dfadd",
        "dfadd",
        "dfadd_extreme",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "dfaut",
        "abs",
        "dfaut",
        "dfaut",
        "dfaut_extreme",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "dfbip",
        "abs",
        "dfbip",
        "dfbip",
        "dfbip_extreme",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "dfmdd",
        "abs",
        "dfmdd",
        "dfmdd",
        "dfmdd_extreme",
        "plot",
        "scatter",
        "y",
        "x",
        "s",
        "title",
        "dfschz_extreme",
        "append",
        "dfadd_extreme",
        "dfsnps_oI",
        "append",
        "dfaut_extreme",
        "dfsnps_oI",
        "append",
        "dfbip_extreme",
        "dfsnps_oI",
        "append",
        "dfmdd_extreme",
        "collections",
        "Counter",
        "Counter",
        "dfsnps_oI",
        "value",
        "value",
        "count",
        "counts",
        "items",
        "count",
        "countsnps_oI",
        "dfsnps_oI",
        "sort_values",
        "ascending",
        "dfsnps_oI",
        "head",
        "dfsnps_oI",
        "sort_values",
        "ascending",
        "dfsnps_oI",
        "head",
        "get_ipython",
        "magic",
        "warnings",
        "warnings",
        "filterwarnings",
        "numpy",
        "np",
        "pandas",
        "pd",
        "matplotlib",
        "pyplot",
        "plt",
        "sklearn",
        "ensemble",
        "RandomForestRegressor",
        "sklearn",
        "linear_model",
        "LinearRegression",
        "Lasso",
        "sklearn",
        "datasets",
        "make_regression",
        "load_boston",
        "sklearn",
        "model_selection",
        "cross_val_score",
        "statsmodels",
        "api",
        "OLS",
        "scipy",
        "stats",
        "pearsonr",
        "spearmanr",
        "numpy",
        "array",
        "numpy",
        "argmax",
        "sklearn",
        "preprocessing",
        "LabelEncoder",
        "sklearn",
        "preprocessing",
        "OneHotEncoder",
        "dfsnps_oI",
        "array",
        "data",
        "LabelEncoder",
        "label_encoder",
        "fit_transform",
        "values",
        "dfsnps_oI",
        "integer_encoded",
        "dfsnps_oI",
        "array",
        "data",
        "LabelEncoder",
        "label_encoder",
        "fit_transform",
        "values",
        "dfsnps_oI",
        "integer_encoded",
        "dfsnps_OHE",
        "head",
        "dfsnps_OHE",
        "dfsnps_OHE",
        "RandomForestRegressor",
        "n_estimators",
        "LinearRegression",
        "get_ipython",
        "magic",
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "pandas",
        "pd",
        "sklearn",
        "ensemble",
        "RandomForestRegressor",
        "sklearn",
        "linear_model",
        "LinearRegression",
        "Lasso",
        "sklearn",
        "model_selection",
        "cross_val_score",
        "cross_val_predict",
        "ShuffleSplit",
        "scipy",
        "stats",
        "pearsonr",
        "y",
        "shape",
        "est",
        "X",
        "y",
        "ShuffleSplit",
        "cross_val_predict",
        "est",
        "X",
        "values",
        "y",
        "values",
        "cv",
        "n_folds",
        "squeeze",
        "y",
        "values",
        "squeeze",
        "pearsonr",
        "predicted",
        "actual",
        "r",
        "np",
        "sqrt",
        "len",
        "predicted",
        "r",
        "se",
        "Lasso",
        "alpha",
        "normalize",
        "prediction_quality",
        "lm",
        "X",
        "y",
        "RandomForestRegressor",
        "n_estimators",
        "prediction_quality",
        "rfr",
        "X",
        "y",
        "est",
        "X",
        "y",
        "est",
        "predict",
        "X",
        "squeeze",
        "y",
        "squeeze",
        "predicted",
        "pearsonr",
        "predicted",
        "actual",
        "r",
        "cross_val_score",
        "lm",
        "X",
        "y",
        "scoring",
        "scorer",
        "cv",
        "cross_val_score",
        "rfr",
        "X",
        "y",
        "scoring",
        "scorer",
        "cv"
    ],
    "literals": [
        "u'matplotlib inline'",
        "'/home/nbuser/library/pgc.cross.SCZ17.2013-05.csv'",
        "'/home/nbuser/library/pgc.cross.ADD4.2013-05.csv'",
        "'/home/nbuser/library/pgc.cross.AUT8.2013-05.csv'",
        "'/home/nbuser/library/pgc.cross.BIP11.2013-05.csv'",
        "'/home/nbuser/library/pgc.cross.MDD9.2013-05.csv'",
        "'log_or'",
        "'or'",
        "'pval'",
        "'log_or'",
        "'Schz'",
        "'log_or'",
        "'or'",
        "'pval'",
        "'log_or'",
        "'ADD'",
        "'log_or'",
        "'or'",
        "'pval'",
        "'log_or'",
        "'Autism'",
        "'log_or'",
        "'or'",
        "'pval'",
        "'log_or'",
        "'BIP'",
        "'log_or'",
        "'or'",
        "'pval'",
        "'log_or'",
        "'MDD'",
        "'log_or'",
        "'pval'",
        "'pval'",
        "'log_or'",
        "'Schz'",
        "'log_or'",
        "'pval'",
        "'pval'",
        "'log_or'",
        "'ADD'",
        "'log_or'",
        "'pval'",
        "'pval'",
        "'log_or'",
        "'Autism'",
        "'log_or'",
        "'pval'",
        "'pval'",
        "'log_or'",
        "'BIP'",
        "'log_or'",
        "'pval'",
        "'pval'",
        "'log_or'",
        "'MDD'",
        "'log_or'",
        "'pval'",
        "'log_or'",
        "'pval'",
        "u'matplotlib inline'",
        "'ignore'",
        "'a1'",
        "'a1'",
        "'a2'",
        "'a2'",
        "'hg18chr'",
        "'a1'",
        "'a2'",
        "'or'",
        "u'matplotlib inline'",
        "\"R = %.3f +/- %.3f\"",
        "\"R = %.3f +/- %.3f\""
    ],
    "variables": [
        "dfschz",
        "dfadd",
        "dfaut",
        "dfbip",
        "dfmdd",
        "dfschz",
        "dfadd",
        "dfaut",
        "dfbip",
        "dfmdd",
        "dfschz_extreme",
        "dfadd_extreme",
        "dfaut_extreme",
        "dfbip_extreme",
        "dfmdd_extreme",
        "dfsnps_oI",
        "dfsnps_oI",
        "dfsnps_oI",
        "dfsnps_oI",
        "counts",
        "countsnps_oI",
        "dfsnps_oI",
        "dfsnps_oI",
        "data",
        "values",
        "label_encoder",
        "integer_encoded",
        "dfsnps_OHE",
        "dfsnps_OHE",
        "data",
        "values",
        "label_encoder",
        "integer_encoded",
        "dfsnps_OHE",
        "dfsnps_OHE",
        "X",
        "y",
        "rfr",
        "lm",
        "n_folds",
        "ss",
        "predicted",
        "actual",
        "r",
        "p",
        "se",
        "lm",
        "rfr",
        "predicted",
        "actual",
        "r",
        "r",
        "p"
    ],
    "comments": [
        "coding: utf-8",
        "In[1]:",
        "Uplaod the datafile",
        "In[2]:",
        "In[3]:",
        "create a scatterplot of odds-ratio",
        "In[4]:",
        "In[5]:",
        "PCA: Remove data p < 0.05 and odds ratio <= 1",
        "In[6]:",
        "In[7]:",
        "Combine the 5 different files to create single df for SNPs of Interest",
        "In[8]:",
        "In[9]:",
        "search for SNPs that occur mutliple times",
        "In[10]:",
        "In[11]:",
        "sort for SNPs with the highest odds-ratios and lowest pvalues",
        "In[12]:",
        "In[13]:",
        "same thing but with the lowest odds-ratio",
        "In[14]:",
        "In[15]:",
        "In[16]:",
        "some code I found to One Hot Encode with scikit-learn",
        "In[17]:",
        "define input",
        "integer encode",
        "define input",
        "integer encode",
        "In[18]:",
        "using Dr. Gerkin's code to score our RTR and Linear regression",
        "In[19]:",
        "we're looking to find connections between the odds-ratio and other elements of our data",
        "In[20]:",
        "In[21]:",
        "This will make 25 decision trees and average them together",
        "In[23]:",
        "In[24]:",
        "formula for standard error of correlation coefficient",
        "In[25]:",
        "Initialize the classification algorithm (Random Forest Classification)",
        "In[27]:",
        "Initialize the classification algorithm (Random Forest Classification)",
        "In[28]:",
        "Get a prediction from the model, and reduce it to a 1-D array.",
        "Reduce the actual values to a 1-D array as well.",
        "If the variance of the prediction (across samples is zero)",
        "Then correlation is undefined, but could also be considered to be 0.",
        "Compute the correlation between the prediction and the actual values",
        "In[29]:",
        "Linear regression",
        "In[30]:",
        "random forest",
        "In[ ]:",
        "there is no corrolation between the chromosome or alelle bases to the odds ratio",
        "but the random forest regression does perform better"
    ],
    "docstrings": [
        "\"\"\"Computes the Pearson correlation between predicted and observed values\"\"\"",
        "\"\"\"Computes the Pearson correlation between predicted and observed values\"\"\""
    ],
    "functions": [
        "prediction_quality",
        "scorer"
    ],
    "classes": []
}