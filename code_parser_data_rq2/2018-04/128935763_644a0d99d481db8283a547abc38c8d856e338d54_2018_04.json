{
    "identifiers": [
        "expect",
        "assertUserInput",
        "TMSystemError",
        "TMUserError",
        "describe",
        "it",
        "msg",
        "TMSystemError",
        "msg",
        "expect",
        "recoverableError",
        "nativeError",
        "expect",
        "recoverableError",
        "expect",
        "recoverableError",
        "msg",
        "expect",
        "recoverableError",
        "expect",
        "recoverableError",
        "stackStr",
        "err",
        "err",
        "err",
        "expect",
        "stackStr",
        "nativeError",
        "stackStr",
        "recoverableError",
        "describe",
        "it",
        "TMUserError",
        "msg",
        "expect",
        "userError",
        "expect",
        "userError",
        "msg",
        "expect",
        "userError",
        "expect",
        "userError",
        "msg",
        "expect",
        "userError",
        "describe",
        "describe",
        "falsyExamples",
        "ex",
        "ex",
        "ex",
        "it",
        "falsyValue",
        "falsyValue",
        "assertUserInput",
        "ex",
        "message",
        "err",
        "expect",
        "err",
        "message",
        "expect",
        "err",
        "describe",
        "truthyExamples",
        "ex",
        "it",
        "ex",
        "assertUserInput",
        "ex",
        "ex"
    ],
    "literals": [
        "'chai'",
        "'../lib/index'",
        "'TMSystemError error'",
        "'Something happened'",
        "'should give correct info'",
        "'TMSystemError'",
        "TMSystemError: ${msg}",
        "'string'",
        "'Error'",
        "''",
        "''",
        "'user error'",
        "'should be recoverable'",
        "'Something happened'",
        "'TMUserError'",
        "TMUserError: ${msg}",
        "'string'",
        "'assertUserInput'",
        "'falsy values'",
        "''",
        "''",
        "'\"\"'",
        "should throw UserError if input is ${falsyValue}",
        "value ${falsyValue} is falsy",
        "'should throw TMUserError'",
        "'TMUserError'",
        "'truthy values'",
        "'a'",
        "should not throw error when input is ${ex}",
        "value ${ex} is truthy"
    ],
    "variables": [
        "msg",
        "nativeError",
        "recoverableError",
        "stackStr",
        "msg",
        "userError",
        "falsyExamples",
        "falsyValue",
        "message",
        "truthyExamples"
    ],
    "comments": [
        "Check that the stack contains a reference to the current file."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}