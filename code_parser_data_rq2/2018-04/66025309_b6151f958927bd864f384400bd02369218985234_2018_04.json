{
    "identifiers": [
        "Collections",
        "Generic",
        "Collections",
        "Immutable",
        "Threading",
        "Threading",
        "Tasks",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "CodeActions",
        "Microsoft",
        "CodeAnalysis",
        "CodeFixes",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Syntax",
        "D2L",
        "CodeStyle",
        "Analyzers",
        "Language",
        "ExportCodeFixProvider",
        "LanguageNames",
        "CSharp",
        "Name",
        "nameof",
        "UseNamedArgumentsCodeFix",
        "CodeFixProvider",
        "ImmutableArray",
        "ImmutableArray",
        "Create",
        "Diagnostics",
        "UseNamedArgsForInvocationWithLotsOfArgs",
        "Id",
        "WellKnownFixAllProviders",
        "BatchFixer",
        "CodeFixContext",
        "ctx",
        "ctx",
        "Document",
        "GetSyntaxRootAsync",
        "ctx",
        "CancellationToken",
        "ConfigureAwait",
        "diagnostic",
        "ctx",
        "Diagnostics",
        "diagnostic",
        "Location",
        "SourceSpan",
        "InvocationExpressionSyntax",
        "root",
        "FindNode",
        "span",
        "invocation",
        "ArgumentList",
        "diagnostic",
        "Properties",
        "ToImmutableDictionary",
        "Parse",
        "kvp",
        "Key",
        "kvp",
        "Value",
        "ctx",
        "RegisterCodeFix",
        "CodeAction",
        "Create",
        "title",
        "createChangedDocument",
        "UseNamedArgs",
        "ctx",
        "Document",
        "root",
        "args",
        "paramNames",
        "ct",
        "diagnostic",
        "Document",
        "Document",
        "orig",
        "SyntaxNode",
        "root",
        "ArgumentListSyntax",
        "args",
        "ImmutableDictionary",
        "paramNames",
        "CancellationToken",
        "cancellationToken",
        "GetNamedArgs",
        "args",
        "paramNames",
        "SyntaxFactory",
        "ArgumentList",
        "openParenToken",
        "args",
        "OpenParenToken",
        "arguments",
        "SyntaxFactory",
        "SeparatedList",
        "nodes",
        "namedArgs",
        "separators",
        "args",
        "Arguments",
        "GetSeparators",
        "closeParenToken",
        "args",
        "CloseParenToken",
        "root",
        "ReplaceNode",
        "args",
        "newArgs",
        "orig",
        "WithSyntaxRoot",
        "newRoot",
        "FromResult",
        "newDoc",
        "ArgumentSyntax",
        "ArgumentListSyntax",
        "args",
        "ImmutableDictionary",
        "paramNames",
        "idx",
        "args",
        "Arguments",
        "Count",
        "idx",
        "args",
        "Arguments",
        "idx",
        "paramNames",
        "ContainsKey",
        "idx",
        "arg",
        "arg",
        "RefOrOutKeyword",
        "Kind",
        "SyntaxKind",
        "arg",
        "Expression",
        "GetLeadingTrivia",
        "arg",
        "RefOrOutKeyword",
        "LeadingTrivia",
        "arg",
        "WithNameColon",
        "SyntaxFactory",
        "NameColon",
        "paramNames",
        "idx",
        "WithLeadingTrivia",
        "leadingTrivia"
    ],
    "literals": [
        "\"Use named arguments\""
    ],
    "variables": [
        "FixableDiagnosticIds",
        "root",
        "span",
        "invocation",
        "args",
        "paramNames",
        "namedArgs",
        "newArgs",
        "newRoot",
        "newDoc",
        "idx",
        "arg",
        "SyntaxTriviaList",
        "leadingTrivia"
    ],
    "comments": [
        "The analyzer stored the names to add to arguments in the",
        "diagnostic.",
        "Some args might already be named"
    ],
    "docstrings": [],
    "functions": [
        "FixAllProvider",
        "GetFixAllProvider",
        "RegisterCodeFixesAsync",
        "UseNamedArgs",
        "GetNamedArgs"
    ],
    "classes": [
        "UseNamedArgumentsCodeFix"
    ]
}