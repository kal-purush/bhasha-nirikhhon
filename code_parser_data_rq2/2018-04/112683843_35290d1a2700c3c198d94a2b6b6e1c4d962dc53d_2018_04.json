{
    "identifiers": [
        "org",
        "firstinspires",
        "ftc",
        "teamcode",
        "auto",
        "MG",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "Autonomous",
        "com",
        "qualcomm",
        "robotcore",
        "util",
        "ElapsedTime",
        "org",
        "firstinspires",
        "ftc",
        "teamcode",
        "Team2753Linear",
        "org",
        "firstinspires",
        "ftc",
        "teamcode",
        "auto",
        "AutoParams",
        "java",
        "lang",
        "PI",
        "org",
        "firstinspires",
        "ftc",
        "teamcode",
        "subsystems",
        "Drive",
        "WHEEL_BASE",
        "Autonomous",
        "group",
        "Override",
        "waitForStart",
        "AutoParams",
        "AUTO",
        "Robot",
        "getDrive",
        "zeroSensors",
        "t",
        "Robot",
        "getJewel",
        "hit",
        "jewel_Color",
        "Jewel_Color",
        "Blue",
        "Robot",
        "getDrive",
        "encoderDrive",
        "Robot",
        "getDrive",
        "encoderDrive",
        "WHEEL_BASE",
        "PI",
        "Robot",
        "getDrive",
        "encoderDrive",
        "Robot",
        "getSlammer",
        "stopperUp",
        "sleep",
        "Robot",
        "getDrive",
        "encoderDrive"
    ],
    "literals": [
        "\"3 Glyph\"",
        "\"BBack\""
    ],
    "variables": [],
    "comments": [
        "getDrive().turnCW(56, 0.3, 3);",
        "getDrive().encoderDrive(0.3, 7, 7, 3);",
        "getSlammer().stopperUp();",
        "sleep(600);",
        "getDrive().encoderDrive(0.3, -7, -7, 4);",
        "getSlammer().stopperDown();",
        "getIntake().releaseIntake();",
        "getDrive().turnCW(98-56, 0.6, 3);",
        "//getDrive().encoderDrive(0.6, -(WHEEL_BASE*PI*(90-70))/180, 0, 3);",
        "",
        "getDrive().encoderDrive(0.6, -5, -5, 4);",
        "",
        "getSlammer().stopperDown();",
        "getIntake().intake();",
        "getRelic().setWristPostion(50);",
        "getRelic().setAngles(0,0);",
        "",
        "getIntake().reverse();",
        "new Thread(new Runnable() {",
        "@Override",
        "public void run() {",
        "sleep(500);",
        "getIntake().intake();",
        "}",
        "}).start();",
        "",
        "getDrive().encoderDrive(0.3, -25, -25, 4);",
        "",
        "while (opModeIsActive() && t.seconds()<16 && !(getIntake().frontDetected() || getIntake().backDetected())){",
        "Thread.yield();",
        "telemetry.clearAll();",
        "telemetry.addData(\"Front\", getIntake().frontDetected());",
        "telemetry.addData(\"Back\", getIntake().backDetected());",
        "telemetry.update();",
        "}"
    ],
    "docstrings": [
        "* Created by joshua9889 on 3/15/2018."
    ],
    "functions": [
        "runOpMode"
    ],
    "classes": [
        "B_Back_3Glyph"
    ]
}