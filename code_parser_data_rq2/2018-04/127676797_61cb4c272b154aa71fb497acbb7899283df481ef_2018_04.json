{
    "identifiers": [
        "Microsoft",
        "VisualStudio",
        "TestTools",
        "UnitTesting",
        "BasicWebAPI1",
        "Controllers",
        "BasicWebAPI1",
        "Models",
        "Collections",
        "Generic",
        "BasicWebAPI1",
        "Test",
        "TestClass",
        "Product",
        "Id",
        "Name",
        "Description",
        "TestInitialize",
        "controller",
        "ProductsController",
        "TestMethod",
        "TestCategory",
        "Product",
        "Product",
        "controller",
        "GetProducts",
        "Assert",
        "IsTrue",
        "productList",
        "Count",
        "TestMethod",
        "TestCategory",
        "controller",
        "GetProductById",
        "id",
        "Assert",
        "IsTrue",
        "hondaCivic",
        "Id",
        "Assert",
        "IsTrue",
        "hondaCivic",
        "Name",
        "Assert",
        "IsTrue",
        "hondaCivic",
        "Description",
        "TestMethod",
        "TestCategory",
        "controller",
        "GetProductsBySearch",
        "searchText",
        "Product",
        "product",
        "productList",
        "Assert",
        "IsTrue",
        "product",
        "Name",
        "Assert",
        "IsTrue",
        "product",
        "Id",
        "ex",
        "Assert",
        "Fail",
        "TestMethod",
        "TestCategory",
        "controller",
        "PostProduct",
        "mazda",
        "Product",
        "Product",
        "controller",
        "GetProducts",
        "Assert",
        "IsTrue",
        "productList",
        "Count",
        "TestMethod",
        "TestCategory",
        "mazda",
        "Name",
        "newName",
        "mazda",
        "Description",
        "newDescription",
        "controller",
        "PutProduct",
        "mazda",
        "controller",
        "GetProductById",
        "mazda",
        "Id",
        "Assert",
        "IsTrue",
        "updatedMazda",
        "Id",
        "Assert",
        "IsTrue",
        "updatedMazda",
        "Name",
        "newName",
        "Assert",
        "IsTrue",
        "updatedMazda",
        "Description",
        "newDescription",
        "TestMethod",
        "TestCategory",
        "controller",
        "DeleteProduct",
        "id",
        "Product",
        "Product",
        "controller",
        "GetProducts",
        "Assert",
        "IsTrue",
        "productList",
        "Count"
    ],
    "literals": [
        "\"Mazda 2\"",
        "\"Small compact model\"",
        "\"Unit\"",
        "\"Should have 5 products returned.\"",
        "\"Unit\"",
        "\"Id returned should be 1\"",
        "\"Honda Civic\"",
        "\"Product with ID of 1 should be Honda Civic\"",
        "\"Luxury Model 2013\"",
        "\"Description should be \\\"Luxury Model 2013\\\"\"",
        "\"Unit\"",
        "\"Luxury Model 2013\"",
        "\"Honda Civic\"",
        "\"Incorrect car model returned\"",
        "\"Incorrect car model returned\"",
        "\"Unit\"",
        "\"We should now have 6 products in our product list\"",
        "\"Unit\"",
        "\"Mazda 3\"",
        "\"Similar to Mazda 2 but with more features\"",
        "\"Id returned should be 6\"",
        "\"Id returned should be 6\"",
        "\"Id returned should be 6\"",
        "\"Unit\"",
        "\"Should have 5 products returned.\""
    ],
    "variables": [
        "ProductsController",
        "controller",
        "Product",
        "mazda",
        "productList",
        "id",
        "hondaCivic",
        "searchText",
        "productList",
        "newProduct",
        "productList",
        "newName",
        "newDescription",
        "updateMazda",
        "updatedMazda",
        "id",
        "deletedProduct",
        "productList"
    ],
    "comments": [
        "Test Initialization",
        "</summary>",
        "Gets list of products",
        "</summary",
        "Convert to list so we can count products returned",
        "Assert we have 5 products",
        "Gets products by id passed and confirms correct product was returned",
        "</summary",
        "Searches for product based on description and verifies correct product was returned",
        "</summary",
        "Probably not the most efficient way of doing this, but its an enumerable so I needed a way to iterate through.",
        "This does however introduce a scenario where the asserts could never be hit. Hence I wrapped it in an try catch",
        "Adds product to the list",
        "</summary",
        "Update product and verify the updated description and name is correct",
        "</summary",
        "Delete the previously added product",
        "</summary"
    ],
    "docstrings": [
        "<summary>",
        "<summary",
        "<summary",
        "<summary",
        "<summary",
        "<summary",
        "<summary"
    ],
    "functions": [
        "TestInitialize",
        "GetProductReturnsProducts",
        "GetProductByIdReturnsCorrectProduct",
        "GetProductBySearchReturnsCorrectProduct",
        "PostProductAddsProductToProducts",
        "PutProductUpdatesProduct",
        "DeleteProductDeletsProduct"
    ],
    "classes": [
        "UnitTest1"
    ]
}