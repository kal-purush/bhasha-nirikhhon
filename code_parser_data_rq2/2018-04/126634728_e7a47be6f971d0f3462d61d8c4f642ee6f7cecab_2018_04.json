{
    "identifiers": [
        "absolute_import",
        "locale",
        "logging",
        "os",
        "optparse",
        "warnings",
        "sys",
        "re",
        "pip",
        "_vendor",
        "requests",
        "packages",
        "urllib3",
        "exceptions",
        "DependencyWarning",
        "warnings",
        "filterwarnings",
        "category",
        "DependencyWarning",
        "pip",
        "exceptions",
        "InstallationError",
        "CommandError",
        "PipError",
        "pip",
        "utils",
        "get_installed_distributions",
        "get_prog",
        "pip",
        "utils",
        "deprecation",
        "dist_is_editable",
        "pip",
        "vcs",
        "git",
        "mercurial",
        "subversion",
        "bazaar",
        "pip",
        "baseparser",
        "ConfigOptionParser",
        "UpdatingDefaultsHelpFormatter",
        "pip",
        "commands",
        "get_summaries",
        "get_similar_commands",
        "pip",
        "commands",
        "commands_dict",
        "pip",
        "_vendor",
        "requests",
        "packages",
        "urllib3",
        "exceptions",
        "InsecureRequestWarning",
        "pip",
        "cmdoptions",
        "pip",
        "cmdoptions",
        "logging",
        "getLogger",
        "warnings",
        "filterwarnings",
        "category",
        "InsecureRequestWarning",
        "os",
        "environ",
        "os",
        "environ",
        "split",
        "os",
        "environ",
        "cwords",
        "cword",
        "IndexError",
        "cmd",
        "cmd",
        "summary",
        "get_summaries",
        "w",
        "w",
        "cwords",
        "w",
        "subcommands",
        "IndexError",
        "create_main_parser",
        "subcommand_name",
        "subcommand_name",
        "sys",
        "exit",
        "subcommand_name",
        "current",
        "startswith",
        "current",
        "lower",
        "dist",
        "get_installed_distributions",
        "local_only",
        "dist",
        "key",
        "startswith",
        "lc",
        "dist",
        "key",
        "cwords",
        "installed",
        "append",
        "dist",
        "key",
        "installed",
        "dist",
        "installed",
        "dist",
        "sys",
        "exit",
        "commands_dict",
        "subcommand_name",
        "options",
        "opt",
        "get_opt_string",
        "opt",
        "nargs",
        "opt",
        "subcommand",
        "parser",
        "option_list_all",
        "opt",
        "help",
        "optparse",
        "SUPPRESS_HELP",
        "x",
        "split",
        "x",
        "cwords",
        "cword",
        "x",
        "v",
        "x",
        "v",
        "options",
        "x",
        "prev_opts",
        "k",
        "v",
        "k",
        "v",
        "options",
        "k",
        "startswith",
        "current",
        "option",
        "options",
        "option",
        "option",
        "opt_label",
        "opt_label",
        "current",
        "startswith",
        "current",
        "startswith",
        "i",
        "option_list",
        "i",
        "parser",
        "option_groups",
        "opts",
        "append",
        "parser",
        "option_list",
        "o",
        "it",
        "opts",
        "o",
        "it",
        "subcommands",
        "i",
        "get_opt_string",
        "i",
        "opts",
        "i",
        "help",
        "optparse",
        "SUPPRESS_HELP",
        "join",
        "x",
        "x",
        "subcommands",
        "x",
        "startswith",
        "current",
        "sys",
        "exit",
        "UpdatingDefaultsHelpFormatter",
        "get_prog",
        "ConfigOptionParser",
        "parser_kw",
        "parser",
        "disable_interspersed_args",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "abspath",
        "__version__",
        "pip_pkg_dir",
        "sys",
        "version",
        "cmdoptions",
        "make_option_group",
        "cmdoptions",
        "general_group",
        "parser",
        "parser",
        "add_option_group",
        "gen_opts",
        "get_summaries",
        "i",
        "j",
        "i",
        "j",
        "command_summaries",
        "join",
        "description",
        "parser",
        "args",
        "create_main_parser",
        "parser",
        "parse_args",
        "args",
        "general_options",
        "version",
        "sys",
        "stdout",
        "write",
        "parser",
        "version",
        "sys",
        "stdout",
        "write",
        "os",
        "linesep",
        "sys",
        "exit",
        "args_else",
        "args_else",
        "len",
        "args_else",
        "parser",
        "print_help",
        "sys",
        "exit",
        "args_else",
        "cmd_name",
        "commands_dict",
        "get_similar_commands",
        "cmd_name",
        "cmd_name",
        "guess",
        "msg",
        "append",
        "guess",
        "CommandError",
        "join",
        "msg",
        "args",
        "cmd_args",
        "remove",
        "cmd_name",
        "cmd_name",
        "cmd_args",
        "args",
        "args",
        "isolated",
        "args",
        "args",
        "sys",
        "argv",
        "deprecation",
        "install_warning_logger",
        "autocomplete",
        "parseopts",
        "args",
        "PipError",
        "exc",
        "sys",
        "stderr",
        "write",
        "exc",
        "sys",
        "stderr",
        "write",
        "os",
        "linesep",
        "sys",
        "exit",
        "locale",
        "setlocale",
        "locale",
        "LC_ALL",
        "locale",
        "e",
        "logger",
        "debug",
        "e",
        "commands_dict",
        "cmd_name",
        "isolated",
        "check_isolated",
        "cmd_args",
        "command",
        "main",
        "cmd_args",
        "name",
        "req",
        "editable",
        "comments",
        "name",
        "req",
        "editable",
        "comments",
        "re",
        "compile",
        "re",
        "compile",
        "classmethod",
        "cls",
        "dist",
        "dependency_links",
        "os",
        "path",
        "normcase",
        "os",
        "path",
        "abspath",
        "dist",
        "location",
        "pip",
        "vcs",
        "vcs",
        "get_src_requirement",
        "dist_is_editable",
        "dist",
        "vcs",
        "get_backend_name",
        "location",
        "get_src_requirement",
        "dist",
        "location",
        "InstallationError",
        "exc",
        "logger",
        "warning",
        "exc",
        "req",
        "logger",
        "warning",
        "location",
        "comments",
        "append",
        "dist",
        "as_requirement",
        "dist",
        "as_requirement",
        "req",
        "specs",
        "len",
        "specs",
        "specs",
        "specs",
        "dist",
        "specs",
        "cls",
        "_rev_re",
        "search",
        "version",
        "cls",
        "_date_re",
        "search",
        "version",
        "ver_match",
        "date_match",
        "vcs",
        "get_backend",
        "svn_backend",
        "svn_backend",
        "get_location",
        "dist",
        "dependency_links",
        "svn_location",
        "logger",
        "warning",
        "req",
        "comments",
        "append",
        "comments",
        "append",
        "req",
        "ver_match",
        "ver_match",
        "group",
        "date_match",
        "group",
        "svn_location",
        "rev",
        "cls",
        "egg_name",
        "dist",
        "cls",
        "dist",
        "project_name",
        "req",
        "editable",
        "comments",
        "staticmethod",
        "dist",
        "dist",
        "egg_name",
        "re",
        "search",
        "name",
        "match",
        "name",
        "match",
        "start",
        "name",
        "req",
        "editable",
        "req",
        "join",
        "comments",
        "req",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "\"ignore\"",
        "\"9.0.1\"",
        "\"ignore\"",
        "'PIP_AUTO_COMPLETE'",
        "'COMP_WORDS'",
        "'COMP_CWORD'",
        "''",
        "'help'",
        "'uninstall'",
        "'-'",
        "'='",
        "'='",
        "'-'",
        "'--'",
        "' '",
        "'usage'",
        "'\\n%prog <command> [options]'",
        "'add_help_option'",
        "'formatter'",
        "'name'",
        "'global'",
        "'prog'",
        "'pip %s from %s (python %s)'",
        "''",
        "'%-27s %s'",
        "'\\n'",
        "'help'",
        "'unknown command \"%s\"'",
        "'maybe you meant \"%s\"'",
        "' - '",
        "\"--isolated\"",
        "\"ERROR: %s\"",
        "''",
        "\"Ignoring error %s when setting locale\"",
        "r'-r(\\d+)$'",
        "r'-(20\\d\\d\\d\\d\\d\\d)$'",
        "\"Error when trying to get requirement for VCS system %s, \"",
        "\"falling back to uneditable format\"",
        "'Could not determine repository location of %s'",
        "'## !! Could not determine repository location'",
        "\"==\"",
        "\"===\"",
        "'Expected 1 spec with == or ===; specs = %r; dist = %r'",
        "'svn'",
        "'Warning: cannot find svn location for %s'",
        "'## FIXME: could not find svn URL in dependency_links '",
        "'for this package:'",
        "'# Installing as editable to satisfy requirement %s:'",
        "'{%s}'",
        "'%s@%s#egg=%s'",
        "r'-py\\d\\.\\d$'",
        "'-e %s'",
        "'\\n'",
        "'\\n'",
        "'__main__'"
    ],
    "variables": [
        "cmdoptions",
        "__version__",
        "logger",
        "cwords",
        "cword",
        "current",
        "current",
        "subcommands",
        "options",
        "subcommand_name",
        "subcommand_name",
        "parser",
        "installed",
        "lc",
        "subcommand",
        "prev_opts",
        "options",
        "options",
        "opt_label",
        "opts",
        "opts",
        "parser_kw",
        "parser",
        "pip_pkg_dir",
        "parser",
        "version",
        "gen_opts",
        "parser",
        "main",
        "command_summaries",
        "description",
        "parser",
        "description",
        "parser",
        "general_options",
        "args_else",
        "cmd_name",
        "guess",
        "msg",
        "cmd_args",
        "isolated",
        "isolated",
        "args",
        "cmd_name",
        "cmd_args",
        "command",
        "name",
        "req",
        "editable",
        "comments",
        "_rev_re",
        "_date_re",
        "location",
        "comments",
        "editable",
        "req",
        "req",
        "req",
        "editable",
        "editable",
        "req",
        "specs",
        "version",
        "ver_match",
        "date_match",
        "svn_backend",
        "svn_location",
        "rev",
        "rev",
        "editable",
        "req",
        "name",
        "match",
        "name",
        "req",
        "req"
    ],
    "comments": [
        "!/usr/bin/env python",
        "2016-06-17 barry@debian.org: urllib3 1.14 added optional support for socks,",
        "but if invoked (i.e. imported), it will issue a warning to stderr if socks",
        "isn't available.  requests unconditionally imports urllib3's socks contrib",
        "module, triggering this warning.  The warning breaks DEP-8 tests (because of",
        "the stderr output) and is just plain annoying in normal usage.  I don't want",
        "to add socks as yet another dependency for pip, nor do I want to allow-stder",
        "in the DEP-8 tests, so just suppress the warning.  pdb tells me this has to",
        "be done before the import of pip.vcs.",
        "noqa",
        "noqa",
        "assignment for flake8 to be happy",
        "This fixes a peculiarity when importing via __import__ - as we are",
        "initialising the pip module, \"from pip import cmdoptions\" is recursive",
        "and appears not to work properly in that situation.",
        "The version as used in the setup.py and the docs conf.py",
        "Hide the InsecureRequestWarning from urllib3",
        "Don't complete if user hasn't sourced bash_completion file.",
        "subcommand",
        "subcommand options",
        "special case: 'help' subcommand has no options",
        "special case: list locally installed dists for uninstall command",
        "if there are no dists installed, fall back to option completion",
        "filter out previously specified options from available options",
        "filter options by current input",
        "append '=' to options which require args",
        "show main parser options only when necessary",
        "add the general options",
        "so the help formatter knows",
        "create command listing for description",
        "Note: parser calls disable_interspersed_args(), so the result of this",
        "call is to split the initial args into the general options before the",
        "subcommand and everything else.",
        "For example:",
        "args: ['--timeout=5', 'install', '--user', 'INITools']",
        "general_options: ['--timeout==5']",
        "args_else: ['install', '--user', 'INITools']",
        "--version",
        "pip || pip help -> print_help()",
        "the subcommand name",
        "all the args without the subcommand",
        "Configure our deprecation warnings to be sent through loggers",
        "Needed for locale.getpreferredencoding(False) to work",
        "in pip.utils.encoding.auto_decode",
        "setlocale can apparently crash if locale are uninitialized",
        "###########################################################",
        "# Writing freeze files"
    ],
    "docstrings": [
        "\"\"\"Command and option completion for the main option parser (and options)\n    and its subcommands (and options).\n\n    Enable by sourcing one of the completion shell scripts (bash, zsh or fish).\n    \"\"\""
    ],
    "functions": [
        "autocomplete",
        "create_main_parser",
        "parseopts",
        "check_isolated",
        "main",
        "from_dist",
        "egg_name",
        "__str__"
    ],
    "classes": [
        "FrozenRequirement"
    ]
}