{
    "identifiers": [
        "subprocess",
        "PIPE",
        "Popen",
        "os",
        "sys",
        "getopt",
        "logging",
        "signal",
        "n_signal",
        "frame",
        "sys",
        "exit",
        "msg",
        "logging",
        "getLogger",
        "signal",
        "signal",
        "signal",
        "SIGINT",
        "signal_handler",
        "os",
        "geteuid",
        "sys",
        "exit",
        "getopt",
        "getopt",
        "sys",
        "argv",
        "opts",
        "len",
        "opts",
        "len",
        "opts",
        "len",
        "opts",
        "sys",
        "exit",
        "getopt",
        "GetoptError",
        "err",
        "err",
        "sys",
        "exit",
        "o",
        "a",
        "opts",
        "o",
        "a",
        "split",
        "mandatory_args",
        "o",
        "a",
        "a",
        "split",
        "a",
        "split",
        "R_TYPE_INTERVAL",
        "a",
        "R_TYPE_LIST",
        "x",
        "x",
        "a",
        "split",
        "R_TYPE_RULE",
        "a",
        "mandatory_args",
        "o",
        "a",
        "mandatory_args",
        "o",
        "logger",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "StreamHandler",
        "ch",
        "setLevel",
        "logging",
        "DEBUG",
        "logging",
        "Formatter",
        "ch",
        "setFormatter",
        "formatter",
        "logger",
        "addHandler",
        "ch",
        "o",
        "usage",
        "sys",
        "exit",
        "usage",
        "sys",
        "exit",
        "mandatory_args",
        "usage",
        "sys",
        "exit",
        "rule_type",
        "R_TYPE_INTERVAL",
        "format",
        "match_id_rule_min",
        "match_id_rule_max",
        "rule_type",
        "R_TYPE_LIST",
        "format",
        "match_id_rules",
        "rule_type",
        "R_TYPE_RULE",
        "format",
        "match_id_rule",
        "format",
        "filename",
        "match_decoders",
        "str_rules",
        "open",
        "filename",
        "format",
        "filename",
        "format",
        "filename",
        "open",
        "filename_decoder_ko",
        "open",
        "filename_rules_ko",
        "line",
        "open",
        "filename",
        "xreadlines",
        "tam",
        "line",
        "log_file",
        "n_line",
        "line",
        "rstrip",
        "logger",
        "debug",
        "format",
        "n_line",
        "log_line",
        "Popen",
        "logtest_path",
        "stdin",
        "PIPE",
        "stdout",
        "PIPE",
        "stderr",
        "PIPE",
        "p",
        "communicate",
        "log_line",
        "line_output",
        "std_err",
        "split",
        "os",
        "linesep",
        "line_output",
        "line_output",
        "split",
        "line_output",
        "line_output",
        "split",
        "logger",
        "debug",
        "format",
        "decoder",
        "match_decoder",
        "match_decoders",
        "decoder",
        "match_decoder",
        "logger",
        "debug",
        "format",
        "match_decoder",
        "logger",
        "debug",
        "format",
        "match_decoder",
        "decoders_ok",
        "n_decoder_ko",
        "log_file_decoder_ko",
        "write",
        "format",
        "n_line",
        "log_line",
        "rule_type",
        "R_TYPE_INTERVAL",
        "match_id_rule_min",
        "match_id_rule_max",
        "rule_type",
        "R_TYPE_LIST",
        "match_id_rules",
        "rule_type",
        "R_TYPE_RULE",
        "match_id_rule",
        "logger",
        "debug",
        "format",
        "rule",
        "match_rule",
        "match_rules",
        "rule",
        "match_rule",
        "logger",
        "debug",
        "format",
        "match_rule",
        "logger",
        "debug",
        "format",
        "match_rule",
        "rules_ok",
        "n_rules_ko",
        "log_file_rules_ko",
        "write",
        "format",
        "n_line",
        "log_line",
        "n_line",
        "tam",
        "sys",
        "stdout",
        "write",
        "p",
        "sys",
        "stdout",
        "flush",
        "n_decoder_ko",
        "n_line",
        "n_rules_ko",
        "n_line",
        "p_decoder_ko",
        "p_rules_ko",
        "format",
        "filename_decoder_ko",
        "filename_rules_ko",
        "log_file",
        "close",
        "log_file_decoder_ko",
        "close",
        "log_file_rules_ko",
        "close"
    ],
    "literals": [
        "\"__main__\"",
        "\"/var/ossec/bin/ossec-logtest\"",
        "'logger_verbose'",
        "\"You need root privileges to run this script. Please try again, using 'sudo'. Exiting.\"",
        "\"hvd:r:f:\"",
        "\"decoder=\"",
        "\"rule=\"",
        "\"file=\"",
        "\"help\"",
        "\"verbose\"",
        "\"Incorrect number of arguments. \\nTry './file_test.py --help' for more information.\"",
        "\"Try './file_test.py --help' for more information.\"",
        "\"-d\"",
        "\"--decoder\"",
        "\",\"",
        "\"-r\"",
        "\"--rule\"",
        "\":\"",
        "\":\"",
        "\":\"",
        "\",\"",
        "\",\"",
        "\"-f\"",
        "\"--file\"",
        "\"-v\"",
        "\"--verbose\"",
        "'%(message)s'",
        "\"-h\"",
        "\"--help\"",
        "\"Mandatory arguments: -d -r -f\"",
        "\"?\"",
        "\"Interval rules: {0} - {1}\"",
        "\"List rules: {0}\"",
        "\"Rule: {0}\"",
        "\"\\nChecking '{0}'\\n\\tDecoder match: {1}\\n\\t{2}\\n\"",
        "\"{0}.decoder.ko\"",
        "\"{0}.rules.ko\"",
        "'w'",
        "'w'",
        "\"\\nLine [{0}]: '{1}'\"",
        "\"decoder: '\"",
        "\"'\"",
        "\"Rule id: '\"",
        "\"'\"",
        "\"\\tDecoder: {0}\"",
        "\"\\t\\t== {0}? [OK]\"",
        "\"\\t\\t== {0}? [KO]\"",
        "\"Line {0}:{1}\\n\"",
        "\"\\tRule: {0}\"",
        "\"\\t\\t== {0}? [OK]\"",
        "\"\\t\\t== {0}? [KO]\"",
        "\"Line {0}:{1}\\n\"",
        "\"Progress: %.2f%%   \\r\"",
        "\"\\n\\nResult:\"",
        "\"\\tDecoders KO: %.2f%%   \\r\"",
        "\"\\tRules KO: %.2f%%   \\r\"",
        "\"\\nOutput files:\\n\\t{0}\\n\\t{1}\""
    ],
    "variables": [
        "msg",
        "R_TYPE_INTERVAL",
        "R_TYPE_LIST",
        "R_TYPE_RULE",
        "logtest_path",
        "logger",
        "mandatory_args",
        "verbose",
        "opts",
        "args",
        "match_decoders",
        "match_id_rule_min",
        "match_id_rule_max",
        "rule_type",
        "rule_type",
        "match_id_rules",
        "rule_type",
        "match_id_rule",
        "filename",
        "ch",
        "formatter",
        "str_rules",
        "str_rules",
        "str_rules",
        "str_rules",
        "log_file",
        "filename_decoder_ko",
        "filename_rules_ko",
        "log_file_decoder_ko",
        "log_file_rules_ko",
        "n_line",
        "n_decoder_ko",
        "n_rules_ko",
        "tam",
        "log_line",
        "p",
        "std_out",
        "std_err",
        "decoder",
        "rule",
        "decoder",
        "rule",
        "decoders_ok",
        "decoders_ok",
        "match_rules",
        "match_rules",
        "match_rules",
        "rules_ok",
        "rules_ok",
        "p",
        "p_decoder_ko",
        "p_rules_ko"
    ],
    "comments": [
        "!/usr/bin/env python",
        "OSSEC Wazuh Ruleset Tools: File Test",
        "v1.0 2016/01/08",
        "Created by Wazuh, Inc. <info@wazuh.com>.",
        "jesus@wazuh.com",
        "This program is a free software; you can redistribute it and/or modify it under the terms of GPLv2",
        "Requirements:",
        "Python 2.6 or later",
        "OSSEC 2.8 or later",
        "root privileges",
        "Instructions:",
        "cd ~ && mkdir ruleset_tmp && cd ruleset_tmp",
        "git clone https://github.com/wazuh/ossec-rules.git",
        "cd ossec-rules/tools/file-testing",
        "chmod +x file_test.py",
        "sudo ./file_test.py",
        "Capture Cntrl + C",
        "Check sudo",
        "Check arguments",
        "Get log",
        "Get logtest output: Decoder and rule id",
        "Check Decoder",
        "Check Rule ID"
    ],
    "docstrings": [
        "\"\"\"\nOSSEC Wazuh Ruleset Tools: File Test\nGithub repository: https://github.com/wazuh/ossec-rules\nFull documentation: http://documentation.wazuh.com/en/latest/ossec_ruleset.html\n\nUsage: ./file_test.py -d decoder1,decoder2,decoderN -r [ruleID_Min:ruleID_Max|ruleID1,ruleID2,ruleIDN|ruleID] -f file.log [-v]\n\n\\t-d, --decoder\\tA decoder or several decoders separated by ','\n\\t-r, --rule\\tA rule, several rules separated by ',' or a rule interval (ruleID1:ruleID2)\n\\t-f, --file\\tFile to check\n\\t-v, --verbose\n\nExample: ./file_test.py -d auditd -r 80700:80760 -f audit.log\n\"\"\""
    ],
    "functions": [
        "signal_handler",
        "usage"
    ],
    "classes": []
}