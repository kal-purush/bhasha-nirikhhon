{
    "identifiers": [
        "Token",
        "Constant",
        "Operator",
        "Associativity",
        "Parenthesis",
        "ParenDirection",
        "inFix",
        "inFix",
        "inFix",
        "token",
        "Constant",
        "queue",
        "token",
        "token",
        "Operator",
        "stack",
        "Operator",
        "token",
        "Associativity",
        "token",
        "stack",
        "token",
        "Associativity",
        "token",
        "stack",
        "queue",
        "stack",
        "stack",
        "token",
        "token",
        "Parenthesis",
        "token",
        "ParenDirection",
        "stack",
        "token",
        "token",
        "ParenDirection",
        "stack",
        "stack",
        "Parenthesis",
        "stack",
        "ParenDirection",
        "queue",
        "stack",
        "stack",
        "stack",
        "stack",
        "stack",
        "Parenthesis",
        "queue",
        "stack",
        "queue",
        "expression",
        "expression",
        "expression",
        "token",
        "Constant",
        "stack",
        "token",
        "token",
        "Operator",
        "j",
        "token",
        "j",
        "values",
        "stack",
        "token",
        "values",
        "stack",
        "Constant",
        "result",
        "result",
        "stack",
        "stack"
    ],
    "literals": [
        "'./token'",
        "\"Mismatch parentheses.\"",
        "\"Mismatch parentheses.\""
    ],
    "variables": [
        "stack",
        "queue",
        "token",
        "stack",
        "token",
        "values",
        "j",
        "result"
    ],
    "comments": [
        "While the top of the stack is an Operator,",
        "and either:",
        "token is left-associative and its precedence is <= to the top's.",
        "or token is right-associative and its precendence is < to the top's."
    ],
    "docstrings": [],
    "functions": [
        "toPolishNotation",
        "eval"
    ],
    "classes": [
        "Arithmetic"
    ]
}