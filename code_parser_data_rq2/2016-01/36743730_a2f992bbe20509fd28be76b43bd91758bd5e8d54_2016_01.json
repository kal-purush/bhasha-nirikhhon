{
    "identifiers": [
        "PropertiesService",
        "e",
        "handleResponse",
        "e",
        "e",
        "handleResponse",
        "e",
        "e",
        "LockService",
        "MailApp",
        "e",
        "SpreadsheetApp",
        "SCRIPT_PROP",
        "doc",
        "SHEET_NAME",
        "e",
        "sheet",
        "sheet",
        "sheet",
        "i",
        "headers",
        "headers",
        "i",
        "row",
        "row",
        "e",
        "headers",
        "i",
        "sheet",
        "nextRow",
        "row",
        "row",
        "ContentService",
        "nextRow",
        "ContentService",
        "e",
        "ContentService",
        "e",
        "ContentService",
        "SpreadsheetApp",
        "SCRIPT_PROP",
        "doc"
    ],
    "literals": [
        "\"Sheet1\"",
        "\"person@domain.org\"",
        "\"[GetHelpLex feedback]\"",
        "\"key\"",
        "\"Timestamp\"",
        "\"result\"",
        "\"success\"",
        "\"row\"",
        "\"result\"",
        "\"error\"",
        "\"error\"",
        "\"key\""
    ],
    "variables": [
        "SHEET_NAME",
        "SCRIPT_PROP",
        "doc",
        "sheet",
        "headRow",
        "headers",
        "nextRow",
        "row",
        "doc"
    ],
    "comments": [
        "The Google Apps Script that you install in Google sheet to make it a feedback endpoint",
        "based on:",
        "https://mashe.hawksey.info/2014/07/google-sheets-as-a-database-insert-with-apps-script-using-postget-methods-with-ajax-example/",
        "1. Enter sheet name where data is to be written below",
        "2. Run > setup",
        "",
        "3. Publish > Deploy as web app",
        "- enter Project Version name and click 'Save New Version'",
        "- set security level and enable service (most likely execute as 'me' and access 'anyone, even anonymously)",
        "",
        "4. Copy the 'Current web app URL' and post this in your form/script action",
        "",
        "5. Insert column names on your destination sheet matching the parameter names of the data you are passing in (exactly matching case)",
        "new property service",
        "If you don't want to expose either GET or POST methods you can comment out the appropriate function",
        "shortly after my original solution Google announced the LockService[1]",
        "this prevents concurrent access overwritting data",
        "[1] http://googleappsdeveloper.blogspot.co.uk/2011/10/concurrency-and-google-apps-script.html",
        "we want a public lock, one that locks for all invocations",
        "wait 30 seconds before conceding defeat.",
        "next set where we write the data - you could write to multiple/alternate destinations",
        "we'll assume header is in row 1 but you can override with header_row in GET/POST data",
        "get next row",
        "loop through the header columns",
        "special case if you include a 'Timestamp' column",
        "else use header name to get data",
        "more efficient to set values as [][] array than individually",
        "return json success results",
        "if error return this",
        "release lock"
    ],
    "docstrings": [],
    "functions": [
        "doGet",
        "doPost",
        "handleResponse",
        "setup"
    ],
    "classes": []
}