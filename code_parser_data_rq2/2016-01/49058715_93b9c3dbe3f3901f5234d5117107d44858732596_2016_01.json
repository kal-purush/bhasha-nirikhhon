{
    "identifiers": [
        "org",
        "jpmml",
        "piglet",
        "java",
        "util",
        "java",
        "util",
        "LinkedHashMap",
        "java",
        "util",
        "java",
        "util",
        "com",
        "google",
        "common",
        "org",
        "apache",
        "pig",
        "PigException",
        "org",
        "apache",
        "pig",
        "data",
        "Tuple",
        "org",
        "apache",
        "pig",
        "data",
        "TupleFactory",
        "org",
        "apache",
        "pig",
        "impl",
        "logicalLayer",
        "FrontendException",
        "org",
        "apache",
        "pig",
        "impl",
        "logicalLayer",
        "schema",
        "Schema",
        "org",
        "apache",
        "pig",
        "impl",
        "logicalLayer",
        "schema",
        "Schema",
        "FieldSchema",
        "org",
        "dmg",
        "pmml",
        "DataField",
        "org",
        "dmg",
        "pmml",
        "DataType",
        "org",
        "dmg",
        "pmml",
        "FieldName",
        "org",
        "dmg",
        "pmml",
        "OutputField",
        "org",
        "jpmml",
        "evaluator",
        "Evaluator",
        "org",
        "jpmml",
        "evaluator",
        "FieldValue",
        "org",
        "jpmml",
        "evaluator",
        "ModelEvaluator",
        "org",
        "jpmml",
        "evaluator",
        "OutputUtil",
        "org",
        "jpmml",
        "evaluator",
        "PMMLException",
        "org",
        "jpmml",
        "evaluator",
        "TypeAnalysisException",
        "evaluator",
        "inputSchema",
        "aliasIndices",
        "fieldSchemas",
        "inputSchema",
        "getFields",
        "i",
        "i",
        "fieldSchemas",
        "size",
        "i",
        "fieldSchema",
        "fieldSchemas",
        "get",
        "i",
        "aliasIndices",
        "put",
        "fieldSchema",
        "alias",
        "toLowerCase",
        "valueOf",
        "i",
        "activeFieldIndices",
        "activeFields",
        "evaluator",
        "getActiveFields",
        "activeField",
        "activeFields",
        "dataField",
        "evaluator",
        "getDataField",
        "activeField",
        "dataType",
        "dataField",
        "getDataType",
        "aliasIndex",
        "aliasIndices",
        "get",
        "activeField",
        "getValue",
        "toLowerCase",
        "aliasIndex",
        "activeField",
        "fieldSchema",
        "fieldSchemas",
        "get",
        "aliasIndex",
        "fieldDataType",
        "DataTypeUtil",
        "parseDataType",
        "fieldSchema",
        "DataTypeUtil",
        "isCompatible",
        "dataType",
        "fieldDataType",
        "activeField",
        "fieldDataType",
        "dataType",
        "activeFieldIndices",
        "put",
        "activeField",
        "aliasIndex",
        "result",
        "Override",
        "activeField",
        "activeFieldIndices",
        "get",
        "activeField",
        "result",
        "evaluator",
        "activeFieldMapper",
        "input",
        "arguments",
        "activeFields",
        "evaluator",
        "getActiveFields",
        "activeField",
        "activeFields",
        "activeFieldIndex",
        "activeFieldMapper",
        "apply",
        "activeField",
        "activeFieldIndex",
        "activeField",
        "activeValue",
        "org",
        "jpmml",
        "evaluator",
        "EvaluatorUtil",
        "prepare",
        "evaluator",
        "activeField",
        "input",
        "get",
        "activeFieldIndex",
        "arguments",
        "put",
        "activeField",
        "activeValue",
        "result",
        "evaluator",
        "evaluate",
        "arguments",
        "resultValues",
        "targetFields",
        "evaluator",
        "getTargetFields",
        "targetField",
        "targetFields",
        "resultValues",
        "add",
        "org",
        "jpmml",
        "evaluator",
        "EvaluatorUtil",
        "decode",
        "result",
        "get",
        "targetField",
        "outputFields",
        "evaluator",
        "getOutputFields",
        "outputField",
        "outputFields",
        "resultValues",
        "add",
        "result",
        "get",
        "outputField",
        "EvaluatorUtil",
        "tupleFactory",
        "newTuple",
        "resultValues",
        "evaluator",
        "inputSchema",
        "tupleFieldSchemas",
        "targetFields",
        "evaluator",
        "getTargetFields",
        "targetField",
        "targetFields",
        "dataField",
        "evaluator",
        "getDataField",
        "targetField",
        "dataType",
        "dataField",
        "getDataType",
        "tupleFieldSchemas",
        "add",
        "targetField",
        "getValue",
        "DataTypeUtil",
        "formatDataType",
        "dataType",
        "outputFields",
        "evaluator",
        "getOutputFields",
        "outputField",
        "outputFields",
        "output",
        "evaluator",
        "getOutputField",
        "outputField",
        "dataType",
        "output",
        "getDataType",
        "dataType",
        "dataType",
        "OutputUtil",
        "getDataType",
        "output",
        "evaluator",
        "tae",
        "dataType",
        "org",
        "dmg",
        "pmml",
        "DataType",
        "STRING",
        "tupleFieldSchemas",
        "add",
        "outputField",
        "getValue",
        "DataTypeUtil",
        "formatDataType",
        "dataType",
        "tupleSchema",
        "tupleSchema",
        "tupleFieldSchemas",
        "org",
        "apache",
        "pig",
        "data",
        "DataType",
        "TUPLE",
        "fe",
        "fe",
        "tupleSchema",
        "tupleFactory",
        "TupleFactory",
        "getInstance"
    ],
    "literals": [
        "\"Field \"",
        "\" not defined\"",
        "\"Field \"",
        "\" does not support \"",
        "\" data. Must be \"",
        "\" data\"",
        "\"Field \"",
        "\" not defined\""
    ],
    "variables": [
        "tupleSchema"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2016 Villu Ruusmann\n *\n * This file is part of JPMML-Piglet\n *\n * JPMML-Piglet is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * JPMML-Piglet is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with JPMML-Piglet.  If not, see <http://www.gnu.org/licenses/>.",
        "* <p>\n\t * Instantiates a mapper function from PMML field names to Apache Pig tuple field indices.\n\t * </p>\n\t *\n\t * @throws PigException If there is no valid mapping.",
        "* @throw PigException If the Apache Pig layer malfunctions.\n\t * It is likely that all input tuples are affected, and the execution should be aborted.\n\t * @throw PMMLException If the PMML layer malfunctions.\n\t * It is likely that only the current tuple is affected, and the execution could proceed with other tuples."
    ],
    "functions": [
        "EvaluatorUtil",
        "inputSchemaMapper",
        "apply",
        "Tuple",
        "exec",
        "Schema",
        "outputSchema"
    ],
    "classes": [
        "EvaluatorUtil"
    ]
}