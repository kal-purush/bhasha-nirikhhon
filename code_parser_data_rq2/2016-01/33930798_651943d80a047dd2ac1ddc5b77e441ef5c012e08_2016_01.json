{
    "identifiers": [
        "$",
        "$",
        "$",
        "$",
        "search",
        "showChoices",
        "search",
        "$",
        "element",
        "element",
        "choices",
        "choices",
        "showChoices",
        "choices",
        "ui",
        "that",
        "$",
        "$",
        "$",
        "$",
        "$",
        "e",
        "$",
        "e",
        "target",
        "target",
        "tag",
        "that",
        "e",
        "tag",
        "that",
        "tag",
        "that",
        "$",
        "node",
        "node",
        "$",
        "tags",
        "index",
        "tag",
        "that",
        "tag",
        "addedExistingFromSingleFieldNode",
        "$",
        "addedExistingFromSingleFieldNode",
        "$",
        "that",
        "$",
        "$",
        "$",
        "$",
        "that",
        "that",
        "that",
        "tag",
        "that",
        "tag",
        "that",
        "tag",
        "that",
        "that",
        "$",
        "$",
        "$",
        "that",
        "$",
        "that",
        "$",
        "that",
        "$",
        "that",
        "$",
        "that",
        "$",
        "that",
        "$",
        "that",
        "$",
        "that",
        "that",
        "that",
        "that",
        "that",
        "that",
        "e",
        "that",
        "that",
        "that",
        "ui",
        "that",
        "ui",
        "$",
        "autocompleteOptions",
        "autocompleteOptions",
        "autocompleteOptions",
        "autocompleteOptions",
        "ui",
        "that",
        "ui",
        "that",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "tags",
        "$",
        "tags",
        "tags",
        "tags",
        "that",
        "tags",
        "tags",
        "$",
        "tags",
        "a1",
        "a2",
        "i",
        "a1",
        "i",
        "$",
        "a1",
        "i",
        "a2",
        "result",
        "a1",
        "i",
        "result",
        "tag",
        "$",
        "tag",
        "$",
        "tag",
        "name",
        "i",
        "that",
        "name",
        "that",
        "that",
        "tag",
        "$",
        "tag",
        "name",
        "name",
        "$",
        "name",
        "$",
        "$",
        "name",
        "$",
        "$",
        "name",
        "value",
        "additionalClass",
        "duringInitialization",
        "value",
        "$",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "existingTag",
        "duringInitialization",
        "existingTag",
        "duringInitialization",
        "$",
        "value",
        "$",
        "additionalClass",
        "label",
        "tag",
        "tag",
        "$",
        "$",
        "removeTagIcon",
        "e",
        "that",
        "tag",
        "tag",
        "removeTag",
        "label",
        "tag",
        "escapedValue",
        "tag",
        "tag",
        "duringInitialization",
        "tags",
        "value",
        "tags",
        "tag",
        "tag",
        "tag",
        "tag",
        "duringInitialization",
        "duringInitialization",
        "setTimeout",
        "that",
        "tag",
        "animate",
        "animate",
        "animate",
        "animate",
        "tag",
        "$",
        "tag",
        "tag",
        "tag",
        "tag",
        "tag",
        "tags",
        "$",
        "tags",
        "el",
        "el",
        "removedTagLabel",
        "tags",
        "animate",
        "tag",
        "hide_args",
        "tag",
        "thisTag",
        "tag",
        "thisTag",
        "tag",
        "tag",
        "tag",
        "hide_args",
        "tag",
        "tag",
        "tag",
        "tagLabel",
        "animate",
        "tagLabel",
        "toRemove",
        "tagLabel",
        "toRemove",
        "animate",
        "index",
        "tag",
        "that",
        "tag",
        "jQuery"
    ],
    "literals": [
        "'ui.tagit'",
        "'tags'",
        "','",
        "'input'",
        "'<ul></ul>'",
        "'tagit-hidden-field'",
        "'ul, ol'",
        "'<input type=\"text\" />'",
        "'ui-widget-content'",
        "'disabled'",
        "'disabled'",
        "'tabindex'",
        "'placeholder'",
        "'undefined'",
        "'tagit'",
        "'ui-widget ui-widget-content ui-corner-all'",
        "'<li class=\"tagit-new\"></li>'",
        "'tagit-label'",
        "'.tagit-choice'",
        "'removed'",
        "'onTagClicked'",
        "''",
        "'<input type=\"hidden\" style=\"display:none;\" value=\"\" name=\"'",
        "'\" />'",
        "'li'",
        "'tagit-new'",
        "'class'",
        "''",
        "'remove'",
        "'remove ui-state-highlight'",
        "'remove ui-state-highlight'",
        "''",
        "''",
        "'\"'",
        "'\"'",
        "'\"'",
        "''",
        "'autocomplete-open'",
        "'close'",
        "'autocomplete-open'",
        "'autocompleteopen.tagit'",
        "'autocomplete-open'",
        "'autocompleteclose.tagit'",
        "'autocomplete-open'",
        "'widget'",
        "'tagit-autocomplete'",
        "'.tagit'",
        "'.tagit'",
        "'autocomplete-open'",
        "'tagit'",
        "'ui-widget'",
        "'ui-widget-content'",
        "'ui-corner-all'",
        "'tagit-hidden-field'",
        "' '",
        "'input'",
        "'tagit-hidden-field'",
        "'li'",
        "'tagit-new'",
        "'tagit-choice'",
        "'ui-widget-content'",
        "'ui-state-default'",
        "'ui-state-highlight'",
        "'ui-corner-all'",
        "'remove'",
        "'tagit-choice-editable'",
        "'tagit-choice-read-only'",
        "' '",
        "'.tagit-label'",
        "'$1'",
        "'.tagit-choice:last:not(.removed)'",
        "'.tagit-choice:not(.removed)'",
        "''",
        "'change'",
        "'.tagit-label:first'",
        "'input:first'",
        "'search'",
        "''",
        "''",
        "'onTagExists'",
        "'highlight'",
        "'highlight'",
        "'onTagLimitExceeded'",
        "'<a class=\"tagit-label\"></a>'",
        "'<span class=\"tagit-label\"></span>'",
        "'<li></li>'",
        "'tagit-choice ui-widget-content ui-state-default ui-corner-all'",
        "'tagit-choice-read-only'",
        "'tagit-choice-editable'",
        "'<span></span>'",
        "'ui-icon ui-icon-close'",
        "'<a><span class=\"text-icon\">\\xd7</span></a>'",
        "'tagit-close'",
        "'<input type=\"hidden\" value=\"'",
        "'\" name=\"'",
        "'\" class=\"tagit-hidden-field\" />'",
        "'beforeTagAdded'",
        "'onTagAdded'",
        "''",
        "'afterTagAdded'",
        "'undefined'",
        "'onTagRemoved'",
        "'beforeTagRemoved'",
        "'removed'",
        "'blind'",
        "'blind'",
        "'horizontal'",
        "'fast'",
        "'fast'",
        "'afterTagRemoved'",
        "'fast'",
        "'afterTagRemoved'",
        "\"No such tag exists with the name '\"",
        "\"'\""
    ],
    "variables": [
        "that",
        "choices",
        "target",
        "tag",
        "addedExistingFromSingleFieldNode",
        "node",
        "tags",
        "tag",
        "autocompleteOptions",
        "that",
        "tags",
        "result",
        "i",
        "that",
        "tag",
        "that",
        "existingTag",
        "label",
        "tag",
        "removeTagIcon",
        "removeTag",
        "escapedValue",
        "tags",
        "tags",
        "removedTagLabel",
        "hide_args",
        "thisTag",
        "toRemove",
        "that"
    ],
    "comments": [
        "Sets `placeholder` attr on input field.",
        "Disables editing.",
        "Require confirmation to remove tags.",
        "Max number of tags allowed (null for unlimited).",
        "Used for autocomplete, unless you override `autocomplete.source`.",
        "Use to override or add any options to the autocomplete widget.",
        "",
        "By default, autocomplete.source will map to availableTags,",
        "unless overridden.",
        "Shows autocomplete before the user even types anything.",
        "When enabled, quotes are unneccesary for inputting multi-word tags.",
        "The below options are for using a single field instead of several",
        "for our form values.",
        "",
        "When enabled, will use a single hidden field for the form,",
        "rather than one per tag. It will delimit tags in the field",
        "with singleFieldDelimiter.",
        "",
        "The easiest way to use singleField is to just instantiate tag-it",
        "on an INPUT element, in which case singleField is automatically",
        "set to true, and singleFieldNode is set to that element. This",
        "way, you don't need to fiddle with these options.",
        "This is just used when preloading data from the field, and for",
        "populating the field with delimited tags as the user adds them.",
        "Set this to an input DOM node to use an existing form field.",
        "Any text in it will be erased on init. But it will be",
        "populated with the text of tags as they are created,",
        "delimited by singleFieldDelimiter.",
        "",
        "If this is not set, we create an input node for it,",
        "with the name given in settings.fieldName.",
        "Whether to animate tag removals or not.",
        "Optionally set a tabindex attribute on the input that gets",
        "created for tag-it.",
        "Event callbacks.",
        "DEPRECATED:",
        "",
        "/!\\ These event callbacks are deprecated and WILL BE REMOVED at some",
        "point in the future. They're here for backwards-compatibility.",
        "Use the above before/after event callbacks instead.",
        "`autocomplete.source` is the replacement for tagSource.",
        "Do not use the above deprecated options.",
        "for handling static scoping inside callbacks",
        "There are 2 kinds of DOM nodes this widget can be instantiated on:",
        "1. UL, OL, or some element containing either of these.",
        "2. INPUT, in which case 'singleField' is overridden to true,",
        "a UL is created and the INPUT is hidden.",
        "Only match autocomplete options that begin with the search term.",
        "(Case insensitive.)",
        "Bind autocomplete.source callback functions to this context.",
        "DEPRECATED.",
        "Create the input field.",
        "Sets the focus() to the input field, if the user",
        "clicks anywhere inside the UL. This is needed",
        "because the input field needs to be of a small size.",
        "Single field support.",
        "Add existing tags from the input field.",
        "Create our single field input after our list.",
        "Add existing tags from the list, if any.",
        "Events.",
        "Backspace is not detected within a keypress, so it must use keydown.",
        "When backspace is pressed, the last tag is deleted.",
        "Comma/Space/Enter are all valid delimiters for new tags,",
        "except when there is an open quote or if setting allowSpaces = true.",
        "Tab will also create a tag, unless the tag input is empty,",
        "in which case it isn't caught.",
        "Enter submits the form if there's no text in the input.",
        "Autocomplete will create its own tag from a selection and close automatically.",
        "Create a tag when the element loses focus.",
        "If autocomplete is enabled and suggestion was clicked, don't add it.",
        "Autocomplete.",
        "Preventing the tag input to be updated with the chosen value.",
        "tagSource is deprecated, but takes precedence here since autocomplete.source is set by default,",
        "while tagSource is left null by default.",
        "Returns the contents of the tag input, cleaned and ready to be passed to createTag",
        "Returns an array of tag string values",
        "Takes a list of tag string values, updates this.options.singleFieldNode.val to the tags delimited by this.options.singleFieldDelimiter",
        "Returns the tag's string label.",
        "Create tag.",
        "Button for removing the tag.",
        "\\xd7 is an X",
        "Removes a tag when the little 'x' is clicked.",
        "Unless options.singleField is set, each tag has a hidden input field inline.",
        "DEPRECATED.",
        "Insert tag.",
        "DEPRECATED.",
        "Excludes this tag from _tags.",
        "Removes all tags."
    ],
    "docstrings": [
        "* jQuery UI Tag-it!\n*\n* @version v2.0 (06/2011)\n*\n* Copyright 2011, Levy Carneiro Jr.\n* Released under the MIT license.\n* http://aehlke.github.com/tag-it/LICENSE\n*\n* Homepage:\n*   http://aehlke.github.com/tag-it/\n*\n* Authors:\n*   Levy Carneiro Jr.\n*   Martin Rehfeld\n*   Tobias Schmidt\n*   Skylar Challand\n*   Alex Ehlke\n*\n* Maintainer:\n*   Alex Ehlke - Twitter: @aehlke\n*\n* Dependencies:\n*   jQuery v1.4+\n*   jQuery UI v1.8+"
    ],
    "functions": [],
    "classes": []
}