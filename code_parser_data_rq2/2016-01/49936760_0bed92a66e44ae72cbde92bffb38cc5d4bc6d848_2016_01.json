{
    "identifiers": [
        "Store",
        "Store",
        "Store",
        "name",
        "price",
        "quantity",
        "name",
        "price",
        "quantity",
        "Store",
        "Store",
        "Store",
        "Store",
        "Store",
        "name",
        "name",
        "Store",
        "subtotal",
        "id",
        "id",
        "subtotal",
        "Store",
        "id",
        "id",
        "parseFloat",
        "subtotal",
        "Store"
    ],
    "literals": [],
    "variables": [
        "Store",
        "subtotal",
        "id"
    ],
    "comments": [],
    "docstrings": [
        "* this is for testing\n* creat by ivan jiao\n* This module contains classes for running a store.\n* @module Store",
        "* 'TAX_RATE' is stored as a percentage. Value is 13.\n    * @property TAX_RATE\n    * @static\n    * @final\n    * @type Number",
        "* 一些示例代码：\n \n\tvar options = {\n\t\tpaths: [ './lib' ],\n\t\toutdir: './out'\n\t};\n\n\tvar Y = require('yuidoc');\n\tvar json = (new Y.YUIDoc(options)).run();\n\t\n * @class Item \n * @constructor\n * @param name {String} 条目名称\n * @param price {Number} 条目价格\n * @param quantity {Number} Item quantity (the number available to buy)",
        "* @property name\n     * @type String",
        "* @property price\n     * @type String",
        "* @property quantity\n     * @type Number",
        "* @property id\n     * @type Number",
        "* `_id` is incremented when a new item is created, so every item has a unique ID\n * @property id\n * @type Number\n * @static\n * @private",
        "* @property list\n * @static\n * @type Object",
        "* @class Cart\n * @constructor\n * @param name {String} 顾客姓名",
        "* @property name\n     * @type String",
        "* @property items\n     * @type Object\n     * @default {}",
        "* @method total\n * @return {Number} tax-included total value of cart contents"
    ],
    "functions": [],
    "classes": []
}