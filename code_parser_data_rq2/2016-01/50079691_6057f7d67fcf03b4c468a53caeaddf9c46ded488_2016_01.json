{
    "identifiers": [
        "bacon",
        "_",
        "collection",
        "mod",
        "InteractionState",
        "mod",
        "EnrichedState",
        "mod",
        "data",
        "ProxyService",
        "data",
        "mutations",
        "view",
        "OverView",
        "view",
        "OverView",
        "InteractionState",
        "bacon",
        "interactionStates",
        "s",
        "EnrichedState",
        "s",
        "ProxyService",
        "enrichedStates",
        "overView",
        "overView",
        "overView",
        "me",
        "me",
        "me",
        "me",
        "me",
        "oldState",
        "newState",
        "interactionState",
        "newState",
        "interactionStates",
        "interactionState",
        "proxyService",
        "m",
        "overView",
        "m",
        "interactionStates",
        "interactionState"
    ],
    "literals": [
        "'bacon'",
        "'lodash'",
        "'./core/collection'",
        "'./model'",
        "'./core/dataprovider'",
        "'./mutations'",
        "'./overview'",
        "\"server\""
    ],
    "variables": [
        "overView",
        "interactionState",
        "interactionStates",
        "enrichedStates",
        "proxyService",
        "oldState",
        "newState"
    ],
    "comments": [
        "<reference path=\"references.d.ts\"/>",
        "Module view as main view in index.html.",
        ".skipDuplicates((l, r) => _.isEqual(l, r))",
        "Alter model copy with mutations that are defined at snippet.",
        "me.hits.forEach(hit => {\n             if(event.type in hit.snippet) hit.snippet[event.type](event, hit.local, oldState, newState);\n             })",
        "Extend model with information from server.",
        "Finally, trigger model update."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}