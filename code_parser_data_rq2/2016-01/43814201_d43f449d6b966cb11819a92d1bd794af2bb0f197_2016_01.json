{
    "identifiers": [
        "plotty",
        "a",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "c",
        "c",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "e",
        "c",
        "e",
        "d",
        "a",
        "c",
        "e",
        "b",
        "f",
        "d",
        "d",
        "d",
        "d",
        "a",
        "b",
        "c",
        "d",
        "e",
        "b",
        "d",
        "c",
        "e",
        "a",
        "a",
        "Float32Array",
        "f",
        "h",
        "g",
        "h",
        "f",
        "i",
        "f",
        "i",
        "g",
        "h",
        "g",
        "i",
        "a",
        "Uint8Array",
        "Uint8Array",
        "Uint8Array",
        "Uint8Array",
        "a",
        "d",
        "e",
        "h",
        "i",
        "j",
        "k",
        "l",
        "a",
        "d",
        "b",
        "d",
        "d",
        "a",
        "b",
        "e",
        "d",
        "m",
        "a",
        "b",
        "h",
        "d",
        "m",
        "gl",
        "c",
        "a",
        "gl",
        "a",
        "b",
        "k",
        "d",
        "d",
        "a",
        "a",
        "gl",
        "gl",
        "gl",
        "gl",
        "n",
        "f",
        "gl",
        "n",
        "gl",
        "n",
        "gl",
        "gl",
        "n",
        "gl",
        "gl",
        "gl",
        "o",
        "g",
        "gl",
        "o",
        "gl",
        "o",
        "gl",
        "gl",
        "o",
        "gl",
        "gl",
        "p",
        "n",
        "gl",
        "p",
        "o",
        "gl",
        "p",
        "gl",
        "gl",
        "p",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "Float32Array",
        "gl",
        "gl",
        "q",
        "gl",
        "q",
        "gl",
        "b",
        "j",
        "b",
        "i",
        "h",
        "h",
        "a",
        "b",
        "c",
        "d",
        "b",
        "d",
        "c",
        "e",
        "d",
        "d",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "b",
        "c",
        "e",
        "e",
        "Float32Array",
        "a",
        "a",
        "h",
        "a",
        "b",
        "c",
        "d",
        "e",
        "c",
        "d",
        "e",
        "e",
        "e",
        "f",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "c",
        "d",
        "e",
        "e",
        "Float32Array",
        "b",
        "a",
        "f",
        "c",
        "d",
        "h",
        "a",
        "a",
        "a",
        "h",
        "b",
        "a",
        "b",
        "h",
        "h",
        "a",
        "a",
        "h",
        "a",
        "c",
        "a",
        "b",
        "c",
        "a",
        "b",
        "c",
        "b",
        "c",
        "e",
        "a",
        "b",
        "c",
        "a",
        "b",
        "a",
        "b",
        "b",
        "c",
        "b",
        "d",
        "f",
        "c",
        "f",
        "e",
        "c",
        "f",
        "c",
        "f",
        "d",
        "e",
        "d",
        "c",
        "b",
        "d",
        "g",
        "c",
        "d",
        "g",
        "h",
        "a",
        "a",
        "e",
        "a",
        "b",
        "d",
        "b",
        "d",
        "c",
        "b",
        "d",
        "b",
        "d",
        "c",
        "b",
        "f",
        "b",
        "f",
        "h",
        "a",
        "a",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "a",
        "h",
        "a",
        "a",
        "h",
        "a",
        "a",
        "h",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "f",
        "a",
        "a",
        "b",
        "e",
        "b",
        "h",
        "b",
        "g",
        "b",
        "b",
        "b",
        "i",
        "b",
        "c",
        "b",
        "c",
        "b",
        "d",
        "b",
        "a",
        "a",
        "b",
        "b",
        "a",
        "a",
        "j",
        "k",
        "m",
        "k",
        "p",
        "p",
        "j",
        "q",
        "q",
        "p",
        "j",
        "q",
        "p",
        "j",
        "q",
        "r",
        "s",
        "s",
        "s",
        "s",
        "r",
        "l",
        "m",
        "o",
        "t",
        "t",
        "o",
        "t",
        "t",
        "o",
        "s",
        "n",
        "t",
        "s",
        "n",
        "t",
        "s",
        "n",
        "t",
        "o",
        "s",
        "s",
        "h",
        "a",
        "a",
        "c",
        "b",
        "c",
        "b",
        "e",
        "b",
        "b",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "b",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "h",
        "c",
        "c",
        "e",
        "g",
        "e",
        "j",
        "e",
        "i",
        "e",
        "e",
        "e",
        "k",
        "e",
        "f",
        "e",
        "f",
        "e",
        "d",
        "e",
        "c",
        "c",
        "e",
        "e",
        "h",
        "a",
        "a",
        "h",
        "i",
        "e",
        "j"
    ],
    "literals": [
        "\"undefined\"",
        "\"webgl\"",
        "\"experimental-webgl\"",
        "\"OES_texture_float\"",
        "\"#96005A\"",
        "\"#0000C8\"",
        "\"#0019FF\"",
        "\"#0098FF\"",
        "\"#2CFF96\"",
        "\"#97FF00\"",
        "\"#FFEA00\"",
        "\"#FF6F00\"",
        "\"#FF0000\"",
        "\"#000083\"",
        "\"#003CAA\"",
        "\"#05FFFF\"",
        "\"#FFFF00\"",
        "\"#FA0000\"",
        "\"#800000\"",
        "\"#ff0000\"",
        "\"#fdff02\"",
        "\"#f7ff02\"",
        "\"#00fc04\"",
        "\"#00fc0a\"",
        "\"#01f9ff\"",
        "\"#0200fd\"",
        "\"#0800fd\"",
        "\"#ff00fb\"",
        "\"#ff00f5\"",
        "\"#ff0006\"",
        "\"#000000\"",
        "\"#e60000\"",
        "\"#ffd200\"",
        "\"#ffffff\"",
        "\"#00ffff\"",
        "\"#ff00ff\"",
        "\"#ff00ff\"",
        "\"#ffff00\"",
        "\"#008066\"",
        "\"#ffff66\"",
        "\"#ff0000\"",
        "\"#ffff00\"",
        "\"#0000ff\"",
        "\"#00ff80\"",
        "\"#000000\"",
        "\"#545474\"",
        "\"#a9c8c8\"",
        "\"#ffffff\"",
        "\"#000000\"",
        "\"#ffa066\"",
        "\"#ffc77f\"",
        "\"#000000\"",
        "\"#ffffff\"",
        "\"#081d58\"",
        "\"#253494\"",
        "\"#225ea8\"",
        "\"#1d91c0\"",
        "\"#41b6c4\"",
        "\"#7fcdbb\"",
        "\"#c7e9b4\"",
        "\"#edf8d9\"",
        "\"#ffffd9\"",
        "\"#00441b\"",
        "\"#006d2c\"",
        "\"#238b45\"",
        "\"#41ab5d\"",
        "\"#74c476\"",
        "\"#a1d99b\"",
        "\"#c7e9c0\"",
        "\"#e5f5e0\"",
        "\"#f7fcf5\"",
        "\"#800026\"",
        "\"#bd0026\"",
        "\"#e31a1c\"",
        "\"#fc4e2a\"",
        "\"#fd8d3c\"",
        "\"#feb24c\"",
        "\"#fed976\"",
        "\"#ffeda0\"",
        "\"#ffffcc\"",
        "\"#0000ff\"",
        "\"#ff0000\"",
        "\"#050aac\"",
        "\"#6a89f7\"",
        "\"#bebebe\"",
        "\"#dcaa84\"",
        "\"#e6915a\"",
        "\"#b20a1c\"",
        "\"#0000ff\"",
        "\"#3399ff\"",
        "\"#66ccff\"",
        "\"#99ccff\"",
        "\"#ccccff\"",
        "\"#ffffff\"",
        "\"#ffccff\"",
        "\"#ff99ff\"",
        "\"#ff66cc\"",
        "\"#ff6666\"",
        "\"#ff0000\"",
        "\"#0c3383\"",
        "\"#0a88ba\"",
        "\"#f2d338\"",
        "\"#f28f38\"",
        "\"#d91e1e\"",
        "\"#000000\"",
        "\"#e60000\"",
        "\"#e6d200\"",
        "\"#ffffff\"",
        "\"#a0c8ff\"",
        "\"#000082\"",
        "\"#00b4b4\"",
        "\"#28d228\"",
        "\"#e6e632\"",
        "\"#784614\"",
        "\"#ffffff\"",
        "\"#000000\"",
        "\"#1e0064\"",
        "\"#780064\"",
        "\"#a05a00\"",
        "\"#e6c800\"",
        "\"#fffadc\"",
        "\"attribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec2 u_resolution;\\nvarying vec2 v_texCoord;\\nvoid main() {\\n// convert the rectangle from pixels to 0.0 to 1.0\\nvec2 zeroToOne = a_position / u_resolution;\\n// convert from 0->1 to 0->2\\nvec2 zeroToTwo = zeroToOne * 2.0;\\n// convert from 0->2 to -1->+1 (clipspace)\\nvec2 clipSpace = zeroToTwo - 1.0;\\ngl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);\\n// pass the texCoord to the fragment shader\\n// The GPU will interpolate this value between points.\\nv_texCoord = a_texCoord;\\n}\"",
        "\"precision mediump float;\\n// our textur\\nuniform sampler2D u_textureData;\\nuniform sampler2D u_textureScale;\\nuniform vec2 u_textureSize;\\nuniform vec2 u_domain;\\nuniform float u_noDataValue;\\nuniform bool u_clamp;\\n// the texCoords passed in from the vertex shader.\\nvarying vec2 v_texCoord;\\nvoid main() {\\nvec2 onePixel = vec2(1.0, 1.0) / u_textureSize;\\nfloat value = texture2D(u_textureData, v_texCoord)[0];\\nif (value == u_noDataValue)\\ngl_FragColor = vec4(0.0, 0, 0, 0.0);\\nelse if (!u_clamp && (value < u_domain[0] || value > u_domain[1]))\\ngl_FragColor = vec4(0, 0, 0, 0);\\nelse {\\nfloat normalisedValue = (value - u_domain[0]) / (u_domain[1] - u_domain[0]);\\ngl_FragColor = texture2D(u_textureScale, vec2(normalisedValue, 0));\\n}\\n}\"",
        "\"2d\"",
        "\"canvas\"",
        "\"2d\"",
        "\"a_texCoord\"",
        "\"viridis\"",
        "\"Invalid color scale.\"",
        "\"2d\"",
        "\"[object Object]\"",
        "\"[object Uint8Array]\"",
        "\"Color scale not defined.\"",
        "\"[object Object]\"",
        "\"[object Uint8Array]\"",
        "\"Color scale not defined.\"",
        "\"u_textureData\"",
        "\"u_textureScale\"",
        "\"a_position\"",
        "\"u_domain\"",
        "\"u_resolution\"",
        "\"u_noDataValue\"",
        "\"u_clamp\"",
        "\"u_textureData\"",
        "\"u_textureScale\"",
        "\"a_position\"",
        "\"u_domain\"",
        "\"u_resolution\"",
        "\"u_noDataValue\"",
        "\"u_clamp\""
    ],
    "variables": [
        "c",
        "c",
        "d",
        "e",
        "f",
        "b",
        "g",
        "h",
        "c",
        "i",
        "e",
        "f",
        "g",
        "h",
        "m",
        "n",
        "o",
        "p",
        "q",
        "d",
        "e",
        "e",
        "f",
        "i",
        "j",
        "c",
        "d",
        "e",
        "f",
        "g",
        "b",
        "c",
        "d",
        "f",
        "b",
        "a",
        "b",
        "c",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k",
        "l",
        "m",
        "n",
        "o",
        "p",
        "q",
        "r",
        "s",
        "t",
        "b",
        "c",
        "e",
        "f",
        "g",
        "h",
        "i",
        "j",
        "k"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "a",
        "b",
        "c",
        "d"
    ],
    "classes": []
}