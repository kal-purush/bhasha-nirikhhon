{
    "identifiers": [
        "org",
        "eclipse",
        "hawkbit",
        "simulator",
        "id",
        "tenant",
        "status",
        "progress",
        "swversion",
        "responseStatus",
        "ResponseStatus",
        "SUCCESSFUL",
        "protocol",
        "Protocol",
        "DMF_AMQP",
        "nextPollCounterSec",
        "Protocol",
        "DMF_AMQP",
        "DDI_HTTP",
        "Status",
        "UNKNWON",
        "PEDNING",
        "FINISH",
        "ERROR",
        "ResponseStatus",
        "SUCCESSFUL",
        "ERROR",
        "id",
        "tenant",
        "protocol",
        "id",
        "id",
        "tenant",
        "tenant",
        "status",
        "Status",
        "UNKNWON",
        "progress",
        "protocol",
        "protocol",
        "id",
        "status",
        "progress",
        "tenant",
        "id",
        "id",
        "id",
        "tenant",
        "tenant",
        "tenant",
        "status",
        "status",
        "status",
        "progress",
        "progress",
        "progress",
        "swversion",
        "swversion",
        "swversion",
        "swversion",
        "responseStatus",
        "responseStatus",
        "responseStatus",
        "responseStatus",
        "protocol",
        "nextPollCounterSec",
        "nextPollDelayInSec",
        "nextPollCounterSec",
        "nextPollDelayInSec"
    ],
    "literals": [
        "\"unknown\""
    ],
    "variables": [
        "id",
        "tenant",
        "status",
        "progress",
        "nextPollCounterSec"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2015 Bosch Software Innovations GmbH and others.\n *\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html",
        "* The bean of a simulated device which can be stored in the\n * {@link DeviceSimulatorRepository} or shown in the UI.\n * \n * @author Michael Hirsch\n *",
        "* Enum definition of the protocol to be used for the simulated device.\n     * \n     * @author Michael Hirsch\n     *",
        "* Device Management Federation API via AMQP, push mechanism.",
        "* Direct Device Interface via HTTP, poll mechanism.",
        "* The current status of the simulated device.\n     * \n     * @author Michael Hirsch\n     *",
        "* device is in status unknown.",
        "* device is in status pending which represents is updating software.",
        "* device has been updated successfully.",
        "* device has been updated with an error.",
        "* The status to response to the hawkbit update server if an simulated\n     * update process should be respond with successful or failure update.\n     * \n     * @author Michael Hirsch\n     *",
        "* updated has been successful and response the successful update.",
        "* updated has been not successful and response the error update.",
        "* empty constructor.",
        "* Creates a new simulated device.\n     * \n     * @param id\n     *            the ID of the simulated device\n     * @param tenant\n     *            the tenant of the simulated device",
        "* Method to clean-up resource e.g. when the simulated device has been\n     * removed from the repository."
    ],
    "functions": [
        "AbstractSimulatedDevice",
        "AbstractSimulatedDevice",
        "clean",
        "getId",
        "Status",
        "getStatus",
        "getProgress",
        "getTenant",
        "setId",
        "setTenant",
        "setStatus",
        "setProgress",
        "getSwversion",
        "setSwversion",
        "ResponseStatus",
        "getResponseStatus",
        "setResponseStatus",
        "Protocol",
        "getProtocol",
        "getNextPollCounterSec",
        "setNextPollCounterSec"
    ],
    "classes": [
        "AbstractSimulatedDevice"
    ]
}