{
    "identifiers": [
        "Engine",
        "IDisplayChangedEventArgs",
        "_TimeToken",
        "Size",
        "Observable",
        "Tools",
        "DomManagement",
        "display",
        "Engine",
        "Engine",
        "Observable",
        "Observable",
        "Observable",
        "Engine",
        "Engine",
        "Engine",
        "Engine",
        "notifyObservers",
        "eventArgs",
        "res",
        "res",
        "eventArgs",
        "notifyObservers",
        "Tools",
        "notifyObservers",
        "notifyObservers",
        "Engine",
        "res",
        "navigator",
        "navigator",
        "devices",
        "devices",
        "res",
        "res",
        "Engine",
        "onResolved",
        "onRejected",
        "onResolved",
        "onRejected",
        "Engine",
        "Size",
        "leftEye",
        "leftEye",
        "Engine",
        "DomManagement",
        "Engine",
        "canvas",
        "canvas",
        "canvas",
        "DomManagement",
        "Engine",
        "e",
        "Tools",
        "e",
        "Engine",
        "Engine",
        "Tools"
    ],
    "literals": [
        "\"../../types\"",
        "\"../../Engines/engine\"",
        "\"../../Instrumentation/timeToken\"",
        "'../../Maths/math'",
        "'../../Misc/observable'",
        "'../../Misc/tools'",
        "'../../Misc/domManagement'",
        "\"../../Engines/engine\"",
        "\"isInVRExclusivePointerMode\"",
        "'vrdisplayconnect'",
        "'vrdisplaydisconnect'",
        "'vrdisplaypresentchange'",
        "'left'",
        "'vrdisplaypointerrestricted'",
        "'vrdisplaypointerunrestricted'",
        "'vrdisplayconnect'",
        "'vrdisplaydisconnect'",
        "'vrdisplaypresentchange'",
        "'vrdisplaypointerrestricted'",
        "'vrdisplaypointerunrestricted'",
        "\"webVR submitFrame has had an unexpected failure: \""
    ],
    "variables": [
        "notifyObservers",
        "eventArgs",
        "onResolved",
        "onRejected",
        "leftEye"
    ],
    "comments": [
        "Gets the vrDisplay object (if any)",
        "Gets a boolean indicating if webVR is supported",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "@hidden",
        "note that devices may actually be an empty array. This is fine;",
        "we expect this._vrDisplay to be undefined in this case.",
        "get the old size before we change",
        "get the width and height, change the render size",
        "Submit frame to the vr device, if enabled",
        "TODO: We should only submit the frame if we read frameData successfully."
    ],
    "docstrings": [
        "* Defines the interface used by display changed events",
        "* Observable signaled when VR display mode changes",
        "* Observable signaled when VR request present is complete",
        "* Observable signaled when VR request present starts",
        "* Gets a boolean indicating that the engine is currently in VR exclusive mode for the pointers\n         * @see https://docs.microsoft.com/en-us/microsoft-edge/webvr/essentials#mouse-input",
        "* Gets a boolean indicating if a webVR device was detected\n         * @returns true if a webVR device was detected",
        "* Gets the current webVR device\n         * @returns the current webVR device (or null)",
        "* Initializes a webVR display and starts listening to display change events\n         * The onVRDisplayChangedObservable will be notified upon these changes\n         * @returns A promise containing a VRDisplay and if vr is supported",
        "* Call this function to switch to webVR mode\n         * Will do nothing if webVR is not supported or if there is no webVR device\n         * @see http://doc.babylonjs.com/how_to/webvr_camera"
    ],
    "functions": [],
    "classes": []
}