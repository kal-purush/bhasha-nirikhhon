{
    "identifiers": [
        "s3fs",
        "os",
        "local_path",
        "s3_model_path",
        "format",
        "local_path",
        "s3fs",
        "S3FileSystem",
        "open",
        "local_path",
        "fs",
        "open",
        "s3_model_path",
        "fobj",
        "checkpoint",
        "read",
        "buffer",
        "fobj",
        "write",
        "buffer",
        "e",
        "e",
        "s3_model_path",
        "local_path",
        "format",
        "s3_model_path",
        "s3fs",
        "S3FileSystem",
        "fs",
        "get",
        "s3_model_path",
        "local_path",
        "e",
        "e",
        "file_name",
        "s3fs",
        "S3FileSystem",
        "fs",
        "exists",
        "file_name",
        "f",
        "f",
        "os",
        "listdir",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "f",
        "i",
        "pb_file",
        "pb_dir",
        "format",
        "i",
        "upload_data_to_s3",
        "local_host_parent_directory",
        "pb_file",
        "s3_parent_directory",
        "pb_file",
        "check_if_file_exist_in_s3",
        "s3_parent_directory",
        "pb_file",
        "format",
        "i",
        "format",
        "i"
    ],
    "literals": [
        "'Uploading data from {} to s3.'",
        "\"rb\"",
        "\"wb\"",
        "'Error while uploading data to s3: '",
        "'Downloading file from {} to local.'",
        "'Finish downloading.'",
        "'Error while downloading data from s3: '",
        "'built_graph'",
        "'built_graph'",
        "'built_graph/'",
        "'s3://tiki-bot/dev/built_graph/'",
        "'Sample {}:'",
        "'Sample {} uploaded successfully.'",
        "'Can'",
        "'t upload sample {}.'"
    ],
    "variables": [
        "fs",
        "checkpoint",
        "buffer",
        "fs",
        "fs",
        "pb_dir",
        "local_host_parent_directory",
        "s3_parent_directory"
    ],
    "comments": [
        "---Import libraries---",
        "---Functions to interact with s3---",
        "print('Finish uploading.')",
        "---Get data directories from local host---",
        "print(pb_dir)",
        "---Upload data from local host to s3---",
        "Change this directory to get the necessary data",
        "for i, variables_file in enumerate(variables_dir):",
        "print('Sample {}:'.format(i))",
        "upload_data_to_s3(local_host_parent_directory + '1/variables/' + variables_file,",
        "s3_parent_directory + '1/variables/' + variables_file)"
    ],
    "docstrings": [],
    "functions": [
        "upload_data_to_s3",
        "download_data_from_s3",
        "check_if_file_exist_in_s3"
    ],
    "classes": []
}