{
    "identifiers": [
        "Linq",
        "Reflection",
        "SoapCore",
        "Type",
        "name",
        "Type",
        "typeArguments",
        "name",
        "ArgumentNullException",
        "nameof",
        "name",
        "typeArguments",
        "ArgumentNullException",
        "nameof",
        "typeArguments",
        "typeArguments",
        "Any",
        "t",
        "ArgumentNullException",
        "nameof",
        "typeArguments",
        "GetMethods",
        "Where",
        "method",
        "IsPublic",
        "Where",
        "method",
        "IsGenericMethod",
        "Where",
        "method",
        "Name",
        "name",
        "Where",
        "method",
        "GetGenericArguments",
        "genericArguments",
        "Length",
        "typeArguments",
        "Length",
        "i",
        "genericArguments",
        "Length",
        "i",
        "genericArguments",
        "i",
        "typeArguments",
        "i",
        "genericArgument",
        "GetGenericParameterConstraints",
        "All",
        "constraint",
        "IsAssignableFrom",
        "typeArgument",
        "method",
        "methods",
        "result",
        "AmbiguousMatchException",
        "result",
        "method",
        "result",
        "MakeGenericMethod",
        "typeArguments"
    ],
    "literals": [],
    "variables": [
        "methods",
        "genericArguments",
        "i",
        "genericArgument",
        "typeArgument",
        "MethodInfo",
        "result"
    ],
    "comments": [
        "<param name=\"type\">The current <see cref=\"Type\"/>.</param>",
        "<param name=\"name\">The string containing the name of the public generic method to get.</param>",
        "<param name=\"typeArguments\">",
        "An array of types to be substituted for the type parameters of the generic method definition.",
        "</param>",
        "<exception cref=\"AmbiguousMatchException\">More than one suitable method is found.</exception>",
        "<exception cref=\"ArgumentNullException\"><paramref name=\"name\"/> is <c>null</c>.</exception>",
        "<returns>",
        "A <see cref=\"MethodInfo\"/> object representing the public constructed method formed by substituting the elements of <paramref name=\"typeArguments\"/> for the type parameters.-or- <c>null</c>.",
        "</returns>",
        "check if genericArguments match with typeArguments"
    ],
    "docstrings": [
        "<summary>Extensions to <see cref=\"Type\"/>.</summary>",
        "<summary>Searches for the public method with the specified name and generic arguments.</summary>"
    ],
    "functions": [
        "MethodInfo",
        "GetGenericMethod"
    ],
    "classes": [
        "ReflectionExtensions"
    ]
}