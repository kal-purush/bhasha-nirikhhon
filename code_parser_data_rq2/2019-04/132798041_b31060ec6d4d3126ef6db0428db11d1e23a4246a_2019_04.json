{
    "identifiers": [
        "org",
        "openstreetmap",
        "atlas",
        "checks",
        "validation",
        "points",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "org",
        "openstreetmap",
        "atlas",
        "checks",
        "BaseCheck",
        "org",
        "openstreetmap",
        "atlas",
        "checks",
        "flag",
        "CheckFlag",
        "org",
        "openstreetmap",
        "atlas",
        "geography",
        "atlas",
        "items",
        "AtlasObject",
        "org",
        "openstreetmap",
        "atlas",
        "geography",
        "atlas",
        "items",
        "Edge",
        "org",
        "openstreetmap",
        "atlas",
        "geography",
        "atlas",
        "items",
        "Point",
        "org",
        "openstreetmap",
        "atlas",
        "tags",
        "AddressStreetTag",
        "org",
        "openstreetmap",
        "atlas",
        "tags",
        "annotations",
        "validation",
        "Validators",
        "org",
        "openstreetmap",
        "atlas",
        "tags",
        "names",
        "NameTag",
        "org",
        "openstreetmap",
        "atlas",
        "utilities",
        "collections",
        "Iterables",
        "org",
        "openstreetmap",
        "atlas",
        "utilities",
        "configuration",
        "Configuration",
        "org",
        "openstreetmap",
        "atlas",
        "utilities",
        "scalars",
        "Distance",
        "serialVersionUID",
        "FALLBACK_INSTRUCTIONS",
        "Collections",
        "singletonList",
        "SEARCH_DISTANCE_DEFAULT",
        "searchDistance",
        "configuration",
        "configuration",
        "searchDistance",
        "configurationValue",
        "configuration",
        "SEARCH_DISTANCE_DEFAULT",
        "Distance",
        "meters",
        "Override",
        "Validators",
        "hasValuesFor",
        "Override",
        "streetNameValues",
        "Iterables",
        "stream",
        "getAtlas",
        "edgesIntersecting",
        "getLocation",
        "boxAround",
        "searchDistance",
        "Edge",
        "isMasterEdge",
        "flatMap",
        "edge",
        "edge",
        "getTags",
        "tag",
        "tag",
        "startsWith",
        "NameTag",
        "KEY",
        "values",
        "collectToSet",
        "streetNameValues",
        "isEmpty",
        "streetNameValues",
        "contains",
        "tag",
        "AddressStreetTag",
        "KEY",
        "Optional",
        "of",
        "createFlag",
        "getLocalizedInstruction",
        "getOsmIdentifier",
        "searchDistance",
        "asMeters",
        "Optional",
        "empty",
        "Override",
        "FALLBACK_INSTRUCTIONS"
    ],
    "literals": [
        "\"Address node {0,number,#} has an addr:street value that does not match the name of any roads within {1,number,#} meters.\"",
        "\"bounds.size\""
    ],
    "variables": [
        "searchDistance"
    ],
    "comments": [
        "Distance to search for Edges around a Point",
        "Gather the values of all name tags of all edges that are within the search distance",
        "Flag the object if there are edges within the search distance and the addr:street values",
        "is not present in the set of Edge name tag values"
    ],
    "docstrings": [
        "* This flags {@link Point}s where their addr:street tag value does not match any of the name tag\n * values of {@link Edge}s within a configurable search distance.\n *\n * @author bbreithaupt",
        "* The default constructor that must be supplied. The Atlas Checks framework will generate the\n     * checks with this constructor, supplying a configuration that can be used to adjust any\n     * parameters that the check uses during operation.\n     *\n     * @param configuration\n     *            the JSON configuration for this check",
        "* This function will validate if the supplied atlas object is valid for the check.\n     *\n     * @param object\n     *            the atlas object supplied by the Atlas-Checks framework for evaluation\n     * @return {@code true} if this object should be checked",
        "* This is the actual function that will check to see whether the object needs to be flagged.\n     *\n     * @param object\n     *            the atlas object supplied by the Atlas-Checks framework for evaluation\n     * @return an optional {@link CheckFlag} object that"
    ],
    "functions": [
        "AddressStreetNameCheck",
        "validCheckForObject",
        "flag",
        "getFallbackInstructions"
    ],
    "classes": [
        "AddressStreetNameCheck"
    ]
}