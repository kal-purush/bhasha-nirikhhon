{
    "identifiers": [
        "readFileSync",
        "scheduleJob",
        "Storage",
        "Bucket",
        "Logger",
        "generateReport",
        "SwapRepository",
        "ReverseSwapRepository",
        "logger",
        "dbpath",
        "config",
        "swapRepository",
        "reverseSwapRepository",
        "config",
        "config",
        "config",
        "logger",
        "Storage",
        "config",
        "readFileSync",
        "config",
        "storage",
        "config",
        "scheduleJob",
        "date",
        "date",
        "date",
        "date",
        "dateString",
        "dateString",
        "dateString",
        "generateReport",
        "file",
        "data",
        "fileName",
        "date",
        "isMiddleware",
        "fileName",
        "isMiddleware",
        "date",
        "fileName",
        "error",
        "error",
        "error",
        "date",
        "date",
        "date",
        "date",
        "date",
        "date",
        "number",
        "number",
        "BackupScheduler",
        "BackupConfig"
    ],
    "literals": [
        "'fs'",
        "'node-schedule'",
        "'@google-cloud/storage'",
        "'../Logger'",
        "'../report/Report'",
        "'../service/SwapRepository'",
        "'../service/ReverseSwapRepository'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "''",
        "''",
        "''",
        "'Disabled backups because of incomplete configuration'",
        "'utf-8'",
        "'Backups are disabled because of incomplete configuration'",
        "Doing database backup at: ${dateString}",
        "''",
        "'report.csv'",
        "'Uploaded report'",
        "string",
        "string",
        "${isMiddleware ? 'middleware' : 'backend'}/database-${date}.db",
        "'middleware'",
        "'backend'",
        "Uploaded file ${fileName}",
        "Could not upload file: ${error}",
        "${date.getFullYear()}${this.addLeadingZeros(date.getMonth())}${this.addLeadingZeros(date.getDay())}",
        "-${this.addLeadingZeros(date.getHours())}${this.addLeadingZeros(date.getMinutes())}",
        "${number}",
        "'0'"
    ],
    "variables": [
        "storage",
        "dateString",
        "file",
        "data"
    ],
    "comments": [
        "The interval has to be a cron schedule expression",
        "If set, the database of the backend will also be backed up"
    ],
    "docstrings": [
        "* Adds a leading 0 to the provided number if it is smalled than 10"
    ],
    "functions": [],
    "classes": [
        "BackupScheduler"
    ]
}