{
    "identifiers": [
        "React",
        "shallowEqual",
        "state",
        "state",
        "state",
        "partialState",
        "createState",
        "get",
        "setState",
        "partialState",
        "state",
        "state",
        "partialState",
        "partialState",
        "state",
        "partialState",
        "listeners",
        "listener",
        "listener",
        "state",
        "getState",
        "state",
        "subscribe",
        "listener",
        "listeners",
        "listener",
        "listeners",
        "listener",
        "destroy",
        "listeners",
        "state",
        "useStore",
        "useStore",
        "selector",
        "selector",
        "selector",
        "selector",
        "getState",
        "React",
        "selectState",
        "state",
        "React",
        "refs",
        "stateSlice",
        "refs",
        "stateSlice",
        "refs",
        "selectState",
        "refs",
        "selectState",
        "React",
        "subscribe",
        "refs",
        "state",
        "shallowEqual",
        "refs",
        "selected",
        "setStateSlice",
        "selected",
        "stateSlice",
        "createState",
        "setState",
        "getState",
        "useStore",
        "api",
        "useStore",
        "api",
        "result"
    ],
    "literals": [
        "'react'",
        "'./shallowEqual'",
        "string",
        "string",
        "string",
        "'function'",
        "'function'"
    ],
    "variables": [
        "listeners",
        "setState",
        "getState",
        "subscribe",
        "destroy",
        "selectState",
        "stateSlice",
        "setStateSlice",
        "refs",
        "selected",
        "state",
        "api",
        "result"
    ],
    "comments": [
        "Gets entire state if no selector was passed in",
        "Using functional initial b/c selected itself could be a function",
        "Prevent useEffect from needing to run when values change by storing them in a ref object",
        "Get fresh selected state",
        "Refresh local slice, functional initial b/c selected itself could be a function",
        "Returning the selected state slice"
    ],
    "docstrings": [],
    "functions": [
        "create",
        "useStore"
    ],
    "classes": []
}