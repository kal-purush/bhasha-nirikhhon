{
    "identifiers": [
        "modules",
        "chunkId",
        "installedChunks",
        "chunkId",
        "webpackHotUpdateCallback",
        "chunkId",
        "moreModules",
        "hotAddUpdateChunk",
        "chunkId",
        "moreModules",
        "parentHotUpdateCallback",
        "parentHotUpdateCallback",
        "chunkId",
        "moreModules",
        "chunkId",
        "script",
        "script",
        "script",
        "__webpack_require__",
        "chunkId",
        "hotCurrentHash",
        "head",
        "script",
        "requestTimeout",
        "requestTimeout",
        "requestTimeout",
        "resolve",
        "reject",
        "XMLHttpRequest",
        "reject",
        "XMLHttpRequest",
        "__webpack_require__",
        "hotCurrentHash",
        "request",
        "requestPath",
        "request",
        "requestTimeout",
        "request",
        "err",
        "reject",
        "err",
        "request",
        "request",
        "request",
        "reject",
        "requestPath",
        "request",
        "resolve",
        "request",
        "request",
        "reject",
        "requestPath",
        "request",
        "e",
        "reject",
        "e",
        "resolve",
        "update",
        "moduleId",
        "installedModules",
        "moduleId",
        "me",
        "__webpack_require__",
        "request",
        "me",
        "installedModules",
        "request",
        "installedModules",
        "request",
        "moduleId",
        "installedModules",
        "request",
        "moduleId",
        "hotCurrentParents",
        "moduleId",
        "hotCurrentChildModule",
        "request",
        "me",
        "request",
        "me",
        "request",
        "request",
        "moduleId",
        "hotCurrentParents",
        "__webpack_require__",
        "request",
        "ObjectFactory",
        "name",
        "__webpack_require__",
        "name",
        "value",
        "__webpack_require__",
        "name",
        "value",
        "name",
        "__webpack_require__",
        "__webpack_require__",
        "name",
        "name",
        "fn",
        "name",
        "ObjectFactory",
        "name",
        "fn",
        "chunkId",
        "hotStatus",
        "hotSetStatus",
        "hotChunksLoading",
        "__webpack_require__",
        "chunkId",
        "finishChunkLoading",
        "err",
        "finishChunkLoading",
        "err",
        "hotChunksLoading",
        "hotStatus",
        "hotWaitingFilesMap",
        "chunkId",
        "hotEnsureUpdateChunk",
        "chunkId",
        "hotChunksLoading",
        "hotWaitingFiles",
        "hotUpdateDownloaded",
        "fn",
        "moduleId",
        "hotCurrentChildModule",
        "moduleId",
        "dep",
        "callback",
        "dep",
        "hot",
        "dep",
        "hot",
        "dep",
        "dep",
        "i",
        "dep",
        "i",
        "hot",
        "dep",
        "i",
        "callback",
        "hot",
        "dep",
        "callback",
        "dep",
        "dep",
        "hot",
        "dep",
        "i",
        "dep",
        "i",
        "hot",
        "dep",
        "i",
        "hot",
        "dep",
        "callback",
        "hot",
        "callback",
        "callback",
        "hot",
        "callback",
        "callback",
        "hot",
        "callback",
        "idx",
        "hot",
        "idx",
        "hotCheck",
        "hotApply",
        "l",
        "l",
        "hotStatus",
        "hotStatusHandlers",
        "l",
        "l",
        "hotStatusHandlers",
        "l",
        "l",
        "hotStatusHandlers",
        "l",
        "idx",
        "hotStatusHandlers",
        "idx",
        "hotCurrentModuleData",
        "moduleId",
        "hotCurrentChildModule",
        "hot",
        "newStatus",
        "hotStatus",
        "newStatus",
        "i",
        "hotStatusHandlers",
        "i",
        "hotStatusHandlers",
        "i",
        "newStatus",
        "id",
        "id",
        "id",
        "isNumber",
        "id",
        "id",
        "apply",
        "hotStatus",
        "hotApplyOnUpdate",
        "apply",
        "hotSetStatus",
        "hotDownloadManifest",
        "hotRequestTimeout",
        "update",
        "update",
        "hotSetStatus",
        "hotRequestedFilesMap",
        "hotWaitingFilesMap",
        "hotAvailableFilesMap",
        "update",
        "hotUpdateNewHash",
        "update",
        "hotSetStatus",
        "resolve",
        "reject",
        "hotDeferred",
        "resolve",
        "reject",
        "hotUpdate",
        "hotEnsureUpdateChunk",
        "chunkId",
        "hotStatus",
        "hotChunksLoading",
        "hotWaitingFiles",
        "hotUpdateDownloaded",
        "promise",
        "chunkId",
        "moreModules",
        "hotAvailableFilesMap",
        "chunkId",
        "hotRequestedFilesMap",
        "chunkId",
        "hotRequestedFilesMap",
        "chunkId",
        "moduleId",
        "moreModules",
        "moreModules",
        "moduleId",
        "hotUpdate",
        "moduleId",
        "moreModules",
        "moduleId",
        "hotWaitingFiles",
        "hotChunksLoading",
        "hotUpdateDownloaded",
        "chunkId",
        "hotAvailableFilesMap",
        "chunkId",
        "hotWaitingFilesMap",
        "chunkId",
        "hotRequestedFilesMap",
        "chunkId",
        "hotWaitingFiles",
        "hotDownloadUpdateChunk",
        "chunkId",
        "hotSetStatus",
        "hotDeferred",
        "deferred",
        "hotApplyOnUpdate",
        "hotApply",
        "hotApplyOnUpdate",
        "result",
        "deferred",
        "result",
        "err",
        "deferred",
        "err",
        "id",
        "hotUpdate",
        "hotUpdate",
        "id",
        "outdatedModules",
        "toModuleId",
        "id",
        "deferred",
        "outdatedModules",
        "options",
        "hotStatus",
        "options",
        "options",
        "updateModuleId",
        "updateModuleId",
        "outdatedModules",
        "id",
        "id",
        "id",
        "queue",
        "queue",
        "queueItem",
        "queueItem",
        "installedModules",
        "moduleId",
        "chain",
        "moduleId",
        "chain",
        "moduleId",
        "i",
        "i",
        "i",
        "installedModules",
        "parentId",
        "parent",
        "parent",
        "moduleId",
        "chain",
        "parentId",
        "moduleId",
        "parentId",
        "outdatedModules",
        "parentId",
        "parent",
        "moduleId",
        "outdatedDependencies",
        "parentId",
        "outdatedDependencies",
        "parentId",
        "addAllToSet",
        "outdatedDependencies",
        "parentId",
        "moduleId",
        "outdatedDependencies",
        "parentId",
        "outdatedModules",
        "parentId",
        "queue",
        "chain",
        "parentId",
        "parentId",
        "updateModuleId",
        "outdatedModules",
        "outdatedDependencies",
        "a",
        "b",
        "i",
        "b",
        "i",
        "b",
        "i",
        "a",
        "item",
        "a",
        "item",
        "warnUnexpectedRequire",
        "result",
        "id",
        "hotUpdate",
        "hotUpdate",
        "id",
        "moduleId",
        "toModuleId",
        "id",
        "hotUpdate",
        "id",
        "result",
        "getAffectedStuff",
        "moduleId",
        "result",
        "id",
        "result",
        "chainInfo",
        "result",
        "result",
        "options",
        "options",
        "result",
        "options",
        "abortError",
        "result",
        "chainInfo",
        "options",
        "options",
        "result",
        "options",
        "abortError",
        "result",
        "result",
        "chainInfo",
        "options",
        "options",
        "result",
        "options",
        "abortError",
        "moduleId",
        "chainInfo",
        "options",
        "options",
        "result",
        "doApply",
        "options",
        "options",
        "result",
        "doDispose",
        "result",
        "abortError",
        "hotSetStatus",
        "abortError",
        "doApply",
        "appliedUpdate",
        "moduleId",
        "hotUpdate",
        "moduleId",
        "addAllToSet",
        "outdatedModules",
        "result",
        "moduleId",
        "result",
        "result",
        "moduleId",
        "outdatedDependencies",
        "moduleId",
        "outdatedDependencies",
        "moduleId",
        "addAllToSet",
        "outdatedDependencies",
        "moduleId",
        "result",
        "moduleId",
        "doDispose",
        "addAllToSet",
        "outdatedModules",
        "result",
        "appliedUpdate",
        "moduleId",
        "warnUnexpectedRequire",
        "i",
        "i",
        "outdatedModules",
        "i",
        "moduleId",
        "outdatedModules",
        "i",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "outdatedSelfAcceptedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "hotSetStatus",
        "hotAvailableFilesMap",
        "chunkId",
        "hotAvailableFilesMap",
        "chunkId",
        "hotDisposeChunk",
        "chunkId",
        "outdatedModules",
        "queue",
        "moduleId",
        "queue",
        "installedModules",
        "moduleId",
        "j",
        "j",
        "disposeHandlers",
        "j",
        "cb",
        "disposeHandlers",
        "j",
        "cb",
        "data",
        "hotCurrentModuleData",
        "moduleId",
        "data",
        "installedModules",
        "moduleId",
        "outdatedDependencies",
        "moduleId",
        "j",
        "j",
        "j",
        "installedModules",
        "j",
        "child",
        "idx",
        "child",
        "moduleId",
        "idx",
        "child",
        "idx",
        "moduleId",
        "outdatedDependencies",
        "outdatedDependencies",
        "moduleId",
        "installedModules",
        "moduleId",
        "moduleOutdatedDependencies",
        "outdatedDependencies",
        "moduleId",
        "j",
        "j",
        "moduleOutdatedDependencies",
        "j",
        "dependency",
        "moduleOutdatedDependencies",
        "j",
        "idx",
        "dependency",
        "idx",
        "idx",
        "hotSetStatus",
        "hotCurrentHash",
        "hotUpdateNewHash",
        "moduleId",
        "appliedUpdate",
        "appliedUpdate",
        "moduleId",
        "modules",
        "moduleId",
        "appliedUpdate",
        "moduleId",
        "moduleId",
        "outdatedDependencies",
        "outdatedDependencies",
        "moduleId",
        "installedModules",
        "moduleId",
        "moduleOutdatedDependencies",
        "outdatedDependencies",
        "moduleId",
        "i",
        "i",
        "moduleOutdatedDependencies",
        "i",
        "dependency",
        "moduleOutdatedDependencies",
        "i",
        "cb",
        "dependency",
        "cb",
        "callbacks",
        "cb",
        "callbacks",
        "cb",
        "i",
        "i",
        "callbacks",
        "i",
        "cb",
        "callbacks",
        "i",
        "cb",
        "moduleOutdatedDependencies",
        "err",
        "options",
        "options",
        "moduleId",
        "moduleOutdatedDependencies",
        "i",
        "err",
        "options",
        "error",
        "error",
        "err",
        "i",
        "i",
        "outdatedSelfAcceptedModules",
        "i",
        "outdatedSelfAcceptedModules",
        "i",
        "moduleId",
        "item",
        "hotCurrentParents",
        "moduleId",
        "__webpack_require__",
        "moduleId",
        "err",
        "item",
        "item",
        "err",
        "err2",
        "options",
        "options",
        "moduleId",
        "err2",
        "err",
        "err",
        "options",
        "error",
        "error",
        "err2",
        "error",
        "error",
        "err",
        "options",
        "options",
        "moduleId",
        "err",
        "options",
        "error",
        "error",
        "err",
        "error",
        "hotSetStatus",
        "error",
        "hotSetStatus",
        "resolve",
        "resolve",
        "outdatedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "moduleId",
        "hotCreateModule",
        "moduleId",
        "hotCurrentParentsTemp",
        "hotCurrentParents",
        "hotCurrentParents",
        "hotCurrentParentsTemp",
        "modules",
        "moduleId",
        "hotCreateRequire",
        "moduleId",
        "__webpack_require__",
        "modules",
        "__webpack_require__",
        "installedModules",
        "__webpack_require__",
        "exports",
        "name",
        "getter",
        "__webpack_require__",
        "exports",
        "name",
        "exports",
        "name",
        "getter",
        "__webpack_require__",
        "getDefault",
        "getModuleExports",
        "__webpack_require__",
        "getter",
        "getter",
        "getter",
        "__webpack_require__",
        "property",
        "property",
        "__webpack_require__",
        "__webpack_require__",
        "hotCurrentHash",
        "hotCreateRequire",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "sketch",
        "p",
        "p",
        "T",
        "w",
        "s",
        "a",
        "c",
        "p",
        "a",
        "a",
        "a",
        "a",
        "c",
        "w",
        "noise",
        "p",
        "w",
        "p",
        "s",
        "s",
        "p",
        "p",
        "canvas",
        "p",
        "p",
        "p",
        "github",
        "_constellation",
        "githubPoints",
        "github",
        "resumeConstellation",
        "_constellation",
        "resumePoints",
        "resumeConstellation",
        "noise",
        "p",
        "canvas",
        "sketch",
        "sketch",
        "sketch",
        "p",
        "p",
        "p",
        "noise",
        "p",
        "sketch",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "sketch",
        "canvas",
        "p",
        "p",
        "i",
        "i",
        "i",
        "r",
        "i",
        "t",
        "a",
        "i",
        "s",
        "a",
        "T",
        "t",
        "i",
        "i",
        "a",
        "s",
        "c",
        "p",
        "p",
        "p",
        "p",
        "p",
        "cp",
        "nameWidth",
        "cp",
        "resumeConstellation",
        "cp",
        "cp",
        "resumeConstellation",
        "p",
        "github",
        "cp",
        "github",
        "cp",
        "github",
        "p",
        "p5",
        "sketch",
        "exports",
        "__webpack_require__",
        "exports",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "call",
        "ReferenceError",
        "call",
        "call",
        "call",
        "call",
        "subClass",
        "superClass",
        "superClass",
        "superClass",
        "superClass",
        "subClass",
        "superClass",
        "superClass",
        "subClass",
        "superClass",
        "subClass",
        "superClass",
        "subClass",
        "superClass",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "points",
        "_classCallCheck",
        "Constellation",
        "points",
        "points",
        "points",
        "points",
        "points",
        "points",
        "point",
        "point",
        "bp",
        "bp",
        "point",
        "point",
        "bp",
        "bp",
        "point",
        "point",
        "bp",
        "bp",
        "point",
        "point",
        "bp",
        "bp",
        "point",
        "bp",
        "_createClass",
        "Constellation",
        "getWidth",
        "getHeight",
        "getBoundingPoints",
        "point",
        "i",
        "i",
        "point",
        "_this",
        "_this",
        "point",
        "_this",
        "_this",
        "testPoint",
        "x",
        "y",
        "x",
        "bp",
        "x",
        "bp",
        "y",
        "bp",
        "y",
        "bp",
        "setLocation",
        "x",
        "y",
        "x",
        "y",
        "draw",
        "p",
        "p",
        "speed",
        "points",
        "point",
        "i",
        "i",
        "r",
        "i",
        "p",
        "t",
        "a",
        "a",
        "r",
        "t",
        "s",
        "a",
        "p",
        "s",
        "s",
        "s",
        "s",
        "p",
        "s",
        "s",
        "s",
        "s",
        "point",
        "_this2",
        "x",
        "point",
        "_this2",
        "y",
        "i",
        "points",
        "p",
        "p",
        "p1",
        "p2",
        "points",
        "i",
        "_this2",
        "x",
        "points",
        "i",
        "_this2",
        "y",
        "c",
        "p1",
        "p2",
        "Constellation",
        "_Constellation",
        "_inherits",
        "TextConstellation",
        "_Constellation",
        "text",
        "font",
        "_classCallCheck",
        "TextConstellation",
        "font",
        "text",
        "_possibleConstructorReturn",
        "TextConstellation",
        "TextConstellation",
        "points",
        "TextConstellation",
        "Constellation",
        "exports",
        "Constellation",
        "exports",
        "TextConstellation"
    ],
    "literals": [
        "\"webpackHotUpdate\"",
        "\"webpackHotUpdate\"",
        "\"head\"",
        "\"script\"",
        "\"text/javascript\"",
        "\"utf-8\"",
        "\"\"",
        "\".\"",
        "\".hot-update.js\"",
        "\"undefined\"",
        "\"No browser support\"",
        "\"\"",
        "\".hot-update.json\"",
        "\"GET\"",
        "\"Manifest request to \"",
        "\" timed out.\"",
        "\"Manifest request to \"",
        "\" failed.\"",
        "\"01438a116eedb7f14c88\"",
        "\"[HMR] unexpected require(\"",
        "\") from disposed module \"",
        "\"e\"",
        "\"ready\"",
        "\"prepare\"",
        "\"prepare\"",
        "\"undefined\"",
        "\"function\"",
        "\"object\"",
        "\"undefined\"",
        "\"object\"",
        "\"idle\"",
        "\"\"",
        "\"idle\"",
        "\"check() is only allowed in idle status\"",
        "\"check\"",
        "\"idle\"",
        "\"prepare\"",
        "\"prepare\"",
        "\"ready\"",
        "\"ready\"",
        "\"apply() is only allowed in ready status\"",
        "\"self-declined\"",
        "\"unaccepted\"",
        "\"declined\"",
        "\"accepted\"",
        "\"[HMR] unexpected require(\"",
        "\") to disposed module\"",
        "\"disposed\"",
        "\"\"",
        "\"\\nUpdate propagation: \"",
        "\" -> \"",
        "\"self-declined\"",
        "\"Aborted because of self decline: \"",
        "\"declined\"",
        "\"Aborted because of declined dependency: \"",
        "\" in \"",
        "\"unaccepted\"",
        "\"Aborted because \"",
        "\" is not accepted\"",
        "\"accepted\"",
        "\"disposed\"",
        "\"Unexception type \"",
        "\"abort\"",
        "\"dispose\"",
        "\"apply\"",
        "\"accept-errored\"",
        "\"function\"",
        "\"self-accept-error-handler-errored\"",
        "\"self-accept-errored\"",
        "\"fail\"",
        "\"idle\"",
        "'default'",
        "'a'",
        "\"\"",
        "\"use strict\"",
        "'cliggidy clig xd'",
        "\"fug\"",
        "\"2d\"",
        "'black'",
        "'Exo 2'",
        "'Blaise Marchetti'",
        "'Blaise Marchetti'",
        "\"use strict\"",
        "\"__esModule\"",
        "\"value\"",
        "\"this hasn't been initialised - super() hasn't been called\"",
        "\"object\"",
        "\"function\"",
        "\"function\"",
        "\"Super expression must either be null or a function, not \"",
        "\"Cannot call a class as a function\"",
        "\"canvas\"",
        "\"2d\"",
        "\"getWidth\"",
        "\"getHeight\"",
        "\"getBoundingPoints\"",
        "\"testPoint\"",
        "\"setLocation\"",
        "\"draw\""
    ],
    "variables": [
        "parentHotUpdateCallback",
        "head",
        "script",
        "request",
        "requestPath",
        "update",
        "hotApplyOnUpdate",
        "hotCurrentHash",
        "hotRequestTimeout",
        "hotCurrentModuleData",
        "hotCurrentChildModule",
        "hotCurrentParents",
        "hotCurrentParentsTemp",
        "me",
        "fn",
        "ObjectFactory",
        "hot",
        "i",
        "i",
        "idx",
        "idx",
        "hotStatusHandlers",
        "hotStatus",
        "i",
        "hotWaitingFiles",
        "hotChunksLoading",
        "hotWaitingFilesMap",
        "hotRequestedFilesMap",
        "hotAvailableFilesMap",
        "hotDeferred",
        "hotUpdate",
        "hotUpdateNewHash",
        "isNumber",
        "promise",
        "chunkId",
        "deferred",
        "hotDeferred",
        "outdatedModules",
        "cb",
        "i",
        "j",
        "moduleId",
        "outdatedModules",
        "outdatedDependencies",
        "queue",
        "queueItem",
        "moduleId",
        "chain",
        "i",
        "parentId",
        "parent",
        "i",
        "item",
        "outdatedDependencies",
        "outdatedModules",
        "appliedUpdate",
        "warnUnexpectedRequire",
        "result",
        "abortError",
        "doApply",
        "doDispose",
        "chainInfo",
        "outdatedSelfAcceptedModules",
        "idx",
        "queue",
        "data",
        "disposeHandlers",
        "child",
        "dependency",
        "moduleOutdatedDependencies",
        "error",
        "callbacks",
        "item",
        "installedModules",
        "getter",
        "_constellation",
        "canvas",
        "github",
        "resumeConstellation",
        "nameConstellation",
        "noise",
        "sketch",
        "T",
        "githubPoints",
        "resumePoints",
        "cp",
        "c",
        "t",
        "i",
        "r",
        "a",
        "s",
        "nameWidth",
        "p",
        "_createClass",
        "i",
        "descriptor",
        "Constellation",
        "bp",
        "_this",
        "bp",
        "_this2",
        "c",
        "speed",
        "t",
        "points",
        "x",
        "y",
        "r",
        "a",
        "s",
        "p1",
        "p2",
        "TextConstellation",
        "points"
    ],
    "comments": [
        "webpackBootstrap",
        "eslint-disable-line no-unused-vars",
        "eslint-disable-line no-unused-vars",
        "eslint-disable-line no-unused-vars",
        "timeout",
        "no update available",
        "other failure",
        "success",
        "eslint-disable-line no-unused-vars",
        "eslint-disable-line no-unused-vars",
        "eslint-disable-line no-unused-vars",
        "eslint-disable-line no-unused-vars",
        "eslint-disable-line no-unused-vars",
        "eslint-disable-line no-unused-vars",
        "private stuff",
        "Module API",
        "Management API",
        "inherit from previous dispose call",
        "while downloading",
        "The update info",
        "eslint-disable-line no-lone-blocks",
        "globals chunkId",
        "eslint-disable-line no-unused-vars",
        "Wrap deferred object in Promise to mark it as a well-handled Promise to",
        "avoid triggering uncaught exception warning in Chrome.",
        "See https://bugs.chromium.org/p/chromium/issues/detail?id=465666",
        "at begin all updates modules are outdated",
        "the \"outdated\" status can propagate to parents if they don't accept the children",
        "Store self accepted outdated modules to require them later by the module system",
        "Now in \"dispose\" phase",
        "Call dispose handlers",
        "disable module (this disables requires from this module)",
        "remove module from cache",
        "when disposing there is no need to call dispose handler",
        "remove \"parents\" references from all children",
        "remove outdated dependency from module children",
        "Not in \"apply\" phase",
        "insert new code",
        "call accept handlers",
        "Load self accepted modules",
        "TODO remove in webpack 4",
        "handle errors in accept handlers and self accepted module load",
        "The module cache",
        "The require function",
        "Check if module is in cache",
        "Create a new module (and put it into the cache)",
        "Execute the module function",
        "Flag the module as loaded",
        "Return the exports of the module",
        "expose the modules object (__webpack_modules__)",
        "expose the module cache",
        "define getter function for harmony exports",
        "getDefaultExport function for compatibility with non-harmony modules",
        "Object.prototype.hasOwnProperty.call",
        "__webpack_public_path__",
        "__webpack_hash__",
        "Load entry module and return exports",
        "0",
        "",
        "TODO: Vary star count base don screen size",
        "",
        "1",
        "",
        "@ts-check",
        "Create the bounding square for this constellation, used for detecting mouse over",
        "Minimum X",
        "Maximum X",
        "Minimum Y",
        "Maximum Y",
        "Cool math",
        "Transform the location of the points",
        "Draw the lines of the constellation",
        "Draw the stars of the constellation",
        "",
        "# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgMDE0MzhhMTE2ZWVkYjdmMTRjODgiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NrZXRjaC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29uc3RlbGxhdGlvbi5qcyJdLCJuYW1lcyI6WyJjYW52YXMiLCJnaXRodWIiLCJyZXN1bWVDb25zdGVsbGF0aW9uIiwibmFtZUNvbnN0ZWxsYXRpb24iLCJub2lzZSIsInNrZXRjaCIsInAiLCJwcmVsb2FkIiwiVCIsInciLCJzIiwiYSIsImMiLCJmaWxsIiwiZmlsbFJlY3QiLCJ3aWR0aCIsImhlaWdodCIsIm1vdXNlQ2xpY2tlZCIsImNvbnNvbGUiLCJsb2ciLCJzZXR1cCIsImNyZWF0ZUNhbnZhcyIsIndpbmRvd1dpZHRoIiwid2luZG93SGVpZ2h0IiwiZ2l0aHViUG9pbnRzIiwicmVzdW1lUG9pbnRzIiwic2NhbGUiLCJyYW5kb20iLCJmb28iLCJjZW50ZXJQb2ludCIsIndpbmRvd1Jlc2l6ZWQiLCJyZXNpemVDYW52YXMiLCJkcmF3IiwiY3AiLCJnZXRDb250ZXh0IiwidCIsIm1pbGxpcyIsImJhY2tncm91bmQiLCJpIiwiciIsIk1hdGgiLCJzaW4iLCJ0ZXh0U2l6ZSIsInRleHRGb250IiwibmFtZVdpZHRoIiwidGV4dFdpZHRoIiwidGV4dCIsInNldExvY2F0aW9uIiwiZ2V0V2lkdGgiLCJwNSIsIkNvbnN0ZWxsYXRpb24iLCJwb2ludHMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiYnAiLCJmb3JFYWNoIiwicG9pbnQiLCJib3VuZGluZ1BvaW50cyIsIngiLCJ5IiwibWFwIiwiZ2V0Qm91bmRpbmdQb2ludHMiLCJzcGVlZCIsIlBJIiwic3Ryb2tlIiwicDEiLCJwMiIsImxlbmd0aCIsInN0cm9rZVdlaWdodCIsImxpbmUiLCJUZXh0Q29uc3RlbGxhdGlvbiIsImZvbnQiLCJ0ZXh0VG9Qb2ludHMiXSwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7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O0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQW1CLDJCQUEyQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBTztBQUNQO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBa0IsY0FBYztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQkFBYSw0QkFBNEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQU07QUFDTjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFJOztBQUVKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFF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SWEsT0FBT2dCLE1BQVAsR0FBZ0IsQ0FBdkIsRUFBeUI7QUFDckI3RCxzQkFBRThELFlBQUYsQ0FBZSxDQUFmO0FBQ0E5RCxzQkFBRStELElBQUYsQ0FBT0osRUFBUCxFQUFXQyxFQUFYLEVBQWVmLE9BQU9iLElBQUUsQ0FBVCxFQUFZLENBQVosSUFBZSxPQUFLWixLQUFwQixHQUE0QmdDLENBQTNDLEVBQThDUCxPQUFPYixJQUFFLENBQVQsRUFBWSxDQUFaLElBQWUsT0FBS1osS0FBcEIsR0FBNEJpQyxDQUExRTtBQUNIO0FBQ0Q7QUFDQS9DLGtCQUFFRSxRQUFGLENBQVdtRCxFQUFYLEVBQWVDLEVBQWYsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEI7QUFFSCxhQXJCRDtBQXNCSDs7Ozs7O0lBR0NJLGlCOzs7QUFDRiwrQkFBWXhCLElBQVosRUFBa0J5QixJQUFsQixFQUF1QjtBQUFBOztBQUNuQixZQUFJcEIsU0FBU29CLEtBQUtDLFlBQUwsQ0FBa0IxQixJQUFsQixFQUF3QixDQUF4QixFQUEyQixDQUEzQixFQUE4QixFQUE5QixDQUFiO0FBRG1CLHFJQUViSyxNQUZhO0FBR3RCOzs7RUFKMkJELGE7O1FBUXhCQSxhLEdBQUFBLGE7UUFBZW9CLGlCLEdBQUFBLGlCIiwiZmlsZSI6InNrZXRjaC5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHRmdW5jdGlvbiBob3REaXNwb3NlQ2h1bmsoY2h1bmtJZCkge1xuIFx0XHRkZWxldGUgaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuIFx0fVxuIFx0dmFyIHBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrID0gd2luZG93W1wid2VicGFja0hvdFVwZGF0ZVwiXTtcbiBcdHdpbmRvd1tcIndlYnBhY2tIb3RVcGRhdGVcIl0gPSBcclxuIFx0ZnVuY3Rpb24gd2VicGFja0hvdFVwZGF0ZUNhbGxiYWNrKGNodW5rSWQsIG1vcmVNb2R1bGVzKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuIFx0XHRob3RBZGRVcGRhdGVDaHVuayhjaHVua0lkLCBtb3JlTW9kdWxlcyk7XHJcbiBcdFx0aWYocGFyZW50SG90VXBkYXRlQ2FsbGJhY2spIHBhcmVudEhvdFVwZGF0ZUNhbGxiYWNrKGNodW5rSWQsIG1vcmVNb2R1bGVzKTtcclxuIFx0fSA7XHJcbiBcdFxyXG4gXHRmdW5jdGlvbiBob3REb3dubG9hZFVwZGF0ZUNodW5rKGNodW5rSWQpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xyXG4gXHRcdHZhciBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdO1xyXG4gXHRcdHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xyXG4gXHRcdHNjcmlwdC50eXBlID0gXCJ0ZXh0L2phdmFzY3JpcHRcIjtcclxuIFx0XHRzY3JpcHQuY2hhcnNldCA9IFwidXRmLThcIjtcclxuIFx0XHRzY3JpcHQuc3JjID0gX193ZWJwYWNrX3JlcXVpcmVfXy5wICsgXCJcIiArIGNodW5rSWQgKyBcIi5cIiArIGhvdEN1cnJlbnRIYXNoICsgXCIuaG90LXVwZGF0ZS5qc1wiO1xyXG4gXHRcdDtcclxuIFx0XHRoZWFkLmFwcGVuZENoaWxkKHNjcmlwdCk7XHJcbiBcdH1cclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdERvd25sb2FkTWFuaWZlc3QocmVxdWVzdFRpbWVvdXQpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xyXG4gXHRcdHJlcXVlc3RUaW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQgfHwgMTAwMDA7XHJcbiBcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xyXG4gXHRcdFx0aWYodHlwZW9mIFhNTEh0dHBSZXF1ZXN0ID09PSBcInVuZGVmaW5lZFwiKVxyXG4gXHRcdFx0XHRyZXR1cm4gcmVqZWN0KG5ldyBFcnJvcihcIk5vIGJyb3dzZXIgc3VwcG9ydFwiKSk7XHJcbiBcdFx0XHR0cnkge1xyXG4gXHRcdFx0XHR2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xyXG4gXHRcdFx0XHR2YXIgcmVxdWVzdFBhdGggPSBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBcIlwiICsgaG90Q3VycmVudEhhc2ggKyBcIi5ob3QtdXBkYXRlLmpzb25cIjtcclxuIFx0XHRcdFx0cmVxdWVzdC5vcGVuKFwiR0VUXCIsIHJlcXVlc3RQYXRoLCB0cnVlKTtcclxuIFx0XHRcdFx0cmVxdWVzdC50aW1lb3V0ID0gcmVxdWVzdFRpbWVvdXQ7XHJcbiBcdFx0XHRcdHJlcXVlc3Quc2VuZChudWxsKTtcclxuIFx0XHRcdH0gY2F0Y2goZXJyKSB7XHJcbiBcdFx0XHRcdHJldHVybiByZWplY3QoZXJyKTtcclxuIFx0XHRcdH1cclxuIFx0XHRcdHJlcXVlc3Qub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XHJcbiBcdFx0XHRcdGlmKHJlcXVlc3QucmVhZHlTdGF0ZSAhPT0gNCkgcmV0dXJuO1xyXG4gXHRcdFx0XHRpZihyZXF1ZXN0LnN0YXR1cyA9PT0gMCkge1xyXG4gXHRcdFx0XHRcdC8vIHRpbWVvdXRcclxuIFx0XHRcdFx0XHRyZWplY3QobmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgdGltZWQgb3V0LlwiKSk7XHJcbiBcdFx0XHRcdH0gZWxzZSBpZihyZXF1ZXN0LnN0YXR1cyA9PT0gNDA0KSB7XHJcbiBcdFx0XHRcdFx0Ly8gbm8gdXBkYXRlIGF2YWlsYWJsZVxyXG4gXHRcdFx0XHRcdHJlc29sdmUoKTtcclxuIFx0XHRcdFx0fSBlbHNlIGlmKHJlcXVlc3Quc3RhdHVzICE9PSAyMDAgJiYgcmVxdWVzdC5zdGF0dXMgIT09IDMwNCkge1xyXG4gXHRcdFx0XHRcdC8vIG90aGVyIGZhaWx1cmVcclxuIFx0XHRcdFx0XHRyZWplY3QobmV3IEVycm9yKFwiTWFuaWZlc3QgcmVxdWVzdCB0byBcIiArIHJlcXVlc3RQYXRoICsgXCIgZmFpbGVkLlwiKSk7XHJcbiBcdFx0XHRcdH0gZWxzZSB7XHJcbiBcdFx0XHRcdFx0Ly8gc3VjY2Vzc1xyXG4gXHRcdFx0XHRcdHRyeSB7XHJcbiBcdFx0XHRcdFx0XHR2YXIgdXBkYXRlID0gSlNPTi5wYXJzZShyZXF1ZXN0LnJlc3BvbnNlVGV4dCk7XHJcbiBcdFx0XHRcdFx0fSBjYXRjaChlKSB7XHJcbiBcdFx0XHRcdFx0XHRyZWplY3QoZSk7XHJcbiBcdFx0XHRcdFx0XHRyZXR1cm47XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdHJlc29sdmUodXBkYXRlKTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0fTtcclxuIFx0XHR9KTtcclxuIFx0fVxyXG5cbiBcdFxyXG4gXHRcclxuIFx0dmFyIGhvdEFwcGx5T25VcGRhdGUgPSB0cnVlO1xyXG4gXHR2YXIgaG90Q3VycmVudEhhc2ggPSBcIjAxNDM4YTExNmVlZGI3ZjE0Yzg4XCI7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcclxuIFx0dmFyIGhvdFJlcXVlc3RUaW1lb3V0ID0gMTAwMDA7XHJcbiBcdHZhciBob3RDdXJyZW50TW9kdWxlRGF0YSA9IHt9O1xyXG4gXHR2YXIgaG90Q3VycmVudENoaWxkTW9kdWxlOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdHZhciBob3RDdXJyZW50UGFyZW50cyA9IFtdOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdHZhciBob3RDdXJyZW50UGFyZW50c1RlbXAgPSBbXTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xyXG4gXHRcclxuIFx0ZnVuY3Rpb24gaG90Q3JlYXRlUmVxdWlyZShtb2R1bGVJZCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdFx0dmFyIG1lID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XHJcbiBcdFx0aWYoIW1lKSByZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXztcclxuIFx0XHR2YXIgZm4gPSBmdW5jdGlvbihyZXF1ZXN0KSB7XHJcbiBcdFx0XHRpZihtZS5ob3QuYWN0aXZlKSB7XHJcbiBcdFx0XHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbcmVxdWVzdF0pIHtcclxuIFx0XHRcdFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW3JlcXVlc3RdLnBhcmVudHMuaW5kZXhPZihtb2R1bGVJZCkgPCAwKVxyXG4gXHRcdFx0XHRcdFx0aW5zdGFsbGVkTW9kdWxlc1tyZXF1ZXN0XS5wYXJlbnRzLnB1c2gobW9kdWxlSWQpO1xyXG4gXHRcdFx0XHR9IGVsc2Uge1xyXG4gXHRcdFx0XHRcdGhvdEN1cnJlbnRQYXJlbnRzID0gW21vZHVsZUlkXTtcclxuIFx0XHRcdFx0XHRob3RDdXJyZW50Q2hpbGRNb2R1bGUgPSByZXF1ZXN0O1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHRcdGlmKG1lLmNoaWxkcmVuLmluZGV4T2YocmVxdWVzdCkgPCAwKVxyXG4gXHRcdFx0XHRcdG1lLmNoaWxkcmVuLnB1c2gocmVxdWVzdCk7XHJcbiBcdFx0XHR9IGVsc2Uge1xyXG4gXHRcdFx0XHRjb25zb2xlLndhcm4oXCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgKyByZXF1ZXN0ICsgXCIpIGZyb20gZGlzcG9zZWQgbW9kdWxlIFwiICsgbW9kdWxlSWQpO1xyXG4gXHRcdFx0XHRob3RDdXJyZW50UGFyZW50cyA9IFtdO1xyXG4gXHRcdFx0fVxyXG4gXHRcdFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18ocmVxdWVzdCk7XHJcbiBcdFx0fTtcclxuIFx0XHR2YXIgT2JqZWN0RmFjdG9yeSA9IGZ1bmN0aW9uIE9iamVjdEZhY3RvcnkobmFtZSkge1xyXG4gXHRcdFx0cmV0dXJuIHtcclxuIFx0XHRcdFx0Y29uZmlndXJhYmxlOiB0cnVlLFxyXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG4gXHRcdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gXHRcdFx0XHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fW25hbWVdO1xyXG4gXHRcdFx0XHR9LFxyXG4gXHRcdFx0XHRzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiBcdFx0XHRcdFx0X193ZWJwYWNrX3JlcXVpcmVfX1tuYW1lXSA9IHZhbHVlO1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9O1xyXG4gXHRcdH07XHJcbiBcdFx0Zm9yKHZhciBuYW1lIGluIF9fd2VicGFja19yZXF1aXJlX18pIHtcclxuIFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChfX3dlYnBhY2tfcmVxdWlyZV9fLCBuYW1lKSAmJiBuYW1lICE9PSBcImVcIikge1xyXG4gXHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZm4sIG5hbWUsIE9iamVjdEZhY3RvcnkobmFtZSkpO1xyXG4gXHRcdFx0fVxyXG4gXHRcdH1cclxuIFx0XHRmbi5lID0gZnVuY3Rpb24oY2h1bmtJZCkge1xyXG4gXHRcdFx0aWYoaG90U3RhdHVzID09PSBcInJlYWR5XCIpXHJcbiBcdFx0XHRcdGhvdFNldFN0YXR1cyhcInByZXBhcmVcIik7XHJcbiBcdFx0XHRob3RDaHVua3NMb2FkaW5nKys7XHJcbiBcdFx0XHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXy5lKGNodW5rSWQpLnRoZW4oZmluaXNoQ2h1bmtMb2FkaW5nLCBmdW5jdGlvbihlcnIpIHtcclxuIFx0XHRcdFx0ZmluaXNoQ2h1bmtMb2FkaW5nKCk7XHJcbiBcdFx0XHRcdHRocm93IGVycjtcclxuIFx0XHRcdH0pO1xyXG4gXHRcclxuIFx0XHRcdGZ1bmN0aW9uIGZpbmlzaENodW5rTG9hZGluZygpIHtcclxuIFx0XHRcdFx0aG90Q2h1bmtzTG9hZGluZy0tO1xyXG4gXHRcdFx0XHRpZihob3RTdGF0dXMgPT09IFwicHJlcGFyZVwiKSB7XHJcbiBcdFx0XHRcdFx0aWYoIWhvdFdhaXRpbmdGaWxlc01hcFtjaHVua0lkXSkge1xyXG4gXHRcdFx0XHRcdFx0aG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCk7XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdGlmKGhvdENodW5rc0xvYWRpbmcgPT09IDAgJiYgaG90V2FpdGluZ0ZpbGVzID09PSAwKSB7XHJcbiBcdFx0XHRcdFx0XHRob3RVcGRhdGVEb3dubG9hZGVkKCk7XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9XHJcbiBcdFx0fTtcclxuIFx0XHRyZXR1cm4gZm47XHJcbiBcdH1cclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdENyZWF0ZU1vZHVsZShtb2R1bGVJZCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdFx0dmFyIGhvdCA9IHtcclxuIFx0XHRcdC8vIHByaXZhdGUgc3R1ZmZcclxuIFx0XHRcdF9hY2NlcHRlZERlcGVuZGVuY2llczoge30sXHJcbiBcdFx0XHRfZGVjbGluZWREZXBlbmRlbmNpZXM6IHt9LFxyXG4gXHRcdFx0X3NlbGZBY2NlcHRlZDogZmFsc2UsXHJcbiBcdFx0XHRfc2VsZkRlY2xpbmVkOiBmYWxzZSxcclxuIFx0XHRcdF9kaXNwb3NlSGFuZGxlcnM6IFtdLFxyXG4gXHRcdFx0X21haW46IGhvdEN1cnJlbnRDaGlsZE1vZHVsZSAhPT0gbW9kdWxlSWQsXHJcbiBcdFxyXG4gXHRcdFx0Ly8gTW9kdWxlIEFQSVxyXG4gXHRcdFx0YWN0aXZlOiB0cnVlLFxyXG4gXHRcdFx0YWNjZXB0OiBmdW5jdGlvbihkZXAsIGNhbGxiYWNrKSB7XHJcbiBcdFx0XHRcdGlmKHR5cGVvZiBkZXAgPT09IFwidW5kZWZpbmVkXCIpXHJcbiBcdFx0XHRcdFx0aG90Ll9zZWxmQWNjZXB0ZWQgPSB0cnVlO1xyXG4gXHRcdFx0XHRlbHNlIGlmKHR5cGVvZiBkZXAgPT09IFwiZnVuY3Rpb25cIilcclxuIFx0XHRcdFx0XHRob3QuX3NlbGZBY2NlcHRlZCA9IGRlcDtcclxuIFx0XHRcdFx0ZWxzZSBpZih0eXBlb2YgZGVwID09PSBcIm9iamVjdFwiKVxyXG4gXHRcdFx0XHRcdGZvcih2YXIgaSA9IDA7IGkgPCBkZXAubGVuZ3RoOyBpKyspXHJcbiBcdFx0XHRcdFx0XHRob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW2RlcFtpXV0gPSBjYWxsYmFjayB8fCBmdW5jdGlvbigpIHt9O1xyXG4gXHRcdFx0XHRlbHNlXHJcbiBcdFx0XHRcdFx0aG90Ll9hY2NlcHRlZERlcGVuZGVuY2llc1tkZXBdID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24oKSB7fTtcclxuIFx0XHRcdH0sXHJcbiBcdFx0XHRkZWNsaW5lOiBmdW5jdGlvbihkZXApIHtcclxuIFx0XHRcdFx0aWYodHlwZW9mIGRlcCA9PT0gXCJ1bmRlZmluZWRcIilcclxuIFx0XHRcdFx0XHRob3QuX3NlbGZEZWNsaW5lZCA9IHRydWU7XHJcbiBcdFx0XHRcdGVsc2UgaWYodHlwZW9mIGRlcCA9PT0gXCJvYmplY3RcIilcclxuIFx0XHRcdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgZGVwLmxlbmd0aDsgaSsrKVxyXG4gXHRcdFx0XHRcdFx0aG90Ll9kZWNsaW5lZERlcGVuZGVuY2llc1tkZXBbaV1dID0gdHJ1ZTtcclxuIFx0XHRcdFx0ZWxzZVxyXG4gXHRcdFx0XHRcdGhvdC5fZGVjbGluZWREZXBlbmRlbmNpZXNbZGVwXSA9IHRydWU7XHJcbiBcdFx0XHR9LFxyXG4gXHRcdFx0ZGlzcG9zZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcclxuIFx0XHRcdFx0aG90Ll9kaXNwb3NlSGFuZGxlcnMucHVzaChjYWxsYmFjayk7XHJcbiBcdFx0XHR9LFxyXG4gXHRcdFx0YWRkRGlzcG9zZUhhbmRsZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XHJcbiBcdFx0XHRcdGhvdC5fZGlzcG9zZUhhbmRsZXJzLnB1c2goY2FsbGJhY2spO1xyXG4gXHRcdFx0fSxcclxuIFx0XHRcdHJlbW92ZURpc3Bvc2VIYW5kbGVyOiBmdW5jdGlvbihjYWxsYmFjaykge1xyXG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90Ll9kaXNwb3NlSGFuZGxlcnMuaW5kZXhPZihjYWxsYmFjayk7XHJcbiBcdFx0XHRcdGlmKGlkeCA+PSAwKSBob3QuX2Rpc3Bvc2VIYW5kbGVycy5zcGxpY2UoaWR4LCAxKTtcclxuIFx0XHRcdH0sXHJcbiBcdFxyXG4gXHRcdFx0Ly8gTWFuYWdlbWVudCBBUElcclxuIFx0XHRcdGNoZWNrOiBob3RDaGVjayxcclxuIFx0XHRcdGFwcGx5OiBob3RBcHBseSxcclxuIFx0XHRcdHN0YXR1czogZnVuY3Rpb24obCkge1xyXG4gXHRcdFx0XHRpZighbCkgcmV0dXJuIGhvdFN0YXR1cztcclxuIFx0XHRcdFx0aG90U3RhdHVzSGFuZGxlcnMucHVzaChsKTtcclxuIFx0XHRcdH0sXHJcbiBcdFx0XHRhZGRTdGF0dXNIYW5kbGVyOiBmdW5jdGlvbihsKSB7XHJcbiBcdFx0XHRcdGhvdFN0YXR1c0hhbmRsZXJzLnB1c2gobCk7XHJcbiBcdFx0XHR9LFxyXG4gXHRcdFx0cmVtb3ZlU3RhdHVzSGFuZGxlcjogZnVuY3Rpb24obCkge1xyXG4gXHRcdFx0XHR2YXIgaWR4ID0gaG90U3RhdHVzSGFuZGxlcnMuaW5kZXhPZihsKTtcclxuIFx0XHRcdFx0aWYoaWR4ID49IDApIGhvdFN0YXR1c0hhbmRsZXJzLnNwbGljZShpZHgsIDEpO1xyXG4gXHRcdFx0fSxcclxuIFx0XHJcbiBcdFx0XHQvL2luaGVyaXQgZnJvbSBwcmV2aW91cyBkaXNwb3NlIGNhbGxcclxuIFx0XHRcdGRhdGE6IGhvdEN1cnJlbnRNb2R1bGVEYXRhW21vZHVsZUlkXVxyXG4gXHRcdH07XHJcbiBcdFx0aG90Q3VycmVudENoaWxkTW9kdWxlID0gdW5kZWZpbmVkO1xyXG4gXHRcdHJldHVybiBob3Q7XHJcbiBcdH1cclxuIFx0XHJcbiBcdHZhciBob3RTdGF0dXNIYW5kbGVycyA9IFtdO1xyXG4gXHR2YXIgaG90U3RhdHVzID0gXCJpZGxlXCI7XHJcbiBcdFxyXG4gXHRmdW5jdGlvbiBob3RTZXRTdGF0dXMobmV3U3RhdHVzKSB7XHJcbiBcdFx0aG90U3RhdHVzID0gbmV3U3RhdHVzO1xyXG4gXHRcdGZvcih2YXIgaSA9IDA7IGkgPCBob3RTdGF0dXNIYW5kbGVycy5sZW5ndGg7IGkrKylcclxuIFx0XHRcdGhvdFN0YXR1c0hhbmRsZXJzW2ldLmNhbGwobnVsbCwgbmV3U3RhdHVzKTtcclxuIFx0fVxyXG4gXHRcclxuIFx0Ly8gd2hpbGUgZG93bmxvYWRpbmdcclxuIFx0dmFyIGhvdFdhaXRpbmdGaWxlcyA9IDA7XHJcbiBcdHZhciBob3RDaHVua3NMb2FkaW5nID0gMDtcclxuIFx0dmFyIGhvdFdhaXRpbmdGaWxlc01hcCA9IHt9O1xyXG4gXHR2YXIgaG90UmVxdWVzdGVkRmlsZXNNYXAgPSB7fTtcclxuIFx0dmFyIGhvdEF2YWlsYWJsZUZpbGVzTWFwID0ge307XHJcbiBcdHZhciBob3REZWZlcnJlZDtcclxuIFx0XHJcbiBcdC8vIFRoZSB1cGRhdGUgaW5mb1xyXG4gXHR2YXIgaG90VXBkYXRlLCBob3RVcGRhdGVOZXdIYXNoO1xyXG4gXHRcclxuIFx0ZnVuY3Rpb24gdG9Nb2R1bGVJZChpZCkge1xyXG4gXHRcdHZhciBpc051bWJlciA9ICgraWQpICsgXCJcIiA9PT0gaWQ7XHJcbiBcdFx0cmV0dXJuIGlzTnVtYmVyID8gK2lkIDogaWQ7XHJcbiBcdH1cclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdENoZWNrKGFwcGx5KSB7XHJcbiBcdFx0aWYoaG90U3RhdHVzICE9PSBcImlkbGVcIikgdGhyb3cgbmV3IEVycm9yKFwiY2hlY2soKSBpcyBvbmx5IGFsbG93ZWQgaW4gaWRsZSBzdGF0dXNcIik7XHJcbiBcdFx0aG90QXBwbHlPblVwZGF0ZSA9IGFwcGx5O1xyXG4gXHRcdGhvdFNldFN0YXR1cyhcImNoZWNrXCIpO1xyXG4gXHRcdHJldHVybiBob3REb3dubG9hZE1hbmlmZXN0KGhvdFJlcXVlc3RUaW1lb3V0KS50aGVuKGZ1bmN0aW9uKHVwZGF0ZSkge1xyXG4gXHRcdFx0aWYoIXVwZGF0ZSkge1xyXG4gXHRcdFx0XHRob3RTZXRTdGF0dXMoXCJpZGxlXCIpO1xyXG4gXHRcdFx0XHRyZXR1cm4gbnVsbDtcclxuIFx0XHRcdH1cclxuIFx0XHRcdGhvdFJlcXVlc3RlZEZpbGVzTWFwID0ge307XHJcbiBcdFx0XHRob3RXYWl0aW5nRmlsZXNNYXAgPSB7fTtcclxuIFx0XHRcdGhvdEF2YWlsYWJsZUZpbGVzTWFwID0gdXBkYXRlLmM7XHJcbiBcdFx0XHRob3RVcGRhdGVOZXdIYXNoID0gdXBkYXRlLmg7XHJcbiBcdFxyXG4gXHRcdFx0aG90U2V0U3RhdHVzKFwicHJlcGFyZVwiKTtcclxuIFx0XHRcdHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiBcdFx0XHRcdGhvdERlZmVycmVkID0ge1xyXG4gXHRcdFx0XHRcdHJlc29sdmU6IHJlc29sdmUsXHJcbiBcdFx0XHRcdFx0cmVqZWN0OiByZWplY3RcclxuIFx0XHRcdFx0fTtcclxuIFx0XHRcdH0pO1xyXG4gXHRcdFx0aG90VXBkYXRlID0ge307XHJcbiBcdFx0XHR2YXIgY2h1bmtJZCA9IDA7XHJcbiBcdFx0XHR7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbG9uZS1ibG9ja3NcclxuIFx0XHRcdFx0LypnbG9iYWxzIGNodW5rSWQgKi9cclxuIFx0XHRcdFx0aG90RW5zdXJlVXBkYXRlQ2h1bmsoY2h1bmtJZCk7XHJcbiBcdFx0XHR9XHJcbiBcdFx0XHRpZihob3RTdGF0dXMgPT09IFwicHJlcGFyZVwiICYmIGhvdENodW5rc0xvYWRpbmcgPT09IDAgJiYgaG90V2FpdGluZ0ZpbGVzID09PSAwKSB7XHJcbiBcdFx0XHRcdGhvdFVwZGF0ZURvd25sb2FkZWQoKTtcclxuIFx0XHRcdH1cclxuIFx0XHRcdHJldHVybiBwcm9taXNlO1xyXG4gXHRcdH0pO1xyXG4gXHR9XHJcbiBcdFxyXG4gXHRmdW5jdGlvbiBob3RBZGRVcGRhdGVDaHVuayhjaHVua0lkLCBtb3JlTW9kdWxlcykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXHJcbiBcdFx0aWYoIWhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdIHx8ICFob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSlcclxuIFx0XHRcdHJldHVybjtcclxuIFx0XHRob3RSZXF1ZXN0ZWRGaWxlc01hcFtjaHVua0lkXSA9IGZhbHNlO1xyXG4gXHRcdGZvcih2YXIgbW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcclxuIFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb3JlTW9kdWxlcywgbW9kdWxlSWQpKSB7XHJcbiBcdFx0XHRcdGhvdFVwZGF0ZVttb2R1bGVJZF0gPSBtb3JlTW9kdWxlc1ttb2R1bGVJZF07XHJcbiBcdFx0XHR9XHJcbiBcdFx0fVxyXG4gXHRcdGlmKC0taG90V2FpdGluZ0ZpbGVzID09PSAwICYmIGhvdENodW5rc0xvYWRpbmcgPT09IDApIHtcclxuIFx0XHRcdGhvdFVwZGF0ZURvd25sb2FkZWQoKTtcclxuIFx0XHR9XHJcbiBcdH1cclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdEVuc3VyZVVwZGF0ZUNodW5rKGNodW5rSWQpIHtcclxuIFx0XHRpZighaG90QXZhaWxhYmxlRmlsZXNNYXBbY2h1bmtJZF0pIHtcclxuIFx0XHRcdGhvdFdhaXRpbmdGaWxlc01hcFtjaHVua0lkXSA9IHRydWU7XHJcbiBcdFx0fSBlbHNlIHtcclxuIFx0XHRcdGhvdFJlcXVlc3RlZEZpbGVzTWFwW2NodW5rSWRdID0gdHJ1ZTtcclxuIFx0XHRcdGhvdFdhaXRpbmdGaWxlcysrO1xyXG4gXHRcdFx0aG90RG93bmxvYWRVcGRhdGVDaHVuayhjaHVua0lkKTtcclxuIFx0XHR9XHJcbiBcdH1cclxuIFx0XHJcbiBcdGZ1bmN0aW9uIGhvdFVwZGF0ZURvd25sb2FkZWQoKSB7XHJcbiBcdFx0aG90U2V0U3RhdHVzKFwicmVhZHlcIik7XHJcbiBcdFx0dmFyIGRlZmVycmVkID0gaG90RGVmZXJyZWQ7XHJcbiBcdFx0aG90RGVmZXJyZWQgPSBudWxsO1xyXG4gXHRcdGlmKCFkZWZlcnJlZCkgcmV0dXJuO1xyXG4gXHRcdGlmKGhvdEFwcGx5T25VcGRhdGUpIHtcclxuIFx0XHRcdC8vIFdyYXAgZGVmZXJyZWQgb2JqZWN0IGluIFByb21pc2UgdG8gbWFyayBpdCBhcyBhIHdlbGwtaGFuZGxlZCBQcm9taXNlIHRvXHJcbiBcdFx0XHQvLyBhdm9pZCB0cmlnZ2VyaW5nIHVuY2F1Z2h0IGV4Y2VwdGlvbiB3YXJuaW5nIGluIENocm9tZS5cclxuIFx0XHRcdC8vIFNlZSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NjU2NjZcclxuIFx0XHRcdFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiBcdFx0XHRcdHJldHVybiBob3RBcHBseShob3RBcHBseU9uVXBkYXRlKTtcclxuIFx0XHRcdH0pLnRoZW4oXHJcbiBcdFx0XHRcdGZ1bmN0aW9uKHJlc3VsdCkge1xyXG4gXHRcdFx0XHRcdGRlZmVycmVkLnJlc29sdmUocmVzdWx0KTtcclxuIFx0XHRcdFx0fSxcclxuIFx0XHRcdFx0ZnVuY3Rpb24oZXJyKSB7XHJcbiBcdFx0XHRcdFx0ZGVmZXJyZWQucmVqZWN0KGVycik7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdCk7XHJcbiBcdFx0fSBlbHNlIHtcclxuIFx0XHRcdHZhciBvdXRkYXRlZE1vZHVsZXMgPSBbXTtcclxuIFx0XHRcdGZvcih2YXIgaWQgaW4gaG90VXBkYXRlKSB7XHJcbiBcdFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChob3RVcGRhdGUsIGlkKSkge1xyXG4gXHRcdFx0XHRcdG91dGRhdGVkTW9kdWxlcy5wdXNoKHRvTW9kdWxlSWQoaWQpKTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0fVxyXG4gXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZShvdXRkYXRlZE1vZHVsZXMpO1xyXG4gXHRcdH1cclxuIFx0fVxyXG4gXHRcclxuIFx0ZnVuY3Rpb24gaG90QXBwbHkob3B0aW9ucykge1xyXG4gXHRcdGlmKGhvdFN0YXR1cyAhPT0gXCJyZWFkeVwiKSB0aHJvdyBuZXcgRXJyb3IoXCJhcHBseSgpIGlzIG9ubHkgYWxsb3dlZCBpbiByZWFkeSBzdGF0dXNcIik7XHJcbiBcdFx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XHJcbiBcdFxyXG4gXHRcdHZhciBjYjtcclxuIFx0XHR2YXIgaTtcclxuIFx0XHR2YXIgajtcclxuIFx0XHR2YXIgbW9kdWxlO1xyXG4gXHRcdHZhciBtb2R1bGVJZDtcclxuIFx0XHJcbiBcdFx0ZnVuY3Rpb24gZ2V0QWZmZWN0ZWRTdHVmZih1cGRhdGVNb2R1bGVJZCkge1xyXG4gXHRcdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFt1cGRhdGVNb2R1bGVJZF07XHJcbiBcdFx0XHR2YXIgb3V0ZGF0ZWREZXBlbmRlbmNpZXMgPSB7fTtcclxuIFx0XHJcbiBcdFx0XHR2YXIgcXVldWUgPSBvdXRkYXRlZE1vZHVsZXMuc2xpY2UoKS5tYXAoZnVuY3Rpb24oaWQpIHtcclxuIFx0XHRcdFx0cmV0dXJuIHtcclxuIFx0XHRcdFx0XHRjaGFpbjogW2lkXSxcclxuIFx0XHRcdFx0XHRpZDogaWRcclxuIFx0XHRcdFx0fTtcclxuIFx0XHRcdH0pO1xyXG4gXHRcdFx0d2hpbGUocXVldWUubGVuZ3RoID4gMCkge1xyXG4gXHRcdFx0XHR2YXIgcXVldWVJdGVtID0gcXVldWUucG9wKCk7XHJcbiBcdFx0XHRcdHZhciBtb2R1bGVJZCA9IHF1ZXVlSXRlbS5pZDtcclxuIFx0XHRcdFx0dmFyIGNoYWluID0gcXVldWVJdGVtLmNoYWluO1xyXG4gXHRcdFx0XHRtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcclxuIFx0XHRcdFx0aWYoIW1vZHVsZSB8fCBtb2R1bGUuaG90Ll9zZWxmQWNjZXB0ZWQpXHJcbiBcdFx0XHRcdFx0Y29udGludWU7XHJcbiBcdFx0XHRcdGlmKG1vZHVsZS5ob3QuX3NlbGZEZWNsaW5lZCkge1xyXG4gXHRcdFx0XHRcdHJldHVybiB7XHJcbiBcdFx0XHRcdFx0XHR0eXBlOiBcInNlbGYtZGVjbGluZWRcIixcclxuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbixcclxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxyXG4gXHRcdFx0XHRcdH07XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdFx0aWYobW9kdWxlLmhvdC5fbWFpbikge1xyXG4gXHRcdFx0XHRcdHJldHVybiB7XHJcbiBcdFx0XHRcdFx0XHR0eXBlOiBcInVuYWNjZXB0ZWRcIixcclxuIFx0XHRcdFx0XHRcdGNoYWluOiBjaGFpbixcclxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBtb2R1bGVJZFxyXG4gXHRcdFx0XHRcdH07XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IG1vZHVsZS5wYXJlbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiBcdFx0XHRcdFx0dmFyIHBhcmVudElkID0gbW9kdWxlLnBhcmVudHNbaV07XHJcbiBcdFx0XHRcdFx0dmFyIHBhcmVudCA9IGluc3RhbGxlZE1vZHVsZXNbcGFyZW50SWRdO1xyXG4gXHRcdFx0XHRcdGlmKCFwYXJlbnQpIGNvbnRpbnVlO1xyXG4gXHRcdFx0XHRcdGlmKHBhcmVudC5ob3QuX2RlY2xpbmVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xyXG4gXHRcdFx0XHRcdFx0cmV0dXJuIHtcclxuIFx0XHRcdFx0XHRcdFx0dHlwZTogXCJkZWNsaW5lZFwiLFxyXG4gXHRcdFx0XHRcdFx0XHRjaGFpbjogY2hhaW4uY29uY2F0KFtwYXJlbnRJZF0pLFxyXG4gXHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXHJcbiBcdFx0XHRcdFx0XHRcdHBhcmVudElkOiBwYXJlbnRJZFxyXG4gXHRcdFx0XHRcdFx0fTtcclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdFx0aWYob3V0ZGF0ZWRNb2R1bGVzLmluZGV4T2YocGFyZW50SWQpID49IDApIGNvbnRpbnVlO1xyXG4gXHRcdFx0XHRcdGlmKHBhcmVudC5ob3QuX2FjY2VwdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSkge1xyXG4gXHRcdFx0XHRcdFx0aWYoIW91dGRhdGVkRGVwZW5kZW5jaWVzW3BhcmVudElkXSlcclxuIFx0XHRcdFx0XHRcdFx0b3V0ZGF0ZWREZXBlbmRlbmNpZXNbcGFyZW50SWRdID0gW107XHJcbiBcdFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF0sIFttb2R1bGVJZF0pO1xyXG4gXHRcdFx0XHRcdFx0Y29udGludWU7XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdGRlbGV0ZSBvdXRkYXRlZERlcGVuZGVuY2llc1twYXJlbnRJZF07XHJcbiBcdFx0XHRcdFx0b3V0ZGF0ZWRNb2R1bGVzLnB1c2gocGFyZW50SWQpO1xyXG4gXHRcdFx0XHRcdHF1ZXVlLnB1c2goe1xyXG4gXHRcdFx0XHRcdFx0Y2hhaW46IGNoYWluLmNvbmNhdChbcGFyZW50SWRdKSxcclxuIFx0XHRcdFx0XHRcdGlkOiBwYXJlbnRJZFxyXG4gXHRcdFx0XHRcdH0pO1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9XHJcbiBcdFxyXG4gXHRcdFx0cmV0dXJuIHtcclxuIFx0XHRcdFx0dHlwZTogXCJhY2NlcHRlZFwiLFxyXG4gXHRcdFx0XHRtb2R1bGVJZDogdXBkYXRlTW9kdWxlSWQsXHJcbiBcdFx0XHRcdG91dGRhdGVkTW9kdWxlczogb3V0ZGF0ZWRNb2R1bGVzLFxyXG4gXHRcdFx0XHRvdXRkYXRlZERlcGVuZGVuY2llczogb3V0ZGF0ZWREZXBlbmRlbmNpZXNcclxuIFx0XHRcdH07XHJcbiBcdFx0fVxyXG4gXHRcclxuIFx0XHRmdW5jdGlvbiBhZGRBbGxUb1NldChhLCBiKSB7XHJcbiBcdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgYi5sZW5ndGg7IGkrKykge1xyXG4gXHRcdFx0XHR2YXIgaXRlbSA9IGJbaV07XHJcbiBcdFx0XHRcdGlmKGEuaW5kZXhPZihpdGVtKSA8IDApXHJcbiBcdFx0XHRcdFx0YS5wdXNoKGl0ZW0pO1xyXG4gXHRcdFx0fVxyXG4gXHRcdH1cclxuIFx0XHJcbiBcdFx0Ly8gYXQgYmVnaW4gYWxsIHVwZGF0ZXMgbW9kdWxlcyBhcmUgb3V0ZGF0ZWRcclxuIFx0XHQvLyB0aGUgXCJvdXRkYXRlZFwiIHN0YXR1cyBjYW4gcHJvcGFnYXRlIHRvIHBhcmVudHMgaWYgdGhleSBkb24ndCBhY2NlcHQgdGhlIGNoaWxkcmVuXHJcbiBcdFx0dmFyIG91dGRhdGVkRGVwZW5kZW5jaWVzID0ge307XHJcbiBcdFx0dmFyIG91dGRhdGVkTW9kdWxlcyA9IFtdO1xyXG4gXHRcdHZhciBhcHBsaWVkVXBkYXRlID0ge307XHJcbiBcdFxyXG4gXHRcdHZhciB3YXJuVW5leHBlY3RlZFJlcXVpcmUgPSBmdW5jdGlvbiB3YXJuVW5leHBlY3RlZFJlcXVpcmUoKSB7XHJcbiBcdFx0XHRjb25zb2xlLndhcm4oXCJbSE1SXSB1bmV4cGVjdGVkIHJlcXVpcmUoXCIgKyByZXN1bHQubW9kdWxlSWQgKyBcIikgdG8gZGlzcG9zZWQgbW9kdWxlXCIpO1xyXG4gXHRcdH07XHJcbiBcdFxyXG4gXHRcdGZvcih2YXIgaWQgaW4gaG90VXBkYXRlKSB7XHJcbiBcdFx0XHRpZihPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoaG90VXBkYXRlLCBpZCkpIHtcclxuIFx0XHRcdFx0bW9kdWxlSWQgPSB0b01vZHVsZUlkKGlkKTtcclxuIFx0XHRcdFx0dmFyIHJlc3VsdDtcclxuIFx0XHRcdFx0aWYoaG90VXBkYXRlW2lkXSkge1xyXG4gXHRcdFx0XHRcdHJlc3VsdCA9IGdldEFmZmVjdGVkU3R1ZmYobW9kdWxlSWQpO1xyXG4gXHRcdFx0XHR9IGVsc2Uge1xyXG4gXHRcdFx0XHRcdHJlc3VsdCA9IHtcclxuIFx0XHRcdFx0XHRcdHR5cGU6IFwiZGlzcG9zZWRcIixcclxuIFx0XHRcdFx0XHRcdG1vZHVsZUlkOiBpZFxyXG4gXHRcdFx0XHRcdH07XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdFx0dmFyIGFib3J0RXJyb3IgPSBmYWxzZTtcclxuIFx0XHRcdFx0dmFyIGRvQXBwbHkgPSBmYWxzZTtcclxuIFx0XHRcdFx0dmFyIGRvRGlzcG9zZSA9IGZhbHNlO1xyXG4gXHRcdFx0XHR2YXIgY2hhaW5JbmZvID0gXCJcIjtcclxuIFx0XHRcdFx0aWYocmVzdWx0LmNoYWluKSB7XHJcbiBcdFx0XHRcdFx0Y2hhaW5JbmZvID0gXCJcXG5VcGRhdGUgcHJvcGFnYXRpb246IFwiICsgcmVzdWx0LmNoYWluLmpvaW4oXCIgLT4gXCIpO1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHRcdHN3aXRjaChyZXN1bHQudHlwZSkge1xyXG4gXHRcdFx0XHRcdGNhc2UgXCJzZWxmLWRlY2xpbmVkXCI6XHJcbiBcdFx0XHRcdFx0XHRpZihvcHRpb25zLm9uRGVjbGluZWQpXHJcbiBcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25EZWNsaW5lZChyZXN1bHQpO1xyXG4gXHRcdFx0XHRcdFx0aWYoIW9wdGlvbnMuaWdub3JlRGVjbGluZWQpXHJcbiBcdFx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXCJBYm9ydGVkIGJlY2F1c2Ugb2Ygc2VsZiBkZWNsaW5lOiBcIiArIHJlc3VsdC5tb2R1bGVJZCArIGNoYWluSW5mbyk7XHJcbiBcdFx0XHRcdFx0XHRicmVhaztcclxuIFx0XHRcdFx0XHRjYXNlIFwiZGVjbGluZWRcIjpcclxuIFx0XHRcdFx0XHRcdGlmKG9wdGlvbnMub25EZWNsaW5lZClcclxuIFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkRlY2xpbmVkKHJlc3VsdCk7XHJcbiBcdFx0XHRcdFx0XHRpZighb3B0aW9ucy5pZ25vcmVEZWNsaW5lZClcclxuIFx0XHRcdFx0XHRcdFx0YWJvcnRFcnJvciA9IG5ldyBFcnJvcihcIkFib3J0ZWQgYmVjYXVzZSBvZiBkZWNsaW5lZCBkZXBlbmRlbmN5OiBcIiArIHJlc3VsdC5tb2R1bGVJZCArIFwiIGluIFwiICsgcmVzdWx0LnBhcmVudElkICsgY2hhaW5JbmZvKTtcclxuIFx0XHRcdFx0XHRcdGJyZWFrO1xyXG4gXHRcdFx0XHRcdGNhc2UgXCJ1bmFjY2VwdGVkXCI6XHJcbiBcdFx0XHRcdFx0XHRpZihvcHRpb25zLm9uVW5hY2NlcHRlZClcclxuIFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vblVuYWNjZXB0ZWQocmVzdWx0KTtcclxuIFx0XHRcdFx0XHRcdGlmKCFvcHRpb25zLmlnbm9yZVVuYWNjZXB0ZWQpXHJcbiBcdFx0XHRcdFx0XHRcdGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXCJBYm9ydGVkIGJlY2F1c2UgXCIgKyBtb2R1bGVJZCArIFwiIGlzIG5vdCBhY2NlcHRlZFwiICsgY2hhaW5JbmZvKTtcclxuIFx0XHRcdFx0XHRcdGJyZWFrO1xyXG4gXHRcdFx0XHRcdGNhc2UgXCJhY2NlcHRlZFwiOlxyXG4gXHRcdFx0XHRcdFx0aWYob3B0aW9ucy5vbkFjY2VwdGVkKVxyXG4gXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uQWNjZXB0ZWQocmVzdWx0KTtcclxuIFx0XHRcdFx0XHRcdGRvQXBwbHkgPSB0cnVlO1xyXG4gXHRcdFx0XHRcdFx0YnJlYWs7XHJcbiBcdFx0XHRcdFx0Y2FzZSBcImRpc3Bvc2VkXCI6XHJcbiBcdFx0XHRcdFx0XHRpZihvcHRpb25zLm9uRGlzcG9zZWQpXHJcbiBcdFx0XHRcdFx0XHRcdG9wdGlvbnMub25EaXNwb3NlZChyZXN1bHQpO1xyXG4gXHRcdFx0XHRcdFx0ZG9EaXNwb3NlID0gdHJ1ZTtcclxuIFx0XHRcdFx0XHRcdGJyZWFrO1xyXG4gXHRcdFx0XHRcdGRlZmF1bHQ6XHJcbiBcdFx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoXCJVbmV4Y2VwdGlvbiB0eXBlIFwiICsgcmVzdWx0LnR5cGUpO1xyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHRcdGlmKGFib3J0RXJyb3IpIHtcclxuIFx0XHRcdFx0XHRob3RTZXRTdGF0dXMoXCJhYm9ydFwiKTtcclxuIFx0XHRcdFx0XHRyZXR1cm4gUHJvbWlzZS5yZWplY3QoYWJvcnRFcnJvcik7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdFx0aWYoZG9BcHBseSkge1xyXG4gXHRcdFx0XHRcdGFwcGxpZWRVcGRhdGVbbW9kdWxlSWRdID0gaG90VXBkYXRlW21vZHVsZUlkXTtcclxuIFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIHJlc3VsdC5vdXRkYXRlZE1vZHVsZXMpO1xyXG4gXHRcdFx0XHRcdGZvcihtb2R1bGVJZCBpbiByZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcclxuIFx0XHRcdFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChyZXN1bHQub3V0ZGF0ZWREZXBlbmRlbmNpZXMsIG1vZHVsZUlkKSkge1xyXG4gXHRcdFx0XHRcdFx0XHRpZighb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdKVxyXG4gXHRcdFx0XHRcdFx0XHRcdG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXSA9IFtdO1xyXG4gXHRcdFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0sIHJlc3VsdC5vdXRkYXRlZERlcGVuZGVuY2llc1ttb2R1bGVJZF0pO1xyXG4gXHRcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRpZihkb0Rpc3Bvc2UpIHtcclxuIFx0XHRcdFx0XHRhZGRBbGxUb1NldChvdXRkYXRlZE1vZHVsZXMsIFtyZXN1bHQubW9kdWxlSWRdKTtcclxuIFx0XHRcdFx0XHRhcHBsaWVkVXBkYXRlW21vZHVsZUlkXSA9IHdhcm5VbmV4cGVjdGVkUmVxdWlyZTtcclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0fVxyXG4gXHRcdH1cclxuIFx0XHJcbiBcdFx0Ly8gU3RvcmUgc2VsZiBhY2NlcHRlZCBvdXRkYXRlZCBtb2R1bGVzIHRvIHJlcXVpcmUgdGhlbSBsYXRlciBieSB0aGUgbW9kdWxlIHN5c3RlbVxyXG4gXHRcdHZhciBvdXRkYXRlZFNlbGZBY2NlcHRlZE1vZHVsZXMgPSBbXTtcclxuIFx0XHRmb3IoaSA9IDA7IGkgPCBvdXRkYXRlZE1vZHVsZXMubGVuZ3RoOyBpKyspIHtcclxuIFx0XHRcdG1vZHVsZUlkID0gb3V0ZGF0ZWRNb2R1bGVzW2ldO1xyXG4gXHRcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gJiYgaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uaG90Ll9zZWxmQWNjZXB0ZWQpXHJcbiBcdFx0XHRcdG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlcy5wdXNoKHtcclxuIFx0XHRcdFx0XHRtb2R1bGU6IG1vZHVsZUlkLFxyXG4gXHRcdFx0XHRcdGVycm9ySGFuZGxlcjogaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uaG90Ll9zZWxmQWNjZXB0ZWRcclxuIFx0XHRcdFx0fSk7XHJcbiBcdFx0fVxyXG4gXHRcclxuIFx0XHQvLyBOb3cgaW4gXCJkaXNwb3NlXCIgcGhhc2VcclxuIFx0XHRob3RTZXRTdGF0dXMoXCJkaXNwb3NlXCIpO1xyXG4gXHRcdE9iamVjdC5rZXlzKGhvdEF2YWlsYWJsZUZpbGVzTWFwKS5mb3JFYWNoKGZ1bmN0aW9uKGNodW5rSWQpIHtcclxuIFx0XHRcdGlmKGhvdEF2YWlsYWJsZUZpbGVzTWFwW2NodW5rSWRdID09PSBmYWxzZSkge1xyXG4gXHRcdFx0XHRob3REaXNwb3NlQ2h1bmsoY2h1bmtJZCk7XHJcbiBcdFx0XHR9XHJcbiBcdFx0fSk7XHJcbiBcdFxyXG4gXHRcdHZhciBpZHg7XHJcbiBcdFx0dmFyIHF1ZXVlID0gb3V0ZGF0ZWRNb2R1bGVzLnNsaWNlKCk7XHJcbiBcdFx0d2hpbGUocXVldWUubGVuZ3RoID4gMCkge1xyXG4gXHRcdFx0bW9kdWxlSWQgPSBxdWV1ZS5wb3AoKTtcclxuIFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xyXG4gXHRcdFx0aWYoIW1vZHVsZSkgY29udGludWU7XHJcbiBcdFxyXG4gXHRcdFx0dmFyIGRhdGEgPSB7fTtcclxuIFx0XHJcbiBcdFx0XHQvLyBDYWxsIGRpc3Bvc2UgaGFuZGxlcnNcclxuIFx0XHRcdHZhciBkaXNwb3NlSGFuZGxlcnMgPSBtb2R1bGUuaG90Ll9kaXNwb3NlSGFuZGxlcnM7XHJcbiBcdFx0XHRmb3IoaiA9IDA7IGogPCBkaXNwb3NlSGFuZGxlcnMubGVuZ3RoOyBqKyspIHtcclxuIFx0XHRcdFx0Y2IgPSBkaXNwb3NlSGFuZGxlcnNbal07XHJcbiBcdFx0XHRcdGNiKGRhdGEpO1xyXG4gXHRcdFx0fVxyXG4gXHRcdFx0aG90Q3VycmVudE1vZHVsZURhdGFbbW9kdWxlSWRdID0gZGF0YTtcclxuIFx0XHJcbiBcdFx0XHQvLyBkaXNhYmxlIG1vZHVsZSAodGhpcyBkaXNhYmxlcyByZXF1aXJlcyBmcm9tIHRoaXMgbW9kdWxlKVxyXG4gXHRcdFx0bW9kdWxlLmhvdC5hY3RpdmUgPSBmYWxzZTtcclxuIFx0XHJcbiBcdFx0XHQvLyByZW1vdmUgbW9kdWxlIGZyb20gY2FjaGVcclxuIFx0XHRcdGRlbGV0ZSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXTtcclxuIFx0XHJcbiBcdFx0XHQvLyB3aGVuIGRpc3Bvc2luZyB0aGVyZSBpcyBubyBuZWVkIHRvIGNhbGwgZGlzcG9zZSBoYW5kbGVyXHJcbiBcdFx0XHRkZWxldGUgb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdO1xyXG4gXHRcclxuIFx0XHRcdC8vIHJlbW92ZSBcInBhcmVudHNcIiByZWZlcmVuY2VzIGZyb20gYWxsIGNoaWxkcmVuXHJcbiBcdFx0XHRmb3IoaiA9IDA7IGogPCBtb2R1bGUuY2hpbGRyZW4ubGVuZ3RoOyBqKyspIHtcclxuIFx0XHRcdFx0dmFyIGNoaWxkID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGUuY2hpbGRyZW5bal1dO1xyXG4gXHRcdFx0XHRpZighY2hpbGQpIGNvbnRpbnVlO1xyXG4gXHRcdFx0XHRpZHggPSBjaGlsZC5wYXJlbnRzLmluZGV4T2YobW9kdWxlSWQpO1xyXG4gXHRcdFx0XHRpZihpZHggPj0gMCkge1xyXG4gXHRcdFx0XHRcdGNoaWxkLnBhcmVudHMuc3BsaWNlKGlkeCwgMSk7XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdH1cclxuIFx0XHR9XHJcbiBcdFxyXG4gXHRcdC8vIHJlbW92ZSBvdXRkYXRlZCBkZXBlbmRlbmN5IGZyb20gbW9kdWxlIGNoaWxkcmVuXHJcbiBcdFx0dmFyIGRlcGVuZGVuY3k7XHJcbiBcdFx0dmFyIG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzO1xyXG4gXHRcdGZvcihtb2R1bGVJZCBpbiBvdXRkYXRlZERlcGVuZGVuY2llcykge1xyXG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG91dGRhdGVkRGVwZW5kZW5jaWVzLCBtb2R1bGVJZCkpIHtcclxuIFx0XHRcdFx0bW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF07XHJcbiBcdFx0XHRcdGlmKG1vZHVsZSkge1xyXG4gXHRcdFx0XHRcdG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzID0gb3V0ZGF0ZWREZXBlbmRlbmNpZXNbbW9kdWxlSWRdO1xyXG4gXHRcdFx0XHRcdGZvcihqID0gMDsgaiA8IG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzLmxlbmd0aDsgaisrKSB7XHJcbiBcdFx0XHRcdFx0XHRkZXBlbmRlbmN5ID0gbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXNbal07XHJcbiBcdFx0XHRcdFx0XHRpZHggPSBtb2R1bGUuY2hpbGRyZW4uaW5kZXhPZihkZXBlbmRlbmN5KTtcclxuIFx0XHRcdFx0XHRcdGlmKGlkeCA+PSAwKSBtb2R1bGUuY2hpbGRyZW4uc3BsaWNlKGlkeCwgMSk7XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHR9XHJcbiBcdFx0XHR9XHJcbiBcdFx0fVxyXG4gXHRcclxuIFx0XHQvLyBOb3QgaW4gXCJhcHBseVwiIHBoYXNlXHJcbiBcdFx0aG90U2V0U3RhdHVzKFwiYXBwbHlcIik7XHJcbiBcdFxyXG4gXHRcdGhvdEN1cnJlbnRIYXNoID0gaG90VXBkYXRlTmV3SGFzaDtcclxuIFx0XHJcbiBcdFx0Ly8gaW5zZXJ0IG5ldyBjb2RlXHJcbiBcdFx0Zm9yKG1vZHVsZUlkIGluIGFwcGxpZWRVcGRhdGUpIHtcclxuIFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcHBsaWVkVXBkYXRlLCBtb2R1bGVJZCkpIHtcclxuIFx0XHRcdFx0bW9kdWxlc1ttb2R1bGVJZF0gPSBhcHBsaWVkVXBkYXRlW21vZHVsZUlkXTtcclxuIFx0XHRcdH1cclxuIFx0XHR9XHJcbiBcdFxyXG4gXHRcdC8vIGNhbGwgYWNjZXB0IGhhbmRsZXJzXHJcbiBcdFx0dmFyIGVycm9yID0gbnVsbDtcclxuIFx0XHRmb3IobW9kdWxlSWQgaW4gb3V0ZGF0ZWREZXBlbmRlbmNpZXMpIHtcclxuIFx0XHRcdGlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvdXRkYXRlZERlcGVuZGVuY2llcywgbW9kdWxlSWQpKSB7XHJcbiBcdFx0XHRcdG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdO1xyXG4gXHRcdFx0XHRpZihtb2R1bGUpIHtcclxuIFx0XHRcdFx0XHRtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llcyA9IG91dGRhdGVkRGVwZW5kZW5jaWVzW21vZHVsZUlkXTtcclxuIFx0XHRcdFx0XHR2YXIgY2FsbGJhY2tzID0gW107XHJcbiBcdFx0XHRcdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlT3V0ZGF0ZWREZXBlbmRlbmNpZXMubGVuZ3RoOyBpKyspIHtcclxuIFx0XHRcdFx0XHRcdGRlcGVuZGVuY3kgPSBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tpXTtcclxuIFx0XHRcdFx0XHRcdGNiID0gbW9kdWxlLmhvdC5fYWNjZXB0ZWREZXBlbmRlbmNpZXNbZGVwZW5kZW5jeV07XHJcbiBcdFx0XHRcdFx0XHRpZihjYikge1xyXG4gXHRcdFx0XHRcdFx0XHRpZihjYWxsYmFja3MuaW5kZXhPZihjYikgPj0gMCkgY29udGludWU7XHJcbiBcdFx0XHRcdFx0XHRcdGNhbGxiYWNrcy5wdXNoKGNiKTtcclxuIFx0XHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdFx0Zm9yKGkgPSAwOyBpIDwgY2FsbGJhY2tzLmxlbmd0aDsgaSsrKSB7XHJcbiBcdFx0XHRcdFx0XHRjYiA9IGNhbGxiYWNrc1tpXTtcclxuIFx0XHRcdFx0XHRcdHRyeSB7XHJcbiBcdFx0XHRcdFx0XHRcdGNiKG1vZHVsZU91dGRhdGVkRGVwZW5kZW5jaWVzKTtcclxuIFx0XHRcdFx0XHRcdH0gY2F0Y2goZXJyKSB7XHJcbiBcdFx0XHRcdFx0XHRcdGlmKG9wdGlvbnMub25FcnJvcmVkKSB7XHJcbiBcdFx0XHRcdFx0XHRcdFx0b3B0aW9ucy5vbkVycm9yZWQoe1xyXG4gXHRcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJhY2NlcHQtZXJyb3JlZFwiLFxyXG4gXHRcdFx0XHRcdFx0XHRcdFx0bW9kdWxlSWQ6IG1vZHVsZUlkLFxyXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZGVwZW5kZW5jeUlkOiBtb2R1bGVPdXRkYXRlZERlcGVuZGVuY2llc1tpXSxcclxuIFx0XHRcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcclxuIFx0XHRcdFx0XHRcdFx0XHR9KTtcclxuIFx0XHRcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHRcdFx0XHRpZighb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XHJcbiBcdFx0XHRcdFx0XHRcdFx0aWYoIWVycm9yKVxyXG4gXHRcdFx0XHRcdFx0XHRcdFx0ZXJyb3IgPSBlcnI7XHJcbiBcdFx0XHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHR9XHJcbiBcdFx0XHRcdH1cclxuIFx0XHRcdH1cclxuIFx0XHR9XHJcbiBcdFxyXG4gXHRcdC8vIExvYWQgc2VsZiBhY2NlcHRlZCBtb2R1bGVzXHJcbiBcdFx0Zm9yKGkgPSAwOyBpIDwgb3V0ZGF0ZWRTZWxmQWNjZXB0ZWRNb2R1bGVzLmxlbmd0aDsgaSsrKSB7XHJcbiBcdFx0XHR2YXIgaXRlbSA9IG91dGRhdGVkU2VsZkFjY2VwdGVkTW9kdWxlc1tpXTtcclxuIFx0XHRcdG1vZHVsZUlkID0gaXRlbS5tb2R1bGU7XHJcbiBcdFx0XHRob3RDdXJyZW50UGFyZW50cyA9IFttb2R1bGVJZF07XHJcbiBcdFx0XHR0cnkge1xyXG4gXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKTtcclxuIFx0XHRcdH0gY2F0Y2goZXJyKSB7XHJcbiBcdFx0XHRcdGlmKHR5cGVvZiBpdGVtLmVycm9ySGFuZGxlciA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiBcdFx0XHRcdFx0dHJ5IHtcclxuIFx0XHRcdFx0XHRcdGl0ZW0uZXJyb3JIYW5kbGVyKGVycik7XHJcbiBcdFx0XHRcdFx0fSBjYXRjaChlcnIyKSB7XHJcbiBcdFx0XHRcdFx0XHRpZihvcHRpb25zLm9uRXJyb3JlZCkge1xyXG4gXHRcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XHJcbiBcdFx0XHRcdFx0XHRcdFx0dHlwZTogXCJzZWxmLWFjY2VwdC1lcnJvci1oYW5kbGVyLWVycm9yZWRcIixcclxuIFx0XHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXHJcbiBcdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGVycjIsXHJcbiBcdFx0XHRcdFx0XHRcdFx0b3JnaW5hbEVycm9yOiBlcnIsIC8vIFRPRE8gcmVtb3ZlIGluIHdlYnBhY2sgNFxyXG4gXHRcdFx0XHRcdFx0XHRcdG9yaWdpbmFsRXJyb3I6IGVyclxyXG4gXHRcdFx0XHRcdFx0XHR9KTtcclxuIFx0XHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHRcdGlmKCFvcHRpb25zLmlnbm9yZUVycm9yZWQpIHtcclxuIFx0XHRcdFx0XHRcdFx0aWYoIWVycm9yKVxyXG4gXHRcdFx0XHRcdFx0XHRcdGVycm9yID0gZXJyMjtcclxuIFx0XHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHRcdGlmKCFlcnJvcilcclxuIFx0XHRcdFx0XHRcdFx0ZXJyb3IgPSBlcnI7XHJcbiBcdFx0XHRcdFx0fVxyXG4gXHRcdFx0XHR9IGVsc2Uge1xyXG4gXHRcdFx0XHRcdGlmKG9wdGlvbnMub25FcnJvcmVkKSB7XHJcbiBcdFx0XHRcdFx0XHRvcHRpb25zLm9uRXJyb3JlZCh7XHJcbiBcdFx0XHRcdFx0XHRcdHR5cGU6IFwic2VsZi1hY2NlcHQtZXJyb3JlZFwiLFxyXG4gXHRcdFx0XHRcdFx0XHRtb2R1bGVJZDogbW9kdWxlSWQsXHJcbiBcdFx0XHRcdFx0XHRcdGVycm9yOiBlcnJcclxuIFx0XHRcdFx0XHRcdH0pO1xyXG4gXHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0XHRpZighb3B0aW9ucy5pZ25vcmVFcnJvcmVkKSB7XHJcbiBcdFx0XHRcdFx0XHRpZighZXJyb3IpXHJcbiBcdFx0XHRcdFx0XHRcdGVycm9yID0gZXJyO1xyXG4gXHRcdFx0XHRcdH1cclxuIFx0XHRcdFx0fVxyXG4gXHRcdFx0fVxyXG4gXHRcdH1cclxuIFx0XHJcbiBcdFx0Ly8gaGFuZGxlIGVycm9ycyBpbiBhY2NlcHQgaGFuZGxlcnMgYW5kIHNlbGYgYWNjZXB0ZWQgbW9kdWxlIGxvYWRcclxuIFx0XHRpZihlcnJvcikge1xyXG4gXHRcdFx0aG90U2V0U3RhdHVzKFwiZmFpbFwiKTtcclxuIFx0XHRcdHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XHJcbiBcdFx0fVxyXG4gXHRcclxuIFx0XHRob3RTZXRTdGF0dXMoXCJpZGxlXCIpO1xyXG4gXHRcdHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlKSB7XHJcbiBcdFx0XHRyZXNvbHZlKG91dGRhdGVkTW9kdWxlcyk7XHJcbiBcdFx0fSk7XHJcbiBcdH1cclxuXG4gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fSxcbiBcdFx0XHRob3Q6IGhvdENyZWF0ZU1vZHVsZShtb2R1bGVJZCksXG4gXHRcdFx0cGFyZW50czogKGhvdEN1cnJlbnRQYXJlbnRzVGVtcCA9IGhvdEN1cnJlbnRQYXJlbnRzLCBob3RDdXJyZW50UGFyZW50cyA9IFtdLCBob3RDdXJyZW50UGFyZW50c1RlbXApLFxuIFx0XHRcdGNoaWxkcmVuOiBbXVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBob3RDcmVhdGVSZXF1aXJlKG1vZHVsZUlkKSk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIF9fd2VicGFja19oYXNoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18uaCA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gaG90Q3VycmVudEhhc2g7IH07XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIGhvdENyZWF0ZVJlcXVpcmUoMCkoX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gd2VicGFjay9ib290c3RyYXAgMDE0MzhhMTE2ZWVkYjdmMTRjODgiLCJpbXBvcnQge0NvbnN0ZWxsYXRpb24sIFRleHRDb25zdGVsbGF0aW9ufSBmcm9tICcuL2NvbnN0ZWxsYXRpb24nXHJcbnZhciBjYW52YXMsIGdpdGh1YiwgcmVzdW1lQ29uc3RlbGxhdGlvbiwgbmFtZUNvbnN0ZWxsYXRpb247XHJcbnZhciBub2lzZTtcclxuXHJcbnZhciBza2V0Y2ggPSAocCkgPT4ge1xyXG4gICAgcC5wcmVsb2FkID0gKCkgPT4ge1xyXG5cclxuICAgIH1cclxuICAgIGxldCBUID0gKHcscyxhLGMpID0+IHtcclxuICAgICAgICBwLmZpbGwoYSxhLGEsYSlcclxuXHJcbiAgICAgICAgYy5maWxsUmVjdCgodypub2lzZSklcC53aWR0aCwgdyVwLmhlaWdodCwgcywgcyApXHJcbiAgICB9XHJcblxyXG4gICAgcC5tb3VzZUNsaWNrZWQgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ2NsaWdnaWR5IGNsaWcgeGQnKVxyXG4gICAgfVxyXG4gICBcclxuICAgIHAuc2V0dXAgPSAoKSA9PiB7XHJcbiAgICAgICAgY2FudmFzID0gcC5jcmVhdGVDYW52YXMocC53aW5kb3dXaWR0aCwgcC53aW5kb3dIZWlnaHQpLmNhbnZhcztcclxuICAgICAgICBsZXQgZ2l0aHViUG9pbnRzID0gW1s2OSwgMjE5XSwgWzY5LCAxODZdLCBbMzksIDE4N10sIFs0LCAxNDJdLCBbMjQsIDE0OF0sIFs2OSwgMTk2XSwgWzc2LCAxNTJdLCBbMjMsIDEyMF0sIFsyOCwgNDldLCBbMjksIDhdLCBbNjYsIDIzXSwgWzEzMywgMjddLCBbMTY4LCA4XSwgWzE3NSwgNDVdLCBbMTkwLCA5Ml0sIFsxNzcsIDE0MF0sIFsxMjcsIDE1MV0sIFsxNDEsIDIxOF1dOyBcclxuICAgICAgICBsZXQgcmVzdW1lUG9pbnRzID0gW1sxNTMsIDEwMV0sIFs2NywgMTgzXSwgWzM0LCAxNzRdLCBbMjEsIDE0MF0sIFsxMzgsIDE5XSwgWzE1NiwgMTZdLCBbMTg3LCAyNl0sIFsxMjcsIDEwM10sIFs3OCwgMTQ4XSwgWzU4LCAxMzldLCBbNjEsIDEyNV0sIFsxMTcsIDY3XV1cclxuICAgICAgICBnaXRodWIgPSBuZXcgQ29uc3RlbGxhdGlvbihnaXRodWJQb2ludHMpXHJcbiAgICAgICAgZ2l0aHViLnNjYWxlID0gMS8yO1xyXG4gICAgICAgIHJlc3VtZUNvbnN0ZWxsYXRpb24gPSBuZXcgQ29uc3RlbGxhdGlvbihyZXN1bWVQb2ludHMpXHJcbiAgICAgICAgcmVzdW1lQ29uc3RlbGxhdGlvbi5zY2FsZSA9IDEvMlxyXG5cclxuICAgICAgICBub2lzZSA9IHAucmFuZG9tKDEsIDUpXHJcbiAgICAgICAgY29uc29sZS5sb2coY2FudmFzKVxyXG4gICAgICAgIHNrZXRjaC5mb28gPSBcImZ1Z1wiXHJcbiAgICAgICAgY29uc29sZS5sb2coc2tldGNoLmZvbylcclxuICAgICAgICBza2V0Y2guY2VudGVyUG9pbnQgPSBbcC53aW5kb3dXaWR0aCAvIDIsIHAud2luZG93SGVpZ2h0IC8gMl1cclxuICAgIH1cclxuICAgXHJcbiAgICBwLndpbmRvd1Jlc2l6ZWQgPSAoKSA9PiB7XHJcbiAgICAgICAgbm9pc2UgPSBwLnJhbmRvbSgxLCA1KVxyXG4gICAgICAgIHNrZXRjaC5jZW50ZXJQb2ludCA9IFtwLndpbmRvd1dpZHRoIC8gMiwgcC53aW5kb3dIZWlnaHQgLyAyXVxyXG4gICAgICAgIHAucmVzaXplQ2FudmFzKHAud2luZG93V2lkdGgsIHAud2luZG93SGVpZ2h0KTtcclxuICAgIH1cclxuICAgXHJcbiAgICBcclxuICAgIC8vVE9ETzogVmFyeSBzdGFyIGNvdW50IGJhc2UgZG9uIHNjcmVlbiBzaXplXHJcbiAgICBwLmRyYXcgPSAoKSA9PiB7XHJcbiAgICAgICAgbGV0IGNwID0gc2tldGNoLmNlbnRlclBvaW50O1xyXG4gICAgICAgIGxldCBjID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcclxuICAgICAgICBsZXQgdCA9IHAubWlsbGlzKCkgLyAxMDAwICogKDEvNCk7XHJcbiAgICAgICAgcC5iYWNrZ3JvdW5kKCdibGFjaycpXHJcbiAgICAgICAgZm9yKGxldCBpID0gMDsgaSA8IDhlMzsgaSsrKXtcclxuICAgICAgICAgICAgbGV0IHIgPSBpICoqIDQuMztcclxuICAgICAgICAgICAgbGV0IGEgPSByICUgNCAqIE1hdGguc2luKGkgKyB0KSAqKiAyO1xyXG4gICAgICAgICAgICBsZXQgcyA9IDUxICogYTtcclxuICAgICAgICAgICAgaWYoaSA8IDkpe1xyXG4gICAgICAgICAgICAgICAgcyA9IDQwICogYTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBUKCgodC8xMCkgKiogKGkgPCA5ID8gMiA6IDApKSAqIDMwMCArIGkqKjQuMywgYSwgcywgYylcclxuICAgICAgICB9XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogU2V0IHVwIEZvbnQgRGV0YWlsc1xyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHAuZmlsbCgyNTUsIDI1NSwgMjU1LCAxNjApXHJcblxyXG4gICAgICAgIHAudGV4dFNpemUoNTApXHJcbiAgICAgICAgcC50ZXh0Rm9udCgnRXhvIDInKVxyXG5cclxuICAgICAgICBsZXQgbmFtZVdpZHRoID0gcC50ZXh0V2lkdGgoJ0JsYWlzZSBNYXJjaGV0dGknKVxyXG4gICAgICAgIHAudGV4dCgnQmxhaXNlIE1hcmNoZXR0aScsIGNwWzBdIC0gbmFtZVdpZHRoLzIsIGNwWzFdIC0gNzApXHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIHJlc3VtZUNvbnN0ZWxsYXRpb24uc2V0TG9jYXRpb24oY3BbMF0gLSAxODAsIGNwWzFdKVxyXG4gICAgICAgIHJlc3VtZUNvbnN0ZWxsYXRpb24uZHJhdyhwKVxyXG4gICAgICAgIGdpdGh1Yi5zZXRMb2NhdGlvbigoY3BbMF0gKyAxODApIC0gKGdpdGh1Yi5nZXRXaWR0aCgpKSwgY3BbMV0pXHJcbiAgICAgICAgZ2l0aHViLmRyYXcocCk7XHJcbiAgICB9XHJcbn1cclxuIFxyXG52YXIgcCA9IG5ldyBwNShza2V0Y2gpO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9za2V0Y2guanMiLCIvL0B0cy1jaGVja1xyXG5jbGFzcyBDb25zdGVsbGF0aW9ue1xyXG4gICAgY29uc3RydWN0b3IocG9pbnRzKXtcclxuICAgICAgICB0aGlzLnAgPSBwb2ludHM7XHJcbiAgICAgICAgdGhpcy5zY2FsZSA9IDE7XHJcbiAgICAgICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImNhbnZhc1wiKVswXS5nZXRDb250ZXh0KFwiMmRcIik7XHJcbiAgICAgICAgLy8gQ3JlYXRlIHRoZSBib3VuZGluZyBzcXVhcmUgZm9yIHRoaXMgY29uc3RlbGxhdGlvbiwgdXNlZCBmb3IgZGV0ZWN0aW5nIG1vdXNlIG92ZXJcclxuICAgICAgICBsZXQgYnAgPSBbcG9pbnRzWzBdWzBdLCBwb2ludHNbMF1bMF0sIHBvaW50c1swXVsxXSwgcG9pbnRzWzBdWzFdXVxyXG4gICAgICAgIHBvaW50cy5mb3JFYWNoKChwb2ludCkgPT4ge1xyXG4gICAgICAgICAgICAvLyBNaW5pbXVtIFhcclxuICAgICAgICAgICAgaWYocG9pbnRbMF0gPCBicFswXSl7XHJcbiAgICAgICAgICAgICAgICBicFswXSA9IHBvaW50WzBdXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gTWF4aW11bSBYXHJcbiAgICAgICAgICAgIGlmKHBvaW50WzBdID4gYnBbMV0pe1xyXG4gICAgICAgICAgICAgICAgYnBbMV0gPSBwb2ludFswXVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIE1pbmltdW0gWVxyXG4gICAgICAgICAgICBpZihwb2ludFsxXSA8IGJwWzJdKXtcclxuICAgICAgICAgICAgICAgIGJwWzJdID0gcG9pbnRbMV1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBNYXhpbXVtIFlcclxuICAgICAgICAgICAgaWYocG9pbnRbMV0gPiBicFszXSl7XHJcbiAgICAgICAgICAgICAgICBicFszXSA9IHBvaW50WzFdXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuYm91bmRpbmdQb2ludHMgPSBicDtcclxuICAgICAgICB0aGlzLnggPSAwO1xyXG4gICAgICAgIHRoaXMueSA9IDA7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0V2lkdGgoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc2NhbGUgKiAodGhpcy5ib3VuZGluZ1BvaW50c1sxXSAtIHRoaXMuYm91bmRpbmdQb2ludHNbMF0pXHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SGVpZ2h0KCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNjYWxlICogKHRoaXMuYm91bmRpbmdQb2ludHNbM10gLSB0aGlzLmJvdW5kaW5nUG9pbnRzWzJdKVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogR2V0cyB0aGUgNCBwb2ludHMgdXNlZCB0byBjb25zdHJ1Y3QgdGhlIGJvdW5kaW5nIHJlY3RhbmdsZSBmb3IgdGhpcyBjb25zdGVsbGF0aW9uXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyW119IFttaW5YLCBtYXhYLCBtaW5ZLCBtYXhZXVxyXG4gICAgICogXHJcbiAgICAgKi9cclxuXHJcbiAgICBnZXRCb3VuZGluZ1BvaW50cygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5ib3VuZGluZ1BvaW50cy5tYXAoKHBvaW50LCBpKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICggaSA8IDIpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChwb2ludCAqIHRoaXMuc2NhbGUpICsgdGhpcy54XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gKHBvaW50ICogdGhpcy5zY2FsZSkgKyB0aGlzLnlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIENoZWNrIHRvIHNlZSBpZiBhIHBvaW50IGxpZXMgaW4gdGhlIGJvdW5kaW5nIHJlY3RhbmdsZSBvZiB0aGlzIGNvbnN0ZWxsYXRpb25cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB4IHggY29vcmRpbmF0ZSBvZiBwb2ludCB0byBjaGVja1xyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHkgeSBjb29yZGluYXRlIG9mIHBvaW50IHRvIGNoZWNrXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn0gVHJ1ZSBpZiB0aGUgcG9pbnQgaXMgaW5zaWRlIHRoZSBib3VuZGluZyByZWN0YW5nbGUsIGZhbHNlIG90aGVyd2lzZSBcclxuICAgICAqL1xyXG4gICAgdGVzdFBvaW50KHgseSl7XHJcbiAgICAgICAgbGV0IGJwID0gdGhpcy5nZXRCb3VuZGluZ1BvaW50cygpO1xyXG4gICAgICAgIGlmKHggPj0gYnBbMF0gJiYgeCA8PSBicFsxXSAmJiB5ID49IGJwWzJdICYmIHkgPD0gYnBbM10pe1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogU2V0IHRoZSB4LHkgY29vcmRpbmF0ZXMgd2hlcmUgdGhlIGNvbnN0ZWxsYXRpb24gd2lsbCBiZSBkcmF3blxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHggWCBjb29yZGluYXRlXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0geSBZIGNvb3JkaW5hdGVcclxuICAgICAqIFxyXG4gICAgICovXHJcblxyXG4gICAgc2V0TG9jYXRpb24oeCx5KXtcclxuICAgICAgICB0aGlzLnggPSB4O1xyXG4gICAgICAgIHRoaXMueSA9IHk7XHJcbiAgICB9XHJcblxyXG4gICAgZHJhdyhwKXtcclxuICAgICAgICBsZXQgYyA9IHRoaXMuY2FudmFzO1xyXG4gICAgICAgIGxldCBzcGVlZCA9IDEvNDtcclxuICAgICAgICBcclxuICAgICAgICBsZXQgdCA9IHAubWlsbGlzKCkgLyAxMDAwICogc3BlZWRcclxuICAgICAgICBsZXQgcG9pbnRzID0gdGhpcy5wXHJcbiAgICAgICAgbGV0IHggPSB0aGlzLnhcclxuICAgICAgICBsZXQgeSA9IHRoaXMueVxyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG5cclxuICAgICAgICBwb2ludHMuZm9yRWFjaCgocG9pbnQsIGkpID0+IHtcclxuICAgICAgICAgICAgLy8gQ29vbCBtYXRoXHJcbiAgICAgICAgICAgIGxldCByID0gaSAqKiA0LjM7XHJcbiAgICAgICAgICAgIGxldCBhID0gciAlIDUgKiBNYXRoLnNpbigoaSAqIHAuUEkgLyAxMCkgKyB0KSAqKiAyXHJcbiAgICAgICAgICAgIGxldCBzID0gNTEgKiBhO1xyXG4gICAgICAgICAgICBhID0gciAlIDMgKiBNYXRoLnNpbih0KSAqKiAyICsgMVxyXG4gICAgICAgICAgICBzID0gNTEgKiBhO1xyXG4gICAgICAgICAgICBwLnN0cm9rZShzLCBzLCBzLCBzKTtcclxuICAgICAgICAgICAgcC5maWxsKHMscyxzLHMpXHJcblxyXG4gICAgICAgICAgICAvLyBUcmFuc2Zvcm0gdGhlIGxvY2F0aW9uIG9mIHRoZSBwb2ludHNcclxuICAgICAgICAgICAgbGV0IHAxID0gcG9pbnRbMF0qdGhpcy5zY2FsZSArIHg7XHJcbiAgICAgICAgICAgIGxldCBwMiA9IHBvaW50WzFdKnRoaXMuc2NhbGUgKyB5O1xyXG4gICAgICAgICAgICAvL0RyYXcgdGhlIGxpbmVzIG9mIHRoZSBjb25zdGVsbGF0aW9uXHJcbiAgICAgICAgICAgIGlmKGkgPCBwb2ludHMubGVuZ3RoIC0gMSl7XHJcbiAgICAgICAgICAgICAgICBwLnN0cm9rZVdlaWdodCgyKTtcclxuICAgICAgICAgICAgICAgIHAubGluZShwMSwgcDIsIHBvaW50c1tpKzFdWzBdKnRoaXMuc2NhbGUgKyB4LCBwb2ludHNbaSsxXVsxXSp0aGlzLnNjYWxlICsgeSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBEcmF3IHRoZSBzdGFycyBvZiB0aGUgY29uc3RlbGxhdGlvblxyXG4gICAgICAgICAgICBjLmZpbGxSZWN0KHAxLCBwMiwgNSwgNSk7XHJcblxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn1cclxuXHJcbmNsYXNzIFRleHRDb25zdGVsbGF0aW9uIGV4dGVuZHMgQ29uc3RlbGxhdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3Rvcih0ZXh0LCBmb250KXtcclxuICAgICAgICBsZXQgcG9pbnRzID0gZm9udC50ZXh0VG9Qb2ludHModGV4dCwgMCwgMCwgNTApXHJcbiAgICAgICAgc3VwZXIocG9pbnRzKVxyXG4gICAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IHtDb25zdGVsbGF0aW9uLCBUZXh0Q29uc3RlbGxhdGlvbn1cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvY29uc3RlbGxhdGlvbi5qcyJdLCJzb3VyY2VSb290IjoiIn0="
    ],
    "docstrings": [
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "*********************************************************************",
        "***",
        "* Set up Font Details",
        "* Gets the 4 points used to construct the bounding rectangle for this constellation\n         * @returns {number[]} [minX, maxX, minY, maxY]\n         *",
        "* Check to see if a point lies in the bounding rectangle of this constellation\n         * @param {number} x x coordinate of point to check\n         * @param {number} y y coordinate of point to check\n         * @returns {boolean} True if the point is inside the bounding rectangle, false otherwise",
        "* Set the x,y coordinates where the constellation will be drawn\n         * @param {number} x X coordinate\n         * @param {number} y Y coordinate\n         *",
        "***"
    ],
    "functions": [
        "hotDisposeChunk",
        "hotDownloadUpdateChunk",
        "hotDownloadManifest",
        "hotCreateRequire",
        "finishChunkLoading",
        "hotCreateModule",
        "hotSetStatus",
        "toModuleId",
        "hotCheck",
        "hotAddUpdateChunk",
        "hotEnsureUpdateChunk",
        "hotUpdateDownloaded",
        "hotApply",
        "getAffectedStuff",
        "addAllToSet",
        "__webpack_require__",
        "defineProperties",
        "_possibleConstructorReturn",
        "_inherits",
        "_classCallCheck",
        "Constellation",
        "TextConstellation"
    ],
    "classes": []
}