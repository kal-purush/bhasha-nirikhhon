{
    "identifiers": [
        "print_function",
        "os",
        "sys",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "sys",
        "path",
        "append",
        "os",
        "path",
        "join",
        "curr_path",
        "mxnet",
        "mx",
        "random",
        "argparse",
        "cv2",
        "time",
        "traceback",
        "multiprocessing",
        "ImportError",
        "root",
        "recursive",
        "exts",
        "recursive",
        "path",
        "dirs",
        "files",
        "os",
        "walk",
        "root",
        "followlinks",
        "dirs",
        "sort",
        "files",
        "sort",
        "fname",
        "files",
        "os",
        "path",
        "join",
        "path",
        "fname",
        "os",
        "path",
        "splitext",
        "fname",
        "lower",
        "os",
        "path",
        "isfile",
        "fpath",
        "suffix",
        "exts",
        "path",
        "cat",
        "len",
        "cat",
        "i",
        "os",
        "path",
        "relpath",
        "fpath",
        "root",
        "cat",
        "path",
        "i",
        "k",
        "v",
        "sorted",
        "cat",
        "items",
        "key",
        "x",
        "x",
        "os",
        "path",
        "relpath",
        "k",
        "root",
        "v",
        "fname",
        "sorted",
        "os",
        "listdir",
        "root",
        "os",
        "path",
        "join",
        "root",
        "fname",
        "os",
        "path",
        "splitext",
        "fname",
        "lower",
        "os",
        "path",
        "isfile",
        "fpath",
        "suffix",
        "exts",
        "i",
        "os",
        "path",
        "relpath",
        "fpath",
        "root",
        "i",
        "path_out",
        "image_list",
        "open",
        "path_out",
        "fout",
        "i",
        "item",
        "image_list",
        "item",
        "j",
        "item",
        "line",
        "j",
        "line",
        "item",
        "fout",
        "write",
        "line",
        "args",
        "list_image",
        "args",
        "root",
        "args",
        "recursive",
        "args",
        "exts",
        "image_list",
        "args",
        "shuffle",
        "random",
        "seed",
        "random",
        "shuffle",
        "image_list",
        "len",
        "image_list",
        "N",
        "args",
        "chunks",
        "args",
        "chunks",
        "i",
        "args",
        "chunks",
        "image_list",
        "i",
        "chunk_size",
        "i",
        "chunk_size",
        "args",
        "chunks",
        "i",
        "chunk_size",
        "args",
        "train_ratio",
        "chunk_size",
        "args",
        "test_ratio",
        "args",
        "train_ratio",
        "write_list",
        "args",
        "prefix",
        "str_chunk",
        "chunk",
        "args",
        "test_ratio",
        "write_list",
        "args",
        "prefix",
        "str_chunk",
        "chunk",
        "sep_test",
        "args",
        "train_ratio",
        "args",
        "test_ratio",
        "write_list",
        "args",
        "prefix",
        "str_chunk",
        "chunk",
        "sep_test",
        "sep",
        "write_list",
        "args",
        "prefix",
        "str_chunk",
        "chunk",
        "sep_test",
        "sep_test",
        "sep",
        "path_in",
        "open",
        "path_in",
        "fin",
        "fin",
        "readline",
        "line",
        "i",
        "strip",
        "i",
        "line",
        "strip",
        "split",
        "len",
        "line",
        "line_len",
        "line_len",
        "line",
        "line",
        "line",
        "i",
        "i",
        "line",
        "e",
        "line",
        "e",
        "item",
        "args",
        "i",
        "item",
        "q_out",
        "os",
        "path",
        "join",
        "args",
        "root",
        "item",
        "len",
        "item",
        "args",
        "pack_label",
        "mx",
        "recordio",
        "IRHeader",
        "item",
        "item",
        "mx",
        "recordio",
        "IRHeader",
        "item",
        "item",
        "args",
        "pass_through",
        "open",
        "fullpath",
        "fin",
        "fin",
        "read",
        "mx",
        "recordio",
        "pack",
        "header",
        "img",
        "q_out",
        "put",
        "i",
        "s",
        "item",
        "e",
        "traceback",
        "print_exc",
        "item",
        "e",
        "q_out",
        "put",
        "i",
        "item",
        "cv2",
        "imread",
        "fullpath",
        "args",
        "color",
        "traceback",
        "print_exc",
        "fullpath",
        "q_out",
        "put",
        "i",
        "item",
        "img",
        "fullpath",
        "q_out",
        "put",
        "i",
        "item",
        "args",
        "center_crop",
        "img",
        "shape",
        "img",
        "shape",
        "img",
        "shape",
        "img",
        "shape",
        "img",
        "margin",
        "margin",
        "img",
        "shape",
        "img",
        "shape",
        "img",
        "shape",
        "img",
        "margin",
        "margin",
        "img",
        "shape",
        "args",
        "resize",
        "img",
        "shape",
        "img",
        "shape",
        "args",
        "resize",
        "img",
        "shape",
        "args",
        "resize",
        "img",
        "shape",
        "img",
        "shape",
        "args",
        "resize",
        "img",
        "shape",
        "args",
        "resize",
        "cv2",
        "resize",
        "img",
        "newsize",
        "mx",
        "recordio",
        "pack_img",
        "header",
        "img",
        "quality",
        "args",
        "quality",
        "img_fmt",
        "args",
        "encoding",
        "q_out",
        "put",
        "i",
        "s",
        "item",
        "e",
        "traceback",
        "print_exc",
        "fullpath",
        "e",
        "q_out",
        "put",
        "i",
        "item",
        "args",
        "q_in",
        "q_out",
        "q_in",
        "get",
        "deq",
        "deq",
        "image_encode",
        "args",
        "i",
        "item",
        "q_out",
        "q_out",
        "fname",
        "working_dir",
        "time",
        "time",
        "os",
        "path",
        "basename",
        "fname",
        "os",
        "path",
        "splitext",
        "fname",
        "os",
        "path",
        "splitext",
        "fname",
        "mx",
        "recordio",
        "MXIndexedRecordIO",
        "os",
        "path",
        "join",
        "working_dir",
        "fname_idx",
        "os",
        "path",
        "join",
        "working_dir",
        "fname_rec",
        "more",
        "q_out",
        "get",
        "deq",
        "deq",
        "s",
        "item",
        "count",
        "buf",
        "buf",
        "count",
        "buf",
        "count",
        "s",
        "record",
        "write_idx",
        "item",
        "s",
        "count",
        "time",
        "time",
        "cur_time",
        "pre_time",
        "count",
        "cur_time",
        "count",
        "argparse",
        "ArgumentParser",
        "formatter_class",
        "argparse",
        "ArgumentDefaultsHelpFormatter",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument_group",
        "cgroup",
        "add_argument",
        "action",
        "help",
        "cgroup",
        "add_argument",
        "nargs",
        "help",
        "cgroup",
        "add_argument",
        "help",
        "cgroup",
        "add_argument",
        "help",
        "cgroup",
        "add_argument",
        "help",
        "cgroup",
        "add_argument",
        "action",
        "help",
        "cgroup",
        "add_argument",
        "dest",
        "action",
        "help",
        "parser",
        "add_argument_group",
        "rgroup",
        "add_argument",
        "action",
        "help",
        "rgroup",
        "add_argument",
        "help",
        "rgroup",
        "add_argument",
        "action",
        "help",
        "rgroup",
        "add_argument",
        "help",
        "rgroup",
        "add_argument",
        "help",
        "rgroup",
        "add_argument",
        "choices",
        "help",
        "rgroup",
        "add_argument",
        "choices",
        "help",
        "rgroup",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "os",
        "path",
        "abspath",
        "args",
        "prefix",
        "os",
        "path",
        "abspath",
        "args",
        "root",
        "args",
        "parse_args",
        "args",
        "make_list",
        "args",
        "os",
        "path",
        "isdir",
        "args",
        "prefix",
        "args",
        "prefix",
        "os",
        "path",
        "dirname",
        "args",
        "prefix",
        "os",
        "path",
        "join",
        "working_dir",
        "fname",
        "fname",
        "os",
        "listdir",
        "working_dir",
        "os",
        "path",
        "isfile",
        "os",
        "path",
        "join",
        "working_dir",
        "fname",
        "fname",
        "files",
        "fname",
        "startswith",
        "args",
        "prefix",
        "fname",
        "endswith",
        "fname",
        "working_dir",
        "count",
        "read_list",
        "fname",
        "args",
        "num_thread",
        "multiprocessing",
        "multiprocessing",
        "i",
        "args",
        "num_thread",
        "multiprocessing",
        "multiprocessing",
        "Process",
        "target",
        "read_worker",
        "args",
        "args",
        "q_in",
        "i",
        "q_out",
        "i",
        "args",
        "num_thread",
        "p",
        "read_process",
        "p",
        "start",
        "multiprocessing",
        "Process",
        "target",
        "write_worker",
        "args",
        "q_out",
        "fname",
        "working_dir",
        "write_process",
        "start",
        "i",
        "item",
        "image_list",
        "q_in",
        "i",
        "len",
        "q_in",
        "put",
        "i",
        "item",
        "q",
        "q_in",
        "q",
        "put",
        "p",
        "read_process",
        "p",
        "join",
        "q_out",
        "put",
        "write_process",
        "join",
        "queue",
        "ImportError",
        "queue",
        "queue",
        "os",
        "path",
        "basename",
        "fname",
        "os",
        "path",
        "splitext",
        "fname",
        "os",
        "path",
        "splitext",
        "fname",
        "mx",
        "recordio",
        "MXIndexedRecordIO",
        "os",
        "path",
        "join",
        "working_dir",
        "fname_idx",
        "os",
        "path",
        "join",
        "working_dir",
        "fname_rec",
        "time",
        "time",
        "i",
        "item",
        "image_list",
        "image_encode",
        "args",
        "i",
        "item",
        "q_out",
        "q_out",
        "empty",
        "q_out",
        "get",
        "record",
        "write_idx",
        "item",
        "s",
        "cnt",
        "time",
        "time",
        "cur_time",
        "pre_time",
        "cnt",
        "cur_time",
        "cnt",
        "count",
        "args",
        "prefix"
    ],
    "literals": [
        "\"../python\"",
        "'w'",
        "'%d\\t'",
        "'%f\\t'",
        "'%s\\n'",
        "'_%d'",
        "''",
        "'.lst'",
        "'_test.lst'",
        "'_val.lst'",
        "'_train.lst'",
        "'\\t'",
        "'lst should at least has three parts, but only has %s parts for %s'",
        "'Parsing lst met error for %s, detail: %s'",
        "'rb'",
        "'pack_img error:'",
        "'imread error trying to load file: %s '",
        "'imread read blank (None) image for file: %s'",
        "'pack_img error on file: %s'",
        "'.rec'",
        "'.idx'",
        "'w'",
        "'time:'",
        "' count:'",
        "'Create an image list or \\\n        make a record database by reading from an image list'",
        "'prefix'",
        "'prefix of input/output lst and rec files.'",
        "'root'",
        "'path to folder containing images.'",
        "'Options for creating image lists'",
        "'--list'",
        "'store_true'",
        "'If this is set im2rec will create image list(s) by traversing root folder\\\n        and output to <prefix>.lst.\\\n        Otherwise im2rec will read <prefix>.lst and create a database at <prefix>.rec'",
        "'--exts'",
        "'+'",
        "'.jpeg'",
        "'.jpg'",
        "'.png'",
        "'list of acceptable image extensions.'",
        "'--chunks'",
        "'number of chunks.'",
        "'--train-ratio'",
        "'Ratio of images to use for training.'",
        "'--test-ratio'",
        "'Ratio of images to use for testing.'",
        "'--recursive'",
        "'store_true'",
        "'If true recursively walk through subdirs and assign an unique label\\\n        to images in each folder. Otherwise only include images in the root folder\\\n        and give them label 0.'",
        "'--no-shuffle'",
        "'shuffle'",
        "'store_false'",
        "'If this is passed, \\\n        im2rec will not randomize the image order in <prefix>.lst'",
        "'Options for creating database'",
        "'--pass-through'",
        "'store_true'",
        "'whether to skip transformation and save image as is'",
        "'--resize'",
        "'resize the shorter edge of image to the newsize, original images will\\\n        be packed by default.'",
        "'--center-crop'",
        "'store_true'",
        "'specify whether to crop the center image to make it rectangular.'",
        "'--quality'",
        "'JPEG quality for encoding, 1-100; or PNG compression for encoding, 1-9'",
        "'--num-thread'",
        "'number of thread to use for encoding. order of images will be different\\\n        from the input list if >1. the input list will be modified to match the\\\n        resulting order.'",
        "'--color'",
        "'specify the color mode of the loaded image.\\\n        1: Loads a color image. Any transparency of image will be neglected. It is the default flag.\\\n        0: Loads image in grayscale mode.\\\n        -1:Loads image as such including alpha channel.'",
        "'--encoding'",
        "'.jpg'",
        "'.jpg'",
        "'.png'",
        "'specify the encoding of the images.'",
        "'--pack-label'",
        "'store_true'",
        "'Whether to also pack multi dimensional label in the record file'",
        "'__main__'",
        "'.lst'",
        "'Creating .rec file from'",
        "'in'",
        "'multiprocessing not available, fall back to single threaded encoding'",
        "'.rec'",
        "'.idx'",
        "'w'",
        "'time:'",
        "' count:'",
        "'Did not find and list file with prefix %s'"
    ],
    "variables": [
        "curr_path",
        "multiprocessing",
        "i",
        "cat",
        "fpath",
        "suffix",
        "cat",
        "path",
        "fpath",
        "suffix",
        "line",
        "image_list",
        "image_list",
        "N",
        "chunk_size",
        "chunk",
        "str_chunk",
        "str_chunk",
        "sep",
        "sep_test",
        "line",
        "line",
        "line_len",
        "item",
        "fullpath",
        "header",
        "header",
        "img",
        "s",
        "img",
        "margin",
        "img",
        "margin",
        "img",
        "newsize",
        "newsize",
        "img",
        "s",
        "deq",
        "i",
        "item",
        "pre_time",
        "count",
        "fname",
        "fname_rec",
        "fname_idx",
        "record",
        "buf",
        "more",
        "deq",
        "i",
        "s",
        "item",
        "buf",
        "i",
        "more",
        "s",
        "item",
        "cur_time",
        "pre_time",
        "parser",
        "cgroup",
        "rgroup",
        "args",
        "args",
        "prefix",
        "args",
        "root",
        "args",
        "working_dir",
        "working_dir",
        "files",
        "count",
        "image_list",
        "q_in",
        "q_out",
        "read_process",
        "write_process",
        "q_out",
        "fname",
        "fname_rec",
        "fname_idx",
        "record",
        "cnt",
        "pre_time",
        "_",
        "s",
        "_",
        "cur_time",
        "pre_time"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "Licensed to the Apache Software Foundation (ASF) under one",
        "or more contributor license agreements.  See the NOTICE file",
        "distributed with this work for additional information",
        "regarding copyright ownership.  The ASF licenses this file",
        "to you under the Apache License, Version 2.0 (the",
        "\"License\"); you may not use this file except in compliance",
        "with the License.  You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing,",
        "software distributed under the License is distributed on an",
        "\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
        "KIND, either express or implied.  See the License for the",
        "specific language governing permissions and limitations",
        "under the License.",
        "basically if you pass a list as argument",
        "if the prefix is a directory",
        "-- write_record -- #"
    ],
    "docstrings": [],
    "functions": [
        "list_image",
        "write_list",
        "make_list",
        "read_list",
        "image_encode",
        "read_worker",
        "write_worker",
        "parse_args"
    ],
    "classes": []
}