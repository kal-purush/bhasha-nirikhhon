{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "restify",
        "server",
        "process",
        "process",
        "server",
        "server",
        "builder",
        "process",
        "process",
        "server",
        "connector",
        "builder",
        "connector",
        "session",
        "session",
        "session",
        "builder",
        "process",
        "bot",
        "recognizer",
        "bot",
        "session",
        "args",
        "args",
        "element",
        "entities",
        "element",
        "builder",
        "args",
        "builder",
        "args",
        "i",
        "i",
        "entities",
        "targetURL",
        "i",
        "weRetailCategories",
        "entities",
        "i",
        "weRetailCategories",
        "entities",
        "i",
        "targetURL",
        "weRetailCategories",
        "entities",
        "i",
        "entities",
        "i",
        "femaleEntity",
        "weRetailCategories",
        "entities",
        "i",
        "targetURL",
        "entities",
        "i",
        "targetURL",
        "entities",
        "i",
        "targetURL",
        "maleEntity",
        "targetURL",
        "femaleEntity",
        "targetURL",
        "targetURL",
        "targetURL",
        "targetURL",
        "entities",
        "targetURL",
        "entities",
        "maleEntity",
        "femaleEntity",
        "twitterAPI",
        "result",
        "resultObj",
        "result",
        "session",
        "resultObj",
        "code",
        "errorMessage",
        "resultObj",
        "code",
        "errorMessage",
        "session",
        "resultObj",
        "theTwitterAPI",
        "callback",
        "errorCallback",
        "inputString",
        "inputString"
    ],
    "literals": [
        "'dotenv-extended'",
        "'botbuilder'",
        "'restify'",
        "'./store'",
        "'./spell-service'",
        "'./ssml'",
        "'./twitterAPI'",
        "'google-trends-api'",
        "'%s listening to %s'",
        "'/api/messages'",
        "'Sorry, I did not understand \\'%s\\'. Type \\'help\\' if you need assistance.'",
        "'Search'",
        "'male'",
        "'female'",
        "'biking'",
        "'hiking'",
        "'running'",
        "'surfing'",
        "'water-sports'",
        "'winter-sports'",
        "'coats'",
        "'footwear'",
        "'gloves'",
        "'pants'",
        "'scarfs'",
        "'shirts'",
        "'shorts'",
        "'coats'",
        "'gloves'",
        "'pants'",
        "'shirts'",
        "'shorts'",
        "'equipment'",
        "'water-sports'",
        "'equipment'",
        "'products/'",
        "'/'",
        "'products/women/'",
        "'products/men/'",
        "'men'",
        "'women'",
        "'products'",
        "'/content/we-retail/us/en/'",
        "'.html'",
        "\"name\"",
        "\"SSGN8\"",
        "\"name\"",
        "\"iPhone X\"",
        "\"45MrbuMLUpQASjzj28LbXUPE3\"",
        "\"su3vBrcMXrpFX1uYCgARANOXPDBTe2CmyN5S04h5TQg6TArnAy\"",
        "\"77930247-2valpma0KuYMWkCqKuSnxbs1APi7VCkLX9sF8Fftp\"",
        "\"7sJC0gQGaZWhluJJ8azwJL0vcPkBioQUtCYlMSTs73hT3\"",
        "' '",
        "\"https://api.twitter.com/1.1/trends/place.json\"",
        "\"GET\"",
        "'Search'",
        "' $1'"
    ],
    "variables": [
        "builder",
        "restify",
        "Store",
        "spellService",
        "ssml",
        "twitterAPI",
        "googleTrends",
        "server",
        "connector",
        "bot",
        "recognizer",
        "entities",
        "maleEntity",
        "femaleEntity",
        "targetURL",
        "weRetailCategories_deleteThis",
        "weRetailCategories",
        "resultObj",
        "theTwitterAPI",
        "callback",
        "errorCallback"
    ],
    "comments": [
        "This loads the environment variables from the .env file",
        "var Curl = require( 'node-libcurl' ).Curl;",
        "Setup Restify Server",
        "Create connector and listen for messages",
        "You can provide your own model by specifing the 'LUIS_MODEL_URL' environment variable",
        "This Url can be obtained by uploading or creating your model from the LUIS portal: https://www.luis.ai/",
        "if belong to equipment, go to the target directly",
        "for (i=0;i<entities.length && !targetURL;i++){",
        "if (weRetailCategories.eq.includes(entities[i])){",
        "targetURL = 'equipment/'+entities[i];",
        "}",
        "}",
        "if not belonging to the equipment",
        "============== test google-trends-api =================================================",
        "googleTrends.interestOverTime({keyword: 'Women\\'s march'})",
        ".then(function(results){",
        "resultObj.googleTrends = results;",
        "session.endDialog(JSON.stringify(resultObj));",
        "})",
        ".catch(function(err){",
        "session.endDialog(JSON.stringify(resultObj));",
        "});",
        "============== end test google-trends-api =================================================",
        "var sidesEntity = builder.EntityRecognizer.findEntity(args.intent.entities, 'Sides');",
        "if (sidesEntity){",
        "game.sides = sidesEntity.entity;",
        "}",
        "var countEntity = builder.EntityRecognizer.findEntity(args.intent.entities, 'Count');",
        "if (countEntity){",
        "game.count = countEntity.entity;",
        "}",
        "if (sidesEntity) {",
        "// city entity detected, continue to next step",
        "next({ response: sidesEntity.entity });",
        "} else {",
        "// no entities detected, ask user for a destination",
        "builder.Prompts.text(session, 'Please enter the number of sides of the dice to be rolled.', {",
        "speak: speak(session, 'choose_number_of_sides')",
        "});",
        "}",
        "session.endDialog(JSON.stringify(resultObj));",
        "============== test node-libcurl =================================================",
        "var curl = new Curl();",
        "curl.setOpt( 'URL',",
        "'https://trends.google.com/trends/api/widgetdata/relatedsearches?hl=en-US&tz=-420&req=%7B%22restriction%22:%7B%22geo%22:%7B%22country%22:%22TH%22%7D,%22time%22:%222017-10-07+2017-11-07%22%7D,%22keywordType%22:%22ENTITY%22,%22metric%22:%5B%22TOP%22,%22RISING%22%5D,%22trendinessSettings%22:%7B%22compareTime%22:%222017-09-05+2017-10-06%22%7D,%22requestOptions%22:%7B%22property%22:%22%22,%22backend%22:%22IZG%22,%22category%22:18%7D,%22language%22:%22en%22%7D&token=APP6_UEAAAAAWgLTub2MMho5DhfuQXUolcJiv9Egg6J2'",
        ");",
        "curl.setOpt( 'FOLLOWLOCATION', true );",
        "curl.setOpt( 'SSL_VERIFYPEER', false );",
        "curl.on( 'end', function( statusCode, body, headers ) {",
        "resultObj.testCurl = statusCode + '---' + body.length + '---' + this.getInfo( 'TOTAL_TIME' );",
        "trendData = JSON.parse(body.substr(6));",
        "resultObj.trendData = trendData;",
        "session.endDialog(JSON.stringify(resultObj));",
        "this.close();",
        "});",
        "curl.on( 'error', function(err, curlErrCode){",
        "console.error( 'Err: ', err );",
        "console.error( 'Code: ', curlErrCode );",
        "resultObj.testCurl = err + '---' + curlErrCode;",
        "session.endDialog(JSON.stringify(resultObj));",
        "this.close();",
        "} );",
        "curl.perform();",
        "============== end test node-libcurl ================================================="
    ],
    "docstrings": [],
    "functions": [
        "camelCaseToNormal"
    ],
    "classes": []
}