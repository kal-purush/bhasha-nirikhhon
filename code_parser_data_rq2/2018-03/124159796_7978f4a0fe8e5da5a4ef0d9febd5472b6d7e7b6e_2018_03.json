{
    "identifiers": [
        "wave",
        "pyaudio",
        "datetime",
        "datetime",
        "json",
        "base64",
        "uuid",
        "os",
        "wave",
        "pycurl",
        "io",
        "urllib2",
        "getpass",
        "email",
        "sys",
        "imaplib",
        "smtplib",
        "email",
        "mime",
        "text",
        "MIMEText",
        "psycopg2",
        "time",
        "getpass",
        "pyaudio",
        "paInt16",
        "to_dir",
        "to_dir",
        "pyaudio",
        "PyAudio",
        "pa",
        "open",
        "format",
        "FORMAT",
        "channels",
        "CHANNELS",
        "rate",
        "RATE",
        "input",
        "frames_per_buffer",
        "CHUNK",
        "i",
        "RATE",
        "CHUNK",
        "RECORD_SECONDS",
        "stream",
        "read",
        "CHUNK",
        "save_buffer",
        "append",
        "audio_data",
        "stream",
        "stop_stream",
        "stream",
        "close",
        "pa",
        "terminate",
        "datetime",
        "now",
        "strftime",
        "to_dir",
        "endswith",
        "to_dir",
        "file_name",
        "to_dir",
        "file_name",
        "wave",
        "open",
        "file_path",
        "wf",
        "setnchannels",
        "CHANNELS",
        "wf",
        "setsampwidth",
        "pa",
        "get_sample_size",
        "FORMAT",
        "wf",
        "setframerate",
        "RATE",
        "wf",
        "writeframes",
        "join",
        "save_buffer",
        "wf",
        "close",
        "file_path",
        "uuid",
        "UUID",
        "uuid",
        "getnode",
        "hex",
        "urllib2",
        "Request",
        "url",
        "urllib2",
        "urlopen",
        "req",
        "resp",
        "read",
        "decode",
        "json",
        "loads",
        "data",
        "bda_access_token",
        "json_data",
        "bda_access_token",
        "wav_path",
        "wav_path",
        "len",
        "wav_path",
        "wave",
        "open",
        "wav_path",
        "wav_file",
        "getnframes",
        "wav_file",
        "readframes",
        "nframes",
        "audio_data",
        "nframes",
        "buf",
        "json",
        "loads",
        "buf",
        "decode",
        "resp_json",
        "ret_text",
        "ret",
        "record_wave",
        "len",
        "bda_access_token",
        "get_access_token",
        "len",
        "bda_access_token",
        "get_wav_data",
        "wav_path",
        "get_mac_address",
        "bda_access_token",
        "f_len",
        "pycurl",
        "Curl",
        "c",
        "setopt",
        "pycurl",
        "URL",
        "url",
        "c",
        "setopt",
        "c",
        "HTTPHEADER",
        "http_header",
        "c",
        "setopt",
        "c",
        "POST",
        "c",
        "setopt",
        "c",
        "CONNECTTIMEOUT",
        "c",
        "setopt",
        "c",
        "TIMEOUT",
        "c",
        "setopt",
        "c",
        "WRITEFUNCTION",
        "dump_res",
        "c",
        "setopt",
        "c",
        "POSTFIELDS",
        "data",
        "c",
        "setopt",
        "c",
        "POSTFIELDSIZE",
        "f_len",
        "c",
        "perform",
        "os",
        "remove",
        "wav_path",
        "ret_text",
        "ret_text",
        "mail_user",
        "mail_pass",
        "sub",
        "mail_user",
        "MIMEText",
        "mail_msg",
        "sub",
        "me",
        "smtplib",
        "SMTP",
        "mail_host",
        "mail_port",
        "server",
        "ehlo",
        "server",
        "starttls",
        "server",
        "login",
        "mail_user",
        "mail_pass",
        "server",
        "sendmail",
        "me",
        "msg",
        "as_string",
        "server",
        "quit",
        "e",
        "e",
        "raw_input",
        "getpass",
        "getpass",
        "send_mail",
        "mail_user",
        "mail_pass",
        "wav_to_text",
        "main"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\"",
        "\"./\"",
        "\"* recording\"",
        "\"* done recording\"",
        "\"Please wait...\"",
        "\"%Y-%m-%d_%H_%M_%S\"",
        "\".wav\"",
        "'/'",
        "\"/\"",
        "'wb'",
        "b''",
        "\"https://openapi.baidu.com/oauth/2.0/token?grant_type=client_credentials&client_id=4Ukt2VqoazpazykizHuY68Zj&client_secret=58c77974a48bde2fbf4c3380af0f7c42\"",
        "'utf-8'",
        "'access_token'",
        "'rb'",
        "'utf-8'",
        "'result'",
        "'http://vop.baidu.com/server_api?dev_pid=1736&cuid='",
        "'&token='",
        "'Content-Type: audio/pcm; rate=8000'",
        "'Content-Length: %d'",
        "\"Is the following sentence correct? If it is accurate, please waiting for reply, if not, please try again or using e-mail.\"",
        "\"smtp.gmail.com\"",
        "\"587\"",
        "\" \"",
        "'plain'",
        "'utf-8'",
        "'Subject'",
        "'From'",
        "'To'",
        "\"smart.meeting.agent@gmail.com\"",
        "\"smart.meeting.agent@gmail.com\"",
        "'mail: '",
        "'password: '",
        "'__main__'"
    ],
    "variables": [
        "CHUNK",
        "FORMAT",
        "RATE",
        "CHANNELS",
        "RECORD_SECONDS",
        "bda_access_token",
        "bda_expires_in",
        "ret_text",
        "to_dir",
        "pa",
        "stream",
        "save_buffer",
        "audio_data",
        "file_name",
        "file_path",
        "file_path",
        "wf",
        "url",
        "req",
        "resp",
        "data",
        "json_data",
        "bda_access_token",
        "wav_file",
        "nframes",
        "audio_data",
        "resp_json",
        "ret",
        "ret_text",
        "wav_path",
        "data",
        "f_len",
        "url",
        "http_header",
        "c",
        "mail_host",
        "mail_port",
        "mail_msg",
        "me",
        "msg",
        "msg",
        "msg",
        "msg",
        "server",
        "mail_user",
        "mail_pass"
    ],
    "comments": [
        "-*- coding: UTF-8 -*-",
        "实时录音模块的准备",
        "缓存块的大小",
        "取样值的量化格式",
        "取样频率，百度语音识别库指定8000",
        "声道数，百度语音识别库指定1",
        "时间段，秒",
        "调百度API的准备",
        "-----------------------------------------------------录音部分-----------------------",
        "参数为空（存储在当前目录），返回值为音频文件存储路径",
        "format 取样值的量化格式",
        "channels 声道数",
        "rate 取样频率，一秒内对声音信号的采集次数",
        "input 输入流标志",
        "frames_per_buffer 底层缓存块的大小",
        "",
        "stop",
        "wav path",
        "save file",
        "注意join 前的类型，如果是str类型会出错",
        "-----------------------------------------------------调百度API部分------------------",
        "获取百度token(自己的key和secret在url里面)",
        "读取wav文件内容",
        "使用\"rb\"(二进制模式)打开文件",
        "解析返回值",
        "print(buf)",
        "转换函数，没有参数，实时录音，返回音频内容文本",
        "实时录音",
        "必须是list，不能是dict",
        "url",
        "header",
        "Method",
        "连接超时时间",
        "请求超时时间",
        "返回信息回调",
        "post 的信息",
        "post的信息长度",
        "删除录音文件",
        "mail_user= \"smart.meeting.agent@gmail.com\"",
        "mail_pass=  \"Monday123\"",
        "邮件其他相关量"
    ],
    "docstrings": [],
    "functions": [
        "record_wave",
        "get_mac_address",
        "get_access_token",
        "get_wav_data",
        "dump_res",
        "wav_to_text",
        "send_mail",
        "main"
    ],
    "classes": []
}