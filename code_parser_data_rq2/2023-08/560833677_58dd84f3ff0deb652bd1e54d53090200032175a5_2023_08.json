{
    "identifiers": [
        "hashlib",
        "torch",
        "torch",
        "Tensor",
        "torch",
        "nn",
        "nn",
        "typing",
        "Type",
        "Any",
        "Callable",
        "Union",
        "Optional",
        "numpy",
        "np",
        "in_planes",
        "out_planes",
        "stride",
        "groups",
        "dilation",
        "nn",
        "Conv2d",
        "nn",
        "Conv2d",
        "in_planes",
        "out_planes",
        "kernel_size",
        "stride",
        "stride",
        "padding",
        "dilation",
        "groups",
        "groups",
        "bias",
        "dilation",
        "dilation",
        "in_planes",
        "out_planes",
        "stride",
        "nn",
        "Conv2d",
        "nn",
        "Conv2d",
        "in_planes",
        "out_planes",
        "kernel_size",
        "stride",
        "stride",
        "bias",
        "nn",
        "Module",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "Optional",
        "nn",
        "Module",
        "groups",
        "base_width",
        "dilation",
        "norm_layer",
        "Optional",
        "Callable",
        "nn",
        "Module",
        "BasicBlock",
        "norm_layer",
        "nn",
        "BatchNorm2d",
        "groups",
        "base_width",
        "ValueError",
        "dilation",
        "NotImplementedError",
        "conv3x3",
        "inplanes",
        "planes",
        "stride",
        "norm_layer",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "conv3x3",
        "planes",
        "planes",
        "norm_layer",
        "planes",
        "downsample",
        "stride",
        "x",
        "Tensor",
        "Tensor",
        "x",
        "conv1",
        "x",
        "bn1",
        "relu",
        "conv2",
        "bn2",
        "downsample",
        "downsample",
        "x",
        "identity",
        "relu",
        "nn",
        "Module",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "Optional",
        "nn",
        "Module",
        "groups",
        "base_width",
        "dilation",
        "norm_layer",
        "Optional",
        "Callable",
        "nn",
        "Module",
        "slim",
        "Bottleneck",
        "norm_layer",
        "nn",
        "BatchNorm2d",
        "planes",
        "base_width",
        "groups",
        "conv1x1",
        "inplanes",
        "width",
        "norm_layer",
        "width",
        "conv3x3",
        "width",
        "width",
        "stride",
        "groups",
        "dilation",
        "norm_layer",
        "width",
        "slim",
        "NORMAL_BLOCK",
        "slim",
        "SLIMING_BLOCK",
        "downsample",
        "conv1x1",
        "width",
        "planes",
        "expansion",
        "norm_layer",
        "planes",
        "expansion",
        "conv1x1",
        "width",
        "inplanes",
        "norm_layer",
        "inplanes",
        "nn",
        "ReLU",
        "inplace",
        "downsample",
        "stride",
        "x",
        "Tensor",
        "Tensor",
        "x",
        "conv1",
        "x",
        "bn1",
        "relu",
        "conv2",
        "bn2",
        "relu",
        "conv3",
        "bn3",
        "downsample",
        "downsample",
        "x",
        "identity",
        "relu",
        "nn",
        "Module",
        "block",
        "Type",
        "Union",
        "BasicBlock",
        "Bottleneck",
        "layers",
        "num_classes",
        "zero_init_residual",
        "groups",
        "width_per_group",
        "replace_stride_with_dilation",
        "Optional",
        "norm_layer",
        "Optional",
        "Callable",
        "nn",
        "Module",
        "shrink_coefficient",
        "load_up_to",
        "ResNet",
        "norm_layer",
        "nn",
        "BatchNorm2d",
        "norm_layer",
        "replace_stride_with_dilation",
        "len",
        "replace_stride_with_dilation",
        "ValueError",
        "format",
        "replace_stride_with_dilation",
        "groups",
        "width_per_group",
        "nn",
        "Conv2d",
        "inplanes",
        "kernel_size",
        "stride",
        "padding",
        "bias",
        "norm_layer",
        "inplanes",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "MaxPool2d",
        "kernel_size",
        "stride",
        "padding",
        "load_up_to",
        "np",
        "cumsum",
        "layers",
        "idx",
        "new_out_planes_lst",
        "extend",
        "out_planes_lst",
        "idx",
        "layers",
        "idx",
        "np",
        "asarray",
        "new_out_planes_lst",
        "new_out_planes_lst",
        "load_up_to",
        "load_up_to",
        "new_out_planes_lst",
        "load_up_to",
        "shrink_coefficient",
        "np",
        "ones",
        "astype",
        "load_up_to",
        "NORMAL_BLOCK",
        "idx",
        "val",
        "planes_idxs",
        "load_up_to",
        "val",
        "SLIMING_BLOCK",
        "idx",
        "shrink_coefficient",
        "new_out_planes_lst",
        "_make_layer",
        "block",
        "new_out_planes_lst",
        "planes_idxs",
        "layers",
        "slim",
        "slim_factors",
        "_make_layer",
        "block",
        "new_out_planes_lst",
        "planes_idxs",
        "planes_idxs",
        "layers",
        "stride",
        "dilate",
        "replace_stride_with_dilation",
        "slim",
        "slim_factors",
        "_make_layer",
        "block",
        "new_out_planes_lst",
        "planes_idxs",
        "planes_idxs",
        "layers",
        "stride",
        "dilate",
        "replace_stride_with_dilation",
        "slim",
        "slim_factors",
        "_make_layer",
        "block",
        "new_out_planes_lst",
        "planes_idxs",
        "planes_idxs",
        "layers",
        "stride",
        "dilate",
        "replace_stride_with_dilation",
        "slim",
        "slim_factors",
        "nn",
        "AdaptiveAvgPool2d",
        "slim_factors",
        "SLIMING_BLOCK",
        "nn",
        "Linear",
        "new_out_planes_lst",
        "block",
        "expansion",
        "num_classes",
        "nn",
        "Linear",
        "new_out_planes_lst",
        "block",
        "expansion",
        "num_classes",
        "m",
        "modules",
        "isinstance",
        "m",
        "nn",
        "Conv2d",
        "nn",
        "init",
        "kaiming_normal_",
        "m",
        "weight",
        "mode",
        "nonlinearity",
        "isinstance",
        "m",
        "nn",
        "BatchNorm2d",
        "nn",
        "GroupNorm",
        "nn",
        "init",
        "constant_",
        "m",
        "weight",
        "nn",
        "init",
        "constant_",
        "m",
        "bias",
        "zero_init_residual",
        "m",
        "modules",
        "isinstance",
        "m",
        "Bottleneck",
        "nn",
        "init",
        "constant_",
        "m",
        "bn3",
        "weight",
        "isinstance",
        "m",
        "BasicBlock",
        "nn",
        "init",
        "constant_",
        "m",
        "bn2",
        "weight",
        "block",
        "Type",
        "Union",
        "BasicBlock",
        "Bottleneck",
        "planes",
        "blocks",
        "stride",
        "dilate",
        "slim",
        "nn",
        "Sequential",
        "_norm_layer",
        "dilation",
        "dilate",
        "dilation",
        "stride",
        "stride",
        "inplanes",
        "planes",
        "block",
        "expansion",
        "nn",
        "Sequential",
        "conv1x1",
        "inplanes",
        "planes",
        "block",
        "expansion",
        "stride",
        "norm_layer",
        "planes",
        "block",
        "expansion",
        "layers",
        "append",
        "block",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "groups",
        "base_width",
        "previous_dilation",
        "norm_layer",
        "planes",
        "block",
        "expansion",
        "idx",
        "blocks",
        "layers",
        "append",
        "block",
        "inplanes",
        "planes",
        "idx",
        "groups",
        "groups",
        "base_width",
        "base_width",
        "dilation",
        "dilation",
        "norm_layer",
        "norm_layer",
        "slim",
        "slim",
        "nn",
        "Sequential",
        "layers",
        "x",
        "Tensor",
        "Tensor",
        "conv1",
        "x",
        "bn1",
        "x",
        "relu",
        "x",
        "maxpool",
        "x",
        "layer1",
        "x",
        "layer2",
        "x",
        "layer3",
        "x",
        "layer4",
        "x",
        "avgpool",
        "x",
        "torch",
        "flatten",
        "x",
        "fc",
        "x",
        "x",
        "x",
        "Tensor",
        "Tensor",
        "_forward_impl",
        "x",
        "arch",
        "block",
        "Type",
        "Union",
        "BasicBlock",
        "Bottleneck",
        "layers",
        "pretrained",
        "progress",
        "verbose",
        "kwargs",
        "Any",
        "ResNet",
        "ResNet",
        "block",
        "layers",
        "kwargs",
        "pretrained",
        "torch",
        "hub",
        "load_state_dict_from_url",
        "model_urls",
        "arch",
        "progress",
        "progress",
        "name",
        "param",
        "model",
        "named_parameters",
        "param",
        "shape",
        "state_dict",
        "name",
        "shape",
        "model",
        "state_dict",
        "name",
        "data",
        "copy_",
        "state_dict",
        "name",
        "verbose",
        "name",
        "name",
        "nn",
        "init",
        "constant_",
        "param",
        "name",
        "name",
        "len",
        "param",
        "shape",
        "nn",
        "init",
        "ones_",
        "param",
        "name",
        "verbose",
        "name",
        "param",
        "shape",
        "nn",
        "init",
        "kaiming_normal_",
        "param",
        "name",
        "param",
        "model",
        "named_parameters",
        "model",
        "pretrained",
        "progress",
        "kwargs",
        "Any",
        "ResNet",
        "_resnet",
        "Bottleneck",
        "pretrained",
        "progress",
        "kwargs",
        "resnet50",
        "shrink_coefficient",
        "load_up_to",
        "num_classes",
        "pretrained"
    ],
    "literals": [
        "'ResNet'",
        "'resnet18'",
        "'resnet34'",
        "'resnet50'",
        "'resnet101'",
        "'resnet152'",
        "'resnext50_32x4d'",
        "'resnext101_32x8d'",
        "'wide_resnet50_2'",
        "'wide_resnet101_2'",
        "'resnet18'",
        "'https://download.pytorch.org/models/resnet18-f37072fd.pth'",
        "'resnet34'",
        "'https://download.pytorch.org/models/resnet34-b627a593.pth'",
        "'resnet50'",
        "'https://download.pytorch.org/models/resnet50-0676ba61.pth'",
        "'resnet101'",
        "'https://download.pytorch.org/models/resnet101-63fe2227.pth'",
        "'resnet152'",
        "'https://download.pytorch.org/models/resnet152-394f9c45.pth'",
        "'resnext50_32x4d'",
        "'https://download.pytorch.org/models/resnext50_32x4d-7cdf4587.pth'",
        "'resnext101_32x8d'",
        "'https://download.pytorch.org/models/resnext101_32x8d-8ba56ff5.pth'",
        "'wide_resnet50_2'",
        "'https://download.pytorch.org/models/wide_resnet50_2-95faca4d.pth'",
        "'wide_resnet101_2'",
        "'https://download.pytorch.org/models/wide_resnet101_2-32ee1156.pth'",
        "'BasicBlock only supports groups=1 and base_width=64'",
        "\"Dilation > 1 not supported in BasicBlock\"",
        "\"replace_stride_with_dilation should be None \"",
        "\"or a 3-element tuple, got {}\"",
        "\"before slim:\"",
        "\"after slim:\"",
        "'fan_out'",
        "'relu'",
        "\"load\"",
        "'bias'",
        "'bn'",
        "'downsample'",
        "'weight'",
        "\"kaiming\"",
        "r\"\"\"ResNet-50 model from\n    `\"Deep Residual Learning for Image Recognition\" <https://arxiv.org/pdf/1512.03385.pdf>`_.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n        progress (bool): If True, displays a progress bar of the download to stderr\n    \"\"\"",
        "'resnet50'",
        "\"__main__\""
    ],
    "variables": [
        "__all__",
        "model_urls",
        "NORMAL_BLOCK",
        "SLIMING_BLOCK",
        "expansion",
        "norm_layer",
        "conv1",
        "bn1",
        "relu",
        "conv2",
        "bn2",
        "downsample",
        "stride",
        "identity",
        "identity",
        "expansion",
        "norm_layer",
        "width",
        "conv1",
        "bn1",
        "conv2",
        "bn2",
        "conv3",
        "bn3",
        "conv3",
        "bn3",
        "relu",
        "downsample",
        "stride",
        "identity",
        "identity",
        "norm_layer",
        "_norm_layer",
        "inplanes",
        "dilation",
        "replace_stride_with_dilation",
        "groups",
        "base_width",
        "conv1",
        "bn1",
        "relu",
        "maxpool",
        "out_planes_lst",
        "load_up_to",
        "planes_idxs",
        "new_out_planes_lst",
        "new_out_planes_lst",
        "new_out_planes_lst",
        "slim_factors",
        "slim_factors",
        "slim_factors",
        "idx",
        "slim_factors",
        "layer1",
        "layer2",
        "layer3",
        "layer4",
        "avgpool",
        "fc",
        "fc",
        "norm_layer",
        "downsample",
        "previous_dilation",
        "stride",
        "downsample",
        "layers",
        "inplanes",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "model",
        "state_dict",
        "param",
        "requires_grad",
        "net"
    ],
    "comments": [
        "from .._internally_replaced_utils import load_state_dict_from_url",
        "Both self.conv1 and self.downsample layers downsample the input when stride != 1",
        "Bottleneck in torchvision places the stride for downsampling at 3x3 convolution(self.conv2)",
        "while original implementation places the stride at the first 1x1 convolution(self.conv1)",
        "according to \"Deep residual learning for image recognition\"https://arxiv.org/abs/1512.03385.",
        "This variant is also known as ResNet V1.5 and improves accuracy according to",
        "https://ngc.nvidia.com/catalog/model-scripts/nvidia:resnet_50_v1_5_for_pytorch.",
        "Both self.conv2 and self.downsample layers downsample the input when stride != 1",
        "1 as default ResNet, can be changed to 2, 4, 8, etc.",
        "4 as default ResNet, can be changed to 1, 2, 3 only",
        "[3, 4, 6, 3]",
        "each element in the tuple indicates if we should replace",
        "the 2x2 stride with a dilated convolution instead",
        "slim down the channels",
        "handle the bottleneck hetegentity (bottleneck1 differ from all other bottlenecks)",
        "print(slim_factors, load_up_to)",
        "print(new_out_planes_lst[-1], block.expansion, shrink_coefficient)",
        "print(new_out_planes_lst)",
        "asdf",
        "Zero-initialize the last BN in each residual branch,",
        "so that the residual branch starts with zeros, and each residual block behaves like an identity.",
        "This improves the model by 0.2~0.3% according to https://arxiv.org/abs/1706.02677",
        "type: ignore[arg-type]",
        "type: ignore[arg-type]",
        "make sure the skip connect has channel matched",
        "tmp_inplanes = planes[idx] * block.expansion",
        "See note [TorchScript super()]",
        "model.load_state_dict(state_dict, strict=False)",
        "weights = {k: v for k, v in weights.items() if k in lm_dict}",
        "for k in model.state_dict().keys():",
        "param.data = nn.parameter.Parameter(torch.ones_like(param))",
        "param = nn.parameter.Parameter(state_dict[name])",
        "if param.shape == state_dict[name].shape:",
        "print((param == state_dict[name]).all(), name)",
        "block1 = 3, block2 = 7, block3 = 13, block4 = 16"
    ],
    "docstrings": [
        "\"\"\"3x3 convolution with padding\"\"\"",
        "\"\"\"1x1 convolution\"\"\""
    ],
    "functions": [
        "conv3x3",
        "conv1x1",
        "forward",
        "forward",
        "_make_layer",
        "_forward_impl",
        "forward",
        "_resnet",
        "resnet50"
    ],
    "classes": [
        "BasicBlock",
        "Bottleneck",
        "ResNet"
    ]
}