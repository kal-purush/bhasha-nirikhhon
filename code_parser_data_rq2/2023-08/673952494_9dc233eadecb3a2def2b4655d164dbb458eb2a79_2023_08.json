{
    "identifiers": [
        "axios",
        "AxiosResponse",
        "WriteStream",
        "createWriteStream",
        "exists",
        "Agent",
        "existsSync",
        "unlinkSync",
        "prompts",
        "Agent",
        "existsSync",
        "fileName",
        "unlinkSync",
        "fileName",
        "createWriteStream",
        "fileName",
        "getTrackInfo",
        "trackId",
        "axios",
        "apiUrl",
        "trackId",
        "httpAgent",
        "response",
        "response",
        "responseData",
        "trackId",
        "trackId",
        "track",
        "track",
        "track",
        "track",
        "track",
        "track",
        "trackId",
        "output",
        "error",
        "error",
        "trackId",
        "trackId",
        "writeResults",
        "results",
        "results",
        "a",
        "b",
        "a",
        "b",
        "fileStream",
        "fileStream",
        "data",
        "err",
        "err",
        "err",
        "startBrute",
        "prompts",
        "idPrompt",
        "i",
        "finishId",
        "chunkPosition",
        "i",
        "i",
        "chunkPosition",
        "chunkPosition",
        "results",
        "i",
        "chunkPosition",
        "i",
        "results",
        "getTrackInfo",
        "i",
        "results",
        "writeResults",
        "results",
        "results",
        "writeResults",
        "results",
        "fileStream",
        "prompts",
        "sessionId",
        "response",
        "startBrute",
        "sessionId"
    ],
    "literals": [
        "\"axios\"",
        "\"fs\"",
        "\"http\"",
        "\"fs\"",
        "\"fs\"",
        "\"prompts\"",
        "string",
        "string",
        "\"OK_Results.txt\"",
        "\"a\"",
        "string",
        "\"\"",
        "${apiUrl}${trackId}",
        "\"error\"",
        "\"Ошибка при получении информации о треке.\"",
        "Ошибка: ${trackId}\\n",
        "string",
        "${track.id}|${track.playRestricted ?? \"\"}|${\n        track.releaseId ?? \"none\"\n      }|${track.ensemble} - ${track.name} | Длительность = ${\n        track.duration\n      } с.\\n",
        "\"\"",
        "\"none\"",
        "Фатальная ошибка: ${trackId}\\n",
        "\"utf-8\"",
        "\"number\"",
        "\"id\"",
        "\"Введите ID невышедшего трека (обязательно его позиция должна быть первой в чанке)\\nДля того, чтобы найти трек с первой позицией, запустите скрипт с любым айди Вашего трека, затем дождитесь, пока программа начнёт выдавать ошибки.\\nПоследний трек, перед которым начинаются ошибки, находится на позиции 256, возьмите его айди и прибавьте к нему 3841.\\nЗатем перезапустите программу и вставьте это значение\\n\\nАйди: \"",
        "\"Новый чанк!\"",
        "\"\\nНовый чанк.\\n\"",
        "Получаем информацию о треке с айди ${i} :3",
        "\"text\"",
        "\"sid\"",
        "'Введите токен Вашей сессии в ОК.\\nПолучить его можно по ссылке: https://ok.ru/web-api/music/conf (скопируйте значение ключа \"sid\")\\nТокен сессии: '",
        "\"Успешно.\"",
        "string",
        "https://wmf.ok.ru/track;jsessionid=${sessionId}?id="
    ],
    "variables": [
        "httpAgent",
        "finishId",
        "fileName",
        "fileStream",
        "sessionId",
        "getTrackInfo",
        "responseData",
        "responseData",
        "output",
        "writeResults",
        "startBrute",
        "idPrompt",
        "id",
        "chunkPosition",
        "results",
        "i",
        "response",
        "apiUrl"
    ],
    "comments": [
        "OK Bruter by M8",
        "Based on OK Bruter by Nikita Volkov (dvadvaa, volkovcute)",
        "Init the agent for requests",
        "Constant variable with id to stop the program",
        "Init the interface for returned result for function getTrackInfo",
        "Some check for existing of the file",
        "Parsing from API",
        "Check for errors",
        "If success",
        "Write data to the file",
        "Just a function for init an api url"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}