{
    "identifiers": [
        "qutebrowser",
        "api",
        "cmdutils",
        "message",
        "qutebrowser",
        "utils",
        "objreg",
        "version",
        "vs",
        "qutebrowser",
        "__version__",
        "qtver",
        "qutebrowser",
        "qt",
        "core",
        "QUrl",
        "vs",
        "_LOGO",
        "cmdutils",
        "register",
        "cmdutils",
        "argument",
        "value",
        "cmdutils",
        "Value",
        "win_id",
        "win_id",
        "qtver",
        "vs",
        "_git_str",
        "gitver",
        "lines",
        "append",
        "gitver",
        "lines",
        "append",
        "vs",
        "_backend",
        "lines",
        "append",
        "vs",
        "platform",
        "python_implementation",
        "vs",
        "platform",
        "python_version",
        "lines",
        "s",
        "split",
        "s",
        "vs",
        "_module_versions",
        "lines",
        "append",
        "vs",
        "_pdfjs_version",
        "lines",
        "append",
        "vs",
        "sql",
        "version",
        "lines",
        "append",
        "vs",
        "QSslSocket",
        "sslLibraryVersionString",
        "vs",
        "QSslSocket",
        "supportsSsl",
        "vs",
        "objects",
        "qapp",
        "vs",
        "objects",
        "qapp",
        "style",
        "style",
        "metaObject",
        "metaobj",
        "lines",
        "append",
        "metaobj",
        "className",
        "lines",
        "append",
        "vs",
        "opengl_info",
        "lines",
        "append",
        "format",
        "vs",
        "platform",
        "platform",
        "vs",
        "platform",
        "architecture",
        "vs",
        "distribution",
        "dist",
        "lines",
        "append",
        "format",
        "dist",
        "pretty",
        "dist",
        "parsed",
        "name",
        "lines",
        "vs",
        "_autoconfig_loaded",
        "vs",
        "_config_py_loaded",
        "vs",
        "_uptime",
        "k",
        "v",
        "lines",
        "k",
        "v",
        "open",
        "HTML",
        "f",
        "f",
        "write",
        "html_head",
        "html_tail",
        "QUrl",
        "HTML",
        "objreg",
        "get",
        "scope",
        "win_id",
        "tabbed_browser",
        "load_url",
        "url",
        "newtab",
        "message",
        "error"
    ],
    "literals": [
        "'/tmp/qbfetch.html'",
        "'</pre><div id=\"sysinfo\" style=\"float: right\">'",
        "'</div></body></html>'",
        "'win_id'",
        "'qutebrowser v'",
        "\"Git commit\"",
        "'Backend'",
        "': '",
        "'pdf.js'",
        "'sqlite'",
        "'QtNetwork SSL'",
        "'no'",
        "'Style'",
        "'OpenGL'",
        "'Platform'",
        "'{}, {}'",
        "'Linux distribution'",
        "'{} ({})'",
        "'Autoconfig loaded'",
        "'Config.py'",
        "'Uptime'",
        "''",
        "f'<div><span>{k}</span><span>:</span> <span>{v}</span></div>\\n'",
        "'w'",
        "f'file://{HTML}'",
        "'tabbed-browser'",
        "'window'",
        "'Failed'"
    ],
    "variables": [
        "HTML",
        "html_head",
        "html_tail",
        "lines",
        "gitver",
        "style",
        "metaobj",
        "dist",
        "url",
        "tabbed_browser"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "from qutebrowser import __file__ as qtfile",
        "import traceback",
        "import os",
        "lines.append(('Qt', vs.earlyinit.qt_version()))",
        "lines.append(('PyQt', vs.PYQT_VERSION_STR))",
        "m = str(vs.machinery.INFO).split('\\n')",
        "lines += [(m[0].replace(':', ''), '<br>'.join(m[1:]))]",
        "lines.append(('Platform plugin', vs.objects.qapp.platformName()))",
        "importpath = os.path.dirname(os.path.abspath(qtfile))",
        "lines.append(('Frozen', hasattr(sys, 'frozen')))",
        "lines.append((\"Imported from\", importpath))",
        "lines.append((\"Using Python from\", sys.executable))",
        "lines += [(name, path)",
        "for name, path in sorted(vs._path_info().items())]",
        "noqa: E501",
        "with open('qterr', 'w') as f:",
        "traceback.print_exc(file=f)"
    ],
    "docstrings": [
        "'''<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Qutefetch</title>\n  <style>\n    body {\n      background: #1a1b26;\n      color: #a9b1d6;\n      font-family: Arial, sans-serif;\n      height: 100vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 0px;\n    }\n    body > * {\n      margin: 15px;\n    }\n    #sysinfo div span:nth-child(1) {\n        color: #9ece6a\n    }\n    #sysinfo div span:nth-child(2) {\n        color: #f7768e\n    }\n  </style>\n</head>\n<body><pre>'''",
        "\"\"\"\n        Display information from qute://version in a \"pleasant\" way\n    \"\"\""
    ],
    "functions": [
        "qbfetch"
    ],
    "classes": []
}