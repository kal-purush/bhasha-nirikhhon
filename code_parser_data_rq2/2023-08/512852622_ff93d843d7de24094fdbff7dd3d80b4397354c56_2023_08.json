{
    "identifiers": [
        "os",
        "time",
        "tensorflow",
        "tf",
        "tensorflow_probability",
        "tfp",
        "tensorflow",
        "keras",
        "initializers",
        "RandomNormal",
        "tensorflow",
        "keras",
        "Sequential",
        "tensorflow",
        "keras",
        "layers",
        "Dense",
        "BatchNormalization",
        "LeakyReLU",
        "Conv2DTranspose",
        "Conv2D",
        "Dropout",
        "Flatten",
        "Reshape",
        "ReLU",
        "Input",
        "Concatenate",
        "tensorflow",
        "keras",
        "Model",
        "tensorflow",
        "keras",
        "optimizers",
        "Adam",
        "tensorflow",
        "keras",
        "optimizers",
        "SGD",
        "tensorflow",
        "keras",
        "layers",
        "Activation",
        "tensorflow",
        "python",
        "data",
        "Iterator",
        "numpy",
        "np",
        "pandas",
        "pd",
        "scipy",
        "sp",
        "sys",
        "multiprocessing",
        "argparse",
        "stacked_mnist",
        "os",
        "environ",
        "tfp",
        "distributions",
        "PATH",
        "os",
        "path",
        "exists",
        "PATH",
        "os",
        "mkdir",
        "PATH",
        "opt",
        "opt",
        "opt",
        "alpha_d",
        "opt",
        "alpha_g",
        "opt",
        "seed",
        "opt",
        "loss_type",
        "opt",
        "dataset",
        "opt",
        "n_epochs",
        "opt",
        "gp",
        "np",
        "zeros",
        "n_epochs",
        "opt",
        "gp_coef",
        "dataset",
        "Adam",
        "beta_1",
        "Adam",
        "beta_1",
        "dataset",
        "opt",
        "l1",
        "tf",
        "random",
        "set_seed",
        "seed",
        "np",
        "random",
        "seed",
        "seed",
        "dataset",
        "train_img",
        "_",
        "test_img",
        "_",
        "tf",
        "keras",
        "datasets",
        "mnist",
        "load_data",
        "train_img",
        "reshape",
        "train_img",
        "shape",
        "test_img",
        "reshape",
        "test_img",
        "shape",
        "dataset",
        "train_img",
        "_",
        "test_img",
        "_",
        "tf",
        "keras",
        "datasets",
        "cifar10",
        "load_data",
        "train_img",
        "reshape",
        "train_img",
        "shape",
        "test_img",
        "reshape",
        "test_img",
        "shape",
        "dataset",
        "train_img",
        "_",
        "test_img",
        "_",
        "stacked_mnist",
        "load_data",
        "train_img",
        "reshape",
        "train_img",
        "shape",
        "test_img",
        "reshape",
        "test_img",
        "shape",
        "real_mu",
        "real_sigma",
        "get_eval_metrics",
        "train_img",
        "train_data",
        "test_data",
        "clean_data",
        "train_img",
        "train",
        "clean_data",
        "test_img",
        "train",
        "data",
        "data",
        "shape",
        "data",
        "np",
        "random",
        "choice",
        "img_dims",
        "replace",
        "eval_img",
        "reshape",
        "np",
        "prod",
        "img_dims",
        "astype",
        "eval_img",
        "eval_img",
        "mean",
        "axis",
        "np",
        "transpose",
        "eval_img",
        "np",
        "cov",
        "eval_img",
        "real_mu",
        "real_sigma",
        "data",
        "train",
        "data",
        "astype",
        "new_data",
        "train",
        "tf",
        "data",
        "Dataset",
        "from_tensor_slices",
        "new_data",
        "new_data",
        "shuffle",
        "batch",
        "batch_size",
        "new_data",
        "tf",
        "keras",
        "losses",
        "BinaryCrossentropy",
        "from_logits",
        "bce",
        "tf",
        "ones_like",
        "fake_predicted_labels",
        "fake_predicted_labels",
        "l1",
        "tf",
        "math",
        "abs",
        "loss_expr",
        "tf",
        "math",
        "log",
        "loss_expr",
        "tf",
        "math",
        "abs",
        "gen_loss_vanilla",
        "tf",
        "math",
        "log",
        "tf",
        "math",
        "pow",
        "fake_predicted_labels",
        "alpha_g",
        "alpha_g",
        "tf",
        "ones_like",
        "fake_predicted_labels",
        "tf",
        "math",
        "reduce_mean",
        "fake_expr",
        "alpha_g",
        "alpha_g",
        "fake_loss",
        "l1",
        "alpha_g",
        "alpha_g",
        "tf",
        "math",
        "pow",
        "alpha_g",
        "tf",
        "math",
        "abs",
        "loss_expr",
        "equil_val",
        "loss_expr",
        "tf",
        "keras",
        "losses",
        "BinaryCrossentropy",
        "from_logits",
        "bce",
        "tf",
        "ones_like",
        "real_predicted_labels",
        "real_predicted_labels",
        "bce",
        "tf",
        "zeros_like",
        "fake_predicted_labels",
        "fake_predicted_labels",
        "gp",
        "tf",
        "gradients",
        "tf",
        "math",
        "log",
        "real_predicted_labels",
        "img",
        "tf",
        "reduce_mean",
        "tf",
        "reduce_sum",
        "tf",
        "square",
        "gradients",
        "axis",
        "real_loss",
        "fake_loss",
        "gp_coef",
        "r1_penalty",
        "tf",
        "math",
        "pow",
        "real_predicted_labels",
        "alpha_d",
        "alpha_d",
        "tf",
        "ones_like",
        "real_predicted_labels",
        "tf",
        "math",
        "reduce_mean",
        "real_expr",
        "tf",
        "math",
        "pow",
        "fake_predicted_labels",
        "alpha_d",
        "alpha_d",
        "tf",
        "ones_like",
        "fake_predicted_labels",
        "tf",
        "math",
        "reduce_mean",
        "fake_expr",
        "gp",
        "tf",
        "gradients",
        "tf",
        "math",
        "log",
        "real_predicted_labels",
        "img",
        "tf",
        "reduce_mean",
        "tf",
        "reduce_sum",
        "tf",
        "square",
        "gradients",
        "axis",
        "alpha_d",
        "alpha_d",
        "real_loss",
        "fake_loss",
        "loss_expr",
        "gp_coef",
        "r1_penalty",
        "Sequential",
        "dataset",
        "model",
        "add",
        "Dense",
        "use_bias",
        "kernel_initializer",
        "RandomNormal",
        "mean",
        "stddev",
        "input_shape",
        "noise_dim",
        "model",
        "add",
        "BatchNormalization",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Reshape",
        "model",
        "add",
        "Conv2DTranspose",
        "strides",
        "padding",
        "use_bias",
        "kernel_initializer",
        "RandomNormal",
        "mean",
        "stddev",
        "model",
        "add",
        "BatchNormalization",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2DTranspose",
        "strides",
        "padding",
        "use_bias",
        "kernel_initializer",
        "RandomNormal",
        "mean",
        "stddev",
        "model",
        "add",
        "BatchNormalization",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2DTranspose",
        "strides",
        "padding",
        "activation",
        "use_bias",
        "kernel_initializer",
        "RandomNormal",
        "mean",
        "stddev",
        "dataset",
        "dataset",
        "model",
        "add",
        "Dense",
        "input_shape",
        "noise_dim",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "BatchNormalization",
        "model",
        "add",
        "Reshape",
        "model",
        "add",
        "Conv2DTranspose",
        "strides",
        "padding",
        "model",
        "add",
        "BatchNormalization",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2DTranspose",
        "strides",
        "padding",
        "model",
        "add",
        "BatchNormalization",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2DTranspose",
        "strides",
        "padding",
        "model",
        "add",
        "BatchNormalization",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2D",
        "activation",
        "padding",
        "model",
        "Sequential",
        "dataset",
        "model",
        "add",
        "Conv2D",
        "strides",
        "padding",
        "kernel_initializer",
        "RandomNormal",
        "mean",
        "stddev",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Dropout",
        "model",
        "add",
        "Conv2D",
        "strides",
        "padding",
        "kernel_initializer",
        "RandomNormal",
        "mean",
        "stddev",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Dropout",
        "model",
        "add",
        "Flatten",
        "model",
        "add",
        "Dense",
        "activation",
        "kernel_initializer",
        "RandomNormal",
        "mean",
        "stddev",
        "dataset",
        "dataset",
        "model",
        "add",
        "Conv2D",
        "padding",
        "input_shape",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2D",
        "strides",
        "padding",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2D",
        "strides",
        "padding",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Conv2D",
        "strides",
        "padding",
        "model",
        "add",
        "LeakyReLU",
        "model",
        "add",
        "Flatten",
        "model",
        "add",
        "Dropout",
        "model",
        "add",
        "Dense",
        "activation",
        "model",
        "build_generator",
        "build_dq",
        "gen_loss_alpha",
        "dis_loss_alpha",
        "alpha_d",
        "dis_loss_vanilla",
        "alpha_g",
        "gen_loss_vanilla",
        "tf",
        "real_images",
        "tf",
        "random",
        "normal",
        "batch_size",
        "noise_dim",
        "tf",
        "GradientTape",
        "gen_tape",
        "tf",
        "GradientTape",
        "dis_tape",
        "tf",
        "GradientTape",
        "q_tape",
        "discriminator",
        "real_images",
        "discriminator",
        "real_images",
        "training",
        "generator",
        "z",
        "training",
        "discriminator",
        "generated_images",
        "training",
        "discriminator_loss",
        "generator_loss",
        "dis_tape",
        "gradient",
        "dis_loss_value",
        "discriminator",
        "trainable_variables",
        "d_opt",
        "apply_gradients",
        "dis_gradients",
        "discriminator",
        "trainable_variables",
        "discriminator",
        "gen_tape",
        "gradient",
        "gen_loss_value",
        "generator",
        "trainable_variables",
        "g_opt",
        "apply_gradients",
        "gen_gradients",
        "generator",
        "trainable_variables",
        "dis_loss_value",
        "gen_loss_value",
        "alpha_d",
        "alpha_g",
        "dataset",
        "make_directory",
        "gan_name",
        "make_directory",
        "gan_name",
        "dataset",
        "gan_name",
        "make_directory",
        "gan_name",
        "dataset",
        "alpha_d",
        "alpha_g",
        "SEEDS",
        "index",
        "seed",
        "gp",
        "l1",
        "version",
        "dataset",
        "version",
        "gp",
        "version",
        "dataset",
        "version",
        "l1",
        "version",
        "dataset",
        "version",
        "gan_name",
        "dataset",
        "alpha_d",
        "alpha_g",
        "version",
        "gan_name",
        "gan_name",
        "dataset",
        "version",
        "make_directory",
        "path",
        "make_directory",
        "path",
        "make_directory",
        "path",
        "make_directory",
        "path",
        "make_directory",
        "path",
        "make_directory",
        "path",
        "open",
        "path",
        "f",
        "f",
        "write",
        "version",
        "k",
        "v",
        "vars",
        "opt",
        "items",
        "f",
        "write",
        "k",
        "v",
        "f",
        "write",
        "get_data",
        "build_gan",
        "build_directory",
        "np",
        "zeros",
        "n_epochs",
        "np",
        "zeros",
        "n_epochs",
        "epoch",
        "n_epochs",
        "epoch",
        "time",
        "time",
        "real_images",
        "iter",
        "train_data",
        "train_step",
        "real_images",
        "gen_loss_history",
        "epoch",
        "gen_loss_value",
        "dis_loss_history",
        "epoch",
        "dis_loss_value",
        "n_batches",
        "gen_loss_history",
        "n_batches",
        "dis_loss_history",
        "n_batches",
        "time",
        "time",
        "epoch_times",
        "append",
        "end_epoch",
        "start_epoch",
        "time",
        "time",
        "save_generated_images",
        "epoch",
        "time",
        "time",
        "img_times",
        "append",
        "end_img",
        "start_img",
        "epochs_passed",
        "scores",
        "epoch",
        "compute_fid",
        "e",
        "e",
        "np",
        "save",
        "path",
        "gen_loss_history",
        "np",
        "save",
        "path",
        "dis_loss_history",
        "generator",
        "save",
        "path",
        "discriminator",
        "save",
        "path",
        "pd",
        "DataFrame",
        "epochs_passed",
        "epoch_times",
        "img_times",
        "time_df",
        "to_pickle",
        "path",
        "np",
        "save",
        "path",
        "scores",
        "epochs_passed",
        "n_epochs",
        "epoch",
        "epochs_passed",
        "epoch",
        "np",
        "nanargmin",
        "scores",
        "os",
        "remove",
        "path",
        "epoch",
        "generator",
        "tf",
        "random",
        "normal",
        "noise_dim",
        "fake_images",
        "numpy",
        "dataset",
        "fake_images",
        "reshape",
        "dataset",
        "fake_images",
        "reshape",
        "dataset",
        "fake_images",
        "reshape",
        "fake_images",
        "fake_images",
        "mean",
        "axis",
        "np",
        "cov",
        "np",
        "transpose",
        "fake_images",
        "sp",
        "linalg",
        "sqrtm",
        "np",
        "matmul",
        "fake_sigma",
        "real_sigma",
        "np",
        "iscomplexobj",
        "covSqrt",
        "covSqrt",
        "real",
        "np",
        "linalg",
        "norm",
        "real_mu",
        "fake_mu",
        "np",
        "trace",
        "real_sigma",
        "fake_sigma",
        "covSqrt",
        "fidScore",
        "epoch",
        "epoch",
        "tf",
        "random",
        "normal",
        "num_images",
        "noise_dim",
        "generator",
        "z_eval",
        "training",
        "imgs",
        "shape",
        "np",
        "save",
        "path",
        "epoch",
        "imgs"
    ],
    "literals": [
        "'TF_CPP_MIN_LOG_LEVEL'",
        "'2'",
        "'cifar10'",
        "'cifar10'",
        "'mnist'",
        "'cifar10'",
        "'stacked-mnist'",
        "'float32'",
        "'float32'",
        "'mnist'",
        "'same'",
        "'same'",
        "'same'",
        "'tanh'",
        "'cifar10'",
        "'stacked-mnist'",
        "'same'",
        "'same'",
        "'same'",
        "'tanh'",
        "'same'",
        "'mnist'",
        "'same'",
        "'same'",
        "'sigmoid'",
        "'cifar10'",
        "'stacked-mnist'",
        "'same'",
        "'same'",
        "'same'",
        "'same'",
        "'sigmoid'",
        "'AlphaGAN'",
        "'VanillaGAN'",
        "'mnist'",
        "f'{gan_name}/{self.dataset}'",
        "'AlphaGAN'",
        "f'{gan_name}/{self.dataset}/alpha-d{self.alpha_d}-g{self.alpha_g}'",
        "'mnist'",
        "'mnist'",
        "'mnist'",
        "f'{gan_name}/{self.dataset}/alpha-d{self.alpha_d}-g{self.alpha_g}/v'",
        "'VanillaGAN'",
        "f'{gan_name}/{self.dataset}/v'",
        "'/metrics'",
        "'/metrics/accuracy'",
        "'/metrics/losses'",
        "'/img'",
        "'/models'",
        "'/description.txt'",
        "'w'",
        "f'version={version}\\n'",
        "f'{k}={v}'",
        "'\\n'",
        "f\"Epoch {epoch}\"",
        "'/metrics/losses/gen_loss.npy'",
        "'/metrics/losses/dis_loss.npy'",
        "'/models/generator'",
        "'/models/discriminator'",
        "'epoch'",
        "'epoch_time'",
        "'img_times'",
        "'/times.pkl'",
        "'/scores.npy'",
        "'/img/predictions'",
        "\".npy\"",
        "'mnist'",
        "'cifar10'",
        "'stacked-mnist'",
        "'/img/predictions'",
        "'.npy'"
    ],
    "variables": [
        "tfd",
        "opt",
        "batch_size",
        "noise_dim",
        "epsilon",
        "alpha_d",
        "alpha_g",
        "seed",
        "loss_type",
        "dataset",
        "n_epochs",
        "gp",
        "scores",
        "num_images",
        "gp_coef",
        "num_images",
        "d_opt",
        "g_opt",
        "noise_dim",
        "l1",
        "train_img",
        "test_img",
        "train_img",
        "test_img",
        "train_img",
        "test_img",
        "img_dims",
        "eval_img",
        "eval_img",
        "eval_img",
        "real_mu",
        "eval_img",
        "real_sigma",
        "new_data",
        "new_data",
        "new_data",
        "bce",
        "loss_expr",
        "loss_expr",
        "fake_expr",
        "fake_loss",
        "loss_expr",
        "equil_val",
        "loss_expr",
        "bce",
        "real_loss",
        "fake_loss",
        "r1_penalty",
        "gradients",
        "r1_penalty",
        "real_expr",
        "real_loss",
        "fake_expr",
        "fake_loss",
        "r1_penalty",
        "gradients",
        "r1_penalty",
        "loss_expr",
        "model",
        "model",
        "generator",
        "discriminator",
        "generator_loss",
        "discriminator_loss",
        "discriminator_loss",
        "generator_loss",
        "z",
        "trainable",
        "img",
        "real_predicted_labels",
        "generated_images",
        "fake_predicted_labels",
        "dis_loss_value",
        "gen_loss_value",
        "dis_gradients",
        "trainable",
        "gen_gradients",
        "gan_name",
        "gan_name",
        "SEEDS",
        "SEEDS",
        "version",
        "version",
        "version",
        "version",
        "path",
        "path",
        "gen_loss_history",
        "dis_loss_history",
        "epoch_times",
        "img_times",
        "epochs_passed",
        "n_batches",
        "start_epoch",
        "dis_loss_value",
        "gen_loss_value",
        "gen_loss_history",
        "dis_loss_history",
        "end_epoch",
        "start_img",
        "end_img",
        "time_df",
        "fake_images",
        "fake_images",
        "fake_images",
        "fake_images",
        "fake_images",
        "fake_images",
        "fake_mu",
        "fake_sigma",
        "covSqrt",
        "covSqrt",
        "fidScore",
        "z_eval",
        "imgs"
    ],
    "comments": [
        "subfolders = [f[0] for f in os.walk(f'AlphaGAN/{self.dataset}/alpha-d{self.alpha_d}-g{self.alpha_g}')]",
        "folders = [f for f in subfolders if f.startswith(f'AlphaGAN/{self.dataset}/alpha-d{self.alpha_d}-g{self.alpha_g}/v')]",
        "self.evaluate(epoch)"
    ],
    "docstrings": [
        "'''\n        versions = [f.split('/v')[1] for f in folders]\n        versions = [int(v) for v in versions if v.isnumeric()]\n        version = 1\n        if versions:\n            version = max(versions) + 1\n        folder_created = False\n  \n        while not folder_created:\n            self.path = f'AlphaGAN/{self.dataset}/alpha-d{self.alpha_d}-g{self.alpha_g}/v'+str(version)\n               \n            try:\n                make_directory(self.path)\n                folder_created = True\n            except:\n                version += 1\n        '''"
    ],
    "functions": [
        "make_directory",
        "get_data",
        "get_eval_metrics",
        "clean_data",
        "gen_loss_vanilla",
        "gen_loss_vanilla_l1",
        "gen_loss_alpha",
        "dis_loss_vanilla",
        "dis_loss_alpha",
        "build_generator",
        "build_dq",
        "build_gan",
        "train_step",
        "build_directory",
        "train",
        "compute_fid",
        "save_generated_images"
    ],
    "classes": [
        "AlphaGAN"
    ]
}