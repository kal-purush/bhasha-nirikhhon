{
    "identifiers": [
        "localStorage",
        "highScoreElement",
        "highScore",
        "updateFoodPosition",
        "foodX",
        "foodY",
        "handleGameOver",
        "clearInterval",
        "setIntervalId",
        "alert",
        "location",
        "changeDirection",
        "e",
        "e",
        "velocityY",
        "velocityX",
        "velocityY",
        "e",
        "velocityY",
        "velocityX",
        "velocityY",
        "e",
        "velocityX",
        "velocityX",
        "velocityY",
        "e",
        "velocityX",
        "velocityX",
        "velocityY",
        "controls",
        "button",
        "button",
        "changeDirection",
        "button",
        "initGame",
        "gameOver",
        "handleGameOver",
        "foodY",
        "foodX",
        "snakeX",
        "foodX",
        "snakeY",
        "foodY",
        "updateFoodPosition",
        "snakeBody",
        "foodY",
        "foodX",
        "score",
        "highScore",
        "score",
        "highScore",
        "score",
        "highScore",
        "localStorage",
        "highScore",
        "scoreElement",
        "score",
        "highScoreElement",
        "highScore",
        "snakeX",
        "velocityX",
        "snakeY",
        "velocityY",
        "snakeBody",
        "i",
        "i",
        "snakeBody",
        "i",
        "snakeBody",
        "i",
        "snakeBody",
        "snakeX",
        "snakeY",
        "snakeX",
        "snakeX",
        "snakeY",
        "snakeY",
        "gameOver",
        "i",
        "snakeBody",
        "i",
        "html",
        "snakeBody",
        "i",
        "snakeBody",
        "i",
        "i",
        "snakeBody",
        "snakeBody",
        "i",
        "snakeBody",
        "snakeBody",
        "i",
        "gameOver",
        "playBoard",
        "html",
        "updateFoodPosition",
        "setIntervalId",
        "setInterval",
        "initGame",
        "changeDirection"
    ],
    "literals": [
        "\".play-board\"",
        "\".score\"",
        "\".high-score\"",
        "\".controls i\"",
        "\"high-score\"",
        "High Score: ${highScore}",
        "\"Game Over! Press OK to replay...\"",
        "\"ArrowUp\"",
        "\"ArrowDown\"",
        "\"ArrowLeft\"",
        "\"ArrowRight\"",
        "\"click\"",
        "<div class=\"food\" style=\"grid-area: ${foodY} / ${foodX}\"></div>",
        "\"high-score\"",
        "Score: ${score}",
        "High Score: ${highScore}",
        "<div class=\"head\" style=\"grid-area: ${snakeBody[i][1]} / ${snakeBody[i][0]}\"></div>",
        "\"keyup\""
    ],
    "variables": [
        "playBoard",
        "scoreElement",
        "highScoreElement",
        "controls",
        "gameOver",
        "foodX",
        "foodY",
        "snakeX",
        "snakeY",
        "velocityX",
        "velocityY",
        "snakeBody",
        "setIntervalId",
        "score",
        "highScore",
        "updateFoodPosition",
        "handleGameOver",
        "changeDirection",
        "initGame",
        "html",
        "i",
        "i"
    ],
    "comments": [
        "Getting high score from the local storage",
        "Passing a random 1 - 30 value as food position",
        "Clearing the timer and reloading the page on game over",
        "Changing velocity value based on key press",
        "Calling changeDirection on each key click and passing key dataset value as an object",
        "Checking if the snake hit the food",
        "Pushing food position to snake body array",
        "increment score by 1",
        "Updating the snake's head position based on the current velocity",
        "Shifting forward the values of the elements in the snake body by one",
        "Setting first element of snake body to current snake position",
        "Checking if the snake's head is out of wall, if so setting gameOver to true",
        "Adding a div for each part of the snake's body",
        "Checking if the snake head hit the body, if so set gameOver to true"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}