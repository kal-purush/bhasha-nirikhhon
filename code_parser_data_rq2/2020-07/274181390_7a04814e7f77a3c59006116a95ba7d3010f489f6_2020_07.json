{
    "identifiers": [
        "Vex",
        "GraphicalMeasure",
        "SourceMeasure",
        "Staff",
        "StaffLine",
        "SystemLinesEnum",
        "ClefInstruction",
        "ClefEnum",
        "KeyInstruction",
        "RhythmInstruction",
        "VexFlowConverter",
        "Beam",
        "GraphicalNote",
        "GraphicalStaffEntry",
        "StaveConnector",
        "Vex",
        "unitInPixels",
        "Tuplet",
        "RepetitionInstructionEnum",
        "RepetitionInstruction",
        "AlignmentType",
        "SystemLinePosition",
        "GraphicalVoiceEntry",
        "Voice",
        "EngravingRules",
        "SkyBottomLineCalculator",
        "VexFlowMeasure",
        "GraphicalMeasure",
        "staff",
        "sourceMeasure",
        "staffLine",
        "staff",
        "sourceMeasure",
        "staffLine",
        "staffLine",
        "staffLine",
        "sourceMeasure",
        "sourceMeasure",
        "Vex",
        "sourceMeasure",
        "Vex",
        "Vex",
        "x",
        "y",
        "x",
        "y",
        "Vex",
        "Vex",
        "SystemLinesEnum",
        "Vex",
        "line",
        "line",
        "SystemLinesEnum",
        "SystemLinesEnum",
        "unitInPixels",
        "SystemLinesEnum",
        "unitInPixels",
        "clef",
        "clef",
        "ClefEnum",
        "VexFlowConverter",
        "clef",
        "vfclef",
        "vfclef",
        "vfclef",
        "Vex",
        "lineNumber",
        "lineNumber",
        "lineNumber",
        "lineNumber",
        "lineNumber",
        "lineNumber",
        "lineNumber",
        "currentKey",
        "previousKey",
        "currentClef",
        "rhythm",
        "clef",
        "lineType",
        "linePosition",
        "linePosition",
        "SystemLinePosition",
        "lineType",
        "SystemLinesEnum",
        "Vex",
        "SystemLinePosition",
        "lineType",
        "SystemLinesEnum",
        "Vex",
        "SystemLinesEnum",
        "Vex",
        "SystemLinesEnum",
        "Vex",
        "SystemLinesEnum",
        "Vex",
        "SystemLinesEnum",
        "Vex",
        "StavePositionEnum",
        "text",
        "position",
        "options",
        "repetitionInstruction",
        "Vex",
        "Vex",
        "repetitionInstruction",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "position",
        "Vex",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "position",
        "Vex",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "RepetitionInstructionEnum",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "RepetitionInstructionEnum",
        "instruction",
        "Vex",
        "instruction",
        "Vex",
        "instruction",
        "position",
        "repetitionInstruction",
        "repetitionInstruction",
        "Vex",
        "repetitionInstruction",
        "RepetitionInstructionEnum",
        "repetitionInstruction",
        "AlignmentType",
        "voltaType",
        "Vex",
        "voltaType",
        "Vex",
        "AlignmentType",
        "voltaType",
        "Vex",
        "skyBottomLineCalculator",
        "start",
        "end",
        "skylineMinForMeasure",
        "newSkylineValueForMeasure",
        "skylineMinForMeasure",
        "newSkylineValueForMeasure",
        "vexFlowVoltaHeight",
        "skylineDifference",
        "newSkylineValueForMeasure",
        "skylineMinForMeasure",
        "i",
        "i",
        "i",
        "tempMeasure",
        "VexFlowMeasure",
        "tempMeasure",
        "currentMeasureNumber",
        "prevMeasure",
        "tempMeasure",
        "prevMeasure",
        "Vex",
        "prevMeasure",
        "i",
        "prevStaveModifiers",
        "i",
        "Vex",
        "prevStaveModifiers",
        "i",
        "nextStaveModifier",
        "prevMeasure",
        "prevMeasure",
        "prevMeasure",
        "prevMeasure",
        "prevMeasure",
        "prevskyBottomLineCalculator",
        "prevStart",
        "prevEnd",
        "prevMeasureSkyline",
        "newSkylineValueForMeasure",
        "prevMeasureSkyline",
        "newSkylineValueForMeasure",
        "vexFlowVoltaHeight",
        "skylineDifference",
        "newSkylineValueForMeasure",
        "prevMeasureSkyline",
        "nextStaveModifier",
        "vexFlowVoltaHeight",
        "prevMeasure",
        "prevStart",
        "prevEnd",
        "newSkylineValueForMeasure",
        "vexFlowVoltaHeight",
        "voltaType",
        "repetitionInstruction",
        "vexFlowVoltaHeight",
        "skyBottomLineCalculator",
        "start",
        "end",
        "newSkylineValueForMeasure",
        "width",
        "width",
        "width",
        "unitInPixels",
        "ctx",
        "Vex",
        "ctx",
        "ctx",
        "connector",
        "connector",
        "ctx",
        "voice",
        "voice",
        "graphicalNote",
        "beam",
        "graphicalNote",
        "tuplet",
        "graphicalStaffEntry",
        "voiceEntry",
        "top",
        "lineType",
        "Vex",
        "top",
        "connector",
        "lineType",
        "connector",
        "Vex",
        "Vex",
        "mod",
        "modifiers",
        "mod",
        "StavePositionEnum",
        "vfBeginInstructionsWidth",
        "mod",
        "mod",
        "mod",
        "StavePositionEnum",
        "vfEndInstructionsWidth",
        "mod",
        "mod",
        "vfBeginInstructionsWidth",
        "unitInPixels",
        "vfEndInstructionsWidth",
        "unitInPixels",
        "StavePositionEnum"
    ],
    "literals": [
        "\"vexflow\"",
        "\"../GraphicalMeasure\"",
        "\"../../VoiceData/SourceMeasure\"",
        "\"../../VoiceData/Staff\"",
        "\"../StaffLine\"",
        "\"../SystemLinesEnum\"",
        "\"../../VoiceData/Instructions/ClefInstruction\"",
        "\"../../VoiceData/Instructions/KeyInstruction\"",
        "\"../../VoiceData/Instructions/RhythmInstruction\"",
        "\"./VexFlowConverter\"",
        "\"../../VoiceData/Beam\"",
        "\"../GraphicalNote\"",
        "\"../GraphicalStaffEntry\"",
        "\"./VexFlowMusicSheetDrawer\"",
        "\"../../VoiceData/Tuplet\"",
        "\"../../VoiceData/Instructions/RepetitionInstruction\"",
        "\"../SystemLinePosition\"",
        "\"../GraphicalVoiceEntry\"",
        "\"../../VoiceData/Voice\"",
        "\"../EngravingRules\"",
        "\"../SkyBottomLineCalculator\"",
        "\"./VexFlowMeasure\"",
        "\"tab\"",
        "string",
        "string",
        "string",
        "\"default\"",
        "string",
        "\"volta\""
    ],
    "variables": [
        "vfclef",
        "text",
        "position",
        "options",
        "instruction",
        "position",
        "voltaType",
        "skyBottomLineCalculator",
        "start",
        "end",
        "skylineMinForMeasure",
        "newSkylineValueForMeasure",
        "vexFlowVoltaHeight",
        "skylineDifference",
        "prevMeasure",
        "currentMeasureNumber",
        "i",
        "tempMeasure",
        "prevStaveModifiers",
        "i",
        "nextStaveModifier",
        "prevskyBottomLineCalculator",
        "prevStart",
        "prevEnd",
        "prevMeasureSkyline",
        "skylineDifference",
        "connector",
        "vfBeginInstructionsWidth",
        "vfEndInstructionsWidth",
        "modifiers"
    ],
    "comments": [
        "type StemmableNote = Vex.Flow.StemmableNote;",
        "A GraphicalMeasure drawing a multiple-rest measure in Vexflow.\n *  Mostly copied from VexFlowMeasure.\n *  Even though most of those functions aren't needed, apparently you can't remove the layoutStaffEntry function.",
        "VexFlow: Element",
        "type note: Vex.Flow.MultiMeasureRest is not in the DefinitelyTyped definitions yet.",
        "number_line: 3",
        "The VexFlow Stave (= one measure in a staffline)",
        "VexFlow StaveConnectors (vertical lines)",
        "The engraving rules of OSMD.",
        "Sets the absolute coordinates of the VFStave on the canvas",
        "Take into account some space for the begin and end lines of the stave",
        "Will be changed when repetitions will be implemented",
        "this.beginInstructionsWidth = 20 / UnitInPixels;",
        "this.endInstructionsWidth = 20 / UnitInPixels;",
        "TODO save beginning and end bar type, set these again after new stave.",
        "constructor sets beginning and end bar type to standard",
        "technically not correct, but we'd need to set the next measure's beginning bar type",
        "fix for vexflow ignoring ending barline style after new stave, apparently",
        "the correct bar types seem to be set later",
        "Clean up instructions",
        "return 0 for the normal lines, as the line width will be considered at the updateInstructionWidth() method using the stavemodifiers.",
        "case SystemLinesEnum.SingleThin:",
        "return 5.0 / unitInPixels;",
        "case SystemLinesEnum.DoubleThin:",
        "return 5.0 / unitInPixels;",
        "case SystemLinesEnum.ThinBold:",
        "return 5.0 / unitInPixels;",
        "but just add a little extra space for repetitions (cosmetics):",
        "Vex.Flow.Stave.setNumLines hides all but the top line.",
        "this is better",
        "show middle",
        "quick fix to see if this matters for calculation. Doesn't seem to",
        "lines (which isn't this case here)",
        "this.stave.options.num_lines = parseInt(lines, 10);",
        "show middle",
        "show middle",
        "this.stave.setKeySignature(",
        "VexFlowConverter.keySignature(currentKey),",
        "VexFlowConverter.keySignature(previousKey),",
        "undefined",
        ");",
        "this.updateInstructionWidth();",
        "const timeSig: Vex.Flow.TimeSignature = VexFlowConverter.TimeSignature(rhythm);",
        "this.stave.addModifier(",
        "timeSig,",
        "Vex.Flow.StaveModifier.Position.BEGIN",
        ");",
        "this.updateInstructionWidth();",
        "const vfclef: { type: string, size: string, annotation: string } = VexFlowConverter.Clef(clef, \"small\");",
        "this.stave.setEndClef(vfclef.type, vfclef.size, vfclef.annotation);",
        "this.updateInstructionWidth();",
        "this.stave.setBegBarType(Vex.Flow.Barline.type.NONE); // not necessary, it seems",
        "TODO: Add support for additional Barline types when VexFlow supports them",
        "Vex.Flow.StaveModifier.Position.ABOVE;",
        "create Segno Symbol:",
        "create Coda Symbol:",
        "instruction = \"To Coda\";",
        "voltaType = Vex.Flow.Volta.type.BEGIN_END;",
        "don't add BEGIN_END volta a second time:",
        "Because of loss of accuracy when sampling (see SkyBottomLineCalculator.updateInRange), measures tend to overlap",
        "This causes getSkyLineMinInRange to return an incorrect min value (one from the previous measure, which has been modified)",
        "We need to offset the end of what we are measuring by a bit to prevent this, otherwise volta pairs step up",
        "2 unit gap, since volta is positioned from y center it seems.",
        "This prevents cases where the volta is rendered over another element",
        "-6 OSMD units is the 0 value that the volta is placed on. .1 extra so the skyline goes above the volta",
        "instead of on the line itself",
        "EngravingRules default offset is 2.5, can be user set.",
        "2.5 gives us a good default value to work with.",
        "if we calculate that the minimum skyline allowed by elements is above the default volta position, need to adjust volta up further",
        "if we already have a volta in the prev measure, should match it's height, or if we are higher, it should match ours",
        "find previous sibling measure that may have volta",
        "should never be the case... But check just to be sure",
        "We found the previous top measure",
        "if prev skyline is higher, use it",
        "otherwise, we are higher. Need to adjust prev",
        "convert to VF units (pixels)",
        "Set the width of the Vex.Flow.Stave",
        "Force the width of the Begin Instructions",
        "this.stave.setNoteStartX(this.beginInstructionsWidth * UnitInPixels);",
        "vexflow does the x-layout",
        "Draw stave lines",
        "Draw vertical lines",
        "return",
        "this needs to exist, for some reason, or it won't be found, even though i can't find the usage.",
        "Vex.Flow.StaveModifier.Position.BEGIN) {",
        "Vex.Flow.StaveModifier.Position.END) {",
        "Gives the position of the Stave - replaces the function get Position() in the description of class StaveModifier in vexflow.d.ts",
        "The latter gave an error because function cannot be defined in the class descriptions in vexflow.d.ts"
    ],
    "docstrings": [
        "* There is no case in which `staffLine === undefined && sourceMeasure === undefined` holds.\n         * Hence, it is not necessary to specify an `else` case.\n         * One can verify this through a usage search for this constructor.",
        "* Reset all the geometric values and parameters of this measure and put it in an initialized state.\n     * This is needed to evaluate a measure a second time by system builder.",
        "* returns the x-width (in units) of a given measure line {SystemLinesEnum}.\n     * @param line\n     * @returns the x-width in osmd units",
        "* adds the given clef to the begin of the measure.\n     * This has to update/increase BeginInstructionsWidth.\n     * @param clef",
        "* Sets the number of stafflines that are rendered, so that they are centered properly\n     * @param lineNumber",
        "* adds the given key to the begin of the measure.\n     * This has to update/increase BeginInstructionsWidth.\n     * @param currentKey the new valid key.\n     * @param previousKey the old cancelled key. Needed to show which accidentals are not valid any more.\n     * @param currentClef the valid clef. Needed to put the accidentals on the right y-positions.",
        "* adds the given rhythm to the begin of the measure.\n     * This has to update/increase BeginInstructionsWidth.\n     * @param rhythm",
        "* adds the given clef to the end of the measure.\n     * This has to update/increase EndInstructionsWidth.\n     * @param clef",
        "* Adds a measure number to the top left corner of the measure\n     * This method is not used currently in favor of the calculateMeasureNumberPlacement\n     * method in the MusicSheetCalculator.ts",
        "* Sets the overall x-width of the measure.\n     * @param width",
        "* This method is called after the StaffEntriesScaleFactor has been set.\n     * Here the final x-positions of the staff entries have to be set.\n     * (multiply the minimal positions with the scaling factor, considering the BeginInstructionsWidth)",
        "* Draw this measure on a VexFlow CanvasContext\n     * @param ctx",
        "* Returns all the voices that are present in this measure",
        "* Returns all the graphicalVoiceEntries of a given Voice.\n     * @param voice the voice for which the graphicalVoiceEntries shall be returned.",
        "* Finds the gaps between the existing notes within a measure.\n     * Problem here is, that the graphicalVoiceEntry does not exist yet and\n     * that Tied notes are not present in the normal voiceEntries.\n     * To handle this, calculation with absolute timestamps is needed.\n     * And the graphical notes have to be analysed directly (and not the voiceEntries, as it actually should be -> needs refactoring)\n     * @param voice the voice for which the ghost notes shall be searched.",
        "* Add a note to a beam\n     * @param graphicalNote\n     * @param beam",
        "* Complete the creation of VexFlow Beams in this measure",
        "* Complete the creation of VexFlow Tuplets in this measure",
        "* Create the articulations for all notes of the current staff entry",
        "* Create the ornaments for all notes of the current staff entry",
        "* Creates a line from 'top' to this measure, of type 'lineType'\n     * @param top\n     * @param lineType",
        "* Return the VexFlow Stave corresponding to this graphicalMeasure\n     * @returns {Vex.Flow.Stave}",
        "* After re-running the formatting on the VexFlow Stave, update the\n     * space needed by Instructions (in VexFlow: StaveModifiers)"
    ],
    "functions": [
        "setAbsoluteCoordinates",
        "resetLayout",
        "clean",
        "getLineWidth",
        "addClefAtBegin",
        "setLineNumber",
        "addKeyAtBegin",
        "addRhythmAtBegin",
        "addClefAtEnd",
        "addMeasureLine",
        "addMeasureNumber",
        "addWordRepetition",
        "addVolta",
        "setWidth",
        "layoutSymbols",
        "draw",
        "format",
        "getVoicesWithinMeasure",
        "getGraphicalVoiceEntriesPerVoice",
        "getRestFilledVexFlowStaveNotesPerVoice",
        "handleBeam",
        "handleTuplet",
        "finalizeBeams",
        "finalizeTuplets",
        "layoutStaffEntry",
        "graphicalMeasureCreatedCalculations",
        "createArticulations",
        "createOrnaments",
        "createFingerings",
        "lineTo",
        "getVFStave",
        "updateInstructionWidth"
    ],
    "classes": [
        "VexFlowMultiRestMeasure"
    ]
}