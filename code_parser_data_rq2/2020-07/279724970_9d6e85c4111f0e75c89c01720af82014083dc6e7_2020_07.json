{
    "identifiers": [
        "exports",
        "exports",
        "exports",
        "exports",
        "require",
        "_interopRequireDefault",
        "_userModel",
        "require",
        "_interopRequireDefault",
        "_dotenv",
        "require",
        "_interopRequireDefault",
        "_jsonwebtoken",
        "require",
        "_interopRequireDefault",
        "_bcryptjs",
        "require",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "fn",
        "fn",
        "arguments",
        "resolve",
        "reject",
        "key",
        "arg",
        "gen",
        "key",
        "arg",
        "info",
        "error",
        "reject",
        "error",
        "info",
        "resolve",
        "value",
        "value",
        "value",
        "step",
        "value",
        "err",
        "step",
        "err",
        "step",
        "_dotenv2",
        "process",
        "exports",
        "_asyncToGenerator",
        "regeneratorRuntime",
        "_callee",
        "req",
        "res",
        "regeneratorRuntime",
        "_callee$",
        "_context",
        "_context",
        "_context",
        "_context",
        "_context",
        "_userModel2",
        "req",
        "user",
        "_context",
        "res",
        "user",
        "_context",
        "_context",
        "_context",
        "_context",
        "_context",
        "res",
        "_context",
        "_callee",
        "getLoginUser",
        "_x",
        "_x2",
        "_ref",
        "arguments",
        "exports",
        "_asyncToGenerator",
        "regeneratorRuntime",
        "_callee2",
        "req",
        "res",
        "regeneratorRuntime",
        "_callee2$",
        "_context2",
        "_context2",
        "_context2",
        "_context2",
        "_req$body",
        "req",
        "email",
        "_req$body",
        "password",
        "_req$body",
        "_context2",
        "_userModel2",
        "email",
        "user",
        "_context2",
        "user",
        "_context2",
        "_context2",
        "res",
        "_context2",
        "_bcryptjs2",
        "password",
        "user",
        "isMatch",
        "_context2",
        "isMatch",
        "res",
        "payload",
        "user",
        "_jsonwebtoken2",
        "payload",
        "secret",
        "err",
        "token",
        "err",
        "err",
        "res",
        "token",
        "_context2",
        "_context2",
        "_context2",
        "_context2",
        "_context2",
        "res",
        "_context2",
        "_callee2",
        "loginUser",
        "_x3",
        "_x4",
        "_ref2",
        "arguments",
        "exports",
        "validationRules",
        "method",
        "method",
        "_expressValidator",
        "_expressValidator"
    ],
    "literals": [
        "'use strict'",
        "\"__esModule\"",
        "'../models/userModel'",
        "'dotenv'",
        "'jsonwebtoken'",
        "'bcryptjs'",
        "'express-validator'",
        "\"next\"",
        "\"throw\"",
        "\"next\"",
        "'-password'",
        "'catch'",
        "'Internal server error'",
        "'end'",
        "'return'",
        "'No such emails'",
        "'invalid credentials'",
        "'10h'",
        "'catch'",
        "'Internal server error'",
        "'end'",
        "'userLogin'",
        "'email'",
        "'Please include a valid email.'",
        "'password'"
    ],
    "variables": [
        "_userModel",
        "_userModel2",
        "_dotenv",
        "_dotenv2",
        "_jsonwebtoken",
        "_jsonwebtoken2",
        "_bcryptjs",
        "_bcryptjs2",
        "_expressValidator",
        "gen",
        "info",
        "value",
        "secret",
        "getLoginUser",
        "_ref",
        "user",
        "loginUser",
        "_ref2",
        "_req$body",
        "email",
        "password",
        "user",
        "isMatch",
        "payload",
        "validationRules"
    ],
    "comments": [
        "#__PURE__",
        "#__PURE__",
        "check if email exists",
        "create payload with user id",
        "create jwt with payload",
        "email required",
        "password must be at least 6 chars long",
        "# sourceMappingURL=authController.js.map"
    ],
    "docstrings": [],
    "functions": [
        "_interopRequireDefault",
        "_asyncToGenerator",
        "step"
    ],
    "classes": []
}