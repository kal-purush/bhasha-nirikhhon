{
    "identifiers": [
        "dom5",
        "ParsedHtmlDocument",
        "Document",
        "Element",
        "Position",
        "SourceRange",
        "Severity",
        "Warning",
        "HtmlRule",
        "registry",
        "stripWhitespace",
        "stripIndent",
        "levenshtein",
        "isDatabindingTemplate",
        "HtmlRule",
        "stripIndent",
        "parsedDoc",
        "elementReferences",
        "dom5",
        "parsedDoc",
        "isDatabindingTemplate",
        "t",
        "parsedDoc",
        "t",
        "elementReferences",
        "node",
        "node",
        "node",
        "elements",
        "elements",
        "attr",
        "node",
        "attr",
        "attr",
        "databindingRanges",
        "r",
        "contains",
        "r",
        "isFullDataBinding",
        "name",
        "name",
        "name",
        "name",
        "isAttribute",
        "name",
        "name",
        "v",
        "v",
        "attr",
        "isAttribute",
        "warnings",
        "stripWhitespace",
        "attr",
        "attr",
        "Severity",
        "parsedDoc",
        "node",
        "attr",
        "name",
        "isAttribute",
        "element",
        "element",
        "isAttribute",
        "sharedAttributes",
        "sharedProperties",
        "shared",
        "name",
        "allowedBindings",
        "b",
        "b",
        "name",
        "found",
        "closestOption",
        "name",
        "isAttribute",
        "element",
        "isFullDataBinding",
        "suggestion",
        "suggestion",
        "isAttribute",
        "warnings",
        "stripWhitespace",
        "node",
        "bindingType",
        "name",
        "suggestion",
        "Severity",
        "parsedDoc",
        "node",
        "attr",
        "warnings",
        "position",
        "comparePositionAndRange",
        "position",
        "position",
        "includeEdges",
        "includeEdges",
        "includeEdges",
        "includeEdges",
        "includeEdges",
        "position",
        "position",
        "position",
        "includeEdges",
        "position",
        "position",
        "position",
        "includeEdges",
        "position",
        "position",
        "name",
        "isAttribute",
        "element",
        "element",
        "a",
        "a",
        "sharedAttributes",
        "element",
        "a",
        "a",
        "sharedProperties",
        "minBy",
        "attributeOptions",
        "option",
        "levenshtein",
        "name",
        "option",
        "minBy",
        "propertyOptions",
        "option",
        "levenshtein",
        "name",
        "option",
        "closestAttribute",
        "closestProperty",
        "isAttribute",
        "closestAttribute",
        "closestProperty",
        "closestAttribute",
        "closestProperty",
        "closestAttribute",
        "closestProperty",
        "it",
        "score",
        "t",
        "val",
        "it",
        "score",
        "val",
        "minScore",
        "valScore",
        "minScore",
        "minScore",
        "valScore",
        "min",
        "val",
        "registry",
        "SetUnknownAttribute"
    ],
    "literals": [
        "'dom5'",
        "'polymer-analyzer/lib/html/html-document'",
        "'polymer-analyzer/lib/model/model'",
        "'polymer-analyzer/lib/warning/warning'",
        "'../html/rule'",
        "'../registry'",
        "'../util'",
        "'strip-indent'",
        "'fast-levenshtein'",
        "'./matchers'",
        "'title'",
        "'lang'",
        "'translate'",
        "'dir'",
        "'hidden'",
        "'tabindex'",
        "'accesskey'",
        "'draggable'",
        "'spellcheck'",
        "'innertext'",
        "'contextmenu'",
        "'contenteditable'",
        "'id'",
        "'class'",
        "'slot'",
        "'itemid'",
        "'itemprop'",
        "'itemref'",
        "'itemscope'",
        "'itemtype'",
        "'is'",
        "'style'",
        "'aria-activedescendant'",
        "'aria-atomic'",
        "'aria-autocomplete'",
        "'aria-busy'",
        "'aria-checked'",
        "'aria-controls'",
        "'aria-describedby'",
        "'aria-disabled'",
        "'aria-dropeffect'",
        "'aria-expanded'",
        "'aria-flowto'",
        "'aria-grabbed'",
        "'aria-haspopup'",
        "'aria-hidden'",
        "'aria-invalid'",
        "'aria-label'",
        "'aria-labelledby'",
        "'aria-level'",
        "'aria-live'",
        "'aria-multiline'",
        "'aria-multiselectable'",
        "'aria-orientation'",
        "'aria-owns'",
        "'aria-posinset'",
        "'aria-pressed'",
        "'aria-readonly'",
        "'aria-relevant'",
        "'aria-required'",
        "'aria-selected'",
        "'aria-setsize'",
        "'aria-sort'",
        "'aria-valuemax'",
        "'aria-valuemin'",
        "'aria-valuenow'",
        "'aria-valuetext'",
        "'role'",
        "'title'",
        "'lang'",
        "'translate'",
        "'dir'",
        "'hidden'",
        "'tab-index'",
        "'access-key'",
        "'draggable'",
        "'spellcheck'",
        "'inner-text'",
        "'context-menu'",
        "'content-editable'",
        "'id'",
        "'class-name'",
        "'slot'",
        "'is'",
        "'set-unknown-attribute'",
        "Warns when setting undeclared properties or attributes in HTML.\n\n      This rule will check use of attributes in HTML on custom elements, as well\n      as databinding into attributes and properties in polymer databinding\n      contexts.\n\n      This catches misspellings, forgetting to convert camelCase to kebab-case,\n      and binding to attributes like class and style like they were properties.\n\n      Currently only checks custom elements, as we don't yet have the necessary\n      metadata on native elements in a convenient format.",
        "'element-reference'",
        "'element'",
        "'$'",
        "'data-'",
        "data-* attributes must be accessed as attributes.\n                  i.e. you must write:  ${attr.name}$=\"${attr.value}\"",
        "'on'",
        "'$'",
        "'an attribute'",
        "'a property'",
        "${node.tagName} elements do not have ${bindingType}",
        "named ${name}. Consider instead:  ${suggestion.name}",
        "string"
    ],
    "variables": [
        "sharedAttributes",
        "sharedProperties",
        "warnings",
        "elementReferences",
        "databindingRanges",
        "node",
        "elements",
        "element",
        "name",
        "isAttribute",
        "isFullDataBinding",
        "allowedBindings",
        "shared",
        "found",
        "suggestion",
        "bindingType",
        "attributeOptions",
        "propertyOptions",
        "closestAttribute",
        "closestProperty",
        "min",
        "minScore",
        "valScore"
    ],
    "comments": [
        "From https://html.spec.whatwg.org/multipage/dom.html#htmlelement",
        "https://html.spec.whatwg.org/multipage/interaction.html#elementcontenteditable",
        "https://dom.spec.whatwg.org/#interface-element",
        "https://html.spec.whatwg.org/multipage/dom.html#global-attributes",
        "aria-* http://www.w3.org/TR/wai-aria/states_and_properties#state_prop_def",
        "role: http://www.w3.org/TR/wai-aria/host_languages#host_general_role",
        "From https://html.spec.whatwg.org/multipage/dom.html#htmlelement",
        "https://html.spec.whatwg.org/multipage/interaction.html#elementcontenteditable",
        "https://dom.spec.whatwg.org/#interface-element",
        "It doesn't matter right now, as there's no way to have an inline html",
        "document, but this query should specify that it doesn't want to match",
        "inline documents.",
        "It's a databinding if it matches the regex and the reference is",
        "contained within a databinding template.",
        "This is an open namespace.",
        "TODO(https://github.com/Polymer/polymer-linter/issues/34)",
        "TODO(rictic): export this function from analyzer rather than copy-pasting it.",
        "Usually we want to include the edges of a range as part",
        "of the thing, but sometimes, e.g. for start and end tags,",
        "we'd rather not."
    ],
    "docstrings": [
        "* @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt",
        "* If the position is inside the range, returns 0. If it comes before the range,\n * it returns -1. If it comes after the range, it returns 1."
    ],
    "functions": [
        "checkDocument",
        "contains",
        "comparePositionAndRange",
        "closestOption",
        "minBy"
    ],
    "classes": [
        "SetUnknownAttribute"
    ]
}