{
    "identifiers": [
        "NodeFileSystem",
        "NodePath",
        "FilePath",
        "describe",
        "NodeFileSystem",
        "NodePath",
        "path",
        "callback",
        "err",
        "files",
        "path",
        "callback",
        "callback",
        "callback",
        "callback",
        "callback",
        "path",
        "path",
        "callback",
        "err",
        "stats",
        "path",
        "callback",
        "callback",
        "filename",
        "callback",
        "err",
        "data",
        "callback",
        "filename",
        "it",
        "fs",
        "expect",
        "paths",
        "NodePath",
        "NodePath",
        "NodePath",
        "NodePath",
        "it",
        "expect",
        "fs",
        "NodePath",
        "it",
        "expect",
        "fs",
        "fs"
    ],
    "literals": [
        "'../../src/Node/NodeFileSystem'",
        "'../../src/Node/NodePath'",
        "'../../src/FileSystem/Path'",
        "'NodeFileSystem'",
        "'/one/two/three'",
        "string",
        "string",
        "'/one/two/three'",
        "'x.true'",
        "'y.false'",
        "'z.true'",
        "'/one/two'",
        "'a.false'",
        "'b.true'",
        "'/one'",
        "'/'",
        "'b.true'",
        "No such directory: ${path}",
        "string",
        "'.'",
        "string",
        "string",
        "Content of ${filename}",
        "'can find all files matching the given pattern in ancestor directories'",
        "'/one/two/three/x.true'",
        "'/one/two/three/z.true'",
        "'/one/two/b.true'",
        "'/b.true'",
        "'can find the first file matching the given pattern in ancestor directories'",
        "'/one/two/a.false'",
        "'can read a file'",
        "'Content of /one/two/a.false'"
    ],
    "variables": [
        "fs",
        "paths"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "readdir",
        "stat",
        "readFile"
    ],
    "classes": []
}