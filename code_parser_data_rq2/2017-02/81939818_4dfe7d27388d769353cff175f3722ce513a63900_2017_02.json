{
    "identifiers": [
        "logging",
        "random",
        "gzip",
        "json",
        "shutil",
        "datetime",
        "ConfigParser",
        "time",
        "time",
        "sleep",
        "boto3",
        "botocore",
        "boto3",
        "resource",
        "ConfigParser",
        "RawConfigParser",
        "config_parser",
        "read",
        "config_parser",
        "getint",
        "config_parser",
        "get",
        "config_parser",
        "get",
        "config_parser",
        "getint",
        "config_parser",
        "getint",
        "config_parser",
        "get",
        "file_name",
        "bucket_name",
        "logging",
        "info",
        "open",
        "file_name",
        "file_data",
        "S3_CLIENT",
        "Bucket",
        "bucket_name",
        "put_object",
        "Key",
        "file_name",
        "Body",
        "file_data",
        "botocore",
        "exceptions",
        "ClientError",
        "e",
        "logging",
        "error",
        "bucket_name",
        "e",
        "accuracy",
        "name",
        "accuracy",
        "name",
        "candidate",
        "random",
        "randint",
        "random",
        "choice",
        "FAKE_CANDIDATES",
        "get_candidate",
        "candidate_accuracy",
        "name",
        "random",
        "randint",
        "get_candidate",
        "candidate_accuracy",
        "name",
        "candidates",
        "datetime",
        "datetime",
        "fromtimestamp",
        "time",
        "strftime",
        "TIMESTAMP_FORMAT",
        "FILENAME_PATTERN",
        "format",
        "stamp",
        "open",
        "json_file_name",
        "json_file",
        "json",
        "dump",
        "candidates",
        "json_file",
        "open",
        "json_file_name",
        "f_in",
        "gzip",
        "open",
        "gzip_file_name",
        "format",
        "stamp",
        "f_out",
        "shutil",
        "copyfileobj",
        "f_in",
        "f_out",
        "gzip_file_name",
        "random",
        "random",
        "rnd",
        "ANOMALIES_FREQUENCY",
        "logging",
        "debug",
        "candidates_list",
        "append",
        "get_better_candidate",
        "candidates_list",
        "append",
        "get_normal_candidate",
        "len",
        "candidates_list",
        "PACKAGE_SIZE",
        "logging",
        "debug",
        "dump_candidates_to_gzipped_json",
        "candidates_list",
        "upload_file_to_s3",
        "gzipped_json_filename",
        "BUCKET_NAME",
        "logging",
        "debug",
        "candidates_list",
        "candidates_list",
        "sleep",
        "UPLOAD_INTERVAL",
        "main"
    ],
    "literals": [
        "'John Smiths'",
        "'Nicolas Robins'",
        "'Andrew Robinson'",
        "'James Floyd'",
        "'Steven Harris'",
        "'Wendy Smart'",
        "'Joe Hampton'",
        "'Ralph Robertson'",
        "'Alex Stevenson'",
        "'Ted Kowalsky'",
        "'Fred Novak'",
        "'John Dummy'",
        "'s3'",
        "'candidates_feed.cfg'",
        "'General'",
        "'package-size'",
        "'General'",
        "'filename-pattern'",
        "'General'",
        "'timestamp-format'",
        "'General'",
        "'anomalies-frequency'",
        "'General'",
        "'upload-interval'",
        "'AWS'",
        "'bucket-name'",
        "\"uploading file to s3\"",
        "'rb'",
        "\"Unable to put object to S3: %s. Error occurred: %s\"",
        "'accuracy'",
        "'name'",
        "'Wojciech Czyz'",
        "'temp_file.json'",
        "'w'",
        "'rb'",
        "'wb'",
        "\"Generating candidate with better accuracy\"",
        "\"Package size reached - creating and uploading file...\"",
        "\"candidates list: %s\"",
        "\"Candidates list: %s\"",
        "'__main__'"
    ],
    "variables": [
        "FAKE_CANDIDATES",
        "S3_CLIENT",
        "config_parser",
        "PACKAGE_SIZE",
        "FILENAME_PATTERN",
        "TIMESTAMP_FORMAT",
        "ANOMALIES_FREQUENCY",
        "UPLOAD_INTERVAL",
        "BUCKET_NAME",
        "candidate",
        "candidate",
        "candidate",
        "candidate_accuracy",
        "name",
        "candidate_accuracy",
        "name",
        "stamp",
        "json_file_name",
        "gzip_file_name",
        "candidates_list",
        "rnd",
        "gzipped_json_filename",
        "candidates_list"
    ],
    "comments": [
        "creating s3 client",
        "pylint: disable=C0103",
        "infinite loop that executes main script functions till keyboard interrupt"
    ],
    "docstrings": [
        "\"\"\"This module generates random candidates data and\nsends packed gzip in JSON format to AWS S3 bucket \"\"\"",
        "\"\"\"\n    Uploads file to amazon S3 bucket\n\n    Args:\n        file_name (str): name of a file to upload\n        bucket_name (str): name of a target S3 bucket where file will be stored\n    \"\"\"",
        "\"\"\"\n    Returns candidate entry with given accuracy and name\n\n    Args:\n        accuracy (int): Candidate's accuracy value\n        name (str): Candidate's full name\n\n    Returns:\n        dict: Dictionary containing candidate's name and accuracy\n    \"\"\"",
        "\"\"\"\n    Returns candidate entry with lower accuracy values\n\n    Returns:\n        dict: Dictionary containing candidate's name and accuracy\n\n    \"\"\"",
        "\"\"\"\n    Returns candidate entry with high accuracy values\n\n    Returns:\n        dict: Dictionary containing candidate's name and accuracy\n    \"\"\"",
        "\"\"\"\n    Creates a compressed .gzip file from JSON data\n\n    Args:\n        candidates (list): list of candidates dictionary entries\n\n    Returns:\n        str: generated name of gzip file where the list of candidates is stored\n    \"\"\"",
        "\"\"\"\n    Main function that generates the feed of candidates and uploads aggregated file to s3\n    \"\"\""
    ],
    "functions": [
        "upload_file_to_s3",
        "get_candidate",
        "get_normal_candidate",
        "get_better_candidate",
        "dump_candidates_to_gzipped_json",
        "main"
    ],
    "classes": []
}