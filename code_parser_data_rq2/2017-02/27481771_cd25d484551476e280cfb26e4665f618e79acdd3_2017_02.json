{
    "identifiers": [
        "org",
        "vamdc",
        "portal",
        "session",
        "queryLog",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "java",
        "io",
        "InputStreamReader",
        "java",
        "io",
        "UnsupportedEncodingException",
        "java",
        "net",
        "URLEncoder",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "http",
        "HttpException",
        "org",
        "apache",
        "http",
        "HttpResponse",
        "org",
        "apache",
        "http",
        "client",
        "ClientProtocolException",
        "org",
        "apache",
        "http",
        "client",
        "HttpClient",
        "org",
        "apache",
        "http",
        "impl",
        "client",
        "HttpClientBuilder",
        "org",
        "apache",
        "http",
        "client",
        "config",
        "RequestConfig",
        "org",
        "apache",
        "http",
        "client",
        "methods",
        "HttpGet",
        "org",
        "jboss",
        "seam",
        "ScopeType",
        "org",
        "jboss",
        "seam",
        "annotations",
        "In",
        "org",
        "jboss",
        "seam",
        "annotations",
        "Name",
        "org",
        "jboss",
        "seam",
        "annotations",
        "Scope",
        "org",
        "jboss",
        "seam",
        "web",
        "ServletContexts",
        "org",
        "vamdc",
        "portal",
        "Settings",
        "org",
        "vamdc",
        "portal",
        "entity",
        "security",
        "User",
        "org",
        "vamdc",
        "portal",
        "session",
        "security",
        "UserInfo",
        "Name",
        "Scope",
        "ScopeType",
        "PAGE",
        "uuids",
        "retry",
        "retryInterval",
        "In",
        "auth",
        "node",
        "uuids",
        "containsKey",
        "node",
        "QueryStoreResponse",
        "STATUS_UNKNOWN",
        "uuids",
        "get",
        "node",
        "token",
        "node",
        "result",
        "error",
        "count",
        "uuids",
        "containsKey",
        "node",
        "uuids",
        "get",
        "node",
        "getStatus",
        "equals",
        "QueryStoreResponse",
        "STATUS_SUCCESS",
        "result",
        "equals",
        "count",
        "retry",
        "result",
        "doRequest",
        "token",
        "getUserEmail",
        "getIpAdress",
        "sleep",
        "retryInterval",
        "count",
        "e",
        "error",
        "e",
        "printStackTrace",
        "count",
        "retry",
        "e",
        "error",
        "e",
        "printStackTrace",
        "count",
        "retry",
        "e",
        "error",
        "e",
        "printStackTrace",
        "count",
        "retry",
        "e",
        "error",
        "e",
        "printStackTrace",
        "count",
        "retry",
        "setUuid",
        "node",
        "result",
        "error",
        "node",
        "result",
        "error",
        "error",
        "result",
        "equals",
        "uuids",
        "put",
        "node",
        "QueryStoreResponse",
        "STATUS_SUCCESS",
        "result",
        "uuids",
        "put",
        "node",
        "QueryStoreResponse",
        "STATUS_UNKNOWN",
        "result",
        "uuids",
        "put",
        "node",
        "QueryStoreResponse",
        "STATUS_ERROR",
        "error",
        "token",
        "email",
        "userIp",
        "requestConfig",
        "RequestConfig",
        "custom",
        "setConnectTimeout",
        "build",
        "httpClient",
        "HttpClientBuilder",
        "create",
        "setDefaultRequestConfig",
        "requestConfig",
        "build",
        "request",
        "getRequest",
        "token",
        "email",
        "userIp",
        "request",
        "addHeader",
        "Settings",
        "PORTAL_USER_AGENT",
        "get",
        "result",
        "response",
        "httpClient",
        "execute",
        "request",
        "response",
        "getStatusLine",
        "getStatusCode",
        "rd",
        "response",
        "getEntity",
        "getContent",
        "uuid",
        "uuid",
        "rd",
        "readLine",
        "result",
        "append",
        "uuid",
        "response",
        "getStatusLine",
        "getStatusCode",
        "response",
        "getStatusLine",
        "getStatusCode",
        "response",
        "getStatusLine",
        "getStatusCode",
        "response",
        "getStatusLine",
        "getStatusCode",
        "response",
        "getStatusLine",
        "getStatusCode",
        "response",
        "getStatusLine",
        "getStatusCode",
        "result",
        "toString",
        "token",
        "email",
        "userIp",
        "result",
        "Settings",
        "QUERYSTORE_ASSOCIATION_URL",
        "get",
        "result",
        "result",
        "token",
        "email",
        "userIp",
        "URLEncoder",
        "encode",
        "Settings",
        "PORTAL_USER_AGENT",
        "get",
        "Settings",
        "PORTAL_VERSION",
        "get",
        "result",
        "result",
        "ipAddress",
        "ServletContexts",
        "instance",
        "getRequest",
        "getHeader",
        "ipAddress",
        "ipAddress",
        "ServletContexts",
        "instance",
        "getRequest",
        "getRemoteAddr",
        "ipAddress",
        "u",
        "auth",
        "getUser",
        "u",
        "u",
        "getEmail"
    ],
    "literals": [
        "\"querystore\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"ClientProtocolException\"",
        "\"IOException\"",
        "\"InterruptedException\"",
        "\"HttpException\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"User-Agent\"",
        "\"\"",
        "\"\"",
        "\"Server error : \"",
        "\"Client error : \"",
        "\"queryToken=\"",
        "\"&email=\"",
        "\"&userIp=\"",
        "\"&usedClient=\"",
        "\"-\"",
        "\"UTF-8\"",
        "\"X-FORWARDED-FOR\"",
        "\"unregistered@portal.vamdc.eu\""
    ],
    "variables": [
        "auth"
    ],
    "comments": [
        "not requested yet",
        "not tried yet or previous try failed",
        "no exception in process",
        "found",
        "not found",
        "failed",
        "empty response",
        "server error",
        "client error"
    ],
    "docstrings": [
        "* Map storing last uuid for a given node\n\t * key = node id",
        "* number of requests sent to querystore",
        "* time between two request to the querystore, in milliseconds",
        "* return result of querystore for a request\n\t * @return",
        "* Ask a permanent identifier for the request identified by the token string \n\t * @param token  token of a head request",
        "* add a uuid in the uuid map\n\t * @param node\t\t\tvamdc node id\n\t * @param result\t\tuuid found\n\t * @param error\t\t\terror message",
        "* Send an HTTP request to the query store to get a UUID corresponding to a head token\n\t * @param token    token of a head request\n\t * @param email    email of registered user\n\t * @param userIp   ip of user asking\n\t * @return\n\t * @throws ClientProtocolException\n\t * @throws IOException\n\t * @throws HttpException",
        "* Build the URL of the HTTP request sent to the query store\n\t * @param token\n\t * @param email\n\t * @param userIp\n\t * @return\n\t * @throws UnsupportedEncodingException",
        "* Get IP address of the user that is asking for the association\n\t * @return",
        "* Return user email if he is logged in, empty string if not\n\t * @return"
    ],
    "functions": [
        "QueryStoreResponse",
        "getNodeUuid",
        "associateRequest",
        "setUuid",
        "doRequest",
        "getRequest",
        "getIpAdress",
        "getUserEmail"
    ],
    "classes": [
        "QueryStore"
    ]
}