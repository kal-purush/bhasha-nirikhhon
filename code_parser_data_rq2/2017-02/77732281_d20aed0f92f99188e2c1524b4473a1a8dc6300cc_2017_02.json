{
    "identifiers": [
        "ElementFinder"
    ],
    "literals": [
        "'use strict'",
        "'protractor'"
    ],
    "variables": [
        "numerator"
    ],
    "comments": [
        "eslint valid-jsdoc: 0, no-magic-numbers: 0, \"spaced-comment\": 1, eol-last: 1",
        "#############################################################################"
    ],
    "docstrings": [
        "* Created by marketionist on 31.12.2016",
        "* Get the second matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).second()\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let second = element.all(by.css('.items li')).second();\n     * expect(second.getText()).toBe('Second');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let second = $$('.items li').second();\n     * expect(second.getText()).toBe('Second');\n     *\n     * @returns {ElementFinder} finder representing the second matching element",
        "* Get the third matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).third(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let third = element.all(by.css('.items li')).third();\n     * expect(third.getText()).toBe('Third');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let third = $$('.items li').third();\n     * expect(third.getText()).toBe('Third');\n     *\n     * @returns {ElementFinder} finder representing the third matching element",
        "* Get the fourth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).fourth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let fourth = element.all(by.css('.items li')).fourth();\n     * expect(fourth.getText()).toBe('Fourth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let fourth = $$('.items li').fourth();\n     * expect(fourth.getText()).toBe('Fourth');\n     *\n     * @returns {ElementFinder} finder representing the fourth matching element",
        "* Get the fifth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).fifth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let fifth = element.all(by.css('.items li')).fifth();\n     * expect(fifth.getText()).toBe('Fifth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let fifth = $$('.items li').fifth();\n     * expect(fifth.getText()).toBe('Fifth');\n     *\n     * @returns {ElementFinder} finder representing the fifth matching element",
        "* Get the sixth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).sixth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let sixth = element.all(by.css('.items li')).sixth();\n     * expect(sixth.getText()).toBe('Sixth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let sixth = $$('.items li').sixth();\n     * expect(sixth.getText()).toBe('Sixth');\n     *\n     * @returns {ElementFinder} finder representing the sixth matching element",
        "* Get the seventh matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).seventh(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let seventh = element.all(by.css('.items li')).seventh();\n     * expect(seventh.getText()).toBe('Seventh');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let seventh = $$('.items li').seventh();\n     * expect(seventh.getText()).toBe('Seventh');\n     *\n     * @returns {ElementFinder} finder representing the seventh matching element",
        "* Get the eighth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).eighth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let eighth = element.all(by.css('.items li')).eighth();\n     * expect(eighth.getText()).toBe('Eighth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let eighth = $$('.items li').eighth();\n     * expect(eighth.getText()).toBe('Eighth');\n     *\n     * @returns {ElementFinder} finder representing the eighth matching element",
        "* Get the ninth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).ninth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let ninth = element.all(by.css('.items li')).ninth();\n     * expect(ninth.getText()).toBe('Ninth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let ninth = $$('.items li').ninth();\n     * expect(ninth.getText()).toBe('Ninth');\n     *\n     * @returns {ElementFinder} finder representing the ninth matching element",
        "* Get the tenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).tenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     * </ul>\n     *\n     * @example\n     * let tenth = element.all(by.css('.items li')).tenth();\n     * expect(tenth.getText()).toBe('Tenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let tenth = $$('.items li').tenth();\n     * expect(tenth.getText()).toBe('Tenth');\n     *\n     * @returns {ElementFinder} finder representing the tenth matching element",
        "* Get the eleventh matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).eleventh(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let eleventh = element.all(by.css('.items li')).eleventh();\n     * expect(eleventh.getText()).toBe('Eleventh');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let eleventh = $$('.items li').eleventh();\n     * expect(eleventh.getText()).toBe('Eleventh');\n     *\n     * @returns {ElementFinder} finder representing the eleventh matching element",
        "* Get the twelfth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).twelfth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let twelfth = element.all(by.css('.items li')).twelfth();\n     * expect(twelfth.getText()).toBe('Twelfth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let twelfth = $$('.items li').twelfth();\n     * expect(twelfth.getText()).toBe('Twelfth');\n     *\n     * @returns {ElementFinder} finder representing the twelfth matching element",
        "* Get the thirteenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).thirteenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let thirteenth = element.all(by.css('.items li')).thirteenth();\n     * expect(thirteenth.getText()).toBe('Thirteenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let thirteenth = $$('.items li').thirteenth();\n     * expect(thirteenth.getText()).toBe('Thirteenth');\n     *\n     * @returns {ElementFinder} finder representing the thirteenth matching element",
        "* Get the fourteenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).fourteenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let fourteenth = element.all(by.css('.items li')).fourteenth();\n     * expect(fourteenth.getText()).toBe('Fourteenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let fourteenth = $$('.items li').fourteenth();\n     * expect(fourteenth.getText()).toBe('Fourteenth');\n     *\n     * @returns {ElementFinder} finder representing the fourteenth matching element",
        "* Get the fifteenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).fifteenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let fifteenth = element.all(by.css('.items li')).fifteenth();\n     * expect(fifteenth.getText()).toBe('Fifteenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let fifteenth = $$('.items li').fifteenth();\n     * expect(fifteenth.getText()).toBe('Fifteenth');\n     *\n     * @returns {ElementFinder} finder representing the fifteenth matching element",
        "* Get the sixteenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).sixteenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let sixteenth = element.all(by.css('.items li')).sixteenth();\n     * expect(sixteenth.getText()).toBe('Sixteenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let sixteenth = $$('.items li').sixteenth();\n     * expect(sixteenth.getText()).toBe('Sixteenth');\n     *\n     * @returns {ElementFinder} finder representing the sixteenth matching element",
        "* Get the seventeenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).seventeenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let seventeenth = element.all(by.css('.items li')).seventeenth();\n     * expect(seventeenth.getText()).toBe('Seventeenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let seventeenth = $$('.items li').seventeenth();\n     * expect(seventeenth.getText()).toBe('Seventeenth');\n     *\n     * @returns {ElementFinder} finder representing the seventeenth matching element",
        "* Get the eighteenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).eighteenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let eighteenth = element.all(by.css('.items li')).eighteenth();\n     * expect(eighteenth.getText()).toBe('Eighteenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let eighteenth = $$('.items li').eighteenth();\n     * expect(eighteenth.getText()).toBe('Eighteenth');\n     *\n     * @returns {ElementFinder} finder representing the eighteenth matching element",
        "* Get the nineteenth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).nineteenth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let nineteenth = element.all(by.css('.items li')).nineteenth();\n     * expect(nineteenth.getText()).toBe('Nineteenth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let nineteenth = $$('.items li').nineteenth();\n     * expect(nineteenth.getText()).toBe('Nineteenth');\n     *\n     * @returns {ElementFinder} finder representing the nineteenth matching element",
        "* Get the twentieth matching element for the ElementArrayFinder. This does not\n     * actually retrieve the underlying element.\n     *\n     * @alias element.all(locator).twentieth(locator)\n     * @view\n     * <ul class=\"items\">\n     *   <li>First</li>\n     *   <li>Second</li>\n     *   <li>Third</li>\n     *   <li>Fourth</li>\n     *   <li>Fifth</li>\n     *   <li>Sixth</li>\n     *   <li>Seventh</li>\n     *   <li>Eighth</li>\n     *   <li>Ninth</li>\n     *   <li>Tenth</li>\n     *   <li>Eleventh</li>\n     *   <li>Twelfth</li>\n     *   <li>Thirteenth</li>\n     *   <li>Fourteenth</li>\n     *   <li>Fifteenth</li>\n     *   <li>Sixteenth</li>\n     *   <li>Seventeenth</li>\n     *   <li>Eighteenth</li>\n     *   <li>Nineteenth</li>\n     *   <li>Twentieth</li>\n     * </ul>\n     *\n     * @example\n     * let twentieth = element.all(by.css('.items li')).twentieth();\n     * expect(twentieth.getText()).toBe('Twentieth');\n     *\n     * // Or using the shortcut $$() notation instead of element.all(by.css()):\n     *\n     * let twentieth = $$('.items li').twentieth();\n     * expect(twentieth.getText()).toBe('Twentieth');\n     *\n     * @returns {ElementFinder} finder representing the twentieth matching element"
    ],
    "functions": [
        "second",
        "third",
        "fourth",
        "fifth",
        "sixth",
        "seventh",
        "eighth",
        "ninth",
        "tenth",
        "eleventh",
        "twelfth",
        "thirteenth",
        "fourteenth",
        "fifteenth",
        "sixteenth",
        "seventeenth",
        "eighteenth",
        "nineteenth",
        "twentieth"
    ],
    "classes": []
}