{
    "identifiers": [
        "print_function",
        "os",
        "sys",
        "errno",
        "platform",
        "webbrowser",
        "argparse",
        "json",
        "subprocess32",
        "subprocess",
        "subprocess32",
        "DEVNULL",
        "ImportError",
        "subprocess",
        "DEVNULL",
        "ImportError",
        "open",
        "os",
        "devnull",
        "subprocess32",
        "subprocess",
        "apt",
        "ImportError",
        "os",
        "name",
        "sys",
        "platform",
        "platform",
        "machine",
        "endswith",
        "len",
        "sys",
        "argv",
        "sys",
        "version_info",
        "sys",
        "version_info",
        "os",
        "path",
        "isfile",
        "open",
        "CONFIG_FILE",
        "DEFAULT_REPO",
        "json",
        "dump",
        "CONFIGURATION_DATA",
        "CONFIG_FILE",
        "open",
        "CONFIG_FILE",
        "json",
        "load",
        "CONFIG_FILE",
        "branchname",
        "subprocess",
        "call",
        "branchname",
        "FileNotFoundError",
        "code",
        "format",
        "branchname",
        "subprocess",
        "call",
        "FileNotFoundError",
        "code",
        "config",
        "git_reset",
        "config",
        "os",
        "unlink",
        "FileNotFoundError",
        "errmsg",
        "format",
        "errmsg",
        "git_reset",
        "subprocess",
        "call",
        "code",
        "compat",
        "build_deps",
        "to_install",
        "extend",
        "RUNTIME_DEPS",
        "compat",
        "to_install",
        "append",
        "build_deps",
        "to_install",
        "extend",
        "to_install",
        "append",
        "build_deps",
        "to_install",
        "extend",
        "to_install",
        "compat",
        "build_deps",
        "build_apt_reqs",
        "compat",
        "build_deps",
        "install_apt_list",
        "install_requirements",
        "package_names",
        "apt",
        "cache",
        "Cache",
        "IS_ROOT",
        "cache",
        "update",
        "cache",
        "open",
        "pkg_name",
        "package_names",
        "install_apt_package",
        "cache",
        "cache",
        "pkg_name",
        "KeyError",
        "errmsg",
        "format",
        "errmsg",
        "IS_ROOT",
        "cache",
        "commit",
        "errmsg",
        "format",
        "errmsg",
        "cache",
        "close",
        "cache",
        "pkg",
        "pkg",
        "is_installed",
        "format",
        "pkg",
        "fullname",
        "cache",
        "pkg",
        "mark_install",
        "cache",
        "PyQt4",
        "ImportError",
        "PyQt5",
        "ImportError",
        "PyQt4",
        "PyQt5",
        "clear_screen",
        "INTRO",
        "format",
        "THIS_TITLE",
        "THIS_VERSION",
        "user_choice",
        "choice",
        "install_apt_reqs",
        "compat",
        "wait",
        "choice",
        "install_apt_reqs",
        "compat",
        "wait",
        "choice",
        "clear_screen",
        "clear_screen",
        "INTRO",
        "format",
        "THIS_TITLE",
        "THIS_VERSION",
        "root_warning",
        "is_pyqt5_available",
        "reqs",
        "reqs",
        "status",
        "user_choice",
        "choice",
        "update_install",
        "wait",
        "choice",
        "update_install",
        "is_pyqt5_available",
        "reqs",
        "install_apt_reqs",
        "compat",
        "reqs",
        "wait",
        "choice",
        "is_pyqt5_available",
        "reqs",
        "install_apt_reqs",
        "compat",
        "reqs",
        "wait",
        "choice",
        "clear_screen",
        "clear_screen",
        "INTRO",
        "format",
        "THIS_TITLE",
        "THIS_VERSION",
        "CONFIGURATION_DATA",
        "GITHUB_ROOT",
        "GIT_REPOS",
        "CONFIGURATION_DATA",
        "current_repo_url",
        "is_pyqt5_available",
        "reqs",
        "reqs",
        "status",
        "user_choice",
        "choice",
        "change_repo_menu",
        "open",
        "config_file",
        "json",
        "dump",
        "CONFIGURATION_DATA",
        "config_file",
        "choice",
        "webbrowser",
        "open",
        "current_repo_url",
        "choice",
        "switch_branch",
        "CONFIGURATION_DATA",
        "wait",
        "choice",
        "clear_screen",
        "clear_screen",
        "INTRO",
        "format",
        "THIS_TITLE",
        "THIS_VERSION",
        "CONFIGURATION_DATA",
        "repo",
        "GITHUB_ROOT",
        "GIT_REPOS",
        "repo",
        "current_repo_url",
        "is_pyqt5_available",
        "reqs",
        "reqs",
        "status",
        "user_choice",
        "choice",
        "choice",
        "choice",
        "choice",
        "choice",
        "repo",
        "clear_screen",
        "clear_screen",
        "INTRO",
        "format",
        "THIS_TITLE",
        "THIS_VERSION",
        "root_warning",
        "user_choice",
        "choice",
        "user_pick_yes_no",
        "reset_install",
        "git_reset",
        "wait",
        "choice",
        "user_pick_yes_no",
        "reset_install",
        "config",
        "wait",
        "choice",
        "user_pick_yes_no",
        "reset_install",
        "config",
        "git_reset",
        "wait",
        "choice",
        "clear_screen",
        "program",
        "fpath",
        "os",
        "path",
        "isfile",
        "fpath",
        "os",
        "access",
        "fpath",
        "os",
        "X_OK",
        "os",
        "path",
        "split",
        "program",
        "fpath",
        "is_exe",
        "program",
        "program",
        "path",
        "os",
        "environ",
        "split",
        "os",
        "pathsep",
        "path",
        "strip",
        "os",
        "path",
        "join",
        "path",
        "program",
        "is_exe",
        "exe_file",
        "exe_file",
        "interpreter",
        "interpreter",
        "RuntimeError",
        "is_pyqt5_available",
        "INTERACTIVE_MODE",
        "exit",
        "interpreter",
        "unix_which",
        "format",
        "cmd",
        "subprocess",
        "call",
        "cmd",
        "KeyboardInterrupt",
        "code",
        "code",
        "INTERACTIVE_MODE",
        "wait",
        "IS_WINDOWS",
        "os",
        "system",
        "os",
        "system",
        "INTERACTIVE_MODE",
        "user_choice_compat",
        "prompt",
        "PYTHON3_OK",
        "input",
        "prompt",
        "strip",
        "raw_input",
        "prompt",
        "strip",
        "prompt",
        "lower",
        "lower",
        "user_choice_compat",
        "prompt",
        "lower",
        "user_choice_compat",
        "prompt",
        "choice",
        "pick_yes",
        "choice",
        "pick_no",
        "user_choice",
        "choice",
        "pick_yes",
        "func",
        "path",
        "os",
        "chmod",
        "path",
        "func",
        "path",
        "os",
        "geteuid",
        "IS_ROOT",
        "tool",
        "was_found",
        "critical",
        "was_found",
        "format",
        "tool",
        "tool_warning",
        "tool",
        "critical",
        "tool",
        "critical",
        "critical",
        "format",
        "tool",
        "format",
        "tool",
        "tool",
        "subprocess",
        "call",
        "tool",
        "stdout",
        "DEVNULL",
        "stdin",
        "DEVNULL",
        "stderr",
        "DEVNULL",
        "OSError",
        "errmsg",
        "errmsg",
        "errno",
        "errno",
        "ENOENT",
        "is_tool_installed",
        "is_tool_installed",
        "is_tool_installed",
        "is_tool_installed",
        "is_tool_installed",
        "is_tool_installed",
        "os",
        "path",
        "isdir",
        "clear_screen",
        "INTRO",
        "format",
        "THIS_TITLE",
        "THIS_VERSION",
        "root_warning",
        "IS_WINDOWS",
        "IS_MAC",
        "apt",
        "is_git_installation",
        "tool_check",
        "GIT_INSTALLED",
        "tool_check",
        "DPKG_INSTALLED",
        "critical",
        "tool_check",
        "APTGET_INSTALLED",
        "critical",
        "tool_check",
        "APT_INSTALLED",
        "tool_check",
        "RPM_INSTALLED",
        "critical",
        "IS_WINDOWS",
        "IS_MAC",
        "GIT_INSTALLED",
        "is_git_installation",
        "GIT_INSTALLED",
        "user_choice",
        "choice",
        "run_app",
        "interpreter",
        "sys",
        "executable",
        "choice",
        "package_menu",
        "choice",
        "requirements_menu",
        "choice",
        "update_menu",
        "choice",
        "repo_menu",
        "choice",
        "maintenance_menu",
        "choice",
        "clear_screen",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "parse_args",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "dirname",
        "SCRIPT_PATH",
        "os",
        "chdir",
        "SCRIPT_DIRNAME",
        "parse_cli_arguments",
        "PYTHON2_OK",
        "PYTHON3_OK",
        "INTERACTIVE_MODE",
        "wait",
        "exit",
        "CLI_ARGS",
        "repair",
        "reset_install",
        "git_reset",
        "CLI_ARGS",
        "update_customizer",
        "update_install",
        "CLI_ARGS",
        "update_reqs",
        "install_apt_reqs",
        "compat",
        "CLI_ARGS",
        "update_build_reqs",
        "install_apt_reqs",
        "compat",
        "INTERACTIVE_MODE",
        "main_menu",
        "CLI_ARGS",
        "start",
        "run_app",
        "interpreter",
        "sys",
        "executable"
    ],
    "literals": [
        "'wb'",
        "\"Customizer - Installer\"",
        "\"0.1.0\"",
        "\"=====================================\\n\"",
        "\"{0} {1}\\n\"",
        "\"=====================================\\n\"",
        "\"nt\"",
        "\"darwin\"",
        "\"64\"",
        "\"https://github.com\"",
        "\"https://raw.githubusercontent.com\"",
        "\"squashfs-tools\"",
        "\"xorriso\"",
        "\"x11-xserver-utils\"",
        "\"xserver-xephyr\"",
        "\"qemu-kvm\"",
        "\"policykit-1\"",
        "\"hicolor-icon-theme\"",
        "\"development\"",
        "\"kamilion/customizer/tree/development\"",
        "\"stable\"",
        "\"kamilion/customizer/tree/stable\"",
        "\"precise\"",
        "\"kamilion/customizer/tree/precise\"",
        "\"master\"",
        "\"kamilion/customizer\"",
        "\"oldstable\"",
        "\"clearkimura/Customizer\"",
        "\"master\"",
        "'installer.json'",
        "'installer.json'",
        "'w'",
        "\"current_repo\"",
        "'installer.json'",
        "'r'",
        "\"git\"",
        "\"checkout\"",
        "\"\\nError: Git not found. It's either not installed or not in \"",
        "\"the PATH environment variable like expected.\"",
        "\"\\nBranch has been switched to: {0}\"",
        "\"\\nCustomizer could not update properly. If this is caused\"",
        "\" by edits you have made to the code you can try the repair\"",
        "\" option from the Maintenance submenu\"",
        "\"git\"",
        "\"pull\"",
        "\"--ff-only\"",
        "\"\\nError: Git not found. It's either not installed or not in \"",
        "\"the PATH environment variable like expected.\"",
        "\"\\nCustomizer has been updated\"",
        "\"\\nCustomizer could not update properly. If this is caused\"",
        "\" by edits you have made to the code you can try the repair\"",
        "\" option from the Maintenance submenu\"",
        "\"/etc/customizer.conf\"",
        "\"config file has been wiped.\"",
        "\"An error occured when trying to remove the config file: \"",
        "\"{}\"",
        "\"git\"",
        "\"reset\"",
        "\"--hard\"",
        "\"Customizer has been restored to the last local commit.\"",
        "\"The repair has failed.\"",
        "\"python-qt4\"",
        "\"pyqt4-dev-tools\"",
        "\"qt4-linguist-tools\"",
        "\"python-pyqt5\"",
        "\"pyqt5-dev-tools\"",
        "\"qttools5-dev-tools\"",
        "\"Sorry, package installation failed [{0}]\"",
        "\"Sorry, package installation failed [{0}]\"",
        "\"Sorry, we won't be able to manage packages unless\\n\"",
        "\"the installer is run as root. (perhaps with 'sudo !!' )\"",
        "\"{0} already installed\"",
        "\"Main requirements:\\n\"",
        "\"1. Try installing PyQt4 from apt\"",
        "\"2. Try installing PyQt5 from apt\"",
        "\"\\n0. Go back\"",
        "\"1\"",
        "\"2\"",
        "\"0\"",
        "\"No requirements installed\"",
        "\"GUI requirements installed (PyQT4)\"",
        "\"GUI requirements installed (PyQT5)\"",
        "\"Status: \"",
        "\"\\n\"",
        "\"Update:\\n\"",
        "\"Customizer:\"",
        "\"1. Update Customizer (recommended)\"",
        "\"2. Update Customizer + update apt requirements\"",
        "\"\\nOthers:\"",
        "\"3. Update requirements\"",
        "\"\\n0. Go back\"",
        "\"1\"",
        "\"2\"",
        "\"Updating requirements...\"",
        "\"The requirements haven't been installed yet.\"",
        "\"3\"",
        "\"The requirements haven't been installed yet.\"",
        "\"0\"",
        "\"Current Repo: \"",
        "\"current_repo\"",
        "\"/\"",
        "\"current_repo\"",
        "\"Current Repo URL: \"",
        "\"No requirements found to be installed\"",
        "\"GUI requirements installed (PyQT4)\"",
        "\"GUI requirements installed (PyQT5)\"",
        "\"Status: \"",
        "\"\\n\"",
        "\"Update:\\n\"",
        "\"Customizer:\"",
        "\"1. Change Repository (A list will be printed)\"",
        "\"2. Visit repo in web browser\"",
        "\"3. Switch to selected repository\"",
        "\"\\n0. Go back\"",
        "\"1\"",
        "\"current_repo\"",
        "'installer.json'",
        "'w'",
        "\"2\"",
        "\"3\"",
        "\"Switching currently checked out branch...\"",
        "\"current_repo\"",
        "\"0\"",
        "\"current_repo\"",
        "\"Current Repo: \"",
        "\"/\"",
        "\"Current Repo URL: \"",
        "\"No requirements found to be installed\"",
        "\"GUI requirements installed (PyQT4)\"",
        "\"GUI requirements installed (PyQT5)\"",
        "\"Status: \"",
        "\"\\n\"",
        "\"Update:\\n\"",
        "\"Customizer:\"",
        "\"1. Switch to stable repo (recommended)\"",
        "\"2. Switch to master repo\"",
        "\"3. Switch to devel repo\"",
        "\"\\nOthers:\"",
        "\"4. Switch to ubuntu precise repo (Compatibility)\"",
        "\"5. Switch to old stable repo (Compatibility)\"",
        "\"\\n0. Go back\"",
        "\"1\"",
        "\"stable\"",
        "\"2\"",
        "\"master\"",
        "\"3\"",
        "\"development\"",
        "\"4\"",
        "\"precise\"",
        "\"5\"",
        "\"oldstable\"",
        "\"Maintenance:\\n\"",
        "\"1. Repair Customizer (discards code changes, keeps data intact)\"",
        "\"2. Wipe config file (all settings removed, keeps data intact)\"",
        "\"3. Factory reset (all of the above)\"",
        "\"\\n0. Go back\"",
        "\"1\"",
        "\"Any code modification you have made will be lost. Data/\"",
        "\"project settings will be left intact. Are you sure?\"",
        "\"2\"",
        "\"Are you sure? This will wipe the config file, which \"",
        "\"contains all your project settings.\"",
        "\"3\"",
        "\"Are you sure? This will remove your installation \"",
        "\"data.\\nYou'll lose any modifications you have made.\\n\"",
        "\"There is no going back.\"",
        "\"0\"",
        "\"PATH\"",
        "'\"'",
        "\"Couldn't find specified Python interpreter\"",
        "\"You don't have the requirements to start Customizer.\\n\"",
        "\"Install them from the interactive menu.\"",
        "\"customizer-gui\"",
        "\"Starting Customizer with {0}...\"",
        "\"Customizer has terminated. Exit code: %d\"",
        "\"cls\"",
        "\"clear\"",
        "\"Press enter to continue.\"",
        "\"> \"",
        "\"yes\"",
        "\"y\"",
        "\"no\"",
        "\"n\"",
        "\"Yes/No > \"",
        "u\"Root account: is available ✓\"",
        "u\"Root account: is not available ✗\"",
        "\"Sorry, we won't be able to directly manage packages unless\"",
        "\"the installer is run as root. (perhaps with 'sudo !!'\"",
        "\"However we'll try to sudo commands if possible.\"",
        "u\"Tool: '{0}' is available ✓\"",
        "u\"Tool: '{0}' is not available ✗\"",
        "\"WARNING: '{0}' not found. This means that it's either not \"",
        "\"installed\\nor not in the PATH environment variable like \"",
        "\"requested in the guide.\\n\"",
        "\"--version\"",
        "\"git\"",
        "\"pip\"",
        "\"apt\"",
        "\"apt-get\"",
        "\"dpkg\"",
        "\"rpm\"",
        "\"Verifying git installation...\"",
        "\".git\"",
        "\"Sorry, your Windows platform isn't supported.\\n\\n\"",
        "\"Sorry, your Macintosh platform isn't supported.\\n\\n\"",
        "\"Customizer installer cannot interact with the\"",
        "\"ubuntu package manager without the apt module!\\n\"",
        "\"WARNING: It doesn't look like Customizer has been \"",
        "\"installed with git.\\nThis means that you won't \"",
        "\"be able to use this script to update or change\\n\"",
        "\"which repository you're currently using.\\n\"",
        "u\"Unicode status: ✓ \\n(If this is a ?, your terminal does not\"",
        "\" support printing unicode.)\\n\"",
        "\"\\nTool status:\"",
        "\"git\"",
        "\"dpkg\"",
        "\"apt-get\"",
        "\"apt\"",
        "\"rpm\"",
        "\"\\n\"",
        "\"1. Run Customizer\"",
        "\"2. Install Customizer\"",
        "\"3. Install GUI requirements with apt\"",
        "\"4. Update from Github\"",
        "\"5. Change Repo or branch\"",
        "\"6. Maintenance (repair, reset...)\"",
        "\"\\n0. Quit\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "\"6\"",
        "\"0\"",
        "\"Customizer's Installer\"",
        "\"--start\"",
        "\"-s\"",
        "\"Starts Customizer-gui\"",
        "\"store_true\"",
        "\"--update-customizer\"",
        "\"Updates customizer (git)\"",
        "\"store_true\"",
        "\"--update-build-reqs\"",
        "\"Updates build requirements\"",
        "\"store_true\"",
        "\"--update-reqs\"",
        "\"Updates runtime requirements\"",
        "\"store_true\"",
        "\"--repair\"",
        "\"Issues a git reset --hard\"",
        "\"store_true\"",
        "'__main__'",
        "\"Fatal Error: Customizer needs Python 2.7 or superior.\\n\"",
        "\"Installation of the minimum version is required.\\n\"",
        "\"Press enter to continue.\""
    ],
    "variables": [
        "subprocess32",
        "DEVNULL",
        "apt",
        "THIS_TITLE",
        "THIS_VERSION",
        "INTRO",
        "IS_WINDOWS",
        "IS_MAC",
        "IS_64BIT",
        "INTERACTIVE_MODE",
        "PYTHON2_OK",
        "PYTHON3_OK",
        "GITHUB_ROOT",
        "GITHUB_RAW",
        "RUNTIME_DEPS",
        "GIT_REPOS",
        "DEFAULT_REPO",
        "CONFIGURATION_DATA",
        "CONFIGURATION_DATA",
        "CONFIGURATION_DATA",
        "code",
        "code",
        "code",
        "to_install",
        "install_requirements",
        "cache",
        "cache",
        "PyQt4",
        "PyQt5",
        "choice",
        "reqs",
        "status",
        "status",
        "status",
        "choice",
        "reqs",
        "reqs",
        "current_repo_url",
        "reqs",
        "status",
        "status",
        "status",
        "choice",
        "CONFIGURATION_DATA",
        "repo",
        "current_repo_url",
        "reqs",
        "status",
        "status",
        "status",
        "choice",
        "choice",
        "fpath",
        "fname",
        "path",
        "exe_file",
        "cmd",
        "code",
        "code",
        "choice",
        "pick_yes",
        "pick_no",
        "choice",
        "IS_ROOT",
        "IS_ROOT",
        "GIT_INSTALLED",
        "PIP_INSTALLED",
        "APT_INSTALLED",
        "APTGET_INSTALLED",
        "DPKG_INSTALLED",
        "RPM_INSTALLED",
        "is_git_installation",
        "choice",
        "parser",
        "SCRIPT_PATH",
        "SCRIPT_DIRNAME",
        "CLI_ARGS"
    ],
    "comments": [
        "!/usr/bin/env python2.7",
        "-*- coding: utf-8 -*-",
        "Run this with python2.7 or python3.",
        "",
        "",
        "Welcome to Customizer. This installer should execute on all platforms.",
        "However, it only supports linux. Windows and Apple users will be warded off.",
        "Python3 behavior by default",
        "We need to get the DEVNULL object from somewhere.",
        "first we'll try python2 with subprocess32, then python3's subprocess,",
        "finally resorting to python2's subprocess and simply opening devnull.",
        "python2 with subprocess32",
        "python3",
        "python2 closes descriptor on exit.",
        "python2 without subprocess32 package",
        "Using the python bindings, apt can do everything in one operation.",
        "direct package manager access",
        "Not a recent ubuntu?",
        "Detect if we're running on windows.",
        "Detect if we're running on apple.",
        "Detect if we're 64-bit.",
        "CLI flags = non-interactive",
        "Minimum version requirement",
        "If python3 runs us",
        "a key from the dict above.",
        "do packagey things",
        "to import this empty module if installed.",
        "Contains a copyright notice for QT4.",
        "PyQt4 is not currently installed.",
        "to import this empty module if installed.",
        "Contains a copyright notice for QT5.",
        "PyQt5 is not currently installed.",
        "This should never realistically happen",
        "We need git.",
        "pip is nice.",
        "New ubuntu?",
        "Ubuntu?",
        "Debian-derived?",
        "Redhat",
        "This will be printed users lacking apt.",
        "Functions from this file may be imported or executed from python.",
        "The status of tools may be found after import by examining the module.",
        "If we're executed as the main file, the following code is ran.",
        "Sets current directory to the script's",
        "Really old pythons?"
    ],
    "docstrings": [
        "\"\"\"Customizer Python Installer\"\"\"",
        "\"\"\"\n    Switches branches on a git-based install.\n    \"\"\"",
        "\"\"\"\n    Updates a git-based install.\n    \"\"\"",
        "\"\"\"\n    Resets the git-based install.\n    \"\"\"",
        "\"\"\"\n    Returns a list of apt requirements given conditions.\n    \"\"\"",
        "\"\"\"\n    Builds a list of requirements, then installs them.\n    \"\"\"",
        "\"\"\"\n    Installs a list of packages via apt.\n    \"\"\"",
        "\"\"\"\n    Marks a package for installation in the apt cache.\n    \"\"\"",
        "\"\"\"\n    Verifies PyQt5 availability. Returns bool or None.\n    \"\"\"",
        "\"\"\"\n    Prints a apt requirements menu.\n    \"\"\"",
        "\"\"\"\n    Prints a update menu.\n    \"\"\"",
        "\"\"\"\n    Prints a repo menu.\n    \"\"\"",
        "\"\"\"\n    Prints a list of repos to choose from.\n    \"\"\"",
        "\"\"\"\n    Prints a maintinence menu.\n    \"\"\"",
        "\"\"\"\n    Locates an installed tool on the filesystem if it's in the path.\n    \"\"\"",
        "\"\"\"Is this executable?\"\"\"",
        "\"\"\"\n    Starts the installed application with the interpreter specified.\n    \"\"\"",
        "\"\"\"\n    Clears the screen before printing an interactive menu.\n    \"\"\"",
        "\"\"\"\n    Waits for a user to press a key to continue.\n    \"\"\"",
        "\"\"\"\n    Requests a alphanumeric response from the user.\n    This function will hide python3's changing of input\n    from raw_input in python2. The semantics are the same.\n    \"\"\"",
        "\"\"\"\n    Requests a alphanumeric response from the user.\n    This function will hide python3's changing of input\n    from raw_input in python2. The semantics are the same.\n    \"\"\"",
        "\"\"\"\n    Requests an affirmative or negative from the user.\n    This function will hide python3's changing of input\n    from raw_input in python2. The semantics are the same.\n    Returns the user's choice.\n    \"\"\"",
        "\"\"\"\n    Attempt to remove read only flags before unlink with broad perms.\n    Returns nothing.\n    \"\"\"",
        "\"\"\"\n    Print a helpful message when root access is unavailable.\n    Returns nothing.\n    \"\"\"",
        "\"\"\"\n    Print a message when a tool is missing. Returns nothing.\n    \"\"\"",
        "\"\"\"\n    Print a message when a tool is missing. Returns nothing.\n    \"\"\"",
        "\"\"\"\n    Checks if a tool is installed. Returns bool.\n    \"\"\"",
        "\"\"\"\n    Prints the main interactive menu.\n    \"\"\"",
        "\"\"\"\n    Parses CLI arguments and returns them.\n    \"\"\""
    ],
    "functions": [
        "switch_branch",
        "update_install",
        "reset_install",
        "build_apt_reqs",
        "install_apt_reqs",
        "install_apt_list",
        "install_apt_package",
        "is_pyqt5_available",
        "requirements_menu",
        "update_menu",
        "repo_menu",
        "change_repo_menu",
        "maintenance_menu",
        "unix_which",
        "is_exe",
        "run_app",
        "clear_screen",
        "wait",
        "user_choice_compat",
        "user_choice",
        "user_pick_yes_no",
        "remove_readonly",
        "root_warning",
        "tool_check",
        "tool_warning",
        "is_tool_installed",
        "main_menu",
        "parse_cli_arguments"
    ],
    "classes": []
}