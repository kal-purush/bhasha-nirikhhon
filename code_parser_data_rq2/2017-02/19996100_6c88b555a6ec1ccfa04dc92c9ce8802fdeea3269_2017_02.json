{
    "identifiers": [
        "labrad",
        "types",
        "Value",
        "labrad",
        "devices",
        "DeviceServer",
        "DeviceWrapper",
        "labrad",
        "server",
        "setting",
        "twisted",
        "internet",
        "defer",
        "inlineCallbacks",
        "returnValue",
        "Value",
        "DeviceWrapper",
        "inlineCallbacks",
        "server",
        "port",
        "server",
        "name",
        "port",
        "server",
        "server",
        "context",
        "port",
        "packet",
        "p",
        "open",
        "port",
        "p",
        "baudrate",
        "BAUDRATE",
        "p",
        "read",
        "p",
        "timeout",
        "TIMEOUT",
        "p",
        "send",
        "server",
        "packet",
        "context",
        "ctx",
        "packet",
        "close",
        "send",
        "inlineCallbacks",
        "code",
        "packet",
        "write_line",
        "code",
        "send",
        "inlineCallbacks",
        "code",
        "packet",
        "p",
        "write_line",
        "code",
        "p",
        "read_line",
        "p",
        "send",
        "returnValue",
        "ans",
        "read_line",
        "DeviceServer",
        "stepperController",
        "inlineCallbacks",
        "client",
        "registry",
        "loadConfigInfo",
        "DeviceServer",
        "initServer",
        "inlineCallbacks",
        "reg",
        "reg",
        "cd",
        "reg",
        "dir",
        "reg",
        "packet",
        "k",
        "keys",
        "p",
        "get",
        "k",
        "key",
        "k",
        "p",
        "send",
        "k",
        "ans",
        "k",
        "k",
        "keys",
        "inlineCallbacks",
        "name",
        "serServer",
        "port",
        "serialLinks",
        "items",
        "serServer",
        "client",
        "servers",
        "client",
        "serServer",
        "server",
        "list_serial_ports",
        "port",
        "ports",
        "serServer",
        "port",
        "devs",
        "devName",
        "server",
        "port",
        "returnValue",
        "devs",
        "setting",
        "steps",
        "c",
        "steps",
        "selectDevice",
        "c",
        "dev",
        "write",
        "steps",
        "returnValue",
        "value",
        "labrad",
        "util",
        "util",
        "runServer",
        "stepperMotorServer"
    ],
    "literals": [
        "'s'",
        "'connecting to \"%s\" on port \"%s\"...'",
        "'stepper_motor_server'",
        "'stepper_motor_server'",
        "'loading config info...'",
        "''",
        "'Servers'",
        "'StepperMotor'",
        "'Links'",
        "'%s - %s'",
        "'move'",
        "'i'",
        "\"__main__\""
    ],
    "variables": [
        "TIMEOUT",
        "BAUDRATE",
        "server",
        "ctx",
        "port",
        "p",
        "p",
        "ans",
        "deviceName",
        "name",
        "deviceWrapper",
        "reg",
        "reg",
        "dirs",
        "keys",
        "p",
        "ans",
        "serialLinks",
        "devs",
        "server",
        "ports",
        "devName",
        "dev",
        "value"
    ],
    "comments": [
        "Created on Feb 12, 2017",
        "@author: Anthony Ransford",
        "serial read timeout",
        "grabs an identification number from the server",
        "The following opens a communication on a com port specifying a baudrate and a timeout",
        "clear out the read buffer",
        "starts server after configurations loaded",
        "opens folder",
        "list of serial connections"
    ],
    "docstrings": [
        "\"\"\"\n### BEGIN NODE INFO\n[info]\nname = stepper_motor_server\nversion = 1.0\ndescription = drives stepper motors\ninstancename = stepper_motor_server\n[startup]\ncmdline = %PYTHON% %FILE%\ntimeout = 20\n[shutdown]\nmessage = 987654321\ntimeout = 20\n### END NODE INFO\n\"\"\"",
        "\"\"\"\n    arduino dual stepper devices\n    \"\"\"",
        "\"\"\"Here we make a connection to the serial server in LabRAD where all\n        the serial communication is handled\"\"\"",
        "\"\"\"Create a packet in our private context.\"\"\"",
        "\"\"\"Disconnect from the serial port when we shut down.\"\"\"",
        "\"\"\"Write a data value to the heat switch.\"\"\"",
        "\"\"\" Write, then read. \"\"\"",
        "\"\"\"\n        Makes a connection to the registry where port information and other server\n        specific settings can be retrieved.\n        \"\"\"",
        "\"\"\"Load configuration information from the registry, including device serial ports\n        The registry must have a key value pair in the form of the tuple (\"server name\", \"comport\")\n        e.g. (\"qsimexpcontrol Serial Server\", \"/dev/ttyACMarduinoTTL\")\n        \"\"\"",
        "\"\"\"Find available devices from list stored in the registry.\"\"\"",
        "\"\"\"\n        moves stepper motor N steps, if positive the move CW else CCW\n        each step currently corresponds to 1.8 degrees\n        \"\"\""
    ],
    "functions": [
        "connect",
        "packet",
        "shutdown",
        "write",
        "query",
        "initServer",
        "loadConfigInfo",
        "findDevices",
        "move"
    ],
    "classes": [
        "stepperController",
        "stepperMotorServer"
    ]
}