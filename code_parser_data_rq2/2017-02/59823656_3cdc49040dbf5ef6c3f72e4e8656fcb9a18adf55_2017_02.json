{
    "identifiers": [
        "ContentState",
        "genKey",
        "Entity",
        "CharacterMetadata",
        "ContentBlock",
        "convertFromHTML",
        "toArray",
        "DraftEntityInstance",
        "Entity",
        "CharacterMetadataConfig",
        "CharacterMetadata",
        "OrderedSet",
        "Repeat",
        "fromJS",
        "argument",
        "args",
        "args",
        "start",
        "arguments",
        "i",
        "result",
        "args",
        "i",
        "result",
        "result",
        "getBlockSpecForElement",
        "imgElement",
        "imgElement",
        "wrapBlockSpec",
        "blockSpec",
        "blockSpec",
        "tempEl",
        "blockSpec",
        "tempEl",
        "replaceElement",
        "oldEl",
        "newEl",
        "newEl",
        "HTMLElement",
        "oldEl",
        "parentNode",
        "newEl",
        "oldEl",
        "compose",
        "wrapBlockSpec",
        "getBlockSpecForElement",
        "imgReplacer",
        "imgElement",
        "imgElement",
        "replaceElement",
        "imgElement",
        "elementToBlockSpecElement",
        "imgElement",
        "createContentBlock",
        "blockData",
        "text",
        "text",
        "key",
        "key",
        "genKey",
        "data",
        "blockSpec",
        "fromJS",
        "data",
        "inlineStyles",
        "entityData",
        "entityData",
        "entityKey",
        "Entity",
        "mutability",
        "data",
        "entityKey",
        "OrderedSet",
        "inlineStyles",
        "CharacterMetadata",
        "blockSpec",
        "Repeat",
        "charData",
        "text",
        "ContentBlock",
        "blockSpec",
        "HTML",
        "DOMParser",
        "HTML",
        "toArray",
        "tempDoc",
        "imgReplacer",
        "convertFromHTML",
        "tempDoc",
        "contentBlocks",
        "contentBlocks",
        "contentBlocks",
        "block",
        "block",
        "contentBlocks",
        "block",
        "block",
        "createContentBlock",
        "blockSpec",
        "createContentBlock",
        "contentBlocks",
        "atomicBlock",
        "spacerBlock",
        "tempDoc",
        "ContentState",
        "contentBlocks"
    ],
    "literals": [
        "'draft-js'",
        "'lodash'",
        "'Immutable'",
        "'image'",
        "'src'",
        "'blockquote'",
        "'> imgReplacer'",
        "'unstyled'",
        "''",
        "'text/html'",
        "'img'",
        "'blockquote'",
        "'IMAGE'",
        "'IMMUTABLE'",
        "'atomic'",
        "' '"
    ],
    "variables": [
        "args",
        "arguments",
        "start",
        "i",
        "start",
        "result",
        "getBlockSpecForElement",
        "wrapBlockSpec",
        "tempEl",
        "replaceElement",
        "parentNode",
        "elementToBlockSpecElement",
        "imgReplacer",
        "createContentBlock",
        "blockData",
        "blockSpec",
        "entityKey",
        "entityData",
        "style",
        "charData",
        "tempDoc",
        "contentBlocks",
        "entityData",
        "blockSpec",
        "atomicBlock",
        "spacerBlock"
    ],
    "comments": [
        "Prepares img meta data object based on img attributes",
        "Wraps meta data in HTML element which is 'understandable' by Draft, I used <blockquote />.",
        "stringify meta data and insert it as text content of temp HTML element. We will later extract",
        "and parse it.",
        "Replaces <img> element with our temp element",
        "creates ContentBlock based on provided spec",
        "takes HTML string and returns DraftJS ContentState",
        "replace all <img /> with <blockquote /> elements",
        "use DraftJS converter to do initial conversion. I don't provide DOMBuilder and",
        "blockRenderMap arguments here since it should fall back to its default ones, which are fine",
        "now replace <blockquote /> ContentBlocks with 'atomic' ones"
    ],
    "docstrings": [
        "* Helpers"
    ],
    "functions": [
        "compose",
        "customHTML2Content"
    ],
    "classes": []
}