{
    "identifiers": [
        "com",
        "github",
        "bordertech",
        "wcomponents",
        "util",
        "org",
        "apache",
        "commons",
        "logging",
        "Log",
        "org",
        "apache",
        "commons",
        "logging",
        "LogFactory",
        "WARN_THRESHOLD",
        "LOG",
        "LogFactory",
        "getLog",
        "count",
        "className",
        "MemoryUtil",
        "WARN_THRESHOLD",
        "count",
        "MemoryUtil",
        "log",
        "className",
        "count",
        "message",
        "LOG",
        "isWarnEnabled",
        "message",
        "ex",
        "LOG",
        "warn",
        "message",
        "ex",
        "message",
        "message"
    ],
    "literals": [
        "\" may be leaking memory, it contains a large number of items: \""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* This class is intended to help detect and trace possible memory leaks.\n * The goals are:\n * - \"Make some noise\" when lists of UI components continue to grow beyond a reasonable level.\n * - Use a common logger so that these messages can be easily silenced for all classes.\n * - Provide a stack trace so that possible memory leaks are easier to track.\n *\n * @author Rick Brown",
        "* For convenience this can be used as a \"rule of thumb\" when testing the size of a List of components in the UI.",
        "* The logger instance for this class.",
        "* Utility class needs no constructor.",
        "* Performs default check and default log message.\n\t * This is a convenience which should be adequate for the majority of cases.\n\t * @param count The current count of a component registry (or similar).\n\t * @param className The name of the class which holds the registry.",
        "* Log a possible memory leak as necessary.\n\t * @param message A meaningful message that provides information about the possible memory leak.\n\t * The message should ideally provide information about the source of the leak.",
        "* An exception that is used to generate a stack trace to aid tracing the original cause of the possible memory leak.",
        "* Creates an exception that indicates there is possibly (probably) a memory leak.\n\t\t * @param message A meaningful message that provides information about the possible leak."
    ],
    "functions": [
        "MemoryUtil",
        "checkAndLog",
        "log",
        "PossibleMemLeakException"
    ],
    "classes": [
        "MemoryUtil",
        "PossibleMemLeakException"
    ]
}