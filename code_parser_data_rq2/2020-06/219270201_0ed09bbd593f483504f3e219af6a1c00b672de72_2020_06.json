{
    "identifiers": [
        "sys",
        "bs4",
        "bs",
        "pprint",
        "fn1",
        "fn2",
        "x",
        "x",
        "get_htmldata",
        "fn1",
        "x",
        "x",
        "get_htmldata",
        "fn2",
        "gen",
        "next",
        "gen",
        "StopIteration",
        "eof",
        "elem",
        "attr",
        "val",
        "gen_next",
        "gen1",
        "gen_next",
        "gen2",
        "eof_gen1",
        "eof_gen2",
        "eof_gen1",
        "elem1",
        "attr1",
        "eof_gen2",
        "elem2",
        "attr2",
        "result",
        "append",
        "elem1",
        "attr1",
        "val1",
        "eof_gen1",
        "eof_gen1",
        "elem1",
        "attr1",
        "eof_gen2",
        "elem2",
        "attr2",
        "result",
        "append",
        "elem2",
        "attr2",
        "val2",
        "eof_gen2",
        "eof_gen1",
        "elem1",
        "eof_gen2",
        "elem2",
        "result",
        "append",
        "elem1",
        "attr1",
        "val1",
        "eof_gen1",
        "eof_gen1",
        "elem1",
        "eof_gen2",
        "elem2",
        "result",
        "append",
        "elem2",
        "attr2",
        "val2",
        "eof_gen2",
        "attr1",
        "attr2",
        "result",
        "append",
        "elem1",
        "attr1",
        "val1",
        "attr1",
        "attr2",
        "result",
        "append",
        "elem2",
        "attr2",
        "val2",
        "result",
        "append",
        "elem1",
        "attr1",
        "val1",
        "val2",
        "get_from_1",
        "gen_next",
        "gen1",
        "get_from_2",
        "gen_next",
        "gen2",
        "result",
        "filename",
        "open",
        "filename",
        "_in",
        "bs",
        "BeautifulSoup",
        "_in",
        "get_next_level_data",
        "soup",
        "element",
        "level",
        "item",
        "element",
        "children",
        "isinstance",
        "item",
        "bs",
        "Tag",
        "level",
        "ELSTART",
        "item",
        "name",
        "result",
        "append",
        "element_tag",
        "item",
        "attrs",
        "name",
        "sorted",
        "item",
        "attrs",
        "item",
        "get_attribute_list",
        "name",
        "value",
        "sorted",
        "value_list",
        "result",
        "append",
        "element_tag",
        "name",
        "value",
        "result",
        "extend",
        "get_next_level_data",
        "item",
        "level",
        "isinstance",
        "item",
        "bs",
        "Comment",
        "result",
        "append",
        "level",
        "CMSTART",
        "item",
        "isinstance",
        "item",
        "bs",
        "NavigableString",
        "result",
        "append",
        "level",
        "item",
        "result",
        "append",
        "item",
        "result",
        "open",
        "pprint",
        "pprint",
        "get_htmldata",
        "sys",
        "argv",
        "stream",
        "open",
        "pprint",
        "pprint",
        "get_htmldata",
        "sys",
        "argv",
        "stream",
        "open",
        "pprint",
        "pprint",
        "compare_htmldata",
        "sys",
        "argv",
        "sys",
        "argv",
        "stream"
    ],
    "literals": [
        "'<> '",
        "'<!> '",
        "\"generator to get next values from data collection\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'lxml'",
        "\"read data under an element\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "\"Oops, what's this?\"",
        "''",
        "''",
        "\"__main__\"",
        "\"read a document and show results\"",
        "'html_comp_left'",
        "'w'",
        "'html_comp_right'",
        "'w'",
        "'html_comp_both'",
        "'w'"
    ],
    "variables": [
        "ELSTART",
        "CMSTART",
        "result",
        "gen1",
        "gen2",
        "eof",
        "elem",
        "attr",
        "val",
        "eof",
        "elem",
        "attr",
        "val",
        "eof_gen1",
        "elem1",
        "attr1",
        "val1",
        "eof_gen2",
        "elem2",
        "attr2",
        "val2",
        "get_from_1",
        "get_from_2",
        "get_from_1",
        "get_from_2",
        "get_from_1",
        "get_from_2",
        "get_from_1",
        "get_from_2",
        "get_from_1",
        "get_from_2",
        "eof_gen1",
        "elem1",
        "attr1",
        "val1",
        "eof_gen2",
        "elem2",
        "attr2",
        "val2",
        "soup",
        "result",
        "element_tag",
        "value_list"
    ],
    "comments": [
        "hoofdroutine: compare_htmldata - kan misschien overgenomen worden uit xml vergelijking en dan",
        "gefinetuned",
        "lezen html bestand - m.b.v. BeautifulSoup - generator die afdalend in de boomstructuur",
        "- in volgorde van het document de elementen opsomt die erin voorkomen (alleen de tagnaam)",
        "- de bijbehorende attributen sorteert op naam en naam + waarde teruggeeft",
        "- de gevonden string of strings toont in volgorde van het document",
        "print((sect1, opt1), (sect2, opt2))",
        "probleem:dit werkt niet als de elem lijsten ongelijk van lengte zijn want dan",
        "is de langste eigenlijk de \"kleinste\"",
        "eerst even ongesorteerd"
    ],
    "docstrings": [
        "\"\"\"compre logic for html files\n\noutput naar hoofdprogramma: list van 3-tuples\n1e waarde: node (element, attribuut, tekst)\n2e waarde: entry in linkerfile\n3e waarde: entry in rechterfile\n\"\"\"",
        "\"\"\"compare two similar html documents\n    \"\"\"",
        "\"\"\"de volgorde van elementen en teksten moet intact blijven\n    attributen van een element moeten wel gesorteerd worden\n    \"\"\""
    ],
    "functions": [
        "compare_htmldata",
        "gen_next",
        "get_htmldata",
        "get_next_level_data"
    ],
    "classes": []
}