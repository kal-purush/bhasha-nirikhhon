{
    "identifiers": [
        "Autofac",
        "CommonDomainObjects",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "NHibernate",
        "NHibernate",
        "Tool",
        "hbm2ddl",
        "NHibernateIntegration",
        "NUnit",
        "Framework",
        "Collections",
        "Generic",
        "IO",
        "Threading",
        "Tasks",
        "Web",
        "Web",
        "Controllers",
        "Test",
        "TestFixture",
        "IDictionary",
        "IList",
        "IList",
        "OneTimeSetUp",
        "ContainerBuilder",
        "builder",
        "RegisterModule",
        "NHibernateIntegration",
        "Module",
        "builder",
        "RegisterType",
        "CommonDomainObjects",
        "Mapping",
        "ConventionModelMapperFactory",
        "As",
        "IModelMapperFactory",
        "SingleInstance",
        "builder",
        "RegisterModule",
        "SQLiteModule",
        "builder",
        "RegisterModule",
        "Service",
        "Module",
        "builder",
        "RegisterModule",
        "ControllerModule",
        "builder",
        "RegisterModule",
        "MapperModule",
        "_container",
        "builder",
        "Build",
        "File",
        "Delete",
        "SQLiteModule",
        "DatabasePath",
        "SchemaExport",
        "_container",
        "Resolve",
        "IConfigurationFactory",
        "Build",
        "schemaExport",
        "Create",
        "SetUp",
        "_container",
        "BeginLifetimeScope",
        "scope",
        "Resolve",
        "ISession",
        "session",
        "CreateQuery",
        "ExecuteUpdate",
        "session",
        "CreateQuery",
        "ExecuteUpdate",
        "session",
        "CreateQuery",
        "ExecuteUpdate",
        "Test",
        "_super",
        "Select",
        "Class",
        "Guid",
        "NewGuid",
        "vertex",
        "ToString",
        "ClassificationScheme",
        "_container",
        "BeginLifetimeScope",
        "scope",
        "Resolve",
        "ISession",
        "session",
        "SaveAsync",
        "classificationScheme",
        "classificationScheme",
        "VisitAsync",
        "session",
        "SaveAsync",
        "classificationSchemeClass",
        "Class",
        "session",
        "SaveAsync",
        "classificationSchemeClass",
        "session",
        "FlushAsync",
        "Web",
        "Model",
        "ClassificationScheme",
        "_container",
        "BeginLifetimeScope",
        "scope",
        "Resolve",
        "ClassificationSchemeController",
        "controller",
        "GetAsync",
        "classificationScheme",
        "Id",
        "Assert",
        "That",
        "actionResult",
        "Is",
        "Not",
        "Null",
        "Assert",
        "That",
        "actionResult",
        "Is",
        "InstanceOf",
        "OkObjectResult",
        "OkObjectResult",
        "actionResult",
        "Assert",
        "That",
        "okObjectResult",
        "Value",
        "Is",
        "InstanceOf",
        "Web",
        "Model",
        "ClassificationScheme",
        "classificationSchemeModel",
        "Web",
        "Model",
        "ClassificationScheme",
        "okObjectResult",
        "Value",
        "Assert",
        "That",
        "classificationSchemeModel",
        "Id",
        "Is",
        "EqualTo",
        "classificationScheme",
        "Id"
    ],
    "literals": [
        "\"Test\"",
        "\"delete ClassificationSchemeClass\"",
        "\"delete CommonDomainObjects.Class\"",
        "\"delete ClassificationScheme\""
    ],
    "variables": [
        "_super",
        "IContainer",
        "_container",
        "builder",
        "schemaExport",
        "scope",
        "session",
        "classificationScheme",
        "scope",
        "session",
        "classificationSchemeModel",
        "scope",
        "controller",
        "actionResult",
        "okObjectResult"
    ],
    "comments": [
        "foreach(var classificationSchemeClassModel in classificationSchemeModel.Classes)",
        "{",
        "var classificationSchemeClass = classificationScheme[classificationSchemeClassModel.Class];",
        "Assert.That(classificationSchemeClass, Is.Not.Null);",
        "Assert.That(classificationSchemeClassModel.Id, Is.EqualTo(classificationSchemeClass.Id));",
        "Assert.That(classificationSchemeClassModel.Super, Is.EqualTo(classificationSchemeClass.Super));",
        "}"
    ],
    "docstrings": [],
    "functions": [
        "OneTimeSetUp",
        "SetUp",
        "Get"
    ],
    "classes": [
        "TestClassificationSchemeController"
    ]
}