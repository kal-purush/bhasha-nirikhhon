{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "time",
        "portpicker",
        "num_ports",
        "retry_interval_secs",
        "retry_attempts",
        "num_ports",
        "ValueError",
        "num_ports",
        "_",
        "retry_attempts",
        "ports",
        "update",
        "portpicker",
        "pick_unused_port",
        "_",
        "num_ports",
        "len",
        "ports",
        "ports",
        "discard",
        "len",
        "ports",
        "num_ports",
        "ports",
        "time",
        "sleep",
        "retry_interval_secs",
        "return_ports",
        "ports",
        "RuntimeError",
        "num_ports",
        "num_ports",
        "retry_interval_secs",
        "retry_attempts",
        "num_ports",
        "ValueError",
        "num_ports",
        "_",
        "retry_attempts",
        "portpicker",
        "pick_unused_port",
        "start_port",
        "start_port",
        "p",
        "p",
        "num_ports",
        "all",
        "portpicker",
        "is_port_free",
        "p",
        "p",
        "ports",
        "_contiguous_ports",
        "update",
        "ports",
        "ports",
        "portpicker",
        "return_port",
        "start_port",
        "time",
        "sleep",
        "retry_interval_secs",
        "RuntimeError",
        "num_ports",
        "ports",
        "port",
        "ports",
        "port",
        "_contiguous_ports",
        "_contiguous_ports",
        "discard",
        "port",
        "portpicker",
        "return_port",
        "port"
    ],
    "literals": [
        "\"Number of ports, must be >= 1, got: %s\"",
        "\"Unable to obtain %d unused ports.\"",
        "\"Number of ports, must be >= 1, got: %s\"",
        "\"Unable to obtain %d contiguous unused ports.\""
    ],
    "variables": [
        "_contiguous_ports",
        "ports",
        "start_port",
        "ports"
    ],
    "comments": [
        "The set of ports returned by pick_contiguous_unused_ports and not by",
        "the underlying portpicker.",
        "portpicker returns None on error.",
        "Duplicate ports can be returned, especially when insufficient ports are",
        "free. Wait for more ports to be freed and retry.",
        "Could not obtain enough ports. Release what we do have."
    ],
    "docstrings": [
        "\"\"\"portpicker for multiple ports.\"\"\"",
        "\"\"\"Reserves and returns a list of `num_ports` unused ports.\"\"\"",
        "\"\"\"Reserves and returns a list of `num_ports` contiguous unused ports.\"\"\"",
        "\"\"\"Returns previously reserved ports so that may be reused.\"\"\""
    ],
    "functions": [
        "pick_unused_ports",
        "pick_contiguous_unused_ports",
        "return_ports"
    ],
    "classes": []
}