{
    "identifiers": [
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "com",
        "google",
        "gson",
        "JsonObject",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "common",
        "SdkCommon",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "CreatePolicyOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "CreateRoleOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "CustomRole",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "DeletePolicyOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "DeleteRoleOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "GetPolicyOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "GetRoleOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "ListPoliciesOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "ListRolesOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "Policy",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "PolicyList",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "RoleList",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "UpdatePolicyOptions",
        "com",
        "ibm",
        "cloud",
        "platform_services",
        "iam_policy_management",
        "v1",
        "model",
        "UpdateRoleOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "http",
        "RequestBuilder",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "http",
        "ResponseConverter",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "http",
        "ServiceCall",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "security",
        "Authenticator",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "security",
        "ConfigBasedAuthenticatorFactory",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "service",
        "BaseService",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "ResponseConverterUtils",
        "java",
        "util",
        "java",
        "util",
        "Entry",
        "DEFAULT_SERVICE_NAME",
        "DEFAULT_SERVICE_URL",
        "newInstance",
        "DEFAULT_SERVICE_NAME",
        "serviceName",
        "authenticator",
        "ConfigBasedAuthenticatorFactory",
        "getAuthenticator",
        "serviceName",
        "service",
        "serviceName",
        "authenticator",
        "service",
        "configureService",
        "serviceName",
        "service",
        "serviceName",
        "authenticator",
        "serviceName",
        "authenticator",
        "setServiceUrl",
        "DEFAULT_SERVICE_URL",
        "listPoliciesOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "listPoliciesOptions",
        "pathSegments",
        "builder",
        "RequestBuilder",
        "get",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "listPoliciesOptions",
        "acceptLanguage",
        "builder",
        "header",
        "listPoliciesOptions",
        "acceptLanguage",
        "builder",
        "query",
        "listPoliciesOptions",
        "accountId",
        "listPoliciesOptions",
        "iamId",
        "builder",
        "query",
        "listPoliciesOptions",
        "iamId",
        "listPoliciesOptions",
        "accessGroupId",
        "builder",
        "query",
        "listPoliciesOptions",
        "accessGroupId",
        "listPoliciesOptions",
        "builder",
        "query",
        "listPoliciesOptions",
        "listPoliciesOptions",
        "serviceType",
        "builder",
        "query",
        "listPoliciesOptions",
        "serviceType",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "createPolicyOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "createPolicyOptions",
        "pathSegments",
        "builder",
        "RequestBuilder",
        "post",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "createPolicyOptions",
        "acceptLanguage",
        "builder",
        "header",
        "createPolicyOptions",
        "acceptLanguage",
        "contentJson",
        "contentJson",
        "addProperty",
        "createPolicyOptions",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "createPolicyOptions",
        "subjects",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "createPolicyOptions",
        "roles",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "createPolicyOptions",
        "resources",
        "builder",
        "bodyJson",
        "contentJson",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "updatePolicyOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "updatePolicyOptions",
        "pathSegments",
        "pathParameters",
        "updatePolicyOptions",
        "policyId",
        "builder",
        "RequestBuilder",
        "put",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "pathParameters",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "builder",
        "header",
        "updatePolicyOptions",
        "ifMatch",
        "contentJson",
        "contentJson",
        "addProperty",
        "updatePolicyOptions",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "updatePolicyOptions",
        "subjects",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "updatePolicyOptions",
        "roles",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "updatePolicyOptions",
        "resources",
        "builder",
        "bodyJson",
        "contentJson",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "getPolicyOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "getPolicyOptions",
        "pathSegments",
        "pathParameters",
        "getPolicyOptions",
        "policyId",
        "builder",
        "RequestBuilder",
        "get",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "pathParameters",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "deletePolicyOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "deletePolicyOptions",
        "pathSegments",
        "pathParameters",
        "deletePolicyOptions",
        "policyId",
        "builder",
        "RequestBuilder",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "pathParameters",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "responseConverter",
        "ResponseConverterUtils",
        "getVoid",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "listRolesOptions",
        "pathSegments",
        "builder",
        "RequestBuilder",
        "get",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "listRolesOptions",
        "listRolesOptions",
        "acceptLanguage",
        "builder",
        "header",
        "listRolesOptions",
        "acceptLanguage",
        "listRolesOptions",
        "accountId",
        "builder",
        "query",
        "listRolesOptions",
        "accountId",
        "listRolesOptions",
        "serviceName",
        "builder",
        "query",
        "listRolesOptions",
        "serviceName",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "listRoles",
        "createRoleOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "createRoleOptions",
        "pathSegments",
        "builder",
        "RequestBuilder",
        "post",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "createRoleOptions",
        "acceptLanguage",
        "builder",
        "header",
        "createRoleOptions",
        "acceptLanguage",
        "contentJson",
        "contentJson",
        "addProperty",
        "createRoleOptions",
        "displayName",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "createRoleOptions",
        "actions",
        "contentJson",
        "addProperty",
        "createRoleOptions",
        "name",
        "contentJson",
        "addProperty",
        "createRoleOptions",
        "accountId",
        "contentJson",
        "addProperty",
        "createRoleOptions",
        "serviceName",
        "createRoleOptions",
        "description",
        "contentJson",
        "addProperty",
        "createRoleOptions",
        "description",
        "builder",
        "bodyJson",
        "contentJson",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "updateRoleOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "updateRoleOptions",
        "pathSegments",
        "pathParameters",
        "updateRoleOptions",
        "roleId",
        "builder",
        "RequestBuilder",
        "put",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "pathParameters",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "builder",
        "header",
        "updateRoleOptions",
        "ifMatch",
        "contentJson",
        "updateRoleOptions",
        "displayName",
        "contentJson",
        "addProperty",
        "updateRoleOptions",
        "displayName",
        "updateRoleOptions",
        "description",
        "contentJson",
        "addProperty",
        "updateRoleOptions",
        "description",
        "updateRoleOptions",
        "actions",
        "contentJson",
        "add",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "GsonSingleton",
        "getGson",
        "toJsonTree",
        "updateRoleOptions",
        "actions",
        "builder",
        "bodyJson",
        "contentJson",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "getRoleOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "getRoleOptions",
        "pathSegments",
        "pathParameters",
        "getRoleOptions",
        "roleId",
        "builder",
        "RequestBuilder",
        "get",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "pathParameters",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "builder",
        "header",
        "responseConverter",
        "ResponseConverterUtils",
        "getValue",
        "getType",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter",
        "deleteRoleOptions",
        "com",
        "ibm",
        "cloud",
        "sdk",
        "core",
        "util",
        "Validator",
        "notNull",
        "deleteRoleOptions",
        "pathSegments",
        "pathParameters",
        "deleteRoleOptions",
        "roleId",
        "builder",
        "RequestBuilder",
        "RequestBuilder",
        "constructHttpUrl",
        "getServiceUrl",
        "pathSegments",
        "pathParameters",
        "sdkHeaders",
        "SdkCommon",
        "getSdkHeaders",
        "header",
        "sdkHeaders",
        "entrySet",
        "builder",
        "header",
        "header",
        "getKey",
        "header",
        "getValue",
        "responseConverter",
        "ResponseConverterUtils",
        "getVoid",
        "createServiceCall",
        "builder",
        "build",
        "responseConverter"
    ],
    "literals": [
        "\"iam_policy_management\"",
        "\"https://iam.cloud.ibm.com\"",
        "\"listPoliciesOptions cannot be null\"",
        "\"v1/policies\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"listPolicies\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Accept-Language\"",
        "\"account_id\"",
        "\"iam_id\"",
        "\"access_group_id\"",
        "\"type\"",
        "\"service_type\"",
        "\"createPolicyOptions cannot be null\"",
        "\"v1/policies\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"createPolicy\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Accept-Language\"",
        "\"type\"",
        "\"subjects\"",
        "\"roles\"",
        "\"resources\"",
        "\"updatePolicyOptions cannot be null\"",
        "\"v1/policies\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"updatePolicy\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"If-Match\"",
        "\"type\"",
        "\"subjects\"",
        "\"roles\"",
        "\"resources\"",
        "\"getPolicyOptions cannot be null\"",
        "\"v1/policies\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"getPolicy\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"deletePolicyOptions cannot be null\"",
        "\"v1/policies\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"deletePolicy\"",
        "\"v2/roles\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"listRoles\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Accept-Language\"",
        "\"account_id\"",
        "\"service_name\"",
        "\"createRoleOptions cannot be null\"",
        "\"v2/roles\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"createRole\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"Accept-Language\"",
        "\"display_name\"",
        "\"actions\"",
        "\"name\"",
        "\"account_id\"",
        "\"service_name\"",
        "\"description\"",
        "\"updateRoleOptions cannot be null\"",
        "\"v2/roles\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"updateRole\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"If-Match\"",
        "\"display_name\"",
        "\"description\"",
        "\"actions\"",
        "\"getRoleOptions cannot be null\"",
        "\"v2/roles\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"getRole\"",
        "\"Accept\"",
        "\"application/json\"",
        "\"deleteRoleOptions cannot be null\"",
        "\"v2/roles\"",
        "\"iam_policy_management\"",
        "\"v1\"",
        "\"deleteRole\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* (C) Copyright IBM Corp. 2020.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations under the License.",
        "* IAM Policy Management API.\n *\n * @version v1",
        "* Class method which constructs an instance of the `IamPolicyManagement` client.\n   * The default service name is used to configure the client instance.\n   *\n   * @return an instance of the `IamPolicyManagement` client using external configuration",
        "* Class method which constructs an instance of the `IamPolicyManagement` client.\n   * The specified service name is used to configure the client instance.\n   *\n   * @param serviceName the service name to be used when configuring the client instance\n   * @return an instance of the `IamPolicyManagement` client using external configuration",
        "* Constructs an instance of the `IamPolicyManagement` client.\n   * The specified service name and authenticator are used to configure the client instance.\n   *\n   * @param serviceName the service name to be used when configuring the client instance\n   * @param authenticator the {@link Authenticator} instance to be configured for this client",
        "* Get policies by attributes.\n   *\n   * Get policies and filter by attributes. While managing policies, you may want to retrieve policies in the account\n   * and filter by attribute values. This can be done through query parameters. Currently, we only support the following\n   * attributes: account_id, iam_id, access_group_id, type, and service_type. account_id is a required query parameter.\n   * Only policies that have the specified attributes and that the caller has read access to are returned. If the caller\n   * does not have read access to any policies an empty array is returned.\n   *\n   * @param listPoliciesOptions the {@link ListPoliciesOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link PolicyList}",
        "* Create a policy.\n   *\n   * Creates a policy to grant access between a subject and a resource. There are two types of policies: **access** and\n   * **authorization**. A policy administrator might want to create an access policy which grants access to a user,\n   * service-id, or an access group. They might also want to create an authorization policy and setup access between\n   * services.\n   * ### Access To create an access policy, use **`\"type\": \"access\"`** in the body. The possible subject attributes are\n   * **`iam_id`** and **`access_group_id`**. Use the **`iam_id`** subject attribute for assigning access for a user or\n   * service-id. Use the **`access_group_id`** subject attribute for assigning access for an access group. The roles\n   * must be a subset of a service's or the platform's supported roles. The resource attributes must be a subset of a\n   * service's or the platform's supported attributes. The policy resource must include either the **`serviceType`**,\n   * **`serviceName`**,  or **`resourceGroupId`** attribute and the **`accountId`** attribute.` If the subject is a\n   * locked service-id, the request will fail.\n   * ### Authorization Authorization policies are supported by services on a case by case basis. Refer to service\n   * documentation to verify their support of authorization policies. To create an authorization policy, use **`\"type\":\n   * \"authorization\"`** in the body. The subject attributes must match the supported authorization subjects of the\n   * resource. Multiple subject attributes might be provided. The following attributes are supported:\n   *   serviceName, serviceInstance, region, resourceType, resource, accountId The policy roles must be a subset of the\n   * supported authorization roles supported by the target service. The user must also have the same level of access or\n   * greater to the target resource in order to grant the role. The resource attributes must be a subset of a service's\n   * or the platform's supported attributes. Both the policy subject and the policy resource must include the\n   * **`serviceName`** and **`accountId`** attributes.\n   *\n   * @param createPolicyOptions the {@link CreatePolicyOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link Policy}",
        "* Update a policy.\n   *\n   * Update a policy to grant access between a subject and a resource. A policy administrator might want to update an\n   * existing policy. The policy type cannot be changed (You cannot change an access policy to an authorization policy).\n   * ### Access To update an access policy, use **`\"type\": \"access\"`** in the body. The possible subject attributes are\n   * **`iam_id`** and **`access_group_id`**. Use the **`iam_id`** subject attribute for assigning access for a user or\n   * service-id. Use the **`access_group_id`** subject attribute for assigning access for an access group. The roles\n   * must be a subset of a service's or the platform's supported roles. The resource attributes must be a subset of a\n   * service's or the platform's supported attributes. The policy resource must include either the **`serviceType`**,\n   * **`serviceName`**,  or **`resourceGroupId`** attribute and the **`accountId`** attribute.` If the subject is a\n   * locked service-id, the request will fail.\n   * ### Authorization To update an authorization policy, use **`\"type\": \"authorization\"`** in the body. The subject\n   * attributes must match the supported authorization subjects of the resource. Multiple subject attributes might be\n   * provided. The following attributes are supported:\n   *   serviceName, serviceInstance, region, resourceType, resource, accountId The policy roles must be a subset of the\n   * supported authorization roles supported by the target service. The user must also have the same level of access or\n   * greater to the target resource in order to grant the role. The resource attributes must be a subset of a service's\n   * or the platform's supported attributes. Both the policy subject and the policy resource must include the\n   * **`serviceName`** and **`accountId`** attributes.\n   *\n   * @param updatePolicyOptions the {@link UpdatePolicyOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link Policy}",
        "* Retrieve a policy by ID.\n   *\n   * Retrieve a policy by providing a policy ID.\n   *\n   * @param getPolicyOptions the {@link GetPolicyOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link Policy}",
        "* Delete a policy by ID.\n   *\n   * Delete a policy by providing a policy ID. A policy cannot be deleted if the subject ID contains a locked service\n   * ID. If the subject of the policy is a locked service-id, the request will fail.\n   *\n   * @param deletePolicyOptions the {@link DeletePolicyOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a void result",
        "* Get roles by filters.\n   *\n   * Get roles based on the filters. While managing roles, you may want to retrieve roles and filter by usages. This can\n   * be done through query parameters. Currently, we only support the following attributes: account_id, and\n   * service_name. Only roles that match the filter and that the caller has read access to are returned. If the caller\n   * does not have read access to any roles an empty array is returned.\n   *\n   * @param listRolesOptions the {@link ListRolesOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link RoleList}",
        "* Get roles by filters.\n   *\n   * Get roles based on the filters. While managing roles, you may want to retrieve roles and filter by usages. This can\n   * be done through query parameters. Currently, we only support the following attributes: account_id, and\n   * service_name. Only roles that match the filter and that the caller has read access to are returned. If the caller\n   * does not have read access to any roles an empty array is returned.\n   *\n   * @return a {@link ServiceCall} with a result of type {@link RoleList}",
        "* Create a role.\n   *\n   * Creates a custom role for a specific service within the account. An account owner or a user assigned the\n   * Administrator role on the Role management service can create a custom role. Any number of actions for a single\n   * service can be mapped to the new role, but there must be at least one service-defined action to successfully create\n   * the new role.\n   *\n   * @param createRoleOptions the {@link CreateRoleOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link CustomRole}",
        "* Update a role.\n   *\n   * Update a custom role. A role administrator might want to update an existing role by updating the display name,\n   * description, or the actions that are mapped to the role. The name, account_id, and service_name can't be changed.\n   *\n   * @param updateRoleOptions the {@link UpdateRoleOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link CustomRole}",
        "* Retrieve a role by ID.\n   *\n   * Retrieve a role by providing a role ID.\n   *\n   * @param getRoleOptions the {@link GetRoleOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a result of type {@link CustomRole}",
        "* Delete a role by ID.\n   *\n   * Delete a role by providing a role ID.\n   *\n   * @param deleteRoleOptions the {@link DeleteRoleOptions} containing the options for the call\n   * @return a {@link ServiceCall} with a void result"
    ],
    "functions": [
        "IamPolicyManagement",
        "newInstance",
        "IamPolicyManagement",
        "newInstance",
        "IamPolicyManagement",
        "listPolicies",
        "createPolicy",
        "updatePolicy",
        "getPolicy",
        "deletePolicy",
        "listRoles",
        "listRoles",
        "createRole",
        "updateRole",
        "getRole",
        "deleteRole"
    ],
    "classes": [
        "IamPolicyManagement"
    ]
}