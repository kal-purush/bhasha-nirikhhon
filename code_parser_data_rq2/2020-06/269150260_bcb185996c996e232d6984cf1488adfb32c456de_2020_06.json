{
    "identifiers": [],
    "literals": [
        "\"Which statement about Hooks is not true?\"",
        "\"Hooks are 100% backwards-compatible and can be used side by side with classes\"",
        "\"Hooks are still in beta and not available yet\"",
        "\"Hooks are completely opt-in, there's no need to rewrite existing code\"",
        "\"All of the above\"",
        "\"b\"",
        "\"Which one is not a Hook?\"",
        "\"useState()\"",
        "\"useConst()\"",
        "\"useReducer()\"",
        "\"All of the above\"",
        "\"b\"",
        "\"What Hook should be used for data fetching?\"",
        "\"useDataFetching()\"",
        "\"useApi()\"",
        "\"useEffect()\"",
        "\"useRequest()\"",
        "\"c\"",
        "\"What are Hooks?\"",
        "'Hooks let you \"hook\" into a class component to set state.'",
        "\"New way of doing the same thing. Instead of function methods, we use classes.\"",
        "\"Hooks let you use function components to manage state, instead of class components.\"",
        "\"Hooks let you make your code more complex and confusing.\"",
        "\"c\"",
        "\"Which is not a React Hooks rule?\"",
        "\"Only call hooks at the top level.\"",
        "\"Only call Hooks from React classes.\"",
        "\"Don't call hooks inside loops, conditions or nested functions.\"",
        "\"Only hooks from React function components\"",
        "\"c\"",
        "\"Which statement about the Agile methodology is true?\"",
        "\"Agile emphasizes incremental delivery, continual planning, and continual learning.\"",
        "\"Agile is best for projects with well-defined requirements where no changes are expected.\"",
        "\"In Agile development all deliverable are delivered after the product is finished.\"",
        "\"All of the above\"",
        "\"a\"",
        "\"Which one is true about Synchronous vs Asynchronous?\"",
        "\"Asynchronous means only one execution at a time.\"",
        "\"Synchronous means more than one thing can synchronize and run at the same time.\"",
        "\"Synchronous basically means only one thing can execute at once.\"",
        "\"All of the above\"",
        "\"c\"",
        "\"Which is true about Web Services(API) SOAP vs REST?\"",
        "\"Rest was created to address the problems of SOAP.\"",
        "\"REST is a protocol whereas SOAP is an architectural pattern.\"",
        "\"REST uses service interfaces to expose its functionality to client applications while SOAP uses Uniform Service locators to access the components on the hardware device.\"",
        "\"REST needs more bandwidth for its usage whereas SOAP doesn't need much bandwidth.\"",
        "\"a\"",
        "\"What is the name of Stephen's dog?\"",
        "\"Finn\"",
        "\"Jake\"",
        "\"Fluffy\"",
        "\"He doesn't have a dog\"",
        "\"b\"",
        "\"When is Stephen's birthday?\"",
        "\"January 1, 1990\"",
        "\"Febuary 12, 1992\"",
        "\"April 21, 1992\"",
        "\"He wasn't born\"",
        "\"c\"",
        "\"How many siblings does Stephen have?\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"c\""
    ],
    "variables": [
        "HOOKS_QUESTIONS",
        "GENERAL_QUESTIONS",
        "STEPHEN_QUESTIONS"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}