{
    "identifiers": [
        "core_deletedIds",
        "core_deletedIds",
        "core_deletedIds",
        "core_deletedIds",
        "class2type",
        "class2type",
        "core_version",
        "selector",
        "context",
        "jQuery",
        "selector",
        "context",
        "rootjQuery",
        "all",
        "letter",
        "letter",
        "completed",
        "completed",
        "jQuery",
        "jQuery",
        "jQuery",
        "core_version",
        "jQuery",
        "selector",
        "context",
        "rootjQuery",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "selector",
        "match",
        "selector",
        "match",
        "rquickExpr",
        "selector",
        "match",
        "match",
        "context",
        "match",
        "context",
        "context",
        "jQuery",
        "context",
        "context",
        "jQuery",
        "jQuery",
        "match",
        "context",
        "context",
        "context",
        "context",
        "rsingleTag",
        "match",
        "jQuery",
        "context",
        "match",
        "context",
        "jQuery",
        "match",
        "match",
        "context",
        "match",
        "match",
        "context",
        "match",
        "elem",
        "match",
        "elem",
        "elem",
        "elem",
        "selector",
        "context",
        "context",
        "context",
        "rootjQuery",
        "selector",
        "context",
        "selector",
        "selector",
        "selector",
        "jQuery",
        "selector",
        "rootjQuery",
        "selector",
        "selector",
        "selector",
        "selector",
        "jQuery",
        "selector",
        "core_slice",
        "num",
        "num",
        "num",
        "num",
        "num",
        "elems",
        "jQuery",
        "elems",
        "ret",
        "ret",
        "ret",
        "callback",
        "args",
        "jQuery",
        "callback",
        "args",
        "fn",
        "jQuery",
        "fn",
        "core_slice",
        "arguments",
        "i",
        "i",
        "i",
        "len",
        "j",
        "j",
        "len",
        "j",
        "callback",
        "jQuery",
        "elem",
        "i",
        "callback",
        "elem",
        "i",
        "elem",
        "core_push",
        "jQuery",
        "jQuery",
        "jQuery",
        "jQuery",
        "arguments",
        "arguments",
        "target",
        "deep",
        "target",
        "target",
        "arguments",
        "i",
        "target",
        "jQuery",
        "target",
        "target",
        "length",
        "i",
        "target",
        "i",
        "i",
        "length",
        "i",
        "options",
        "arguments",
        "i",
        "name",
        "options",
        "src",
        "target",
        "name",
        "copy",
        "options",
        "name",
        "target",
        "copy",
        "deep",
        "copy",
        "jQuery",
        "copy",
        "copyIsArray",
        "jQuery",
        "copy",
        "copyIsArray",
        "copyIsArray",
        "clone",
        "src",
        "jQuery",
        "src",
        "src",
        "clone",
        "src",
        "jQuery",
        "src",
        "src",
        "target",
        "name",
        "jQuery",
        "deep",
        "clone",
        "copy",
        "copy",
        "target",
        "name",
        "copy",
        "target",
        "jQuery",
        "core_version",
        "deep",
        "jQuery",
        "_$",
        "deep",
        "jQuery",
        "_jQuery",
        "jQuery",
        "hold",
        "hold",
        "jQuery",
        "jQuery",
        "wait",
        "wait",
        "jQuery",
        "jQuery",
        "jQuery",
        "wait",
        "jQuery",
        "readyList",
        "jQuery",
        "jQuery",
        "jQuery",
        "obj",
        "jQuery",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "isNaN",
        "parseFloat",
        "obj",
        "isFinite",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "class2type",
        "core_toString",
        "obj",
        "obj",
        "obj",
        "jQuery",
        "obj",
        "obj",
        "jQuery",
        "obj",
        "obj",
        "core_hasOwn",
        "obj",
        "e",
        "obj",
        "name",
        "obj",
        "msg",
        "msg",
        "data",
        "context",
        "keepScripts",
        "data",
        "data",
        "context",
        "keepScripts",
        "context",
        "context",
        "context",
        "context",
        "rsingleTag",
        "data",
        "keepScripts",
        "parsed",
        "context",
        "parsed",
        "parsed",
        "jQuery",
        "data",
        "context",
        "scripts",
        "scripts",
        "jQuery",
        "scripts",
        "jQuery",
        "parsed",
        "data",
        "data",
        "data",
        "tmp",
        "DOMParser",
        "xml",
        "tmp",
        "data",
        "e",
        "xml",
        "xml",
        "xml",
        "jQuery",
        "data",
        "xml",
        "code",
        "code",
        "jQuery",
        "code",
        "code",
        "code",
        "script",
        "script",
        "code",
        "script",
        "script",
        "indirect",
        "code",
        "rmsPrefix",
        "rdashAlpha",
        "fcamelCase",
        "elem",
        "name",
        "elem",
        "elem",
        "name",
        "obj",
        "callback",
        "args",
        "obj",
        "isArraylike",
        "obj",
        "args",
        "isArray",
        "i",
        "length",
        "i",
        "value",
        "callback",
        "obj",
        "i",
        "args",
        "value",
        "i",
        "obj",
        "value",
        "callback",
        "obj",
        "i",
        "args",
        "value",
        "isArray",
        "i",
        "length",
        "i",
        "value",
        "callback",
        "obj",
        "i",
        "i",
        "obj",
        "i",
        "value",
        "i",
        "obj",
        "value",
        "callback",
        "obj",
        "i",
        "i",
        "obj",
        "i",
        "value",
        "obj",
        "text",
        "text",
        "core_trim",
        "text",
        "arr",
        "results",
        "results",
        "arr",
        "isArraylike",
        "arr",
        "jQuery",
        "ret",
        "arr",
        "arr",
        "arr",
        "core_push",
        "ret",
        "arr",
        "ret",
        "elem",
        "arr",
        "i",
        "arr",
        "core_indexOf",
        "arr",
        "elem",
        "i",
        "first",
        "second",
        "second",
        "first",
        "l",
        "j",
        "l",
        "j",
        "first",
        "i",
        "second",
        "j",
        "second",
        "j",
        "first",
        "i",
        "second",
        "j",
        "first",
        "i",
        "first",
        "elems",
        "callback",
        "inv",
        "elems",
        "inv",
        "inv",
        "i",
        "length",
        "i",
        "retVal",
        "callback",
        "elems",
        "i",
        "i",
        "inv",
        "retVal",
        "ret",
        "elems",
        "i",
        "ret",
        "elems",
        "callback",
        "arg",
        "elems",
        "isArraylike",
        "elems",
        "isArray",
        "i",
        "length",
        "i",
        "value",
        "callback",
        "elems",
        "i",
        "i",
        "arg",
        "value",
        "ret",
        "ret",
        "value",
        "i",
        "elems",
        "value",
        "callback",
        "elems",
        "i",
        "i",
        "arg",
        "value",
        "ret",
        "ret",
        "value",
        "core_concat",
        "ret",
        "fn",
        "context",
        "context",
        "tmp",
        "fn",
        "context",
        "context",
        "fn",
        "fn",
        "tmp",
        "jQuery",
        "fn",
        "args",
        "core_slice",
        "arguments",
        "proxy",
        "fn",
        "context",
        "args",
        "core_slice",
        "arguments",
        "proxy",
        "fn",
        "fn",
        "jQuery",
        "proxy",
        "elems",
        "fn",
        "key",
        "value",
        "chainable",
        "emptyGet",
        "raw",
        "elems",
        "key",
        "jQuery",
        "key",
        "chainable",
        "i",
        "key",
        "jQuery",
        "elems",
        "fn",
        "i",
        "key",
        "i",
        "emptyGet",
        "raw",
        "value",
        "chainable",
        "jQuery",
        "value",
        "raw",
        "bulk",
        "raw",
        "fn",
        "elems",
        "value",
        "fn",
        "bulk",
        "fn",
        "fn",
        "elem",
        "key",
        "value",
        "bulk",
        "jQuery",
        "elem",
        "value",
        "fn",
        "i",
        "length",
        "i",
        "fn",
        "elems",
        "i",
        "key",
        "raw",
        "value",
        "value",
        "elems",
        "i",
        "i",
        "fn",
        "elems",
        "i",
        "key",
        "chainable",
        "elems",
        "bulk",
        "fn",
        "elems",
        "length",
        "fn",
        "elems",
        "key",
        "emptyGet",
        "elem",
        "options",
        "callback",
        "args",
        "name",
        "options",
        "old",
        "name",
        "elem",
        "name",
        "elem",
        "name",
        "options",
        "name",
        "ret",
        "callback",
        "elem",
        "args",
        "name",
        "options",
        "elem",
        "name",
        "old",
        "name",
        "ret",
        "jQuery",
        "obj",
        "readyList",
        "readyList",
        "jQuery",
        "setTimeout",
        "jQuery",
        "completed",
        "completed",
        "readyList",
        "obj",
        "jQuery",
        "i",
        "name",
        "class2type",
        "name",
        "name",
        "obj",
        "obj",
        "jQuery",
        "obj",
        "jQuery",
        "obj",
        "obj",
        "length",
        "length",
        "length",
        "length",
        "length",
        "obj",
        "rootjQuery",
        "jQuery",
        "createCache",
        "createCache",
        "createCache",
        "a",
        "b",
        "a",
        "b",
        "hasDuplicate",
        "arr",
        "arr",
        "arr",
        "arr",
        "arr",
        "elem",
        "i",
        "len",
        "i",
        "i",
        "elem",
        "i",
        "characterEncoding",
        "whitespace",
        "characterEncoding",
        "whitespace",
        "whitespace",
        "identifier",
        "whitespace",
        "characterEncoding",
        "attributes",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "pseudos",
        "identifier",
        "characterEncoding",
        "characterEncoding",
        "characterEncoding",
        "attributes",
        "pseudos",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "booleans",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "whitespace",
        "_",
        "escaped",
        "escapedWhitespace",
        "escaped",
        "high",
        "high",
        "escapedWhitespace",
        "escaped",
        "high",
        "high",
        "high",
        "high",
        "push",
        "arr",
        "preferredDoc",
        "preferredDoc",
        "arr",
        "preferredDoc",
        "e",
        "push",
        "arr",
        "target",
        "els",
        "push_native",
        "target",
        "els",
        "target",
        "els",
        "target",
        "target",
        "j",
        "els",
        "i",
        "target",
        "j",
        "selector",
        "context",
        "results",
        "seed",
        "context",
        "context",
        "context",
        "preferredDoc",
        "setDocument",
        "context",
        "context",
        "context",
        "results",
        "results",
        "selector",
        "selector",
        "results",
        "nodeType",
        "context",
        "nodeType",
        "documentIsHTML",
        "seed",
        "match",
        "rquickExpr",
        "selector",
        "m",
        "match",
        "nodeType",
        "elem",
        "context",
        "m",
        "elem",
        "elem",
        "elem",
        "m",
        "results",
        "elem",
        "results",
        "results",
        "context",
        "elem",
        "context",
        "m",
        "contains",
        "context",
        "elem",
        "elem",
        "m",
        "results",
        "elem",
        "results",
        "match",
        "push",
        "results",
        "context",
        "selector",
        "results",
        "m",
        "match",
        "support",
        "context",
        "push",
        "results",
        "context",
        "m",
        "results",
        "support",
        "rbuggyQSA",
        "rbuggyQSA",
        "selector",
        "nid",
        "old",
        "expando",
        "newContext",
        "context",
        "newSelector",
        "nodeType",
        "selector",
        "nodeType",
        "context",
        "groups",
        "tokenize",
        "selector",
        "old",
        "context",
        "nid",
        "old",
        "rescape",
        "context",
        "nid",
        "nid",
        "nid",
        "i",
        "groups",
        "i",
        "groups",
        "i",
        "nid",
        "toSelector",
        "groups",
        "i",
        "newContext",
        "rsibling",
        "selector",
        "context",
        "context",
        "newSelector",
        "groups",
        "newSelector",
        "push",
        "results",
        "newContext",
        "newSelector",
        "results",
        "qsaError",
        "old",
        "context",
        "select",
        "selector",
        "rtrim",
        "context",
        "results",
        "seed",
        "key",
        "value",
        "keys",
        "key",
        "Expr",
        "cache",
        "keys",
        "cache",
        "key",
        "value",
        "cache",
        "fn",
        "fn",
        "expando",
        "fn",
        "fn",
        "fn",
        "div",
        "e",
        "div",
        "div",
        "div",
        "div",
        "attrs",
        "handler",
        "attrs",
        "attrs",
        "i",
        "Expr",
        "arr",
        "i",
        "handler",
        "a",
        "b",
        "b",
        "a",
        "cur",
        "a",
        "b",
        "b",
        "MAX_NEGATIVE",
        "a",
        "MAX_NEGATIVE",
        "diff",
        "diff",
        "cur",
        "cur",
        "cur",
        "cur",
        "b",
        "a",
        "elem",
        "elem",
        "name",
        "elem",
        "elem",
        "elem",
        "name",
        "name",
        "elem",
        "fn",
        "markFunction",
        "argument",
        "argument",
        "argument",
        "markFunction",
        "seed",
        "matches",
        "fn",
        "seed",
        "argument",
        "matchIndexes",
        "i",
        "seed",
        "j",
        "matchIndexes",
        "i",
        "seed",
        "j",
        "matches",
        "j",
        "seed",
        "j",
        "isXML",
        "Sizzle",
        "elem",
        "elem",
        "elem",
        "elem",
        "documentElement",
        "documentElement",
        "support",
        "Sizzle",
        "setDocument",
        "Sizzle",
        "node",
        "node",
        "node",
        "node",
        "preferredDoc",
        "doc",
        "doc",
        "doc",
        "doc",
        "doc",
        "docElem",
        "doc",
        "documentIsHTML",
        "isXML",
        "doc",
        "parent",
        "parent",
        "parent",
        "parent",
        "parent",
        "setDocument",
        "support",
        "div",
        "div",
        "div",
        "support",
        "div",
        "div",
        "doc",
        "div",
        "support",
        "div",
        "div",
        "div",
        "div",
        "support",
        "div",
        "docElem",
        "div",
        "expando",
        "doc",
        "doc",
        "expando",
        "support",
        "Expr",
        "id",
        "context",
        "context",
        "strundefined",
        "documentIsHTML",
        "context",
        "id",
        "m",
        "m",
        "m",
        "Expr",
        "id",
        "id",
        "runescape",
        "funescape",
        "elem",
        "elem",
        "attrId",
        "Expr",
        "Expr",
        "id",
        "id",
        "runescape",
        "funescape",
        "elem",
        "elem",
        "strundefined",
        "elem",
        "node",
        "node",
        "attrId",
        "Expr",
        "support",
        "tag",
        "context",
        "context",
        "strundefined",
        "context",
        "tag",
        "tag",
        "context",
        "context",
        "tag",
        "tag",
        "elem",
        "results",
        "i",
        "elem",
        "tmp",
        "elem",
        "tmp",
        "results",
        "Expr",
        "support",
        "className",
        "context",
        "context",
        "strundefined",
        "documentIsHTML",
        "context",
        "className",
        "rbuggyMatches",
        "rbuggyQSA",
        "support",
        "rnative",
        "doc",
        "div",
        "div",
        "div",
        "rbuggyQSA",
        "whitespace",
        "booleans",
        "div",
        "rbuggyQSA",
        "div",
        "doc",
        "input",
        "div",
        "input",
        "div",
        "rbuggyQSA",
        "whitespace",
        "div",
        "rbuggyQSA",
        "div",
        "rbuggyQSA",
        "support",
        "rnative",
        "matches",
        "docElem",
        "docElem",
        "docElem",
        "docElem",
        "div",
        "support",
        "matches",
        "div",
        "matches",
        "div",
        "rbuggyMatches",
        "pseudos",
        "rbuggyQSA",
        "rbuggyQSA",
        "rbuggyQSA",
        "rbuggyMatches",
        "rbuggyMatches",
        "rbuggyMatches",
        "contains",
        "rnative",
        "docElem",
        "docElem",
        "a",
        "b",
        "a",
        "a",
        "a",
        "b",
        "b",
        "a",
        "bup",
        "bup",
        "bup",
        "adown",
        "adown",
        "bup",
        "a",
        "a",
        "bup",
        "a",
        "b",
        "b",
        "b",
        "b",
        "b",
        "a",
        "sortOrder",
        "docElem",
        "a",
        "b",
        "a",
        "b",
        "hasDuplicate",
        "b",
        "a",
        "a",
        "b",
        "compare",
        "compare",
        "support",
        "b",
        "a",
        "compare",
        "a",
        "doc",
        "contains",
        "preferredDoc",
        "a",
        "b",
        "doc",
        "contains",
        "preferredDoc",
        "b",
        "sortInput",
        "indexOf",
        "sortInput",
        "a",
        "indexOf",
        "sortInput",
        "b",
        "compare",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "hasDuplicate",
        "aup",
        "bup",
        "a",
        "doc",
        "b",
        "doc",
        "aup",
        "bup",
        "sortInput",
        "indexOf",
        "sortInput",
        "a",
        "indexOf",
        "sortInput",
        "b",
        "aup",
        "bup",
        "siblingCheck",
        "a",
        "b",
        "cur",
        "a",
        "cur",
        "cur",
        "ap",
        "cur",
        "cur",
        "b",
        "cur",
        "cur",
        "bp",
        "cur",
        "ap",
        "i",
        "bp",
        "i",
        "i",
        "i",
        "siblingCheck",
        "ap",
        "i",
        "bp",
        "i",
        "ap",
        "i",
        "preferredDoc",
        "bp",
        "i",
        "preferredDoc",
        "doc",
        "Sizzle",
        "expr",
        "elements",
        "Sizzle",
        "expr",
        "elements",
        "Sizzle",
        "elem",
        "expr",
        "elem",
        "elem",
        "setDocument",
        "elem",
        "expr",
        "expr",
        "rattributeQuotes",
        "support",
        "documentIsHTML",
        "rbuggyMatches",
        "rbuggyMatches",
        "expr",
        "rbuggyQSA",
        "rbuggyQSA",
        "expr",
        "matches",
        "elem",
        "expr",
        "ret",
        "support",
        "elem",
        "elem",
        "ret",
        "e",
        "Sizzle",
        "expr",
        "elem",
        "Sizzle",
        "context",
        "elem",
        "context",
        "context",
        "setDocument",
        "context",
        "contains",
        "context",
        "elem",
        "Sizzle",
        "elem",
        "name",
        "elem",
        "elem",
        "setDocument",
        "elem",
        "Expr",
        "name",
        "fn",
        "hasOwn",
        "Expr",
        "name",
        "fn",
        "elem",
        "name",
        "documentIsHTML",
        "val",
        "support",
        "documentIsHTML",
        "elem",
        "name",
        "val",
        "elem",
        "name",
        "val",
        "val",
        "val",
        "Sizzle",
        "msg",
        "msg",
        "Sizzle",
        "results",
        "hasDuplicate",
        "support",
        "sortInput",
        "support",
        "results",
        "results",
        "sortOrder",
        "hasDuplicate",
        "elem",
        "results",
        "i",
        "elem",
        "results",
        "i",
        "j",
        "duplicates",
        "i",
        "j",
        "results",
        "duplicates",
        "j",
        "results",
        "getText",
        "Sizzle",
        "elem",
        "elem",
        "nodeType",
        "node",
        "elem",
        "i",
        "i",
        "ret",
        "getText",
        "node",
        "nodeType",
        "nodeType",
        "nodeType",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "ret",
        "getText",
        "elem",
        "nodeType",
        "nodeType",
        "elem",
        "ret",
        "Expr",
        "Sizzle",
        "markFunction",
        "matchExpr",
        "match",
        "match",
        "match",
        "runescape",
        "funescape",
        "match",
        "match",
        "match",
        "runescape",
        "funescape",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "Sizzle",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "match",
        "Sizzle",
        "match",
        "match",
        "match",
        "match",
        "match",
        "matchExpr",
        "match",
        "match",
        "match",
        "match",
        "match",
        "unquoted",
        "rpseudo",
        "unquoted",
        "excess",
        "tokenize",
        "unquoted",
        "excess",
        "unquoted",
        "unquoted",
        "excess",
        "unquoted",
        "match",
        "match",
        "excess",
        "match",
        "unquoted",
        "excess",
        "match",
        "nodeNameSelector",
        "nodeNameSelector",
        "runescape",
        "funescape",
        "nodeNameSelector",
        "elem",
        "elem",
        "elem",
        "nodeName",
        "className",
        "classCache",
        "className",
        "pattern",
        "pattern",
        "whitespace",
        "className",
        "whitespace",
        "classCache",
        "className",
        "elem",
        "pattern",
        "elem",
        "elem",
        "elem",
        "strundefined",
        "elem",
        "name",
        "check",
        "elem",
        "Sizzle",
        "elem",
        "name",
        "result",
        "result",
        "result",
        "check",
        "result",
        "check",
        "check",
        "result",
        "check",
        "check",
        "result",
        "check",
        "check",
        "result",
        "check",
        "check",
        "result",
        "check",
        "result",
        "check",
        "result",
        "check",
        "check",
        "what",
        "argument",
        "first",
        "last",
        "what",
        "first",
        "last",
        "elem",
        "elem",
        "elem",
        "context",
        "xml",
        "simple",
        "forward",
        "elem",
        "ofType",
        "elem",
        "xml",
        "ofType",
        "parent",
        "simple",
        "dir",
        "node",
        "elem",
        "node",
        "node",
        "dir",
        "ofType",
        "node",
        "name",
        "node",
        "start",
        "dir",
        "start",
        "start",
        "forward",
        "parent",
        "parent",
        "forward",
        "useCache",
        "outerCache",
        "parent",
        "expando",
        "parent",
        "expando",
        "cache",
        "outerCache",
        "nodeIndex",
        "cache",
        "dirruns",
        "cache",
        "diff",
        "cache",
        "dirruns",
        "cache",
        "node",
        "nodeIndex",
        "parent",
        "nodeIndex",
        "node",
        "nodeIndex",
        "node",
        "node",
        "dir",
        "diff",
        "nodeIndex",
        "start",
        "node",
        "diff",
        "node",
        "elem",
        "outerCache",
        "dirruns",
        "nodeIndex",
        "diff",
        "useCache",
        "cache",
        "elem",
        "expando",
        "elem",
        "expando",
        "cache",
        "dirruns",
        "diff",
        "cache",
        "node",
        "nodeIndex",
        "node",
        "node",
        "dir",
        "diff",
        "nodeIndex",
        "start",
        "ofType",
        "node",
        "name",
        "node",
        "diff",
        "useCache",
        "node",
        "expando",
        "node",
        "expando",
        "dirruns",
        "diff",
        "node",
        "elem",
        "diff",
        "last",
        "diff",
        "first",
        "diff",
        "first",
        "diff",
        "first",
        "pseudo",
        "argument",
        "Expr",
        "pseudo",
        "Expr",
        "pseudo",
        "Sizzle",
        "pseudo",
        "fn",
        "expando",
        "fn",
        "argument",
        "fn",
        "args",
        "pseudo",
        "pseudo",
        "argument",
        "Expr",
        "pseudo",
        "markFunction",
        "seed",
        "matches",
        "fn",
        "seed",
        "argument",
        "matched",
        "i",
        "idx",
        "indexOf",
        "seed",
        "matched",
        "i",
        "seed",
        "idx",
        "matches",
        "idx",
        "matched",
        "i",
        "elem",
        "fn",
        "elem",
        "args",
        "fn",
        "markFunction",
        "selector",
        "compile",
        "selector",
        "rtrim",
        "matcher",
        "expando",
        "markFunction",
        "seed",
        "matches",
        "context",
        "xml",
        "matcher",
        "seed",
        "xml",
        "seed",
        "i",
        "elem",
        "unmatched",
        "i",
        "seed",
        "i",
        "matches",
        "i",
        "elem",
        "elem",
        "context",
        "xml",
        "input",
        "elem",
        "matcher",
        "input",
        "xml",
        "results",
        "results",
        "markFunction",
        "selector",
        "elem",
        "Sizzle",
        "selector",
        "elem",
        "markFunction",
        "text",
        "elem",
        "elem",
        "elem",
        "getText",
        "elem",
        "text",
        "markFunction",
        "lang",
        "ridentifier",
        "lang",
        "Sizzle",
        "lang",
        "lang",
        "lang",
        "runescape",
        "funescape",
        "elem",
        "elemLang",
        "documentIsHTML",
        "elem",
        "elem",
        "elem",
        "elemLang",
        "elemLang",
        "elemLang",
        "lang",
        "elemLang",
        "lang",
        "elem",
        "elem",
        "elem",
        "elem",
        "hash",
        "hash",
        "elem",
        "elem",
        "elem",
        "docElem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "nodeName",
        "elem",
        "nodeName",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "Expr",
        "elem",
        "elem",
        "rheader",
        "elem",
        "elem",
        "rinputs",
        "elem",
        "elem",
        "elem",
        "name",
        "elem",
        "name",
        "elem",
        "elem",
        "elem",
        "attr",
        "elem",
        "attr",
        "elem",
        "createPositionalPseudo",
        "createPositionalPseudo",
        "matchIndexes",
        "length",
        "length",
        "createPositionalPseudo",
        "matchIndexes",
        "length",
        "argument",
        "argument",
        "argument",
        "length",
        "argument",
        "createPositionalPseudo",
        "matchIndexes",
        "length",
        "i",
        "length",
        "i",
        "matchIndexes",
        "i",
        "matchIndexes",
        "createPositionalPseudo",
        "matchIndexes",
        "length",
        "i",
        "length",
        "i",
        "matchIndexes",
        "i",
        "matchIndexes",
        "createPositionalPseudo",
        "matchIndexes",
        "length",
        "argument",
        "argument",
        "argument",
        "length",
        "argument",
        "i",
        "matchIndexes",
        "i",
        "matchIndexes",
        "createPositionalPseudo",
        "matchIndexes",
        "length",
        "argument",
        "argument",
        "argument",
        "length",
        "argument",
        "i",
        "length",
        "matchIndexes",
        "i",
        "matchIndexes",
        "Expr",
        "Expr",
        "i",
        "Expr",
        "i",
        "createInputPseudo",
        "i",
        "i",
        "Expr",
        "i",
        "createButtonPseudo",
        "i",
        "setFilters",
        "Expr",
        "Expr",
        "Expr",
        "setFilters",
        "selector",
        "parseOnly",
        "tokenCache",
        "selector",
        "cached",
        "parseOnly",
        "cached",
        "soFar",
        "selector",
        "groups",
        "preFilters",
        "Expr",
        "soFar",
        "matched",
        "match",
        "rcomma",
        "soFar",
        "match",
        "soFar",
        "soFar",
        "match",
        "soFar",
        "groups",
        "tokens",
        "matched",
        "match",
        "rcombinators",
        "soFar",
        "matched",
        "match",
        "tokens",
        "matched",
        "match",
        "rtrim",
        "soFar",
        "soFar",
        "matched",
        "Expr",
        "match",
        "matchExpr",
        "soFar",
        "preFilters",
        "match",
        "preFilters",
        "match",
        "matched",
        "match",
        "tokens",
        "matched",
        "match",
        "soFar",
        "soFar",
        "matched",
        "matched",
        "parseOnly",
        "soFar",
        "soFar",
        "Sizzle",
        "selector",
        "tokenCache",
        "selector",
        "groups",
        "tokens",
        "tokens",
        "i",
        "len",
        "i",
        "selector",
        "tokens",
        "i",
        "selector",
        "matcher",
        "combinator",
        "combinator",
        "dir",
        "done",
        "combinator",
        "elem",
        "context",
        "xml",
        "elem",
        "elem",
        "dir",
        "elem",
        "checkNonElements",
        "matcher",
        "elem",
        "context",
        "xml",
        "elem",
        "context",
        "xml",
        "dirruns",
        "doneName",
        "xml",
        "elem",
        "elem",
        "dir",
        "elem",
        "checkNonElements",
        "matcher",
        "elem",
        "context",
        "xml",
        "elem",
        "elem",
        "dir",
        "elem",
        "checkNonElements",
        "outerCache",
        "elem",
        "expando",
        "elem",
        "expando",
        "cache",
        "outerCache",
        "dir",
        "cache",
        "dirkey",
        "data",
        "cache",
        "data",
        "cachedruns",
        "data",
        "cache",
        "outerCache",
        "dir",
        "dirkey",
        "cache",
        "matcher",
        "elem",
        "context",
        "xml",
        "cachedruns",
        "cache",
        "matchers",
        "matchers",
        "elem",
        "context",
        "xml",
        "matchers",
        "i",
        "matchers",
        "i",
        "elem",
        "context",
        "xml",
        "matchers",
        "unmatched",
        "context",
        "xml",
        "unmatched",
        "i",
        "len",
        "i",
        "elem",
        "unmatched",
        "i",
        "elem",
        "context",
        "xml",
        "newUnmatched",
        "elem",
        "mapped",
        "i",
        "newUnmatched",
        "preFilter",
        "selector",
        "matcher",
        "postFilter",
        "postFinder",
        "postSelector",
        "postFilter",
        "postFilter",
        "expando",
        "postFilter",
        "setMatcher",
        "postFilter",
        "postFinder",
        "postFinder",
        "expando",
        "postFinder",
        "setMatcher",
        "postFinder",
        "postSelector",
        "markFunction",
        "seed",
        "results",
        "context",
        "xml",
        "results",
        "seed",
        "multipleContexts",
        "selector",
        "context",
        "context",
        "context",
        "preFilter",
        "seed",
        "selector",
        "condense",
        "elems",
        "preMap",
        "preFilter",
        "context",
        "xml",
        "elems",
        "matcher",
        "postFinder",
        "seed",
        "preFilter",
        "preexisting",
        "postFilter",
        "results",
        "matcherIn",
        "matcher",
        "matcher",
        "matcherIn",
        "matcherOut",
        "context",
        "xml",
        "postFilter",
        "temp",
        "condense",
        "matcherOut",
        "postMap",
        "postFilter",
        "temp",
        "context",
        "xml",
        "i",
        "temp",
        "i",
        "elem",
        "temp",
        "i",
        "matcherOut",
        "postMap",
        "i",
        "matcherIn",
        "postMap",
        "i",
        "elem",
        "seed",
        "postFinder",
        "preFilter",
        "postFinder",
        "temp",
        "i",
        "matcherOut",
        "i",
        "elem",
        "matcherOut",
        "i",
        "temp",
        "matcherIn",
        "i",
        "elem",
        "postFinder",
        "matcherOut",
        "temp",
        "xml",
        "i",
        "matcherOut",
        "i",
        "elem",
        "matcherOut",
        "i",
        "temp",
        "postFinder",
        "indexOf",
        "seed",
        "elem",
        "preMap",
        "i",
        "seed",
        "temp",
        "results",
        "temp",
        "elem",
        "matcherOut",
        "condense",
        "matcherOut",
        "results",
        "matcherOut",
        "preexisting",
        "matcherOut",
        "matcherOut",
        "postFinder",
        "postFinder",
        "results",
        "matcherOut",
        "xml",
        "push",
        "results",
        "matcherOut",
        "tokens",
        "tokens",
        "Expr",
        "tokens",
        "leadingRelative",
        "Expr",
        "leadingRelative",
        "addCombinator",
        "elem",
        "elem",
        "checkContext",
        "implicitRelative",
        "addCombinator",
        "elem",
        "indexOf",
        "checkContext",
        "elem",
        "implicitRelative",
        "elem",
        "context",
        "xml",
        "leadingRelative",
        "xml",
        "context",
        "outermostContext",
        "checkContext",
        "context",
        "matchContext",
        "elem",
        "context",
        "xml",
        "matchAnyContext",
        "elem",
        "context",
        "xml",
        "i",
        "len",
        "i",
        "matcher",
        "Expr",
        "tokens",
        "i",
        "matchers",
        "addCombinator",
        "elementMatcher",
        "matchers",
        "matcher",
        "matcher",
        "Expr",
        "tokens",
        "i",
        "tokens",
        "i",
        "matcher",
        "expando",
        "j",
        "i",
        "j",
        "len",
        "j",
        "Expr",
        "tokens",
        "j",
        "setMatcher",
        "i",
        "elementMatcher",
        "matchers",
        "i",
        "toSelector",
        "tokens",
        "i",
        "tokens",
        "i",
        "rtrim",
        "matcher",
        "i",
        "j",
        "matcherFromTokens",
        "tokens",
        "i",
        "j",
        "j",
        "len",
        "matcherFromTokens",
        "tokens",
        "tokens",
        "j",
        "j",
        "len",
        "toSelector",
        "tokens",
        "matchers",
        "matcher",
        "elementMatcher",
        "matchers",
        "elementMatchers",
        "setMatchers",
        "setMatchers",
        "elementMatchers",
        "seed",
        "context",
        "xml",
        "results",
        "expandContext",
        "seed",
        "expandContext",
        "seed",
        "byElement",
        "Expr",
        "expandContext",
        "context",
        "context",
        "dirruns",
        "contextBackup",
        "outermost",
        "outermostContext",
        "context",
        "context",
        "cachedruns",
        "matcherCachedRuns",
        "elem",
        "elems",
        "i",
        "i",
        "byElement",
        "elem",
        "j",
        "matcher",
        "elementMatchers",
        "j",
        "matcher",
        "elem",
        "context",
        "xml",
        "results",
        "elem",
        "outermost",
        "dirruns",
        "dirrunsUnique",
        "cachedruns",
        "matcherCachedRuns",
        "bySet",
        "elem",
        "matcher",
        "elem",
        "matchedCount",
        "seed",
        "unmatched",
        "elem",
        "matchedCount",
        "i",
        "bySet",
        "i",
        "matchedCount",
        "j",
        "matcher",
        "setMatchers",
        "j",
        "matcher",
        "unmatched",
        "setMatched",
        "context",
        "xml",
        "seed",
        "matchedCount",
        "i",
        "unmatched",
        "i",
        "setMatched",
        "i",
        "setMatched",
        "i",
        "pop",
        "results",
        "setMatched",
        "condense",
        "setMatched",
        "push",
        "results",
        "setMatched",
        "outermost",
        "seed",
        "setMatched",
        "matchedCount",
        "setMatchers",
        "Sizzle",
        "results",
        "outermost",
        "dirruns",
        "dirrunsUnique",
        "outermostContext",
        "contextBackup",
        "unmatched",
        "bySet",
        "markFunction",
        "superMatcher",
        "superMatcher",
        "compile",
        "Sizzle",
        "selector",
        "group",
        "compilerCache",
        "selector",
        "cached",
        "group",
        "group",
        "tokenize",
        "selector",
        "i",
        "group",
        "i",
        "cached",
        "matcherFromTokens",
        "group",
        "i",
        "cached",
        "expando",
        "setMatchers",
        "cached",
        "elementMatchers",
        "cached",
        "cached",
        "compilerCache",
        "selector",
        "matcherFromGroupMatchers",
        "elementMatchers",
        "setMatchers",
        "cached",
        "selector",
        "contexts",
        "results",
        "contexts",
        "i",
        "len",
        "i",
        "Sizzle",
        "selector",
        "contexts",
        "i",
        "results",
        "results",
        "selector",
        "context",
        "results",
        "seed",
        "tokenize",
        "selector",
        "seed",
        "match",
        "tokens",
        "match",
        "match",
        "tokens",
        "token",
        "tokens",
        "support",
        "context",
        "documentIsHTML",
        "Expr",
        "tokens",
        "context",
        "Expr",
        "token",
        "runescape",
        "funescape",
        "context",
        "context",
        "results",
        "selector",
        "selector",
        "tokens",
        "i",
        "matchExpr",
        "selector",
        "tokens",
        "i",
        "token",
        "tokens",
        "i",
        "Expr",
        "token",
        "find",
        "Expr",
        "seed",
        "find",
        "token",
        "runescape",
        "funescape",
        "rsibling",
        "tokens",
        "context",
        "context",
        "tokens",
        "i",
        "selector",
        "seed",
        "toSelector",
        "tokens",
        "selector",
        "push",
        "results",
        "seed",
        "results",
        "compile",
        "selector",
        "match",
        "seed",
        "context",
        "documentIsHTML",
        "results",
        "rsibling",
        "selector",
        "results",
        "support",
        "expando",
        "sortOrder",
        "expando",
        "support",
        "hasDuplicate",
        "setDocument",
        "support",
        "div1",
        "div1",
        "div",
        "div",
        "div",
        "addHandle",
        "elem",
        "name",
        "isXML",
        "isXML",
        "elem",
        "name",
        "name",
        "support",
        "div",
        "div",
        "div",
        "div",
        "addHandle",
        "elem",
        "name",
        "isXML",
        "isXML",
        "elem",
        "elem",
        "div",
        "div",
        "addHandle",
        "booleans",
        "elem",
        "name",
        "isXML",
        "isXML",
        "val",
        "elem",
        "name",
        "val",
        "val",
        "elem",
        "name",
        "name",
        "jQuery",
        "Sizzle",
        "jQuery",
        "Sizzle",
        "jQuery",
        "jQuery",
        "jQuery",
        "Sizzle",
        "jQuery",
        "Sizzle",
        "jQuery",
        "Sizzle",
        "jQuery",
        "Sizzle",
        "options",
        "optionsCache",
        "options",
        "jQuery",
        "options",
        "core_rnotwhite",
        "_",
        "flag",
        "flag",
        "jQuery",
        "options",
        "options",
        "options",
        "optionsCache",
        "options",
        "createOptions",
        "options",
        "jQuery",
        "options",
        "options",
        "data",
        "memory",
        "options",
        "data",
        "fired",
        "firingIndex",
        "firingStart",
        "firingStart",
        "firingLength",
        "firing",
        "firingIndex",
        "firingLength",
        "firingIndex",
        "firingIndex",
        "data",
        "data",
        "options",
        "memory",
        "firing",
        "stack",
        "stack",
        "fire",
        "stack",
        "memory",
        "add",
        "args",
        "jQuery",
        "args",
        "_",
        "arg",
        "jQuery",
        "arg",
        "options",
        "arg",
        "arg",
        "arg",
        "arg",
        "add",
        "arg",
        "arguments",
        "firing",
        "firingLength",
        "memory",
        "firingStart",
        "start",
        "fire",
        "memory",
        "jQuery",
        "arguments",
        "_",
        "arg",
        "index",
        "jQuery",
        "arg",
        "index",
        "index",
        "firing",
        "index",
        "firingLength",
        "firingLength",
        "index",
        "firingIndex",
        "firingIndex",
        "fn",
        "fn",
        "jQuery",
        "fn",
        "firingLength",
        "stack",
        "memory",
        "stack",
        "memory",
        "stack",
        "context",
        "args",
        "fired",
        "stack",
        "args",
        "args",
        "args",
        "context",
        "args",
        "args",
        "args",
        "firing",
        "stack",
        "args",
        "fire",
        "args",
        "arguments",
        "fired",
        "jQuery",
        "func",
        "jQuery",
        "jQuery",
        "jQuery",
        "state",
        "deferred",
        "arguments",
        "arguments",
        "jQuery",
        "newDefer",
        "jQuery",
        "tuples",
        "i",
        "jQuery",
        "fns",
        "i",
        "fns",
        "i",
        "deferred",
        "fn",
        "fn",
        "arguments",
        "returned",
        "jQuery",
        "returned",
        "returned",
        "newDefer",
        "newDefer",
        "newDefer",
        "newDefer",
        "action",
        "promise",
        "newDefer",
        "fn",
        "returned",
        "arguments",
        "fns",
        "obj",
        "obj",
        "jQuery",
        "obj",
        "promise",
        "promise",
        "promise",
        "promise",
        "jQuery",
        "tuples",
        "i",
        "promise",
        "stateString",
        "state",
        "stateString",
        "tuples",
        "i",
        "tuples",
        "deferred",
        "deferred",
        "deferred",
        "promise",
        "arguments",
        "deferred",
        "promise",
        "deferred",
        "func",
        "func",
        "deferred",
        "deferred",
        "deferred",
        "subordinate",
        "core_slice",
        "arguments",
        "resolveValues",
        "length",
        "subordinate",
        "jQuery",
        "subordinate",
        "length",
        "remaining",
        "subordinate",
        "jQuery",
        "i",
        "contexts",
        "values",
        "value",
        "contexts",
        "i",
        "values",
        "i",
        "arguments",
        "core_slice",
        "arguments",
        "value",
        "values",
        "progressValues",
        "deferred",
        "contexts",
        "values",
        "remaining",
        "deferred",
        "contexts",
        "values",
        "length",
        "progressValues",
        "length",
        "progressContexts",
        "length",
        "resolveContexts",
        "length",
        "i",
        "length",
        "i",
        "resolveValues",
        "i",
        "jQuery",
        "resolveValues",
        "i",
        "resolveValues",
        "i",
        "updateFunc",
        "i",
        "resolveContexts",
        "resolveValues",
        "deferred",
        "updateFunc",
        "i",
        "progressContexts",
        "progressValues",
        "remaining",
        "remaining",
        "deferred",
        "resolveContexts",
        "resolveValues",
        "deferred",
        "jQuery",
        "support",
        "select",
        "input",
        "support",
        "input",
        "support",
        "input",
        "support",
        "opt",
        "support",
        "support",
        "support",
        "input",
        "support",
        "input",
        "select",
        "support",
        "opt",
        "input",
        "input",
        "input",
        "support",
        "input",
        "input",
        "input",
        "fragment",
        "input",
        "support",
        "fragment",
        "support",
        "div",
        "div",
        "support",
        "div",
        "jQuery",
        "body",
        "container",
        "container",
        "body",
        "container",
        "div",
        "div",
        "div",
        "jQuery",
        "body",
        "body",
        "support",
        "div",
        "support",
        "div",
        "support",
        "div",
        "marginDiv",
        "div",
        "marginDiv",
        "div",
        "divReset",
        "marginDiv",
        "marginDiv",
        "div",
        "support",
        "parseFloat",
        "marginDiv",
        "body",
        "container",
        "support",
        "jQuery",
        "Data",
        "Data",
        "owner",
        "owner",
        "owner",
        "owner",
        "Data",
        "owner",
        "Data",
        "owner",
        "owner",
        "unlock",
        "unlock",
        "Data",
        "descriptor",
        "unlock",
        "owner",
        "descriptor",
        "e",
        "descriptor",
        "unlock",
        "jQuery",
        "owner",
        "descriptor",
        "unlock",
        "unlock",
        "unlock",
        "owner",
        "data",
        "value",
        "owner",
        "unlock",
        "data",
        "cache",
        "data",
        "value",
        "jQuery",
        "cache",
        "jQuery",
        "unlock",
        "data",
        "prop",
        "data",
        "cache",
        "prop",
        "data",
        "prop",
        "cache",
        "owner",
        "key",
        "owner",
        "key",
        "cache",
        "cache",
        "key",
        "owner",
        "key",
        "value",
        "key",
        "key",
        "key",
        "value",
        "stored",
        "owner",
        "key",
        "stored",
        "stored",
        "owner",
        "jQuery",
        "key",
        "owner",
        "key",
        "value",
        "value",
        "value",
        "key",
        "owner",
        "key",
        "owner",
        "unlock",
        "key",
        "unlock",
        "jQuery",
        "key",
        "name",
        "key",
        "key",
        "jQuery",
        "camel",
        "jQuery",
        "key",
        "key",
        "cache",
        "name",
        "key",
        "camel",
        "name",
        "camel",
        "name",
        "name",
        "cache",
        "name",
        "name",
        "core_rnotwhite",
        "i",
        "name",
        "i",
        "cache",
        "name",
        "i",
        "owner",
        "jQuery",
        "owner",
        "owner",
        "owner",
        "owner",
        "data_user",
        "Data",
        "data_priv",
        "Data",
        "jQuery",
        "Data",
        "elem",
        "data_user",
        "elem",
        "data_priv",
        "elem",
        "elem",
        "name",
        "data",
        "data_user",
        "elem",
        "name",
        "data",
        "elem",
        "name",
        "data_user",
        "elem",
        "name",
        "elem",
        "name",
        "data",
        "data_priv",
        "elem",
        "name",
        "data",
        "elem",
        "name",
        "data_priv",
        "elem",
        "name",
        "jQuery",
        "key",
        "value",
        "key",
        "data",
        "data_user",
        "elem",
        "elem",
        "data_priv",
        "elem",
        "attrs",
        "elem",
        "i",
        "attrs",
        "i",
        "name",
        "attrs",
        "i",
        "name",
        "name",
        "jQuery",
        "name",
        "dataAttr",
        "elem",
        "name",
        "data",
        "name",
        "data_priv",
        "elem",
        "data",
        "key",
        "data_user",
        "key",
        "jQuery",
        "value",
        "jQuery",
        "key",
        "elem",
        "value",
        "data",
        "data_user",
        "elem",
        "key",
        "data",
        "data",
        "data",
        "data_user",
        "elem",
        "camelKey",
        "data",
        "data",
        "data",
        "dataAttr",
        "elem",
        "camelKey",
        "data",
        "data",
        "data_user",
        "camelKey",
        "data_user",
        "camelKey",
        "value",
        "key",
        "data",
        "data_user",
        "key",
        "value",
        "value",
        "arguments",
        "key",
        "data_user",
        "key",
        "elem",
        "key",
        "data",
        "data",
        "elem",
        "name",
        "key",
        "rmultiDash",
        "data",
        "elem",
        "name",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "rbrace",
        "data",
        "data",
        "data",
        "e",
        "data_user",
        "elem",
        "key",
        "data",
        "data",
        "data",
        "jQuery",
        "elem",
        "data",
        "elem",
        "queue",
        "data_priv",
        "elem",
        "data",
        "queue",
        "jQuery",
        "data",
        "queue",
        "data_priv",
        "elem",
        "jQuery",
        "data",
        "queue",
        "data",
        "queue",
        "elem",
        "jQuery",
        "elem",
        "queue",
        "queue",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "fn",
        "fn",
        "queue",
        "startLength",
        "fn",
        "queue",
        "hooks",
        "fn",
        "elem",
        "next",
        "hooks",
        "startLength",
        "hooks",
        "hooks",
        "elem",
        "data_priv",
        "elem",
        "key",
        "data_priv",
        "elem",
        "key",
        "jQuery",
        "data_priv",
        "elem",
        "key",
        "jQuery",
        "data",
        "data",
        "setter",
        "arguments",
        "setter",
        "jQuery",
        "data",
        "jQuery",
        "data",
        "jQuery",
        "queue",
        "jQuery",
        "jQuery",
        "time",
        "time",
        "jQuery",
        "jQuery",
        "time",
        "time",
        "time",
        "next",
        "hooks",
        "setTimeout",
        "next",
        "time",
        "hooks",
        "clearTimeout",
        "timeout",
        "obj",
        "jQuery",
        "count",
        "defer",
        "elements",
        "elements",
        "obj",
        "i",
        "tmp",
        "data_priv",
        "elements",
        "i",
        "tmp",
        "tmp",
        "count",
        "tmp",
        "resolve",
        "resolve",
        "defer",
        "obj",
        "jQuery",
        "name",
        "value",
        "jQuery",
        "jQuery",
        "name",
        "value",
        "arguments",
        "name",
        "jQuery",
        "name",
        "name",
        "value",
        "jQuery",
        "jQuery",
        "name",
        "value",
        "arguments",
        "name",
        "jQuery",
        "name",
        "name",
        "value",
        "value",
        "value",
        "jQuery",
        "value",
        "j",
        "jQuery",
        "value",
        "j",
        "proceed",
        "classes",
        "value",
        "core_rnotwhite",
        "i",
        "len",
        "i",
        "elem",
        "i",
        "cur",
        "elem",
        "elem",
        "elem",
        "rclass",
        "cur",
        "j",
        "clazz",
        "classes",
        "j",
        "cur",
        "clazz",
        "cur",
        "clazz",
        "elem",
        "jQuery",
        "cur",
        "value",
        "arguments",
        "value",
        "value",
        "jQuery",
        "value",
        "j",
        "jQuery",
        "value",
        "j",
        "proceed",
        "classes",
        "value",
        "core_rnotwhite",
        "i",
        "len",
        "i",
        "elem",
        "i",
        "cur",
        "elem",
        "elem",
        "elem",
        "rclass",
        "cur",
        "j",
        "clazz",
        "classes",
        "j",
        "cur",
        "clazz",
        "cur",
        "cur",
        "clazz",
        "elem",
        "value",
        "jQuery",
        "cur",
        "value",
        "stateVal",
        "value",
        "stateVal",
        "stateVal",
        "value",
        "value",
        "jQuery",
        "value",
        "i",
        "jQuery",
        "value",
        "i",
        "stateVal",
        "stateVal",
        "jQuery",
        "value",
        "core_rnotwhite",
        "className",
        "classNames",
        "i",
        "className",
        "className",
        "className",
        "core_strundefined",
        "data_priv",
        "value",
        "data_priv",
        "selector",
        "selector",
        "i",
        "l",
        "i",
        "i",
        "i",
        "rclass",
        "className",
        "value",
        "arguments",
        "elem",
        "hooks",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "hooks",
        "hooks",
        "ret",
        "hooks",
        "elem",
        "ret",
        "ret",
        "elem",
        "ret",
        "ret",
        "rreturn",
        "ret",
        "ret",
        "isFunction",
        "jQuery",
        "value",
        "i",
        "isFunction",
        "val",
        "value",
        "i",
        "jQuery",
        "val",
        "value",
        "val",
        "val",
        "val",
        "val",
        "jQuery",
        "val",
        "val",
        "jQuery",
        "val",
        "value",
        "value",
        "value",
        "hooks",
        "jQuery",
        "jQuery",
        "hooks",
        "hooks",
        "hooks",
        "val",
        "val",
        "jQuery",
        "elem",
        "elem",
        "val",
        "val",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "index",
        "one",
        "one",
        "index",
        "options",
        "index",
        "max",
        "one",
        "index",
        "i",
        "max",
        "i",
        "option",
        "options",
        "i",
        "option",
        "i",
        "index",
        "jQuery",
        "option",
        "option",
        "option",
        "jQuery",
        "option",
        "value",
        "jQuery",
        "option",
        "one",
        "value",
        "values",
        "value",
        "values",
        "elem",
        "value",
        "elem",
        "jQuery",
        "value",
        "options",
        "i",
        "option",
        "options",
        "i",
        "option",
        "jQuery",
        "jQuery",
        "option",
        "values",
        "optionSet",
        "optionSet",
        "elem",
        "values",
        "elem",
        "name",
        "value",
        "elem",
        "elem",
        "nType",
        "nType",
        "nType",
        "elem",
        "core_strundefined",
        "jQuery",
        "elem",
        "name",
        "value",
        "nType",
        "jQuery",
        "elem",
        "name",
        "name",
        "hooks",
        "jQuery",
        "name",
        "jQuery",
        "name",
        "boolHook",
        "nodeHook",
        "value",
        "value",
        "jQuery",
        "elem",
        "name",
        "hooks",
        "hooks",
        "ret",
        "hooks",
        "elem",
        "value",
        "name",
        "ret",
        "elem",
        "name",
        "value",
        "value",
        "hooks",
        "hooks",
        "ret",
        "hooks",
        "elem",
        "name",
        "ret",
        "ret",
        "jQuery",
        "elem",
        "name",
        "ret",
        "ret",
        "elem",
        "value",
        "value",
        "value",
        "core_rnotwhite",
        "attrNames",
        "elem",
        "name",
        "attrNames",
        "i",
        "propName",
        "jQuery",
        "name",
        "name",
        "jQuery",
        "name",
        "elem",
        "propName",
        "elem",
        "name",
        "elem",
        "value",
        "jQuery",
        "value",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "value",
        "val",
        "elem",
        "val",
        "value",
        "elem",
        "name",
        "value",
        "elem",
        "elem",
        "nType",
        "nType",
        "nType",
        "notxml",
        "nType",
        "jQuery",
        "elem",
        "notxml",
        "name",
        "jQuery",
        "name",
        "name",
        "hooks",
        "jQuery",
        "name",
        "value",
        "hooks",
        "hooks",
        "ret",
        "hooks",
        "elem",
        "value",
        "name",
        "ret",
        "elem",
        "name",
        "value",
        "hooks",
        "hooks",
        "ret",
        "hooks",
        "elem",
        "name",
        "ret",
        "elem",
        "name",
        "elem",
        "elem",
        "rfocusable",
        "elem",
        "elem",
        "elem",
        "boolHook",
        "elem",
        "value",
        "name",
        "value",
        "jQuery",
        "elem",
        "name",
        "elem",
        "name",
        "name",
        "name",
        "jQuery",
        "jQuery",
        "i",
        "name",
        "jQuery",
        "name",
        "jQuery",
        "jQuery",
        "name",
        "elem",
        "name",
        "isXML",
        "jQuery",
        "name",
        "isXML",
        "jQuery",
        "name",
        "getter",
        "elem",
        "name",
        "isXML",
        "name",
        "jQuery",
        "name",
        "fn",
        "ret",
        "jQuery",
        "jQuery",
        "elem",
        "elem",
        "parent",
        "parent",
        "parent",
        "jQuery",
        "jQuery",
        "jQuery",
        "jQuery",
        "elem",
        "value",
        "jQuery",
        "value",
        "elem",
        "jQuery",
        "jQuery",
        "elem",
        "value",
        "jQuery",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "err",
        "jQuery",
        "elem",
        "types",
        "handler",
        "data",
        "selector",
        "data_priv",
        "elem",
        "elemData",
        "handler",
        "handleObjIn",
        "handler",
        "handler",
        "handleObjIn",
        "selector",
        "handleObjIn",
        "handler",
        "handler",
        "jQuery",
        "events",
        "elemData",
        "events",
        "elemData",
        "eventHandle",
        "elemData",
        "eventHandle",
        "elemData",
        "e",
        "jQuery",
        "core_strundefined",
        "e",
        "jQuery",
        "e",
        "jQuery",
        "eventHandle",
        "arguments",
        "eventHandle",
        "elem",
        "types",
        "types",
        "core_rnotwhite",
        "t",
        "types",
        "t",
        "tmp",
        "rtypenamespace",
        "types",
        "t",
        "origType",
        "tmp",
        "namespaces",
        "tmp",
        "special",
        "jQuery",
        "selector",
        "special",
        "special",
        "special",
        "jQuery",
        "handleObj",
        "jQuery",
        "origType",
        "data",
        "handler",
        "handler",
        "selector",
        "selector",
        "jQuery",
        "selector",
        "namespaces",
        "handleObjIn",
        "handlers",
        "events",
        "handlers",
        "events",
        "handlers",
        "special",
        "special",
        "elem",
        "data",
        "namespaces",
        "eventHandle",
        "elem",
        "elem",
        "eventHandle",
        "special",
        "special",
        "elem",
        "handleObj",
        "handleObj",
        "handleObj",
        "handler",
        "selector",
        "handlers",
        "handlers",
        "handleObj",
        "handlers",
        "handleObj",
        "jQuery",
        "elem",
        "elem",
        "types",
        "handler",
        "selector",
        "mappedTypes",
        "data_priv",
        "elem",
        "data_priv",
        "elem",
        "elemData",
        "events",
        "elemData",
        "types",
        "types",
        "core_rnotwhite",
        "t",
        "types",
        "t",
        "tmp",
        "rtypenamespace",
        "types",
        "t",
        "origType",
        "tmp",
        "namespaces",
        "tmp",
        "events",
        "jQuery",
        "elem",
        "types",
        "t",
        "handler",
        "selector",
        "special",
        "jQuery",
        "selector",
        "special",
        "special",
        "handlers",
        "events",
        "tmp",
        "tmp",
        "namespaces",
        "origCount",
        "j",
        "handlers",
        "j",
        "handleObj",
        "handlers",
        "j",
        "mappedTypes",
        "origType",
        "handleObj",
        "handler",
        "handler",
        "handleObj",
        "tmp",
        "tmp",
        "handleObj",
        "selector",
        "selector",
        "handleObj",
        "selector",
        "handleObj",
        "handlers",
        "j",
        "handleObj",
        "handlers",
        "special",
        "special",
        "elem",
        "handleObj",
        "origCount",
        "handlers",
        "special",
        "special",
        "elem",
        "namespaces",
        "elemData",
        "jQuery",
        "elem",
        "elemData",
        "events",
        "jQuery",
        "events",
        "elemData",
        "data_priv",
        "elem",
        "data",
        "elem",
        "onlyHandlers",
        "elem",
        "core_hasOwn",
        "core_hasOwn",
        "cur",
        "tmp",
        "elem",
        "elem",
        "elem",
        "elem",
        "rfocusMorph",
        "jQuery",
        "namespaces",
        "namespaces",
        "namespaces",
        "ontype",
        "jQuery",
        "jQuery",
        "onlyHandlers",
        "namespaces",
        "namespaces",
        "elem",
        "data",
        "data",
        "jQuery",
        "data",
        "special",
        "jQuery",
        "onlyHandlers",
        "special",
        "special",
        "elem",
        "data",
        "onlyHandlers",
        "special",
        "jQuery",
        "elem",
        "bubbleType",
        "special",
        "rfocusMorph",
        "bubbleType",
        "cur",
        "cur",
        "cur",
        "cur",
        "cur",
        "eventPath",
        "cur",
        "tmp",
        "cur",
        "tmp",
        "elem",
        "eventPath",
        "tmp",
        "tmp",
        "i",
        "cur",
        "eventPath",
        "i",
        "i",
        "bubbleType",
        "special",
        "handle",
        "data_priv",
        "cur",
        "data_priv",
        "cur",
        "handle",
        "handle",
        "cur",
        "data",
        "handle",
        "ontype",
        "cur",
        "ontype",
        "handle",
        "jQuery",
        "cur",
        "handle",
        "handle",
        "cur",
        "data",
        "onlyHandlers",
        "special",
        "special",
        "eventPath",
        "data",
        "jQuery",
        "elem",
        "ontype",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "tmp",
        "elem",
        "ontype",
        "tmp",
        "elem",
        "ontype",
        "jQuery",
        "elem",
        "jQuery",
        "tmp",
        "elem",
        "ontype",
        "tmp",
        "jQuery",
        "core_slice",
        "arguments",
        "data_priv",
        "jQuery",
        "args",
        "special",
        "special",
        "handlerQueue",
        "jQuery",
        "handlers",
        "i",
        "matched",
        "handlerQueue",
        "i",
        "matched",
        "j",
        "handleObj",
        "matched",
        "j",
        "handleObj",
        "handleObj",
        "handleObj",
        "ret",
        "jQuery",
        "handleObj",
        "handleObj",
        "matched",
        "args",
        "ret",
        "ret",
        "special",
        "special",
        "handlers",
        "handlers",
        "delegateCount",
        "cur",
        "cur",
        "cur",
        "cur",
        "cur",
        "matches",
        "i",
        "i",
        "delegateCount",
        "i",
        "handleObj",
        "handlers",
        "i",
        "sel",
        "handleObj",
        "matches",
        "sel",
        "matches",
        "sel",
        "handleObj",
        "jQuery",
        "sel",
        "cur",
        "jQuery",
        "sel",
        "cur",
        "matches",
        "sel",
        "matches",
        "handleObj",
        "matches",
        "handlerQueue",
        "cur",
        "matches",
        "delegateCount",
        "handlers",
        "handlerQueue",
        "handlers",
        "delegateCount",
        "handlerQueue",
        "original",
        "original",
        "original",
        "original",
        "original",
        "original",
        "original",
        "eventDoc",
        "doc",
        "eventDoc",
        "body",
        "eventDoc",
        "original",
        "doc",
        "doc",
        "body",
        "body",
        "doc",
        "doc",
        "body",
        "body",
        "original",
        "doc",
        "doc",
        "body",
        "body",
        "doc",
        "doc",
        "body",
        "body",
        "button",
        "button",
        "button",
        "button",
        "jQuery",
        "fixHook",
        "fixHook",
        "rmouseEvent",
        "rkeyEvent",
        "copy",
        "fixHook",
        "fixHook",
        "jQuery",
        "originalEvent",
        "i",
        "copy",
        "i",
        "prop",
        "copy",
        "i",
        "prop",
        "originalEvent",
        "prop",
        "fixHook",
        "fixHook",
        "originalEvent",
        "safeActiveElement",
        "safeActiveElement",
        "jQuery",
        "jQuery",
        "elem",
        "bubble",
        "jQuery",
        "jQuery",
        "bubble",
        "jQuery",
        "e",
        "elem",
        "jQuery",
        "elem",
        "e",
        "e",
        "jQuery",
        "elem",
        "handle",
        "elem",
        "elem",
        "handle",
        "jQuery",
        "src",
        "props",
        "jQuery",
        "jQuery",
        "src",
        "props",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "returnTrue",
        "returnFalse",
        "src",
        "props",
        "jQuery",
        "props",
        "src",
        "src",
        "jQuery",
        "jQuery",
        "jQuery",
        "returnFalse",
        "returnFalse",
        "returnFalse",
        "returnTrue",
        "e",
        "e",
        "e",
        "returnTrue",
        "e",
        "e",
        "e",
        "returnTrue",
        "jQuery",
        "orig",
        "fix",
        "jQuery",
        "orig",
        "fix",
        "fix",
        "related",
        "related",
        "target",
        "jQuery",
        "target",
        "related",
        "handleObj",
        "ret",
        "handleObj",
        "arguments",
        "fix",
        "ret",
        "jQuery",
        "jQuery",
        "orig",
        "fix",
        "jQuery",
        "fix",
        "jQuery",
        "jQuery",
        "fix",
        "attaches",
        "orig",
        "handler",
        "attaches",
        "orig",
        "handler",
        "jQuery",
        "types",
        "selector",
        "data",
        "fn",
        "one",
        "types",
        "selector",
        "data",
        "data",
        "selector",
        "selector",
        "types",
        "selector",
        "data",
        "types",
        "one",
        "data",
        "fn",
        "fn",
        "selector",
        "data",
        "selector",
        "fn",
        "selector",
        "fn",
        "data",
        "data",
        "fn",
        "data",
        "data",
        "selector",
        "selector",
        "fn",
        "fn",
        "returnFalse",
        "fn",
        "one",
        "origFn",
        "fn",
        "fn",
        "jQuery",
        "origFn",
        "arguments",
        "fn",
        "origFn",
        "origFn",
        "jQuery",
        "jQuery",
        "types",
        "fn",
        "data",
        "selector",
        "types",
        "selector",
        "data",
        "fn",
        "types",
        "selector",
        "data",
        "fn",
        "types",
        "selector",
        "fn",
        "types",
        "types",
        "types",
        "handleObj",
        "types",
        "jQuery",
        "types",
        "handleObj",
        "handleObj",
        "handleObj",
        "handleObj",
        "handleObj",
        "handleObj",
        "types",
        "types",
        "selector",
        "types",
        "selector",
        "selector",
        "fn",
        "selector",
        "selector",
        "fn",
        "fn",
        "returnFalse",
        "jQuery",
        "types",
        "fn",
        "selector",
        "data",
        "jQuery",
        "data",
        "data",
        "elem",
        "jQuery",
        "data",
        "elem",
        "jQuery",
        "jQuery",
        "selector",
        "selector",
        "jQuery",
        "selector",
        "i",
        "i",
        "len",
        "i",
        "jQuery",
        "i",
        "i",
        "i",
        "len",
        "i",
        "jQuery",
        "selector",
        "i",
        "ret",
        "ret",
        "len",
        "jQuery",
        "ret",
        "ret",
        "ret",
        "selector",
        "selector",
        "ret",
        "target",
        "jQuery",
        "target",
        "targets",
        "i",
        "l",
        "i",
        "jQuery",
        "targets",
        "i",
        "selector",
        "winnow",
        "selector",
        "selector",
        "winnow",
        "selector",
        "selector",
        "winnow",
        "selector",
        "rneedsContext",
        "selector",
        "jQuery",
        "selector",
        "selector",
        "selectors",
        "context",
        "rneedsContext",
        "selectors",
        "selectors",
        "jQuery",
        "selectors",
        "context",
        "i",
        "l",
        "i",
        "cur",
        "i",
        "cur",
        "cur",
        "context",
        "cur",
        "cur",
        "cur",
        "pos",
        "pos",
        "cur",
        "cur",
        "jQuery",
        "cur",
        "selectors",
        "cur",
        "matched",
        "cur",
        "matched",
        "jQuery",
        "matched",
        "matched",
        "elem",
        "elem",
        "elem",
        "core_indexOf",
        "jQuery",
        "elem",
        "core_indexOf",
        "elem",
        "elem",
        "elem",
        "selector",
        "context",
        "selector",
        "jQuery",
        "selector",
        "context",
        "jQuery",
        "selector",
        "selector",
        "selector",
        "selector",
        "jQuery",
        "jQuery",
        "all",
        "selector",
        "selector",
        "selector",
        "cur",
        "dir",
        "cur",
        "cur",
        "dir",
        "cur",
        "cur",
        "jQuery",
        "elem",
        "elem",
        "parent",
        "parent",
        "parent",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "i",
        "until",
        "jQuery",
        "elem",
        "until",
        "elem",
        "sibling",
        "elem",
        "elem",
        "sibling",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "i",
        "until",
        "jQuery",
        "elem",
        "until",
        "elem",
        "i",
        "until",
        "jQuery",
        "elem",
        "until",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "name",
        "fn",
        "jQuery",
        "name",
        "until",
        "selector",
        "jQuery",
        "fn",
        "until",
        "name",
        "selector",
        "until",
        "selector",
        "selector",
        "matched",
        "jQuery",
        "selector",
        "matched",
        "guaranteedUnique",
        "name",
        "jQuery",
        "matched",
        "rparentsprev",
        "name",
        "matched",
        "matched",
        "jQuery",
        "expr",
        "elems",
        "elems",
        "expr",
        "expr",
        "elems",
        "elem",
        "jQuery",
        "elem",
        "expr",
        "elem",
        "jQuery",
        "expr",
        "jQuery",
        "elems",
        "elem",
        "elem",
        "elem",
        "dir",
        "until",
        "until",
        "elem",
        "elem",
        "dir",
        "elem",
        "elem",
        "truncate",
        "jQuery",
        "elem",
        "until",
        "matched",
        "elem",
        "matched",
        "n",
        "elem",
        "n",
        "n",
        "n",
        "n",
        "n",
        "elem",
        "matched",
        "n",
        "matched",
        "elements",
        "qualifier",
        "jQuery",
        "qualifier",
        "jQuery",
        "elements",
        "elem",
        "i",
        "qualifier",
        "elem",
        "i",
        "elem",
        "qualifier",
        "jQuery",
        "elements",
        "elem",
        "elem",
        "qualifier",
        "qualifier",
        "isSimple",
        "qualifier",
        "jQuery",
        "qualifier",
        "elements",
        "qualifier",
        "jQuery",
        "qualifier",
        "elements",
        "jQuery",
        "elements",
        "elem",
        "core_indexOf",
        "qualifier",
        "elem",
        "wrapMap",
        "wrapMap",
        "wrapMap",
        "wrapMap",
        "wrapMap",
        "wrapMap",
        "wrapMap",
        "wrapMap",
        "wrapMap",
        "jQuery",
        "value",
        "jQuery",
        "value",
        "value",
        "jQuery",
        "value",
        "value",
        "arguments",
        "arguments",
        "elem",
        "manipulationTarget",
        "elem",
        "target",
        "elem",
        "arguments",
        "elem",
        "manipulationTarget",
        "elem",
        "target",
        "elem",
        "target",
        "arguments",
        "elem",
        "elem",
        "arguments",
        "elem",
        "elem",
        "selector",
        "keepData",
        "selector",
        "jQuery",
        "selector",
        "elem",
        "elems",
        "i",
        "i",
        "keepData",
        "elem",
        "jQuery",
        "getAll",
        "elem",
        "elem",
        "keepData",
        "jQuery",
        "elem",
        "elem",
        "setGlobalEval",
        "getAll",
        "elem",
        "elem",
        "elem",
        "elem",
        "i",
        "i",
        "elem",
        "jQuery",
        "getAll",
        "elem",
        "elem",
        "dataAndEvents",
        "deepDataAndEvents",
        "dataAndEvents",
        "dataAndEvents",
        "dataAndEvents",
        "deepDataAndEvents",
        "deepDataAndEvents",
        "dataAndEvents",
        "deepDataAndEvents",
        "jQuery",
        "dataAndEvents",
        "deepDataAndEvents",
        "value",
        "jQuery",
        "value",
        "value",
        "elem",
        "elem",
        "value",
        "rnoInnerhtml",
        "value",
        "wrapMap",
        "rtagName",
        "value",
        "value",
        "value",
        "rxhtmlTag",
        "i",
        "l",
        "i",
        "elem",
        "i",
        "elem",
        "jQuery",
        "getAll",
        "elem",
        "elem",
        "value",
        "elem",
        "e",
        "elem",
        "value",
        "value",
        "arguments",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "arguments",
        "elem",
        "args",
        "i",
        "args",
        "i",
        "parent",
        "next",
        "next",
        "parent",
        "next",
        "jQuery",
        "parent",
        "elem",
        "next",
        "i",
        "selector",
        "selector",
        "args",
        "callback",
        "allowIntersection",
        "args",
        "core_concat",
        "args",
        "l",
        "args",
        "jQuery",
        "value",
        "isFunction",
        "l",
        "value",
        "jQuery",
        "rchecked",
        "value",
        "index",
        "index",
        "isFunction",
        "args",
        "value",
        "index",
        "args",
        "callback",
        "allowIntersection",
        "l",
        "fragment",
        "jQuery",
        "args",
        "allowIntersection",
        "first",
        "fragment",
        "fragment",
        "fragment",
        "first",
        "first",
        "scripts",
        "jQuery",
        "getAll",
        "fragment",
        "disableScript",
        "hasScripts",
        "scripts",
        "i",
        "l",
        "i",
        "node",
        "fragment",
        "i",
        "iNoClone",
        "node",
        "jQuery",
        "node",
        "hasScripts",
        "jQuery",
        "scripts",
        "getAll",
        "node",
        "callback",
        "i",
        "node",
        "i",
        "hasScripts",
        "doc",
        "scripts",
        "scripts",
        "jQuery",
        "scripts",
        "restoreScript",
        "i",
        "i",
        "hasScripts",
        "i",
        "node",
        "scripts",
        "i",
        "rscriptType",
        "node",
        "data_priv",
        "node",
        "jQuery",
        "doc",
        "node",
        "node",
        "jQuery",
        "node",
        "jQuery",
        "node",
        "rcleanScript",
        "jQuery",
        "name",
        "original",
        "jQuery",
        "name",
        "selector",
        "jQuery",
        "selector",
        "insert",
        "i",
        "last",
        "i",
        "elems",
        "i",
        "last",
        "jQuery",
        "insert",
        "i",
        "original",
        "elems",
        "core_push",
        "ret",
        "elems",
        "ret",
        "jQuery",
        "elem",
        "dataAndEvents",
        "deepDataAndEvents",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "destElements",
        "getAll",
        "clone",
        "srcElements",
        "getAll",
        "elem",
        "i",
        "l",
        "srcElements",
        "i",
        "l",
        "i",
        "fixInput",
        "srcElements",
        "i",
        "destElements",
        "i",
        "dataAndEvents",
        "deepDataAndEvents",
        "srcElements",
        "srcElements",
        "getAll",
        "elem",
        "destElements",
        "destElements",
        "getAll",
        "clone",
        "i",
        "l",
        "srcElements",
        "i",
        "l",
        "i",
        "cloneCopyEvent",
        "srcElements",
        "i",
        "destElements",
        "i",
        "cloneCopyEvent",
        "elem",
        "clone",
        "destElements",
        "getAll",
        "clone",
        "destElements",
        "setGlobalEval",
        "destElements",
        "inPage",
        "getAll",
        "elem",
        "clone",
        "elems",
        "context",
        "scripts",
        "selection",
        "elems",
        "context",
        "i",
        "l",
        "i",
        "elem",
        "elems",
        "i",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "jQuery",
        "nodes",
        "elem",
        "elem",
        "elem",
        "rhtml",
        "elem",
        "nodes",
        "context",
        "elem",
        "tmp",
        "tmp",
        "fragment",
        "context",
        "tag",
        "rtagName",
        "elem",
        "wrap",
        "wrapMap",
        "tag",
        "wrapMap",
        "tmp",
        "wrap",
        "elem",
        "rxhtmlTag",
        "wrap",
        "j",
        "wrap",
        "j",
        "tmp",
        "tmp",
        "jQuery",
        "nodes",
        "tmp",
        "tmp",
        "fragment",
        "tmp",
        "fragment",
        "i",
        "elem",
        "nodes",
        "i",
        "selection",
        "jQuery",
        "elem",
        "selection",
        "contains",
        "jQuery",
        "elem",
        "elem",
        "tmp",
        "getAll",
        "fragment",
        "elem",
        "contains",
        "setGlobalEval",
        "tmp",
        "scripts",
        "j",
        "elem",
        "tmp",
        "j",
        "rscriptType",
        "elem",
        "scripts",
        "elem",
        "fragment",
        "elems",
        "jQuery",
        "elem",
        "elems",
        "i",
        "i",
        "Data",
        "elem",
        "key",
        "elem",
        "data_priv",
        "key",
        "data",
        "data_priv",
        "key",
        "events",
        "data",
        "events",
        "j",
        "events",
        "j",
        "j",
        "special",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "data",
        "data_priv",
        "key",
        "data_priv",
        "key",
        "data_user",
        "elem",
        "data_user",
        "url",
        "jQuery",
        "url",
        "elem",
        "content",
        "jQuery",
        "elem",
        "jQuery",
        "content",
        "content",
        "content",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "rscriptTypeMasked",
        "elem",
        "match",
        "elem",
        "match",
        "elem",
        "elem",
        "elems",
        "refElements",
        "elems",
        "i",
        "l",
        "i",
        "data_priv",
        "elems",
        "i",
        "refElements",
        "data_priv",
        "refElements",
        "i",
        "src",
        "dest",
        "dest",
        "data_priv",
        "src",
        "pdataOld",
        "data_priv",
        "src",
        "pdataCur",
        "data_priv",
        "dest",
        "pdataOld",
        "events",
        "pdataOld",
        "events",
        "pdataCur",
        "pdataCur",
        "events",
        "i",
        "l",
        "events",
        "i",
        "l",
        "i",
        "jQuery",
        "dest",
        "events",
        "i",
        "data_user",
        "src",
        "udataOld",
        "data_user",
        "src",
        "udataCur",
        "jQuery",
        "udataOld",
        "data_user",
        "dest",
        "udataCur",
        "context",
        "tag",
        "context",
        "context",
        "tag",
        "context",
        "context",
        "tag",
        "tag",
        "tag",
        "jQuery",
        "context",
        "tag",
        "jQuery",
        "context",
        "ret",
        "ret",
        "src",
        "dest",
        "dest",
        "nodeName",
        "manipulation_rcheckableType",
        "src",
        "dest",
        "src",
        "nodeName",
        "nodeName",
        "dest",
        "src",
        "jQuery",
        "html",
        "jQuery",
        "html",
        "i",
        "jQuery",
        "html",
        "i",
        "wrap",
        "jQuery",
        "html",
        "wrap",
        "wrap",
        "elem",
        "elem",
        "elem",
        "elem",
        "html",
        "jQuery",
        "html",
        "i",
        "jQuery",
        "html",
        "i",
        "jQuery",
        "contents",
        "contents",
        "html",
        "html",
        "html",
        "jQuery",
        "html",
        "i",
        "jQuery",
        "isFunction",
        "html",
        "i",
        "html",
        "jQuery",
        "jQuery",
        "core_pnum",
        "core_pnum",
        "core_pnum",
        "style",
        "name",
        "name",
        "style",
        "name",
        "name",
        "name",
        "cssPrefixes",
        "i",
        "name",
        "cssPrefixes",
        "i",
        "capName",
        "name",
        "style",
        "name",
        "origName",
        "elem",
        "el",
        "elem",
        "el",
        "elem",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "elem",
        "elements",
        "show",
        "elements",
        "index",
        "length",
        "index",
        "elem",
        "elements",
        "index",
        "elem",
        "values",
        "index",
        "data_priv",
        "elem",
        "display",
        "elem",
        "show",
        "values",
        "index",
        "display",
        "elem",
        "elem",
        "isHidden",
        "elem",
        "values",
        "index",
        "data_priv",
        "elem",
        "css_defaultDisplay",
        "elem",
        "values",
        "index",
        "hidden",
        "isHidden",
        "elem",
        "display",
        "display",
        "hidden",
        "data_priv",
        "elem",
        "hidden",
        "display",
        "jQuery",
        "elem",
        "index",
        "index",
        "length",
        "index",
        "elem",
        "elements",
        "index",
        "elem",
        "show",
        "elem",
        "elem",
        "elem",
        "show",
        "values",
        "index",
        "elements",
        "jQuery",
        "name",
        "value",
        "jQuery",
        "elem",
        "name",
        "value",
        "jQuery",
        "name",
        "styles",
        "getStyles",
        "elem",
        "len",
        "name",
        "i",
        "len",
        "i",
        "name",
        "i",
        "jQuery",
        "elem",
        "name",
        "i",
        "styles",
        "value",
        "jQuery",
        "elem",
        "name",
        "value",
        "jQuery",
        "elem",
        "name",
        "name",
        "value",
        "arguments",
        "showHide",
        "showHide",
        "state",
        "state",
        "state",
        "isHidden",
        "jQuery",
        "jQuery",
        "jQuery",
        "elem",
        "computed",
        "computed",
        "curCSS",
        "elem",
        "ret",
        "ret",
        "elem",
        "name",
        "value",
        "extra",
        "elem",
        "elem",
        "elem",
        "elem",
        "jQuery",
        "name",
        "elem",
        "name",
        "jQuery",
        "origName",
        "jQuery",
        "origName",
        "vendorPropName",
        "style",
        "origName",
        "hooks",
        "jQuery",
        "name",
        "jQuery",
        "origName",
        "value",
        "value",
        "ret",
        "rrelNum",
        "value",
        "value",
        "ret",
        "ret",
        "parseFloat",
        "jQuery",
        "elem",
        "name",
        "value",
        "isNaN",
        "value",
        "jQuery",
        "origName",
        "value",
        "jQuery",
        "value",
        "name",
        "style",
        "name",
        "hooks",
        "hooks",
        "value",
        "hooks",
        "elem",
        "value",
        "extra",
        "style",
        "name",
        "value",
        "hooks",
        "hooks",
        "ret",
        "hooks",
        "elem",
        "extra",
        "ret",
        "style",
        "name",
        "elem",
        "name",
        "extra",
        "styles",
        "jQuery",
        "name",
        "name",
        "jQuery",
        "origName",
        "jQuery",
        "origName",
        "vendorPropName",
        "elem",
        "origName",
        "hooks",
        "jQuery",
        "name",
        "jQuery",
        "origName",
        "hooks",
        "hooks",
        "val",
        "hooks",
        "elem",
        "extra",
        "val",
        "val",
        "curCSS",
        "elem",
        "name",
        "styles",
        "val",
        "name",
        "cssNormalTransform",
        "val",
        "cssNormalTransform",
        "name",
        "extra",
        "extra",
        "num",
        "parseFloat",
        "val",
        "extra",
        "jQuery",
        "num",
        "num",
        "val",
        "val",
        "curCSS",
        "elem",
        "name",
        "_computed",
        "_computed",
        "getStyles",
        "elem",
        "computed",
        "computed",
        "name",
        "computed",
        "name",
        "elem",
        "computed",
        "ret",
        "jQuery",
        "elem",
        "elem",
        "ret",
        "jQuery",
        "elem",
        "name",
        "rnumnonpx",
        "ret",
        "rmargin",
        "name",
        "width",
        "style",
        "minWidth",
        "style",
        "maxWidth",
        "style",
        "style",
        "style",
        "style",
        "ret",
        "ret",
        "computed",
        "style",
        "width",
        "style",
        "minWidth",
        "style",
        "maxWidth",
        "ret",
        "elem",
        "value",
        "subtract",
        "rnumsplit",
        "value",
        "matches",
        "matches",
        "subtract",
        "matches",
        "value",
        "elem",
        "name",
        "extra",
        "isBorderBox",
        "styles",
        "extra",
        "isBorderBox",
        "name",
        "i",
        "i",
        "extra",
        "val",
        "jQuery",
        "elem",
        "extra",
        "cssExpand",
        "i",
        "styles",
        "isBorderBox",
        "extra",
        "val",
        "jQuery",
        "elem",
        "cssExpand",
        "i",
        "styles",
        "extra",
        "val",
        "jQuery",
        "elem",
        "cssExpand",
        "i",
        "styles",
        "val",
        "jQuery",
        "elem",
        "cssExpand",
        "i",
        "styles",
        "extra",
        "val",
        "jQuery",
        "elem",
        "cssExpand",
        "i",
        "styles",
        "val",
        "elem",
        "name",
        "extra",
        "name",
        "elem",
        "elem",
        "getStyles",
        "elem",
        "jQuery",
        "jQuery",
        "elem",
        "styles",
        "val",
        "val",
        "val",
        "curCSS",
        "elem",
        "name",
        "styles",
        "val",
        "val",
        "val",
        "elem",
        "name",
        "rnumnonpx",
        "val",
        "val",
        "valueIsBorderBox",
        "isBorderBox",
        "jQuery",
        "val",
        "elem",
        "name",
        "val",
        "parseFloat",
        "val",
        "val",
        "augmentWidthOrHeight",
        "elem",
        "name",
        "extra",
        "isBorderBox",
        "valueIsBorderBox",
        "styles",
        "nodeName",
        "elemdisplay",
        "nodeName",
        "display",
        "display",
        "actualDisplay",
        "nodeName",
        "doc",
        "display",
        "display",
        "iframe",
        "iframe",
        "jQuery",
        "doc",
        "doc",
        "iframe",
        "iframe",
        "doc",
        "doc",
        "display",
        "actualDisplay",
        "nodeName",
        "doc",
        "iframe",
        "elemdisplay",
        "nodeName",
        "display",
        "display",
        "name",
        "doc",
        "jQuery",
        "doc",
        "name",
        "doc",
        "jQuery",
        "elem",
        "elem",
        "display",
        "jQuery",
        "i",
        "name",
        "jQuery",
        "name",
        "elem",
        "computed",
        "extra",
        "computed",
        "elem",
        "rdisplayswap",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "cssShow",
        "getWidthOrHeight",
        "elem",
        "name",
        "extra",
        "getWidthOrHeight",
        "elem",
        "name",
        "extra",
        "elem",
        "value",
        "extra",
        "extra",
        "getStyles",
        "elem",
        "setPositiveNumber",
        "elem",
        "value",
        "extra",
        "augmentWidthOrHeight",
        "elem",
        "name",
        "extra",
        "jQuery",
        "jQuery",
        "elem",
        "styles",
        "styles",
        "jQuery",
        "jQuery",
        "jQuery",
        "elem",
        "computed",
        "computed",
        "jQuery",
        "elem",
        "curCSS",
        "elem",
        "jQuery",
        "jQuery",
        "jQuery",
        "i",
        "prop",
        "jQuery",
        "prop",
        "elem",
        "computed",
        "computed",
        "computed",
        "curCSS",
        "elem",
        "prop",
        "rnumnonpx",
        "computed",
        "jQuery",
        "elem",
        "prop",
        "computed",
        "jQuery",
        "jQuery",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "jQuery",
        "prefix",
        "suffix",
        "jQuery",
        "prefix",
        "suffix",
        "value",
        "value",
        "value",
        "value",
        "i",
        "i",
        "expanded",
        "prefix",
        "cssExpand",
        "i",
        "suffix",
        "parts",
        "i",
        "parts",
        "i",
        "parts",
        "expanded",
        "rmargin",
        "prefix",
        "jQuery",
        "prefix",
        "suffix",
        "setPositiveNumber",
        "jQuery",
        "jQuery",
        "jQuery",
        "elements",
        "jQuery",
        "elements",
        "jQuery",
        "rsubmittable",
        "rsubmitterTypes",
        "manipulation_rcheckableType",
        "i",
        "elem",
        "jQuery",
        "val",
        "jQuery",
        "val",
        "jQuery",
        "val",
        "val",
        "elem",
        "val",
        "rCRLF",
        "elem",
        "val",
        "rCRLF",
        "jQuery",
        "a",
        "traditional",
        "key",
        "value",
        "value",
        "jQuery",
        "value",
        "value",
        "value",
        "value",
        "s",
        "s",
        "encodeURIComponent",
        "key",
        "encodeURIComponent",
        "value",
        "traditional",
        "traditional",
        "jQuery",
        "jQuery",
        "jQuery",
        "a",
        "a",
        "jQuery",
        "a",
        "jQuery",
        "a",
        "add",
        "prefix",
        "a",
        "buildParams",
        "prefix",
        "a",
        "prefix",
        "traditional",
        "add",
        "s",
        "r20",
        "prefix",
        "obj",
        "traditional",
        "add",
        "jQuery",
        "obj",
        "jQuery",
        "obj",
        "i",
        "v",
        "traditional",
        "rbracket",
        "prefix",
        "add",
        "prefix",
        "v",
        "buildParams",
        "prefix",
        "v",
        "i",
        "v",
        "traditional",
        "add",
        "traditional",
        "jQuery",
        "obj",
        "name",
        "obj",
        "buildParams",
        "prefix",
        "name",
        "obj",
        "name",
        "traditional",
        "add",
        "add",
        "prefix",
        "obj",
        "jQuery",
        "i",
        "name",
        "jQuery",
        "name",
        "data",
        "fn",
        "arguments",
        "name",
        "data",
        "fn",
        "name",
        "jQuery",
        "fnOver",
        "fnOut",
        "fnOver",
        "fnOut",
        "fnOver",
        "types",
        "data",
        "fn",
        "types",
        "data",
        "fn",
        "types",
        "fn",
        "types",
        "fn",
        "selector",
        "types",
        "data",
        "fn",
        "types",
        "selector",
        "data",
        "fn",
        "selector",
        "types",
        "fn",
        "arguments",
        "selector",
        "types",
        "selector",
        "fn",
        "jQuery",
        "jQuery",
        "ajaxLocation",
        "location",
        "e",
        "ajaxLocation",
        "ajaxLocation",
        "ajaxLocation",
        "ajaxLocation",
        "ajaxLocParts",
        "rurl",
        "ajaxLocation",
        "structure",
        "dataTypeExpression",
        "func",
        "dataTypeExpression",
        "func",
        "dataTypeExpression",
        "dataTypeExpression",
        "dataTypeExpression",
        "core_rnotwhite",
        "jQuery",
        "func",
        "dataType",
        "dataTypes",
        "i",
        "dataType",
        "dataType",
        "dataType",
        "structure",
        "dataType",
        "structure",
        "dataType",
        "func",
        "structure",
        "dataType",
        "structure",
        "dataType",
        "func",
        "structure",
        "options",
        "originalOptions",
        "jqXHR",
        "structure",
        "transports",
        "dataType",
        "inspected",
        "dataType",
        "jQuery",
        "structure",
        "dataType",
        "_",
        "prefilterOrFactory",
        "prefilterOrFactory",
        "options",
        "originalOptions",
        "jqXHR",
        "dataTypeOrTransport",
        "seekingTransport",
        "inspected",
        "dataTypeOrTransport",
        "options",
        "dataTypeOrTransport",
        "inspect",
        "dataTypeOrTransport",
        "seekingTransport",
        "selected",
        "dataTypeOrTransport",
        "selected",
        "inspect",
        "options",
        "inspected",
        "inspect",
        "target",
        "src",
        "jQuery",
        "key",
        "src",
        "src",
        "key",
        "flatOptions",
        "key",
        "target",
        "deep",
        "deep",
        "key",
        "src",
        "key",
        "deep",
        "jQuery",
        "target",
        "deep",
        "target",
        "jQuery",
        "url",
        "callback",
        "url",
        "_load",
        "_load",
        "arguments",
        "url",
        "off",
        "selector",
        "url",
        "off",
        "url",
        "url",
        "off",
        "jQuery",
        "callback",
        "jQuery",
        "url",
        "responseText",
        "response",
        "arguments",
        "selector",
        "jQuery",
        "jQuery",
        "responseText",
        "selector",
        "responseText",
        "callback",
        "jqXHR",
        "status",
        "callback",
        "response",
        "jqXHR",
        "status",
        "jqXHR",
        "jQuery",
        "i",
        "jQuery",
        "fn",
        "fn",
        "jQuery",
        "ajaxLocation",
        "rlocalProtocol",
        "ajaxLocParts",
        "allTypes",
        "jQuery",
        "jQuery",
        "target",
        "settings",
        "settings",
        "ajaxExtend",
        "ajaxExtend",
        "target",
        "jQuery",
        "settings",
        "ajaxExtend",
        "jQuery",
        "target",
        "addToPrefiltersOrTransports",
        "prefilters",
        "addToPrefiltersOrTransports",
        "transports",
        "url",
        "options",
        "url",
        "options",
        "url",
        "url",
        "options",
        "options",
        "jQuery",
        "options",
        "s",
        "s",
        "s",
        "callbackContext",
        "callbackContext",
        "jQuery",
        "callbackContext",
        "jQuery",
        "jQuery",
        "jQuery",
        "s",
        "key",
        "state",
        "responseHeaders",
        "responseHeaders",
        "match",
        "rheaders",
        "responseHeadersString",
        "responseHeaders",
        "match",
        "match",
        "match",
        "responseHeaders",
        "key",
        "match",
        "match",
        "state",
        "responseHeadersString",
        "name",
        "value",
        "name",
        "state",
        "name",
        "requestHeadersNames",
        "lname",
        "requestHeadersNames",
        "lname",
        "name",
        "requestHeaders",
        "name",
        "value",
        "state",
        "s",
        "state",
        "code",
        "statusCode",
        "code",
        "statusCode",
        "code",
        "code",
        "jqXHR",
        "jqXHR",
        "statusText",
        "statusText",
        "strAbort",
        "transport",
        "transport",
        "finalText",
        "done",
        "finalText",
        "deferred",
        "jqXHR",
        "completeDeferred",
        "jqXHR",
        "jqXHR",
        "jqXHR",
        "jqXHR",
        "s",
        "url",
        "s",
        "ajaxLocation",
        "rhash",
        "rprotocol",
        "ajaxLocParts",
        "s",
        "options",
        "options",
        "s",
        "s",
        "s",
        "jQuery",
        "s",
        "core_rnotwhite",
        "s",
        "parts",
        "rurl",
        "s",
        "s",
        "parts",
        "parts",
        "ajaxLocParts",
        "parts",
        "ajaxLocParts",
        "parts",
        "parts",
        "ajaxLocParts",
        "ajaxLocParts",
        "s",
        "s",
        "s",
        "s",
        "jQuery",
        "s",
        "s",
        "inspectPrefiltersOrTransports",
        "prefilters",
        "s",
        "options",
        "jqXHR",
        "state",
        "jqXHR",
        "fireGlobals",
        "s",
        "fireGlobals",
        "jQuery",
        "jQuery",
        "s",
        "s",
        "s",
        "rnoContent",
        "s",
        "cacheURL",
        "s",
        "s",
        "s",
        "cacheURL",
        "s",
        "ajax_rquery",
        "cacheURL",
        "s",
        "s",
        "s",
        "s",
        "rts",
        "cacheURL",
        "cacheURL",
        "rts",
        "ajax_nonce",
        "cacheURL",
        "ajax_rquery",
        "cacheURL",
        "ajax_nonce",
        "s",
        "jQuery",
        "cacheURL",
        "jqXHR",
        "jQuery",
        "cacheURL",
        "jQuery",
        "cacheURL",
        "jqXHR",
        "jQuery",
        "cacheURL",
        "s",
        "s",
        "s",
        "options",
        "jqXHR",
        "s",
        "jqXHR",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "allTypes",
        "s",
        "i",
        "s",
        "jqXHR",
        "i",
        "s",
        "i",
        "s",
        "s",
        "callbackContext",
        "jqXHR",
        "s",
        "state",
        "jqXHR",
        "strAbort",
        "i",
        "jqXHR",
        "i",
        "s",
        "i",
        "transport",
        "inspectPrefiltersOrTransports",
        "transports",
        "s",
        "options",
        "jqXHR",
        "transport",
        "done",
        "jqXHR",
        "fireGlobals",
        "globalEventContext",
        "jqXHR",
        "s",
        "s",
        "s",
        "timeoutTimer",
        "setTimeout",
        "jqXHR",
        "s",
        "state",
        "transport",
        "requestHeaders",
        "done",
        "e",
        "state",
        "done",
        "e",
        "e",
        "status",
        "nativeStatusText",
        "responses",
        "headers",
        "state",
        "state",
        "timeoutTimer",
        "clearTimeout",
        "timeoutTimer",
        "transport",
        "responseHeadersString",
        "headers",
        "jqXHR",
        "status",
        "isSuccess",
        "status",
        "status",
        "status",
        "responses",
        "response",
        "ajaxHandleResponses",
        "s",
        "jqXHR",
        "responses",
        "response",
        "ajaxConvert",
        "s",
        "response",
        "jqXHR",
        "isSuccess",
        "isSuccess",
        "s",
        "modified",
        "jqXHR",
        "modified",
        "jQuery",
        "cacheURL",
        "modified",
        "modified",
        "jqXHR",
        "modified",
        "jQuery",
        "cacheURL",
        "modified",
        "status",
        "s",
        "statusText",
        "status",
        "statusText",
        "statusText",
        "response",
        "success",
        "response",
        "error",
        "response",
        "isSuccess",
        "error",
        "error",
        "statusText",
        "status",
        "statusText",
        "statusText",
        "status",
        "status",
        "jqXHR",
        "status",
        "jqXHR",
        "nativeStatusText",
        "statusText",
        "isSuccess",
        "deferred",
        "callbackContext",
        "success",
        "statusText",
        "jqXHR",
        "deferred",
        "callbackContext",
        "jqXHR",
        "statusText",
        "error",
        "jqXHR",
        "statusCode",
        "statusCode",
        "fireGlobals",
        "globalEventContext",
        "isSuccess",
        "jqXHR",
        "s",
        "isSuccess",
        "success",
        "error",
        "completeDeferred",
        "callbackContext",
        "jqXHR",
        "statusText",
        "fireGlobals",
        "globalEventContext",
        "jqXHR",
        "s",
        "jQuery",
        "jQuery",
        "jqXHR",
        "url",
        "data",
        "callback",
        "jQuery",
        "url",
        "data",
        "callback",
        "url",
        "callback",
        "jQuery",
        "url",
        "callback",
        "jQuery",
        "i",
        "method",
        "jQuery",
        "method",
        "url",
        "data",
        "callback",
        "jQuery",
        "data",
        "callback",
        "callback",
        "data",
        "data",
        "jQuery",
        "url",
        "method",
        "data",
        "callback",
        "s",
        "jqXHR",
        "responses",
        "s",
        "s",
        "dataTypes",
        "dataTypes",
        "ct",
        "ct",
        "s",
        "jqXHR",
        "ct",
        "contents",
        "contents",
        "contents",
        "ct",
        "dataTypes",
        "dataTypes",
        "responses",
        "finalDataType",
        "dataTypes",
        "responses",
        "dataTypes",
        "s",
        "dataTypes",
        "finalDataType",
        "firstDataType",
        "firstDataType",
        "finalDataType",
        "finalDataType",
        "firstDataType",
        "finalDataType",
        "finalDataType",
        "dataTypes",
        "dataTypes",
        "finalDataType",
        "responses",
        "finalDataType",
        "s",
        "response",
        "jqXHR",
        "isSuccess",
        "s",
        "dataTypes",
        "conv",
        "s",
        "converters",
        "conv",
        "s",
        "conv",
        "current",
        "dataTypes",
        "current",
        "s",
        "current",
        "jqXHR",
        "s",
        "current",
        "response",
        "prev",
        "isSuccess",
        "s",
        "response",
        "s",
        "response",
        "s",
        "prev",
        "current",
        "current",
        "dataTypes",
        "current",
        "current",
        "current",
        "prev",
        "prev",
        "prev",
        "current",
        "conv",
        "converters",
        "prev",
        "current",
        "converters",
        "current",
        "conv",
        "conv2",
        "converters",
        "tmp",
        "conv2",
        "tmp",
        "current",
        "conv",
        "converters",
        "prev",
        "tmp",
        "converters",
        "tmp",
        "conv",
        "conv",
        "conv",
        "converters",
        "conv2",
        "converters",
        "conv2",
        "current",
        "tmp",
        "dataTypes",
        "tmp",
        "conv",
        "conv",
        "s",
        "response",
        "conv",
        "response",
        "response",
        "conv",
        "response",
        "e",
        "conv",
        "e",
        "prev",
        "current",
        "response",
        "jQuery",
        "text",
        "jQuery",
        "text",
        "text",
        "jQuery",
        "s",
        "s",
        "s",
        "s",
        "s",
        "jQuery",
        "s",
        "s",
        "_",
        "complete",
        "script",
        "jQuery",
        "s",
        "s",
        "callback",
        "evt",
        "script",
        "callback",
        "evt",
        "complete",
        "evt",
        "evt",
        "script",
        "callback",
        "callback",
        "jQuery",
        "oldCallbacks",
        "jQuery",
        "ajax_nonce",
        "callback",
        "callback",
        "jQuery",
        "s",
        "originalSettings",
        "jqXHR",
        "s",
        "rjsonp",
        "s",
        "s",
        "s",
        "rjsonp",
        "s",
        "jsonProp",
        "s",
        "callbackName",
        "s",
        "jQuery",
        "s",
        "s",
        "s",
        "jsonProp",
        "s",
        "jsonProp",
        "s",
        "jsonProp",
        "rjsonp",
        "callbackName",
        "s",
        "s",
        "ajax_rquery",
        "s",
        "s",
        "callbackName",
        "s",
        "responseContainer",
        "jQuery",
        "callbackName",
        "responseContainer",
        "s",
        "overwritten",
        "callbackName",
        "callbackName",
        "responseContainer",
        "arguments",
        "jqXHR",
        "callbackName",
        "overwritten",
        "s",
        "callbackName",
        "s",
        "originalSettings",
        "oldCallbacks",
        "callbackName",
        "responseContainer",
        "jQuery",
        "overwritten",
        "overwritten",
        "responseContainer",
        "responseContainer",
        "overwritten",
        "jQuery",
        "XMLHttpRequest",
        "e",
        "jQuery",
        "jQuery",
        "key",
        "xhrCallbacks",
        "xhrCallbacks",
        "key",
        "xhrCallbacks",
        "jQuery",
        "xhrSupported",
        "xhrSupported",
        "jQuery",
        "xhrSupported",
        "xhrSupported",
        "jQuery",
        "options",
        "jQuery",
        "xhrSupported",
        "options",
        "headers",
        "complete",
        "options",
        "xhr",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "i",
        "options",
        "xhr",
        "i",
        "options",
        "i",
        "options",
        "xhr",
        "xhr",
        "options",
        "options",
        "headers",
        "headers",
        "i",
        "headers",
        "xhr",
        "i",
        "headers",
        "i",
        "callback",
        "callback",
        "xhrCallbacks",
        "id",
        "callback",
        "xhr",
        "xhr",
        "xhr",
        "complete",
        "xhr",
        "xhr",
        "complete",
        "xhrSuccessStatus",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "callback",
        "xhr",
        "callback",
        "callback",
        "xhrCallbacks",
        "id",
        "xhrId",
        "callback",
        "xhr",
        "options",
        "options",
        "callback",
        "callback",
        "core_pnum",
        "defaultPrefilter",
        "prop",
        "value",
        "prop",
        "value",
        "tween",
        "rfxnum",
        "value",
        "parts",
        "parts",
        "jQuery",
        "prop",
        "jQuery",
        "prop",
        "unit",
        "target",
        "rfxnum",
        "jQuery",
        "tween",
        "prop",
        "start",
        "start",
        "unit",
        "unit",
        "unit",
        "start",
        "parts",
        "parts",
        "start",
        "target",
        "scale",
        "scale",
        "start",
        "start",
        "scale",
        "jQuery",
        "tween",
        "prop",
        "start",
        "unit",
        "scale",
        "scale",
        "tween",
        "target",
        "scale",
        "maxIterations",
        "parts",
        "start",
        "tween",
        "start",
        "target",
        "tween",
        "unit",
        "tween",
        "parts",
        "start",
        "parts",
        "parts",
        "parts",
        "tween",
        "setTimeout",
        "fxNow",
        "fxNow",
        "jQuery",
        "value",
        "prop",
        "animation",
        "tweeners",
        "prop",
        "tweeners",
        "collection",
        "index",
        "length",
        "index",
        "tween",
        "collection",
        "index",
        "animation",
        "prop",
        "value",
        "tween",
        "elem",
        "properties",
        "options",
        "animationPrefilters",
        "jQuery",
        "tick",
        "stopped",
        "fxNow",
        "createFxNow",
        "animation",
        "animation",
        "currentTime",
        "remaining",
        "animation",
        "temp",
        "animation",
        "index",
        "length",
        "index",
        "animation",
        "index",
        "percent",
        "deferred",
        "elem",
        "animation",
        "percent",
        "remaining",
        "percent",
        "length",
        "remaining",
        "deferred",
        "elem",
        "animation",
        "deferred",
        "elem",
        "jQuery",
        "properties",
        "jQuery",
        "options",
        "properties",
        "options",
        "fxNow",
        "createFxNow",
        "options",
        "prop",
        "end",
        "jQuery",
        "elem",
        "animation",
        "prop",
        "end",
        "animation",
        "prop",
        "animation",
        "animation",
        "tween",
        "tween",
        "gotoEnd",
        "gotoEnd",
        "animation",
        "stopped",
        "stopped",
        "index",
        "length",
        "index",
        "animation",
        "index",
        "gotoEnd",
        "deferred",
        "elem",
        "animation",
        "gotoEnd",
        "deferred",
        "elem",
        "animation",
        "gotoEnd",
        "animation",
        "propFilter",
        "props",
        "animation",
        "index",
        "length",
        "index",
        "result",
        "animationPrefilters",
        "index",
        "animation",
        "elem",
        "props",
        "animation",
        "result",
        "result",
        "jQuery",
        "props",
        "createTween",
        "animation",
        "jQuery",
        "animation",
        "animation",
        "elem",
        "animation",
        "jQuery",
        "jQuery",
        "tick",
        "elem",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "animation",
        "props",
        "specialEasing",
        "index",
        "props",
        "name",
        "jQuery",
        "index",
        "easing",
        "specialEasing",
        "name",
        "value",
        "props",
        "index",
        "jQuery",
        "value",
        "easing",
        "value",
        "value",
        "props",
        "index",
        "value",
        "index",
        "name",
        "props",
        "name",
        "value",
        "props",
        "index",
        "hooks",
        "jQuery",
        "name",
        "hooks",
        "hooks",
        "value",
        "hooks",
        "value",
        "props",
        "name",
        "index",
        "value",
        "index",
        "props",
        "props",
        "index",
        "value",
        "index",
        "specialEasing",
        "index",
        "easing",
        "specialEasing",
        "name",
        "easing",
        "jQuery",
        "jQuery",
        "Animation",
        "props",
        "callback",
        "jQuery",
        "props",
        "callback",
        "props",
        "props",
        "props",
        "props",
        "props",
        "index",
        "length",
        "index",
        "prop",
        "props",
        "index",
        "tweeners",
        "prop",
        "tweeners",
        "prop",
        "tweeners",
        "prop",
        "callback",
        "callback",
        "prepend",
        "prepend",
        "animationPrefilters",
        "callback",
        "animationPrefilters",
        "callback",
        "elem",
        "props",
        "opts",
        "elem",
        "elem",
        "isHidden",
        "elem",
        "data_priv",
        "elem",
        "opts",
        "hooks",
        "jQuery",
        "elem",
        "hooks",
        "hooks",
        "oldfire",
        "hooks",
        "hooks",
        "hooks",
        "oldfire",
        "hooks",
        "anim",
        "anim",
        "hooks",
        "jQuery",
        "elem",
        "hooks",
        "elem",
        "props",
        "props",
        "opts",
        "style",
        "style",
        "style",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "style",
        "opts",
        "style",
        "anim",
        "style",
        "opts",
        "style",
        "opts",
        "style",
        "opts",
        "prop",
        "props",
        "value",
        "props",
        "prop",
        "rfxtypes",
        "value",
        "props",
        "prop",
        "toggle",
        "toggle",
        "value",
        "value",
        "hidden",
        "value",
        "dataShow",
        "dataShow",
        "prop",
        "hidden",
        "orig",
        "prop",
        "dataShow",
        "dataShow",
        "prop",
        "jQuery",
        "elem",
        "prop",
        "jQuery",
        "orig",
        "dataShow",
        "dataShow",
        "hidden",
        "dataShow",
        "dataShow",
        "data_priv",
        "elem",
        "toggle",
        "dataShow",
        "hidden",
        "hidden",
        "jQuery",
        "elem",
        "anim",
        "jQuery",
        "elem",
        "anim",
        "data_priv",
        "elem",
        "prop",
        "orig",
        "jQuery",
        "elem",
        "prop",
        "orig",
        "prop",
        "prop",
        "orig",
        "tween",
        "createTween",
        "hidden",
        "dataShow",
        "prop",
        "prop",
        "anim",
        "prop",
        "dataShow",
        "dataShow",
        "prop",
        "tween",
        "hidden",
        "tween",
        "tween",
        "tween",
        "prop",
        "prop",
        "elem",
        "options",
        "prop",
        "end",
        "easing",
        "Tween",
        "elem",
        "options",
        "prop",
        "end",
        "easing",
        "jQuery",
        "Tween",
        "Tween",
        "Tween",
        "elem",
        "options",
        "prop",
        "end",
        "easing",
        "unit",
        "elem",
        "prop",
        "easing",
        "options",
        "end",
        "unit",
        "jQuery",
        "prop",
        "Tween",
        "hooks",
        "hooks",
        "hooks",
        "Tween",
        "percent",
        "Tween",
        "eased",
        "jQuery",
        "percent",
        "percent",
        "eased",
        "percent",
        "eased",
        "hooks",
        "hooks",
        "hooks",
        "Tween",
        "Tween",
        "Tween",
        "Tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "result",
        "jQuery",
        "tween",
        "tween",
        "result",
        "result",
        "result",
        "tween",
        "jQuery",
        "tween",
        "jQuery",
        "tween",
        "tween",
        "tween",
        "tween",
        "jQuery",
        "tween",
        "jQuery",
        "tween",
        "jQuery",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "Tween",
        "Tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "tween",
        "jQuery",
        "i",
        "name",
        "jQuery",
        "name",
        "jQuery",
        "name",
        "speed",
        "easing",
        "callback",
        "speed",
        "speed",
        "cssFn",
        "arguments",
        "genFx",
        "name",
        "speed",
        "easing",
        "callback",
        "jQuery",
        "speed",
        "to",
        "easing",
        "callback",
        "isHidden",
        "to",
        "speed",
        "easing",
        "callback",
        "prop",
        "speed",
        "easing",
        "callback",
        "jQuery",
        "prop",
        "jQuery",
        "speed",
        "easing",
        "callback",
        "Animation",
        "jQuery",
        "prop",
        "optall",
        "empty",
        "data_priv",
        "anim",
        "doAnimation",
        "doAnimation",
        "empty",
        "optall",
        "doAnimation",
        "optall",
        "doAnimation",
        "clearQueue",
        "gotoEnd",
        "hooks",
        "hooks",
        "hooks",
        "stop",
        "gotoEnd",
        "gotoEnd",
        "clearQueue",
        "clearQueue",
        "clearQueue",
        "jQuery",
        "data_priv",
        "index",
        "data",
        "index",
        "data",
        "index",
        "stopQueue",
        "data",
        "index",
        "index",
        "data",
        "data",
        "index",
        "data",
        "index",
        "rrun",
        "index",
        "stopQueue",
        "data",
        "index",
        "index",
        "timers",
        "index",
        "timers",
        "index",
        "timers",
        "index",
        "timers",
        "index",
        "gotoEnd",
        "dequeue",
        "timers",
        "index",
        "dequeue",
        "gotoEnd",
        "jQuery",
        "data_priv",
        "data",
        "data",
        "jQuery",
        "queue",
        "queue",
        "data",
        "jQuery",
        "hooks",
        "hooks",
        "hooks",
        "index",
        "timers",
        "index",
        "timers",
        "index",
        "timers",
        "index",
        "timers",
        "index",
        "timers",
        "index",
        "index",
        "index",
        "length",
        "index",
        "queue",
        "index",
        "queue",
        "index",
        "queue",
        "index",
        "data",
        "includeWidth",
        "includeWidth",
        "includeWidth",
        "i",
        "i",
        "includeWidth",
        "which",
        "cssExpand",
        "i",
        "attrs",
        "which",
        "attrs",
        "which",
        "includeWidth",
        "attrs",
        "attrs",
        "attrs",
        "jQuery",
        "genFx",
        "genFx",
        "genFx",
        "name",
        "props",
        "jQuery",
        "name",
        "speed",
        "easing",
        "callback",
        "props",
        "speed",
        "easing",
        "callback",
        "jQuery",
        "speed",
        "easing",
        "fn",
        "speed",
        "speed",
        "jQuery",
        "speed",
        "fn",
        "fn",
        "easing",
        "jQuery",
        "speed",
        "speed",
        "speed",
        "fn",
        "easing",
        "easing",
        "jQuery",
        "easing",
        "easing",
        "opt",
        "jQuery",
        "opt",
        "opt",
        "opt",
        "jQuery",
        "jQuery",
        "opt",
        "jQuery",
        "opt",
        "opt",
        "opt",
        "opt",
        "opt",
        "opt",
        "jQuery",
        "opt",
        "opt",
        "opt",
        "jQuery",
        "opt",
        "opt",
        "jQuery",
        "p",
        "p",
        "p",
        "p",
        "jQuery",
        "jQuery",
        "Tween",
        "jQuery",
        "jQuery",
        "fxNow",
        "jQuery",
        "i",
        "timers",
        "i",
        "timer",
        "timers",
        "i",
        "timer",
        "timers",
        "i",
        "timer",
        "timers",
        "i",
        "timers",
        "jQuery",
        "fxNow",
        "jQuery",
        "timer",
        "timer",
        "jQuery",
        "timer",
        "jQuery",
        "jQuery",
        "jQuery",
        "timerId",
        "timerId",
        "setInterval",
        "jQuery",
        "jQuery",
        "jQuery",
        "clearInterval",
        "timerId",
        "timerId",
        "jQuery",
        "jQuery",
        "jQuery",
        "jQuery",
        "jQuery",
        "elem",
        "jQuery",
        "jQuery",
        "fn",
        "elem",
        "fn",
        "jQuery",
        "options",
        "arguments",
        "options",
        "i",
        "jQuery",
        "options",
        "i",
        "elem",
        "elem",
        "doc",
        "docElem",
        "doc",
        "jQuery",
        "docElem",
        "elem",
        "box",
        "elem",
        "core_strundefined",
        "box",
        "elem",
        "win",
        "getWindow",
        "doc",
        "box",
        "win",
        "docElem",
        "box",
        "win",
        "docElem",
        "jQuery",
        "elem",
        "options",
        "i",
        "jQuery",
        "elem",
        "jQuery",
        "elem",
        "position",
        "elem",
        "curOffset",
        "curElem",
        "curCSSTop",
        "jQuery",
        "elem",
        "curCSSLeft",
        "jQuery",
        "elem",
        "calculatePosition",
        "position",
        "position",
        "curCSSTop",
        "curCSSLeft",
        "calculatePosition",
        "curPosition",
        "curElem",
        "curTop",
        "curPosition",
        "curLeft",
        "curPosition",
        "curTop",
        "parseFloat",
        "curCSSTop",
        "curLeft",
        "parseFloat",
        "curCSSLeft",
        "jQuery",
        "options",
        "options",
        "options",
        "elem",
        "i",
        "curOffset",
        "options",
        "props",
        "options",
        "curOffset",
        "curTop",
        "options",
        "props",
        "options",
        "curOffset",
        "curLeft",
        "options",
        "options",
        "elem",
        "props",
        "curElem",
        "props",
        "jQuery",
        "jQuery",
        "elem",
        "offset",
        "elem",
        "offsetParent",
        "offset",
        "jQuery",
        "offsetParent",
        "parentOffset",
        "offsetParent",
        "parentOffset",
        "jQuery",
        "offsetParent",
        "parentOffset",
        "jQuery",
        "offsetParent",
        "offset",
        "parentOffset",
        "jQuery",
        "elem",
        "offset",
        "parentOffset",
        "jQuery",
        "elem",
        "docElem",
        "offsetParent",
        "jQuery",
        "offsetParent",
        "jQuery",
        "offsetParent",
        "offsetParent",
        "offsetParent",
        "offsetParent",
        "docElem",
        "jQuery",
        "method",
        "prop",
        "prop",
        "jQuery",
        "method",
        "val",
        "jQuery",
        "elem",
        "method",
        "val",
        "getWindow",
        "elem",
        "val",
        "win",
        "win",
        "prop",
        "elem",
        "method",
        "win",
        "win",
        "top",
        "val",
        "top",
        "val",
        "elem",
        "method",
        "val",
        "method",
        "val",
        "arguments",
        "elem",
        "jQuery",
        "elem",
        "elem",
        "elem",
        "elem",
        "jQuery",
        "name",
        "jQuery",
        "name",
        "name",
        "defaultExtra",
        "funcName",
        "jQuery",
        "funcName",
        "margin",
        "value",
        "arguments",
        "defaultExtra",
        "margin",
        "defaultExtra",
        "margin",
        "value",
        "jQuery",
        "elem",
        "value",
        "jQuery",
        "elem",
        "elem",
        "name",
        "elem",
        "doc",
        "elem",
        "elem",
        "name",
        "doc",
        "name",
        "elem",
        "name",
        "doc",
        "name",
        "doc",
        "name",
        "value",
        "jQuery",
        "elem",
        "extra",
        "jQuery",
        "elem",
        "value",
        "extra",
        "chainable",
        "margin",
        "chainable",
        "jQuery",
        "jQuery",
        "jQuery",
        "jQuery",
        "define",
        "define",
        "define",
        "jQuery",
        "jQuery",
        "reThis",
        "reThis",
        "runInContext",
        "reThis",
        "whitespace",
        "cloneableClasses",
        "funcClass",
        "cloneableClasses",
        "argsClass",
        "cloneableClasses",
        "arrayClass",
        "cloneableClasses",
        "boolClass",
        "cloneableClasses",
        "dateClass",
        "cloneableClasses",
        "numberClass",
        "cloneableClasses",
        "objectClass",
        "cloneableClasses",
        "regexpClass",
        "cloneableClasses",
        "stringClass",
        "objectTypes",
        "exports",
        "exports",
        "objectTypes",
        "freeExports",
        "objectTypes",
        "freeGlobal",
        "freeGlobal",
        "freeGlobal",
        "freeGlobal",
        "freeGlobal",
        "freeGlobal",
        "array",
        "value",
        "fromIndex",
        "fromIndex",
        "array",
        "index",
        "length",
        "array",
        "index",
        "value",
        "index",
        "cache",
        "value",
        "value",
        "cache",
        "cache",
        "value",
        "cache",
        "value",
        "value",
        "keyPrefix",
        "value",
        "cache",
        "cache",
        "cache",
        "cache",
        "key",
        "basicIndexOf",
        "cache",
        "key",
        "value",
        "cache",
        "key",
        "value",
        "value",
        "value",
        "cache",
        "value",
        "value",
        "keyPrefix",
        "value",
        "cache",
        "cache",
        "typeCache",
        "key",
        "typeCache",
        "key",
        "value",
        "cache",
        "typeCache",
        "key",
        "value",
        "value",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "ai",
        "bi",
        "array",
        "array",
        "getObject",
        "cache",
        "cache",
        "cache",
        "cache",
        "getObject",
        "result",
        "array",
        "result",
        "cache",
        "result",
        "cachePush",
        "index",
        "length",
        "result",
        "array",
        "index",
        "cache",
        "releaseObject",
        "result",
        "result",
        "match",
        "stringEscapes",
        "match",
        "arrayPool",
        "objectPool",
        "value",
        "value",
        "value",
        "array",
        "array",
        "arrayPool",
        "maxPoolSize",
        "arrayPool",
        "array",
        "cache",
        "releaseObject",
        "cache",
        "objectPool",
        "maxPoolSize",
        "objectPool",
        "array",
        "start",
        "end",
        "start",
        "start",
        "end",
        "end",
        "array",
        "array",
        "end",
        "start",
        "length",
        "length",
        "index",
        "length",
        "result",
        "index",
        "array",
        "start",
        "index",
        "result",
        "context",
        "context",
        "context",
        "_",
        "context",
        "_",
        "contextProps",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "objectProto",
        "context",
        "arrayRef",
        "reNative",
        "getPrototypeOf",
        "getPrototypeOf",
        "objectProto",
        "arrayRef",
        "objectProto",
        "context",
        "context",
        "objectProto",
        "reNative",
        "nativeBind",
        "toString",
        "nativeBind",
        "reNative",
        "nativeCreate",
        "nativeCreate",
        "reNative",
        "nativeIsArray",
        "nativeIsArray",
        "context",
        "context",
        "reNative",
        "nativeKeys",
        "nativeKeys",
        "context",
        "arrayRef",
        "reNative",
        "context",
        "nativeBind",
        "nativeBind",
        "isIeOpera",
        "ctorByClass",
        "arrayClass",
        "ctorByClass",
        "boolClass",
        "ctorByClass",
        "dateClass",
        "ctorByClass",
        "funcClass",
        "ctorByClass",
        "objectClass",
        "ctorByClass",
        "numberClass",
        "ctorByClass",
        "regexpClass",
        "ctorByClass",
        "stringClass",
        "nonEnumProps",
        "arrayClass",
        "nonEnumProps",
        "dateClass",
        "nonEnumProps",
        "numberClass",
        "nonEnumProps",
        "boolClass",
        "nonEnumProps",
        "stringClass",
        "nonEnumProps",
        "errorClass",
        "nonEnumProps",
        "funcClass",
        "nonEnumProps",
        "regexpClass",
        "nonEnumProps",
        "objectClass",
        "shadowedProps",
        "length",
        "shadowedProps",
        "length",
        "className",
        "nonEnumProps",
        "hasOwnProperty",
        "nonEnumProps",
        "className",
        "hasOwnProperty",
        "nonEnumProps",
        "className",
        "prop",
        "nonEnumProps",
        "className",
        "prop",
        "value",
        "value",
        "value",
        "isArray",
        "value",
        "hasOwnProperty",
        "value",
        "value",
        "lodashWrapper",
        "value",
        "value",
        "value",
        "lodashWrapper",
        "lodash",
        "lodash",
        "ctor",
        "prop",
        "ctor",
        "props",
        "prop",
        "prop",
        "arguments",
        "support",
        "arguments",
        "arguments",
        "support",
        "isArguments",
        "arguments",
        "support",
        "propertyIsEnumerable",
        "errorProto",
        "propertyIsEnumerable",
        "errorProto",
        "support",
        "propertyIsEnumerable",
        "ctor",
        "support",
        "nativeBind",
        "isV8",
        "support",
        "props",
        "support",
        "prop",
        "support",
        "props",
        "support",
        "arrayRef",
        "support",
        "support",
        "toString",
        "objectClass",
        "e",
        "support",
        "lodash",
        "reInterpolate",
        "lodash",
        "template",
        "eachIteratorOptions",
        "func",
        "thisArg",
        "partialArgs",
        "indicator",
        "isFunction",
        "func",
        "partialArgs",
        "isPartial",
        "partialArgs",
        "thisArg",
        "isFunc",
        "indicator",
        "thisArg",
        "func",
        "isPartial",
        "thisArg",
        "isFunc",
        "func",
        "thisArg",
        "key",
        "partialArgs",
        "args",
        "args",
        "args",
        "nativeSlice",
        "args",
        "rightIndicator",
        "args",
        "partialArgs",
        "partialArgs",
        "args",
        "partialArgs",
        "bound",
        "thisBinding",
        "createObject",
        "func",
        "func",
        "thisBinding",
        "args",
        "isObject",
        "result",
        "result",
        "thisBinding",
        "func",
        "thisBinding",
        "args",
        "bound",
        "getObject",
        "data",
        "shadowedProps",
        "data",
        "support",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "keys",
        "arguments",
        "index",
        "index",
        "key",
        "data",
        "key",
        "key",
        "data",
        "data",
        "args",
        "args",
        "iteratorTemplate",
        "data",
        "releaseObject",
        "data",
        "factory",
        "errorClass",
        "errorProto",
        "hasOwnProperty",
        "isArguments",
        "isArray",
        "isString",
        "keys",
        "lodash",
        "objectProto",
        "objectTypes",
        "nonEnumProps",
        "stringClass",
        "stringProto",
        "toString",
        "prototype",
        "isObject",
        "prototype",
        "nativeCreate",
        "prototype",
        "nativeCreate",
        "prototype",
        "isObject",
        "prototype",
        "noop",
        "prototype",
        "noop",
        "noop",
        "result",
        "match",
        "htmlEscapes",
        "match",
        "array",
        "value",
        "fromIndex",
        "result",
        "lodash",
        "indexOf",
        "basicIndexOf",
        "result",
        "result",
        "func",
        "array",
        "flag",
        "callback",
        "thisArg",
        "flag",
        "flag",
        "thisArg",
        "callback",
        "callback",
        "thisArg",
        "thisArg",
        "flag",
        "array",
        "flag",
        "flag",
        "callback",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "func",
        "array",
        "flag",
        "callback",
        "thisArg",
        "value",
        "value",
        "toString",
        "value",
        "objectClass",
        "ctor",
        "value",
        "isFunction",
        "ctor",
        "ctor",
        "ctor",
        "support",
        "isArguments",
        "value",
        "support",
        "isNode",
        "value",
        "support",
        "forIn",
        "value",
        "value",
        "key",
        "result",
        "hasOwnProperty",
        "key",
        "result",
        "forIn",
        "value",
        "value",
        "key",
        "result",
        "key",
        "result",
        "hasOwnProperty",
        "value",
        "result",
        "match",
        "htmlUnescapes",
        "match",
        "value",
        "toString",
        "value",
        "argsClass",
        "support",
        "isArguments",
        "value",
        "value",
        "hasOwnProperty",
        "value",
        "nativeIsArray",
        "value",
        "value",
        "value",
        "toString",
        "value",
        "arrayClass",
        "createIterator",
        "nativeKeys",
        "shimKeys",
        "isObject",
        "support",
        "support",
        "isArguments",
        "shimKeys",
        "nativeKeys",
        "createIterator",
        "eachIteratorOptions",
        "invert",
        "htmlEscapes",
        "createIterator",
        "defaultsIteratorOptions",
        "defaultsIteratorOptions",
        "value",
        "deep",
        "callback",
        "thisArg",
        "stackA",
        "stackB",
        "deep",
        "deep",
        "thisArg",
        "callback",
        "callback",
        "deep",
        "deep",
        "callback",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "result",
        "callback",
        "result",
        "result",
        "result",
        "result",
        "value",
        "isObject",
        "result",
        "isObj",
        "toString",
        "result",
        "cloneableClasses",
        "className",
        "support",
        "isNode",
        "result",
        "result",
        "isArray",
        "result",
        "isObj",
        "deep",
        "isObj",
        "isArr",
        "result",
        "assign",
        "result",
        "result",
        "ctorByClass",
        "className",
        "className",
        "boolClass",
        "dateClass",
        "ctor",
        "result",
        "numberClass",
        "stringClass",
        "ctor",
        "result",
        "regexpClass",
        "ctor",
        "result",
        "reFlags",
        "result",
        "stackA",
        "stackA",
        "stackA",
        "getArray",
        "stackB",
        "stackB",
        "getArray",
        "stackA",
        "length",
        "stackA",
        "length",
        "value",
        "stackB",
        "length",
        "result",
        "isArr",
        "ctor",
        "result",
        "isArr",
        "hasOwnProperty",
        "value",
        "result",
        "value",
        "hasOwnProperty",
        "value",
        "result",
        "value",
        "stackA",
        "value",
        "stackB",
        "result",
        "isArr",
        "basicEach",
        "forOwn",
        "value",
        "objValue",
        "key",
        "result",
        "key",
        "clone",
        "objValue",
        "deep",
        "callback",
        "stackA",
        "stackB",
        "initedStack",
        "releaseArray",
        "stackA",
        "releaseArray",
        "stackB",
        "result",
        "value",
        "callback",
        "thisArg",
        "clone",
        "value",
        "callback",
        "thisArg",
        "createIterator",
        "defaultsIteratorOptions",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "forOwn",
        "value",
        "key",
        "callback",
        "value",
        "key",
        "result",
        "key",
        "result",
        "createIterator",
        "eachIteratorOptions",
        "forOwnIteratorOptions",
        "createIterator",
        "eachIteratorOptions",
        "forOwnIteratorOptions",
        "forIn",
        "value",
        "key",
        "isFunction",
        "value",
        "result",
        "key",
        "result",
        "property",
        "hasOwnProperty",
        "property",
        "keys",
        "props",
        "index",
        "length",
        "props",
        "index",
        "result",
        "key",
        "key",
        "result",
        "value",
        "value",
        "value",
        "toString",
        "value",
        "boolClass",
        "value",
        "value",
        "value",
        "toString",
        "value",
        "dateClass",
        "value",
        "value",
        "value",
        "value",
        "value",
        "result",
        "toString",
        "value",
        "value",
        "className",
        "arrayClass",
        "className",
        "stringClass",
        "support",
        "className",
        "argsClass",
        "isArguments",
        "value",
        "className",
        "objectClass",
        "length",
        "isFunction",
        "value",
        "length",
        "forOwn",
        "value",
        "result",
        "result",
        "a",
        "b",
        "callback",
        "thisArg",
        "stackA",
        "stackB",
        "callback",
        "indicatorObject",
        "callback",
        "whereIndicator",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "callback",
        "a",
        "b",
        "result",
        "result",
        "a",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "a",
        "b",
        "otherType",
        "otherType",
        "a",
        "b",
        "a",
        "b",
        "toString",
        "a",
        "toString",
        "b",
        "className",
        "argsClass",
        "className",
        "objectClass",
        "otherClass",
        "argsClass",
        "otherClass",
        "objectClass",
        "className",
        "otherClass",
        "className",
        "boolClass",
        "dateClass",
        "a",
        "b",
        "numberClass",
        "a",
        "a",
        "b",
        "b",
        "a",
        "a",
        "b",
        "a",
        "b",
        "regexpClass",
        "stringClass",
        "a",
        "b",
        "className",
        "arrayClass",
        "isArr",
        "hasOwnProperty",
        "a",
        "hasOwnProperty",
        "b",
        "isEqual",
        "a",
        "a",
        "b",
        "b",
        "callback",
        "thisArg",
        "stackA",
        "stackB",
        "className",
        "objectClass",
        "support",
        "isNode",
        "a",
        "isNode",
        "b",
        "support",
        "isArguments",
        "a",
        "a",
        "support",
        "isArguments",
        "b",
        "b",
        "ctorA",
        "ctorB",
        "isFunction",
        "ctorA",
        "ctorA",
        "ctorA",
        "isFunction",
        "ctorB",
        "ctorB",
        "ctorB",
        "stackA",
        "stackA",
        "stackA",
        "getArray",
        "stackB",
        "stackB",
        "getArray",
        "stackA",
        "length",
        "stackA",
        "length",
        "a",
        "stackB",
        "length",
        "b",
        "result",
        "stackA",
        "a",
        "stackB",
        "b",
        "isArr",
        "length",
        "a",
        "size",
        "b",
        "result",
        "size",
        "a",
        "result",
        "whereIndicator",
        "result",
        "size",
        "b",
        "size",
        "whereIndicator",
        "index",
        "result",
        "isEqual",
        "a",
        "index",
        "value",
        "callback",
        "thisArg",
        "stackA",
        "stackB",
        "result",
        "isEqual",
        "a",
        "size",
        "value",
        "callback",
        "thisArg",
        "stackA",
        "stackB",
        "result",
        "forIn",
        "b",
        "value",
        "key",
        "b",
        "hasOwnProperty",
        "b",
        "key",
        "size",
        "result",
        "hasOwnProperty",
        "a",
        "key",
        "isEqual",
        "a",
        "key",
        "value",
        "callback",
        "thisArg",
        "stackA",
        "stackB",
        "result",
        "whereIndicator",
        "forIn",
        "a",
        "value",
        "key",
        "a",
        "hasOwnProperty",
        "a",
        "key",
        "result",
        "size",
        "initedStack",
        "releaseArray",
        "stackA",
        "releaseArray",
        "stackB",
        "result",
        "value",
        "nativeIsFinite",
        "value",
        "nativeIsNaN",
        "parseFloat",
        "value",
        "value",
        "value",
        "isFunction",
        "isFunction",
        "value",
        "value",
        "toString",
        "value",
        "funcClass",
        "value",
        "value",
        "objectTypes",
        "value",
        "value",
        "isNumber",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "toString",
        "value",
        "numberClass",
        "getPrototypeOf",
        "shimIsPlainObject",
        "value",
        "value",
        "toString",
        "value",
        "objectClass",
        "support",
        "isArguments",
        "value",
        "value",
        "valueOf",
        "objProto",
        "getPrototypeOf",
        "valueOf",
        "getPrototypeOf",
        "objProto",
        "objProto",
        "value",
        "objProto",
        "getPrototypeOf",
        "value",
        "objProto",
        "shimIsPlainObject",
        "value",
        "value",
        "value",
        "objectTypes",
        "value",
        "toString",
        "value",
        "regexpClass",
        "value",
        "value",
        "toString",
        "value",
        "stringClass",
        "value",
        "value",
        "source",
        "deepIndicator",
        "isObject",
        "deepIndicator",
        "indicatorObject",
        "args",
        "args",
        "args",
        "stackA",
        "getArray",
        "stackB",
        "getArray",
        "deepIndicator",
        "length",
        "args",
        "length",
        "args",
        "length",
        "callback",
        "lodash",
        "args",
        "length",
        "args",
        "length",
        "length",
        "args",
        "length",
        "callback",
        "args",
        "length",
        "index",
        "length",
        "isArray",
        "args",
        "index",
        "forEach",
        "forOwn",
        "args",
        "index",
        "source",
        "key",
        "key",
        "source",
        "isArr",
        "isArray",
        "source",
        "isPlainObject",
        "source",
        "stackA",
        "stackLength",
        "found",
        "stackA",
        "stackLength",
        "source",
        "value",
        "stackB",
        "stackLength",
        "found",
        "callback",
        "result",
        "callback",
        "value",
        "source",
        "isShallow",
        "result",
        "value",
        "result",
        "isShallow",
        "value",
        "isArr",
        "isArray",
        "value",
        "value",
        "isPlainObject",
        "value",
        "value",
        "stackA",
        "source",
        "stackB",
        "value",
        "isShallow",
        "value",
        "merge",
        "value",
        "source",
        "indicatorObject",
        "callback",
        "stackA",
        "stackB",
        "callback",
        "result",
        "callback",
        "value",
        "source",
        "result",
        "result",
        "source",
        "result",
        "value",
        "result",
        "key",
        "value",
        "initedStack",
        "releaseArray",
        "stackA",
        "releaseArray",
        "stackB",
        "callback",
        "thisArg",
        "getIndexOf",
        "callback",
        "isFunc",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "concat",
        "arrayRef",
        "nativeSlice",
        "arguments",
        "forIn",
        "value",
        "key",
        "isFunc",
        "callback",
        "value",
        "key",
        "indexOf",
        "props",
        "key",
        "result",
        "key",
        "value",
        "result",
        "keys",
        "props",
        "length",
        "index",
        "length",
        "props",
        "index",
        "result",
        "index",
        "key",
        "key",
        "result",
        "callback",
        "thisArg",
        "callback",
        "concat",
        "arrayRef",
        "nativeSlice",
        "arguments",
        "isObject",
        "props",
        "index",
        "length",
        "props",
        "index",
        "key",
        "result",
        "key",
        "key",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "forIn",
        "value",
        "key",
        "callback",
        "value",
        "key",
        "result",
        "key",
        "value",
        "result",
        "callback",
        "accumulator",
        "thisArg",
        "isArray",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "accumulator",
        "isArr",
        "accumulator",
        "ctor",
        "ctor",
        "accumulator",
        "createObject",
        "proto",
        "isArr",
        "basicEach",
        "forOwn",
        "value",
        "index",
        "callback",
        "accumulator",
        "value",
        "index",
        "accumulator",
        "keys",
        "props",
        "length",
        "index",
        "length",
        "result",
        "index",
        "props",
        "index",
        "result",
        "collection",
        "concat",
        "arrayRef",
        "nativeSlice",
        "arguments",
        "props",
        "length",
        "support",
        "isString",
        "collection",
        "collection",
        "collection",
        "index",
        "length",
        "result",
        "index",
        "collection",
        "props",
        "index",
        "result",
        "collection",
        "target",
        "fromIndex",
        "getIndexOf",
        "collection",
        "collection",
        "fromIndex",
        "fromIndex",
        "nativeMax",
        "length",
        "fromIndex",
        "fromIndex",
        "length",
        "length",
        "result",
        "isString",
        "collection",
        "collection",
        "target",
        "fromIndex",
        "indexOf",
        "collection",
        "target",
        "fromIndex",
        "basicEach",
        "collection",
        "value",
        "index",
        "fromIndex",
        "result",
        "value",
        "target",
        "result",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "forEach",
        "collection",
        "value",
        "key",
        "collection",
        "key",
        "callback",
        "value",
        "key",
        "collection",
        "hasOwnProperty",
        "result",
        "key",
        "result",
        "key",
        "result",
        "key",
        "result",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "isArray",
        "collection",
        "collection",
        "index",
        "length",
        "result",
        "callback",
        "collection",
        "index",
        "index",
        "collection",
        "basicEach",
        "collection",
        "value",
        "index",
        "collection",
        "result",
        "callback",
        "value",
        "index",
        "collection",
        "result",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "isArray",
        "collection",
        "collection",
        "index",
        "length",
        "collection",
        "index",
        "callback",
        "value",
        "index",
        "collection",
        "result",
        "value",
        "basicEach",
        "collection",
        "value",
        "index",
        "collection",
        "callback",
        "value",
        "index",
        "collection",
        "result",
        "value",
        "result",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "isArray",
        "collection",
        "collection",
        "index",
        "length",
        "collection",
        "index",
        "callback",
        "value",
        "index",
        "collection",
        "value",
        "basicEach",
        "collection",
        "value",
        "index",
        "collection",
        "callback",
        "value",
        "index",
        "collection",
        "result",
        "value",
        "result",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "thisArg",
        "isArray",
        "collection",
        "collection",
        "index",
        "length",
        "callback",
        "collection",
        "index",
        "index",
        "collection",
        "basicEach",
        "collection",
        "callback",
        "thisArg",
        "collection",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "forEach",
        "collection",
        "value",
        "key",
        "collection",
        "key",
        "callback",
        "value",
        "key",
        "collection",
        "hasOwnProperty",
        "result",
        "key",
        "result",
        "key",
        "result",
        "key",
        "value",
        "result",
        "collection",
        "methodName",
        "nativeSlice",
        "arguments",
        "methodName",
        "collection",
        "collection",
        "length",
        "length",
        "forEach",
        "collection",
        "value",
        "result",
        "index",
        "isFunc",
        "methodName",
        "value",
        "methodName",
        "value",
        "args",
        "result",
        "collection",
        "callback",
        "thisArg",
        "collection",
        "collection",
        "length",
        "length",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "isArray",
        "collection",
        "index",
        "length",
        "result",
        "index",
        "callback",
        "collection",
        "index",
        "index",
        "collection",
        "basicEach",
        "collection",
        "value",
        "key",
        "collection",
        "result",
        "index",
        "callback",
        "value",
        "key",
        "collection",
        "result",
        "collection",
        "callback",
        "thisArg",
        "Infinity",
        "callback",
        "isArray",
        "collection",
        "collection",
        "index",
        "length",
        "collection",
        "index",
        "value",
        "result",
        "result",
        "value",
        "callback",
        "callback",
        "isString",
        "collection",
        "charAtCallback",
        "lodash",
        "callback",
        "thisArg",
        "basicEach",
        "collection",
        "value",
        "index",
        "collection",
        "callback",
        "value",
        "index",
        "collection",
        "current",
        "computed",
        "computed",
        "current",
        "result",
        "value",
        "result",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "isArray",
        "collection",
        "collection",
        "index",
        "length",
        "collection",
        "index",
        "value",
        "result",
        "result",
        "value",
        "callback",
        "callback",
        "isString",
        "collection",
        "charAtCallback",
        "lodash",
        "callback",
        "thisArg",
        "basicEach",
        "collection",
        "value",
        "index",
        "collection",
        "callback",
        "value",
        "index",
        "collection",
        "current",
        "computed",
        "computed",
        "current",
        "result",
        "value",
        "result",
        "collection",
        "callback",
        "accumulator",
        "thisArg",
        "arguments",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "isArray",
        "collection",
        "collection",
        "noaccum",
        "accumulator",
        "collection",
        "index",
        "index",
        "length",
        "accumulator",
        "callback",
        "accumulator",
        "collection",
        "index",
        "index",
        "collection",
        "basicEach",
        "collection",
        "value",
        "index",
        "collection",
        "accumulator",
        "noaccum",
        "noaccum",
        "value",
        "callback",
        "accumulator",
        "value",
        "index",
        "collection",
        "accumulator",
        "collection",
        "callback",
        "accumulator",
        "thisArg",
        "collection",
        "collection",
        "arguments",
        "length",
        "keys",
        "collection",
        "length",
        "props",
        "support",
        "isString",
        "collection",
        "iterable",
        "collection",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "forEach",
        "collection",
        "value",
        "index",
        "collection",
        "index",
        "props",
        "props",
        "length",
        "length",
        "accumulator",
        "noaccum",
        "noaccum",
        "iterable",
        "index",
        "callback",
        "accumulator",
        "iterable",
        "index",
        "index",
        "collection",
        "accumulator",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "collection",
        "value",
        "index",
        "collection",
        "callback",
        "value",
        "index",
        "collection",
        "collection",
        "collection",
        "collection",
        "length",
        "length",
        "forEach",
        "collection",
        "value",
        "floor",
        "nativeRandom",
        "index",
        "result",
        "index",
        "result",
        "rand",
        "result",
        "rand",
        "value",
        "result",
        "collection",
        "collection",
        "collection",
        "length",
        "length",
        "keys",
        "collection",
        "collection",
        "callback",
        "thisArg",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "isArray",
        "collection",
        "collection",
        "index",
        "length",
        "result",
        "callback",
        "collection",
        "index",
        "index",
        "collection",
        "basicEach",
        "collection",
        "value",
        "index",
        "collection",
        "result",
        "callback",
        "value",
        "index",
        "collection",
        "result",
        "collection",
        "callback",
        "thisArg",
        "collection",
        "collection",
        "length",
        "length",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "forEach",
        "collection",
        "value",
        "key",
        "collection",
        "result",
        "index",
        "getObject",
        "callback",
        "value",
        "key",
        "collection",
        "index",
        "value",
        "length",
        "result",
        "result",
        "compareAscending",
        "length",
        "result",
        "length",
        "result",
        "length",
        "releaseObject",
        "result",
        "collection",
        "collection",
        "collection",
        "support",
        "isString",
        "collection",
        "collection",
        "collection",
        "values",
        "collection",
        "array",
        "array",
        "array",
        "index",
        "length",
        "array",
        "index",
        "value",
        "result",
        "value",
        "result",
        "array",
        "getIndexOf",
        "array",
        "array",
        "concat",
        "arrayRef",
        "nativeSlice",
        "arguments",
        "length",
        "largeArraySize",
        "indexOf",
        "basicIndexOf",
        "isLarge",
        "createCache",
        "seen",
        "cache",
        "indexOf",
        "cacheIndexOf",
        "seen",
        "cache",
        "isLarge",
        "index",
        "length",
        "array",
        "index",
        "indexOf",
        "seen",
        "value",
        "result",
        "value",
        "isLarge",
        "releaseObject",
        "seen",
        "result",
        "array",
        "callback",
        "thisArg",
        "array",
        "array",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "index",
        "length",
        "callback",
        "array",
        "index",
        "index",
        "array",
        "index",
        "array",
        "callback",
        "thisArg",
        "array",
        "array",
        "callback",
        "callback",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "index",
        "length",
        "callback",
        "array",
        "index",
        "index",
        "array",
        "n",
        "n",
        "callback",
        "n",
        "thisArg",
        "array",
        "array",
        "nativeMin",
        "nativeMax",
        "n",
        "length",
        "overloadWrapper",
        "flatten",
        "array",
        "isShallow",
        "callback",
        "array",
        "array",
        "index",
        "length",
        "array",
        "index",
        "callback",
        "value",
        "callback",
        "value",
        "index",
        "array",
        "isArray",
        "value",
        "push",
        "result",
        "isShallow",
        "value",
        "flatten",
        "value",
        "result",
        "value",
        "result",
        "array",
        "value",
        "fromIndex",
        "fromIndex",
        "array",
        "array",
        "fromIndex",
        "fromIndex",
        "nativeMax",
        "length",
        "fromIndex",
        "fromIndex",
        "fromIndex",
        "sortedIndex",
        "array",
        "value",
        "array",
        "index",
        "value",
        "index",
        "array",
        "basicIndexOf",
        "array",
        "value",
        "fromIndex",
        "array",
        "callback",
        "thisArg",
        "array",
        "array",
        "callback",
        "callback",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "index",
        "callback",
        "array",
        "index",
        "index",
        "array",
        "n",
        "n",
        "callback",
        "thisArg",
        "callback",
        "n",
        "array",
        "nativeMin",
        "nativeMax",
        "length",
        "n",
        "length",
        "array",
        "args",
        "getArray",
        "getIndexOf",
        "array",
        "array",
        "getArray",
        "argsIndex",
        "argsLength",
        "args",
        "argsIndex",
        "caches",
        "argsIndex",
        "indexOf",
        "basicIndexOf",
        "value",
        "value",
        "largeArraySize",
        "createCache",
        "argsIndex",
        "args",
        "argsIndex",
        "seen",
        "index",
        "length",
        "caches",
        "value",
        "array",
        "index",
        "cache",
        "cacheIndexOf",
        "cache",
        "value",
        "indexOf",
        "seen",
        "value",
        "argsIndex",
        "argsLength",
        "cache",
        "seen",
        "value",
        "argsIndex",
        "cache",
        "caches",
        "argsIndex",
        "cache",
        "cacheIndexOf",
        "cache",
        "value",
        "indexOf",
        "args",
        "argsIndex",
        "value",
        "result",
        "value",
        "argsLength",
        "cache",
        "caches",
        "argsLength",
        "cache",
        "releaseObject",
        "cache",
        "releaseArray",
        "caches",
        "releaseArray",
        "seen",
        "result",
        "array",
        "callback",
        "thisArg",
        "array",
        "array",
        "callback",
        "callback",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "index",
        "callback",
        "array",
        "index",
        "index",
        "array",
        "n",
        "n",
        "callback",
        "n",
        "thisArg",
        "array",
        "length",
        "array",
        "nativeMax",
        "length",
        "n",
        "array",
        "value",
        "fromIndex",
        "array",
        "array",
        "fromIndex",
        "index",
        "fromIndex",
        "nativeMax",
        "index",
        "fromIndex",
        "nativeMin",
        "fromIndex",
        "index",
        "index",
        "array",
        "index",
        "value",
        "index",
        "start",
        "end",
        "step",
        "start",
        "start",
        "step",
        "step",
        "end",
        "end",
        "start",
        "start",
        "nativeMax",
        "ceil",
        "end",
        "start",
        "step",
        "length",
        "index",
        "length",
        "result",
        "index",
        "start",
        "start",
        "step",
        "result",
        "array",
        "callback",
        "thisArg",
        "callback",
        "callback",
        "array",
        "array",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "index",
        "length",
        "callback",
        "array",
        "index",
        "index",
        "array",
        "n",
        "n",
        "callback",
        "thisArg",
        "nativeMax",
        "callback",
        "array",
        "n",
        "array",
        "value",
        "callback",
        "thisArg",
        "array",
        "array",
        "low",
        "callback",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "identity",
        "value",
        "callback",
        "value",
        "low",
        "high",
        "low",
        "high",
        "callback",
        "array",
        "mid",
        "value",
        "low",
        "mid",
        "high",
        "mid",
        "low",
        "array",
        "isArray",
        "array",
        "arguments",
        "array",
        "nativeSlice",
        "array",
        "arrayRef",
        "uniq",
        "concat",
        "arrayRef",
        "arguments",
        "overloadWrapper",
        "array",
        "isSorted",
        "callback",
        "getIndexOf",
        "array",
        "array",
        "isSorted",
        "length",
        "largeArraySize",
        "indexOf",
        "basicIndexOf",
        "callback",
        "isLarge",
        "getArray",
        "result",
        "isLarge",
        "createCache",
        "seen",
        "cache",
        "indexOf",
        "cacheIndexOf",
        "seen",
        "cache",
        "isLarge",
        "seen",
        "callback",
        "seen",
        "releaseArray",
        "seen",
        "result",
        "index",
        "length",
        "array",
        "index",
        "callback",
        "callback",
        "value",
        "index",
        "array",
        "value",
        "isSorted",
        "index",
        "seen",
        "seen",
        "computed",
        "indexOf",
        "seen",
        "computed",
        "callback",
        "isLarge",
        "seen",
        "computed",
        "result",
        "value",
        "isLarge",
        "releaseArray",
        "seen",
        "releaseObject",
        "seen",
        "callback",
        "releaseArray",
        "seen",
        "result",
        "array",
        "array",
        "max",
        "pluck",
        "array",
        "length",
        "length",
        "index",
        "length",
        "result",
        "index",
        "pluck",
        "array",
        "index",
        "result",
        "array",
        "difference",
        "array",
        "nativeSlice",
        "arguments",
        "array",
        "array",
        "unzip",
        "arguments",
        "keys",
        "values",
        "keys",
        "keys",
        "index",
        "length",
        "keys",
        "index",
        "values",
        "result",
        "key",
        "values",
        "index",
        "result",
        "key",
        "key",
        "result",
        "n",
        "func",
        "n",
        "func",
        "n",
        "func",
        "arguments",
        "func",
        "thisArg",
        "support",
        "nativeBind",
        "arguments",
        "nativeBind",
        "nativeBind",
        "arguments",
        "createBound",
        "func",
        "thisArg",
        "nativeSlice",
        "arguments",
        "arguments",
        "concat",
        "arrayRef",
        "nativeSlice",
        "arguments",
        "functions",
        "funcs",
        "index",
        "length",
        "funcs",
        "index",
        "key",
        "bind",
        "key",
        "key",
        "createBound",
        "key",
        "nativeSlice",
        "arguments",
        "indicatorObject",
        "funcs",
        "length",
        "args",
        "funcs",
        "length",
        "args",
        "args",
        "func",
        "thisArg",
        "argCount",
        "func",
        "identity",
        "func",
        "func",
        "keys",
        "func",
        "props",
        "length",
        "result",
        "isEqual",
        "props",
        "length",
        "func",
        "props",
        "length",
        "indicatorObject",
        "result",
        "thisArg",
        "reThis",
        "reThis",
        "fnToString",
        "func",
        "func",
        "argCount",
        "value",
        "func",
        "thisArg",
        "value",
        "argCount",
        "a",
        "b",
        "func",
        "thisArg",
        "a",
        "b",
        "argCount",
        "accumulator",
        "value",
        "index",
        "collection",
        "func",
        "thisArg",
        "accumulator",
        "value",
        "index",
        "collection",
        "value",
        "index",
        "collection",
        "func",
        "thisArg",
        "value",
        "index",
        "collection",
        "func",
        "wait",
        "options",
        "clearTimeout",
        "maxTimeoutId",
        "clearTimeout",
        "timeoutId",
        "callCount",
        "maxTimeoutId",
        "timeoutId",
        "trailing",
        "leading",
        "callCount",
        "clear",
        "isCalled",
        "maxWait",
        "lastCalled",
        "result",
        "func",
        "thisArg",
        "args",
        "clear",
        "trailing",
        "maxWait",
        "wait",
        "lastCalled",
        "result",
        "func",
        "thisArg",
        "args",
        "wait",
        "nativeMax",
        "wait",
        "options",
        "trailing",
        "isObject",
        "options",
        "leading",
        "options",
        "maxWait",
        "options",
        "nativeMax",
        "wait",
        "options",
        "trailing",
        "options",
        "options",
        "trailing",
        "args",
        "arguments",
        "thisArg",
        "callCount",
        "clearTimeout",
        "timeoutId",
        "maxWait",
        "leading",
        "callCount",
        "result",
        "func",
        "thisArg",
        "args",
        "maxTimeoutId",
        "leading",
        "lastCalled",
        "now",
        "maxWait",
        "now",
        "lastCalled",
        "remaining",
        "clearTimeout",
        "maxTimeoutId",
        "maxTimeoutId",
        "lastCalled",
        "now",
        "result",
        "func",
        "thisArg",
        "args",
        "maxTimeoutId",
        "maxTimeoutId",
        "setTimeout",
        "maxDelayed",
        "remaining",
        "wait",
        "maxWait",
        "timeoutId",
        "setTimeout",
        "delayed",
        "wait",
        "result",
        "func",
        "nativeSlice",
        "arguments",
        "setTimeout",
        "func",
        "args",
        "isV8",
        "freeModule",
        "setImmediate",
        "defer",
        "bind",
        "setImmediate",
        "context",
        "func",
        "wait",
        "nativeSlice",
        "arguments",
        "setTimeout",
        "func",
        "args",
        "wait",
        "func",
        "resolver",
        "memoized",
        "keyPrefix",
        "resolver",
        "resolver",
        "arguments",
        "arguments",
        "hasOwnProperty",
        "cache",
        "key",
        "cache",
        "key",
        "cache",
        "key",
        "func",
        "arguments",
        "memoized",
        "memoized",
        "func",
        "ran",
        "result",
        "ran",
        "result",
        "func",
        "arguments",
        "func",
        "result",
        "func",
        "createBound",
        "func",
        "nativeSlice",
        "arguments",
        "func",
        "createBound",
        "func",
        "nativeSlice",
        "arguments",
        "indicatorObject",
        "func",
        "wait",
        "options",
        "options",
        "leading",
        "isObject",
        "options",
        "leading",
        "options",
        "options",
        "leading",
        "trailing",
        "options",
        "options",
        "trailing",
        "options",
        "getObject",
        "options",
        "leading",
        "options",
        "wait",
        "options",
        "trailing",
        "debounce",
        "func",
        "wait",
        "options",
        "releaseObject",
        "options",
        "result",
        "value",
        "wrapper",
        "value",
        "push",
        "args",
        "arguments",
        "wrapper",
        "args",
        "reUnescapedHtml",
        "escapeHtmlChar",
        "value",
        "value",
        "forEach",
        "functions",
        "methodName",
        "lodash",
        "methodName",
        "methodName",
        "lodash",
        "methodName",
        "value",
        "push",
        "args",
        "arguments",
        "func",
        "lodash",
        "args",
        "value",
        "value",
        "value",
        "result",
        "lodashWrapper",
        "result",
        "context",
        "oldDash",
        "nativeParseInt",
        "whitespace",
        "nativeParseInt",
        "value",
        "radix",
        "nativeParseInt",
        "isString",
        "value",
        "value",
        "reLeadingSpacesAndZeros",
        "value",
        "radix",
        "min",
        "max",
        "min",
        "max",
        "max",
        "min",
        "min",
        "max",
        "max",
        "min",
        "min",
        "max",
        "max",
        "nativeRandom",
        "min",
        "max",
        "min",
        "nativeMin",
        "rand",
        "max",
        "min",
        "parseFloat",
        "rand",
        "max",
        "min",
        "floor",
        "rand",
        "max",
        "min",
        "property",
        "property",
        "isFunction",
        "value",
        "property",
        "value",
        "text",
        "data",
        "options",
        "lodash",
        "text",
        "text",
        "options",
        "iteratorTemplate",
        "defaults",
        "options",
        "settings",
        "settings",
        "iteratorTemplate",
        "defaults",
        "options",
        "settings",
        "iteratorTemplate",
        "keys",
        "imports",
        "iteratorTemplate",
        "values",
        "imports",
        "lodash",
        "options",
        "reNoMatch",
        "options",
        "reNoMatch",
        "interpolate",
        "interpolate",
        "reInterpolate",
        "reEsTemplate",
        "reNoMatch",
        "options",
        "reNoMatch",
        "text",
        "reDelimiters",
        "match",
        "escapeValue",
        "interpolateValue",
        "esTemplateValue",
        "evaluateValue",
        "offset",
        "interpolateValue",
        "interpolateValue",
        "esTemplateValue",
        "source",
        "text",
        "index",
        "offset",
        "reUnescapedString",
        "escapeStringChar",
        "escapeValue",
        "source",
        "escapeValue",
        "evaluateValue",
        "isEvaluating",
        "source",
        "evaluateValue",
        "interpolateValue",
        "source",
        "interpolateValue",
        "index",
        "offset",
        "match",
        "match",
        "source",
        "options",
        "hasVariable",
        "variable",
        "source",
        "variable",
        "source",
        "source",
        "isEvaluating",
        "source",
        "reEmptyStringLeading",
        "source",
        "reEmptyStringMiddle",
        "reEmptyStringTrailing",
        "source",
        "variable",
        "hasVariable",
        "variable",
        "variable",
        "isEvaluating",
        "source",
        "options",
        "templateCounter",
        "importsKeys",
        "source",
        "sourceURL",
        "importsValues",
        "e",
        "e",
        "source",
        "e",
        "data",
        "result",
        "data",
        "result",
        "source",
        "result",
        "n",
        "callback",
        "thisArg",
        "n",
        "n",
        "n",
        "n",
        "n",
        "callback",
        "lodash",
        "callback",
        "thisArg",
        "index",
        "n",
        "result",
        "index",
        "callback",
        "index",
        "result",
        "reEscapedHtml",
        "unescapeHtmlChar",
        "prefix",
        "idCounter",
        "prefix",
        "prefix",
        "id",
        "value",
        "interceptor",
        "interceptor",
        "value",
        "value",
        "lodash",
        "after",
        "lodash",
        "assign",
        "lodash",
        "at",
        "lodash",
        "bind",
        "lodash",
        "bindAll",
        "lodash",
        "bindKey",
        "lodash",
        "compact",
        "lodash",
        "compose",
        "lodash",
        "countBy",
        "lodash",
        "createCallback",
        "lodash",
        "debounce",
        "lodash",
        "defaults",
        "lodash",
        "defer",
        "lodash",
        "delay",
        "lodash",
        "difference",
        "lodash",
        "lodash",
        "flatten",
        "lodash",
        "forEach",
        "lodash",
        "forIn",
        "lodash",
        "forOwn",
        "lodash",
        "functions",
        "lodash",
        "groupBy",
        "lodash",
        "initial",
        "lodash",
        "intersection",
        "lodash",
        "invert",
        "lodash",
        "invoke",
        "lodash",
        "keys",
        "lodash",
        "lodash",
        "max",
        "lodash",
        "memoize",
        "lodash",
        "merge",
        "lodash",
        "min",
        "lodash",
        "omit",
        "lodash",
        "once",
        "lodash",
        "pairs",
        "lodash",
        "partial",
        "lodash",
        "partialRight",
        "lodash",
        "pick",
        "lodash",
        "pluck",
        "lodash",
        "lodash",
        "reject",
        "lodash",
        "rest",
        "lodash",
        "shuffle",
        "lodash",
        "sortBy",
        "lodash",
        "tap",
        "lodash",
        "throttle",
        "lodash",
        "times",
        "lodash",
        "toArray",
        "lodash",
        "transform",
        "lodash",
        "union",
        "lodash",
        "uniq",
        "lodash",
        "unzip",
        "lodash",
        "values",
        "lodash",
        "where",
        "lodash",
        "without",
        "lodash",
        "wrap",
        "lodash",
        "lodash",
        "zipObject",
        "lodash",
        "lodash",
        "rest",
        "lodash",
        "forEach",
        "lodash",
        "assign",
        "lodash",
        "functions",
        "lodash",
        "zipObject",
        "lodash",
        "lodash",
        "rest",
        "lodash",
        "uniq",
        "mixin",
        "lodash",
        "lodash",
        "lodash",
        "lodash",
        "lodash",
        "clone",
        "lodash",
        "cloneDeep",
        "lodash",
        "contains",
        "lodash",
        "escape",
        "lodash",
        "every",
        "lodash",
        "find",
        "lodash",
        "findIndex",
        "lodash",
        "findKey",
        "lodash",
        "has",
        "lodash",
        "identity",
        "lodash",
        "indexOf",
        "lodash",
        "isArguments",
        "lodash",
        "isArray",
        "lodash",
        "isBoolean",
        "lodash",
        "isDate",
        "lodash",
        "isElement",
        "lodash",
        "isEmpty",
        "lodash",
        "isEqual",
        "lodash",
        "isFinite",
        "lodash",
        "isFunction",
        "lodash",
        "isNaN",
        "lodash",
        "isNull",
        "lodash",
        "isNumber",
        "lodash",
        "isObject",
        "lodash",
        "isPlainObject",
        "lodash",
        "isRegExp",
        "lodash",
        "isString",
        "lodash",
        "isUndefined",
        "lodash",
        "lastIndexOf",
        "lodash",
        "mixin",
        "lodash",
        "noConflict",
        "lodash",
        "parseInt",
        "lodash",
        "random",
        "lodash",
        "reduce",
        "lodash",
        "reduceRight",
        "lodash",
        "result",
        "lodash",
        "runInContext",
        "lodash",
        "size",
        "lodash",
        "some",
        "lodash",
        "sortedIndex",
        "lodash",
        "template",
        "lodash",
        "unescape",
        "lodash",
        "uniqueId",
        "lodash",
        "every",
        "lodash",
        "some",
        "lodash",
        "find",
        "lodash",
        "find",
        "lodash",
        "reduce",
        "lodash",
        "reduceRight",
        "lodash",
        "contains",
        "lodash",
        "reduce",
        "forOwn",
        "lodash",
        "func",
        "methodName",
        "lodash",
        "methodName",
        "lodash",
        "methodName",
        "push",
        "args",
        "arguments",
        "func",
        "lodash",
        "args",
        "lodash",
        "first",
        "lodash",
        "last",
        "lodash",
        "first",
        "lodash",
        "first",
        "forOwn",
        "lodash",
        "func",
        "methodName",
        "lodash",
        "methodName",
        "lodash",
        "methodName",
        "callback",
        "thisArg",
        "func",
        "callback",
        "thisArg",
        "callback",
        "thisArg",
        "callback",
        "result",
        "lodashWrapper",
        "result",
        "lodash",
        "lodash",
        "wrapperToString",
        "lodash",
        "wrapperValueOf",
        "lodash",
        "wrapperValueOf",
        "basicEach",
        "methodName",
        "arrayRef",
        "methodName",
        "lodash",
        "methodName",
        "func",
        "arguments",
        "basicEach",
        "methodName",
        "arrayRef",
        "methodName",
        "lodash",
        "methodName",
        "func",
        "arguments",
        "basicEach",
        "methodName",
        "arrayRef",
        "methodName",
        "lodash",
        "methodName",
        "lodashWrapper",
        "func",
        "arguments",
        "support",
        "basicEach",
        "methodName",
        "arrayRef",
        "methodName",
        "methodName",
        "lodash",
        "methodName",
        "func",
        "value",
        "arguments",
        "value",
        "value",
        "isSplice",
        "lodashWrapper",
        "result",
        "result",
        "lodash",
        "basicEach",
        "lodash",
        "iteratorTemplate",
        "lodash",
        "shimKeys",
        "lodash",
        "runInContext",
        "define",
        "define",
        "define",
        "_",
        "define",
        "_",
        "freeExports",
        "freeExports",
        "freeModule",
        "freeModule",
        "_",
        "_",
        "freeExports",
        "_",
        "_",
        "root",
        "factory",
        "exports",
        "exports",
        "factory",
        "exports",
        "factory",
        "mustache",
        "define",
        "define",
        "define",
        "mustache",
        "root",
        "mustache",
        "mustache",
        "re",
        "RegExp_test",
        "re",
        "testRegExp",
        "nonSpaceRe",
        "Object_toString",
        "s",
        "entityMap",
        "s",
        "Scanner",
        "Scanner",
        "re",
        "re",
        "match",
        "match",
        "match",
        "Scanner",
        "re",
        "re",
        "index",
        "match",
        "match",
        "match",
        "index",
        "index",
        "match",
        "match",
        "view",
        "parent",
        "view",
        "view",
        "parent",
        "Context",
        "view",
        "view",
        "Context",
        "view",
        "Context",
        "view",
        "Context",
        "view",
        "Context",
        "view",
        "Context",
        "name",
        "name",
        "value",
        "name",
        "context",
        "name",
        "value",
        "context",
        "name",
        "value",
        "i",
        "names",
        "value",
        "value",
        "names",
        "i",
        "value",
        "context",
        "name",
        "value",
        "context",
        "context",
        "name",
        "value",
        "isFunction",
        "value",
        "value",
        "value",
        "value",
        "Writer",
        "Writer",
        "template",
        "tags",
        "template",
        "fn",
        "mustache",
        "template",
        "tags",
        "fn",
        "template",
        "tokens",
        "template",
        "fn",
        "Writer",
        "name",
        "template",
        "tags",
        "template",
        "tags",
        "name",
        "fn",
        "fn",
        "Writer",
        "name",
        "name",
        "name",
        "name",
        "name",
        "Writer",
        "tokens",
        "template",
        "view",
        "partials",
        "partials",
        "isFunction",
        "partials",
        "partials",
        "name",
        "partials",
        "name",
        "partials",
        "name",
        "renderTokens",
        "tokens",
        "Context",
        "view",
        "template",
        "Writer",
        "template",
        "view",
        "partials",
        "template",
        "view",
        "partials",
        "tokens",
        "writer",
        "context",
        "template",
        "template",
        "writer",
        "template",
        "context",
        "tokens",
        "i",
        "len",
        "i",
        "token",
        "tokens",
        "i",
        "tokenValue",
        "token",
        "token",
        "value",
        "context",
        "tokenValue",
        "value",
        "value",
        "isArray",
        "value",
        "value",
        "j",
        "jlen",
        "j",
        "buffer",
        "renderTokens",
        "token",
        "writer",
        "context",
        "value",
        "j",
        "template",
        "value",
        "buffer",
        "renderTokens",
        "token",
        "writer",
        "context",
        "value",
        "template",
        "isFunction",
        "value",
        "template",
        "template",
        "token",
        "token",
        "value",
        "value",
        "context",
        "text",
        "subRender",
        "value",
        "buffer",
        "value",
        "value",
        "buffer",
        "renderTokens",
        "token",
        "writer",
        "context",
        "template",
        "value",
        "context",
        "tokenValue",
        "value",
        "isArray",
        "value",
        "value",
        "buffer",
        "renderTokens",
        "token",
        "writer",
        "context",
        "template",
        "value",
        "writer",
        "tokenValue",
        "isFunction",
        "value",
        "buffer",
        "value",
        "context",
        "value",
        "context",
        "tokenValue",
        "value",
        "buffer",
        "value",
        "value",
        "context",
        "tokenValue",
        "value",
        "buffer",
        "mustache",
        "value",
        "buffer",
        "tokenValue",
        "buffer",
        "tokens",
        "tokens",
        "i",
        "len",
        "i",
        "token",
        "tokens",
        "i",
        "token",
        "sections",
        "token",
        "collector",
        "token",
        "collector",
        "token",
        "sections",
        "section",
        "token",
        "collector",
        "sections",
        "sections",
        "sections",
        "tree",
        "collector",
        "token",
        "tree",
        "tokens",
        "tokens",
        "i",
        "len",
        "i",
        "token",
        "tokens",
        "i",
        "token",
        "token",
        "lastToken",
        "lastToken",
        "lastToken",
        "token",
        "lastToken",
        "token",
        "lastToken",
        "token",
        "squashedTokens",
        "token",
        "squashedTokens",
        "tags",
        "escapeRegExp",
        "tags",
        "escapeRegExp",
        "tags",
        "template",
        "tags",
        "template",
        "template",
        "tags",
        "tags",
        "mustache",
        "tags",
        "tags",
        "tags",
        "spaceRe",
        "tags",
        "tags",
        "escapeTags",
        "tags",
        "Scanner",
        "template",
        "hasTag",
        "nonSpace",
        "spaces",
        "tokens",
        "spaces",
        "spaces",
        "hasTag",
        "nonSpace",
        "scanner",
        "start",
        "scanner",
        "value",
        "scanner",
        "tagRes",
        "value",
        "value",
        "i",
        "len",
        "i",
        "chr",
        "value",
        "i",
        "isWhitespace",
        "chr",
        "spaces",
        "tokens",
        "nonSpace",
        "tokens",
        "chr",
        "start",
        "start",
        "start",
        "chr",
        "stripSpace",
        "scanner",
        "tagRes",
        "hasTag",
        "scanner",
        "tagRe",
        "scanner",
        "whiteRe",
        "value",
        "scanner",
        "eqRe",
        "scanner",
        "eqRe",
        "scanner",
        "tagRes",
        "value",
        "scanner",
        "escapeRegExp",
        "tags",
        "scanner",
        "curlyRe",
        "scanner",
        "tagRes",
        "value",
        "scanner",
        "tagRes",
        "scanner",
        "tagRes",
        "scanner",
        "token",
        "value",
        "start",
        "scanner",
        "tokens",
        "token",
        "sections",
        "token",
        "openSection",
        "sections",
        "openSection",
        "value",
        "start",
        "openSection",
        "value",
        "openSection",
        "start",
        "nonSpace",
        "tags",
        "value",
        "spaceRe",
        "tags",
        "start",
        "tags",
        "tagRes",
        "escapeTags",
        "tags",
        "openSection",
        "sections",
        "openSection",
        "openSection",
        "scanner",
        "nestTokens",
        "squashTokens",
        "tokens",
        "mustache",
        "mustache",
        "mustache",
        "mustache",
        "Scanner",
        "mustache",
        "Context",
        "mustache",
        "Writer",
        "mustache",
        "parseTemplate",
        "mustache",
        "escapeHtml",
        "Writer",
        "mustache",
        "defaultWriter",
        "mustache",
        "template",
        "tags",
        "defaultWriter",
        "template",
        "tags",
        "mustache",
        "name",
        "template",
        "tags",
        "defaultWriter",
        "name",
        "template",
        "tags",
        "mustache",
        "tokens",
        "template",
        "defaultWriter",
        "tokens",
        "template",
        "mustache",
        "template",
        "view",
        "partials",
        "defaultWriter",
        "template",
        "view",
        "partials",
        "mustache",
        "template",
        "view",
        "partials",
        "send",
        "mustache",
        "template",
        "view",
        "partials",
        "isFunction",
        "send",
        "send",
        "result",
        "result",
        "root",
        "factory",
        "define",
        "define",
        "define",
        "_",
        "$",
        "exports",
        "root",
        "factory",
        "root",
        "exports",
        "_",
        "$",
        "exports",
        "require",
        "factory",
        "root",
        "exports",
        "_",
        "root",
        "factory",
        "root",
        "root",
        "root",
        "root",
        "root",
        "root",
        "root",
        "Backbone",
        "_",
        "$",
        "root",
        "array",
        "array",
        "array",
        "Backbone",
        "Backbone",
        "$",
        "Backbone",
        "root",
        "previousBackbone",
        "Backbone",
        "Backbone",
        "Backbone",
        "name",
        "callback",
        "context",
        "eventsApi",
        "name",
        "callback",
        "context",
        "callback",
        "name",
        "name",
        "events",
        "callback",
        "context",
        "context",
        "name",
        "callback",
        "context",
        "eventsApi",
        "name",
        "callback",
        "context",
        "callback",
        "_",
        "name",
        "once",
        "callback",
        "arguments",
        "once",
        "callback",
        "name",
        "once",
        "context",
        "name",
        "callback",
        "context",
        "eventsApi",
        "name",
        "callback",
        "context",
        "name",
        "callback",
        "context",
        "names",
        "name",
        "name",
        "_",
        "i",
        "l",
        "names",
        "i",
        "l",
        "i",
        "name",
        "names",
        "i",
        "events",
        "name",
        "name",
        "retain",
        "callback",
        "context",
        "j",
        "k",
        "events",
        "j",
        "k",
        "j",
        "ev",
        "events",
        "j",
        "callback",
        "callback",
        "ev",
        "callback",
        "ev",
        "context",
        "context",
        "ev",
        "retain",
        "ev",
        "retain",
        "name",
        "name",
        "arguments",
        "eventsApi",
        "name",
        "args",
        "name",
        "events",
        "triggerEvents",
        "events",
        "args",
        "allEvents",
        "triggerEvents",
        "allEvents",
        "arguments",
        "obj",
        "name",
        "callback",
        "listeningTo",
        "name",
        "callback",
        "callback",
        "name",
        "callback",
        "obj",
        "listeningTo",
        "obj",
        "obj",
        "id",
        "listeningTo",
        "obj",
        "listeningTo",
        "id",
        "obj",
        "name",
        "callback",
        "remove",
        "_",
        "obj",
        "id",
        "obj",
        "action",
        "name",
        "rest",
        "name",
        "name",
        "key",
        "name",
        "obj",
        "action",
        "obj",
        "key",
        "name",
        "key",
        "rest",
        "eventSplitter",
        "name",
        "name",
        "eventSplitter",
        "names",
        "i",
        "l",
        "i",
        "obj",
        "action",
        "obj",
        "names",
        "i",
        "rest",
        "events",
        "args",
        "events",
        "args",
        "args",
        "args",
        "args",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "a1",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "a1",
        "a2",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "a1",
        "a2",
        "a3",
        "i",
        "l",
        "ev",
        "events",
        "i",
        "ev",
        "args",
        "_",
        "listenMethods",
        "implementation",
        "method",
        "Events",
        "method",
        "obj",
        "name",
        "callback",
        "obj",
        "obj",
        "_",
        "listeningTo",
        "id",
        "obj",
        "callback",
        "name",
        "callback",
        "obj",
        "implementation",
        "name",
        "callback",
        "Events",
        "Events",
        "Events",
        "Events",
        "_",
        "Backbone",
        "Events",
        "Backbone",
        "attributes",
        "options",
        "attributes",
        "options",
        "options",
        "_",
        "options",
        "options",
        "options",
        "attrs",
        "attrs",
        "options",
        "attrs",
        "_",
        "attrs",
        "_",
        "attrs",
        "options",
        "arguments",
        "_",
        "Model",
        "Events",
        "options",
        "_",
        "Backbone",
        "arguments",
        "attr",
        "attr",
        "attr",
        "_",
        "attr",
        "attr",
        "attr",
        "key",
        "val",
        "options",
        "key",
        "key",
        "attrs",
        "key",
        "options",
        "val",
        "attrs",
        "key",
        "val",
        "options",
        "options",
        "attrs",
        "options",
        "unset",
        "options",
        "silent",
        "options",
        "changes",
        "changing",
        "changing",
        "_",
        "current",
        "prev",
        "attrs",
        "attrs",
        "attr",
        "attrs",
        "val",
        "attrs",
        "attr",
        "_",
        "current",
        "attr",
        "val",
        "changes",
        "attr",
        "_",
        "prev",
        "attr",
        "val",
        "attr",
        "val",
        "attr",
        "unset",
        "current",
        "attr",
        "current",
        "attr",
        "val",
        "silent",
        "changes",
        "options",
        "changes",
        "i",
        "l",
        "i",
        "changes",
        "i",
        "current",
        "changes",
        "i",
        "options",
        "changing",
        "silent",
        "options",
        "options",
        "attr",
        "options",
        "attr",
        "_",
        "options",
        "options",
        "key",
        "attrs",
        "key",
        "attrs",
        "_",
        "options",
        "attr",
        "attr",
        "_",
        "_",
        "attr",
        "diff",
        "diff",
        "_",
        "attr",
        "diff",
        "_",
        "old",
        "attr",
        "val",
        "diff",
        "attr",
        "changed",
        "changed",
        "attr",
        "val",
        "changed",
        "attr",
        "attr",
        "attr",
        "_",
        "options",
        "options",
        "options",
        "_",
        "options",
        "options",
        "options",
        "options",
        "options",
        "resp",
        "model",
        "model",
        "resp",
        "options",
        "options",
        "success",
        "success",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "resp",
        "options",
        "wrapError",
        "options",
        "options",
        "key",
        "val",
        "options",
        "key",
        "key",
        "attrs",
        "key",
        "options",
        "val",
        "attrs",
        "key",
        "val",
        "options",
        "_",
        "options",
        "attrs",
        "options",
        "attrs",
        "options",
        "attrs",
        "options",
        "attrs",
        "options",
        "_",
        "attributes",
        "attrs",
        "options",
        "options",
        "options",
        "options",
        "resp",
        "model",
        "attributes",
        "model",
        "resp",
        "options",
        "options",
        "serverAttrs",
        "_",
        "attrs",
        "serverAttrs",
        "_",
        "serverAttrs",
        "model",
        "serverAttrs",
        "options",
        "success",
        "success",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "resp",
        "options",
        "wrapError",
        "options",
        "method",
        "options",
        "method",
        "options",
        "attrs",
        "xhr",
        "method",
        "options",
        "attrs",
        "options",
        "attributes",
        "xhr",
        "options",
        "options",
        "options",
        "_",
        "options",
        "options",
        "model",
        "model",
        "model",
        "options",
        "options",
        "resp",
        "options",
        "model",
        "destroy",
        "success",
        "success",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "model",
        "resp",
        "options",
        "options",
        "wrapError",
        "options",
        "options",
        "options",
        "destroy",
        "xhr",
        "_",
        "_",
        "urlError",
        "encodeURIComponent",
        "resp",
        "options",
        "resp",
        "options",
        "_",
        "options",
        "attrs",
        "options",
        "options",
        "attrs",
        "_",
        "attrs",
        "attrs",
        "options",
        "error",
        "error",
        "_",
        "options",
        "error",
        "_",
        "modelMethods",
        "method",
        "Model",
        "method",
        "arguments",
        "args",
        "_",
        "method",
        "_",
        "args",
        "Backbone",
        "models",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "arguments",
        "models",
        "models",
        "_",
        "options",
        "_",
        "Collection",
        "Events",
        "Model",
        "options",
        "model",
        "model",
        "options",
        "Backbone",
        "arguments",
        "models",
        "options",
        "models",
        "_",
        "options",
        "addOptions",
        "models",
        "options",
        "_",
        "models",
        "models",
        "singular",
        "models",
        "_",
        "models",
        "options",
        "options",
        "i",
        "l",
        "models",
        "i",
        "l",
        "i",
        "model",
        "models",
        "i",
        "models",
        "i",
        "model",
        "model",
        "model",
        "index",
        "model",
        "index",
        "options",
        "options",
        "index",
        "model",
        "model",
        "options",
        "model",
        "options",
        "singular",
        "models",
        "models",
        "models",
        "options",
        "options",
        "_",
        "options",
        "setOptions",
        "options",
        "models",
        "models",
        "options",
        "_",
        "models",
        "models",
        "singular",
        "models",
        "models",
        "_",
        "models",
        "options",
        "at",
        "options",
        "_",
        "options",
        "options",
        "options",
        "sortable",
        "add",
        "remove",
        "i",
        "l",
        "models",
        "i",
        "l",
        "i",
        "attrs",
        "models",
        "i",
        "attrs",
        "Model",
        "id",
        "model",
        "attrs",
        "id",
        "attrs",
        "targetModel",
        "existing",
        "id",
        "remove",
        "modelMap",
        "existing",
        "merge",
        "attrs",
        "attrs",
        "model",
        "model",
        "attrs",
        "options",
        "attrs",
        "existing",
        "attrs",
        "options",
        "existing",
        "attrs",
        "options",
        "sortable",
        "sort",
        "existing",
        "sortAttr",
        "sort",
        "models",
        "i",
        "existing",
        "add",
        "model",
        "models",
        "i",
        "attrs",
        "options",
        "model",
        "toAdd",
        "model",
        "model",
        "options",
        "model",
        "existing",
        "model",
        "order",
        "model",
        "modelMap",
        "model",
        "order",
        "model",
        "modelMap",
        "model",
        "remove",
        "i",
        "l",
        "i",
        "l",
        "i",
        "modelMap",
        "model",
        "i",
        "toRemove",
        "model",
        "toRemove",
        "toRemove",
        "options",
        "toAdd",
        "order",
        "order",
        "sortable",
        "sort",
        "toAdd",
        "at",
        "i",
        "l",
        "toAdd",
        "i",
        "l",
        "i",
        "at",
        "i",
        "toAdd",
        "i",
        "order",
        "order",
        "toAdd",
        "i",
        "l",
        "orderedModels",
        "i",
        "l",
        "i",
        "orderedModels",
        "i",
        "sort",
        "options",
        "i",
        "l",
        "toAdd",
        "i",
        "l",
        "i",
        "model",
        "toAdd",
        "i",
        "model",
        "options",
        "sort",
        "order",
        "order",
        "options",
        "singular",
        "models",
        "models",
        "models",
        "options",
        "options",
        "options",
        "i",
        "l",
        "i",
        "i",
        "options",
        "options",
        "models",
        "models",
        "_",
        "options",
        "options",
        "options",
        "models",
        "model",
        "options",
        "model",
        "_",
        "options",
        "options",
        "model",
        "options",
        "model",
        "model",
        "options",
        "model",
        "_",
        "options",
        "options",
        "model",
        "options",
        "model",
        "arguments",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "index",
        "index",
        "attrs",
        "first",
        "_",
        "attrs",
        "first",
        "first",
        "model",
        "key",
        "attrs",
        "attrs",
        "key",
        "model",
        "key",
        "attrs",
        "attrs",
        "options",
        "options",
        "options",
        "_",
        "_",
        "options",
        "options",
        "attr",
        "_",
        "attr",
        "options",
        "options",
        "options",
        "_",
        "options",
        "options",
        "options",
        "options",
        "options",
        "resp",
        "options",
        "collection",
        "method",
        "resp",
        "options",
        "success",
        "success",
        "collection",
        "resp",
        "options",
        "collection",
        "collection",
        "resp",
        "options",
        "wrapError",
        "options",
        "options",
        "model",
        "options",
        "options",
        "options",
        "_",
        "options",
        "model",
        "model",
        "options",
        "options",
        "model",
        "options",
        "options",
        "options",
        "model",
        "resp",
        "options",
        "collection",
        "model",
        "options",
        "success",
        "success",
        "model",
        "resp",
        "options",
        "model",
        "options",
        "model",
        "resp",
        "options",
        "resp",
        "attrs",
        "options",
        "attrs",
        "Model",
        "attrs",
        "options",
        "options",
        "_",
        "options",
        "options",
        "attrs",
        "options",
        "model",
        "model",
        "model",
        "options",
        "model",
        "options",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "options",
        "model",
        "model",
        "model",
        "model",
        "collection",
        "options",
        "collection",
        "model",
        "options",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "model",
        "arguments",
        "_",
        "methods",
        "method",
        "Collection",
        "method",
        "arguments",
        "args",
        "_",
        "method",
        "_",
        "args",
        "_",
        "attributeMethods",
        "method",
        "Collection",
        "method",
        "value",
        "context",
        "_",
        "value",
        "value",
        "model",
        "model",
        "value",
        "_",
        "method",
        "iterator",
        "context",
        "Backbone",
        "options",
        "_",
        "options",
        "options",
        "_",
        "_",
        "options",
        "viewOptions",
        "arguments",
        "_",
        "View",
        "Events",
        "selector",
        "selector",
        "element",
        "element",
        "Backbone",
        "element",
        "Backbone",
        "element",
        "events",
        "events",
        "events",
        "_",
        "key",
        "events",
        "events",
        "key",
        "_",
        "method",
        "method",
        "events",
        "key",
        "method",
        "key",
        "delegateEventSplitter",
        "match",
        "match",
        "method",
        "_",
        "method",
        "eventName",
        "selector",
        "eventName",
        "method",
        "eventName",
        "selector",
        "method",
        "_",
        "_",
        "attrs",
        "_",
        "attrs",
        "_",
        "Backbone",
        "_",
        "attrs",
        "$el",
        "_",
        "Backbone",
        "method",
        "model",
        "options",
        "methodMap",
        "method",
        "_",
        "options",
        "options",
        "Backbone",
        "Backbone",
        "options",
        "_",
        "model",
        "urlError",
        "options",
        "model",
        "method",
        "method",
        "method",
        "options",
        "model",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "xhr",
        "xhr",
        "beforeSend",
        "beforeSend",
        "arguments",
        "options",
        "noXhrPatch",
        "ActiveXObject",
        "options",
        "Backbone",
        "_",
        "options",
        "model",
        "model",
        "xhr",
        "options",
        "xhr",
        "XMLHttpRequest",
        "Backbone",
        "Backbone",
        "Backbone",
        "arguments",
        "Backbone",
        "options",
        "options",
        "options",
        "options",
        "options",
        "arguments",
        "_",
        "Router",
        "Events",
        "route",
        "name",
        "callback",
        "_",
        "route",
        "route",
        "route",
        "_",
        "name",
        "callback",
        "name",
        "name",
        "callback",
        "callback",
        "name",
        "Backbone",
        "route",
        "fragment",
        "router",
        "route",
        "fragment",
        "router",
        "callback",
        "args",
        "router",
        "router",
        "name",
        "args",
        "router",
        "name",
        "args",
        "Backbone",
        "router",
        "name",
        "args",
        "callback",
        "args",
        "callback",
        "callback",
        "args",
        "fragment",
        "options",
        "Backbone",
        "fragment",
        "options",
        "_",
        "_",
        "route",
        "routes",
        "route",
        "route",
        "route",
        "route",
        "route",
        "escapeRegExp",
        "optionalParam",
        "namedParam",
        "match",
        "optional",
        "optional",
        "match",
        "splatParam",
        "route",
        "route",
        "fragment",
        "route",
        "fragment",
        "_",
        "param",
        "i",
        "i",
        "param",
        "param",
        "decodeURIComponent",
        "param",
        "Backbone",
        "_",
        "History",
        "_",
        "History",
        "Events",
        "match",
        "match",
        "fragment",
        "forcePushState",
        "fragment",
        "forcePushState",
        "fragment",
        "decodeURI",
        "trailingSlash",
        "fragment",
        "root",
        "fragment",
        "fragment",
        "root",
        "fragment",
        "fragment",
        "routeStripper",
        "options",
        "History",
        "History",
        "_",
        "options",
        "isExplorer",
        "navigator",
        "docMode",
        "docMode",
        "rootStripper",
        "oldIE",
        "Backbone",
        "frame",
        "fragment",
        "Backbone",
        "oldIE",
        "Backbone",
        "setInterval",
        "fragment",
        "loc",
        "routeStripper",
        "Backbone",
        "clearInterval",
        "History",
        "route",
        "callback",
        "route",
        "callback",
        "e",
        "current",
        "current",
        "current",
        "current",
        "fragment",
        "fragment",
        "fragment",
        "_",
        "handler",
        "handler",
        "fragment",
        "handler",
        "fragment",
        "fragment",
        "options",
        "History",
        "options",
        "options",
        "options",
        "options",
        "fragment",
        "fragment",
        "fragment",
        "fragment",
        "pathStripper",
        "fragment",
        "fragment",
        "fragment",
        "url",
        "url",
        "url",
        "options",
        "url",
        "fragment",
        "options",
        "fragment",
        "options",
        "fragment",
        "options",
        "url",
        "options",
        "fragment",
        "location",
        "fragment",
        "replace",
        "replace",
        "location",
        "location",
        "href",
        "fragment",
        "location",
        "fragment",
        "Backbone",
        "History",
        "protoProps",
        "staticProps",
        "protoProps",
        "_",
        "protoProps",
        "child",
        "protoProps",
        "child",
        "parent",
        "arguments",
        "_",
        "child",
        "parent",
        "staticProps",
        "child",
        "Surrogate",
        "parent",
        "child",
        "Surrogate",
        "protoProps",
        "_",
        "child",
        "protoProps",
        "child",
        "parent",
        "child",
        "Model",
        "Collection",
        "Router",
        "View",
        "History",
        "extend",
        "model",
        "options",
        "options",
        "options",
        "resp",
        "error",
        "error",
        "model",
        "resp",
        "options",
        "model",
        "model",
        "resp",
        "options",
        "Backbone",
        "Backbone",
        "Backbone",
        "_",
        "views",
        "_",
        "views",
        "_",
        "Container",
        "view",
        "customIndex",
        "view",
        "viewCid",
        "view",
        "view",
        "view",
        "viewCid",
        "customIndex",
        "customIndex",
        "viewCid",
        "model",
        "model",
        "modelCid",
        "modelCid",
        "viewCid",
        "index",
        "index",
        "viewCid",
        "index",
        "_",
        "index",
        "cid",
        "cid",
        "view",
        "view",
        "view",
        "view",
        "_",
        "cid",
        "key",
        "cid",
        "viewCid",
        "key",
        "viewCid",
        "method",
        "method",
        "_",
        "arguments",
        "method",
        "args",
        "_",
        "view",
        "_",
        "view",
        "method",
        "view",
        "method",
        "view",
        "args",
        "_",
        "_",
        "methods",
        "method",
        "Container",
        "method",
        "_",
        "views",
        "_",
        "arguments",
        "_",
        "method",
        "_",
        "args",
        "Container",
        "Backbone",
        "_",
        "Backbone",
        "Backbone",
        "Marionette",
        "_",
        "Wreqr",
        "Backbone",
        "_",
        "options",
        "options",
        "_",
        "options",
        "Handlers",
        "Backbone",
        "_",
        "Handlers",
        "Backbone",
        "handlers",
        "_",
        "handlers",
        "handler",
        "name",
        "_",
        "handler",
        "_",
        "handler",
        "context",
        "handler",
        "handler",
        "handler",
        "name",
        "handler",
        "context",
        "name",
        "handler",
        "context",
        "handler",
        "context",
        "name",
        "config",
        "name",
        "handler",
        "context",
        "name",
        "name",
        "name",
        "name",
        "config",
        "name",
        "arguments",
        "config",
        "config",
        "args",
        "name",
        "name",
        "Handlers",
        "Backbone",
        "_",
        "Wreqr",
        "options",
        "options",
        "_",
        "options",
        "_",
        "CommandStorage",
        "Backbone",
        "commandName",
        "commandName",
        "commands",
        "commands",
        "commandName",
        "commandName",
        "commands",
        "commands",
        "commandName",
        "args",
        "commandName",
        "command",
        "args",
        "commandName",
        "commandName",
        "command",
        "CommandStorage",
        "Wreqr",
        "Wreqr",
        "Wreqr",
        "Wreqr",
        "options",
        "options",
        "arguments",
        "Wreqr",
        "args",
        "name",
        "args",
        "name",
        "arguments",
        "args",
        "arguments",
        "name",
        "name",
        "args",
        "name",
        "args",
        "name",
        "handler",
        "context",
        "name",
        "_",
        "command",
        "args",
        "handler",
        "context",
        "args",
        "name",
        "options",
        "options",
        "_",
        "StorageType",
        "storage",
        "StorageType",
        "storage",
        "StorageType",
        "storage",
        "Wreqr",
        "Wreqr",
        "Wreqr",
        "Wreqr",
        "arguments",
        "arguments",
        "name",
        "args",
        "Wreqr",
        "Wreqr",
        "Backbone",
        "_",
        "EA",
        "Backbone",
        "_",
        "EA",
        "Backbone",
        "EA",
        "Backbone",
        "_",
        "Wreqr",
        "Backbone",
        "Backbone",
        "_",
        "Backbone",
        "_",
        "Backbone",
        "Marionette",
        "Marionette",
        "Backbone",
        "args",
        "protoSlice",
        "args",
        "message",
        "name",
        "message",
        "error",
        "name",
        "error",
        "Marionette",
        "Backbone",
        "Marionette",
        "target",
        "optionName",
        "target",
        "optionName",
        "target",
        "optionName",
        "target",
        "target",
        "optionName",
        "value",
        "target",
        "optionName",
        "value",
        "target",
        "optionName",
        "value",
        "Marionette",
        "match",
        "prefix",
        "eventName",
        "eventName",
        "splitter",
        "getEventName",
        "methodName",
        "_",
        "arguments",
        "_",
        "method",
        "method",
        "_",
        "arguments",
        "triggerMethod",
        "Marionette",
        "view",
        "view",
        "triggerDOMRefresh",
        "view",
        "view",
        "view",
        "triggerDOMRefresh",
        "view",
        "view",
        "view",
        "view",
        "_",
        "view",
        "view",
        "view",
        "view",
        "view",
        "handleShow",
        "view",
        "view",
        "view",
        "handleRender",
        "view",
        "Marionette",
        "target",
        "entity",
        "evt",
        "methods",
        "methods",
        "_",
        "methodNames",
        "methodName",
        "target",
        "methodName",
        "method",
        "throwError",
        "methodName",
        "target",
        "entity",
        "evt",
        "method",
        "target",
        "target",
        "entity",
        "evt",
        "method",
        "target",
        "entity",
        "evt",
        "method",
        "target",
        "target",
        "entity",
        "evt",
        "methods",
        "methods",
        "_",
        "methodNames",
        "methodName",
        "target",
        "methodName",
        "target",
        "entity",
        "evt",
        "method",
        "target",
        "target",
        "entity",
        "evt",
        "method",
        "target",
        "entity",
        "evt",
        "method",
        "target",
        "target",
        "entity",
        "bindings",
        "functionCallback",
        "stringCallback",
        "entity",
        "bindings",
        "_",
        "bindings",
        "bindings",
        "bindings",
        "target",
        "_",
        "bindings",
        "methods",
        "evt",
        "_",
        "methods",
        "functionCallback",
        "target",
        "entity",
        "evt",
        "methods",
        "stringCallback",
        "target",
        "entity",
        "evt",
        "methods",
        "Marionette",
        "target",
        "entity",
        "bindings",
        "iterateEvents",
        "target",
        "entity",
        "bindings",
        "bindToFunction",
        "bindFromStrings",
        "Marionette",
        "target",
        "entity",
        "bindings",
        "iterateEvents",
        "target",
        "entity",
        "bindings",
        "unbindToFunction",
        "unbindFromStrings",
        "Marionette",
        "Marionette",
        "Marionette",
        "_",
        "Marionette",
        "callback",
        "contextOverride",
        "callback",
        "contextOverride",
        "context",
        "options",
        "contextOverride",
        "context",
        "contextOverride",
        "callback",
        "context",
        "options",
        "options",
        "context",
        "context",
        "options",
        "Marionette",
        "_",
        "callbacks",
        "cb",
        "cb",
        "cb",
        "Marionette",
        "options",
        "Marionette",
        "options",
        "_",
        "Marionette",
        "Marionette",
        "_",
        "Marionette",
        "Backbone",
        "Marionette",
        "options",
        "options",
        "Marionette",
        "err",
        "err",
        "arguments",
        "args",
        "_",
        "Marionette",
        "regionConfig",
        "defaultRegionType",
        "regionConfig",
        "regionConfig",
        "regionConfig",
        "regionConfig",
        "regionIsType",
        "regionIsString",
        "regionSelectorIsString",
        "regionIsString",
        "selector",
        "regionConfig",
        "regionConfig",
        "selector",
        "regionConfig",
        "regionIsType",
        "RegionType",
        "regionConfig",
        "regionIsType",
        "regionTypeIsUndefined",
        "RegionType",
        "defaultRegionType",
        "regionConfig",
        "RegionType",
        "regionConfig",
        "RegionType",
        "selector",
        "regionConfig",
        "region",
        "selector",
        "regionConfig",
        "_",
        "parentEl",
        "parentEl",
        "parentEl",
        "parentEl",
        "selector",
        "region",
        "_",
        "Marionette",
        "Backbone",
        "view",
        "view",
        "_",
        "view",
        "view",
        "isDifferentView",
        "view",
        "isDifferentView",
        "isViewClosed",
        "view",
        "view",
        "Marionette",
        "view",
        "Marionette",
        "view",
        "selector",
        "Marionette",
        "selector",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "Marionette",
        "view",
        "view",
        "Marionette",
        "Marionette",
        "Marionette",
        "Marionette",
        "Marionette",
        "options",
        "Marionette",
        "options",
        "regionDefinitions",
        "defaults",
        "_",
        "regionDefinitions",
        "definition",
        "name",
        "definition",
        "definition",
        "definition",
        "definition",
        "definition",
        "_",
        "definition",
        "defaults",
        "name",
        "definition",
        "regions",
        "name",
        "region",
        "regions",
        "name",
        "definition",
        "_",
        "definition",
        "_",
        "definition",
        "definition",
        "isString",
        "isObject",
        "hasSelector",
        "region",
        "Marionette",
        "definition",
        "Marionette",
        "_",
        "definition",
        "region",
        "Marionette",
        "definition",
        "Marionette",
        "region",
        "definition",
        "name",
        "region",
        "name",
        "region",
        "region",
        "name",
        "name",
        "name",
        "name",
        "name",
        "region",
        "_",
        "region",
        "name",
        "name",
        "region",
        "_",
        "region",
        "name",
        "region",
        "arguments",
        "Marionette",
        "args",
        "name",
        "region",
        "name",
        "region",
        "name",
        "region",
        "region",
        "name",
        "name",
        "region",
        "_",
        "_",
        "methods",
        "method",
        "RegionManager",
        "method",
        "_",
        "regions",
        "_",
        "arguments",
        "_",
        "method",
        "_",
        "args",
        "RegionManager",
        "Marionette",
        "Marionette",
        "templateId",
        "templateId",
        "_",
        "Marionette",
        "templateId",
        "templateId",
        "cachedTemplate",
        "cachedTemplate",
        "Marionette",
        "templateId",
        "templateId",
        "cachedTemplate",
        "cachedTemplate",
        "arguments",
        "args",
        "length",
        "i",
        "i",
        "length",
        "i",
        "args",
        "i",
        "_",
        "Marionette",
        "template",
        "templateId",
        "Marionette",
        "templateId",
        "template",
        "template",
        "throwError",
        "templateId",
        "template",
        "rawTemplate",
        "_",
        "rawTemplate",
        "Marionette",
        "template",
        "data",
        "template",
        "error",
        "error",
        "template",
        "templateFunc",
        "template",
        "templateFunc",
        "Marionette",
        "template",
        "templateFunc",
        "data",
        "Marionette",
        "Backbone",
        "options",
        "_",
        "arguments",
        "options",
        "Backbone",
        "args",
        "Marionette",
        "Marionette",
        "Marionette",
        "target",
        "target",
        "target",
        "Marionette",
        "_",
        "templateHelpers",
        "templateHelpers",
        "templateHelpers",
        "_",
        "target",
        "templateHelpers",
        "_",
        "_",
        "triggers",
        "value",
        "key",
        "_",
        "value",
        "hasOptions",
        "value",
        "value",
        "triggerEvents",
        "key",
        "e",
        "e",
        "e",
        "e",
        "hasOptions",
        "value",
        "prevent",
        "hasOptions",
        "value",
        "stop",
        "shouldPrevent",
        "prevent",
        "prevent",
        "e",
        "shouldStop",
        "stop",
        "stop",
        "e",
        "eventName",
        "args",
        "triggerEvents",
        "events",
        "events",
        "Marionette",
        "Marionette",
        "Marionette",
        "Marionette",
        "events",
        "events",
        "events",
        "_",
        "events",
        "events",
        "events",
        "_",
        "combinedEvents",
        "events",
        "triggers",
        "Backbone",
        "combinedEvents",
        "arguments",
        "Backbone",
        "args",
        "Marionette",
        "Marionette",
        "Marionette",
        "Marionette",
        "shouldClose",
        "_",
        "_",
        "_",
        "bindings",
        "key",
        "bindings",
        "key",
        "key",
        "selector",
        "_",
        "$el",
        "name",
        "name",
        "Marionette",
        "Marionette",
        "Marionette",
        "arguments",
        "data",
        "data",
        "data",
        "data",
        "data",
        "Marionette",
        "template",
        "data",
        "html",
        "Marionette",
        "arguments",
        "Marionette",
        "Marionette",
        "options",
        "Marionette",
        "arguments",
        "item",
        "collection",
        "options",
        "item",
        "item",
        "item",
        "ItemView",
        "index",
        "child",
        "Marionette",
        "child",
        "item",
        "index",
        "ItemView",
        "item",
        "item",
        "ItemView",
        "index",
        "EmptyView",
        "Backbone",
        "model",
        "EmptyView",
        "Marionette",
        "item",
        "Marionette",
        "itemView",
        "throwError",
        "itemView",
        "item",
        "ItemView",
        "index",
        "Marionette",
        "_",
        "itemViewOptions",
        "itemViewOptions",
        "itemViewOptions",
        "item",
        "index",
        "item",
        "ItemView",
        "itemViewOptions",
        "view",
        "view",
        "view",
        "view",
        "index",
        "Marionette",
        "view",
        "view",
        "view",
        "Marionette",
        "view",
        "arguments",
        "args",
        "prefix",
        "args",
        "args",
        "view",
        "Marionette",
        "args",
        "view",
        "index",
        "view",
        "view",
        "index",
        "item",
        "ItemViewType",
        "itemViewOptions",
        "_",
        "item",
        "itemViewOptions",
        "ItemViewType",
        "options",
        "item",
        "item",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "view",
        "collectionView",
        "itemView",
        "index",
        "collectionView",
        "itemView",
        "Backbone",
        "Marionette",
        "arguments",
        "child",
        "child",
        "Marionette",
        "Marionette",
        "Marionette",
        "arguments",
        "item",
        "Marionette",
        "itemView",
        "throwError",
        "itemView",
        "data",
        "data",
        "html",
        "Marionette",
        "data",
        "data",
        "data",
        "Marionette",
        "template",
        "data",
        "cv",
        "iv",
        "index",
        "cv",
        "$container",
        "iv",
        "containerView",
        "containerView",
        "containerView",
        "Marionette",
        "containerView",
        "itemViewContainer",
        "_",
        "itemViewContainer",
        "itemViewContainer",
        "itemViewContainer",
        "container",
        "containerView",
        "selector",
        "container",
        "throwError",
        "containerView",
        "container",
        "containerView",
        "containerView",
        "container",
        "container",
        "Marionette",
        "Marionette",
        "Marionette",
        "options",
        "options",
        "options",
        "options",
        "Marionette",
        "options",
        "arguments",
        "Marionette",
        "args",
        "result",
        "arguments",
        "Marionette",
        "args",
        "name",
        "definition",
        "regions",
        "name",
        "definition",
        "regions",
        "name",
        "regions",
        "_",
        "regions",
        "regions",
        "name",
        "name",
        "name",
        "regions",
        "Marionette",
        "that",
        "regions",
        "defaults",
        "options",
        "_",
        "regions",
        "options",
        "regions",
        "regions",
        "region",
        "region",
        "Marionette",
        "name",
        "region",
        "name",
        "region",
        "name",
        "region",
        "name",
        "region",
        "name",
        "name",
        "region",
        "Marionette",
        "Backbone",
        "options",
        "Backbone",
        "arguments",
        "options",
        "Marionette",
        "controller",
        "appRoutes",
        "route",
        "methodName",
        "controller",
        "route",
        "methodName",
        "controller",
        "appRoutes",
        "appRoutes",
        "_",
        "appRoutes",
        "_",
        "routeNames",
        "route",
        "controller",
        "route",
        "appRoutes",
        "route",
        "Marionette",
        "controller",
        "route",
        "methodName",
        "controller",
        "methodName",
        "method",
        "methodName",
        "route",
        "methodName",
        "_",
        "method",
        "controller",
        "Marionette",
        "options",
        "Marionette",
        "Backbone",
        "Backbone",
        "Backbone",
        "_",
        "options",
        "Marionette",
        "_",
        "Marionette",
        "Backbone",
        "arguments",
        "args",
        "arguments",
        "args",
        "initializer",
        "initializer",
        "options",
        "options",
        "options",
        "options",
        "options",
        "regions",
        "regions",
        "region",
        "region",
        "region",
        "region",
        "moduleNames",
        "moduleDefinition",
        "arguments",
        "args",
        "Marionette",
        "Marionette",
        "args",
        "Marionette",
        "name",
        "region",
        "name",
        "region",
        "name",
        "region",
        "name",
        "Marionette",
        "Marionette",
        "Marionette",
        "moduleName",
        "app",
        "moduleName",
        "app",
        "Marionette",
        "_",
        "Marionette",
        "Backbone",
        "callback",
        "callback",
        "callback",
        "callback",
        "options",
        "_",
        "mod",
        "mod",
        "mod",
        "options",
        "options",
        "options",
        "options",
        "Marionette",
        "_",
        "mod",
        "mod",
        "Marionette",
        "moduleDefinition",
        "customArgs",
        "moduleDefinition",
        "customArgs",
        "definition",
        "customArgs",
        "definition",
        "_",
        "Backbone",
        "Marionette",
        "Marionette",
        "_",
        "customArgs",
        "definition",
        "args",
        "Marionette",
        "Marionette",
        "_",
        "Marionette",
        "app",
        "moduleNames",
        "moduleDefinition",
        "arguments",
        "customArgs",
        "moduleNames",
        "moduleNames",
        "moduleNames",
        "moduleDefinitions",
        "length",
        "moduleDefinition",
        "_",
        "moduleNames",
        "moduleName",
        "i",
        "parentModule",
        "moduleName",
        "app",
        "parentModule",
        "moduleDefinitions",
        "i",
        "customArgs",
        "parentModule",
        "moduleName",
        "app",
        "args",
        "parentModule",
        "moduleName",
        "Marionette",
        "moduleName",
        "app",
        "parentModule",
        "moduleName",
        "parentModule",
        "moduleName",
        "parentModule",
        "args",
        "_",
        "fn",
        "startWithParent",
        "_",
        "fn",
        "startWithParent",
        "startWithParent",
        "fn",
        "fn",
        "args",
        "startWithParent",
        "parentModule",
        "options",
        "options",
        "Marionette",
        "Backbone",
        "_",
        "Backbone",
        "Backbone",
        "tmplCache",
        "rawTemplate",
        "Mustache",
        "rawTemplate",
        "$",
        "ev",
        "App",
        "App",
        "ev",
        "playing",
        "App",
        "App",
        "App",
        "playing",
        "App",
        "playing",
        "App",
        "position",
        "playing",
        "App",
        "position",
        "$",
        "ev",
        "App",
        "ev",
        "ev",
        "ev",
        "$",
        "ev",
        "App",
        "ev",
        "App",
        "App",
        "App",
        "App",
        "w",
        "w",
        "w",
        "w",
        "Ac",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "$",
        "App",
        "$",
        "App",
        "bindEvents",
        "App",
        "App",
        "App",
        "App",
        "App",
        "left",
        "App",
        "right",
        "App",
        "left",
        "App",
        "left",
        "right",
        "App",
        "right",
        "App",
        "left",
        "App",
        "right",
        "$",
        "location",
        "App",
        "App",
        "App",
        "App",
        "location",
        "$",
        "hash",
        "json",
        "blob",
        "Blob",
        "json",
        "url",
        "blob",
        "App",
        "url",
        "e",
        "startup",
        "startup",
        "startup",
        "App",
        "Loader",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "init",
        "$elem",
        "$",
        "$bar",
        "$elem",
        "bindEvents",
        "bindEvents",
        "App",
        "updatePercent",
        "App",
        "$elem",
        "updatePercent",
        "App",
        "App",
        "percent",
        "percent",
        "$bar",
        "percent",
        "init",
        "App",
        "util",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "util",
        "val",
        "f0",
        "f1",
        "t0",
        "t1",
        "val",
        "f0",
        "t1",
        "t0",
        "f1",
        "f0",
        "t0",
        "util",
        "dB",
        "util",
        "dB",
        "util",
        "percent",
        "util",
        "percent",
        "util",
        "samples",
        "samples",
        "App",
        "util",
        "time",
        "sampleRate",
        "time",
        "App",
        "util",
        "ab",
        "Float32Array",
        "ab",
        "f32",
        "ab",
        "f32",
        "util",
        "_",
        "arguments",
        "App",
        "args",
        "_",
        "args",
        "ab",
        "ab",
        "App",
        "channels",
        "len",
        "sr",
        "channels",
        "buf",
        "channels",
        "args",
        "channels",
        "buf",
        "util",
        "ab",
        "to",
        "ab",
        "App",
        "to",
        "ab",
        "end",
        "start",
        "App",
        "channels",
        "len",
        "sr",
        "channels",
        "clone",
        "ab",
        "channels",
        "to",
        "buf",
        "channels",
        "clone",
        "buf",
        "util",
        "ab",
        "App",
        "src",
        "ab",
        "src",
        "util",
        "path",
        "callback",
        "XMLHttpRequest",
        "xhr",
        "path",
        "xhr",
        "xhr",
        "App",
        "xhr",
        "buffer",
        "callback",
        "buffer",
        "xhr",
        "util",
        "buffer",
        "buffer",
        "i",
        "len",
        "total",
        "buffer",
        "i",
        "buffer",
        "i",
        "rms",
        "total",
        "len",
        "db",
        "rms",
        "db",
        "util",
        "seconds",
        "seconds",
        "seconds",
        "seconds",
        "s",
        "s",
        "s",
        "s",
        "m",
        "m",
        "m",
        "m",
        "ms",
        "ms",
        "ms",
        "ms",
        "m",
        "s",
        "ms",
        "App",
        "Models",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "Models",
        "Backbone",
        "Infinity",
        "Infinity",
        "App",
        "App",
        "App",
        "Uint8Array",
        "Uint8Array",
        "App",
        "App",
        "App",
        "App",
        "App",
        "pos",
        "App",
        "App",
        "pos",
        "time",
        "pos",
        "now",
        "time",
        "max",
        "time",
        "App",
        "App",
        "now",
        "start",
        "playing",
        "delta",
        "position",
        "position",
        "position",
        "unsoloed",
        "soloed",
        "_muted",
        "soloed",
        "unsoloed",
        "track",
        "track",
        "soloed",
        "_muted",
        "track",
        "track",
        "e",
        "len",
        "len",
        "i",
        "len",
        "i",
        "left",
        "i",
        "i",
        "right",
        "i",
        "i",
        "left",
        "App",
        "left",
        "right",
        "App",
        "right",
        "playing",
        "left",
        "playing",
        "right",
        "data",
        "data",
        "App",
        "data",
        "data",
        "data",
        "data",
        "App",
        "data",
        "_",
        "data",
        "_",
        "_",
        "track",
        "track",
        "tracks",
        "_",
        "App",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "$",
        "binURI",
        "binURI",
        "data",
        "response",
        "response",
        "response",
        "location",
        "response",
        "App",
        "Models",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "Models",
        "Backbone",
        "Infinity",
        "Uint8Array",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "App",
        "buffer",
        "buffer",
        "buffer",
        "App",
        "App",
        "time",
        "App",
        "time",
        "App",
        "App",
        "e",
        "App",
        "len",
        "i",
        "len",
        "i",
        "floats",
        "i",
        "i",
        "dBFS",
        "App",
        "floats",
        "playing",
        "dBFS",
        "_",
        "App",
        "Collections",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "Collections",
        "Backbone",
        "App",
        "time",
        "track",
        "track",
        "time",
        "track",
        "track",
        "App",
        "track",
        "track",
        "durations",
        "App",
        "Views",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "Views",
        "Marionette",
        "App",
        "App",
        "App",
        "App",
        "setTimeout",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "ctx",
        "ctx",
        "hue",
        "i",
        "height",
        "hue",
        "i",
        "height",
        "ctx",
        "hue",
        "ctx",
        "height",
        "i",
        "width",
        "i",
        "data",
        "App",
        "data",
        "data",
        "App",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "data",
        "ev",
        "$",
        "ev",
        "$elem",
        "parseInt",
        "$elem",
        "$elem",
        "parseInt",
        "$elem",
        "parseInt",
        "$elem",
        "$elem",
        "ev",
        "ev",
        "touch",
        "ev",
        "touch",
        "touch",
        "ev",
        "ev",
        "$elem",
        "ev",
        "ev",
        "max",
        "ev",
        "ev",
        "touch",
        "touch",
        "touch",
        "ev",
        "pos",
        "state",
        "delta",
        "css",
        "max",
        "css",
        "css",
        "css",
        "css",
        "App",
        "css",
        "ev",
        "ev",
        "ev",
        "touch",
        "touch",
        "touch",
        "ev",
        "touch",
        "touch",
        "touch",
        "ev",
        "offset",
        "width",
        "left",
        "offset",
        "height",
        "top",
        "a",
        "b",
        "deg",
        "deg",
        "deg",
        "App",
        "deg",
        "ev",
        "ev",
        "ev",
        "App",
        "top",
        "ev",
        "ev",
        "ev",
        "muted",
        "muted",
        "ev",
        "ev",
        "ev",
        "soloed",
        "soloed",
        "ev",
        "ev",
        "ev",
        "canvas",
        "canvas",
        "canvas",
        "App",
        "dBFS",
        "height",
        "Infinity",
        "now",
        "peakTime",
        "afl",
        "scaled",
        "scaled",
        "gain",
        "scaled",
        "scaled",
        "scaled",
        "ctx",
        "width",
        "height",
        "scaled",
        "ctx",
        "height",
        "scaled",
        "width",
        "scaled",
        "height",
        "scaled",
        "width",
        "scaled",
        "scaled",
        "peak",
        "peak",
        "scaled",
        "now",
        "timeDiff",
        "timeDiff",
        "peak",
        "freshness",
        "timeDiff",
        "timeDiff",
        "ctx",
        "freshness",
        "ctx",
        "height",
        "peak",
        "width",
        "now",
        "App",
        "Views",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "Views",
        "Marionette",
        "Views",
        "App",
        "App",
        "Views",
        "App",
        "Backbone",
        "Marionette",
        "$",
        "_",
        "Views",
        "Marionette",
        "App",
        "data",
        "data",
        "data",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "pos",
        "pos",
        "pos",
        "ev",
        "ev",
        "ev",
        "pos",
        "pos",
        "pos",
        "canvas",
        "App",
        "pos",
        "ctx",
        "canvas",
        "canvas",
        "ctx",
        "ctx",
        "ctx",
        "i",
        "ctx",
        "ghost",
        "i",
        "x",
        "x",
        "ghost",
        "i",
        "i",
        "x",
        "ctx",
        "i",
        "ctx",
        "arr",
        "i",
        "x",
        "x",
        "arr",
        "i"
    ],
    "literals": [
        "\"2.0.3\"",
        "\"DOMContentLoaded\"",
        "\"load\"",
        "\"string\"",
        "\"<\"",
        "\">\"",
        "\"\"",
        "\"boolean\"",
        "\"object\"",
        "\"jQuery\"",
        "\"\"",
        "\"ready\"",
        "\"ready\"",
        "\"function\"",
        "\"object\"",
        "\"function\"",
        "\"object\"",
        "\"object\"",
        "\"isPrototypeOf\"",
        "\"string\"",
        "\"boolean\"",
        "\"string\"",
        "\"text/xml\"",
        "\"parsererror\"",
        "\"Invalid XML: \"",
        "\"use strict\"",
        "\"script\"",
        "\"ms-\"",
        "\"\"",
        "\"string\"",
        "\"number\"",
        "\"string\"",
        "\"object\"",
        "\"complete\"",
        "\"DOMContentLoaded\"",
        "\"load\"",
        "\"Boolean Number String Function Array Date RegExp Object Error\"",
        "\" \"",
        "\"[object \"",
        "\"]\"",
        "\"array\"",
        "\"function\"",
        "\"number\"",
        "\"sizzle\"",
        "\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\"",
        "\"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\"",
        "\"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\"",
        "\"w\"",
        "\"w#\"",
        "\"\\\\[\"",
        "\"*(\"",
        "\")\"",
        "\"*(?:([*^$|!~]?=)\"",
        "\"*(?:(['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|(\"",
        "\")|)|)\"",
        "\"*\\\\]\"",
        "\":(\"",
        "\")(?:\\\\(((['\\\"])((?:\\\\\\\\.|[^\\\\\\\\])*?)\\\\3|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\"",
        "\")*)|.*)\\\\)|)\"",
        "\"^\"",
        "\"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\"",
        "\"+$\"",
        "\"g\"",
        "\"^\"",
        "\"*,\"",
        "\"*\"",
        "\"^\"",
        "\"*([>+~]|\"",
        "\")\"",
        "\"*\"",
        "\"*[+~]\"",
        "\"=\"",
        "\"*([^\\\\]'\\\"]*)\"",
        "\"*\\\\]\"",
        "\"g\"",
        "\"^\"",
        "\"$\"",
        "\"ID\"",
        "\"^#(\"",
        "\")\"",
        "\"CLASS\"",
        "\"^\\\\.(\"",
        "\")\"",
        "\"TAG\"",
        "\"^(\"",
        "\"w\"",
        "\"w*\"",
        "\")\"",
        "\"ATTR\"",
        "\"^\"",
        "\"PSEUDO\"",
        "\"^\"",
        "\"CHILD\"",
        "\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\"",
        "\"*(even|odd|(([+-]|)(\\\\d*)n|)\"",
        "\"*(?:([+-]|)\"",
        "\"*(\\\\d+)|))\"",
        "\"*\\\\)|)\"",
        "\"i\"",
        "\"bool\"",
        "\"^(?:\"",
        "\")$\"",
        "\"i\"",
        "\"needsContext\"",
        "\"^\"",
        "\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\"",
        "\"*((?:-\\\\d)?\\\\d*)\"",
        "\"*\\\\)|)(?=[^-]|$)\"",
        "\"i\"",
        "\"\\\\\\\\([\\\\da-f]{1,6}\"",
        "\"?|(\"",
        "\")|.)\"",
        "\"ig\"",
        "\"0x\"",
        "\"string\"",
        "\"object\"",
        "\"id\"",
        "\"\\\\$&\"",
        "\"id\"",
        "\"[id='\"",
        "\"'] \"",
        "\",\"",
        "\"id\"",
        "\"$1\"",
        "\" \"",
        "\"div\"",
        "\"|\"",
        "\"input\"",
        "\"input\"",
        "\"button\"",
        "\"HTML\"",
        "\"onbeforeunload\"",
        "\"i\"",
        "\"className\"",
        "\"\"",
        "\"*\"",
        "\"<div class='a'></div><div class='a i'></div>\"",
        "\"i\"",
        "\"i\"",
        "\"ID\"",
        "\"ID\"",
        "\"id\"",
        "\"ID\"",
        "\"ID\"",
        "\"id\"",
        "\"TAG\"",
        "\"*\"",
        "\"CLASS\"",
        "\"<select><option selected=''></option></select>\"",
        "\"[selected]\"",
        "\"\\\\[\"",
        "\"*(?:value|\"",
        "\")\"",
        "\":checked\"",
        "\":checked\"",
        "\"input\"",
        "\"type\"",
        "\"hidden\"",
        "\"t\"",
        "\"\"",
        "\"[t^='']\"",
        "\"[*^$]=\"",
        "\"*(?:''|\\\"\\\")\"",
        "\":enabled\"",
        "\":enabled\"",
        "\":disabled\"",
        "\"*,:x\"",
        "\",.*:\"",
        "\"div\"",
        "\"[s!='']:x\"",
        "\"!=\"",
        "\"|\"",
        "\"|\"",
        "\"='$1']\"",
        "\"Syntax error, unrecognized expression: \"",
        "\"\"",
        "\"string\"",
        "\">\"",
        "\"parentNode\"",
        "\" \"",
        "\"parentNode\"",
        "\"+\"",
        "\"previousSibling\"",
        "\"~\"",
        "\"previousSibling\"",
        "\"ATTR\"",
        "\"\"",
        "\"~=\"",
        "\" \"",
        "\" \"",
        "\"CHILD\"",
        "\"nth\"",
        "\"even\"",
        "\"odd\"",
        "\"odd\"",
        "\"PSEUDO\"",
        "\"CHILD\"",
        "\")\"",
        "\"TAG\"",
        "\"*\"",
        "\"CLASS\"",
        "\" \"",
        "\"(^|\"",
        "\")\"",
        "\"(\"",
        "\"|$)\"",
        "\"string\"",
        "\"class\"",
        "\"\"",
        "\"ATTR\"",
        "\"!=\"",
        "\"\"",
        "\"=\"",
        "\"!=\"",
        "\"^=\"",
        "\"*=\"",
        "\"$=\"",
        "\"~=\"",
        "\" \"",
        "\" \"",
        "\"|=\"",
        "\"-\"",
        "\"CHILD\"",
        "\"nth\"",
        "\"last\"",
        "\"of-type\"",
        "\"nextSibling\"",
        "\"previousSibling\"",
        "\"only\"",
        "\"nextSibling\"",
        "\"PSEUDO\"",
        "\"unsupported pseudo: \"",
        "\"\"",
        "\"not\"",
        "\"$1\"",
        "\"has\"",
        "\"contains\"",
        "\"lang\"",
        "\"\"",
        "\"unsupported lang: \"",
        "\"xml:lang\"",
        "\"lang\"",
        "\"-\"",
        "\"target\"",
        "\"root\"",
        "\"focus\"",
        "\"enabled\"",
        "\"disabled\"",
        "\"checked\"",
        "\"input\"",
        "\"option\"",
        "\"selected\"",
        "\"empty\"",
        "\"@\"",
        "\"parent\"",
        "\"empty\"",
        "\"header\"",
        "\"input\"",
        "\"button\"",
        "\"input\"",
        "\"button\"",
        "\"button\"",
        "\"text\"",
        "\"input\"",
        "\"text\"",
        "\"type\"",
        "\"first\"",
        "\"last\"",
        "\"eq\"",
        "\"even\"",
        "\"odd\"",
        "\"lt\"",
        "\"gt\"",
        "\"nth\"",
        "\"eq\"",
        "\" \"",
        "\" \"",
        "\"\"",
        "\"parentNode\"",
        "\" \"",
        "\"*\"",
        "\" \"",
        "\" \"",
        "\"*\"",
        "\"\"",
        "\"$1\"",
        "\"0\"",
        "\"TAG\"",
        "\"*\"",
        "\" \"",
        "\"ID\"",
        "\"ID\"",
        "\"needsContext\"",
        "\"\"",
        "\"\"",
        "\"div\"",
        "\"<a href='#'></a>\"",
        "\"href\"",
        "\"#\"",
        "\"type|href|height|width\"",
        "\"type\"",
        "\"<input/>\"",
        "\"value\"",
        "\"\"",
        "\"value\"",
        "\"\"",
        "\"value\"",
        "\"input\"",
        "\"disabled\"",
        "\":\"",
        "\"string\"",
        "\"function\"",
        "\"string\"",
        "\"resolve\"",
        "\"done\"",
        "\"once memory\"",
        "\"resolved\"",
        "\"reject\"",
        "\"fail\"",
        "\"once memory\"",
        "\"rejected\"",
        "\"notify\"",
        "\"progress\"",
        "\"memory\"",
        "\"pending\"",
        "\"With\"",
        "\"With\"",
        "\"With\"",
        "\"input\"",
        "\"div\"",
        "\"select\"",
        "\"option\"",
        "\"checkbox\"",
        "\"\"",
        "\"input\"",
        "\"t\"",
        "\"radio\"",
        "\"t\"",
        "\"checked\"",
        "\"t\"",
        "\"name\"",
        "\"t\"",
        "\"onfocusin\"",
        "\"content-box\"",
        "\"\"",
        "\"content-box\"",
        "\"padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box\"",
        "\"body\"",
        "\"div\"",
        "\"border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px\"",
        "\"\"",
        "\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%\"",
        "\"1%\"",
        "\"4px\"",
        "\"4px\"",
        "\"div\"",
        "\"0\"",
        "\"1px\"",
        "\"string\"",
        "\"string\"",
        "\"hasDataAttrs\"",
        "\"data-\"",
        "\"hasDataAttrs\"",
        "\"object\"",
        "\"-\"",
        "\"data-\"",
        "\"-$1\"",
        "\"string\"",
        "\"true\"",
        "\"false\"",
        "\"null\"",
        "\"\"",
        "\"fx\"",
        "\"queue\"",
        "\"fx\"",
        "\"inprogress\"",
        "\"fx\"",
        "\"inprogress\"",
        "\"queueHooks\"",
        "\"once memory\"",
        "\"queue\"",
        "\"string\"",
        "\"fx\"",
        "\"fx\"",
        "\"inprogress\"",
        "\"fx\"",
        "\"fx\"",
        "\"string\"",
        "\"fx\"",
        "\"queueHooks\"",
        "\"string\"",
        "\"\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"string\"",
        "\"\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"\"",
        "\"boolean\"",
        "\"string\"",
        "\"string\"",
        "\"boolean\"",
        "\"__className__\"",
        "\"\"",
        "\"__className__\"",
        "\"\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"get\"",
        "\"value\"",
        "\"string\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"number\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"set\"",
        "\"value\"",
        "\"select-one\"",
        "\"disabled\"",
        "\"optgroup\"",
        "\"set\"",
        "\"\"",
        "\"get\"",
        "\"radio\"",
        "\"input\"",
        "\"type\"",
        "\"for\"",
        "\"htmlFor\"",
        "\"class\"",
        "\"className\"",
        "\"set\"",
        "\"get\"",
        "\"tabindex\"",
        "\"tabIndex\"",
        "\"readOnly\"",
        "\"maxLength\"",
        "\"cellSpacing\"",
        "\"cellPadding\"",
        "\"rowSpan\"",
        "\"colSpan\"",
        "\"useMap\"",
        "\"frameBorder\"",
        "\"contentEditable\"",
        "\"radio\"",
        "\"checkbox\"",
        "\"value\"",
        "\"on\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\".\"",
        "\".\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\".\"",
        "\"(^|\\\\.)\"",
        "\"\\\\.(?:.*\\\\.|)\"",
        "\"(\\\\.|$)\"",
        "\"**\"",
        "\"events\"",
        "\"type\"",
        "\"namespace\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "\":\"",
        "\"on\"",
        "\"object\"",
        "\".\"",
        "\"(^|\\\\.)\"",
        "\"\\\\.(?:.*\\\\.|)\"",
        "\"(\\\\.|$)\"",
        "\"events\"",
        "\"handle\"",
        "\"events\"",
        "\"click\"",
        "\"click\"",
        "\" \"",
        "\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\"",
        "\" \"",
        "\"char charCode key keyCode\"",
        "\" \"",
        "\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\"",
        "\" \"",
        "\"focusin\"",
        "\"focusout\"",
        "\"checkbox\"",
        "\"input\"",
        "\"a\"",
        "\"mouseover\"",
        "\"mouseout\"",
        "\"focusin\"",
        "\"focusout\"",
        "\"object\"",
        "\"string\"",
        "\"string\"",
        "\".\"",
        "\"object\"",
        "\"function\"",
        "\"string\"",
        "\" \"",
        "\"string\"",
        "\"string\"",
        "\"string\"",
        "\"string\"",
        "\"parentNode\"",
        "\"parentNode\"",
        "\"nextSibling\"",
        "\"previousSibling\"",
        "\"nextSibling\"",
        "\"previousSibling\"",
        "\"nextSibling\"",
        "\"previousSibling\"",
        "\"Until\"",
        "\"string\"",
        "\":not(\"",
        "\")\"",
        "\"string\"",
        "\"<select multiple='multiple'>\"",
        "\"</select>\"",
        "\"<table>\"",
        "\"</table>\"",
        "\"<table><colgroup>\"",
        "\"</colgroup></table>\"",
        "\"<table><tbody>\"",
        "\"</tbody></table>\"",
        "\"<table><tbody><tr>\"",
        "\"</tr></tbody></table>\"",
        "\"\"",
        "\"\"",
        "\"script\"",
        "\"\"",
        "\"string\"",
        "\"\"",
        "\"\"",
        "\"<$1></$2>\"",
        "\"string\"",
        "\"script\"",
        "\"script\"",
        "\"\"",
        "\"globalEval\"",
        "\"\"",
        "\"append\"",
        "\"prepend\"",
        "\"before\"",
        "\"after\"",
        "\"replaceWith\"",
        "\"script\"",
        "\"script\"",
        "\"object\"",
        "\"div\"",
        "\"\"",
        "\"\"",
        "\"<$1></$2>\"",
        "\"\"",
        "\"\"",
        "\"script\"",
        "\"\"",
        "\"GET\"",
        "\"script\"",
        "\"throws\"",
        "\"table\"",
        "\"tr\"",
        "\"tbody\"",
        "\"tbody\"",
        "\"type\"",
        "\"/\"",
        "\"type\"",
        "\"globalEval\"",
        "\"globalEval\"",
        "\"*\"",
        "\"*\"",
        "\"input\"",
        "\"input\"",
        "\"textarea\"",
        "\"body\"",
        "\"^(\"",
        "\")(.*)$\"",
        "\"i\"",
        "\"^(\"",
        "\")(?!px)[a-z%]+$\"",
        "\"i\"",
        "\"^([+-])=(\"",
        "\")\"",
        "\"i\"",
        "\"block\"",
        "\"absolute\"",
        "\"hidden\"",
        "\"block\"",
        "\"Top\"",
        "\"Right\"",
        "\"Bottom\"",
        "\"Left\"",
        "\"Webkit\"",
        "\"O\"",
        "\"Moz\"",
        "\"ms\"",
        "\"display\"",
        "\"none\"",
        "\"olddisplay\"",
        "\"none\"",
        "\"\"",
        "\"\"",
        "\"olddisplay\"",
        "\"none\"",
        "\"olddisplay\"",
        "\"display\"",
        "\"none\"",
        "\"\"",
        "\"\"",
        "\"none\"",
        "\"boolean\"",
        "\"opacity\"",
        "\"\"",
        "\"1\"",
        "\"columnCount\"",
        "\"fillOpacity\"",
        "\"fontWeight\"",
        "\"lineHeight\"",
        "\"opacity\"",
        "\"order\"",
        "\"orphans\"",
        "\"widows\"",
        "\"zIndex\"",
        "\"zoom\"",
        "\"float\"",
        "\"cssFloat\"",
        "\"string\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"px\"",
        "\"\"",
        "\"background\"",
        "\"inherit\"",
        "\"set\"",
        "\"get\"",
        "\"get\"",
        "\"normal\"",
        "\"\"",
        "\"\"",
        "\"px\"",
        "\"border\"",
        "\"content\"",
        "\"width\"",
        "\"margin\"",
        "\"content\"",
        "\"padding\"",
        "\"margin\"",
        "\"border\"",
        "\"Width\"",
        "\"padding\"",
        "\"padding\"",
        "\"border\"",
        "\"Width\"",
        "\"width\"",
        "\"boxSizing\"",
        "\"border-box\"",
        "\"border\"",
        "\"content\"",
        "\"px\"",
        "\"none\"",
        "\"<iframe frameborder='0' width='0' height='0'/>\"",
        "\"cssText\"",
        "\"display:block !important\"",
        "\"<!doctype html><html><body>\"",
        "\"display\"",
        "\"height\"",
        "\"width\"",
        "\"display\"",
        "\"boxSizing\"",
        "\"border-box\"",
        "\"display\"",
        "\"inline-block\"",
        "\"marginRight\"",
        "\"top\"",
        "\"left\"",
        "\"px\"",
        "\"\"",
        "\"\"",
        "\"Width\"",
        "\"string\"",
        "\" \"",
        "\"elements\"",
        "\":disabled\"",
        "\"\\r\\n\"",
        "\"\\r\\n\"",
        "\"\"",
        "\"=\"",
        "\"&\"",
        "\"+\"",
        "\"[\"",
        "\"object\"",
        "\"\"",
        "\"]\"",
        "\"object\"",
        "\"[\"",
        "\"]\"",
        "\"blur focus focusin focusout load resize scroll unload click dblclick \"",
        "\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \"",
        "\"change select submit keydown keypress keyup error contextmenu\"",
        "\" \"",
        "\"**\"",
        "\"**\"",
        "\"*/\"",
        "\"*\"",
        "\"a\"",
        "\"\"",
        "\"string\"",
        "\"*\"",
        "\"+\"",
        "\"*\"",
        "\"string\"",
        "\"*\"",
        "\"*\"",
        "\"string\"",
        "\" \"",
        "\"object\"",
        "\"POST\"",
        "\"html\"",
        "\"<div>\"",
        "\"ajaxStart\"",
        "\"ajaxStop\"",
        "\"ajaxComplete\"",
        "\"ajaxError\"",
        "\"ajaxSuccess\"",
        "\"ajaxSend\"",
        "\"GET\"",
        "\"application/x-www-form-urlencoded; charset=UTF-8\"",
        "\"*\"",
        "\"text/plain\"",
        "\"text/html\"",
        "\"application/xml, text/xml\"",
        "\"application/json, text/javascript\"",
        "\"responseXML\"",
        "\"responseText\"",
        "\"responseJSON\"",
        "\"* text\"",
        "\"text html\"",
        "\"text json\"",
        "\"text xml\"",
        "\"object\"",
        "\"once memory\"",
        "\"canceled\"",
        "\"\"",
        "\"\"",
        "\"//\"",
        "\"*\"",
        "\"\"",
        "\"http:\"",
        "\"80\"",
        "\"443\"",
        "\"http:\"",
        "\"80\"",
        "\"443\"",
        "\"string\"",
        "\"ajaxStart\"",
        "\"&\"",
        "\"?\"",
        "\"$1_=\"",
        "\"&\"",
        "\"?\"",
        "\"_=\"",
        "\"If-Modified-Since\"",
        "\"If-None-Match\"",
        "\"Content-Type\"",
        "\"Accept\"",
        "\"*\"",
        "\", \"",
        "\"; q=0.01\"",
        "\"\"",
        "\"*\"",
        "\"abort\"",
        "\"No Transport\"",
        "\"ajaxSend\"",
        "\"timeout\"",
        "\"\"",
        "\"Last-Modified\"",
        "\"etag\"",
        "\"HEAD\"",
        "\"nocontent\"",
        "\"notmodified\"",
        "\"error\"",
        "\"\"",
        "\"ajaxSuccess\"",
        "\"ajaxError\"",
        "\"ajaxComplete\"",
        "\"ajaxStop\"",
        "\"json\"",
        "\"script\"",
        "\"get\"",
        "\"post\"",
        "\"*\"",
        "\"Content-Type\"",
        "\" \"",
        "\"*\"",
        "\"*\"",
        "\" \"",
        "\"* \"",
        "\" \"",
        "\" \"",
        "\"* \"",
        "\"throws\"",
        "\"parsererror\"",
        "\"No conversion from \"",
        "\" to \"",
        "\"success\"",
        "\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"",
        "\"text script\"",
        "\"script\"",
        "\"GET\"",
        "\"script\"",
        "\"<script>\"",
        "\"load error\"",
        "\"error\"",
        "\"callback\"",
        "\"_\"",
        "\"json jsonp\"",
        "\"url\"",
        "\"string\"",
        "\"\"",
        "\"application/x-www-form-urlencoded\"",
        "\"data\"",
        "\"jsonp\"",
        "\"$1\"",
        "\"&\"",
        "\"?\"",
        "\"=\"",
        "\"script json\"",
        "\" was not called\"",
        "\"json\"",
        "\"script\"",
        "\"unload\"",
        "\"withCredentials\"",
        "\"X-Requested-With\"",
        "\"X-Requested-With\"",
        "\"XMLHttpRequest\"",
        "\"abort\"",
        "\"error\"",
        "\"string\"",
        "\"error\"",
        "\"abort\"",
        "\"^(?:([+-])=|)(\"",
        "\")([a-z%]*)$\"",
        "\"i\"",
        "\"*\"",
        "\"\"",
        "\"px\"",
        "\"px\"",
        "\".5\"",
        "\"*\"",
        "\"expand\"",
        "\"*\"",
        "\" \"",
        "\"fxshow\"",
        "\"fx\"",
        "\"fx\"",
        "\"height\"",
        "\"width\"",
        "\"display\"",
        "\"inline\"",
        "\"float\"",
        "\"none\"",
        "\"inline-block\"",
        "\"hidden\"",
        "\"toggle\"",
        "\"hide\"",
        "\"show\"",
        "\"show\"",
        "\"hidden\"",
        "\"fxshow\"",
        "\"fxshow\"",
        "\"width\"",
        "\"height\"",
        "\"swing\"",
        "\"\"",
        "\"px\"",
        "\"\"",
        "\"auto\"",
        "\"toggle\"",
        "\"show\"",
        "\"hide\"",
        "\"boolean\"",
        "\"opacity\"",
        "\"finish\"",
        "\"string\"",
        "\"fx\"",
        "\"queueHooks\"",
        "\"fx\"",
        "\"queue\"",
        "\"queueHooks\"",
        "\"margin\"",
        "\"padding\"",
        "\"show\"",
        "\"hide\"",
        "\"toggle\"",
        "\"show\"",
        "\"hide\"",
        "\"toggle\"",
        "\"object\"",
        "\"number\"",
        "\"fx\"",
        "\"position\"",
        "\"static\"",
        "\"relative\"",
        "\"top\"",
        "\"left\"",
        "\"absolute\"",
        "\"fixed\"",
        "\"auto\"",
        "\"using\"",
        "\"position\"",
        "\"fixed\"",
        "\"html\"",
        "\"borderTopWidth\"",
        "\"borderLeftWidth\"",
        "\"marginTop\"",
        "\"marginLeft\"",
        "\"html\"",
        "\"position\"",
        "\"static\"",
        "\"pageXOffset\"",
        "\"pageYOffset\"",
        "\"pageYOffset\"",
        "\"height\"",
        "\"width\"",
        "\"inner\"",
        "\"\"",
        "\"outer\"",
        "\"boolean\"",
        "\"margin\"",
        "\"border\"",
        "\"client\"",
        "\"scroll\"",
        "\"scroll\"",
        "\"offset\"",
        "\"offset\"",
        "\"client\"",
        "\"object\"",
        "\"object\"",
        "\"function\"",
        "\"jquery\"",
        "\"object\"",
        "\"object\"",
        "''",
        "' \\t\\x0B\\f\\xA0\\ufeff'",
        "'\\n\\r\\u2028\\u2029'",
        "'\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000'",
        "'^['",
        "']*0+(?=.$)'",
        "'Array'",
        "'Boolean'",
        "'Date'",
        "'Error'",
        "'Function'",
        "'Math'",
        "'Number'",
        "'Object'",
        "'RegExp'",
        "'String'",
        "'_'",
        "'attachEvent'",
        "'clearTimeout'",
        "'isFinite'",
        "'isNaN'",
        "'parseInt'",
        "'setImmediate'",
        "'setTimeout'",
        "'constructor'",
        "'hasOwnProperty'",
        "'isPrototypeOf'",
        "'propertyIsEnumerable'",
        "'toLocaleString'",
        "'toString'",
        "'valueOf'",
        "'[object Arguments]'",
        "'[object Array]'",
        "'[object Boolean]'",
        "'[object Date]'",
        "'[object Error]'",
        "'[object Function]'",
        "'[object Number]'",
        "'[object Object]'",
        "'[object RegExp]'",
        "'[object String]'",
        "'boolean'",
        "'function'",
        "'object'",
        "'number'",
        "'string'",
        "'undefined'",
        "'\\\\'",
        "'\\\\'",
        "\"'\"",
        "\"'\"",
        "'\\n'",
        "'n'",
        "'\\r'",
        "'r'",
        "'\\t'",
        "'t'",
        "'\\u2028'",
        "'u2028'",
        "'\\u2029'",
        "'u2029'",
        "'boolean'",
        "'number'",
        "'string'",
        "'object'",
        "'number'",
        "'object'",
        "'boolean'",
        "'number'",
        "'string'",
        "'object'",
        "'number'",
        "'object'",
        "'undefined'",
        "'undefined'",
        "'false'",
        "'null'",
        "'true'",
        "'undefined'",
        "'\\\\'",
        "'args'",
        "''",
        "'array'",
        "'bottom'",
        "''",
        "'cache'",
        "'criteria'",
        "'false'",
        "'firstArg'",
        "''",
        "'index'",
        "'init'",
        "''",
        "'leading'",
        "'loop'",
        "''",
        "'maxWait'",
        "'null'",
        "'number'",
        "'object'",
        "'push'",
        "'shadowedProps'",
        "'string'",
        "'support'",
        "'top'",
        "''",
        "'trailing'",
        "'true'",
        "'undefined'",
        "'useHas'",
        "'useKeys'",
        "'value'",
        "'function'",
        "''",
        "'string'",
        "'undefined'",
        "'^'",
        "'\\\\$&'",
        "'.+?'",
        "'$'",
        "'constructor'",
        "'toLocaleString'",
        "'toString'",
        "'valueOf'",
        "'constructor'",
        "'toString'",
        "'valueOf'",
        "'constructor'",
        "'toString'",
        "'constructor'",
        "'object'",
        "'__wrapped__'",
        "'0'",
        "'length'",
        "'valueOf'",
        "'y'",
        "'message'",
        "'name'",
        "'prototype'",
        "'x'",
        "'x'",
        "'x'",
        "'xx'",
        "'toString'",
        "''",
        "'escape'",
        "'evaluate'",
        "'interpolate'",
        "'variable'",
        "''",
        "'imports'",
        "'_'",
        "'var index, iterable = <%= firstArg %>, '",
        "'result = <%= init %>;\\n'",
        "'if (!iterable) return result;\\n'",
        "'<%= top %>;'",
        "'<% if (array) { %>\\n'",
        "'var length = iterable.length; index = -1;\\n'",
        "'if (<%= array %>) {'",
        "'  <% if (support.unindexedChars) { %>\\n'",
        "'  if (isString(iterable)) {\\n'",
        "\"    iterable = iterable.split('')\\n\"",
        "'  }'",
        "'  <% } %>\\n'",
        "'  while (++index < length) {\\n'",
        "'    <%= loop %>;\\n'",
        "'  }\\n'",
        "'}\\n'",
        "'else {'",
        "'  <% } else if (support.nonEnumArgs) { %>\\n'",
        "'  var length = iterable.length; index = -1;\\n'",
        "'  if (length && isArguments(iterable)) {\\n'",
        "'    while (++index < length) {\\n'",
        "\"      index += '';\\n\"",
        "'      <%= loop %>;\\n'",
        "'    }\\n'",
        "'  } else {'",
        "'  <% } %>'",
        "'  <% if (support.enumPrototypes) { %>\\n'",
        "\"  var skipProto = typeof iterable == 'function';\\n\"",
        "'  <% } %>'",
        "'  <% if (support.enumErrorProps) { %>\\n'",
        "'  var skipErrorProps = iterable === errorProto || iterable instanceof Error;\\n'",
        "'  <% } %>'",
        "'  <%'",
        "'    var conditions = [];'",
        "'    if (support.enumPrototypes) { conditions.push(\\'!(skipProto && index == \"prototype\")\\'); }'",
        "'    if (support.enumErrorProps)  { conditions.push(\\'!(skipErrorProps && (index == \"message\" || index == \"name\"))\\'); }'",
        "'  %>'",
        "'  <% if (useHas && useKeys) { %>\\n'",
        "'  var ownIndex = -1,\\n'",
        "'      ownProps = objectTypes[typeof iterable] && keys(iterable),\\n'",
        "'      length = ownProps ? ownProps.length : 0;\\n\\n'",
        "'  while (++ownIndex < length) {\\n'",
        "'    index = ownProps[ownIndex];\\n<%'",
        "\"    if (conditions.length) { %>    if (<%= conditions.join(' && ') %>) {\\n  <% } %>\"",
        "'    <%= loop %>;'",
        "'    <% if (conditions.length) { %>\\n    }<% } %>\\n'",
        "'  }'",
        "'  <% } else { %>\\n'",
        "'  for (index in iterable) {\\n<%'",
        "'    if (useHas) { conditions.push(\"hasOwnProperty.call(iterable, index)\"); }'",
        "\"    if (conditions.length) { %>    if (<%= conditions.join(' && ') %>) {\\n  <% } %>\"",
        "'    <%= loop %>;'",
        "'    <% if (conditions.length) { %>\\n    }<% } %>\\n'",
        "'  }'",
        "'    <% if (support.nonEnumShadows) { %>\\n\\n'",
        "'  if (iterable !== objectProto) {\\n'",
        "\"    var ctor = iterable.constructor,\\n\"",
        "'        isProto = iterable === (ctor && ctor.prototype),\\n'",
        "'        className = iterable === stringProto ? stringClass : iterable === errorProto ? errorClass : toString.call(iterable),\\n'",
        "'        nonEnum = nonEnumProps[className];\\n'",
        "'      <% for (k = 0; k < 7; k++) { %>\\n'",
        "\"    index = '<%= shadowedProps[k] %>';\\n\"",
        "'    if ((!(isProto && nonEnum[index]) && hasOwnProperty.call(iterable, index))<%'",
        "'        if (!useHas) { %> || (!nonEnum[index] && iterable[index] !== objectProto[index])<% }'",
        "'      %>) {\\n'",
        "'      <%= loop %>;\\n'",
        "'    }'",
        "'      <% } %>\\n'",
        "'  }'",
        "'    <% } %>'",
        "'  <% } %>'",
        "'  <% if (array || support.nonEnumArgs) { %>\\n}<% } %>\\n'",
        "'<%= bottom %>;\\n'",
        "'return result'",
        "'args'",
        "'object, source, guard'",
        "'top'",
        "'var args = arguments,\\n'",
        "'    argsIndex = 0,\\n'",
        "\"    argsLength = typeof guard == 'number' ? 2 : args.length;\\n\"",
        "'while (++argsIndex < argsLength) {\\n'",
        "'  iterable = args[argsIndex];\\n'",
        "'  if (iterable && objectTypes[typeof iterable]) {'",
        "'loop'",
        "\"if (typeof result[index] == 'undefined') result[index] = iterable[index]\"",
        "'bottom'",
        "'  }\\n}'",
        "'args'",
        "'collection, callback, thisArg'",
        "'top'",
        "\"callback = callback && typeof thisArg == 'undefined' ? callback : lodash.createCallback(callback, thisArg)\"",
        "'array'",
        "\"typeof length == 'number'\"",
        "'loop'",
        "'if (callback(iterable[index], index, collection) === false) return result'",
        "'top'",
        "'if (!objectTypes[typeof iterable]) return result;\\n'",
        "'array'",
        "''",
        "'iterable'",
        "'errorClass, errorProto, hasOwnProperty, isArguments, isArray, '",
        "'isString, keys, lodash, objectProto, objectTypes, nonEnumProps, '",
        "'stringClass, stringProto, toString'",
        "'return function('",
        "') {\\n'",
        "'\\n}'",
        "'boolean'",
        "'callee'",
        "'object'",
        "'args'",
        "'object'",
        "'init'",
        "'[]'",
        "'top'",
        "'if (!(objectTypes[typeof object])) return result'",
        "'loop'",
        "'result.push(index)'",
        "'function'",
        "'&'",
        "'&amp;'",
        "'<'",
        "'&lt;'",
        "'>'",
        "'&gt;'",
        "'\"'",
        "'&quot;'",
        "\"'\"",
        "'&#39;'",
        "'top'",
        "';'",
        "';\\n'",
        "\"if (argsLength > 3 && typeof args[argsLength - 2] == 'function') {\\n\"",
        "'  var callback = lodash.createCallback(args[--argsLength - 1], args[argsLength--], 2);\\n'",
        "\"} else if (argsLength > 2 && typeof args[argsLength - 1] == 'function') {\\n\"",
        "'  callback = args[--argsLength];\\n'",
        "'}'",
        "'loop'",
        "'result[index] = callback ? callback(result[index], iterable[index]) : iterable[index]'",
        "'boolean'",
        "'function'",
        "'undefined'",
        "'undefined'",
        "'index'",
        "'input'",
        "'useHas'",
        "'object'",
        "'number'",
        "'function'",
        "'undefined'",
        "'function'",
        "'object'",
        "'function'",
        "'object'",
        "'__wrapped__ '",
        "'__wrapped__'",
        "'function'",
        "'function'",
        "'number'",
        "'function'",
        "'string'",
        "'undefined'",
        "'number'",
        "'function'",
        "'function'",
        "'undefined'",
        "'undefined'",
        "'undefined'",
        "'function'",
        "'function'",
        "''",
        "'number'",
        "'undefined'",
        "'function'",
        "'number'",
        "'number'",
        "'number'",
        "''",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "''",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "'number'",
        "'length'",
        "'function'",
        "'object'",
        "'undefined'",
        "'maxWait'",
        "'trailing'",
        "'function'",
        "'leading'",
        "'trailing'",
        "''",
        "'object'",
        "'08'",
        "''",
        "'1e-'",
        "''",
        "''",
        "'_'",
        "\"__p += '\"",
        "'|'",
        "'|'",
        "'|'",
        "'|$'",
        "'g'",
        "\"' +\\n__e(\"",
        "\") +\\n'\"",
        "\"';\\n\"",
        "\";\\n__p += '\"",
        "\"' +\\n((__t = (\"",
        "\")) == null ? '' : __t) +\\n'\"",
        "\"';\\n\"",
        "'obj'",
        "'with ('",
        "') {\\n'",
        "'\\n}\\n'",
        "''",
        "'$1'",
        "'$1;'",
        "'function('",
        "') {\\n'",
        "''",
        "' || ('",
        "' = {});\\n'",
        "\"var __t, __p = '', __e = _.escape\"",
        "', __j = Array.prototype.join;\\n'",
        "\"function print() { __p += __j.call(arguments, '') }\\n\"",
        "';\\n'",
        "'return __p\\n}'",
        "'\\n/*\\n//@ sourceURL='",
        "'/lodash/template/source['",
        "']'",
        "'\\n*/'",
        "'return '",
        "''",
        "''",
        "'function'",
        "'1.3.1'",
        "'join'",
        "'pop'",
        "'shift'",
        "'push'",
        "'reverse'",
        "'sort'",
        "'unshift'",
        "'concat'",
        "'slice'",
        "'splice'",
        "'pop'",
        "'shift'",
        "'splice'",
        "'splice'",
        "'function'",
        "'object'",
        "\"object\"",
        "\"function\"",
        "'[object Array]'",
        "'function'",
        "\"\\\\$&\"",
        "\"&\"",
        "\"&amp;\"",
        "\"<\"",
        "\"&lt;\"",
        "\">\"",
        "\"&gt;\"",
        "'\"'",
        "'&quot;'",
        "\"'\"",
        "'&#39;'",
        "\"/\"",
        "'&#x2F;'",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "'.'",
        "'.'",
        "'.'",
        "''",
        "'#'",
        "'object'",
        "'string'",
        "'^'",
        "'>'",
        "'&'",
        "'name'",
        "'text'",
        "'#'",
        "'^'",
        "'/'",
        "'text'",
        "'text'",
        "\"\\\\s*\"",
        "\"\\\\s*\"",
        "''",
        "'string'",
        "'Invalid tags: '",
        "', '",
        "'text'",
        "'\\n'",
        "'name'",
        "'='",
        "'{'",
        "'\\\\s*'",
        "'}'",
        "'&'",
        "'Unclosed tag at '",
        "'#'",
        "'^'",
        "'/'",
        "'Unopened section \"'",
        "'\" at '",
        "'Unclosed section \"'",
        "'\" at '",
        "'name'",
        "'{'",
        "'&'",
        "'='",
        "'Invalid tags at '",
        "': '",
        "', '",
        "'Unclosed section \"'",
        "'\" at '",
        "\"mustache.js\"",
        "\"0.7.3\"",
        "\"{{\"",
        "\"}}\"",
        "'function'",
        "'underscore'",
        "'jquery'",
        "'exports'",
        "'undefined'",
        "'underscore'",
        "'1.1.2'",
        "'on'",
        "'once'",
        "'off'",
        "'trigger'",
        "'object'",
        "'object'",
        "'on'",
        "'once'",
        "'l'",
        "'object'",
        "'c'",
        "'defaults'",
        "'id'",
        "'object'",
        "'change:'",
        "'change'",
        "'sync'",
        "'read'",
        "'object'",
        "'sync'",
        "'create'",
        "'patch'",
        "'update'",
        "'patch'",
        "'destroy'",
        "'sync'",
        "'delete'",
        "'urlRoot'",
        "'url'",
        "'$1/'",
        "'invalid'",
        "'keys'",
        "'values'",
        "'pairs'",
        "'invert'",
        "'pick'",
        "'omit'",
        "'remove'",
        "'id'",
        "'add'",
        "'sort'",
        "'reset'",
        "'find'",
        "'filter'",
        "'Cannot sort a set without a comparator'",
        "'sort'",
        "'get'",
        "'reset'",
        "'set'",
        "'sync'",
        "'read'",
        "'invalid'",
        "'all'",
        "'all'",
        "'add'",
        "'remove'",
        "'destroy'",
        "'change:'",
        "'forEach'",
        "'each'",
        "'map'",
        "'collect'",
        "'reduce'",
        "'foldl'",
        "'inject'",
        "'reduceRight'",
        "'foldr'",
        "'find'",
        "'detect'",
        "'filter'",
        "'select'",
        "'reject'",
        "'every'",
        "'all'",
        "'some'",
        "'any'",
        "'include'",
        "'contains'",
        "'invoke'",
        "'max'",
        "'min'",
        "'toArray'",
        "'size'",
        "'first'",
        "'head'",
        "'take'",
        "'initial'",
        "'rest'",
        "'tail'",
        "'drop'",
        "'last'",
        "'without'",
        "'difference'",
        "'indexOf'",
        "'shuffle'",
        "'lastIndexOf'",
        "'isEmpty'",
        "'chain'",
        "'sample'",
        "'groupBy'",
        "'countBy'",
        "'sortBy'",
        "'indexBy'",
        "'view'",
        "'model'",
        "'collection'",
        "'el'",
        "'id'",
        "'attributes'",
        "'className'",
        "'tagName'",
        "'events'",
        "'div'",
        "'events'",
        "'.delegateEvents'",
        "''",
        "'.delegateEvents'",
        "'attributes'",
        "'id'",
        "'class'",
        "'className'",
        "'<'",
        "'tagName'",
        "'>'",
        "'el'",
        "'json'",
        "'url'",
        "'create'",
        "'update'",
        "'patch'",
        "'application/json'",
        "'application/x-www-form-urlencoded'",
        "'PUT'",
        "'DELETE'",
        "'PATCH'",
        "'POST'",
        "'X-HTTP-Method-Override'",
        "'GET'",
        "'PATCH'",
        "\"Microsoft.XMLHTTP\"",
        "'request'",
        "'undefined'",
        "'create'",
        "'POST'",
        "'update'",
        "'PUT'",
        "'patch'",
        "'PATCH'",
        "'delete'",
        "'DELETE'",
        "'read'",
        "'GET'",
        "''",
        "'route:'",
        "'route'",
        "'route'",
        "'routes'",
        "'\\\\$&'",
        "'(?:$1)?'",
        "'([^/?]+)'",
        "'([^?]*?)'",
        "'^'",
        "'(?:\\\\?([\\\\s\\\\S]*))?$'",
        "'checkUrl'",
        "'undefined'",
        "'$&/'",
        "''",
        "''",
        "''",
        "\"Backbone.history has already been started\"",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'<iframe src=\"javascript:0\" tabindex=\"-1\">'",
        "'body'",
        "'popstate'",
        "'onhashchange'",
        "'hashchange'",
        "'#'",
        "''",
        "'popstate'",
        "'hashchange'",
        "''",
        "''",
        "''",
        "'/'",
        "'replaceState'",
        "'pushState'",
        "''",
        "'#'",
        "'#'",
        "'constructor'",
        "'A \"url\" property or function must be specified'",
        "'error'",
        "'forEach'",
        "'each'",
        "'map'",
        "'find'",
        "'detect'",
        "'filter'",
        "'select'",
        "'reject'",
        "'every'",
        "'all'",
        "'some'",
        "'any'",
        "'include'",
        "'contains'",
        "'invoke'",
        "'toArray'",
        "'first'",
        "'initial'",
        "'rest'",
        "'last'",
        "'without'",
        "'isEmpty'",
        "'pluck'",
        "\"use strict\"",
        "\"use strict\"",
        "\"handler:add\"",
        "\"Handler not found for '\"",
        "\"'\"",
        "\"use strict\"",
        "\"use strict\"",
        "\"handler:add\"",
        "\"use strict\"",
        "\"use strict\"",
        "\"use strict\"",
        "'Error'",
        "'on'",
        "\"dom:refresh\"",
        "\"show\"",
        "\"render\"",
        "\"use strict\"",
        "\"Method '\"",
        "\"' was configured as an event handler, but does not exist.\"",
        "\"close\"",
        "\"el\"",
        "\"An 'el' must be specified for a region.\"",
        "\"NoElError\"",
        "\"string\"",
        "\"string\"",
        "\"undefined\"",
        "\"function\"",
        "\"Region must be specified as a Region type, a selector string or an object with selector property\"",
        "\"show\"",
        "\"show\"",
        "\"close\"",
        "\"string\"",
        "\"region:add\"",
        "\"region:remove\"",
        "'forEach'",
        "'each'",
        "'map'",
        "'find'",
        "'detect'",
        "'filter'",
        "'select'",
        "'reject'",
        "'every'",
        "'all'",
        "'some'",
        "'any'",
        "'include'",
        "'contains'",
        "'invoke'",
        "'toArray'",
        "'first'",
        "'initial'",
        "'rest'",
        "'last'",
        "'without'",
        "'isEmpty'",
        "'pluck'",
        "\"Could not find template: '\"",
        "\"'\"",
        "\"NoTemplateError\"",
        "\"Cannot render the template since it's false, null or undefined.\"",
        "\"TemplateNotFoundError\"",
        "\"function\"",
        "\"render\"",
        "\"show\"",
        "\"template\"",
        "\"templateHelpers\"",
        "\"triggers\"",
        "\"modelEvents\"",
        "\"collectionEvents\"",
        "\"modelEvents\"",
        "\"collectionEvents\"",
        "\"before:close\"",
        "\"close\"",
        "\"_uiBindings\"",
        "\"before:render\"",
        "\"item:before:render\"",
        "\"render\"",
        "\"item:rendered\"",
        "'item:before:close'",
        "'item:closed'",
        "\"itemview\"",
        "\"add\"",
        "\"remove\"",
        "\"reset\"",
        "\"show\"",
        "\"before:render\"",
        "\"collection:before:render\"",
        "\"render\"",
        "\"collection:rendered\"",
        "\"emptyView\"",
        "\"itemView\"",
        "\"An `itemView` must be specified\"",
        "\"NoItemViewError\"",
        "\"itemViewOptions\"",
        "\"before:item:added\"",
        "\"show\"",
        "\"after:item:added\"",
        "\"itemViewEventPrefix\"",
        "\"all\"",
        "\":\"",
        "\"item:removed\"",
        "\"collection:before:close\"",
        "\"collection:closed\"",
        "'render'",
        "\"add\"",
        "\"remove\"",
        "\"reset\"",
        "\"itemView\"",
        "\"An `itemView` must be specified\"",
        "\"NoItemViewError\"",
        "\"composite:model:rendered\"",
        "\"composite:rendered\"",
        "\"composite:collection:rendered\"",
        "\"$itemViewContainer\"",
        "\"itemViewContainer\"",
        "\"The specified `itemViewContainer` was not found: \"",
        "\"ItemViewContainerMissingError\"",
        "\"regionType\"",
        "\"region:add\"",
        "\"region:add\"",
        "\"region:remove\"",
        "\"region:remove\"",
        "\"appRoutes\"",
        "\"controller\"",
        "\"Method '\"",
        "\"' was not found on the controller\"",
        "\"initialize:before\"",
        "\"initialize:after\"",
        "\"start\"",
        "\"region:add\"",
        "\"region:remove\"",
        "\"before:start\"",
        "\"start\"",
        "\"before:stop\"",
        "\"stop\"",
        "\".\"",
        "'use strict'",
        "'keyup'",
        "'playing'",
        "'position'",
        "'mousemove touchmove'",
        "'mixer-mousemove'",
        "'touchmove'",
        "'mouseup touchend'",
        "'mixer-mouseup'",
        "'loaded'",
        "'ready'",
        "'ready'",
        "'.needle.left'",
        "'.needle.right'",
        "'ontouchstart'",
        "'anim-tick'",
        "'dBFSLeft'",
        "'dBFSRight'",
        "'transform'",
        "'rotate('",
        "'deg)'",
        "'transform'",
        "'rotate('",
        "'deg)'",
        "'http://api.myjson.com/bins/'",
        "'GET'",
        "'json'",
        "'Loader'",
        "'use strict'",
        "'#loader'",
        "'.loader-bar'",
        "'loaded'",
        "'ready'",
        "'width'",
        "'%'",
        "'util'",
        "'use strict'",
        "'GET'",
        "'arraybuffer'",
        "'load'",
        "''",
        "'0'",
        "'0'",
        "'0'",
        "':'",
        "':'",
        "'Models'",
        "'use strict'",
        "'mix.json'",
        "'Mix'",
        "'solo'",
        "'unsolo'",
        "'anim-tick'",
        "'change:gain'",
        "'gain'",
        "'position'",
        "'tracks'",
        "'Cannot play before App.ready'",
        "'number'",
        "'position'",
        "'minTime'",
        "'tracks'",
        "'tracks'",
        "'playing'",
        "'mix-pause'",
        "'playing'",
        "'startTime'",
        "'position'",
        "'playing'",
        "'maxTime'",
        "'duration'",
        "'position'",
        "'tracks'",
        "'tracks'",
        "'tracks'",
        "'tracks'",
        "'playing'",
        "'dBFSLeft'",
        "'dBFSRight'",
        "'tracks'",
        "'binURI'",
        "'PUT'",
        "'POST'",
        "'http://api.myjson.com/bins'",
        "'application/json; charset=utf-8'",
        "'json'",
        "'binURI'",
        "'/'",
        "'Models'",
        "'use strict'",
        "'Track'",
        "'change:gain'",
        "'change:pan'",
        "'change:gain change:pan change:soloed change:muted change:afl'",
        "'muted'",
        "'_muted'",
        "'soloed'",
        "'gain'",
        "'pan'",
        "'pan'",
        "'path'",
        "'duration'",
        "'loaded'",
        "'muted'",
        "'soloed'",
        "'muted'",
        "'_muted'",
        "'_muted'",
        "'soloed'",
        "'solo'",
        "'soloed'",
        "'unsolo'",
        "'playing'",
        "'dBFS'",
        "'dBFS'",
        "'Collections'",
        "'use strict'",
        "'tracks'",
        "'duration'",
        "'Views'",
        "'use strict'",
        "'#tmpl-track'",
        "'mousedown .fader'",
        "'enableDrag'",
        "'touchstart .fader'",
        "'enableDrag'",
        "'dblclick .fader'",
        "'resetFader'",
        "'mousedown .panner'",
        "'enableDrag'",
        "'touchstart .panner'",
        "'enableDrag'",
        "'dblclick .panner'",
        "'resetPanner'",
        "'click .mute'",
        "'mute'",
        "'touchstart .mute'",
        "'mute'",
        "'click .solo'",
        "'solo'",
        "'touchstart .solo'",
        "'solo'",
        "'click .afl'",
        "'afl'",
        "'touchstart .afl'",
        "'afl'",
        "'.meter'",
        "'change:muted'",
        "'render'",
        "'change:soloed'",
        "'render'",
        "'change:afl'",
        "'render'",
        "'mixer-mouseup'",
        "'mixer-mousemove'",
        "'anim-tick'",
        "'mix-pause'",
        "'channel'",
        "'canvas'",
        "'2d'",
        "'hsl('",
        "', 100%, 40%)'",
        "'hsl('",
        "', 100%, 40%)'",
        "'active'",
        "''",
        "'active'",
        "''",
        "''",
        "'active'",
        "'fader'",
        "'top'",
        "'panner'",
        "'touchstart'",
        "'touchmove'",
        "'top'",
        "'px'",
        "'gain'",
        "'touchmove'",
        "'transform'",
        "'rotate('",
        "'deg)'",
        "'pan'",
        "'.fader'",
        "'top'",
        "'px'",
        "'gain'",
        "'.panner'",
        "'transform'",
        "'rotate(0deg)'",
        "'pan'",
        "'ontouchstart'",
        "'click'",
        "'muted'",
        "'ontouchstart'",
        "'click'",
        "'soloed'",
        "'ontouchstart'",
        "'click'",
        "'afl'",
        "'afl'",
        "'string'",
        "'2d'",
        "'rgba(238,119,85,'",
        "')'",
        "'Views'",
        "'use strict'",
        "'#mixer'",
        "'anim-tick'",
        "'visibility'",
        "'visible'",
        "'Views'",
        "'use strict'",
        "'#tmpl-controls'",
        "'#controls'",
        "'click .play'",
        "'toggle'",
        "'touchstart .play'",
        "'toggle'",
        "'click .start'",
        "'start'",
        "'touchstart .start'",
        "'start'",
        "'click .rw'",
        "'rewind'",
        "'touchstart .rw'",
        "'rewind'",
        "'click .ff'",
        "'fastForward'",
        "'touchstart .ff'",
        "'fastForward'",
        "'.clock'",
        "'change:playing'",
        "'render'",
        "'anim-tick'",
        "''",
        "'paused'",
        "'ontouchstart'",
        "'click'",
        "'playing'",
        "'ontouchstart'",
        "'click'",
        "'playing'",
        "'ontouchstart'",
        "'click'",
        "'position'",
        "'playing'",
        "'position'",
        "'ontouchstart'",
        "'click'",
        "'position'",
        "'playing'",
        "'position'",
        "'2d'",
        "'8'",
        "'8'",
        "':'",
        "'8'",
        "'8'",
        "':'",
        "'8'",
        "'8'",
        "''",
        "'76px \"digital-7\"'",
        "'right'",
        "'hsla(215, 77%, 76%, 0.085)'",
        "':'",
        "'hsl(215, 77%, 76%)'",
        "':'"
    ],
    "variables": [
        "rootjQuery",
        "readyList",
        "core_strundefined",
        "location",
        "docElem",
        "_jQuery",
        "_$",
        "class2type",
        "core_deletedIds",
        "core_version",
        "core_concat",
        "core_push",
        "core_slice",
        "core_indexOf",
        "core_toString",
        "core_hasOwn",
        "core_trim",
        "jQuery",
        "core_pnum",
        "core_rnotwhite",
        "rquickExpr",
        "rsingleTag",
        "rmsPrefix",
        "rdashAlpha",
        "fcamelCase",
        "completed",
        "match",
        "elem",
        "ret",
        "len",
        "j",
        "options",
        "name",
        "src",
        "copy",
        "copyIsArray",
        "clone",
        "target",
        "i",
        "length",
        "deep",
        "name",
        "parsed",
        "scripts",
        "xml",
        "tmp",
        "script",
        "indirect",
        "eval",
        "value",
        "i",
        "length",
        "isArray",
        "ret",
        "l",
        "i",
        "j",
        "retVal",
        "ret",
        "i",
        "length",
        "value",
        "i",
        "length",
        "isArray",
        "ret",
        "tmp",
        "args",
        "proxy",
        "i",
        "length",
        "bulk",
        "ret",
        "name",
        "old",
        "length",
        "i",
        "support",
        "cachedruns",
        "Expr",
        "getText",
        "isXML",
        "compile",
        "outermostContext",
        "sortInput",
        "setDocument",
        "docElem",
        "documentIsHTML",
        "rbuggyQSA",
        "rbuggyMatches",
        "matches",
        "contains",
        "expando",
        "preferredDoc",
        "dirruns",
        "done",
        "classCache",
        "tokenCache",
        "compilerCache",
        "hasDuplicate",
        "sortOrder",
        "strundefined",
        "MAX_NEGATIVE",
        "hasOwn",
        "arr",
        "pop",
        "push_native",
        "push",
        "indexOf",
        "i",
        "len",
        "booleans",
        "whitespace",
        "characterEncoding",
        "identifier",
        "attributes",
        "pseudos",
        "rtrim",
        "rcomma",
        "rcombinators",
        "rsibling",
        "rattributeQuotes",
        "rpseudo",
        "ridentifier",
        "matchExpr",
        "rnative",
        "rquickExpr",
        "rinputs",
        "rheader",
        "rescape",
        "runescape",
        "funescape",
        "high",
        "j",
        "i",
        "match",
        "elem",
        "m",
        "nodeType",
        "i",
        "groups",
        "old",
        "nid",
        "newContext",
        "newSelector",
        "keys",
        "div",
        "arr",
        "i",
        "cur",
        "diff",
        "name",
        "name",
        "j",
        "matchIndexes",
        "i",
        "documentElement",
        "doc",
        "parent",
        "m",
        "attrId",
        "attrId",
        "node",
        "elem",
        "tmp",
        "i",
        "results",
        "input",
        "adown",
        "bup",
        "compare",
        "cur",
        "i",
        "aup",
        "bup",
        "ap",
        "bp",
        "ret",
        "fn",
        "val",
        "elem",
        "duplicates",
        "j",
        "i",
        "node",
        "ret",
        "i",
        "nodeType",
        "excess",
        "unquoted",
        "nodeName",
        "pattern",
        "result",
        "simple",
        "forward",
        "ofType",
        "cache",
        "outerCache",
        "node",
        "diff",
        "nodeIndex",
        "start",
        "dir",
        "parent",
        "name",
        "useCache",
        "args",
        "fn",
        "idx",
        "matched",
        "i",
        "input",
        "results",
        "matcher",
        "elem",
        "unmatched",
        "i",
        "elemLang",
        "hash",
        "nodeName",
        "name",
        "attr",
        "i",
        "i",
        "i",
        "i",
        "matched",
        "match",
        "tokens",
        "soFar",
        "groups",
        "preFilters",
        "cached",
        "i",
        "len",
        "selector",
        "dir",
        "checkNonElements",
        "doneName",
        "data",
        "cache",
        "outerCache",
        "dirkey",
        "i",
        "elem",
        "newUnmatched",
        "i",
        "len",
        "mapped",
        "temp",
        "i",
        "elem",
        "preMap",
        "postMap",
        "preexisting",
        "elems",
        "matcherIn",
        "matcherOut",
        "checkContext",
        "matcher",
        "j",
        "len",
        "leadingRelative",
        "implicitRelative",
        "i",
        "matchContext",
        "matchAnyContext",
        "matchers",
        "matcherCachedRuns",
        "bySet",
        "byElement",
        "superMatcher",
        "elem",
        "j",
        "matcher",
        "setMatched",
        "matchedCount",
        "i",
        "unmatched",
        "outermost",
        "contextBackup",
        "outermostContext",
        "elems",
        "dirrunsUnique",
        "i",
        "setMatchers",
        "elementMatchers",
        "cached",
        "i",
        "len",
        "i",
        "tokens",
        "token",
        "find",
        "match",
        "val",
        "optionsCache",
        "memory",
        "fired",
        "firing",
        "firingStart",
        "firingLength",
        "firingIndex",
        "stack",
        "fire",
        "start",
        "index",
        "tuples",
        "state",
        "promise",
        "fns",
        "arguments",
        "action",
        "fn",
        "returned",
        "deferred",
        "stateString",
        "i",
        "resolveValues",
        "length",
        "remaining",
        "deferred",
        "updateFunc",
        "progressValues",
        "progressContexts",
        "resolveContexts",
        "input",
        "fragment",
        "div",
        "select",
        "opt",
        "container",
        "marginDiv",
        "divReset",
        "body",
        "data_user",
        "data_priv",
        "rbrace",
        "rmultiDash",
        "descriptor",
        "unlock",
        "prop",
        "unlock",
        "cache",
        "cache",
        "stored",
        "i",
        "name",
        "camel",
        "unlock",
        "cache",
        "attrs",
        "name",
        "elem",
        "i",
        "data",
        "data",
        "camelKey",
        "data",
        "name",
        "queue",
        "queue",
        "startLength",
        "fn",
        "hooks",
        "next",
        "key",
        "setter",
        "queue",
        "timeout",
        "tmp",
        "count",
        "defer",
        "elements",
        "i",
        "resolve",
        "nodeHook",
        "boolHook",
        "rclass",
        "rreturn",
        "rfocusable",
        "classes",
        "elem",
        "cur",
        "clazz",
        "j",
        "i",
        "len",
        "proceed",
        "classes",
        "elem",
        "cur",
        "clazz",
        "j",
        "i",
        "len",
        "proceed",
        "className",
        "i",
        "classNames",
        "className",
        "i",
        "l",
        "hooks",
        "ret",
        "isFunction",
        "elem",
        "val",
        "val",
        "value",
        "option",
        "options",
        "index",
        "one",
        "values",
        "max",
        "i",
        "optionSet",
        "option",
        "options",
        "values",
        "i",
        "hooks",
        "ret",
        "nType",
        "name",
        "propName",
        "i",
        "attrNames",
        "val",
        "ret",
        "hooks",
        "notxml",
        "nType",
        "getter",
        "fn",
        "ret",
        "parent",
        "rkeyEvent",
        "rmouseEvent",
        "rfocusMorph",
        "rtypenamespace",
        "handleObjIn",
        "eventHandle",
        "tmp",
        "events",
        "t",
        "handleObj",
        "special",
        "handlers",
        "namespaces",
        "origType",
        "elemData",
        "j",
        "origCount",
        "tmp",
        "events",
        "t",
        "handleObj",
        "special",
        "handlers",
        "namespaces",
        "origType",
        "elemData",
        "i",
        "cur",
        "tmp",
        "bubbleType",
        "ontype",
        "handle",
        "special",
        "eventPath",
        "namespaces",
        "i",
        "j",
        "ret",
        "matched",
        "handleObj",
        "handlerQueue",
        "args",
        "handlers",
        "special",
        "i",
        "matches",
        "sel",
        "handleObj",
        "handlerQueue",
        "delegateCount",
        "cur",
        "eventDoc",
        "doc",
        "body",
        "button",
        "i",
        "prop",
        "copy",
        "originalEvent",
        "fixHook",
        "e",
        "e",
        "e",
        "ret",
        "target",
        "related",
        "handleObj",
        "attaches",
        "handler",
        "origFn",
        "handleObj",
        "elem",
        "isSimple",
        "rparentsprev",
        "rneedsContext",
        "guaranteedUnique",
        "i",
        "ret",
        "len",
        "targets",
        "l",
        "i",
        "cur",
        "i",
        "l",
        "matched",
        "pos",
        "all",
        "parent",
        "matched",
        "elem",
        "matched",
        "truncate",
        "matched",
        "rxhtmlTag",
        "rtagName",
        "rhtml",
        "rnoInnerhtml",
        "manipulation_rcheckableType",
        "rchecked",
        "rscriptType",
        "rscriptTypeMasked",
        "rcleanScript",
        "wrapMap",
        "target",
        "target",
        "elem",
        "elems",
        "i",
        "elem",
        "i",
        "elem",
        "i",
        "l",
        "args",
        "i",
        "next",
        "parent",
        "fragment",
        "first",
        "scripts",
        "hasScripts",
        "node",
        "doc",
        "i",
        "l",
        "iNoClone",
        "value",
        "isFunction",
        "elems",
        "ret",
        "insert",
        "last",
        "i",
        "i",
        "l",
        "srcElements",
        "destElements",
        "clone",
        "inPage",
        "elem",
        "tmp",
        "tag",
        "wrap",
        "contains",
        "j",
        "i",
        "l",
        "fragment",
        "nodes",
        "data",
        "elem",
        "events",
        "key",
        "j",
        "special",
        "i",
        "match",
        "l",
        "i",
        "i",
        "l",
        "pdataOld",
        "pdataCur",
        "udataOld",
        "udataCur",
        "events",
        "ret",
        "nodeName",
        "wrap",
        "elem",
        "contents",
        "isFunction",
        "curCSS",
        "iframe",
        "rdisplayswap",
        "rmargin",
        "rnumsplit",
        "rnumnonpx",
        "rrelNum",
        "elemdisplay",
        "cssShow",
        "cssNormalTransform",
        "cssExpand",
        "cssPrefixes",
        "capName",
        "origName",
        "name",
        "i",
        "display",
        "elem",
        "hidden",
        "values",
        "index",
        "length",
        "styles",
        "len",
        "i",
        "ret",
        "ret",
        "hooks",
        "origName",
        "style",
        "val",
        "num",
        "hooks",
        "origName",
        "width",
        "minWidth",
        "maxWidth",
        "computed",
        "ret",
        "style",
        "matches",
        "i",
        "val",
        "valueIsBorderBox",
        "val",
        "styles",
        "isBorderBox",
        "doc",
        "display",
        "elem",
        "display",
        "styles",
        "i",
        "expanded",
        "parts",
        "r20",
        "rbracket",
        "rCRLF",
        "rsubmitterTypes",
        "rsubmittable",
        "elements",
        "val",
        "prefix",
        "s",
        "add",
        "name",
        "ajaxLocParts",
        "ajaxLocation",
        "ajax_nonce",
        "ajax_rquery",
        "rhash",
        "rts",
        "rheaders",
        "rlocalProtocol",
        "rnoContent",
        "rprotocol",
        "rurl",
        "_load",
        "prefilters",
        "transports",
        "allTypes",
        "dataType",
        "i",
        "dataTypes",
        "inspected",
        "seekingTransport",
        "selected",
        "dataTypeOrTransport",
        "key",
        "deep",
        "flatOptions",
        "selector",
        "response",
        "off",
        "transport",
        "cacheURL",
        "responseHeadersString",
        "responseHeaders",
        "timeoutTimer",
        "parts",
        "fireGlobals",
        "i",
        "s",
        "callbackContext",
        "globalEventContext",
        "deferred",
        "completeDeferred",
        "statusCode",
        "requestHeaders",
        "requestHeadersNames",
        "state",
        "strAbort",
        "jqXHR",
        "match",
        "lname",
        "code",
        "finalText",
        "isSuccess",
        "success",
        "error",
        "response",
        "modified",
        "statusText",
        "nativeStatusText",
        "ct",
        "finalDataType",
        "firstDataType",
        "contents",
        "dataTypes",
        "conv2",
        "current",
        "conv",
        "tmp",
        "prev",
        "converters",
        "dataTypes",
        "script",
        "callback",
        "oldCallbacks",
        "rjsonp",
        "callback",
        "callbackName",
        "overwritten",
        "responseContainer",
        "jsonProp",
        "xhrSupported",
        "xhrSuccessStatus",
        "xhrId",
        "xhrCallbacks",
        "callback",
        "i",
        "id",
        "xhr",
        "fxNow",
        "timerId",
        "rfxtypes",
        "rfxnum",
        "rrun",
        "animationPrefilters",
        "tweeners",
        "tween",
        "target",
        "parts",
        "unit",
        "start",
        "scale",
        "maxIterations",
        "tween",
        "collection",
        "index",
        "length",
        "result",
        "stopped",
        "index",
        "length",
        "deferred",
        "tick",
        "currentTime",
        "remaining",
        "temp",
        "percent",
        "index",
        "length",
        "animation",
        "tween",
        "index",
        "length",
        "props",
        "index",
        "name",
        "easing",
        "value",
        "hooks",
        "prop",
        "index",
        "length",
        "prop",
        "value",
        "toggle",
        "tween",
        "hooks",
        "oldfire",
        "anim",
        "orig",
        "style",
        "hidden",
        "dataShow",
        "prop",
        "hooks",
        "eased",
        "hooks",
        "result",
        "cssFn",
        "empty",
        "optall",
        "doAnimation",
        "anim",
        "stopQueue",
        "stop",
        "dequeue",
        "index",
        "timers",
        "data",
        "index",
        "data",
        "queue",
        "hooks",
        "timers",
        "length",
        "which",
        "attrs",
        "i",
        "opt",
        "timer",
        "timers",
        "i",
        "docElem",
        "win",
        "elem",
        "box",
        "doc",
        "curPosition",
        "curLeft",
        "curCSSTop",
        "curTop",
        "curOffset",
        "curCSSLeft",
        "calculatePosition",
        "position",
        "curElem",
        "props",
        "offsetParent",
        "offset",
        "elem",
        "parentOffset",
        "offsetParent",
        "top",
        "win",
        "chainable",
        "extra",
        "doc",
        "arrayPool",
        "objectPool",
        "idCounter",
        "indicatorObject",
        "keyPrefix",
        "largeArraySize",
        "maxPoolSize",
        "reEmptyStringLeading",
        "reEmptyStringMiddle",
        "reEmptyStringTrailing",
        "reEscapedHtml",
        "reEsTemplate",
        "reFlags",
        "reInterpolate",
        "reThis",
        "whitespace",
        "reLeadingSpacesAndZeros",
        "reNoMatch",
        "reUnescapedHtml",
        "reUnescapedString",
        "contextProps",
        "shadowedProps",
        "templateCounter",
        "argsClass",
        "arrayClass",
        "boolClass",
        "dateClass",
        "errorClass",
        "funcClass",
        "numberClass",
        "objectClass",
        "regexpClass",
        "stringClass",
        "cloneableClasses",
        "objectTypes",
        "stringEscapes",
        "freeExports",
        "freeModule",
        "freeGlobal",
        "index",
        "length",
        "key",
        "cache",
        "key",
        "typeCache",
        "ai",
        "bi",
        "index",
        "length",
        "cache",
        "result",
        "cache",
        "index",
        "length",
        "result",
        "arrayRef",
        "errorProto",
        "objectProto",
        "stringProto",
        "oldDash",
        "reNative",
        "ceil",
        "clearTimeout",
        "concat",
        "floor",
        "fnToString",
        "getPrototypeOf",
        "hasOwnProperty",
        "push",
        "propertyIsEnumerable",
        "setImmediate",
        "setTimeout",
        "toString",
        "nativeBind",
        "nativeCreate",
        "nativeIsArray",
        "nativeIsFinite",
        "nativeIsNaN",
        "nativeKeys",
        "nativeMax",
        "nativeMin",
        "nativeParseInt",
        "nativeRandom",
        "nativeSlice",
        "isIeOpera",
        "isV8",
        "ctorByClass",
        "nonEnumProps",
        "length",
        "prop",
        "support",
        "ctor",
        "props",
        "iteratorTemplate",
        "defaultsIteratorOptions",
        "eachIteratorOptions",
        "forOwnIteratorOptions",
        "isFunc",
        "isPartial",
        "key",
        "thisArg",
        "rightIndicator",
        "indicator",
        "args",
        "arguments",
        "thisBinding",
        "result",
        "data",
        "index",
        "args",
        "factory",
        "createObject",
        "result",
        "result",
        "ctor",
        "result",
        "isArray",
        "shimKeys",
        "keys",
        "basicEach",
        "htmlEscapes",
        "htmlUnescapes",
        "assign",
        "result",
        "value",
        "isObj",
        "className",
        "isArr",
        "ctor",
        "initedStack",
        "length",
        "defaults",
        "result",
        "forIn",
        "forOwn",
        "result",
        "index",
        "props",
        "length",
        "result",
        "key",
        "result",
        "className",
        "length",
        "whereIndicator",
        "result",
        "otherType",
        "className",
        "otherClass",
        "isArr",
        "ctorA",
        "ctorB",
        "initedStack",
        "length",
        "size",
        "index",
        "length",
        "value",
        "isPlainObject",
        "valueOf",
        "objProto",
        "args",
        "arguments",
        "index",
        "length",
        "callback",
        "stackA",
        "stackB",
        "initedStack",
        "found",
        "isArr",
        "result",
        "source",
        "value",
        "stackLength",
        "isShallow",
        "indexOf",
        "isFunc",
        "result",
        "props",
        "index",
        "props",
        "length",
        "result",
        "key",
        "result",
        "index",
        "props",
        "length",
        "key",
        "isArr",
        "ctor",
        "proto",
        "index",
        "props",
        "length",
        "result",
        "index",
        "props",
        "length",
        "result",
        "index",
        "indexOf",
        "length",
        "result",
        "result",
        "result",
        "index",
        "length",
        "result",
        "index",
        "length",
        "value",
        "index",
        "length",
        "value",
        "result",
        "index",
        "length",
        "result",
        "args",
        "index",
        "isFunc",
        "length",
        "result",
        "index",
        "length",
        "result",
        "computed",
        "result",
        "computed",
        "index",
        "length",
        "value",
        "current",
        "computed",
        "Infinity",
        "result",
        "computed",
        "index",
        "length",
        "value",
        "current",
        "pluck",
        "noaccum",
        "index",
        "length",
        "iterable",
        "collection",
        "length",
        "noaccum",
        "props",
        "index",
        "length",
        "result",
        "rand",
        "length",
        "result",
        "index",
        "length",
        "index",
        "length",
        "result",
        "where",
        "index",
        "length",
        "result",
        "value",
        "index",
        "indexOf",
        "length",
        "seen",
        "result",
        "isLarge",
        "cache",
        "value",
        "index",
        "length",
        "n",
        "length",
        "index",
        "flatten",
        "index",
        "length",
        "result",
        "value",
        "length",
        "index",
        "n",
        "length",
        "index",
        "length",
        "args",
        "arguments",
        "argsLength",
        "argsIndex",
        "caches",
        "index",
        "indexOf",
        "length",
        "result",
        "seen",
        "value",
        "cache",
        "n",
        "length",
        "index",
        "length",
        "index",
        "index",
        "length",
        "result",
        "n",
        "index",
        "length",
        "low",
        "high",
        "mid",
        "uniq",
        "index",
        "indexOf",
        "length",
        "result",
        "isLarge",
        "seen",
        "cache",
        "value",
        "computed",
        "index",
        "length",
        "result",
        "index",
        "length",
        "result",
        "key",
        "funcs",
        "index",
        "length",
        "key",
        "funcs",
        "arguments",
        "args",
        "arguments",
        "length",
        "props",
        "length",
        "result",
        "args",
        "result",
        "thisArg",
        "callCount",
        "lastCalled",
        "maxWait",
        "maxTimeoutId",
        "timeoutId",
        "trailing",
        "isCalled",
        "leading",
        "now",
        "remaining",
        "args",
        "args",
        "cache",
        "key",
        "ran",
        "result",
        "leading",
        "trailing",
        "result",
        "args",
        "func",
        "value",
        "args",
        "result",
        "parseInt",
        "rand",
        "value",
        "settings",
        "imports",
        "importsKeys",
        "importsValues",
        "isEvaluating",
        "index",
        "interpolate",
        "source",
        "reDelimiters",
        "variable",
        "hasVariable",
        "variable",
        "sourceURL",
        "result",
        "index",
        "result",
        "id",
        "args",
        "result",
        "func",
        "func",
        "func",
        "func",
        "isSplice",
        "value",
        "result",
        "_",
        "mustache",
        "whiteRe",
        "spaceRe",
        "nonSpaceRe",
        "eqRe",
        "curlyRe",
        "tagRe",
        "RegExp_test",
        "Object_toString",
        "isArray",
        "entityMap",
        "match",
        "index",
        "match",
        "value",
        "context",
        "names",
        "i",
        "fn",
        "tokens",
        "fn",
        "buffer",
        "token",
        "tokenValue",
        "value",
        "i",
        "len",
        "j",
        "jlen",
        "text",
        "tree",
        "collector",
        "tree",
        "sections",
        "token",
        "i",
        "len",
        "section",
        "squashedTokens",
        "token",
        "lastToken",
        "i",
        "len",
        "tagRes",
        "scanner",
        "sections",
        "tokens",
        "spaces",
        "hasTag",
        "nonSpace",
        "start",
        "value",
        "chr",
        "token",
        "openSection",
        "i",
        "len",
        "defaultWriter",
        "result",
        "_",
        "previousBackbone",
        "array",
        "push",
        "splice",
        "Events",
        "events",
        "once",
        "retain",
        "ev",
        "events",
        "names",
        "i",
        "l",
        "j",
        "k",
        "args",
        "events",
        "allEvents",
        "listeningTo",
        "remove",
        "eventSplitter",
        "eventsApi",
        "names",
        "i",
        "l",
        "triggerEvents",
        "ev",
        "i",
        "l",
        "a1",
        "a2",
        "a3",
        "listenMethods",
        "listeningTo",
        "id",
        "Model",
        "attrs",
        "attr",
        "attrs",
        "unset",
        "changes",
        "silent",
        "changing",
        "prev",
        "current",
        "i",
        "l",
        "attrs",
        "val",
        "changed",
        "old",
        "model",
        "success",
        "attrs",
        "method",
        "xhr",
        "attributes",
        "model",
        "success",
        "serverAttrs",
        "model",
        "success",
        "destroy",
        "xhr",
        "error",
        "modelMethods",
        "args",
        "Collection",
        "setOptions",
        "addOptions",
        "singular",
        "i",
        "l",
        "index",
        "model",
        "singular",
        "i",
        "l",
        "id",
        "model",
        "attrs",
        "existing",
        "sort",
        "at",
        "targetModel",
        "sortable",
        "sortAttr",
        "toAdd",
        "toRemove",
        "modelMap",
        "add",
        "merge",
        "remove",
        "order",
        "orderedModels",
        "i",
        "l",
        "model",
        "model",
        "success",
        "collection",
        "method",
        "collection",
        "success",
        "model",
        "methods",
        "args",
        "attributeMethods",
        "iterator",
        "View",
        "delegateEventSplitter",
        "viewOptions",
        "method",
        "match",
        "eventName",
        "selector",
        "attrs",
        "$el",
        "beforeSend",
        "xhr",
        "noXhrPatch",
        "methodMap",
        "Router",
        "optionalParam",
        "namedParam",
        "splatParam",
        "escapeRegExp",
        "router",
        "args",
        "route",
        "routes",
        "History",
        "routeStripper",
        "rootStripper",
        "isExplorer",
        "trailingSlash",
        "pathStripper",
        "match",
        "root",
        "fragment",
        "docMode",
        "oldIE",
        "frame",
        "loc",
        "current",
        "url",
        "href",
        "extend",
        "parent",
        "child",
        "Surrogate",
        "urlError",
        "wrapError",
        "error",
        "Container",
        "viewCid",
        "viewCid",
        "viewCid",
        "viewCid",
        "methods",
        "views",
        "args",
        "Wreqr",
        "Handlers",
        "context",
        "config",
        "config",
        "args",
        "CommandStorage",
        "commands",
        "command",
        "command",
        "args",
        "command",
        "storage",
        "StorageType",
        "name",
        "args",
        "EA",
        "Marionette",
        "Marionette",
        "protoSlice",
        "error",
        "value",
        "splitter",
        "triggerMethod",
        "methodName",
        "method",
        "methodNames",
        "method",
        "methodNames",
        "method",
        "callbacks",
        "err",
        "args",
        "regionIsString",
        "regionSelectorIsString",
        "regionTypeIsUndefined",
        "regionIsType",
        "selector",
        "RegionType",
        "region",
        "parentEl",
        "isViewClosed",
        "isDifferentView",
        "view",
        "RegionManager",
        "regions",
        "region",
        "region",
        "isObject",
        "isString",
        "hasSelector",
        "region",
        "args",
        "methods",
        "regions",
        "args",
        "cachedTemplate",
        "i",
        "args",
        "length",
        "template",
        "template",
        "error",
        "templateFunc",
        "args",
        "templateHelpers",
        "triggerEvents",
        "triggers",
        "hasOptions",
        "eventName",
        "prevent",
        "stop",
        "shouldPrevent",
        "shouldStop",
        "args",
        "combinedEvents",
        "triggers",
        "args",
        "shouldClose",
        "bindings",
        "selector",
        "data",
        "data",
        "template",
        "html",
        "ItemView",
        "index",
        "ItemView",
        "EmptyView",
        "model",
        "itemView",
        "itemViewOptions",
        "view",
        "prefix",
        "args",
        "options",
        "view",
        "itemView",
        "data",
        "html",
        "data",
        "template",
        "$container",
        "container",
        "itemViewContainer",
        "selector",
        "args",
        "result",
        "args",
        "regions",
        "that",
        "defaults",
        "regions",
        "appRoutes",
        "controller",
        "controller",
        "routeNames",
        "method",
        "args",
        "args",
        "args",
        "args",
        "app",
        "customArgs",
        "length",
        "moduleDefinitions",
        "parentModule",
        "fn",
        "startWithParent",
        "App",
        "tmplCache",
        "playing",
        "position",
        "Ac",
        "left",
        "right",
        "hash",
        "blob",
        "url",
        "$elem",
        "$bar",
        "init",
        "bindEvents",
        "updatePercent",
        "percent",
        "f32",
        "args",
        "sr",
        "channels",
        "len",
        "buf",
        "channels",
        "sr",
        "start",
        "end",
        "len",
        "buf",
        "clone",
        "src",
        "xhr",
        "len",
        "total",
        "i",
        "rms",
        "db",
        "ms",
        "s",
        "m",
        "Mix",
        "now",
        "time",
        "max",
        "now",
        "playing",
        "start",
        "position",
        "delta",
        "position",
        "playing",
        "unsoloed",
        "soloed",
        "_muted",
        "playing",
        "len",
        "right",
        "left",
        "i",
        "tracks",
        "data",
        "binURI",
        "Track",
        "playing",
        "len",
        "floats",
        "i",
        "dBFS",
        "Tracks",
        "durations",
        "Track",
        "canvas",
        "height",
        "width",
        "hue",
        "i",
        "ctx",
        "data",
        "$elem",
        "deg",
        "touch",
        "touch",
        "pos",
        "state",
        "delta",
        "css",
        "touch",
        "width",
        "height",
        "offset",
        "top",
        "left",
        "a",
        "b",
        "deg",
        "top",
        "muted",
        "soloed",
        "canvas",
        "ctx",
        "dBFS",
        "gain",
        "afl",
        "height",
        "width",
        "scaled",
        "now",
        "peakTime",
        "peak",
        "timeDiff",
        "freshness",
        "Tracks",
        "Controls",
        "data",
        "pos",
        "pos",
        "canvas",
        "ctx",
        "pos",
        "ghost",
        "arr",
        "i",
        "x"
    ],
    "comments": [
        "jshint maxlen:false",
        "!\n   * jQuery JavaScript Library v2.0.3\n   * http://jquery.com/\n   *\n   * Includes Sizzle.js\n   * http://sizzlejs.com/\n   *\n   * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors\n   * Released under the MIT license\n   * http://jquery.org/license\n   *\n   * Date: 2013-07-03T13:30Z",
        "Can't do this because several apps including ASP.NET trace",
        "the stack via arguments.caller.callee and Firefox dies if",
        "you try to trace through \"use strict\" call chains. (#13335)",
        "Support: Firefox 18+",
        "\"use strict\";",
        "A central reference to the root jQuery(document)",
        "The deferred used on DOM ready",
        "Support: IE9",
        "For `typeof xmlNode.method` instead of `xmlNode.method !== undefined`",
        "Use the correct document accordingly with window argument (sandbox)",
        "Map over jQuery in case of overwrite",
        "Map over the $ in case of overwrite",
        "[[Class]] -> type pairs",
        "List of deleted data cache ids, so we can reuse them",
        "Save a reference to some core methods",
        "Define a local copy of jQuery",
        "The jQuery object is actually just the init constructor 'enhanced'",
        "Used for matching numbers",
        "Used for splitting on whitespace",
        "A simple way to check for HTML strings",
        "Prioritize #id over <tag> to avoid XSS via location.hash (#9521)",
        "Strict HTML recognition (#11290: must start with <)",
        "Match a standalone tag",
        "Matches dashed string for camelizing",
        "Used by jQuery.camelCase as callback to replace()",
        "The ready event handler and self cleanup method",
        "The current version of jQuery being used",
        "HANDLE: $(\"\"), $(null), $(undefined), $(false)",
        "Handle HTML strings",
        "Assume that strings that start and end with <> are HTML and skip the regex check",
        "Match html or make sure no context is specified for #id",
        "HANDLE: $(html) -> $(array)",
        "scripts is true for back-compat",
        "HANDLE: $(html, props)",
        "Properties of context are called as methods if possible",
        "...and otherwise set as attributes",
        "HANDLE: $(#id)",
        "Check parentNode to catch when Blackberry 4.6 returns",
        "nodes that are no longer in the document #6963",
        "Inject the element directly into the jQuery object",
        "HANDLE: $(expr, $(...))",
        "HANDLE: $(expr, context)",
        "(which is just equivalent to: $(context).find(expr)",
        "HANDLE: $(DOMElement)",
        "HANDLE: $(function)",
        "Shortcut for document ready",
        "Start with an empty selector",
        "The default length of a jQuery object is 0",
        "Get the Nth element in the matched element set OR",
        "Get the whole matched element set as a clean array",
        "Return a 'clean' array",
        "Return just the object",
        "Take an array of elements and push it onto the stack",
        "(returning the new matched element set)",
        "Build a new jQuery matched element set",
        "Add the old object onto the stack (as a reference)",
        "Return the newly-formed element set",
        "Execute a callback for every element in the matched set.",
        "(You can seed the arguments with an array of args, but this is",
        "only used internally.)",
        "Add the callback",
        "For internal use only.",
        "Behaves like an Array's method, not like a jQuery method.",
        "Give the init function the jQuery prototype for later instantiation",
        "Handle a deep copy situation",
        "skip the boolean and the target",
        "Handle case when target is a string or something (possible in deep copy)",
        "extend jQuery itself if only one argument is passed",
        "Only deal with non-null/undefined values",
        "Extend the base object",
        "Prevent never-ending loop",
        "Recurse if we're merging plain objects or arrays",
        "Never move original objects, clone them",
        "Don't bring in undefined values",
        "Return the modified object",
        "Unique for each copy of jQuery on the page",
        "Is the DOM ready to be used? Set to true once it occurs.",
        "A counter to track how many items to wait for before",
        "the ready event fires. See #6781",
        "Hold (or release) the ready event",
        "Handle when the DOM is ready",
        "Abort if there are pending holds or we're already ready",
        "Remember that the DOM is ready",
        "If a normal DOM Ready event fired, decrement, and wait if need be",
        "If there are functions bound, to execute",
        "Trigger any bound ready events",
        "See test/unit/core.js for details concerning isFunction.",
        "Since version 1.3, DOM methods and functions like alert",
        "aren't supported. They return false on IE (#2968).",
        "Support: Safari <= 5.1 (functionish RegExp)",
        "Not plain objects:",
        "- Any object or value whose internal [[Class]] property is not \"[object Object]\"",
        "- DOM nodes",
        "- window",
        "Support: Firefox <20",
        "The try/catch suppresses exceptions thrown when attempting to access",
        "the \"constructor\" property of certain host objects, ie. |window.location|",
        "https://bugzilla.mozilla.org/show_bug.cgi?id=814622",
        "If the function hasn't returned already, we're confident that",
        "|obj| is a plain object, created by {} or constructed with new Object",
        "data: string of html",
        "context (optional): If specified, the fragment will be created in this context, defaults to document",
        "keepScripts (optional): If true, will include scripts passed in the html string",
        "Single tag",
        "Cross-browser xml parsing",
        "Support: IE9",
        "Evaluates a script in a global context",
        "If the code includes a valid, prologue position",
        "strict mode pragma, execute code by injecting a",
        "script tag into the document.",
        "Otherwise, avoid the DOM node creation, insertion",
        "and removal by using an indirect global eval",
        "Convert dashed to camelCase; used by the css and data modules",
        "Microsoft forgot to hump their vendor prefix (#9572)",
        "args is for internal usage only",
        "A special, fast, case for the most common use of each",
        "results is for internal usage only",
        "Go through the array, only saving the items",
        "that pass the validator function",
        "arg is for internal usage only",
        "Go through the array, translating each of the items to their",
        "Go through every key on the object,",
        "Flatten any nested arrays",
        "A global GUID counter for objects",
        "Bind a function to a context, optionally partially applying any",
        "arguments.",
        "Quick check to determine if target is callable, in the spec",
        "this throws a TypeError, but we will just return undefined.",
        "Simulated bind",
        "Set the guid of unique handler to the same of original handler, so it can be removed",
        "Multifunctional method to get and set values of a collection",
        "The value/s can optionally be executed if it's a function",
        "Sets many values",
        "Sets one value",
        "Bulk operations run against the entire set",
        "...except when executing function values",
        "Gets",
        "A method for quickly swapping in/out CSS properties to get correct calculations.",
        "Note: this method belongs to the css module but it's needed here for the support module.",
        "If support gets modularized, this method should be moved back to the css module.",
        "Remember the old values, and insert the new ones",
        "Revert the old values",
        "Catch cases where $(document).ready() is called after the browser event has already occurred.",
        "we once tried to use readyState \"interactive\" here, but it caused issues like the one",
        "discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15",
        "Handle it asynchronously to allow scripts the opportunity to delay ready",
        "Use the handy event callback",
        "A fallback to window.onload, that will always work",
        "Populate the class2type map",
        "All jQuery objects should point back to these",
        "!\n   * Sizzle CSS Selector Engine v1.9.4-pre\n   * http://sizzlejs.com/\n   *\n   * Copyright 2013 jQuery Foundation, Inc. and other contributors\n   * Released under the MIT license\n   * http://jquery.org/license\n   *\n   * Date: 2013-06-03",
        "Local document vars",
        "Instance-specific data",
        "General-purpose constants",
        "Instance methods",
        "Use a stripped-down indexOf if we can't use a native one",
        "Regular expressions",
        "Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace",
        "http://www.w3.org/TR/css3-syntax/#characters",
        "Loosely modeled on CSS identifier characters",
        "An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors",
        "Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier",
        "Acceptable operators http://www.w3.org/TR/selectors/#attribute-selectors",
        "Prefer arguments quoted,",
        "then not containing pseudos/brackets,",
        "then attribute selectors/non-parenthetical expressions,",
        "then anything else",
        "These preferences are here to reduce the number of selectors",
        "needing tokenize in the PSEUDO preFilter",
        "Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter",
        "For use in libraries implementing .is()",
        "We use this for POS matching in `select`",
        "Easily-parseable/retrievable ID or TAG or CLASS selectors",
        "CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters",
        "NaN means non-codepoint",
        "Support: Firefox",
        "Workaround erroneous numeric interpretation of +\"0x\"",
        "BMP codepoint",
        "Supplemental Plane codepoint (surrogate pair)",
        "Optimize for push.apply( _, NodeList )",
        "Support: Android<4.0",
        "Detect silently failing push.apply",
        "Leverage slice if possible",
        "Support: IE<9",
        "Otherwise append directly",
        "Can't trust NodeList.length",
        "QSA vars",
        "Shortcuts",
        "Speed-up: Sizzle(\"#ID\")",
        "Check parentNode to catch when Blackberry 4.6 returns",
        "nodes that are no longer in the document #6963",
        "Handle the case where IE, Opera, and Webkit return items",
        "by name instead of ID",
        "Context is not a document",
        "Speed-up: Sizzle(\"TAG\")",
        "Speed-up: Sizzle(\".CLASS\")",
        "QSA path",
        "qSA works strangely on Element-rooted queries",
        "We can work around this by specifying an extra ID on the root",
        "and working up from there (Thanks to Andrew Dupont for the technique)",
        "IE 8 doesn't work on object elements",
        "All others",
        "Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)",
        "Only keep the most recent entries",
        "Remove from its parent by default",
        "release memory in IE",
        "Use IE sourceIndex if available on both nodes",
        "Check if b follows a",
        "Match elements found at the specified indexes",
        "documentElement is verified for cases where it doesn't yet exist",
        "(such as loading iframes in IE - #4833)",
        "Expose support vars for convenience",
        "If no document and documentElement is available, return",
        "Set our document",
        "Support tests",
        "Support: IE>8",
        "If iframe document is assigned to \"document\" variable and if iframe has been reloaded,",
        "IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936",
        "IE6-8 do not support the defaultView property so parent will be undefined",
        "Attributes\n  \t----------------------------------------------------------------------",
        "Support: IE<8",
        "Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)",
        "getElement(s)By*\n  \t----------------------------------------------------------------------",
        "Check if getElementsByTagName(\"*\") returns only elements",
        "Check if getElementsByClassName can be trusted",
        "Support: Safari<4",
        "Catch class over-caching",
        "Support: Opera<10",
        "Catch gEBCN failure to find non-leading classes",
        "Support: IE<10",
        "Check if getElementById returns elements by name",
        "The broken getElementById methods don't pick up programatically-set names,",
        "so use a roundabout getElementsByName test",
        "ID find and filter",
        "Check parentNode to catch when Blackberry 4.6 returns",
        "nodes that are no longer in the document #6963",
        "Support: IE6/7",
        "getElementById is not reliable as a find shortcut",
        "Tag",
        "Filter out possible comments",
        "Class",
        "QSA/matchesSelector\n  \t----------------------------------------------------------------------",
        "QSA and matchesSelector support",
        "matchesSelector(:active) reports false when true (IE9/Opera 11.5)",
        "qSa(:focus) reports false when true (Chrome 21)",
        "We allow this because of a bug in IE8/9 that throws an error",
        "whenever `document.activeElement` is accessed on an iframe",
        "So, we allow :focus to pass through QSA all the time to avoid the IE error",
        "See http://bugs.jquery.com/ticket/13378",
        "Build QSA regex",
        "Regex strategy adopted from Diego Perini",
        "Select is set to empty string on purpose",
        "This is to test IE's treatment of not explicitly",
        "setting a boolean content attribute,",
        "since its presence should be enough",
        "http://bugs.jquery.com/ticket/12359",
        "Support: IE8",
        "Boolean attributes and \"value\" are not treated correctly",
        "Webkit/Opera - :checked should return selected option elements",
        "http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked",
        "IE8 throws error here and will not see later tests",
        "Support: Opera 10-12/IE8",
        "^= $= *= and empty values",
        "Should not select anything",
        "Support: Windows 8 Native Apps",
        "The type attribute is restricted during .innerHTML assignment",
        "FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)",
        "IE8 throws error here and will not see later tests",
        "Opera 10-11 does not throw on post-comma invalid pseudos",
        "Check to see if it's possible to do matchesSelector",
        "on a disconnected node (IE 9)",
        "This should fail with an exception",
        "Gecko does not error, returns false instead",
        "Contains\n  \t----------------------------------------------------------------------",
        "Element contains another",
        "Purposefully does not implement inclusive descendent",
        "As in, an element does not contain itself",
        "Sorting\n  \t----------------------------------------------------------------------",
        "Document order sorting",
        "Flag for duplicate removal",
        "Disconnected nodes",
        "Choose the first element that is related to our preferred document",
        "Maintain original order",
        "Not directly comparable, sort on existence of method",
        "Exit early if the nodes are identical",
        "Parentless nodes are either documents or disconnected",
        "If the nodes are siblings, we can do a quick check",
        "Otherwise we need full lists of their ancestors for comparison",
        "Walk down the tree looking for a discrepancy",
        "Do a sibling check if the nodes have a common ancestor",
        "Otherwise nodes in our document sort first",
        "Set document vars if needed",
        "Make sure that attribute selectors are quoted",
        "IE 9's matchesSelector returns false on disconnected nodes",
        "As well, disconnected nodes are said to be in a document",
        "fragment in IE 9",
        "Set document vars if needed",
        "Set document vars if needed",
        "Don't get fooled by Object.prototype properties (jQuery #13807)",
        "Unless we *know* we can detect duplicates, assume their presence",
        "If no nodeType, this is expected to be an array",
        "Do not traverse comment nodes",
        "Use textContent for elements",
        "innerText usage removed for consistency of new lines (see #11153)",
        "Traverse its children",
        "Do not include comment or processing instruction nodes",
        "Can be adjusted by the user",
        "Move the given value to match[3] whether quoted or unquoted",
        "matches from matchExpr[\"CHILD\"]\n  \t\t\t\t1 type (only|nth|...)\n  \t\t\t\t2 what (child|of-type)\n  \t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n  \t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n  \t\t\t\t5 sign of xn-component\n  \t\t\t\t6 x of xn-component\n  \t\t\t\t7 sign of y-component\n  \t\t\t\t8 y of y-component",
        "nth-* requires argument",
        "numeric x and y parameters for Expr.filter.CHILD",
        "remember that false/true cast respectively to 0/1",
        "other types prohibit arguments",
        "Accept quoted arguments as-is",
        "Strip excess characters from unquoted arguments",
        "Get excess from tokenize (recursively)",
        "advance to the next closing parenthesis",
        "excess is a negative index",
        "Return only captures needed by the pseudo filter method (type and argument)",
        "Shortcut for :nth-*(n)",
        ":(first|last|only)-(child|of-type)",
        "Reverse direction for :only-* (if we haven't yet done so)",
        "non-xml :nth-child(...) stores cache data on `parent`",
        "Seek `elem` from a previously-cached index",
        "Fallback to seeking `elem` from the start",
        "When found, cache indexes on `parent` and break",
        "Use previously-cached element index if available",
        "xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)",
        "Use the same loop as above to seek `elem` from the start",
        "Cache the index of each encountered element",
        "Incorporate the offset, then check against cycle size",
        "pseudo-class names are case-insensitive",
        "http://www.w3.org/TR/selectors/#pseudo-classes",
        "Prioritize by case sensitivity in case custom pseudos are added with uppercase letters",
        "Remember that setFilters inherits from pseudos",
        "The user may use createPseudo to indicate that",
        "arguments are needed to create the filter function",
        "just as Sizzle does",
        "But maintain support for old signatures",
        "Potentially complex pseudos",
        "Trim the selector passed to compile",
        "to avoid treating leading and trailing",
        "spaces as combinators",
        "Match elements unmatched by `matcher`",
        "\"Whether an element is represented by a :lang() selector",
        "is based solely on the element's language value",
        "being equal to the identifier C,",
        "or beginning with the identifier C immediately followed by \"-\".",
        "The matching of C against the element's language value is performed case-insensitively.",
        "The identifier C does not have to be a valid language name.\"",
        "http://www.w3.org/TR/selectors/#lang-pseudo",
        "lang value must be a valid identifier",
        "Miscellaneous",
        "Boolean properties",
        "In CSS3, :checked should return both checked and selected elements",
        "http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked",
        "Accessing this property makes selected-by-default",
        "options in Safari work properly",
        "Contents",
        "http://www.w3.org/TR/selectors/#empty-pseudo",
        ":empty is only affected by element nodes and content nodes(including text(3), cdata(4)),",
        "not comment, processing instructions, or others",
        "Thanks to Diego Perini for the nodeName shortcut",
        "Greater than \"@\" means alpha characters (specifically not starting with \"#\" or \"?\")",
        "Element/input types",
        "IE6 and 7 will map elem.type to 'text' for new HTML5 types (search, etc)",
        "use getAttribute instead to test this case",
        "Position-in-collection",
        "Add button/input type pseudos",
        "Easy API for creating new setFilters",
        "Comma and first run",
        "Don't consume trailing commas as valid",
        "Combinators",
        "Cast descendant combinators to space",
        "Filters",
        "Return the length of the invalid excess",
        "if we're just parsing",
        "Otherwise, throw an error or return tokens",
        "Cache the tokens",
        "Check against closest ancestor/preceding element",
        "Check against all ancestor/preceding elements",
        "We can't set arbitrary data on XML nodes, so they don't benefit from dir caching",
        "Get initial elements from seed or context",
        "Prefilter to get matcher input, preserving a map for seed-results synchronization",
        "If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,",
        "...intermediate processing is necessary",
        "...otherwise use results directly",
        "Find primary matches",
        "Apply postFilter",
        "Un-match failing elements by moving them back to matcherIn",
        "Get the final matcherOut by condensing this intermediate into postFinder contexts",
        "Restore matcherIn since elem is not yet a final match",
        "Move matched elements from seed to results to keep them synchronized",
        "Add elements to results, through postFinder if defined",
        "The foundational matcher ensures that elements are reachable from top-level context(s)",
        "Return special upon seeing a positional matcher",
        "Find the next relative operator (if any) for proper handling",
        "If the preceding token was a descendant combinator, insert an implicit any-element `*`",
        "A counter to specify which element is currently being matched",
        "We must always have either seed elements or context",
        "Use integer dirruns iff this is the outermost matcher",
        "Add elements passing elementMatchers directly to results",
        "Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below",
        "Track unmatched elements for set filters",
        "They will have gone through all possible matchers",
        "Lengthen the array for every element, matched or not",
        "Apply set filters to unmatched elements",
        "Reintegrate element matches to eliminate the need for sorting",
        "Discard index placeholder values to get only actual matches",
        "Add matches to results",
        "Seedless set matches succeeding multiple successful matchers stipulate sorting",
        "Override manipulation of globals by nested matchers",
        "Internal Use Only",
        "Generate a function of recursive functions that can be used to check each element",
        "Cache the compiled function",
        "Try to minimize operations if there is only one group",
        "Take a shortcut and set the context if the root selector is an ID",
        "Fetch a seed set for right-to-left matching",
        "Abort if we hit a combinator",
        "Search, expanding context for leading sibling combinators",
        "If seed is empty or no tokens remain, we can return early",
        "Compile and execute a filtering function",
        "Provide `match` to avoid retokenization if we modified the selector above",
        "One-time assignments",
        "Sort stability",
        "Support: Chrome<14",
        "Always assume duplicates if they aren't passed to the comparison function",
        "Initialize against the default document",
        "Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)",
        "Detached nodes confoundingly follow *each other*",
        "Should return 1, but returns 4 (following)",
        "Support: IE<8",
        "Prevent attribute/property \"interpolation\"",
        "http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx",
        "Support: IE<9",
        "Use defaultValue in place of getAttribute(\"value\")",
        "Support: IE<9",
        "Use getAttributeNode to fetch booleans when getAttribute lies",
        "String to Object options format cache",
        "Convert String-formatted options into Object-formatted ones and store in cache",
        "Convert options from String-formatted to Object-formatted if needed",
        "(we check in cache first)",
        "Last fire value (for non-forgettable lists)",
        "Flag to know if list was already fired",
        "Flag to know if list is currently firing",
        "First callback to fire (used internally by add and fireWith)",
        "End of the loop when firing",
        "Index of currently firing callback (modified by remove if needed)",
        "Actual callback list",
        "Stack of fire calls for repeatable lists",
        "Fire callbacks",
        "To prevent further calls using add",
        "Actual Callbacks object",
        "Add a callback or a collection of callbacks to the list",
        "First, we save the current length",
        "Inspect recursively",
        "Do we need to add the callbacks to the",
        "current firing batch?",
        "With memory, if we're not firing then",
        "we should call right away",
        "Remove a callback from the list",
        "Handle firing indexes",
        "Check if a given callback is in the list.",
        "If no argument is given, return whether or not list has callbacks attached.",
        "Remove all callbacks from the list",
        "Have the list do nothing anymore",
        "Is it disabled?",
        "Lock the list in its current state",
        "Is it locked?",
        "Call all callbacks with the given context and arguments",
        "Call all the callbacks with the given arguments",
        "To know if the callbacks have already been called at least once",
        "action, add listener, listener list, final state",
        "fnDone, fnFail, fnProgress",
        "deferred[ done | fail | progress ] for forwarding actions to newDefer",
        "Get a promise for this deferred",
        "If obj is provided, the promise aspect is added to the object",
        "Keep pipe for back-compat",
        "Add list-specific methods",
        "promise[ done | fail | progress ] = list.add",
        "Handle state",
        "state = [ resolved | rejected ]",
        "[ reject_list | resolve_list ].disable; progress_list.lock",
        "deferred[ resolve | reject | notify ]",
        "Make the deferred a promise",
        "Call given func if any",
        "All done!",
        "Deferred helper",
        ", ..., subordinateN",
        "the count of uncompleted subordinates",
        "the master Deferred. If resolveValues consist of only a single Deferred, just use that.",
        "Update function for both resolve and progress values",
        "add listeners to Deferred subordinates; treat others as resolved",
        "if we're not waiting on anything, resolve the master",
        "Finish early in limited environments",
        "Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3",
        "Check the default checkbox/radio value (\"\" on old WebKit; \"on\" elsewhere)",
        "Must access the parent to make an option select properly",
        "Support: IE9, IE10",
        "Will be defined later",
        "Make sure checked status is properly cloned",
        "Support: IE9, IE10",
        "Make sure that the options inside disabled selects aren't marked as disabled",
        "(WebKit marks them as disabled)",
        "Check if an input maintains its value after becoming a radio",
        "Support: IE9, IE10",
        "#11217 - WebKit loses check when the name is after the checked attribute",
        "Support: Safari 5.1, Android 4.x, Android 2.3",
        "old WebKit doesn't clone checked state correctly in fragments",
        "Support: Firefox, Chrome, Safari",
        "Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)",
        "Run tests that need a body at doc ready",
        "Support: Firefox, Android 2.3 (Prefixed box-sizing versions).",
        "Return for frameset docs that don't have a body",
        "Check box-sizing and margin behavior.",
        "Support: Firefox, Android 2.3 (Prefixed box-sizing versions).",
        "Workaround failing boxSizing test due to offsetWidth returning wrong value",
        "with some non-1 values of body zoom, ticket #13543",
        "Use window.getComputedStyle because jsdom on node.js will break without it.",
        "Support: Android 2.3",
        "Check if div with explicit width and no margin-right incorrectly",
        "gets computed margin-right based on width of container. (#3333)",
        "WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right",
        "Implementation Summary\n  \n  \t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  \t2. Improve the module's maintainability by reducing the storage\n  \t\tpaths to a single mechanism.\n  \t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  \t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  \t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  \t6. Provide a clear path for implementation upgrade to WeakMap in 2014",
        "Support: Android < 4,",
        "Old WebKit does not have Object.preventExtensions/freeze method,",
        "return new empty object instead with no [[set]] accessor",
        "Accepts only:",
        "- Node",
        "- Node.ELEMENT_NODE",
        "- Node.DOCUMENT_NODE",
        "- Object",
        "- Any",
        "We can accept data for non-element nodes in modern browsers,",
        "but we should not, see #8335.",
        "Always return the key for a frozen object.",
        "Check if the owner object already has a cache key",
        "If not, create one",
        "Secure it in a non-enumerable, non-writable property",
        "Support: Android < 4",
        "Fallback to a less secure definition",
        "Ensure the cache object",
        "There may be an unlock assigned to this node,",
        "if there is no entry for this \"owner\", create one inline",
        "and set the unlock as though an owner entry had always existed",
        "Handle: [ owner, key, value ] args",
        "Handle: [ owner, { properties } ] args",
        "Fresh assignments by object are shallow copied",
        "Otherwise, copy the properties one-by-one to the cache object",
        "Either a valid cache is found, or will be created.",
        "New caches will be created and the unlock returned,",
        "allowing direct access to the newly created",
        "empty data object. A valid owner object must be provided.",
        "In cases where either:",
        "",
        "1. No key was specified",
        "2. A string key was specified, but no value provided",
        "",
        "Take the \"read\" path and allow the get method to determine",
        "which value to return, respectively either:",
        "",
        "1. The entire cache object",
        "2. The data stored at the key",
        "",
        "[*]When the key is not a string, or both a key and value",
        "are specified, set or extend (existing objects) with either:",
        "",
        "1. An object of properties",
        "2. A key and value",
        "",
        "Since the \"set\" path can have two possible entry points",
        "return the expected data based on which path was taken[*]",
        "Support array or space separated string of keys",
        "If \"name\" is an array of keys...",
        "When data is initially created, via (\"key\", \"val\") signature,",
        "keys will be converted to camelCase.",
        "Since there is no way to tell _how_ a key was added, remove",
        "both plain key and camelCase key. #12786",
        "This will only penalize the array argument path.",
        "Try the string as a key before any manipulation",
        "If a key with the spaces exists, use it.",
        "Otherwise, create an array by matching non-whitespace",
        "These may be used throughout the jQuery core codebase",
        "TODO: Now that all calls to _data and _removeData have been replaced",
        "with direct calls to data_priv methods, these can be deprecated.",
        "Gets all values",
        "Sets multiple values",
        "The calling jQuery object (element matches) is not empty",
        "(and therefore has an element appears at this[ 0 ]) and the",
        "`value` parameter was not undefined. An empty jQuery object",
        "will result in `undefined` for elem = this[ 0 ] which will",
        "throw an exception if an attempt to read a data cache is made.",
        "Attempt to get data from the cache",
        "with the key as-is",
        "Attempt to get data from the cache",
        "with the key camelized",
        "Attempt to \"discover\" the data in",
        "HTML5 custom data-* attrs",
        "We tried really hard, but the data doesn't exist.",
        "Set the data...",
        "First, attempt to store a copy or reference of any",
        "data that might've been store with a camelCased key.",
        "For HTML5 data-* attribute interop, we have to",
        "store property names with dashes in a camelCase form.",
        "This might not apply to all properties...*",
        "have dashes, we need to also store a copy of that",
        "unchanged property.",
        "If nothing was found internally, try to fetch any",
        "data from the HTML5 data-* attribute",
        "Only convert to a number if it doesn't change the string",
        "Make sure we set the data so it isn't changed later",
        "Speed up dequeue by getting out quickly if this is just a lookup",
        "If the fx queue is dequeued, always remove the progress sentinel",
        "Add a progress sentinel to prevent the fx queue from being",
        "automatically dequeued",
        "clear up the last queue stop function",
        "not intended for public consumption - generates a queueHooks object, or returns the current one",
        "ensure a hooks for this queue",
        "Based off of the plugin by Clint Helfers, with permission.",
        "http://blindsignals.com/index.php/2009/07/jquery-delay/",
        "Get a promise resolved when queues of a certain type",
        "are emptied (fx is the type by default)",
        "The disjunction here is for better compressibility (see removeClass)",
        "This expression is here for better compressibility (see addClass)",
        "Remove *all* instances",
        "toggle individual class names",
        "check each className given, space separated list",
        "Toggle whole class name",
        "store className if set",
        "If the element has a class name or if we're passed \"false\",",
        "then remove the whole classname (if there was one, the above saved it).",
        "Otherwise bring back whatever was previously saved (if anything),",
        "falling back to the empty string if nothing was stored.",
        "handle most common string cases",
        "handle cases where value is null/undef or number",
        "Treat null/undefined as \"\"; convert numbers to string",
        "If set returns undefined, fall back to normal setting",
        "attributes.value is undefined in Blackberry 4.7 but",
        "uses .value. See #6932",
        "Loop through all the selected options",
        "IE6-9 doesn't update selected after form reset (#2551)",
        "Don't return options that are disabled or in a disabled optgroup",
        "Get the specific value for the option",
        "We don't need an array for one selects",
        "Multi-Selects return an array",
        "force browsers to behave consistently when non-matching value is set",
        "don't get/set attributes on text, comment and attribute nodes",
        "Fallback to prop when attributes are not supported",
        "All attributes are lowercase",
        "Grab necessary hook if one is defined",
        "Non-existent attributes return null, we normalize to undefined",
        "Boolean attributes get special treatment (#10870)",
        "Set corresponding property to false",
        "Setting the type on a radio button after the value resets the value in IE6-9",
        "Reset value to default in case type is set after value during creation",
        "don't get/set properties on text, comment and attribute nodes",
        "Fix name and attach hooks",
        "Hooks for boolean attributes",
        "Remove boolean attributes when set to false",
        "jshint eqeqeq: false",
        "Temporarily disable this handler to check existence",
        "Restore handler",
        "Support: IE9+",
        "Selectedness for an option in an optgroup can be inaccurate",
        "Radios and checkboxes getter/setter",
        "Support: Webkit",
        "\"\" is returned instead of \"on\" if a value isn't specified",
        "Don't attach events to noData or text/comment nodes (but allow plain objects)",
        "Caller can pass in an object of custom data in lieu of the handler",
        "Make sure that the handler has a unique ID, used to find/remove it later",
        "Init the element's event structure and main handler, if this is the first",
        "Discard the second event of a jQuery.event.trigger() and",
        "when an event is called after a page has unloaded",
        "Add elem as a property of the handle fn to prevent a memory leak with IE non-native events",
        "Handle multiple events separated by a space",
        "There *must* be a type, no attaching namespace-only handlers",
        "If event changes its type, use the special event handlers for the changed type",
        "If selector defined, determine special event api type, otherwise given type",
        "Update special based on newly reset type",
        "handleObj is passed to all event handlers",
        "Init the event handler queue if we're the first",
        "Only use addEventListener if the special events handler returns false",
        "Add to the element's handler list, delegates in front",
        "Keep track of which events have ever been used, for event optimization",
        "Nullify elem to prevent memory leaks in IE",
        "Detach an event or set of events from an element",
        "Once for each type.namespace in types; type may be omitted",
        "Unbind all events (on this namespace, if provided) for the element",
        "Remove matching events",
        "Remove generic event handler if we removed something and no more handlers exist",
        "(avoids potential for endless recursion during removal of special event handlers)",
        "Remove the expando if it's no longer used",
        "Don't do events on text and comment nodes",
        "focus/blur morphs to focusin/out; ensure we're not firing them right now",
        "Namespaced trigger; create a regexp to match event type in handle()",
        "Caller can pass in a jQuery.Event object, Object, or just an event type string",
        "Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)",
        "Clean up the event in case it is being reused",
        "Clone any incoming data and prepend the event, creating the handler arg list",
        "Allow special events to draw outside the lines",
        "Determine event propagation path in advance, per W3C events spec (#9951)",
        "Bubble up to document, then to window; watch for a global ownerDocument var (#9724)",
        "Only add window if we got to document (e.g., not plain obj or detached DOM)",
        "Fire handlers on the event path",
        "jQuery handler",
        "Native handler",
        "If nobody prevented the default action, do it now",
        "Call a native DOM method on the target with the same name name as the event.",
        "Don't do default actions on window, that's where global variables be (#6170)",
        "Don't re-trigger an onFOO event when we call its FOO() method",
        "Prevent re-triggering of the same event, since we already bubbled it above",
        "Make a writable jQuery.Event from the native event object",
        "Use the fix-ed jQuery.Event rather than the (read-only) native event",
        "Call the preDispatch hook for the mapped type, and let it bail if desired",
        "Determine handlers",
        "Run delegates first; they may want to stop propagation beneath us",
        "Triggered event must either 1) have no namespace, or",
        "2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).",
        "Call the postDispatch hook for the mapped type",
        "Find delegate handlers",
        "Black-hole SVG <use> instance trees (#13180)",
        "Avoid non-left-click bubbling in Firefox (#3861)",
        "Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)",
        "Don't conflict with Object.prototype properties (#13203)",
        "Add the remaining (directly-bound) handlers",
        "Includes some event props shared by KeyEvent and MouseEvent",
        "Add which for key events",
        "Calculate pageX/Y if missing and clientX/Y available",
        "Add which for click: 1 === left; 2 === middle; 3 === right",
        "Note: button is not normalized, so don't use it",
        "Create a writable copy of the event object and normalize some properties",
        "Support: Cordova 2.5 (WebKit) (#13255)",
        "All events should have a target; Cordova deviceready doesn't",
        "Support: Safari 6.0+, Chrome < 28",
        "Target should not be a text node (#504, #13143)",
        "Prevent triggered image.load events from bubbling to window.load",
        "Fire native event if possible so blur/focus sequence is correct",
        "For checkbox, fire native event so checked state will be right",
        "For cross-browser consistency, don't fire native .click() on links",
        "Support: Firefox 20+",
        "Firefox doesn't alert if the returnValue field is not set.",
        "Piggyback on a donor event to simulate a different one.",
        "Fake originalEvent to avoid donor's stopPropagation, but if the",
        "simulated event prevents default then we do the same on the donor.",
        "Allow instantiation without the 'new' keyword",
        "Event object",
        "Events bubbling up the document may have been marked as prevented",
        "by a handler lower down the tree; reflect the correct value.",
        "Event type",
        "Put explicitly provided properties onto the event object",
        "Create a timestamp if incoming event doesn't have one",
        "Mark it as fixed",
        "jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding",
        "http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html",
        "Create mouseenter/leave events using mouseover/out and event-time checks",
        "Support: Chrome 15+",
        "For mousenter/leave call the handler if related is outside the target.",
        "NB: No relatedTarget if the mouse left/entered the browser window",
        "Create \"bubbling\" focus and blur events",
        "Support: Firefox, Chrome, Safari",
        "Attach a single capturing handler while someone wants focusin/focusout",
        "INTERNAL",
        "Types can be a map of types/handlers",
        "( types-Object, selector, data )",
        "( types-Object, data )",
        "( types, fn )",
        "( types, selector, fn )",
        "( types, data, fn )",
        "Can use an empty set, since event contains the info",
        "Use same guid so caller can remove using origFn",
        "( event )  dispatched jQuery.Event",
        "( types-object [, selector] )",
        "( types [, fn] )",
        "methods guaranteed to produce a unique set when starting from a unique set",
        "Needed because $( selector, context ) becomes $( context ).find( selector )",
        "If this is a positional/relative selector, check membership in the returned set",
        "so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".",
        "Always skip document fragments",
        "Don't pass non-elements to Sizzle",
        "Determine the position of an element within",
        "the matched set of elements",
        "No argument, return index in parent",
        "index in selector",
        "Locate the position of the desired element",
        "If it receives a jQuery object, the first element is used",
        "Remove duplicates",
        "Reverse order for parents* and prev-derivatives",
        "Implement the identical functionality for filter and not",
        "jshint -W018",
        "checked=\"checked\" or checked",
        "We have to close these tags to support XHTML (#13200)",
        "Support: IE 9",
        "Support: IE 9",
        "keepData is for internal use only--do not document",
        "Prevent memory leaks",
        "Remove any remaining nodes",
        "See if we can take a shortcut and just use innerHTML",
        "Remove element nodes and prevent memory leaks",
        "If using innerHTML throws an exception, use the fallback method",
        "Snapshot the DOM in case .domManip sweeps something relevant into its fragment",
        "Make the changes, replacing each context element with the new content",
        "Don't use the snapshot next if it has moved (#13810)",
        "Allow new content to include elements from the context set",
        "Force removal if there was no new content (e.g., from empty arguments)",
        "Flatten any nested arrays",
        "We can't cloneNode fragments that contain checked, in WebKit",
        "Use the original fragment for the last item instead of the first because it can end up",
        "being emptied incorrectly in certain situations (#8070).",
        "Keep references to cloned scripts for later restoration",
        "Support: QtWebKit",
        "jQuery.merge because core_push.apply(_, arraylike) throws",
        "Reenable scripts",
        "Evaluate executable scripts on first document insertion",
        "Hope ajax is available...",
        "Support: QtWebKit",
        ".get() because core_push.apply(_, arraylike) throws",
        "Support: IE >= 9",
        "Fix Cloning issues",
        "We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2",
        "Copy the events from the original to the clone",
        "Preserve script evaluation history",
        "Return the cloned set",
        "Add nodes directly",
        "Support: QtWebKit",
        "jQuery.merge because core_push.apply(_, arraylike) throws",
        "Convert non-html into a text node",
        "Convert html into DOM nodes",
        "Deserialize a standard representation",
        "Descend through wrappers to the right content",
        "Support: QtWebKit",
        "jQuery.merge because core_push.apply(_, arraylike) throws",
        "Remember the top-level container",
        "Fixes #12346",
        "Support: Webkit, IE",
        "Remove wrapper from fragment",
        "#4087 - If origin and destination elements are the same, and this is",
        "that element, do not do anything",
        "Append to fragment",
        "Preserve script evaluation history",
        "Capture executables",
        "This is a shortcut to avoid jQuery.event.remove's overhead",
        "Discard any remaining `private` data",
        "Discard any remaining `user` data",
        "Support: 1.x compatibility",
        "Manipulating tables requires a tbody",
        "Replace/restore the type attribute of script elements for safe DOM manipulation",
        "Mark scripts as having already been evaluated",
        "1. Copy private data: events, handlers, etc.",
        "2. Copy user data",
        "Support: IE >= 9",
        "Fails to persist the checked state of a cloned checkbox or radio button.",
        "Fails to return the selected option to the default selected state when cloning options",
        "The elements to wrap the target around",
        "swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"",
        "see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display",
        "return a css property mapped to a potentially vendor prefixed property",
        "shortcut for names that are not vendor prefixed",
        "check for vendor prefixed names",
        "isHidden might be called from jQuery#filter function;",
        "in that case, element will be second argument",
        "NOTE: we've included the \"window\" in window.getComputedStyle",
        "because jsdom on node.js will break without it.",
        "Reset the inline display of this element to learn if it is",
        "being hidden by cascaded rules or not",
        "Set elements which have been overridden with display: none",
        "in a stylesheet to whatever the default browser style is",
        "for such an element",
        "Set the display of most of the elements in a second loop",
        "to avoid the constant reflow",
        "Add in style property hooks for overriding the default",
        "behavior of getting and setting a style property",
        "We should always get a number back from opacity",
        "Don't automatically add \"px\" to these possibly-unitless properties",
        "Add in properties whose names you wish to fix before",
        "setting or getting the value",
        "normalize float css property",
        "Get and set the style property on a DOM Node",
        "Don't set styles on text and comment nodes",
        "Make sure that we're working with the right name",
        "gets hook for the prefixed version",
        "followed by the unprefixed version",
        "Check if we're setting a value",
        "convert relative number strings (+= or -=) to relative numbers. #7345",
        "Fixes bug #9237",
        "Make sure that NaN and null values aren't set. See: #7116",
        "If a number was passed in, add 'px' to the (except for certain CSS properties)",
        "Fixes #8908, it can be done more correctly by specifying setters in cssHooks,",
        "but it would mean to define eight (for every problematic property) identical functions",
        "If a hook was provided, use that value, otherwise just set the specified value",
        "If a hook was provided get the non-computed value from there",
        "Otherwise just get the value from the style object",
        "Make sure that we're working with the right name",
        "gets hook for the prefixed version",
        "followed by the unprefixed version",
        "If a hook was provided get the computed value from there",
        "Otherwise, if a way to get the computed value exists, use that",
        "convert \"normal\" to computed value",
        "Return, converting to number if forced or a qualifier was provided and val looks numeric",
        "Support: IE9",
        "getPropertyValue is only needed for .css('filter') in IE9, see #12537",
        "Support: Safari 5.1",
        "A tribute to the \"awesome hack by Dean Edwards\"",
        "Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels",
        "this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values",
        "Remember the original values",
        "Put in the new values to get a computed value out",
        "Revert the changed values",
        "Guard against undefined \"subtract\", e.g., when used as in cssHooks",
        "If we already have the right measurement, avoid augmentation",
        "Otherwise initialize for horizontal or vertical properties",
        "both box models exclude margin, so add it if we want it",
        "border-box includes padding, so remove it if we want content",
        "at this point, extra isn't border nor margin, so remove border",
        "at this point, extra isn't content, so add padding",
        "at this point, extra isn't content nor padding, so add border",
        "Start with offset property, which is equivalent to the border-box value",
        "some non-html elements return undefined for offsetWidth, so check for null/undefined",
        "svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285",
        "MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668",
        "Fall back to computed then uncomputed css if necessary",
        "Computed unit is not pixels. Stop here and return.",
        "we need the check for style in case a browser which returns unreliable values",
        "for getComputedStyle silently falls back to the reliable elem.style",
        "Normalize \"\", auto, and prepare for extra",
        "use the active box-sizing model to add/subtract irrelevant styles",
        "Try to determine the default display value of an element",
        "If the simple way fails, read from inside an iframe",
        "Use the already-created iframe if possible",
        "Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse",
        "Store the correct default display",
        "Called ONLY from within css_defaultDisplay",
        "certain elements can have dimension info if we invisibly show them",
        "however, it must have a current display style that would benefit from this",
        "These hooks cannot be added until DOM ready because the support test",
        "for it is not run until after DOM ready",
        "Support: Android 2.3",
        "Support: Android 2.3",
        "WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right",
        "Work around by temporarily setting element display to inline-block",
        "Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084",
        "getComputedStyle returns percent when specified for top/left/bottom/right",
        "rather than make the css module depend on the offset module, we just check for it here",
        "if curCSS returns percentage, fallback to offset",
        "Support: Opera <= 12.12",
        "Opera reports offsetWidths and offsetHeights less than zero on some elements",
        "These hooks are used by animate to expand properties",
        "assumes a single number if not a string",
        "Can add propHook for \"elements\" to filter or add form elements",
        "Use .is(\":disabled\") so that fieldset[disabled] works",
        "Serialize an array of form elements or a set of",
        "key/values into a query string",
        "If value is a function, invoke it and return its value",
        "Set traditional to true for jQuery <= 1.3.2 behavior.",
        "If an array was passed in, assume that it is an array of form elements.",
        "Serialize the form elements",
        "If traditional, encode the \"old\" way (the way 1.3.2 or older",
        "did it), otherwise encode params recursively.",
        "Return the resulting serialization",
        "Serialize array item.",
        "Treat each array item as a scalar.",
        "Item is non-scalar (array or object), encode its numeric index.",
        "Serialize object item.",
        "Serialize scalar item.",
        "Handle event binding",
        "( namespace ) or ( selector, types [, fn] )",
        "Document location",
        "#7653, #8125, #8152: local protocol detection",
        "Keep a copy of the old load method",
        "Prefilters\n  \t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n  \t * 2) These are called:\n  \t *    - BEFORE asking for a transport\n  \t *    - AFTER param serialization (s.data is a string if s.processData is true)\n  \t * 3) key is the dataType\n  \t * 4) the catchall symbol \"*\" can be used\n  \t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed",
        "Transports bindings\n  \t * 1) key is the dataType\n  \t * 2) the catchall symbol \"*\" can be used\n  \t * 3) selection will start with transport dataType and THEN go to \"*\" if needed",
        "Avoid comment-prolog char sequence (#10098); must appease lint and evade compression",
        "#8138, IE may throw an exception when accessing",
        "a field from window.location if document.domain has been set",
        "Use the href attribute of an A element",
        "since IE will modify it given document.location",
        "Segment location into parts",
        "Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport",
        "dataTypeExpression is optional and defaults to \"*\"",
        "For each dataType in the dataTypeExpression",
        "Prepend if requested",
        "Otherwise append",
        "Base inspection function for prefilters and transports",
        "A special extend for ajax options",
        "that takes \"flat\" options (not to be deep extended)",
        "Fixes #9887",
        "If it's a function",
        "We assume that it's the callback",
        "Otherwise, build a param string",
        "If we have elements to modify, make the request",
        "if \"type\" variable is undefined, then \"GET\" method will be used",
        "Save response for use in complete callback",
        "If a selector was specified, locate the right elements in a dummy div",
        "Exclude scripts to avoid IE 'Permission Denied' errors",
        "Otherwise use the full result",
        "Attach a bunch of functions for handling common AJAX events",
        "Counter for holding the number of active queries",
        "Last-Modified header cache for next request",
        "timeout: 0,\n  \t\tdata: null,\n  \t\tdataType: null,\n  \t\tusername: null,\n  \t\tpassword: null,\n  \t\tcache: null,\n  \t\tthrows: false,\n  \t\ttraditional: false,\n  \t\theaders: {},",
        "Data converters",
        "Keys separate source (or catchall \"*\") and destination types with a single space",
        "Convert anything to text",
        "Text to html (true = no transformation)",
        "Evaluate text as a json expression",
        "Parse text as xml",
        "For options that shouldn't be deep extended:",
        "you can add your own custom options here if",
        "and when you create one that shouldn't be",
        "deep extended (see ajaxExtend)",
        "Creates a full fledged settings object into target",
        "with both ajaxSettings and settings fields.",
        "If target is omitted, writes into ajaxSettings.",
        "Building a settings object",
        "Extending ajaxSettings",
        "Main method",
        "If url is an object, simulate pre-1.5 signature",
        "Force options to be an object",
        "URL without anti-cache param",
        "Response headers",
        "timeout handle",
        "Cross-domain detection vars",
        "To know if global events are to be dispatched",
        "Loop variable",
        "Create the final options object",
        "Callbacks context",
        "Context for global events is callbackContext if it is a DOM node or jQuery collection",
        "Deferreds",
        "Status-dependent callbacks",
        "Headers (they are sent all at once)",
        "The jqXHR state",
        "Default abort message",
        "Fake xhr",
        "Builds headers hashtable if needed",
        "Raw string",
        "Caches the header",
        "Overrides response content-type header",
        "Status-dependent callbacks",
        "Lazy-add the new callback in a way that preserves old ones",
        "Execute the appropriate callbacks",
        "Cancel the request",
        "Attach deferreds",
        "Remove hash character (#7531: and string promotion)",
        "Add protocol if not provided (prefilters might expect it)",
        "Handle falsy url in the settings object (#10093: consistency with old signature)",
        "We also use the url parameter if available",
        "Alias method option to type as per ticket #12004",
        "Extract dataTypes list",
        "A cross-domain request is in order when we have a protocol:host:port mismatch",
        "Convert data if not already a string",
        "Apply prefilters",
        "If request was aborted inside a prefilter, stop there",
        "We can fire global events as of now if asked to",
        "Watch for a new set of requests",
        "Uppercase the type",
        "Determine if request has content",
        "Save the URL in case we're toying with the If-Modified-Since",
        "and/or If-None-Match header later on",
        "More options handling for requests with no content",
        "If data is available, append data to url",
        "#9682: remove data so that it's not used in an eventual retry",
        "Add anti-cache in url if needed",
        "If there is already a '_' parameter, set its value",
        "Otherwise add one to the end",
        "Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.",
        "Set the correct header, if data is being sent",
        "Set the Accepts header for the server, depending on the dataType",
        "Check for headers option",
        "Allow custom headers/mimetypes and early abort",
        "Abort if not done already and return",
        "aborting is no longer a cancellation",
        "Install callbacks on deferreds",
        "Get transport",
        "If no transport, we auto-abort",
        "Send global event",
        "Timeout",
        "Propagate exception as error if not done",
        "Simply rethrow otherwise",
        "Callback for when everything is done",
        "Called once",
        "State is \"done\" now",
        "Clear timeout if it exists",
        "Dereference transport for early garbage collection",
        "(no matter how long the jqXHR object will be used)",
        "Cache response headers",
        "Set readyState",
        "Determine if successful",
        "Get response data",
        "Convert no matter what (that way responseXXX fields are always set)",
        "If successful, handle type chaining",
        "Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.",
        "if no content",
        "if not modified",
        "If we have data, let's convert it",
        "We extract error from statusText",
        "then normalize statusText and status for non-aborts",
        "Set data for the fake xhr object",
        "Success/Error",
        "Status-dependent callbacks",
        "Complete",
        "Handle the global AJAX counter",
        "shift arguments if data argument was omitted",
        "Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response",
        "Remove auto dataType and get content-type in the process",
        "Check if we're dealing with a known content-type",
        "Check to see if we have a response for the expected dataType",
        "Try convertible dataTypes",
        "Or just use first one",
        "If we found a dataType",
        "We add the dataType to the list if needed",
        "and return the corresponding response",
        "Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance",
        "Work with a copy of dataTypes in case we need to modify it for conversion",
        "Create converters map with lowercased keys",
        "Convert to each sequential dataType",
        "Apply the dataFilter if provided",
        "There's only work to do if current dataType is non-auto",
        "Convert response if prev dataType is non-auto and differs from current",
        "Seek a direct converter",
        "If none found, seek a pair",
        "If conv2 outputs current",
        "If prev can be converted to accepted input",
        "Condense equivalence converters",
        "Otherwise, insert the intermediate dataType",
        "Apply converter (if not an equivalence)",
        "Unless errors are allowed to bubble, catch and return them",
        "Install script dataType",
        "Handle cache's special case and crossDomain",
        "Bind script tag hack transport",
        "This transport only deals with cross domain requests",
        "Default jsonp settings",
        "Detect, normalize options and install callbacks for jsonp requests",
        "Handle iff the expected data type is \"jsonp\" or we have a parameter to set",
        "Get callback name, remembering preexisting value associated with it",
        "Insert callback into url or form data",
        "Use data converter to retrieve json after script execution",
        "force json dataType",
        "Install callback",
        "Clean-up function (fires after converters)",
        "Restore preexisting value",
        "Save back as free",
        "make sure that re-using the options doesn't screw things around",
        "save the callback name for future use",
        "Call if it was a function and we have a response",
        "Delegate to script",
        "file protocol always yields status code 0, assume 200",
        "Support: IE9",
        "#1450: sometimes IE returns 1223 when it should be 204",
        "Support: IE9",
        "We need to keep track of outbound xhr and abort them manually",
        "because IE is not smart enough to do it all by itself",
        "Cross domain only allowed if supported through XMLHttpRequest",
        "Apply custom fields if provided",
        "Override mime type if needed",
        "X-Requested-With header",
        "For cross-domain requests, seeing as conditions for a preflight are",
        "akin to a jigsaw puzzle, we simply never set it to be sure.",
        "(it can always be set on a per-request basis or even using ajaxSetup)",
        "For same-domain requests, won't change header if already provided.",
        "Set headers",
        "Callback",
        "file protocol always yields status 0, assume 404",
        "Support: IE9",
        "#11426: When requesting binary data, IE9 will throw an exception",
        "on any attempt to access responseText",
        "Listen to events",
        "Create the abort callback",
        "Do send the request",
        "This may raise an exception which is actually",
        "handled in jQuery.ajax (so no try/catch here)",
        "Starting value computation is required for potential unit mismatches",
        "Trust units reported by jQuery.css",
        "Make sure we update the tween properties later on",
        "Iteratively approximate from a nonzero starting point",
        "If previous iteration zeroed out, double until we get *something*",
        "Use a string for doubling factor so we don't accidentally see scale as unchanged below",
        "Adjust and apply",
        "Update scale, tolerating zero or NaN from tween.cur()",
        "And breaking the loop if scale is unchanged or perfect, or if we've just had enough",
        "Update tween properties",
        "If a +=/-= token was provided, we're doing a relative animation",
        "Animations created synchronously will run synchronously",
        "we're done with this property",
        "don't match elem in the :animated selector",
        "archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)",
        "if we are going to the end, we want to run all the tweens",
        "otherwise we skip this part",
        "resolve when we played the last frame",
        "otherwise, reject",
        "attach callbacks from options",
        "camelCase, specialEasing and expand cssHook pass",
        "not quite $.extend, this wont overwrite keys already present.",
        "also - reusing 'index' from above because we have the correct \"name\"",
        "jshint validthis: true",
        "handle queue: false promises",
        "doing this makes sure that the complete handler will be called",
        "before this completes",
        "height/width overflow pass",
        "Make sure that nothing sneaks out",
        "Record all 3 overflow attributes because IE9-10 do not",
        "change the overflow attribute when overflowX and",
        "overflowY are set to the same value",
        "Set display property to inline-block for height/width",
        "animations on inline elements that are having width/height animated",
        "show/hide pass",
        "If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden",
        "store state if its toggle - enables .stop().toggle() to \"reverse\"",
        "passing an empty string as a 3rd parameter to .css will automatically",
        "attempt a parseFloat and fallback to a string if the parse fails",
        "so, simple values such as \"10px\" are parsed to Float.",
        "complex values such as \"rotate(1rad)\" are returned as is.",
        "Empty strings, null, undefined and \"auto\" are converted to 0.",
        "use step hook for back compat - use cssHook if its there - use .style if its",
        "available and use plain properties where available",
        "Support: IE9",
        "Panic based approach to setting things on disconnected nodes",
        "show any hidden elements after setting opacity to 0",
        "animate to the value specified",
        "Operate on a copy of prop so per-property easing won't be lost",
        "Empty animations, or finishing resolves immediately",
        "start the next in the queue if the last step wasn't forced",
        "timers currently will call their complete callbacks, which will dequeue",
        "but only if they were gotoEnd",
        "enable finishing flag on private data",
        "empty the queue first",
        "look for any active animations, and finish them",
        "look for any animations in the old queue and finish them",
        "turn off finishing flag",
        "Generate parameters to create a standard animation",
        "if we include width, step value is 1 to do all cssExpand values,",
        "if we don't include width, step value is 2 to skip over Left and Right",
        "Generate shortcuts for custom animations",
        "normalize opt.queue - true/undefined/null -> \"fx\"",
        "Queueing",
        "Checks the timer has not already been removed",
        "Default speed",
        "Back Compat <1.8 extension point",
        "Make sure it's not a disconnected DOM node",
        "If we don't have gBCR, just use 0,0 rather than error",
        "BlackBerry 5, iOS 3 (original iPhone)",
        "Set position first, in-case top/left are set even on static elem",
        "Need to be able to calculate position if either top or left is auto and position is either absolute or fixed",
        "Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent",
        "We assume that getBoundingClientRect is available when computed position is fixed",
        "Get *real* offsetParent",
        "Get correct offsets",
        "Add offsetParent borders",
        "Subtract parent offsets and element margins",
        "Create scrollLeft and scrollTop methods",
        "Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods",
        "margin is only for outerHeight, outerWidth",
        "As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there",
        "isn't a whole lot we can do. See pull request at this URL for discussion:",
        "https://github.com/jquery/jquery/pull/764",
        "Get document width or height",
        "Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],",
        "whichever is greatest",
        "Get width or height on the element, requesting but not forcing parseFloat",
        "Set width or height on the element",
        "Limit scope pollution from any deprecated API",
        "(function() {",
        "The number of elements contained in the matched element set",
        "})();",
        "Expose jQuery as module.exports in loaders that implement the Node",
        "module pattern (including browserify). Do not create the global, since",
        "the user will be storing it themselves locally, and globals are frowned",
        "upon in the Node module world.",
        "Register as a named AMD module, since jQuery can be concatenated with other",
        "files that may use define, but not via a proper concatenation script that",
        "understands anonymous AMD modules. A named AMD is safest and most robust",
        "way to register. Lowercase jquery is used because AMD module names are",
        "derived from file names, and jQuery is normally delivered in a lowercase",
        "file name. Do this after creating the global so that if an AMD module wants",
        "to call noConflict to hide this version of jQuery, it will work.",
        "If there is a window object, that at least has a document property,",
        "define jQuery and $ identifiers",
        "Used as a safe reference for `undefined` in pre ES5 environments",
        "Used to pool arrays and objects used internally",
        "Used to generate unique IDs",
        "Used internally to indicate various things",
        "Used to prefix keys to avoid issues with `__proto__` and properties on `Object.prototype`",
        "Used as the size when optimizations are enabled for large arrays",
        "Used as the max size of the `arrayPool` and `objectPool`",
        "Used to match empty string literals in compiled template source",
        "Used to match HTML entities",
        "Used to match regexp flags from their coerced string values",
        "Used to match \"interpolate\" template delimiters",
        "Used to detect functions containing a `this` reference",
        "Used to detect and test whitespace",
        "whitespace",
        "line terminators",
        "unicode category \"Zs\" space separators",
        "Used to match leading whitespace and zeros to be removed",
        "Used to ensure capturing order of template delimiters",
        "Used to match HTML characters",
        "Used to match unescaped characters in compiled string literals",
        "Used to assign default `context` object properties",
        "Used to fix the JScript [[DontEnum]] bug",
        "Used to make template sourceURLs easier to identify",
        "`Object#toString` result shortcuts",
        "Used to identify object classifications that `_.clone` supports",
        "Used to determine if values are of the language type Object",
        "Used to escape characters for inclusion in compiled string literals",
        "Detect free variable `exports`",
        "Detect free variable `module`",
        "Detect free variable `global`, from Node.js or Browserified code, and use it as `window`",
        "--------------------------------------------------------------------------",
        "ensure a stable sort in V8 and other engines",
        "http://code.google.com/p/v8/issues/detail?id=90",
        "IE < 9 presents DOM nodes as `Object` objects except they have `toString`",
        "methods that are `typeof` \"string\" and still can coerce nodes to strings",
        "no operation performed",
        "--------------------------------------------------------------------------",
        "Avoid issues with some ES3 environments that attempt to use values, named",
        "after built-in constructors like `Object`, for the creation of literals.",
        "ES5 clears this up by stating that literals must use built-in constructors.",
        "See http://es5.github.com/#x11.1.5.",
        "Native constructor references",
        "Used for native method references",
        "Used to restore the original `_` reference in `noConflict`",
        "Used to detect if a method is native",
        "Native method shortcuts",
        "Native method shortcuts for methods with the same name as other `lodash` methods",
        "Detect various environments",
        "Used to lookup a built-in constructor by [[Class]]",
        "Used to avoid iterating non-enumerable properties in IE < 9",
        "--------------------------------------------------------------------------",
        "don't wrap if already wrapped, even if wrapped by a different `lodash` constructor",
        "ensure `new lodashWrapper` is an instance of `lodash`",
        "--------------------------------------------------------------------------",
        "the `iterable` may be reassigned by the `top` snippet",
        "assign the `result` variable an initial value",
        "exit early if the first argument is falsey",
        "add code before the iteration branches",
        "array-like iteration:",
        "add support for accessing string characters by index if needed",
        "iterate over the array-like value",
        "object iteration:",
        "add support for iterating over `arguments` objects if needed",
        "avoid iterating over `prototype` properties in older Firefox, Opera, and Safari",
        "avoid iterating over `Error.prototype` properties in older IE and Safari",
        "define conditions used in the loop",
        "iterate own properties using `Object.keys`",
        "else using a for-in loop",
        "Because IE < 9 can't set the `[[Enumerable]]` attribute of an",
        "existing property and the `constructor` property of a prototype",
        "defaults to non-enumerable, Lo-Dash skips the `constructor`",
        "property when it infers it's iterating over a `prototype` object.",
        "add code to the bottom of the iteration function",
        "finally, return the `result`",
        "Reusable iterator options for `assign` and `defaults`",
        "Reusable iterator options shared by `each`, `forIn`, and `forOwn`",
        "Reusable iterator options for `forIn` and `forOwn`",
        "--------------------------------------------------------------------------",
        "juggle arguments",
        "`Function#bind` spec",
        "http://es5.github.com/#x15.3.4.5",
        "ensure `new bound` is an instance of `func`",
        "mimic the constructor's `return` behavior",
        "http://es5.github.com/#x13.2.2",
        "data properties",
        "iterator options",
        "merge options into a template data object",
        "create the function factory",
        "return the compiled function",
        "fallback for browsers without `Object.create`",
        "juggle arguments",
        "avoid non Object objects, `arguments` objects, and DOM elements",
        "IE < 9 iterates inherited properties before own properties. If the first",
        "iterated property is an object's own property then there are no inherited",
        "enumerable properties.",
        "In most environments an object's own properties are iterated before",
        "its inherited properties. If the last iterated property is an object's",
        "own property then there are no inherited enumerable properties.",
        "--------------------------------------------------------------------------",
        "fallback for browsers that can't detect `arguments` objects by [[Class]]",
        "Used to convert HTML entities to characters",
        "--------------------------------------------------------------------------",
        "allows working with \"Collections\" methods without using their `callback`",
        "argument, `index|key`, for this method's `callback`",
        "inspect [[Class]]",
        "shallow clone",
        "check for circular references and return corresponding clone",
        "init cloned object",
        "add array properties assigned by `RegExp#exec`",
        "add the source value to the stack of traversed objects",
        "and associate it with its clone",
        "recursively populate clone (susceptible to call stack limits)",
        "used to indicate that when comparing objects, `a` has at least the properties of `b`",
        "exit early for identical values",
        "treat `+0` vs. `-0` as not equal",
        "exit early for unlike primitive values",
        "exit early for `null` and `undefined`, avoiding ES3's Function#call behavior",
        "http://es5.github.com/#x15.3.4.4",
        "compare [[Class]] names",
        "coerce dates and booleans to numbers, dates to milliseconds and booleans",
        "to `1` or `0`, treating invalid dates coerced to `NaN` as not equal",
        "treat `NaN` vs. `NaN` as equal",
        "but treat `+0` vs. `-0` as not equal",
        "coerce regexes to strings (http://es5.github.com/#x15.10.6.4)",
        "treat string primitives and their corresponding object instances as equal",
        "unwrap any `lodash` wrapped values",
        "exit for functions and DOM nodes",
        "in older versions of Opera, `arguments` objects have `Array` constructors",
        "non `Object` object instances with different constructors are not equal",
        "assume cyclic structures are equal",
        "the algorithm for detecting cyclic structures is adapted from ES 5.1",
        "section 15.12.3, abstract operation `JO` (http://es5.github.com/#x15.12.3)",
        "add `a` and `b` to the stack of traversed objects",
        "recursively compare objects and arrays (susceptible to call stack limits)",
        "compare lengths to determine if a deep comparison is necessary",
        "deep compare the contents, ignoring non-numeric properties",
        "deep compare objects using `forIn`, instead of `forOwn`, to avoid `Object.keys`",
        "which, in this case, is more costly",
        "count the number of properties.",
        "deep compare each property value.",
        "ensure both objects have the same number of properties",
        "`size` will be `-1` if `a` has more properties than `b`",
        "fallback for older versions of Chrome and Safari",
        "check if the value is the ECMAScript language type of Object",
        "http://es5.github.com/#x8",
        "and avoid a V8 bug",
        "http://code.google.com/p/v8/issues/detail?id=2291",
        "`NaN` as a primitive is the only value that is not equal to itself",
        "(perform the [[Class]] check first to avoid errors with some host objects in IE)",
        "allows working with `_.reduce` and `_.reduceRight` without",
        "using their `callback` arguments, `index|key` and `collection`",
        "avoid merging previously merged cyclic sources",
        "add `source` and associated `value` to the stack of traversed objects",
        "recursively merge objects and arrays (susceptible to call stack limits)",
        "--------------------------------------------------------------------------",
        "--------------------------------------------------------------------------",
        "recursively flatten arrays (susceptible to call stack limits)",
        "use `Array(length)` so V8 will avoid the slower \"dictionary\" mode",
        "http://youtu.be/XAqIpGU8ZZk#t=17m25s",
        "explicitly reference `identity` for better inlining in Firefox",
        "--------------------------------------------------------------------------",
        "use `Function#bind` if it exists and is fast",
        "(in V8 `Function#bind` is slower except when partially applied)",
        "avoid issues with Titanium and `undefined` timeout ids",
        "https://github.com/appcelerator/titanium_mobile/blob/3_1_0_GA/android/titanium/src/java/ti/modules/titanium/TitaniumModule.java#L185-L192",
        "use `setImmediate` if it's available in Node.js",
        "clear the `func` variable so the function may be garbage collected",
        "--------------------------------------------------------------------------",
        "Firefox and Opera still follow the ES3 specified implementation of `parseInt`",
        "based on John Resig's `tmpl` implementation",
        "http://ejohn.org/blog/javascript-micro-templating/",
        "and Laura Doktorova's doT.js",
        "https://github.com/olado/doT",
        "avoid missing dependencies when `iteratorTemplate` is not defined",
        "compile the regexp to match each delimiter",
        "escape characters that cannot be included in string literals",
        "replace delimiters with snippets",
        "the JS engine embedded in Adobe products requires returning the `match`",
        "string in order to produce the correct `offset` value",
        "if `variable` is not specified, wrap a with-statement around the generated",
        "code to add the data object to the top of the scope chain",
        "cleanup code by stripping empty strings",
        "frame code as the function body",
        "Use a sourceURL for easier debugging and wrap in a multi-line comment to",
        "avoid issues with Narwhal, IE conditional compilation, and the JS engine",
        "embedded in Adobe products.",
        "http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl",
        "provide the compiled function's source via its `toString` method, in",
        "supported environments, or the `source` property as a convenience for",
        "inlining compiled templates during the build process",
        "--------------------------------------------------------------------------",
        "--------------------------------------------------------------------------",
        "add functions that return wrapped values when chaining",
        "add aliases",
        "add functions to `lodash.prototype`",
        "add Underscore compat",
        "--------------------------------------------------------------------------",
        "add functions that return unwrapped values when chaining",
        "add aliases",
        "--------------------------------------------------------------------------",
        "add functions capable of returning wrapped and unwrapped values when chaining",
        "add aliases",
        "--------------------------------------------------------------------------",
        "add \"Chaining\" functions to the wrapper",
        "add `Array` functions that return unwrapped values",
        "add `Array` functions that return the wrapped value",
        "add `Array` functions that return new wrapped values",
        "avoid array-like object bugs with `Array#shift` and `Array#splice`",
        "in Firefox < 10 and IE < 9",
        "add pseudo private property to be used and removed during the build process",
        "--------------------------------------------------------------------------",
        "expose Lo-Dash",
        "some AMD build optimizers, like r.js, check for specific condition patterns like the following:",
        "Expose Lo-Dash to the global object even when an AMD loader is present in",
        "case Lo-Dash was injected by a third-party script and not intended to be",
        "loaded as a module. The global assignment can be reverted in the Lo-Dash",
        "module via its `noConflict()` method.",
        "define as an anonymous module so, through path mapping, it can be",
        "referenced as the \"underscore\" module",
        "check for `exports` after `define` in case a build optimizer adds an `exports` object",
        "in Node.js or RingoJS v0.8.0+",
        "in Narwhal or RingoJS v0.7.0-",
        "in a browser or Rhino",
        "!\n   * mustache.js - Logic-less {{mustache}} templates with JavaScript\n   * http://github.com/janl/mustache.js",
        "global define: false",
        "CommonJS",
        "AMD",
        "<script>",
        "Workaround for https://issues.apache.org/jira/browse/COUCHDB-577",
        "See https://github.com/janl/mustache.js/issues/189",
        "This function is used to render an artbitrary template",
        "in the current context by higher-order functions.",
        "Use JavaScript's definition of falsy. Include empty arrays.",
        "See https://github.com/janl/mustache.js/issues/186",
        "Stack to hold section tokens",
        "Buffer to hold the tokens",
        "Indices of whitespace tokens on the current line",
        "Is there a {{tag}} on the current line?",
        "Is there a non-space char on the current line?",
        "Strips all whitespace tokens array for the current line",
        "if there was a {{#tag}} on it and otherwise only space.",
        "Match any text between tags.",
        "Check for whitespace on the current line.",
        "Match the opening tag.",
        "Get the tag type.",
        "Get the tag value.",
        "Match the closing tag.",
        "Check section nesting.",
        "Set the tags for the next time around.",
        "Make sure there are no open sections when we're done.",
        "Export the escaping function so that the user may override it.",
        "See https://github.com/janl/mustache.js/issues/244",
        "All Mustache.* functions use this writer.",
        "This is here for backwards compatibility with 0.4.x.",
        "Backbone.js 1.1.2",
        "(c) 2010-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors",
        "Backbone may be freely distributed under the MIT license.",
        "For all details and documentation:",
        "http://backbonejs.org",
        "Set up Backbone appropriately for the environment. Start with AMD.",
        "Export global even in AMD case in case this script is loaded with",
        "others that may still expect a global Backbone.",
        "Next for Node.js or CommonJS. jQuery may not be needed as a module.",
        "Finally, as a browser global.",
        "Initial Setup",
        "-------------",
        "Save the previous value of the `Backbone` variable, so that it can be",
        "restored later on, if `noConflict` is used.",
        "Create local references to array methods we'll want to use later.",
        "Current version of the library. Keep in sync with `package.json`.",
        "For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns",
        "the `$` variable.",
        "Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable",
        "to its previous owner. Returns a reference to this Backbone object.",
        "Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option",
        "will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and",
        "set a `X-Http-Method-Override` header.",
        "Turn on `emulateJSON` to support legacy servers that can't deal with direct",
        "`application/json` requests ... will encode the body as",
        "`application/x-www-form-urlencoded` instead and will send the model in a",
        "form param named `model`.",
        "Backbone.Events",
        "---------------",
        "A module that can be mixed in to *any object* in order to provide it with",
        "custom events. You may bind with `on` or remove with `off` callback",
        "functions to an event; `trigger`-ing an event fires all callbacks in",
        "succession.",
        "",
        "var object = {};",
        "_.extend(object, Backbone.Events);",
        "object.on('expand', function(){ alert('expanded'); });",
        "object.trigger('expand');",
        "",
        "Bind an event to a `callback` function. Passing `\"all\"` will bind",
        "the callback to all events fired.",
        "Bind an event to only be triggered a single time. After the first time",
        "the callback is invoked, it will be removed.",
        "Remove one or many callbacks. If `context` is null, removes all",
        "callbacks with that function. If `callback` is null, removes all",
        "callbacks for the event. If `name` is null, removes all bound",
        "callbacks for all events.",
        "Trigger one or many events, firing all bound callbacks. Callbacks are",
        "passed the same arguments as `trigger` is, apart from the event name",
        "(unless you're listening on `\"all\"`, which will cause your callback to",
        "receive the true name of the event as the first argument).",
        "Tell this object to stop listening to either specific events ... or",
        "to every object it's currently listening to.",
        "Regular expression used to split event strings.",
        "Implement fancy features of the Events API such as multiple event",
        "names `\"change blur\"` and jQuery-style event maps `{change: action}`",
        "in terms of the existing API.",
        "Handle event maps.",
        "Handle space separated event names.",
        "A difficult-to-believe, but optimized internal dispatch function for",
        "triggering events. Tries to keep the usual cases speedy (most internal",
        "Backbone events have 3 arguments).",
        "Inversion-of-control versions of `on` and `once`. Tell *this* object to",
        "listen to an event in another object ... keeping track of what it's",
        "listening to.",
        "Aliases for backwards compatibility.",
        "Allow the `Backbone` object to serve as a global event bus, for folks who",
        "want global \"pubsub\" in a convenient place.",
        "Backbone.Model",
        "--------------",
        "Backbone **Models** are the basic data object in the framework --",
        "frequently representing a row in a table in a database on your server.",
        "A discrete chunk of data and a bunch of useful, related methods for",
        "performing computations and transformations on that data.",
        "Create a new model with the specified attributes. A client id (`cid`)",
        "is automatically generated and assigned for you.",
        "Attach all inheritable methods to the Model prototype.",
        "A hash of attributes whose current and previous value differ.",
        "The value returned during the last failed validation.",
        "The default name for the JSON `id` attribute is `\"id\"`. MongoDB and",
        "CouchDB users may want to set this to `\"_id\"`.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "Return a copy of the model's `attributes` object.",
        "Proxy `Backbone.sync` by default -- but override this if you need",
        "custom syncing semantics for *this* particular model.",
        "Get the value of an attribute.",
        "Get the HTML-escaped value of an attribute.",
        "Returns `true` if the attribute contains a value that is not null",
        "or undefined.",
        "Set a hash of model attributes on the object, firing `\"change\"`. This is",
        "the core primitive operation of a model, updating the data and notifying",
        "anyone who needs to know about the change in state. The heart of the beast.",
        "Handle both `\"key\", value` and `{key: value}` -style arguments.",
        "Run validation.",
        "Extract attributes and options.",
        "Check for changes of `id`.",
        "For each `set` attribute, update or delete the current value.",
        "Trigger all relevant attribute changes.",
        "You might be wondering why there's a `while` loop here. Changes can",
        "be recursively nested within `\"change\"` events.",
        "Remove an attribute from the model, firing `\"change\"`. `unset` is a noop",
        "if the attribute doesn't exist.",
        "Clear all attributes on the model, firing `\"change\"`.",
        "Determine if the model has changed since the last `\"change\"` event.",
        "If you specify an attribute name, determine if that attribute has changed.",
        "Return an object containing all the attributes that have changed, or",
        "false if there are no changed attributes. Useful for determining what",
        "parts of a view need to be updated and/or what attributes need to be",
        "persisted to the server. Unset attributes will be set to undefined.",
        "You can also pass an attributes object to diff against the model,",
        "determining if there *would be* a change.",
        "Get the previous value of an attribute, recorded at the time the last",
        "`\"change\"` event was fired.",
        "Get all of the attributes of the model at the time of the previous",
        "`\"change\"` event.",
        "Fetch the model from the server. If the server's representation of the",
        "model differs from its current attributes, they will be overridden,",
        "triggering a `\"change\"` event.",
        "Set a hash of model attributes, and sync the model to the server.",
        "If the server returns an attributes hash that differs, the model's",
        "state will be `set` again.",
        "Handle both `\"key\", value` and `{key: value}` -style arguments.",
        "If we're not waiting and attributes exist, save acts as",
        "`set(attr).save(null, opts)` with validation. Otherwise, check if",
        "the model will be valid when the attributes, if any, are set.",
        "Set temporary attributes if `{wait: true}`.",
        "After a successful server-side save, the client is (optionally)",
        "updated with the server-side state.",
        "Ensure attributes are restored during synchronous saves.",
        "Restore attributes.",
        "Destroy this model on the server if it was already persisted.",
        "Optimistically removes the model from its collection, if it has one.",
        "If `wait: true` is passed, waits for the server to respond before removal.",
        "Default URL for the model's representation on the server -- if you're",
        "using Backbone's restful methods, override this to change the endpoint",
        "that will be called.",
        "the model. The default implementation is just to pass the response along.",
        "Create a new model with identical attributes to this one.",
        "A model is new if it has never been saved to the server, and lacks an id.",
        "Check if the model is currently in a valid state.",
        "Run validation against the next complete set of model attributes,",
        "returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.",
        "Underscore methods that we want to implement on the Model.",
        "Mix in each Underscore method as a proxy to `Model#attributes`.",
        "Backbone.Collection",
        "-------------------",
        "If models tend to represent a single row of data, a Backbone Collection is",
        "more analagous to a table full of data ... or a small slice or page of that",
        "table, or a collection of rows that belong together for a particular reason",
        "-- all of the messages in this particular folder, all of the documents",
        "belonging to this particular author, and so on. Collections maintain",
        "indexes of their models, both in order, and for lookup by `id`.",
        "Create a new **Collection**, perhaps to contain a specific type of `model`.",
        "If a `comparator` is specified, the Collection will maintain",
        "its models in sort order, as they're added and removed.",
        "Default options for `Collection#set`.",
        "Define the Collection's inheritable methods.",
        "The default model for a collection is just a **Backbone.Model**.",
        "This should be overridden in most cases.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "The JSON representation of a Collection is an array of the",
        "models' attributes.",
        "Proxy `Backbone.sync` by default.",
        "Add a model, or list of models to the set.",
        "Remove a model, or a list of models from the set.",
        "Update a collection by `set`-ing a new list of models, adding new ones,",
        "removing models that are no longer present, and merging models that",
        "already exist in the collection, as necessary. Similar to **Model#set**,",
        "the core operation for updating the data contained by the collection.",
        "Turn bare objects into model references, and prevent invalid models",
        "from being added.",
        "If a duplicate is found, prevent it from being added and",
        "optionally merge it into the existing model.",
        "If this is a new, valid model, push it to the `toAdd` list.",
        "Do not add multiple models with the same `id`.",
        "Remove nonexistent models if appropriate.",
        "See if sorting is needed, update `length` and splice in new models.",
        "Silently sort the collection if appropriate.",
        "Unless silenced, it's time to fire all appropriate add/sort events.",
        "Return the added (or merged) model (or models).",
        "When you have more items than you want to add or remove individually,",
        "you can reset the entire set with a new list of models, without firing",
        "any granular `add` or `remove` events. Fires `reset` when finished.",
        "Useful for bulk operations and optimizations.",
        "Add a model to the end of the collection.",
        "Remove a model from the end of the collection.",
        "Add a model to the beginning of the collection.",
        "Remove a model from the beginning of the collection.",
        "Slice out a sub-array of models from the collection.",
        "Get a model from the set by id.",
        "Get the model at the given index.",
        "Return models with matching attributes. Useful for simple cases of",
        "`filter`.",
        "Return the first model with matching attributes. Useful for simple cases",
        "of `find`.",
        "Force the collection to re-sort itself. You don't need to call this under",
        "normal circumstances, as the set will maintain sort order as each item",
        "is added.",
        "Run sort based on type of `comparator`.",
        "Pluck an attribute from each model in the collection.",
        "Fetch the default set of models for this collection, resetting the",
        "collection when they arrive. If `reset: true` is passed, the response",
        "data will be passed through the `reset` method instead of `set`.",
        "Create a new instance of a model in this collection. Add the model to the",
        "collection immediately, unless `wait: true` is passed, in which case we",
        "wait for the server to agree.",
        "collection. The default implementation is just to pass it through.",
        "Create a new collection with an identical list of models as this one.",
        "Private method to reset all internal state. Called when the collection",
        "is first initialized or reset.",
        "Prepare a hash of attributes (or other model) to be added to this",
        "collection.",
        "Internal method to create a model's ties to a collection.",
        "Internal method to sever a model's ties to a collection.",
        "Internal method called every time a model in the set fires an event.",
        "Sets need to update their indexes when models change ids. All other",
        "events simply proxy through. \"add\" and \"remove\" events that originate",
        "in other collections are ignored.",
        "Underscore methods that we want to implement on the Collection.",
        "90% of the core usefulness of Backbone Collections is actually implemented",
        "right here:",
        "Mix in each Underscore method as a proxy to `Collection#models`.",
        "Underscore methods that take a property name as an argument.",
        "Use attributes instead of properties.",
        "Backbone.View",
        "-------------",
        "Backbone Views are almost more convention than they are actual code. A View",
        "is simply a JavaScript object that represents a logical chunk of UI in the",
        "DOM. This might be a single item, an entire list, a sidebar or panel, or",
        "even the surrounding frame which wraps your whole app. Defining a chunk of",
        "UI as a **View** allows you to define your DOM events declaratively, without",
        "having to worry about render order ... and makes it easy for the view to",
        "react to specific changes in the state of your models.",
        "Creating a Backbone.View creates its initial element outside of the DOM,",
        "if an existing element is not provided...",
        "Cached regex to split keys for `delegate`.",
        "List of view options to be merged as properties.",
        "Set up all inheritable **Backbone.View** properties and methods.",
        "The default `tagName` of a View's element is `\"div\"`.",
        "jQuery delegate for element lookup, scoped to DOM elements within the",
        "current view. This should be preferred to global lookups where possible.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "to populate its element (`this.el`), with the appropriate HTML. The",
        "convention is for **render** to always return `this`.",
        "Remove this view by taking the element out of the DOM, and removing any",
        "applicable Backbone.Events listeners.",
        "Change the view's element (`this.el` property), including event",
        "re-delegation.",
        "Set callbacks, where `this.events` is a hash of",
        "",
        "",
        "{",
        "'mousedown .title':  'edit',",
        "'click .button':     'save',",
        "'click .open':       function(e) { ... }",
        "}",
        "",
        "pairs. Callbacks will be bound to the view, with `this` set properly.",
        "Uses event delegation for efficiency.",
        "Omitting the selector binds the event to `this.el`.",
        "This only works for delegate-able events: not `focus`, `blur`, and",
        "not `change`, `submit`, and `reset` in Internet Explorer.",
        "Clears all callbacks previously bound to the view with `delegateEvents`.",
        "You usually don't need to use this, but may wish to if you have multiple",
        "Backbone views attached to the same DOM element.",
        "Ensure that the View has a DOM element to render into.",
        "If `this.el` is a string, pass it through `$()`, take the first",
        "matching element, and re-assign it to `el`. Otherwise, create",
        "an element from the `id`, `className` and `tagName` properties.",
        "Backbone.sync",
        "-------------",
        "Override this function to change the manner in which Backbone persists",
        "models to the server. You will be passed the type of request, and the",
        "model in question. By default, makes a RESTful Ajax request",
        "to the model's `url()`. Some possible customizations could be:",
        "",
        "",
        "Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests",
        "as `POST`, with a `_method` parameter containing the true HTTP method,",
        "as well as all requests with the body as `application/x-www-form-urlencoded`",
        "instead of `application/json` with the model in a param named `model`.",
        "Useful when interfacing with server-side languages like **PHP** that make",
        "it difficult to read the body of `PUT` requests.",
        "Default options, unless specified.",
        "Default JSON-request options.",
        "Ensure that we have a URL.",
        "Ensure that we have the appropriate request data.",
        "For older servers, emulate JSON by encoding the request into an HTML-form.",
        "For older servers, emulate HTTP by mimicking the HTTP method with `_method`",
        "And an `X-HTTP-Method-Override` header.",
        "Don't process data on a non-GET request.",
        "If we're sending a `PATCH` request, and we're in an old Internet Explorer",
        "that still has ActiveX enabled by default, override jQuery to use that",
        "for XHR instead. Remove this line when jQuery supports `PATCH` on IE8.",
        "Make the request, allowing the user to override any Ajax options.",
        "Map from CRUD to HTTP for our default `Backbone.sync` implementation.",
        "Set the default implementation of `Backbone.ajax` to proxy through to `$`.",
        "Override this if you'd like to use a different library.",
        "Backbone.Router",
        "---------------",
        "Routers map faux-URLs to actions, and fire events when routes are",
        "matched. Creating a new one sets its `routes` hash, if not set statically.",
        "Cached regular expressions for matching named param parts and splatted",
        "parts of route strings.",
        "Set up all inheritable **Backbone.Router** properties and methods.",
        "Initialize is an empty function by default. Override it with your own",
        "initialization logic.",
        "Manually bind a single named route to a callback. For example:",
        "",
        "this.route('search/:query/p:num', 'search', function(query, num) {",
        "...",
        "});",
        "",
        "Execute a route handler with the provided parameters.  This is an",
        "excellent place to do pre-route setup or post-route cleanup.",
        "Simple proxy to `Backbone.history` to save a fragment into the history.",
        "Bind all defined routes to `Backbone.history`. We have to reverse the",
        "order of the routes here to support behavior where the most general",
        "routes can be defined at the bottom of the route map.",
        "Convert a route string into a regular expression, suitable for matching",
        "against the current location hash.",
        "Given a route, and a URL fragment that it matches, return the array of",
        "extracted decoded parameters. Empty or unmatched parameters will be",
        "treated as `null` to normalize cross-browser behavior.",
        "Don't decode the search params.",
        "Backbone.History",
        "----------------",
        "Handles cross-browser history management, based on either",
        "[pushState](http://diveintohtml5.info/history.html) and real URLs, or",
        "[onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)",
        "and URL fragments. If the browser supports neither (old IE, natch),",
        "falls back to polling.",
        "Ensure that `History` can be used outside of the browser.",
        "Cached regex for stripping a leading hash/slash and trailing space.",
        "Cached regex for stripping leading and trailing slashes.",
        "Cached regex for detecting MSIE.",
        "Cached regex for removing a trailing slash.",
        "Cached regex for stripping urls of hash.",
        "Has the history handling already been started?",
        "Set up all inheritable **Backbone.History** properties and methods.",
        "The default interval to poll for hash changes, if necessary, is",
        "twenty times a second.",
        "Are we at the app root?",
        "Gets the true hash value. Cannot use location.hash directly due to bug",
        "in Firefox where location.hash will always be decoded.",
        "Get the cross-browser normalized URL fragment, either from the URL,",
        "the hash, or the override.",
        "Start the hash change handling, returning `true` if the current URL matches",
        "an existing route, and `false` otherwise.",
        "Figure out the initial configuration. Do we need an iframe?",
        "Is pushState desired ... is it available?",
        "Normalize root to always include a leading and trailing slash.",
        "Depending on whether we're using pushState or hashes, and whether",
        "'onhashchange' is supported, determine how we check the URL state.",
        "Determine if we need to change the base url, for a pushState link",
        "opened by a non-pushState browser.",
        "Transition from hashChange to pushState or vice versa if both are",
        "requested.",
        "If we've started off with a route from a `pushState`-enabled",
        "browser, but we're currently in a browser that doesn't support it...",
        "Return immediately as browser will do redirect to new url",
        "Or if we've started out with a hash-based route, but we're currently",
        "in a browser where it could be `pushState`-based instead...",
        "Disable Backbone.history, perhaps temporarily. Not useful in a real app,",
        "but possibly useful for unit testing Routers.",
        "Add a route to be tested when the fragment changes. Routes added later",
        "may override previous routes.",
        "Checks the current URL to see if it has changed, and if it has,",
        "calls `loadUrl`, normalizing across the hidden iframe.",
        "Attempt to load the current URL fragment. If a route succeeds with a",
        "match, returns `true`. If no defined routes matches the fragment,",
        "returns `false`.",
        "Save a fragment into the hash history, or replace the URL state if the",
        "'replace' option is passed. You are responsible for properly URL-encoding",
        "the fragment in advance.",
        "",
        "The options object can contain `trigger: true` if you wish to have the",
        "route callback be fired (not usually desirable), or `replace: true`, if",
        "you wish to modify the current URL without adding an entry to the history.",
        "Strip the hash for matching.",
        "Don't include a trailing slash on the root.",
        "If pushState is available, we use it to set the fragment as a real URL.",
        "If hash changes haven't been explicitly disabled, update the hash",
        "fragment to store history.",
        "Opening and closing the iframe tricks IE7 and earlier to push a",
        "history entry on hash-tag change.  When replace is true, we don't",
        "want this.",
        "If you've told us that you explicitly don't want fallback hashchange-",
        "based history, then `navigate` becomes a page refresh.",
        "Update the hash location, either replacing the current entry, or adding",
        "a new one to the browser history.",
        "Some browsers require that `hash` contains a leading #.",
        "Create the default Backbone.history.",
        "Helpers",
        "-------",
        "Helper function to correctly set up the prototype chain, for subclasses.",
        "Similar to `goog.inherits`, but uses a hash of prototype properties and",
        "class properties to be extended.",
        "The constructor function for the new subclass is either defined by you",
        "(the \"constructor\" property in your `extend` definition), or defaulted",
        "by us to simply call the parent's constructor.",
        "Add static properties to the constructor function, if supplied.",
        "Set the prototype chain to inherit from `parent`, without calling",
        "`parent`'s constructor function.",
        "Add prototype properties (instance properties) to the subclass,",
        "if supplied.",
        "Set a convenience property in case the parent's prototype is needed",
        "later.",
        "Set up inheritance for the model, collection, router, view and history.",
        "Throw an error when a URL is needed, and none is supplied.",
        "Wrap an optional error callback with a fallback error event.",
        "MarionetteJS (Backbone.Marionette)",
        "----------------------------------",
        "v1.2.3",
        "",
        "Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.",
        "Distributed under MIT license",
        "",
        "http://marionettejs.com",
        "!\n   * Includes BabySitter\n   * https://github.com/marionettejs/backbone.babysitter/\n   *\n   * Includes Wreqr\n   * https://github.com/marionettejs/backbone.wreqr/",
        "Backbone.BabySitter",
        "-------------------",
        "v0.0.6",
        "",
        "Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.",
        "Distributed under MIT license",
        "",
        "http://github.com/babysitterjs/backbone.babysitter",
        "Backbone.ChildViewContainer",
        "---------------------------",
        "",
        "Provide a container to store, retrieve and",
        "shut down child views.",
        "Container Constructor",
        "---------------------",
        "Container Methods",
        "-----------------",
        "Add a view to this container. Stores the view",
        "by `cid` and makes it searchable by the model",
        "cid (and model itself). Optionally specify",
        "a custom key to store an retrieve the view.",
        "store the view",
        "index it by model",
        "index by custom",
        "Find a view by the model that was attached to",
        "it. Uses the model's `cid` to find it.",
        "Find a view by the `cid` of the model that was attached to",
        "it. Uses the model's `cid` to find the view `cid` and",
        "retrieve the view using it.",
        "Find a view by a custom indexer.",
        "Find by index. This is not guaranteed to be a",
        "stable index.",
        "retrieve a view by it's `cid` directly",
        "Remove a view",
        "delete model index",
        "delete custom index",
        "remove the view from the container",
        "update the length",
        "Call a method on every view in the container,",
        "passing parameters to the call method one at a",
        "time, like `function.call`.",
        "Apply a method on every view in the container,",
        "passing parameters to the call method one at a",
        "time, like `function.apply`.",
        "Update the `.length` attribute on this container",
        "Borrowing this code from Backbone.Collection:",
        "http://backbonejs.org/docs/backbone.html#section-106",
        "",
        "Mix in methods from Underscore, for iteration, and other",
        "collection related features.",
        "return the public API",
        "Backbone.Wreqr (Backbone.Marionette)",
        "----------------------------------",
        "v0.2.0",
        "",
        "Copyright (c)2013 Derick Bailey, Muted Solutions, LLC.",
        "Distributed under MIT license",
        "",
        "http://github.com/marionettejs/backbone.wreqr",
        "Handlers",
        "--------",
        "A registry of functions to call, given a name",
        "Constructor",
        "-----------",
        "Instance Members",
        "----------------",
        "Add multiple handlers using an object literal configuration",
        "Add a handler for the given name, with an",
        "optional context to run the handler within",
        "Determine whether or not a handler is registered",
        "Get the currently registered handler for",
        "the specified name. Throws an exception if",
        "no handler is found.",
        "Remove a handler for the specified name",
        "Remove all handlers from this registry",
        "Wreqr.CommandStorage",
        "--------------------",
        "",
        "Store and retrieve commands for execution.",
        "Constructor function",
        "Instance methods",
        "Get an object literal by command name, that contains",
        "the `commandName` and the `instances` of all commands",
        "represented as an array of arguments to process",
        "we don't have it, so add it",
        "build the configuration",
        "store it",
        "Add a command by name, to the storage and store the",
        "args for the command",
        "Clear all commands for the given `commandName`",
        "Wreqr.Commands",
        "--------------",
        "",
        "A simple command pattern implementation. Register a command",
        "handler and execute it.",
        "default storage type",
        "Execute a named command with the supplied args",
        "Internal method to handle bulk execution of stored commands",
        "loop through and execute all the stored command instances",
        "Internal method to initialize storage either from the type's",
        "`storageType` or the instance `options.storageType`.",
        "Wreqr.RequestResponse",
        "---------------------",
        "",
        "A simple request/response implementation. Register a",
        "request handler, and return a response from it",
        "Event Aggregator",
        "----------------",
        "A pub-sub object that can be used to decouple various parts",
        "of an application through event-driven architecture.",
        "Copy the `extend` function used by Backbone's classes",
        "Copy the basic Backbone.Events on to the event aggregator",
        "Define and export the Marionette namespace",
        "Get the DOM manipulator for later use",
        "Helpers",
        "-------",
        "For slicing `arguments` in functions",
        "Marionette.extend",
        "-----------------",
        "Borrow the Backbone `extend` method so we can use it as needed",
        "Marionette.getOption",
        "--------------------",
        "Retrieve an object, function or other value from a target",
        "object or its `options`, with `options` taking precedence.",
        "Trigger an event and/or a corresponding method name. Examples:",
        "",
        "`this.triggerMethod(\"foo\")` will trigger the \"foo\" event and",
        "call the \"onFoo\" method.",
        "",
        "`this.triggerMethod(\"foo:bar\") will trigger the \"foo:bar\" event and",
        "call the \"onFooBar\" method.",
        "split the event name on the :",
        "take the event section (\"section1:section2:section3\")",
        "and turn it in to uppercase name",
        "actual triggerMethod name",
        "get the method name from the event name",
        "trigger the event, if a trigger method exists",
        "call the onMethodName if it exists",
        "pass all arguments, except the event name",
        "DOMRefresh",
        "----------",
        "",
        "Monitor a view's state, and after it has been rendered and shown",
        "in the DOM, trigger a \"dom:refresh\" event every time it is",
        "re-rendered.",
        "track when the view has been shown in the DOM,",
        "using a Marionette.Region (or by other means of triggering \"show\")",
        "track when the view has been rendered",
        "Trigger the \"dom:refresh\" event and corresponding \"onDomRefresh\" method",
        "Export public API",
        "Marionette.bindEntityEvents & unbindEntityEvents",
        "---------------------------",
        "",
        "These methods are used to bind/unbind a backbone \"entity\" (collection/model)",
        "to methods on a target object.",
        "",
        "The first parameter, `target`, must have a `listenTo` method from the",
        "EventBinder object.",
        "",
        "The second parameter is the entity (Backbone.Model or Backbone.Collection)",
        "to bind the events from.",
        "",
        "The third parameter is a hash of { \"event:name\": \"eventHandler\" }",
        "configuration. Multiple handlers can be separated by a space. A",
        "function can be supplied instead of a string handler name.",
        "Bind the event to handlers specified as a string of",
        "handler names on the target object",
        "Bind the event to a supplied callback function",
        "Bind the event to handlers specified as a string of",
        "handler names on the target object",
        "Bind the event to a supplied callback function",
        "generic looping function",
        "allow the bindings to be a function",
        "iterate the bindings and bind them",
        "allow for a function as the handler,",
        "or a list of event names as a string",
        "Export Public API",
        "Callbacks",
        "---------",
        "A simple way of managing a collection of callbacks",
        "and executing them at a later point in time, using jQuery's",
        "`Deferred` object.",
        "Add a callback to be executed. Callbacks added here are",
        "guaranteed to execute, even if they are added after the",
        "`run` method is called.",
        "Run all registered callbacks with the context specified.",
        "Additional callbacks can be added after this has been run",
        "and they will still be executed.",
        "Resets the list of callbacks to be run, allowing the same list",
        "to be run multiple times - whenever the `run` method is called.",
        "Marionette Controller",
        "---------------------",
        "",
        "A multi-purpose object to use as a controller for",
        "modules and routers, and as a mediator for workflow",
        "and coordination of other objects, views, and more.",
        "Controller Methods",
        "--------------",
        "Ensure it can trigger events with Backbone.Events",
        "Region",
        "------",
        "",
        "Manage the visual regions of your composite application. See",
        "http://lostechies.com/derickbailey/2011/12/12/composite-js-apps-regions-and-region-managers/",
        "Region Type methods",
        "-------------------",
        "Build an instance of a region by passing in a configuration object",
        "and a default region type to use if none is specified in the config.",
        "",
        "The config object should either be a string as a jQuery DOM selector,",
        "a Region type directly, or an object literal that specifies both",
        "a selector and regionType:",
        "",
        "```js",
        "{",
        "selector: \"#foo\",",
        "regionType: MyCustomRegion",
        "}",
        "```",
        "",
        "get the selector for the region",
        "get the type for the region",
        "build the region instance",
        "override the `getEl` function if we have a parentEl",
        "this must be overridden to ensure the selector is found",
        "on the first use of the region. if we try to assign the",
        "region's `el` to `parentEl.find(selector)` in the object",
        "literal to build the region, the element will not be",
        "guaranteed to be in the DOM already, and will cause problems",
        "Region Instance Methods",
        "-----------------------",
        "Displays a backbone view instance inside of the region.",
        "Handles calling the `render` method for you. Reads content",
        "directly from the `el` attribute. Also calls an optional",
        "`onShow` and `close` method on your view, just after showing",
        "or just before closing the view, respectively.",
        "Override this method to change how the region finds the",
        "DOM element that it manages. Return a jQuery selector object.",
        "Override this method to change how the new view is",
        "appended to the `$el` that the region is managing",
        "Close the current view, if there is one. If there is no",
        "current view, it does nothing and returns immediately.",
        "call 'close' or 'remove', depending on which is found",
        "Attach an existing view to the region. This",
        "will not call `render` or `onShow` for the new view,",
        "and will not replace the current HTML for the `el`",
        "of the region.",
        "Reset the region by closing any existing view and",
        "clearing out the cached `$el`. The next time a view",
        "is shown via this region, the region will re-query the",
        "DOM for the region's `el`.",
        "Copy the `extend` function used by Backbone's classes",
        "Marionette.RegionManager",
        "------------------------",
        "",
        "Manage one or more related `Marionette.Region` objects.",
        "Add multiple regions using an object literal, where",
        "each key becomes the region name, and each value is",
        "the region definition.",
        "Add an individual region to the region manager,",
        "and return the region instance",
        "Get a region by name",
        "Remove a region by name",
        "Close all regions in the region manager, and",
        "remove them",
        "Close all regions in the region manager, but",
        "leave them attached",
        "Close all regions and shut down the region",
        "manager entirely",
        "internal method to store regions",
        "internal method to remove a region",
        "set the number of regions current held",
        "Borrowing this code from Backbone.Collection:",
        "http://backbonejs.org/docs/backbone.html#section-106",
        "",
        "Mix in methods from Underscore, for iteration, and other",
        "collection related features.",
        "Template Cache",
        "--------------",
        "Manage templates stored in `<script>` blocks,",
        "caching them for faster access.",
        "TemplateCache object-level methods. Manage the template",
        "caches from these method calls instead of creating",
        "your own TemplateCache instances",
        "Get the specified template by id. Either",
        "retrieves the cached version, or loads it",
        "from the DOM.",
        "Clear templates from the cache. If no arguments",
        "are specified, clears all templates:",
        "`clear()`",
        "",
        "If arguments are specified, clears each of the",
        "specified templates from the cache:",
        "`clear(\"#t1\", \"#t2\", \"...\")`",
        "TemplateCache instance methods, allowing each",
        "template cache object to manage its own state",
        "and know whether or not it has been loaded",
        "Internal method to load the template",
        "Guard clause to prevent loading this template more than once",
        "Load the template and compile it",
        "Load a template from the DOM, by default. Override",
        "this method to provide your own template retrieval",
        "For asynchronous loading with AMD/RequireJS, consider",
        "using a template-loader plugin as described here:",
        "https://github.com/marionettejs/backbone.marionette/wiki/Using-marionette-with-requirejs",
        "Pre-compile the template before caching it. Override",
        "this method if you do not need to pre-compile a template",
        "(JST / RequireJS for example) or if you want to change",
        "the template engine used (Handebars, etc).",
        "Renderer",
        "--------",
        "Render a template with data by passing in the template",
        "selector and the data to render.",
        "Render a template with data. The `template` parameter is",
        "passed to the `TemplateCache` object to retrieve the",
        "template function. Override this method to provide your own",
        "custom rendering and template handling for all of Marionette.",
        "Marionette.View",
        "---------------",
        "The core view type that other Marionette views extend from.",
        "this exposes view options to the view initializer",
        "this is a backfill since backbone removed the assignment",
        "of this.options",
        "at some point however this may be removed",
        "import the \"triggerMethod\" to trigger events with corresponding",
        "methods if the method exists",
        "Get the template for this view",
        "instance. You can set a `template` attribute in the view",
        "definition or pass a `template: \"whatever\"` parameter in",
        "to the constructor options.",
        "Mix in template helper methods. Looks for a",
        "`templateHelpers` attribute, which can either be an",
        "object literal, or a function that returns an object",
        "literal. All methods and attributes from this object",
        "are copies to the object passed in.",
        "Configure `triggers` to forward DOM events to view",
        "events. `triggers: {\"click .foo\": \"do:foo\"}`",
        "Allow `triggers` to be configured as a function",
        "Configure the triggers, prevent default",
        "action and stop propagation of DOM events",
        "build the event handler function for the DOM event",
        "stop the event in its tracks",
        "build the args for the event",
        "trigger the event",
        "Overriding Backbone.View's delegateEvents to handle",
        "the `triggers`, `modelEvents`, and `collectionEvents` configuration",
        "internal method to delegate DOM events and triggers",
        "Overriding Backbone.View's undelegateEvents to handle unbinding",
        "the `triggers`, `modelEvents`, and `collectionEvents` config",
        "Internal method, handles the `show` event.",
        "Default `close` implementation, for removing a view from the",
        "DOM and unbinding it. Regions will call this method",
        "for you. You can specify an `onClose` method in your view to",
        "add custom code that is called after the view is closed.",
        "allow the close to be stopped by returning `false`",
        "from the `onBeforeClose` method",
        "mark as closed before doing the actual close, to",
        "prevent infinite loops within \"close\" event handlers",
        "that are trying to close other views",
        "unbind UI elements",
        "remove the view from the DOM",
        "This method binds the elements specified in the \"ui\" hash inside the view's code with",
        "the associated jQuery selectors.",
        "store the ui hash in _uiBindings so they can be reset later",
        "and so re-rendering the view will be able to find the bindings",
        "get the bindings result, as a function or otherwise",
        "empty the ui so we don't have anything to start with",
        "bind each of the selectors",
        "This method unbinds the elements specified in the \"ui\" hash",
        "delete all of the existing ui bindings",
        "reset the ui element to the original bindings configuration",
        "Item View",
        "---------",
        "A single item view implementation that contains code for rendering",
        "with underscore.js templates, serializing the view's model or collection,",
        "and calling several methods on extended views, such as `onRender`.",
        "Setting up the inheritance chain which allows changes to",
        "Marionette.View.prototype.constructor which allows overriding",
        "Serialize the model or collection for the view. If a model is",
        "found, `.toJSON()` is called. If a collection is found, `.toJSON()`",
        "is also called, but is used to populate an `items` array in the",
        "resulting data. If both are found, defaults to the model.",
        "You can override the `serializeData` method in your own view",
        "definition, to provide custom serialization for your view's data.",
        "Render the view, defaulting to underscore.js templates.",
        "You can override this in your view definition to provide",
        "a very specific rendering for your view. In general, though,",
        "you should override the `Marionette.Renderer` object to",
        "change how Marionette renders views.",
        "Override the default close event to add a few",
        "more events that are triggered.",
        "Collection View",
        "---------------",
        "A view that iterates over a Backbone.Collection",
        "and renders an individual ItemView for each model.",
        "used as the prefix for item view events",
        "that are forwarded through the collectionview",
        "constructor",
        "Configured the initial events that the collection view",
        "binds to. Override this method to prevent the initial",
        "events, or to add your own initial events.",
        "Handle a child item added to the collection",
        "Override from `Marionette.View` to guarantee the `onShow` method",
        "of child views is called.",
        "Internal method to trigger the before render callbacks",
        "and events",
        "Internal method to trigger the rendered callbacks and",
        "events",
        "Render the collection of items. Override this method to",
        "provide your own implementation of a render function for",
        "the collection view.",
        "Internal method. Separated so that CompositeView can have",
        "more control over events being triggered, around the rendering",
        "process",
        "Internal method to loop through each item in the",
        "collection view and show it",
        "Internal method to show an empty view in place of",
        "a collection of item views, when the collection is",
        "empty",
        "Internal method to close an existing emptyView instance",
        "if one exists. Called when a collection view has been",
        "rendered empty, and then an item is added to the collection.",
        "Retrieve the empty view type",
        "Retrieve the itemView type, either from `this.options.itemView`",
        "or from the `itemView` in the object definition. The \"options\"",
        "takes precedence.",
        "Render the child item's view and add it to the",
        "HTML for the collection view.",
        "get the itemViewOptions if any were specified",
        "build the view",
        "set up the child view event forwarding",
        "this view is about to be added",
        "Store the child view itself so we can properly",
        "remove and/or close it later",
        "Render it and show it",
        "call the \"show\" method if the collection view",
        "has already been shown",
        "this view was added",
        "Set up the child view event forwarding. Uses an \"itemview:\"",
        "prefix in front of all forwarded events.",
        "Forward all child item view events through the parent,",
        "prepending \"itemview:\" to the event name",
        "render the item view",
        "Build an `itemView` for every model in the collection.",
        "get the child view by item it holds, and remove it",
        "Remove the child view and close it",
        "shut down the child view properly,",
        "including events that the collection has from it",
        "call 'close' or 'remove', depending on which is found",
        "helper to show the empty view if the collection is empty",
        "check if we're empty now, and if we are, show the",
        "empty view",
        "Append the HTML to the collection's `el`.",
        "Override this method to do something other",
        "then `.append`.",
        "Internal method to set up the `children` object for",
        "storing all of the child views",
        "Handle cleanup and other closing needs for",
        "the collection of views.",
        "Close the child views that this collection view",
        "is holding on to, if any",
        "Composite View",
        "--------------",
        "Used for rendering a branch-leaf, hierarchical structure.",
        "Extends directly from CollectionView and also renders an",
        "an item view as `modelView`, for the top leaf",
        "Setting up the inheritance chain which allows changes to",
        "Marionette.CollectionView.prototype.constructor which allows overriding",
        "Configured the initial events that the composite view",
        "binds to. Override this method to prevent the initial",
        "events, or to add your own initial events.",
        "Bind only after composite view in rendered to avoid adding child views",
        "to unexisting itemViewContainer",
        "Retrieve the `itemView` to be used when rendering each of",
        "the items in the collection. The default is to return",
        "`this.itemView` or Marionette.CompositeView if no `itemView`",
        "has been defined",
        "Serialize the collection for the view.",
        "You can override the `serializeData` method in your own view",
        "definition, to provide custom serialization for your view's data.",
        "Renders the model once, and the collection once. Calling",
        "this again will tell the model's view to re-render itself",
        "but the collection will not re-render.",
        "the ui bindings is done here and not at the end of render since they",
        "will not be available until after the model is rendered, but should be",
        "available before the collection is rendered.",
        "Render an individual model, if we have one, as",
        "part of a composite view (branch / leaf). For example:",
        "a treeview.",
        "Appends the `el` of itemView instances to the specified",
        "`itemViewContainer` (a jQuery selector). Override this method to",
        "provide custom logic of how the child item view instances have their",
        "HTML appended to the composite view instance.",
        "Internal method to ensure an `$itemViewContainer` exists, for the",
        "`appendHtml` method to use.",
        "Internal method to reset the `$itemViewContainer` on render",
        "Layout",
        "------",
        "Used for managing application layouts, nested layouts and",
        "multiple regions within an application or sub-application.",
        "",
        "A specialized view type that renders an area of HTML and then",
        "attaches `Region` instances to the specified `regions`.",
        "Used for composite view management and sub-application areas.",
        "Ensure the regions are available when the `initialize` method",
        "is called.",
        "Layout's render will use the existing region objects the",
        "first time it is called. Subsequent calls will close the",
        "views that the regions are showing and then reset the `el`",
        "for the regions to the newly rendered DOM elements.",
        "a previously closed layout means we need to",
        "completely re-initialize the regions",
        "if this is the first render, don't do anything to",
        "reset the regions",
        "If this is not the first render call, then we need to",
        "re-initializing the `el` for each region",
        "Handle closing regions, and then close the view itself.",
        "Add a single region, by name, to the layout",
        "Add multiple regions as a {name: definition, name2: def2} object literal",
        "Remove a single region from the Layout, by name",
        "internal method to build regions",
        "Internal method to initialize the regions that have been defined in a",
        "`regions` attribute on this layout.",
        "Internal method to re-initialize all of the regions by updating the `el` that",
        "they point to",
        "Internal method to initialize the region manager",
        "and all regions in it",
        "AppRouter",
        "---------",
        "Reduce the boilerplate code of handling route events",
        "and then calling a single method on another object.",
        "Have your routers configured to call the method on",
        "your object, directly.",
        "",
        "Configure an AppRouter with `appRoutes`.",
        "",
        "App routers can only take one `controller` object.",
        "It is recommended that you divide your controller",
        "objects in to smaller pieces of related functionality",
        "and have multiple routers / controllers, instead of",
        "just one giant router and controller.",
        "",
        "You can also add standard routes to an AppRouter.",
        "Similar to route method on a Backbone Router but",
        "method is called on the controller",
        "Internal method to process the `appRoutes` for the",
        "router, and turn them in to routes that trigger the",
        "specified method on the specified `controller`.",
        "Backbone requires reverted order of routes",
        "Application",
        "-----------",
        "Contain and manage the composite application as a whole.",
        "Stores and starts up `Region` objects, includes an",
        "event aggregator as `app.vent`",
        "Command execution, facilitated by Backbone.Wreqr.Commands",
        "Request/response, facilitated by Backbone.Wreqr.RequestResponse",
        "Add an initializer that is either run at when the `start`",
        "method is called, or run immediately if added after `start`",
        "has already been called.",
        "kick off all of the application's processes.",
        "initializes all of the regions that have been added",
        "to the app, and runs all of the initializer functions",
        "Add regions to your app.",
        "Accepts a hash of named strings or Region objects",
        "addRegions({something: \"#someRegion\"})",
        "addRegions({something: Region.extend({el: \"#someRegion\"}) });",
        "Close all regions in the app, without removing them",
        "Removes a region from your app, by name",
        "Accepts the regions name",
        "removeRegion('myRegion')",
        "Provides alternative access to regions",
        "Accepts the region name",
        "getRegion('main')",
        "Create a module, attached to the application",
        "slice the args, and add this application object as the",
        "first argument of the array",
        "see the Marionette.Module object for more information",
        "Internal method to set up the region manager",
        "Copy the `extend` function used by Backbone's classes",
        "Module",
        "------",
        "A simple module system, used to create privacy and encapsulation in",
        "Marionette applications",
        "store sub-modules",
        "store the configuration for this module",
        "Extend the Module prototype with events / listenTo, so that the module",
        "can be used as an event aggregator or pub/sub.",
        "Initializer for a specific module. Initializers are run when the",
        "module's `start` method is called.",
        "Finalizers are run when a module is stopped. They are used to teardown",
        "and finalize any variables, references, events and other code that the",
        "module had set up.",
        "Start the module, and run all of its initializers",
        "Prevent re-starting a module that is already started",
        "start the sub-modules (depth-first hierarchy)",
        "check to see if we should start the sub-module with this parent",
        "run the callbacks to \"start\" the current module",
        "Stop this module by running its finalizers and then stop all of",
        "the sub-modules for this module",
        "if we are not initialized, don't bother finalizing",
        "stop the sub-modules; depth-first, to make sure the",
        "sub-modules are stopped / finalized before parents",
        "run the finalizers",
        "reset the initializers and finalizers",
        "Configure the module with a definition function and any custom args",
        "that are to be passed in to the definition function",
        "Internal method: run the module definition function with the correct",
        "arguments",
        "build the correct list of arguments for the module definition",
        "Internal method: set up new copies of initializers and finalizers.",
        "Calling this method will wipe out all existing initializers and",
        "finalizers.",
        "Type methods to create modules",
        "Create a module, hanging off the app parameter as the parent object.",
        "get the custom args passed in after the module definition and",
        "get rid of the module name and definition function",
        "split the module names and get the length",
        "store the module definition for the last module in the chain",
        "Loop through all the parts of the module definition",
        "Return the last module in the definition chain",
        "Get an existing module of this name if we have one",
        "Create a new module if we don't have one",
        "store the module on the parent",
        "if a function is supplied for the module definition",
        "if an object is supplied",
        "if nothing is supplied",
        "add module definition if needed",
        "`and` the two together, ensuring a single `false` will prevent it",
        "from starting with the parent",
        "setup auto-start if needed",
        "only configure this once",
        "add the module initializer config",
        "create the Marionette application",
        "use mustache",
        "spacebar",
        "r",
        "left arrow",
        "config",
        "add an AudioContext",
        "wait for all tracks to be loaded",
        "Build tracks collection view",
        "rAF loop for meters",
        "create the mix and start the app on DOM ready",
        "convert a value from one scale to another",
        "e.g. App.util.scale(-96, -192, 0, 0, 100) to convert",
        "-96 from dB (-192 - 0) to percentage (0 - 100)",
        "convert dBFS to a percentage",
        "convert percentage to dBFS",
        "convert samples to seconds",
        "convert seconds to samples",
        "clone a Float32Array",
        "create an AudioBuffer from an ArrayBuffer",
        "requires one or more ArrayBuffers",
        "clone an AudioBuffer instance",
        "requires an AudioBuffer",
        "optionally accepts from and to (both integers) for slicing",
        "create a new BufferSource from an AudioBuffer instance",
        "requires an AudioBuffer",
        "fetch and decode an audio asset, then pass the AudioBuffer",
        "to the supplied callback",
        "calculate the dBFS value of an ArrayBuffer",
        "format seconds as 00:00:00",
        "mix name",
        "master gain (0 - 1)",
        "playback position (in seconds)",
        "minimum allowed playback position",
        "maximum allowed playback position",
        "internal value for playback scheduling",
        "are we currently playing?",
        "internal value for VU meters",
        "internal value for VU meters",
        "internally calculated song duration",
        "create audio nodes",
        "set gain",
        "begin playback of all tracks",
        "optionally accepts a playback position in seconds",
        "pause all tracks",
        "get the exact, up-to-date playback position",
        "periodically update the position attribute (for UI)",
        "selectively apply/remove mutes depending on which tracks",
        "are soloed and unsoloed",
        "apply _mute to non-soloed tracks",
        "remove _mute when nothing is soloed",
        "get dBFS values",
        "override default parsing to create `tracks` collection",
        "track name",
        "track gain (0 - 1)",
        "track pan (-1 - 1, left to right)",
        "user muted",
        "muted because another track is soloed (internal)",
        "soloed",
        "internal dBFS value",
        "after-fader listen",
        "internally calculated track duration",
        "create gain/pan/mute/solo nodes",
        "user mute",
        "auto mute (caused by other tracks being soloed)",
        "left channel gain",
        "right channel gain",
        "channel merger",
        "analyser",
        "track gain",
        "make connections",
        "set track params",
        "set gain",
        "set panning",
        "fetch audio assets, then trigger a 'loaded' event on the app",
        "create a new bufferSource and connect it",
        "start playback",
        "pause playback",
        "mute the track (user-initiated)",
        "unmute the track (user-initiated)",
        "mute the track (initiated by mix.soloMute)",
        "unmute the track (initiated by mix.soloMute)",
        "solo the track",
        "unsolo the track",
        "begin playback of all tracks",
        "pause all tracks",
        "get max track duration (essentially song length)",
        "save new peak",
        "draw existing peak",
        "for first 650 ms, use full alpha, then fade out",
        "clear peak",
        "draw ghost 7-segment",
        "faster to loop twice than to keep changing fillStyle",
        "draw actual position"
    ],
    "docstrings": [
        "* Create key-value caches of limited size\n   * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n   *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n   *\tdeleting the oldest entry",
        "* Mark a function for special use by Sizzle\n   * @param {Function} fn The function to mark",
        "* Support testing using an element\n   * @param {Function} fn Passed the created div and expects a boolean result",
        "* Adds the same handler for all of the specified attrs\n   * @param {String} attrs Pipe-separated list of attributes\n   * @param {Function} handler The method that will be applied",
        "* Checks document order of two siblings\n   * @param {Element} a\n   * @param {Element} b\n   * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b",
        "* Returns a function to use in pseudos for input types\n   * @param {String} type",
        "* Returns a function to use in pseudos for buttons\n   * @param {String} type",
        "* Returns a function to use in pseudos for positionals\n   * @param {Function} fn",
        "* Detect xml\n   * @param {Element|Object} elem An element or a document",
        "* Sets document-related variables once based on the current document\n   * @param {Element|Object} [doc] An element or document object to use to set the document\n   * @returns {Object} Returns the current document",
        "* Document sorting and removing duplicates\n   * @param {ArrayLike} results",
        "* Utility function for retrieving the text value of an array of DOM nodes\n   * @param {Array|Element} elem",
        "* Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *",
        "*... In the case of properties that might _actually_",
        "* Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.",
        "* @license\n   * Lo-Dash 1.3.1 <http://lodash.com/>\n   * Copyright 2012-2013 The Dojo Foundation <http://dojofoundation.org/>\n   * Based on Underscore.js 1.4.4 <http://underscorejs.org/>\n   * Copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n   * Available under MIT license <http://lodash.com/license>",
        "* Used to match ES6 template delimiters\n     * http://people.mozilla.org/~jorendorff/es6-draft.html#sec-7.8.6",
        "* A basic implementation of `_.indexOf` without support for binary searches\n     * or `fromIndex` constraints.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {Mixed} value The value to search for.\n     * @param {Number} [fromIndex=0] The index to search from.\n     * @returns {Number} Returns the index of the matched value or `-1`.",
        "* An implementation of `_.contains` for cache objects that mimics the return\n     * signature of `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache object to inspect.\n     * @param {Mixed} value The value to search for.\n     * @returns {Number} Returns `0` if `value` is found, else `-1`.",
        "* Adds a given `value` to the corresponding cache object.\n     *\n     * @private\n     * @param {Mixed} value The value to add to the cache.",
        "* Used by `_.max` and `_.min` as the default `callback` when a given\n     * `collection` is a string value.\n     *\n     * @private\n     * @param {String} value The character to inspect.\n     * @returns {Number} Returns the code unit of given character.",
        "* Used by `sortBy` to compare transformed `collection` values, stable sorting\n     * them in ascending order.\n     *\n     * @private\n     * @param {Object} a The object to compare to `b`.\n     * @param {Object} b The object to compare to `a`.\n     * @returns {Number} Returns the sort order indicator of `1` or `-1`.",
        "* Creates a cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [array=[]] The array to search.\n     * @returns {Null|Object} Returns the cache object or `null` if caching should not be used.",
        "* Used by `template` to escape characters for inclusion in compiled\n     * string literals.\n     *\n     * @private\n     * @param {String} match The matched character to escape.\n     * @returns {String} Returns the escaped character.",
        "* Gets an array from the array pool or creates a new one if the pool is empty.\n     *\n     * @private\n     * @returns {Array} The array from the pool.",
        "* Gets an object from the object pool or creates a new one if the pool is empty.\n     *\n     * @private\n     * @returns {Object} The object from the pool.",
        "* Checks if `value` is a DOM node in IE < 9.\n     *\n     * @private\n     * @param {Mixed} value The value to check.\n     * @returns {Boolean} Returns `true` if the `value` is a DOM node, else `false`.",
        "* A no-operation function.\n     *\n     * @private",
        "* Releases the given `array` back to the array pool.\n     *\n     * @private\n     * @param {Array} [array] The array to release.",
        "* Releases the given `object` back to the object pool.\n     *\n     * @private\n     * @param {Object} [object] The object to release.",
        "* Slices the `collection` from the `start` index up to, but not including,\n     * the `end` index.\n     *\n     * Note: This function is used, instead of `Array#slice`, to support node lists\n     * in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @private\n     * @param {Array|Object|String} collection The collection to slice.\n     * @param {Number} start The start index.\n     * @param {Number} end The end index.\n     * @returns {Array} Returns the new array.",
        "* Create a new `lodash` function using the given `context` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utilities\n     * @param {Object} [context=window] The context object.\n     * @returns {Function} Returns the `lodash` function.",
        "* Used for `Array` method references.\n       *\n       * Normally `Array.prototype` would suffice, however, using an array literal\n       * avoids issues in Narwhal.",
        "* Creates a `lodash` object, which wraps the given `value`, to enable method\n       * chaining.\n       *\n       * In addition to Lo-Dash methods, wrappers also have the following `Array` methods:\n       * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`, `splice`,\n       * and `unshift`\n       *\n       * Chaining is supported in custom builds as long as the `value` method is\n       * implicitly or explicitly included in the build.\n       *\n       * The chainable wrapper functions are:\n       * `after`, `assign`, `bind`, `bindAll`, `bindKey`, `chain`, `compact`,\n       * `compose`, `concat`, `countBy`, `createCallback`, `debounce`, `defaults`,\n       * `defer`, `delay`, `difference`, `filter`, `flatten`, `forEach`, `forIn`,\n       * `forOwn`, `functions`, `groupBy`, `initial`, `intersection`, `invert`,\n       * `invoke`, `keys`, `map`, `max`, `memoize`, `merge`, `min`, `object`, `omit`,\n       * `once`, `pairs`, `partial`, `partialRight`, `pick`, `pluck`, `push`, `range`,\n       * `reject`, `rest`, `reverse`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`,\n       * `tap`, `throttle`, `times`, `toArray`, `transform`, `union`, `uniq`, `unshift`,\n       * `unzip`, `values`, `where`, `without`, `wrap`, and `zip`\n       *\n       * The non-chainable wrapper functions are:\n       * `clone`, `cloneDeep`, `contains`, `escape`, `every`, `find`, `has`,\n       * `identity`, `indexOf`, `isArguments`, `isArray`, `isBoolean`, `isDate`,\n       * `isElement`, `isEmpty`, `isEqual`, `isFinite`, `isFunction`, `isNaN`,\n       * `isNull`, `isNumber`, `isObject`, `isPlainObject`, `isRegExp`, `isString`,\n       * `isUndefined`, `join`, `lastIndexOf`, `mixin`, `noConflict`, `parseInt`,\n       * `pop`, `random`, `reduce`, `reduceRight`, `result`, `shift`, `size`, `some`,\n       * `sortedIndex`, `runInContext`, `template`, `unescape`, `uniqueId`, and `value`\n       *\n       * The wrapper functions `first` and `last` return wrapped values when `n` is\n       * passed, otherwise they return unwrapped values.\n       *\n       * @name _\n       * @constructor\n       * @alias chain\n       * @category Chaining\n       * @param {Mixed} value The value to wrap in a `lodash` instance.\n       * @returns {Object} Returns a `lodash` instance.\n       * @example\n       *\n       * var wrapped = _([1, 2, 3]);\n       *\n       * // returns an unwrapped value\n       * wrapped.reduce(function(sum, num) {\n       *   return sum + num;\n       * });\n       * // => 6\n       *\n       * // returns a wrapped value\n       * var squares = wrapped.map(function(num) {\n       *   return num * num;\n       * });\n       *\n       * _.isArray(squares);\n       * // => false\n       *\n       * _.isArray(squares.value());\n       * // => true",
        "* A fast path for creating `lodash` wrapper objects.\n       *\n       * @private\n       * @param {Mixed} value The value to wrap in a `lodash` instance.\n       * @returns {Object} Returns a `lodash` instance.",
        "* An object used to flag environments features.\n       *\n       * @static\n       * @memberOf _\n       * @type Object",
        "* Detect if `arguments` objects are `Object` objects (all but Narwhal and Opera < 10.5).\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if an `arguments` object's [[Class]] is resolvable (all but Firefox < 4, IE < 9).\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if `name` or `message` properties of `Error.prototype` are\n         * enumerable by default. (IE < 9, Safari < 5.1)\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if `prototype` properties are enumerable by default.\n         *\n         * Firefox < 3.6, Opera > 9.50 - Opera < 11.60, and Safari < 5.1\n         * (if the prototype or a property on the prototype has been set)\n         * incorrectly sets a function's `prototype` property [[Enumerable]]\n         * value to `true`.\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if `Function#bind` exists and is inferred to be fast (all but V8).\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if own properties are iterated after inherited properties (all but IE < 9).\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if `arguments` object indexes are non-enumerable\n         * (Firefox < 4, IE < 9, PhantomJS, Safari < 5.1).\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if properties shadowing those on `Object.prototype` are non-enumerable.\n         *\n         * In IE < 9 an objects own properties, shadowing non-enumerable ones, are\n         * made non-enumerable as well (a.k.a the JScript [[DontEnum]] bug).\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if `Array#shift` and `Array#splice` augment array-like objects correctly.\n         *\n         * Firefox < 10, IE compatibility mode, and IE < 9 have buggy Array `shift()`\n         * and `splice()` functions that fail to remove the last element, `value[0]`,\n         * of array-like objects even though the `length` property is set to `0`.\n         * The `shift()` method is buggy in IE 8 compatibility mode, while `splice()`\n         * is buggy regardless of mode in IE < 9 and buggy in compatibility mode in IE 9.\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect lack of support for accessing string characters by index.\n         *\n         * IE < 8 can't access characters by index and IE 8 can only access\n         * characters by index on string literals.\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* Detect if a DOM node's [[Class]] is resolvable (all but IE < 9)\n         * and that the JS engine errors when attempting to coerce an object to\n         * a string without a `toString` function.\n         *\n         * @memberOf _.support\n         * @type Boolean",
        "* By default, the template delimiters used by Lo-Dash are similar to those in\n       * embedded Ruby (ERB). Change the following template settings to use alternative\n       * delimiters.\n       *\n       * @static\n       * @memberOf _\n       * @type Object",
        "* Used to detect `data` property values to be HTML-escaped.\n         *\n         * @memberOf _.templateSettings\n         * @type RegExp",
        "* Used to detect code to be evaluated.\n         *\n         * @memberOf _.templateSettings\n         * @type RegExp",
        "* Used to detect `data` property values to inject.\n         *\n         * @memberOf _.templateSettings\n         * @type RegExp",
        "* Used to reference the data object in the template text.\n         *\n         * @memberOf _.templateSettings\n         * @type String",
        "* Used to import variables into the compiled template.\n         *\n         * @memberOf _.templateSettings\n         * @type Object",
        "* A reference to the `lodash` function.\n           *\n           * @memberOf _.templateSettings.imports\n           * @type Function",
        "* The template used to create iterator functions.\n       *\n       * @private\n       * @param {Object} data The data object used to populate the text.\n       * @returns {String} Returns the interpolated text.",
        "* Creates a function that, when called, invokes `func` with the `this` binding\n       * of `thisArg` and prepends any `partialArgs` to the arguments passed to the\n       * bound function.\n       *\n       * @private\n       * @param {Function|String} func The function to bind or the method name.\n       * @param {Mixed} [thisArg] The `this` binding of `func`.\n       * @param {Array} partialArgs An array of arguments to be partially applied.\n       * @param {Object} [idicator] Used to indicate binding by key or partially\n       *  applying arguments from the right.\n       * @returns {Function} Returns the new bound function.",
        "* Creates compiled iteration functions.\n       *\n       * @private\n       * @param {Object} [options1, options2, ...] The compile options object(s).\n       *  array - A string of code to determine if the iterable is an array or array-like.\n       *  useHas - A boolean to specify using `hasOwnProperty` checks in the object loop.\n       *  useKeys - A boolean to specify using `_.keys` for own property iteration.\n       *  args - A string of comma separated arguments the iteration function will accept.\n       *  top - A string of code to execute before the iteration branches.\n       *  loop - A string of code to execute in the object loop.\n       *  bottom - A string of code to execute after the iteration branches.\n       * @returns {Function} Returns the compiled function.",
        "* Creates a new object with the specified `prototype`.\n       *\n       * @private\n       * @param {Object} prototype The prototype object.\n       * @returns {Object} Returns the new object.",
        "* Used by `escape` to convert characters to HTML entities.\n       *\n       * @private\n       * @param {String} match The matched character to escape.\n       * @returns {String} Returns the escaped character.",
        "* Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n       * customized, this method returns the custom method, otherwise it returns\n       * the `basicIndexOf` function.\n       *\n       * @private\n       * @returns {Function} Returns the \"indexOf\" function.",
        "* Creates a function that juggles arguments, allowing argument overloading\n       * for `_.flatten` and `_.uniq`, before passing them to the given `func`.\n       *\n       * @private\n       * @param {Function} func The function to wrap.\n       * @returns {Function} Returns the new function.",
        "* A fallback implementation of `isPlainObject` which checks if a given `value`\n       * is an object created by the `Object` constructor, assuming objects created\n       * by the `Object` constructor have no inherited enumerable properties and that\n       * there are no `Object.prototype` extensions.\n       *\n       * @private\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.",
        "* Used by `unescape` to convert HTML entities to characters.\n       *\n       * @private\n       * @param {String} match The matched character to unescape.\n       * @returns {String} Returns the unescaped character.",
        "* Checks if `value` is an `arguments` object.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is an `arguments` object, else `false`.\n       * @example\n       *\n       * (function() { return _.isArguments(arguments); })(1, 2, 3);\n       * // => true\n       *\n       * _.isArguments([1, 2, 3]);\n       * // => false",
        "* Checks if `value` is an array.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is an array, else `false`.\n       * @example\n       *\n       * (function() { return _.isArray(arguments); })();\n       * // => false\n       *\n       * _.isArray([1, 2, 3]);\n       * // => true",
        "* A fallback implementation of `Object.keys` which produces an array of the\n       * given object's own enumerable property names.\n       *\n       * @private\n       * @type Function\n       * @param {Object} object The object to inspect.\n       * @returns {Array} Returns a new array of property names.",
        "* Creates an array composed of the own enumerable property names of `object`.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The object to inspect.\n       * @returns {Array} Returns a new array of property names.\n       * @example\n       *\n       * _.keys({ 'one': 1, 'two': 2, 'three': 3 });\n       * // => ['one', 'two', 'three'] (order is not guaranteed)",
        "* A function compiled to iterate `arguments` objects, arrays, objects, and\n       * strings consistenly across environments, executing the `callback` for each\n       * element in the `collection`. The `callback` is bound to `thisArg` and invoked\n       * with three arguments; (value, index|key, collection). Callbacks may exit\n       * iteration early by explicitly returning `false`.\n       *\n       * @private\n       * @type Function\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function} [callback=identity] The function called per iteration.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array|Object|String} Returns `collection`.",
        "* Used to convert characters to HTML entities:\n       *\n       * Though the `>` character is escaped for symmetry, characters like `>` and `/`\n       * don't require escaping in HTML and have no special meaning unless they're part\n       * of a tag or an unquoted attribute value.\n       * http://mathiasbynens.be/notes/ambiguous-ampersands (under \"semi-related fun fact\")",
        "* Assigns own enumerable properties of source object(s) to the destination\n       * object. Subsequent sources will overwrite property assignments of previous\n       * sources. If a `callback` function is passed, it will be executed to produce\n       * the assigned values. The `callback` is bound to `thisArg` and invoked with\n       * two arguments; (objectValue, sourceValue).\n       *\n       * @static\n       * @memberOf _\n       * @type Function\n       * @alias extend\n       * @category Objects\n       * @param {Object} object The destination object.\n       * @param {Object} [source1, source2, ...] The source objects.\n       * @param {Function} [callback] The function to customize assigning values.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Object} Returns the destination object.\n       * @example\n       *\n       * _.assign({ 'name': 'moe' }, { 'age': 40 });\n       * // => { 'name': 'moe', 'age': 40 }\n       *\n       * var defaults = _.partialRight(_.assign, function(a, b) {\n       *   return typeof a == 'undefined' ? b : a;\n       * });\n       *\n       * var food = { 'name': 'apple' };\n       * defaults(food, { 'name': 'banana', 'type': 'fruit' });\n       * // => { 'name': 'apple', 'type': 'fruit' }",
        "* Creates a clone of `value`. If `deep` is `true`, nested objects will also\n       * be cloned, otherwise they will be assigned by reference. If a `callback`\n       * function is passed, it will be executed to produce the cloned values. If\n       * `callback` returns `undefined`, cloning will be handled by the method instead.\n       * The `callback` is bound to `thisArg` and invoked with one argument; (value).\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to clone.\n       * @param {Boolean} [deep=false] A flag to indicate a deep clone.\n       * @param {Function} [callback] The function to customize cloning values.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @param- {Array} [stackA=[]] Tracks traversed source objects.\n       * @param- {Array} [stackB=[]] Associates clones with source counterparts.\n       * @returns {Mixed} Returns the cloned `value`.\n       * @example\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * var shallow = _.clone(stooges);\n       * shallow[0] === stooges[0];\n       * // => true\n       *\n       * var deep = _.clone(stooges, true);\n       * deep[0] === stooges[0];\n       * // => false\n       *\n       * _.mixin({\n       *   'clone': _.partialRight(_.clone, function(value) {\n       *     return _.isElement(value) ? value.cloneNode(false) : undefined;\n       *   })\n       * });\n       *\n       * var clone = _.clone(document.body);\n       * clone.childNodes.length;\n       * // => 0",
        "* Creates a deep clone of `value`. If a `callback` function is passed,\n       * it will be executed to produce the cloned values. If `callback` returns\n       * `undefined`, cloning will be handled by the method instead. The `callback`\n       * is bound to `thisArg` and invoked with one argument; (value).\n       *\n       * Note: This method is loosely based on the structured clone algorithm. Functions\n       * and DOM nodes are **not** cloned. The enumerable properties of `arguments` objects and\n       * objects created by constructors other than `Object` are cloned to plain `Object` objects.\n       * See http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to deep clone.\n       * @param {Function} [callback] The function to customize cloning values.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the deep cloned `value`.\n       * @example\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * var deep = _.cloneDeep(stooges);\n       * deep[0] === stooges[0];\n       * // => false\n       *\n       * var view = {\n       *   'label': 'docs',\n       *   'node': element\n       * };\n       *\n       * var clone = _.cloneDeep(view, function(value) {\n       *   return _.isElement(value) ? value.cloneNode(true) : undefined;\n       * });\n       *\n       * clone.node == view.node;\n       * // => false",
        "* Assigns own enumerable properties of source object(s) to the destination\n       * object for all destination properties that resolve to `undefined`. Once a\n       * property is set, additional defaults of the same property will be ignored.\n       *\n       * @static\n       * @memberOf _\n       * @type Function\n       * @category Objects\n       * @param {Object} object The destination object.\n       * @param {Object} [source1, source2, ...] The source objects.\n       * @param- {Object} [guard] Allows working with `_.reduce` without using its\n       *  callback's `key` and `object` arguments as sources.\n       * @returns {Object} Returns the destination object.\n       * @example\n       *\n       * var food = { 'name': 'apple' };\n       * _.defaults(food, { 'name': 'banana', 'type': 'fruit' });\n       * // => { 'name': 'apple', 'type': 'fruit' }",
        "* This method is similar to `_.find`, except that it returns the key of the\n       * element that passes the callback check, instead of the element itself.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The object to search.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the key of the found element, else `undefined`.\n       * @example\n       *\n       * _.findKey({ 'a': 1, 'b': 2, 'c': 3, 'd': 4 }, function(num) {\n       *   return num % 2 == 0;\n       * });\n       * // => 'b'",
        "* Iterates over `object`'s own and inherited enumerable properties, executing\n       * the `callback` for each property. The `callback` is bound to `thisArg` and\n       * invoked with three arguments; (value, key, object). Callbacks may exit iteration\n       * early by explicitly returning `false`.\n       *\n       * @static\n       * @memberOf _\n       * @type Function\n       * @category Objects\n       * @param {Object} object The object to iterate over.\n       * @param {Function} [callback=identity] The function called per iteration.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Object} Returns `object`.\n       * @example\n       *\n       * function Dog(name) {\n       *   this.name = name;\n       * }\n       *\n       * Dog.prototype.bark = function() {\n       *   alert('Woof, woof!');\n       * };\n       *\n       * _.forIn(new Dog('Dagny'), function(value, key) {\n       *   alert(key);\n       * });\n       * // => alerts 'name' and 'bark' (order is not guaranteed)",
        "* Iterates over an object's own enumerable properties, executing the `callback`\n       * for each property. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, key, object). Callbacks may exit iteration early by explicitly\n       * returning `false`.\n       *\n       * @static\n       * @memberOf _\n       * @type Function\n       * @category Objects\n       * @param {Object} object The object to iterate over.\n       * @param {Function} [callback=identity] The function called per iteration.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Object} Returns `object`.\n       * @example\n       *\n       * _.forOwn({ '0': 'zero', '1': 'one', 'length': 2 }, function(num, key) {\n       *   alert(key);\n       * });\n       * // => alerts '0', '1', and 'length' (order is not guaranteed)",
        "* Creates a sorted array of all enumerable properties, own and inherited,\n       * of `object` that have function values.\n       *\n       * @static\n       * @memberOf _\n       * @alias methods\n       * @category Objects\n       * @param {Object} object The object to inspect.\n       * @returns {Array} Returns a new array of property names that have function values.\n       * @example\n       *\n       * _.functions(_);\n       * // => ['all', 'any', 'bind', 'bindAll', 'clone', 'compact', 'compose', ...]",
        "* Checks if the specified object `property` exists and is a direct property,\n       * instead of an inherited property.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The object to check.\n       * @param {String} property The property to check for.\n       * @returns {Boolean} Returns `true` if key is a direct property, else `false`.\n       * @example\n       *\n       * _.has({ 'a': 1, 'b': 2, 'c': 3 }, 'b');\n       * // => true",
        "* Creates an object composed of the inverted keys and values of the given `object`.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The object to invert.\n       * @returns {Object} Returns the created inverted object.\n       * @example\n       *\n       *  _.invert({ 'first': 'moe', 'second': 'larry' });\n       * // => { 'moe': 'first', 'larry': 'second' }",
        "* Checks if `value` is a boolean value.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is a boolean value, else `false`.\n       * @example\n       *\n       * _.isBoolean(null);\n       * // => false",
        "* Checks if `value` is a date.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is a date, else `false`.\n       * @example\n       *\n       * _.isDate(new Date);\n       * // => true",
        "* Checks if `value` is a DOM element.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is a DOM element, else `false`.\n       * @example\n       *\n       * _.isElement(document.body);\n       * // => true",
        "* Checks if `value` is empty. Arrays, strings, or `arguments` objects with a\n       * length of `0` and objects with no own enumerable properties are considered\n       * \"empty\".\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Array|Object|String} value The value to inspect.\n       * @returns {Boolean} Returns `true`, if the `value` is empty, else `false`.\n       * @example\n       *\n       * _.isEmpty([1, 2, 3]);\n       * // => false\n       *\n       * _.isEmpty({});\n       * // => true\n       *\n       * _.isEmpty('');\n       * // => true",
        "* Performs a deep comparison between two values to determine if they are\n       * equivalent to each other. If `callback` is passed, it will be executed to\n       * compare values. If `callback` returns `undefined`, comparisons will be handled\n       * by the method instead. The `callback` is bound to `thisArg` and invoked with\n       * two arguments; (a, b).\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} a The value to compare.\n       * @param {Mixed} b The other value to compare.\n       * @param {Function} [callback] The function to customize comparing values.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @param- {Array} [stackA=[]] Tracks traversed `a` objects.\n       * @param- {Array} [stackB=[]] Tracks traversed `b` objects.\n       * @returns {Boolean} Returns `true`, if the values are equivalent, else `false`.\n       * @example\n       *\n       * var moe = { 'name': 'moe', 'age': 40 };\n       * var copy = { 'name': 'moe', 'age': 40 };\n       *\n       * moe == copy;\n       * // => false\n       *\n       * _.isEqual(moe, copy);\n       * // => true\n       *\n       * var words = ['hello', 'goodbye'];\n       * var otherWords = ['hi', 'goodbye'];\n       *\n       * _.isEqual(words, otherWords, function(a, b) {\n       *   var reGreet = /^(?:hello|hi)$/i,\n       *       aGreet = _.isString(a) && reGreet.test(a),\n       *       bGreet = _.isString(b) && reGreet.test(b);\n       *\n       *   return (aGreet || bGreet) ? (aGreet == bGreet) : undefined;\n       * });\n       * // => true",
        "* Checks if `value` is, or can be coerced to, a finite number.\n       *\n       * Note: This is not the same as native `isFinite`, which will return true for\n       * booleans and empty strings. See http://es5.github.com/#x15.1.2.5.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is finite, else `false`.\n       * @example\n       *\n       * _.isFinite(-101);\n       * // => true\n       *\n       * _.isFinite('10');\n       * // => true\n       *\n       * _.isFinite(true);\n       * // => false\n       *\n       * _.isFinite('');\n       * // => false\n       *\n       * _.isFinite(Infinity);\n       * // => false",
        "* Checks if `value` is a function.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is a function, else `false`.\n       * @example\n       *\n       * _.isFunction(_);\n       * // => true",
        "* Checks if `value` is the language type of Object.\n       * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is an object, else `false`.\n       * @example\n       *\n       * _.isObject({});\n       * // => true\n       *\n       * _.isObject([1, 2, 3]);\n       * // => true\n       *\n       * _.isObject(1);\n       * // => false",
        "* Checks if `value` is `NaN`.\n       *\n       * Note: This is not the same as native `isNaN`, which will return `true` for\n       * `undefined` and other values. See http://es5.github.com/#x15.1.2.4.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is `NaN`, else `false`.\n       * @example\n       *\n       * _.isNaN(NaN);\n       * // => true\n       *\n       * _.isNaN(new Number(NaN));\n       * // => true\n       *\n       * isNaN(undefined);\n       * // => true\n       *\n       * _.isNaN(undefined);\n       * // => false",
        "* Checks if `value` is `null`.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is `null`, else `false`.\n       * @example\n       *\n       * _.isNull(null);\n       * // => true\n       *\n       * _.isNull(undefined);\n       * // => false",
        "* Checks if `value` is a number.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is a number, else `false`.\n       * @example\n       *\n       * _.isNumber(8.4 * 5);\n       * // => true",
        "* Checks if a given `value` is an object created by the `Object` constructor.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if `value` is a plain object, else `false`.\n       * @example\n       *\n       * function Stooge(name, age) {\n       *   this.name = name;\n       *   this.age = age;\n       * }\n       *\n       * _.isPlainObject(new Stooge('moe', 40));\n       * // => false\n       *\n       * _.isPlainObject([1, 2, 3]);\n       * // => false\n       *\n       * _.isPlainObject({ 'name': 'moe', 'age': 40 });\n       * // => true",
        "* Checks if `value` is a regular expression.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is a regular expression, else `false`.\n       * @example\n       *\n       * _.isRegExp(/moe/);\n       * // => true",
        "* Checks if `value` is a string.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is a string, else `false`.\n       * @example\n       *\n       * _.isString('moe');\n       * // => true",
        "* Checks if `value` is `undefined`.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Mixed} value The value to check.\n       * @returns {Boolean} Returns `true`, if the `value` is `undefined`, else `false`.\n       * @example\n       *\n       * _.isUndefined(void 0);\n       * // => true",
        "* Recursively merges own enumerable properties of the source object(s), that\n       * don't resolve to `undefined`, into the destination object. Subsequent sources\n       * will overwrite property assignments of previous sources. If a `callback` function\n       * is passed, it will be executed to produce the merged values of the destination\n       * and source properties. If `callback` returns `undefined`, merging will be\n       * handled by the method instead. The `callback` is bound to `thisArg` and\n       * invoked with two arguments; (objectValue, sourceValue).\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The destination object.\n       * @param {Object} [source1, source2, ...] The source objects.\n       * @param {Function} [callback] The function to customize merging properties.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @param- {Object} [deepIndicator] Indicates that `stackA` and `stackB` are\n       *  arrays of traversed objects, instead of source objects.\n       * @param- {Array} [stackA=[]] Tracks traversed source objects.\n       * @param- {Array} [stackB=[]] Associates values with source counterparts.\n       * @returns {Object} Returns the destination object.\n       * @example\n       *\n       * var names = {\n       *   'stooges': [\n       *     { 'name': 'moe' },\n       *     { 'name': 'larry' }\n       *   ]\n       * };\n       *\n       * var ages = {\n       *   'stooges': [\n       *     { 'age': 40 },\n       *     { 'age': 50 }\n       *   ]\n       * };\n       *\n       * _.merge(names, ages);\n       * // => { 'stooges': [{ 'name': 'moe', 'age': 40 }, { 'name': 'larry', 'age': 50 }] }\n       *\n       * var food = {\n       *   'fruits': ['apple'],\n       *   'vegetables': ['beet']\n       * };\n       *\n       * var otherFood = {\n       *   'fruits': ['banana'],\n       *   'vegetables': ['carrot']\n       * };\n       *\n       * _.merge(food, otherFood, function(a, b) {\n       *   return _.isArray(a) ? a.concat(b) : undefined;\n       * });\n       * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot] }",
        "* Creates a shallow clone of `object` excluding the specified properties.\n       * Property names may be specified as individual arguments or as arrays of\n       * property names. If a `callback` function is passed, it will be executed\n       * for each property in the `object`, omitting the properties `callback`\n       * returns truthy for. The `callback` is bound to `thisArg` and invoked\n       * with three arguments; (value, key, object).\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The source object.\n       * @param {Function|String} callback|[prop1, prop2, ...] The properties to omit\n       *  or the function called per iteration.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Object} Returns an object without the omitted properties.\n       * @example\n       *\n       * _.omit({ 'name': 'moe', 'age': 40 }, 'age');\n       * // => { 'name': 'moe' }\n       *\n       * _.omit({ 'name': 'moe', 'age': 40 }, function(value) {\n       *   return typeof value == 'number';\n       * });\n       * // => { 'name': 'moe' }",
        "* Creates a two dimensional array of the given object's key-value pairs,\n       * i.e. `[[key1, value1], [key2, value2]]`.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The object to inspect.\n       * @returns {Array} Returns new array of key-value pairs.\n       * @example\n       *\n       * _.pairs({ 'moe': 30, 'larry': 40 });\n       * // => [['moe', 30], ['larry', 40]] (order is not guaranteed)",
        "* Creates a shallow clone of `object` composed of the specified properties.\n       * Property names may be specified as individual arguments or as arrays of property\n       * names. If `callback` is passed, it will be executed for each property in the\n       * `object`, picking the properties `callback` returns truthy for. The `callback`\n       * is bound to `thisArg` and invoked with three arguments; (value, key, object).\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The source object.\n       * @param {Array|Function|String} callback|[prop1, prop2, ...] The function called\n       *  per iteration or properties to pick, either as individual arguments or arrays.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Object} Returns an object composed of the picked properties.\n       * @example\n       *\n       * _.pick({ 'name': 'moe', '_userid': 'moe1' }, 'name');\n       * // => { 'name': 'moe' }\n       *\n       * _.pick({ 'name': 'moe', '_userid': 'moe1' }, function(value, key) {\n       *   return key.charAt(0) != '_';\n       * });\n       * // => { 'name': 'moe' }",
        "* An alternative to `_.reduce`, this method transforms an `object` to a new\n       * `accumulator` object which is the result of running each of its elements\n       * through the `callback`, with each `callback` execution potentially mutating\n       * the `accumulator` object. The `callback` is bound to `thisArg` and invoked\n       * with four arguments; (accumulator, value, key, object). Callbacks may exit\n       * iteration early by explicitly returning `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Array|Object} collection The collection to iterate over.\n       * @param {Function} [callback=identity] The function called per iteration.\n       * @param {Mixed} [accumulator] The custom accumulator value.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the accumulated value.\n       * @example\n       *\n       * var squares = _.transform([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], function(result, num) {\n       *   num *= num;\n       *   if (num % 2) {\n       *     return result.push(num) < 3;\n       *   }\n       * });\n       * // => [1, 9, 25]\n       *\n       * var mapped = _.transform({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n       *   result[key] = num * 3;\n       * });\n       * // => { 'a': 3, 'b': 6, 'c': 9 }",
        "* Creates an array composed of the own enumerable property values of `object`.\n       *\n       * @static\n       * @memberOf _\n       * @category Objects\n       * @param {Object} object The object to inspect.\n       * @returns {Array} Returns a new array of property values.\n       * @example\n       *\n       * _.values({ 'one': 1, 'two': 2, 'three': 3 });\n       * // => [1, 2, 3] (order is not guaranteed)",
        "* Creates an array of elements from the specified indexes, or keys, of the\n       * `collection`. Indexes may be specified as individual arguments or as arrays\n       * of indexes.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Array|Number|String} [index1, index2, ...] The indexes of\n       *  `collection` to retrieve, either as individual arguments or arrays.\n       * @returns {Array} Returns a new array of elements corresponding to the\n       *  provided indexes.\n       * @example\n       *\n       * _.at(['a', 'b', 'c', 'd', 'e'], [0, 2, 4]);\n       * // => ['a', 'c', 'e']\n       *\n       * _.at(['moe', 'larry', 'curly'], 0, 2);\n       * // => ['moe', 'curly']",
        "* Checks if a given `target` element is present in a `collection` using strict\n       * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n       * as the offset from the end of the collection.\n       *\n       * @static\n       * @memberOf _\n       * @alias include\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Mixed} target The value to check for.\n       * @param {Number} [fromIndex=0] The index to search from.\n       * @returns {Boolean} Returns `true` if the `target` element is found, else `false`.\n       * @example\n       *\n       * _.contains([1, 2, 3], 1);\n       * // => true\n       *\n       * _.contains([1, 2, 3], 1, 2);\n       * // => false\n       *\n       * _.contains({ 'name': 'moe', 'age': 40 }, 'moe');\n       * // => true\n       *\n       * _.contains('curly', 'ur');\n       * // => true",
        "* Creates an object composed of keys returned from running each element of the\n       * `collection` through the given `callback`. The corresponding value of each key\n       * is the number of times the key was returned by the `callback`. The `callback`\n       * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Object} Returns the composed aggregate object.\n       * @example\n       *\n       * _.countBy([4.3, 6.1, 6.4], function(num) { return Math.floor(num); });\n       * // => { '4': 1, '6': 2 }\n       *\n       * _.countBy([4.3, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n       * // => { '4': 1, '6': 2 }\n       *\n       * _.countBy(['one', 'two', 'three'], 'length');\n       * // => { '3': 2, '5': 1 }",
        "* Checks if the `callback` returns a truthy value for **all** elements of a\n       * `collection`. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias all\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Boolean} Returns `true` if all elements pass the callback check,\n       *  else `false`.\n       * @example\n       *\n       * _.every([true, 1, null, 'yes'], Boolean);\n       * // => false\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.every(stooges, 'age');\n       * // => true\n       *\n       * // using \"_.where\" callback shorthand\n       * _.every(stooges, { 'age': 50 });\n       * // => false",
        "* Examines each element in a `collection`, returning an array of all elements\n       * the `callback` returns truthy for. The `callback` is bound to `thisArg` and\n       * invoked with three arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias select\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a new array of elements that passed the callback check.\n       * @example\n       *\n       * var evens = _.filter([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n       * // => [2, 4, 6]\n       *\n       * var food = [\n       *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n       *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.filter(food, 'organic');\n       * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]\n       *\n       * // using \"_.where\" callback shorthand\n       * _.filter(food, { 'type': 'fruit' });\n       * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]",
        "* Examines each element in a `collection`, returning the first that the `callback`\n       * returns truthy for. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias detect, findWhere\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the found element, else `undefined`.\n       * @example\n       *\n       * _.find([1, 2, 3, 4], function(num) {\n       *   return num % 2 == 0;\n       * });\n       * // => 2\n       *\n       * var food = [\n       *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n       *   { 'name': 'banana', 'organic': true,  'type': 'fruit' },\n       *   { 'name': 'beet',   'organic': false, 'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.where\" callback shorthand\n       * _.find(food, { 'type': 'vegetable' });\n       * // => { 'name': 'beet', 'organic': false, 'type': 'vegetable' }\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.find(food, 'organic');\n       * // => { 'name': 'banana', 'organic': true, 'type': 'fruit' }",
        "* Iterates over a `collection`, executing the `callback` for each element in\n       * the `collection`. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, index|key, collection). Callbacks may exit iteration early\n       * by explicitly returning `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias each\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function} [callback=identity] The function called per iteration.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array|Object|String} Returns `collection`.\n       * @example\n       *\n       * _([1, 2, 3]).forEach(alert).join(',');\n       * // => alerts each number and returns '1,2,3'\n       *\n       * _.forEach({ 'one': 1, 'two': 2, 'three': 3 }, alert);\n       * // => alerts each number value (order is not guaranteed)",
        "* Creates an object composed of keys returned from running each element of the\n       * `collection` through the `callback`. The corresponding value of each key is\n       * an array of elements passed to `callback` that returned the key. The `callback`\n       * is bound to `thisArg` and invoked with three arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Object} Returns the composed aggregate object.\n       * @example\n       *\n       * _.groupBy([4.2, 6.1, 6.4], function(num) { return Math.floor(num); });\n       * // => { '4': [4.2], '6': [6.1, 6.4] }\n       *\n       * _.groupBy([4.2, 6.1, 6.4], function(num) { return this.floor(num); }, Math);\n       * // => { '4': [4.2], '6': [6.1, 6.4] }\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.groupBy(['one', 'two', 'three'], 'length');\n       * // => { '3': ['one', 'two'], '5': ['three'] }",
        "* Invokes the method named by `methodName` on each element in the `collection`,\n       * returning an array of the results of each invoked method. Additional arguments\n       * will be passed to each invoked method. If `methodName` is a function, it will\n       * be invoked for, and `this` bound to, each element in the `collection`.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|String} methodName The name of the method to invoke or\n       *  the function invoked per iteration.\n       * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the method with.\n       * @returns {Array} Returns a new array of the results of each invoked method.\n       * @example\n       *\n       * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n       * // => [[1, 5, 7], [1, 2, 3]]\n       *\n       * _.invoke([123, 456], String.prototype.split, '');\n       * // => [['1', '2', '3'], ['4', '5', '6']]",
        "* Creates an array of values by running each element in the `collection`\n       * through the `callback`. The `callback` is bound to `thisArg` and invoked with\n       * three arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias collect\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a new array of the results of each `callback` execution.\n       * @example\n       *\n       * _.map([1, 2, 3], function(num) { return num * 3; });\n       * // => [3, 6, 9]\n       *\n       * _.map({ 'one': 1, 'two': 2, 'three': 3 }, function(num) { return num * 3; });\n       * // => [3, 6, 9] (order is not guaranteed)\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.map(stooges, 'name');\n       * // => ['moe', 'larry']",
        "* Retrieves the maximum value of an `array`. If `callback` is passed,\n       * it will be executed for each value in the `array` to generate the\n       * criterion by which the value is ranked. The `callback` is bound to\n       * `thisArg` and invoked with three arguments; (value, index, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the maximum value.\n       * @example\n       *\n       * _.max([4, 2, 8, 6]);\n       * // => 8\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * _.max(stooges, function(stooge) { return stooge.age; });\n       * // => { 'name': 'larry', 'age': 50 };\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.max(stooges, 'age');\n       * // => { 'name': 'larry', 'age': 50 };",
        "* Retrieves the minimum value of an `array`. If `callback` is passed,\n       * it will be executed for each value in the `array` to generate the\n       * criterion by which the value is ranked. The `callback` is bound to `thisArg`\n       * and invoked with three arguments; (value, index, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the minimum value.\n       * @example\n       *\n       * _.min([4, 2, 8, 6]);\n       * // => 2\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * _.min(stooges, function(stooge) { return stooge.age; });\n       * // => { 'name': 'moe', 'age': 40 };\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.min(stooges, 'age');\n       * // => { 'name': 'moe', 'age': 40 };",
        "* Retrieves the value of a specified property from all elements in the `collection`.\n       *\n       * @static\n       * @memberOf _\n       * @type Function\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {String} property The property to pluck.\n       * @returns {Array} Returns a new array of property values.\n       * @example\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * _.pluck(stooges, 'name');\n       * // => ['moe', 'larry']",
        "* Reduces a `collection` to a value which is the accumulated result of running\n       * each element in the `collection` through the `callback`, where each successive\n       * `callback` execution consumes the return value of the previous execution.\n       * If `accumulator` is not passed, the first element of the `collection` will be\n       * used as the initial `accumulator` value. The `callback` is bound to `thisArg`\n       * and invoked with four arguments; (accumulator, value, index|key, collection).\n       *\n       * @static\n       * @memberOf _\n       * @alias foldl, inject\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function} [callback=identity] The function called per iteration.\n       * @param {Mixed} [accumulator] Initial value of the accumulator.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the accumulated value.\n       * @example\n       *\n       * var sum = _.reduce([1, 2, 3], function(sum, num) {\n       *   return sum + num;\n       * });\n       * // => 6\n       *\n       * var mapped = _.reduce({ 'a': 1, 'b': 2, 'c': 3 }, function(result, num, key) {\n       *   result[key] = num * 3;\n       *   return result;\n       * }, {});\n       * // => { 'a': 3, 'b': 6, 'c': 9 }",
        "* This method is similar to `_.reduce`, except that it iterates over a\n       * `collection` from right to left.\n       *\n       * @static\n       * @memberOf _\n       * @alias foldr\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function} [callback=identity] The function called per iteration.\n       * @param {Mixed} [accumulator] Initial value of the accumulator.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the accumulated value.\n       * @example\n       *\n       * var list = [[0, 1], [2, 3], [4, 5]];\n       * var flat = _.reduceRight(list, function(a, b) { return a.concat(b); }, []);\n       * // => [4, 5, 2, 3, 0, 1]",
        "* The opposite of `_.filter`, this method returns the elements of a\n       * `collection` that `callback` does **not** return truthy for.\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a new array of elements that did **not** pass the\n       *  callback check.\n       * @example\n       *\n       * var odds = _.reject([1, 2, 3, 4, 5, 6], function(num) { return num % 2 == 0; });\n       * // => [1, 3, 5]\n       *\n       * var food = [\n       *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n       *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.reject(food, 'organic');\n       * // => [{ 'name': 'apple', 'organic': false, 'type': 'fruit' }]\n       *\n       * // using \"_.where\" callback shorthand\n       * _.reject(food, { 'type': 'fruit' });\n       * // => [{ 'name': 'carrot', 'organic': true, 'type': 'vegetable' }]",
        "* Creates an array of shuffled `array` values, using a version of the\n       * Fisher-Yates shuffle. See http://en.wikipedia.org/wiki/Fisher-Yates_shuffle.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to shuffle.\n       * @returns {Array} Returns a new shuffled collection.\n       * @example\n       *\n       * _.shuffle([1, 2, 3, 4, 5, 6]);\n       * // => [4, 1, 6, 3, 5, 2]",
        "* Gets the size of the `collection` by returning `collection.length` for arrays\n       * and array-like objects or the number of own enumerable properties for objects.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to inspect.\n       * @returns {Number} Returns `collection.length` or number of own enumerable properties.\n       * @example\n       *\n       * _.size([1, 2]);\n       * // => 2\n       *\n       * _.size({ 'one': 1, 'two': 2, 'three': 3 });\n       * // => 3\n       *\n       * _.size('curly');\n       * // => 5",
        "* Checks if the `callback` returns a truthy value for **any** element of a\n       * `collection`. The function returns as soon as it finds passing value, and\n       * does not iterate over the entire `collection`. The `callback` is bound to\n       * `thisArg` and invoked with three arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias any\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Boolean} Returns `true` if any element passes the callback check,\n       *  else `false`.\n       * @example\n       *\n       * _.some([null, 0, 'yes', false], Boolean);\n       * // => true\n       *\n       * var food = [\n       *   { 'name': 'apple',  'organic': false, 'type': 'fruit' },\n       *   { 'name': 'carrot', 'organic': true,  'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.some(food, 'organic');\n       * // => true\n       *\n       * // using \"_.where\" callback shorthand\n       * _.some(food, { 'type': 'meat' });\n       * // => false",
        "* Creates an array of elements, sorted in ascending order by the results of\n       * running each element in the `collection` through the `callback`. This method\n       * performs a stable sort, that is, it will preserve the original sort order of\n       * equal elements. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, index|key, collection).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a new array of sorted elements.\n       * @example\n       *\n       * _.sortBy([1, 2, 3], function(num) { return Math.sin(num); });\n       * // => [3, 1, 2]\n       *\n       * _.sortBy([1, 2, 3], function(num) { return this.sin(num); }, Math);\n       * // => [3, 1, 2]\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.sortBy(['banana', 'strawberry', 'apple'], 'length');\n       * // => ['apple', 'banana', 'strawberry']",
        "* Converts the `collection` to an array.\n       *\n       * @static\n       * @memberOf _\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to convert.\n       * @returns {Array} Returns the new converted array.\n       * @example\n       *\n       * (function() { return _.toArray(arguments).slice(1); })(1, 2, 3, 4);\n       * // => [2, 3, 4]",
        "* Examines each element in a `collection`, returning an array of all elements\n       * that have the given `properties`. When checking `properties`, this method\n       * performs a deep comparison between values to determine if they are equivalent\n       * to each other.\n       *\n       * @static\n       * @memberOf _\n       * @type Function\n       * @category Collections\n       * @param {Array|Object|String} collection The collection to iterate over.\n       * @param {Object} properties The object of property values to filter by.\n       * @returns {Array} Returns a new array of elements that have the given `properties`.\n       * @example\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * _.where(stooges, { 'age': 40 });\n       * // => [{ 'name': 'moe', 'age': 40 }]",
        "* Creates an array with all falsey values of `array` removed. The values\n       * `false`, `null`, `0`, `\"\"`, `undefined` and `NaN` are all falsey.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to compact.\n       * @returns {Array} Returns a new filtered array.\n       * @example\n       *\n       * _.compact([0, 1, false, 2, '', 3]);\n       * // => [1, 2, 3]",
        "* Creates an array of `array` elements not present in the other arrays\n       * using strict equality for comparisons, i.e. `===`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to process.\n       * @param {Array} [array1, array2, ...] Arrays to check.\n       * @returns {Array} Returns a new array of `array` elements not present in the\n       *  other arrays.\n       * @example\n       *\n       * _.difference([1, 2, 3, 4, 5], [5, 2, 10]);\n       * // => [1, 3, 4]",
        "* This method is similar to `_.find`, except that it returns the index of\n       * the element that passes the callback check, instead of the element itself.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to search.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the index of the found element, else `-1`.\n       * @example\n       *\n       * _.findIndex(['apple', 'banana', 'beet'], function(food) {\n       *   return /^b/.test(food);\n       * });\n       * // => 1",
        "* Gets the first element of the `array`. If a number `n` is passed, the first\n       * `n` elements of the `array` are returned. If a `callback` function is passed,\n       * elements at the beginning of the array are returned as long as the `callback`\n       * returns truthy. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, index, array).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias head, take\n       * @category Arrays\n       * @param {Array} array The array to query.\n       * @param {Function|Object|Number|String} [callback|n] The function called\n       *  per element or the number of elements to return. If a property name or\n       *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n       *  style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the first element(s) of `array`.\n       * @example\n       *\n       * _.first([1, 2, 3]);\n       * // => 1\n       *\n       * _.first([1, 2, 3], 2);\n       * // => [1, 2]\n       *\n       * _.first([1, 2, 3], function(num) {\n       *   return num < 3;\n       * });\n       * // => [1, 2]\n       *\n       * var food = [\n       *   { 'name': 'banana', 'organic': true },\n       *   { 'name': 'beet',   'organic': false },\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.first(food, 'organic');\n       * // => [{ 'name': 'banana', 'organic': true }]\n       *\n       * var food = [\n       *   { 'name': 'apple',  'type': 'fruit' },\n       *   { 'name': 'banana', 'type': 'fruit' },\n       *   { 'name': 'beet',   'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.where\" callback shorthand\n       * _.first(food, { 'type': 'fruit' });\n       * // => [{ 'name': 'apple', 'type': 'fruit' }, { 'name': 'banana', 'type': 'fruit' }]",
        "* Flattens a nested array (the nesting can be to any depth). If `isShallow`\n       * is truthy, `array` will only be flattened a single level. If `callback`\n       * is passed, each element of `array` is passed through a `callback` before\n       * flattening. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, index, array).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to flatten.\n       * @param {Boolean} [isShallow=false] A flag to indicate only flattening a single level.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a new flattened array.\n       * @example\n       *\n       * _.flatten([1, [2], [3, [[4]]]]);\n       * // => [1, 2, 3, 4];\n       *\n       * _.flatten([1, [2], [3, [[4]]]], true);\n       * // => [1, 2, 3, [[4]]];\n       *\n       * var stooges = [\n       *   { 'name': 'curly', 'quotes': ['Oh, a wise guy, eh?', 'Poifect!'] },\n       *   { 'name': 'moe', 'quotes': ['Spread out!', 'You knucklehead!'] }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.flatten(stooges, 'quotes');\n       * // => ['Oh, a wise guy, eh?', 'Poifect!', 'Spread out!', 'You knucklehead!']",
        "* Gets the index at which the first occurrence of `value` is found using\n       * strict equality for comparisons, i.e. `===`. If the `array` is already\n       * sorted, passing `true` for `fromIndex` will run a faster binary search.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to search.\n       * @param {Mixed} value The value to search for.\n       * @param {Boolean|Number} [fromIndex=0] The index to search from or `true` to\n       *  perform a binary search on a sorted `array`.\n       * @returns {Number} Returns the index of the matched value or `-1`.\n       * @example\n       *\n       * _.indexOf([1, 2, 3, 1, 2, 3], 2);\n       * // => 1\n       *\n       * _.indexOf([1, 2, 3, 1, 2, 3], 2, 3);\n       * // => 4\n       *\n       * _.indexOf([1, 1, 2, 2, 3, 3], 2, true);\n       * // => 2",
        "* Gets all but the last element of `array`. If a number `n` is passed, the\n       * last `n` elements are excluded from the result. If a `callback` function\n       * is passed, elements at the end of the array are excluded from the result\n       * as long as the `callback` returns truthy. The `callback` is bound to\n       * `thisArg` and invoked with three arguments; (value, index, array).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to query.\n       * @param {Function|Object|Number|String} [callback|n=1] The function called\n       *  per element or the number of elements to exclude. If a property name or\n       *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n       *  style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a slice of `array`.\n       * @example\n       *\n       * _.initial([1, 2, 3]);\n       * // => [1, 2]\n       *\n       * _.initial([1, 2, 3], 2);\n       * // => [1]\n       *\n       * _.initial([1, 2, 3], function(num) {\n       *   return num > 1;\n       * });\n       * // => [1]\n       *\n       * var food = [\n       *   { 'name': 'beet',   'organic': false },\n       *   { 'name': 'carrot', 'organic': true }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.initial(food, 'organic');\n       * // => [{ 'name': 'beet',   'organic': false }]\n       *\n       * var food = [\n       *   { 'name': 'banana', 'type': 'fruit' },\n       *   { 'name': 'beet',   'type': 'vegetable' },\n       *   { 'name': 'carrot', 'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.where\" callback shorthand\n       * _.initial(food, { 'type': 'vegetable' });\n       * // => [{ 'name': 'banana', 'type': 'fruit' }]",
        "* Computes the intersection of all the passed-in arrays using strict equality\n       * for comparisons, i.e. `===`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} [array1, array2, ...] Arrays to process.\n       * @returns {Array} Returns a new array of unique elements that are present\n       *  in **all** of the arrays.\n       * @example\n       *\n       * _.intersection([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n       * // => [1, 2]",
        "* Gets the last element of the `array`. If a number `n` is passed, the\n       * last `n` elements of the `array` are returned. If a `callback` function\n       * is passed, elements at the end of the array are returned as long as the\n       * `callback` returns truthy. The `callback` is bound to `thisArg` and\n       * invoked with three arguments;(value, index, array).\n       *\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to query.\n       * @param {Function|Object|Number|String} [callback|n] The function called\n       *  per element or the number of elements to return. If a property name or\n       *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n       *  style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Mixed} Returns the last element(s) of `array`.\n       * @example\n       *\n       * _.last([1, 2, 3]);\n       * // => 3\n       *\n       * _.last([1, 2, 3], 2);\n       * // => [2, 3]\n       *\n       * _.last([1, 2, 3], function(num) {\n       *   return num > 1;\n       * });\n       * // => [2, 3]\n       *\n       * var food = [\n       *   { 'name': 'beet',   'organic': false },\n       *   { 'name': 'carrot', 'organic': true }\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.last(food, 'organic');\n       * // => [{ 'name': 'carrot', 'organic': true }]\n       *\n       * var food = [\n       *   { 'name': 'banana', 'type': 'fruit' },\n       *   { 'name': 'beet',   'type': 'vegetable' },\n       *   { 'name': 'carrot', 'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.where\" callback shorthand\n       * _.last(food, { 'type': 'vegetable' });\n       * // => [{ 'name': 'beet', 'type': 'vegetable' }, { 'name': 'carrot', 'type': 'vegetable' }]",
        "* Gets the index at which the last occurrence of `value` is found using strict\n       * equality for comparisons, i.e. `===`. If `fromIndex` is negative, it is used\n       * as the offset from the end of the collection.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to search.\n       * @param {Mixed} value The value to search for.\n       * @param {Number} [fromIndex=array.length-1] The index to search from.\n       * @returns {Number} Returns the index of the matched value or `-1`.\n       * @example\n       *\n       * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2);\n       * // => 4\n       *\n       * _.lastIndexOf([1, 2, 3, 1, 2, 3], 2, 3);\n       * // => 1",
        "* Creates an array of numbers (positive and/or negative) progressing from\n       * `start` up to but not including `end`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Number} [start=0] The start of the range.\n       * @param {Number} end The end of the range.\n       * @param {Number} [step=1] The value to increment or decrement by.\n       * @returns {Array} Returns a new range array.\n       * @example\n       *\n       * _.range(10);\n       * // => [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n       *\n       * _.range(1, 11);\n       * // => [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n       *\n       * _.range(0, 30, 5);\n       * // => [0, 5, 10, 15, 20, 25]\n       *\n       * _.range(0, -10, -1);\n       * // => [0, -1, -2, -3, -4, -5, -6, -7, -8, -9]\n       *\n       * _.range(0);\n       * // => []",
        "* The opposite of `_.initial`, this method gets all but the first value of\n       * `array`. If a number `n` is passed, the first `n` values are excluded from\n       * the result. If a `callback` function is passed, elements at the beginning\n       * of the array are excluded from the result as long as the `callback` returns\n       * truthy. The `callback` is bound to `thisArg` and invoked with three\n       * arguments; (value, index, array).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias drop, tail\n       * @category Arrays\n       * @param {Array} array The array to query.\n       * @param {Function|Object|Number|String} [callback|n=1] The function called\n       *  per element or the number of elements to exclude. If a property name or\n       *  object is passed, it will be used to create a \"_.pluck\" or \"_.where\"\n       *  style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a slice of `array`.\n       * @example\n       *\n       * _.rest([1, 2, 3]);\n       * // => [2, 3]\n       *\n       * _.rest([1, 2, 3], 2);\n       * // => [3]\n       *\n       * _.rest([1, 2, 3], function(num) {\n       *   return num < 3;\n       * });\n       * // => [3]\n       *\n       * var food = [\n       *   { 'name': 'banana', 'organic': true },\n       *   { 'name': 'beet',   'organic': false },\n       * ];\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.rest(food, 'organic');\n       * // => [{ 'name': 'beet', 'organic': false }]\n       *\n       * var food = [\n       *   { 'name': 'apple',  'type': 'fruit' },\n       *   { 'name': 'banana', 'type': 'fruit' },\n       *   { 'name': 'beet',   'type': 'vegetable' }\n       * ];\n       *\n       * // using \"_.where\" callback shorthand\n       * _.rest(food, { 'type': 'fruit' });\n       * // => [{ 'name': 'beet', 'type': 'vegetable' }]",
        "* Uses a binary search to determine the smallest index at which the `value`\n       * should be inserted into `array` in order to maintain the sort order of the\n       * sorted `array`. If `callback` is passed, it will be executed for `value` and\n       * each element in `array` to compute their sort ranking. The `callback` is\n       * bound to `thisArg` and invoked with one argument; (value).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to inspect.\n       * @param {Mixed} value The value to evaluate.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Number} Returns the index at which the value should be inserted\n       *  into `array`.\n       * @example\n       *\n       * _.sortedIndex([20, 30, 50], 40);\n       * // => 2\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.sortedIndex([{ 'x': 20 }, { 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n       * // => 2\n       *\n       * var dict = {\n       *   'wordToNumber': { 'twenty': 20, 'thirty': 30, 'fourty': 40, 'fifty': 50 }\n       * };\n       *\n       * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n       *   return dict.wordToNumber[word];\n       * });\n       * // => 2\n       *\n       * _.sortedIndex(['twenty', 'thirty', 'fifty'], 'fourty', function(word) {\n       *   return this.wordToNumber[word];\n       * }, dict);\n       * // => 2",
        "* Computes the union of the passed-in arrays using strict equality for\n       * comparisons, i.e. `===`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} [array1, array2, ...] Arrays to process.\n       * @returns {Array} Returns a new array of unique values, in order, that are\n       *  present in one or more of the arrays.\n       * @example\n       *\n       * _.union([1, 2, 3], [101, 2, 1, 10], [2, 1]);\n       * // => [1, 2, 3, 101, 10]",
        "* Creates a duplicate-value-free version of the `array` using strict equality\n       * for comparisons, i.e. `===`. If the `array` is already sorted, passing `true`\n       * for `isSorted` will run a faster algorithm. If `callback` is passed, each\n       * element of `array` is passed through the `callback` before uniqueness is computed.\n       * The `callback` is bound to `thisArg` and invoked with three arguments; (value, index, array).\n       *\n       * If a property name is passed for `callback`, the created \"_.pluck\" style\n       * callback will return the property value of the given element.\n       *\n       * If an object is passed for `callback`, the created \"_.where\" style callback\n       * will return `true` for elements that have the properties of the given object,\n       * else `false`.\n       *\n       * @static\n       * @memberOf _\n       * @alias unique\n       * @category Arrays\n       * @param {Array} array The array to process.\n       * @param {Boolean} [isSorted=false] A flag to indicate that the `array` is already sorted.\n       * @param {Function|Object|String} [callback=identity] The function called per\n       *  iteration. If a property name or object is passed, it will be used to create\n       *  a \"_.pluck\" or \"_.where\" style callback, respectively.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a duplicate-value-free array.\n       * @example\n       *\n       * _.uniq([1, 2, 1, 3, 1]);\n       * // => [1, 2, 3]\n       *\n       * _.uniq([1, 1, 2, 2, 3], true);\n       * // => [1, 2, 3]\n       *\n       * _.uniq(['A', 'b', 'C', 'a', 'B', 'c'], function(letter) { return letter.toLowerCase(); });\n       * // => ['A', 'b', 'C']\n       *\n       * _.uniq([1, 2.5, 3, 1.5, 2, 3.5], function(num) { return this.floor(num); }, Math);\n       * // => [1, 2.5, 3]\n       *\n       * // using \"_.pluck\" callback shorthand\n       * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n       * // => [{ 'x': 1 }, { 'x': 2 }]",
        "* The inverse of `_.zip`, this method splits groups of elements into arrays\n       * composed of elements from each group at their corresponding indexes.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to process.\n       * @returns {Array} Returns a new array of the composed arrays.\n       * @example\n       *\n       * _.unzip([['moe', 30, true], ['larry', 40, false]]);\n       * // => [['moe', 'larry'], [30, 40], [true, false]];",
        "* Creates an array with all occurrences of the passed values removed using\n       * strict equality for comparisons, i.e. `===`.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} array The array to filter.\n       * @param {Mixed} [value1, value2, ...] Values to remove.\n       * @returns {Array} Returns a new filtered array.\n       * @example\n       *\n       * _.without([1, 2, 1, 0, 3, 1, 4], 0, 1);\n       * // => [2, 3, 4]",
        "* Groups the elements of each array at their corresponding indexes. Useful for\n       * separate data sources that are coordinated through matching array indexes.\n       * For a matrix of nested arrays, `_.zip.apply(...)` can transpose the matrix\n       * in a similar fashion.\n       *\n       * @static\n       * @memberOf _\n       * @category Arrays\n       * @param {Array} [array1, array2, ...] Arrays to process.\n       * @returns {Array} Returns a new array of grouped elements.\n       * @example\n       *\n       * _.zip(['moe', 'larry'], [30, 40], [true, false]);\n       * // => [['moe', 30, true], ['larry', 40, false]]",
        "* Creates an object composed from arrays of `keys` and `values`. Pass either\n       * a single two dimensional array, i.e. `[[key1, value1], [key2, value2]]`, or\n       * two arrays, one of `keys` and one of corresponding `values`.\n       *\n       * @static\n       * @memberOf _\n       * @alias object\n       * @category Arrays\n       * @param {Array} keys The array of keys.\n       * @param {Array} [values=[]] The array of values.\n       * @returns {Object} Returns an object composed of the given keys and\n       *  corresponding values.\n       * @example\n       *\n       * _.zipObject(['moe', 'larry'], [30, 40]);\n       * // => { 'moe': 30, 'larry': 40 }",
        "* If `n` is greater than `0`, a function is created that is restricted to\n       * executing `func`, with the `this` binding and arguments of the created\n       * function, only after it is called `n` times. If `n` is less than `1`,\n       * `func` is executed immediately, without a `this` binding or additional\n       * arguments, and its result is returned.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Number} n The number of times the function must be called before\n       * it is executed.\n       * @param {Function} func The function to restrict.\n       * @returns {Function} Returns the new restricted function.\n       * @example\n       *\n       * var renderNotes = _.after(notes.length, render);\n       * _.forEach(notes, function(note) {\n       *   note.asyncSave({ 'success': renderNotes });\n       * });\n       * // `renderNotes` is run once, after all notes have saved",
        "* Creates a function that, when called, invokes `func` with the `this`\n       * binding of `thisArg` and prepends any additional `bind` arguments to those\n       * passed to the bound function.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to bind.\n       * @param {Mixed} [thisArg] The `this` binding of `func`.\n       * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n       * @returns {Function} Returns the new bound function.\n       * @example\n       *\n       * var func = function(greeting) {\n       *   return greeting + ' ' + this.name;\n       * };\n       *\n       * func = _.bind(func, { 'name': 'moe' }, 'hi');\n       * func();\n       * // => 'hi moe'",
        "* Binds methods on `object` to `object`, overwriting the existing method.\n       * Method names may be specified as individual arguments or as arrays of method\n       * names. If no method names are provided, all the function properties of `object`\n       * will be bound.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Object} object The object to bind and assign the bound methods to.\n       * @param {String} [methodName1, methodName2, ...] Method names on the object to bind.\n       * @returns {Object} Returns `object`.\n       * @example\n       *\n       * var view = {\n       *  'label': 'docs',\n       *  'onClick': function() { alert('clicked ' + this.label); }\n       * };\n       *\n       * _.bindAll(view);\n       * jQuery('#docs').on('click', view.onClick);\n       * // => alerts 'clicked docs', when the button is clicked",
        "* Creates a function that, when called, invokes the method at `object[key]`\n       * and prepends any additional `bindKey` arguments to those passed to the bound\n       * function. This method differs from `_.bind` by allowing bound functions to\n       * reference methods that will be redefined or don't yet exist.\n       * See http://michaux.ca/articles/lazy-function-definition-pattern.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Object} object The object the method belongs to.\n       * @param {String} key The key of the method.\n       * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n       * @returns {Function} Returns the new bound function.\n       * @example\n       *\n       * var object = {\n       *   'name': 'moe',\n       *   'greet': function(greeting) {\n       *     return greeting + ' ' + this.name;\n       *   }\n       * };\n       *\n       * var func = _.bindKey(object, 'greet', 'hi');\n       * func();\n       * // => 'hi moe'\n       *\n       * object.greet = function(greeting) {\n       *   return greeting + ', ' + this.name + '!';\n       * };\n       *\n       * func();\n       * // => 'hi, moe!'",
        "* Creates a function that is the composition of the passed functions,\n       * where each function consumes the return value of the function that follows.\n       * For example, composing the functions `f()`, `g()`, and `h()` produces `f(g(h()))`.\n       * Each function is executed with the `this` binding of the composed function.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} [func1, func2, ...] Functions to compose.\n       * @returns {Function} Returns the new composed function.\n       * @example\n       *\n       * var greet = function(name) { return 'hi ' + name; };\n       * var exclaim = function(statement) { return statement + '!'; };\n       * var welcome = _.compose(exclaim, greet);\n       * welcome('moe');\n       * // => 'hi moe!'",
        "* Produces a callback bound to an optional `thisArg`. If `func` is a property\n       * name, the created callback will return the property value for a given element.\n       * If `func` is an object, the created callback will return `true` for elements\n       * that contain the equivalent object properties, otherwise it will return `false`.\n       *\n       * Note: All Lo-Dash methods, that accept a `callback` argument, use `_.createCallback`.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Mixed} [func=identity] The value to convert to a callback.\n       * @param {Mixed} [thisArg] The `this` binding of the created callback.\n       * @param {Number} [argCount=3] The number of arguments the callback accepts.\n       * @returns {Function} Returns a callback function.\n       * @example\n       *\n       * var stooges = [\n       *   { 'name': 'moe', 'age': 40 },\n       *   { 'name': 'larry', 'age': 50 }\n       * ];\n       *\n       * // wrap to create custom callback shorthands\n       * _.createCallback = _.wrap(_.createCallback, function(func, callback, thisArg) {\n       *   var match = /^(.+?)__([gl]t)(.+)$/.exec(callback);\n       *   return !match ? func(callback, thisArg) : function(object) {\n       *     return match[2] == 'gt' ? object[match[1]] > match[3] : object[match[1]] < match[3];\n       *   };\n       * });\n       *\n       * _.filter(stooges, 'age__gt45');\n       * // => [{ 'name': 'larry', 'age': 50 }]\n       *\n       * // create mixins with support for \"_.pluck\" and \"_.where\" callback shorthands\n       * _.mixin({\n       *   'toLookup': function(collection, callback, thisArg) {\n       *     callback = _.createCallback(callback, thisArg);\n       *     return _.reduce(collection, function(result, value, index, collection) {\n       *       return (result[callback(value, index, collection)] = value, result);\n       *     }, {});\n       *   }\n       * });\n       *\n       * _.toLookup(stooges, 'name');\n       * // => { 'moe': { 'name': 'moe', 'age': 40 }, 'larry': { 'name': 'larry', 'age': 50 } }",
        "* Creates a function that will delay the execution of `func` until after\n       * `wait` milliseconds have elapsed since the last time it was invoked. Pass\n       * an `options` object to indicate that `func` should be invoked on the leading\n       * and/or trailing edge of the `wait` timeout. Subsequent calls to the debounced\n       * function will return the result of the last `func` call.\n       *\n       * Note: If `leading` and `trailing` options are `true`, `func` will be called\n       * on the trailing edge of the timeout only if the the debounced function is\n       * invoked more than once during the `wait` timeout.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to debounce.\n       * @param {Number} wait The number of milliseconds to delay.\n       * @param {Object} options The options object.\n       *  [leading=false] A boolean to specify execution on the leading edge of the timeout.\n       *  [maxWait] The maximum time `func` is allowed to be delayed before it's called.\n       *  [trailing=true] A boolean to specify execution on the trailing edge of the timeout.\n       * @returns {Function} Returns the new debounced function.\n       * @example\n       *\n       * var lazyLayout = _.debounce(calculateLayout, 300);\n       * jQuery(window).on('resize', lazyLayout);\n       *\n       * jQuery('#postbox').on('click', _.debounce(sendMail, 200, {\n       *   'leading': true,\n       *   'trailing': false\n       * });",
        "* Defers executing the `func` function until the current call stack has cleared.\n       * Additional arguments will be passed to `func` when it is invoked.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to defer.\n       * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n       * @returns {Number} Returns the timer id.\n       * @example\n       *\n       * _.defer(function() { alert('deferred'); });\n       * // returns from the function before `alert` is called",
        "* Executes the `func` function after `wait` milliseconds. Additional arguments\n       * will be passed to `func` when it is invoked.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to delay.\n       * @param {Number} wait The number of milliseconds to delay execution.\n       * @param {Mixed} [arg1, arg2, ...] Arguments to invoke the function with.\n       * @returns {Number} Returns the timer id.\n       * @example\n       *\n       * var log = _.bind(console.log, console);\n       * _.delay(log, 1000, 'logged later');\n       * // => 'logged later' (Appears after one second.)",
        "* Creates a function that memoizes the result of `func`. If `resolver` is\n       * passed, it will be used to determine the cache key for storing the result\n       * based on the arguments passed to the memoized function. By default, the first\n       * argument passed to the memoized function is used as the cache key. The `func`\n       * is executed with the `this` binding of the memoized function. The result\n       * cache is exposed as the `cache` property on the memoized function.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to have its output memoized.\n       * @param {Function} [resolver] A function used to resolve the cache key.\n       * @returns {Function} Returns the new memoizing function.\n       * @example\n       *\n       * var fibonacci = _.memoize(function(n) {\n       *   return n < 2 ? n : fibonacci(n - 1) + fibonacci(n - 2);\n       * });",
        "* Creates a function that is restricted to execute `func` once. Repeat calls to\n       * the function will return the value of the first call. The `func` is executed\n       * with the `this` binding of the created function.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to restrict.\n       * @returns {Function} Returns the new restricted function.\n       * @example\n       *\n       * var initialize = _.once(createApplication);\n       * initialize();\n       * initialize();\n       * // `initialize` executes `createApplication` once",
        "* Creates a function that, when called, invokes `func` with any additional\n       * `partial` arguments prepended to those passed to the new function. This\n       * method is similar to `_.bind`, except it does **not** alter the `this` binding.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to partially apply arguments to.\n       * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n       * @returns {Function} Returns the new partially applied function.\n       * @example\n       *\n       * var greet = function(greeting, name) { return greeting + ' ' + name; };\n       * var hi = _.partial(greet, 'hi');\n       * hi('moe');\n       * // => 'hi moe'",
        "* This method is similar to `_.partial`, except that `partial` arguments are\n       * appended to those passed to the new function.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to partially apply arguments to.\n       * @param {Mixed} [arg1, arg2, ...] Arguments to be partially applied.\n       * @returns {Function} Returns the new partially applied function.\n       * @example\n       *\n       * var defaultsDeep = _.partialRight(_.merge, _.defaults);\n       *\n       * var options = {\n       *   'variable': 'data',\n       *   'imports': { 'jq': $ }\n       * };\n       *\n       * defaultsDeep(options, _.templateSettings);\n       *\n       * options.variable\n       * // => 'data'\n       *\n       * options.imports\n       * // => { '_': _, 'jq': $ }",
        "* Creates a function that, when executed, will only call the `func` function\n       * at most once per every `wait` milliseconds. Pass an `options` object to\n       * indicate that `func` should be invoked on the leading and/or trailing edge\n       * of the `wait` timeout. Subsequent calls to the throttled function will\n       * return the result of the last `func` call.\n       *\n       * Note: If `leading` and `trailing` options are `true`, `func` will be called\n       * on the trailing edge of the timeout only if the the throttled function is\n       * invoked more than once during the `wait` timeout.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Function} func The function to throttle.\n       * @param {Number} wait The number of milliseconds to throttle executions to.\n       * @param {Object} options The options object.\n       *  [leading=true] A boolean to specify execution on the leading edge of the timeout.\n       *  [trailing=true] A boolean to specify execution on the trailing edge of the timeout.\n       * @returns {Function} Returns the new throttled function.\n       * @example\n       *\n       * var throttled = _.throttle(updatePosition, 100);\n       * jQuery(window).on('scroll', throttled);\n       *\n       * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n       *   'trailing': false\n       * }));",
        "* Creates a function that passes `value` to the `wrapper` function as its\n       * first argument. Additional arguments passed to the function are appended\n       * to those passed to the `wrapper` function. The `wrapper` is executed with\n       * the `this` binding of the created function.\n       *\n       * @static\n       * @memberOf _\n       * @category Functions\n       * @param {Mixed} value The value to wrap.\n       * @param {Function} wrapper The wrapper function.\n       * @returns {Function} Returns the new function.\n       * @example\n       *\n       * var hello = function(name) { return 'hello ' + name; };\n       * hello = _.wrap(hello, function(func) {\n       *   return 'before, ' + func('moe') + ', after';\n       * });\n       * hello();\n       * // => 'before, hello moe, after'",
        "* Converts the characters `&`, `<`, `>`, `\"`, and `'` in `string` to their\n       * corresponding HTML entities.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {String} string The string to escape.\n       * @returns {String} Returns the escaped string.\n       * @example\n       *\n       * _.escape('Moe, Larry & Curly');\n       * // => 'Moe, Larry &amp; Curly'",
        "* This method returns the first argument passed to it.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {Mixed} value Any value.\n       * @returns {Mixed} Returns `value`.\n       * @example\n       *\n       * var moe = { 'name': 'moe' };\n       * moe === _.identity(moe);\n       * // => true",
        "* Adds functions properties of `object` to the `lodash` function and chainable\n       * wrapper.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {Object} object The object of function properties to add to `lodash`.\n       * @example\n       *\n       * _.mixin({\n       *   'capitalize': function(string) {\n       *     return string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n       *   }\n       * });\n       *\n       * _.capitalize('moe');\n       * // => 'Moe'\n       *\n       * _('moe').capitalize();\n       * // => 'Moe'",
        "* Reverts the '_' variable to its previous value and returns a reference to\n       * the `lodash` function.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @returns {Function} Returns the `lodash` function.\n       * @example\n       *\n       * var lodash = _.noConflict();",
        "* Converts the given `value` into an integer of the specified `radix`.\n       * If `radix` is `undefined` or `0`, a `radix` of `10` is used unless the\n       * `value` is a hexadecimal, in which case a `radix` of `16` is used.\n       *\n       * Note: This method avoids differences in native ES3 and ES5 `parseInt`\n       * implementations. See http://es5.github.com/#E.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {String} value The value to parse.\n       * @param {Number} [radix] The radix used to interpret the value to parse.\n       * @returns {Number} Returns the new integer value.\n       * @example\n       *\n       * _.parseInt('08');\n       * // => 8",
        "* Produces a random number between `min` and `max` (inclusive). If only one\n       * argument is passed, a number between `0` and the given number will be returned.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {Number} [min=0] The minimum possible value.\n       * @param {Number} [max=1] The maximum possible value.\n       * @returns {Number} Returns a random number.\n       * @example\n       *\n       * _.random(0, 5);\n       * // => a number between 0 and 5\n       *\n       * _.random(5);\n       * // => also a number between 0 and 5",
        "* Resolves the value of `property` on `object`. If `property` is a function,\n       * it will be invoked with the `this` binding of `object` and its result returned,\n       * else the property value is returned. If `object` is falsey, then `undefined`\n       * is returned.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {Object} object The object to inspect.\n       * @param {String} property The property to get the value of.\n       * @returns {Mixed} Returns the resolved value.\n       * @example\n       *\n       * var object = {\n       *   'cheese': 'crumpets',\n       *   'stuff': function() {\n       *     return 'nonsense';\n       *   }\n       * };\n       *\n       * _.result(object, 'cheese');\n       * // => 'crumpets'\n       *\n       * _.result(object, 'stuff');\n       * // => 'nonsense'",
        "* A micro-templating method that handles arbitrary delimiters, preserves\n       * whitespace, and correctly escapes quotes within interpolated code.\n       *\n       * Note: In the development build, `_.template` utilizes sourceURLs for easier\n       * debugging. See http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl\n       *\n       * For more information on precompiling templates see:\n       * http://lodash.com/#custom-builds\n       *\n       * For more information on Chrome extension sandboxes see:\n       * http://developer.chrome.com/stable/extensions/sandboxingEval.html\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {String} text The template text.\n       * @param {Object} data The data object used to populate the text.\n       * @param {Object} options The options object.\n       *  escape - The \"escape\" delimiter regexp.\n       *  evaluate - The \"evaluate\" delimiter regexp.\n       *  interpolate - The \"interpolate\" delimiter regexp.\n       *  sourceURL - The sourceURL of the template's compiled source.\n       *  variable - The data object variable name.\n       * @returns {Function|String} Returns a compiled function when no `data` object\n       *  is given, else it returns the interpolated text.\n       * @example\n       *\n       * // using a compiled template\n       * var compiled = _.template('hello <%= name %>');\n       * compiled({ 'name': 'moe' });\n       * // => 'hello moe'\n       *\n       * var list = '<% _.forEach(people, function(name) { %><li><%= name %></li><% }); %>';\n       * _.template(list, { 'people': ['moe', 'larry'] });\n       * // => '<li>moe</li><li>larry</li>'\n       *\n       * // using the \"escape\" delimiter to escape HTML in data property values\n       * _.template('<b><%- value %></b>', { 'value': '<script>' });\n       * // => '<b>&lt;script&gt;</b>'\n       *\n       * // using the ES6 delimiter as an alternative to the default \"interpolate\" delimiter\n       * _.template('hello ${ name }', { 'name': 'curly' });\n       * // => 'hello curly'\n       *\n       * // using the internal `print` function in \"evaluate\" delimiters\n       * _.template('<% print(\"hello \" + epithet); %>!', { 'epithet': 'stooge' });\n       * // => 'hello stooge!'\n       *\n       * // using custom template delimiters\n       * _.templateSettings = {\n       *   'interpolate': /{{([\\s\\S]+?)}}/g\n       * };\n       *\n       * _.template('hello {{ name }}!', { 'name': 'mustache' });\n       * // => 'hello mustache!'\n       *\n       * // using the `sourceURL` option to specify a custom sourceURL for the template\n       * var compiled = _.template('hello <%= name %>', null, { 'sourceURL': '/basic/greeting.jst' });\n       * compiled(data);\n       * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n       *\n       * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n       * var compiled = _.template('hi <%= data.name %>!', null, { 'variable': 'data' });\n       * compiled.source;\n       * // => function(data) {\n       *   var __t, __p = '', __e = _.escape;\n       *   __p += 'hi ' + ((__t = ( data.name )) == null ? '' : __t) + '!';\n       *   return __p;\n       * }\n       *\n       * // using the `source` property to inline compiled templates for meaningful\n       * // line numbers in error messages and a stack trace\n       * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n       *   var JST = {\\\n       *     \"main\": ' + _.template(mainText).source + '\\\n       *   };\\\n       * ');",
        "* Executes the `callback` function `n` times, returning an array of the results\n       * of each `callback` execution. The `callback` is bound to `thisArg` and invoked\n       * with one argument; (index).\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {Number} n The number of times to execute the callback.\n       * @param {Function} callback The function called per iteration.\n       * @param {Mixed} [thisArg] The `this` binding of `callback`.\n       * @returns {Array} Returns a new array of the results of each `callback` execution.\n       * @example\n       *\n       * var diceRolls = _.times(3, _.partial(_.random, 1, 6));\n       * // => [3, 6, 4]\n       *\n       * _.times(3, function(n) { mage.castSpell(n); });\n       * // => calls `mage.castSpell(n)` three times, passing `n` of `0`, `1`, and `2` respectively\n       *\n       * _.times(3, function(n) { this.cast(n); }, mage);\n       * // => also calls `mage.castSpell(n)` three times",
        "* The inverse of `_.escape`, this method converts the HTML entities\n       * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to their\n       * corresponding characters.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {String} string The string to unescape.\n       * @returns {String} Returns the unescaped string.\n       * @example\n       *\n       * _.unescape('Moe, Larry &amp; Curly');\n       * // => 'Moe, Larry & Curly'",
        "* Generates a unique ID. If `prefix` is passed, the ID will be appended to it.\n       *\n       * @static\n       * @memberOf _\n       * @category Utilities\n       * @param {String} [prefix] The value to prefix the ID with.\n       * @returns {String} Returns the unique ID.\n       * @example\n       *\n       * _.uniqueId('contact_');\n       * // => 'contact_104'\n       *\n       * _.uniqueId();\n       * // => '105'",
        "* Invokes `interceptor` with the `value` as the first argument, and then\n       * returns `value`. The purpose of this method is to \"tap into\" a method chain,\n       * in order to perform operations on intermediate results within the chain.\n       *\n       * @static\n       * @memberOf _\n       * @category Chaining\n       * @param {Mixed} value The value to pass to `interceptor`.\n       * @param {Function} interceptor The function to invoke.\n       * @returns {Mixed} Returns `value`.\n       * @example\n       *\n       * _([1, 2, 3, 4])\n       *  .filter(function(num) { return num % 2 == 0; })\n       *  .tap(alert)\n       *  .map(function(num) { return num * num; })\n       *  .value();\n       * // => // [2, 4] (alerted)\n       * // => [4, 16]",
        "* Produces the `toString` result of the wrapped value.\n       *\n       * @name toString\n       * @memberOf _\n       * @category Chaining\n       * @returns {String} Returns the string result.\n       * @example\n       *\n       * _([1, 2, 3]).toString();\n       * // => '1,2,3'",
        "* Extracts the wrapped value.\n       *\n       * @name valueOf\n       * @memberOf _\n       * @alias value\n       * @category Chaining\n       * @returns {Mixed} Returns the wrapped value.\n       * @example\n       *\n       * _([1, 2, 3]).valueOf();\n       * // => [1, 2, 3]",
        "* The semantic version number.\n       *\n       * @static\n       * @memberOf _\n       * @type String",
        "* Returns `true` if the tail is empty (end of string).",
        "* Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.",
        "* Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.",
        "* Low-level function that renders the given `tokens` using the given `writer`\n     * and `context`. The `template` string is only needed for templates that use\n     * higher-order sections to extract the portion of the original template that\n     * was contained in that section.",
        "* Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.",
        "* Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.",
        "* Breaks up the given `template` string into a tree of token objects. If\n     * `tags` is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [\"<%\", \"%>\"]). Of\n     * course, the default is to use mustaches (i.e. Mustache.tags).",
        "* Clears all cached templates and partials in the default writer.",
        "* Compiles the given `template` to a reusable function using the default\n     * writer.",
        "* Compiles the partial with the given `name` and `template` to a reusable\n     * function using the default writer.",
        "* Compiles the given array of tokens (the output of a parse) to a reusable\n     * function using the default writer.",
        "* Renders the `template` with the given `view` and `partials` using the\n     * default writer.",
        "**parse** converts a response into the hash of attributes to be `set` on",
        "**parse** converts a response into a list of models to be added to the",
        "**render** is the core function that your view should override, in order",
        "*{\"event selector\": \"callback\"}*",
        "* Use `setTimeout` to batch rapid-fire updates into a single request.",
        "* Send up the models as XML instead of JSON.",
        "* Persist models via WebSockets instead of Ajax."
    ],
    "functions": [
        "isArraylike",
        "Sizzle",
        "createCache",
        "cache",
        "markFunction",
        "addHandle",
        "siblingCheck",
        "createInputPseudo",
        "createButtonPseudo",
        "createPositionalPseudo",
        "setFilters",
        "tokenize",
        "toSelector",
        "addCombinator",
        "elementMatcher",
        "condense",
        "setMatcher",
        "matcherFromTokens",
        "matcherFromGroupMatchers",
        "multipleContexts",
        "select",
        "createOptions",
        "Data",
        "dataAttr",
        "returnTrue",
        "returnFalse",
        "safeActiveElement",
        "sibling",
        "winnow",
        "manipulationTarget",
        "disableScript",
        "restoreScript",
        "setGlobalEval",
        "cloneCopyEvent",
        "getAll",
        "fixInput",
        "vendorPropName",
        "isHidden",
        "getStyles",
        "showHide",
        "setPositiveNumber",
        "augmentWidthOrHeight",
        "getWidthOrHeight",
        "css_defaultDisplay",
        "actualDisplay",
        "buildParams",
        "addToPrefiltersOrTransports",
        "inspectPrefiltersOrTransports",
        "inspect",
        "ajaxExtend",
        "done",
        "ajaxHandleResponses",
        "ajaxConvert",
        "createFxNow",
        "createTween",
        "Animation",
        "propFilter",
        "defaultPrefilter",
        "Tween",
        "genFx",
        "getWindow",
        "basicIndexOf",
        "cacheIndexOf",
        "cachePush",
        "charAtCallback",
        "compareAscending",
        "createCache",
        "escapeStringChar",
        "getArray",
        "getObject",
        "isNode",
        "noop",
        "releaseArray",
        "releaseObject",
        "runInContext",
        "lodash",
        "lodashWrapper",
        "createBound",
        "bound",
        "createIterator",
        "createObject",
        "escapeHtmlChar",
        "getIndexOf",
        "overloadWrapper",
        "shimIsPlainObject",
        "unescapeHtmlChar",
        "isArguments",
        "clone",
        "cloneDeep",
        "findKey",
        "functions",
        "has",
        "invert",
        "isBoolean",
        "isDate",
        "isElement",
        "isEmpty",
        "isEqual",
        "isFinite",
        "isFunction",
        "isObject",
        "isNaN",
        "isNull",
        "isNumber",
        "isRegExp",
        "isString",
        "isUndefined",
        "merge",
        "omit",
        "pairs",
        "pick",
        "transform",
        "values",
        "at",
        "contains",
        "countBy",
        "every",
        "find",
        "forEach",
        "groupBy",
        "invoke",
        "max",
        "min",
        "reduce",
        "reduceRight",
        "reject",
        "shuffle",
        "size",
        "some",
        "sortBy",
        "toArray",
        "compact",
        "difference",
        "findIndex",
        "first",
        "indexOf",
        "initial",
        "intersection",
        "last",
        "lastIndexOf",
        "rest",
        "sortedIndex",
        "union",
        "unzip",
        "without",
        "zipObject",
        "after",
        "bind",
        "bindAll",
        "bindKey",
        "compose",
        "createCallback",
        "debounce",
        "clear",
        "delayed",
        "maxDelayed",
        "defer",
        "delay",
        "memoize",
        "memoized",
        "once",
        "partial",
        "partialRight",
        "throttle",
        "wrap",
        "escape",
        "identity",
        "mixin",
        "noConflict",
        "random",
        "result",
        "template",
        "times",
        "unescape",
        "uniqueId",
        "tap",
        "wrapperToString",
        "wrapperValueOf",
        "testRegExp",
        "isWhitespace",
        "isFunction",
        "escapeRegExp",
        "escapeHtml",
        "Scanner",
        "Context",
        "Writer",
        "renderTokens",
        "subRender",
        "nestTokens",
        "squashTokens",
        "escapeTags",
        "parseTemplate",
        "stripSpace",
        "throwError",
        "getEventName",
        "handleShow",
        "handleRender",
        "triggerDOMRefresh",
        "bindFromStrings",
        "bindToFunction",
        "unbindFromStrings",
        "unbindToFunction",
        "iterateEvents",
        "bindEvents",
        "startup"
    ],
    "classes": []
}