{
    "identifiers": [
        "args",
        "c",
        "c",
        "bark",
        "c",
        "eat",
        "gd",
        "gd",
        "bark",
        "gd",
        "eat",
        "eat"
    ],
    "literals": [
        "\"Chihuahua:\"",
        "\"\\nGreat Dane:\"",
        "\"Chomp chomp!\"",
        "\"Yip yip!\"",
        "\"Woof woof!\"",
        "\"YUM YUM!\""
    ],
    "variables": [],
    "comments": [
        "Can't do this - abstract class",
        "Dog d = new Dog();",
        "You cannot instantiate an abstract class!",
        "Methods that are _abstract_ must be filled in by subclasses",
        "before a subclass can be instantiated",
        "Kind of like an interface, no?",
        "However, regular old methods can co-exist (unlike pre-1.8",
        "interfaces).",
        "Otherwise, though abstract classes act just like regular classes.",
        "You can call super on them, have access to defined methods, etc.",
        "Multiple subclasses are possible, just like regular classes"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "bark",
        "eat",
        "bark",
        "bark",
        "eat"
    ],
    "classes": [
        "AbstractDemo",
        "Dog",
        "Chihuahua",
        "GreatDane"
    ]
}