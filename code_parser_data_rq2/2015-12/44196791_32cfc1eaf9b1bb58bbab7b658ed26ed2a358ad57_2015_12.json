{
    "identifiers": [
        "doT",
        "define",
        "define",
        "define",
        "doT",
        "eval",
        "doT",
        "matchHTML",
        "m",
        "encodeHTMLRules",
        "m",
        "m",
        "encodeHTMLSource",
        "c",
        "block",
        "block",
        "block",
        "block",
        "c",
        "skip",
        "m",
        "code",
        "assign",
        "value",
        "code",
        "code",
        "code",
        "code",
        "assign",
        "c",
        "value",
        "c",
        "m",
        "param",
        "v",
        "code",
        "param",
        "v",
        "code",
        "code",
        "value",
        "code",
        "value",
        "c",
        "skip",
        "m",
        "code",
        "c",
        "code",
        "code",
        "c",
        "m",
        "s",
        "d",
        "param",
        "d",
        "d",
        "param",
        "d",
        "param",
        "rw",
        "d",
        "d",
        "param",
        "s",
        "rw",
        "code",
        "v",
        "resolveDefs",
        "c",
        "v",
        "v",
        "code",
        "code",
        "doT",
        "tmpl",
        "c",
        "c",
        "c",
        "doT",
        "c",
        "startend",
        "startend",
        "c",
        "c",
        "resolveDefs",
        "c",
        "tmpl",
        "tmpl",
        "c",
        "c",
        "skip",
        "m",
        "code",
        "cse",
        "unescape",
        "code",
        "cse",
        "c",
        "skip",
        "m",
        "code",
        "needhtmlencode",
        "cse",
        "unescape",
        "code",
        "cse",
        "c",
        "skip",
        "m",
        "code",
        "code",
        "unescape",
        "code",
        "c",
        "skip",
        "m",
        "code",
        "code",
        "unescape",
        "code",
        "c",
        "skip",
        "m",
        "iterate",
        "vname",
        "iname",
        "iterate",
        "sid",
        "vname",
        "vname",
        "iname",
        "iname",
        "iterate",
        "unescape",
        "iterate",
        "sid",
        "arrayName",
        "iterate",
        "arrayName",
        "arrayName",
        "vname",
        "iname",
        "sid",
        "arrayName",
        "iname",
        "sid",
        "vname",
        "arrayName",
        "iname",
        "c",
        "skip",
        "m",
        "iterate",
        "vname",
        "iname",
        "iterate",
        "sid",
        "vname",
        "vname",
        "iname",
        "iname",
        "iterate",
        "unescape",
        "iterate",
        "sid",
        "objectName",
        "iterate",
        "objectName",
        "objectName",
        "vname",
        "iname",
        "objectName",
        "objectName",
        "iname",
        "vname",
        "objectName",
        "iname",
        "c",
        "skip",
        "m",
        "c",
        "skip",
        "m",
        "code",
        "unescape",
        "code",
        "needhtmlencode",
        "c",
        "encodeHTMLSource",
        "c",
        "e",
        "e",
        "doT",
        "tmpl",
        "doT",
        "tmpl"
    ],
    "literals": [
        "\"use strict\"",
        "'1.0.1-nanoui'",
        "'data, config, helper'",
        "'undefined'",
        "'function'",
        "'this'",
        "\"&\"",
        "\"&#38;\"",
        "\"<\"",
        "\"&#60;\"",
        "\">\"",
        "\"&#62;\"",
        "'\"'",
        "'&#34;'",
        "\"'\"",
        "'&#39;'",
        "\"/\"",
        "'&#47;'",
        "\"'+(\"",
        "\")+'\"",
        "\"||'').toString().encodeHTML()+'\"",
        "\"';out+=(\"",
        "\");out+='\"",
        "\"||'').toString().encodeHTML();out+='\"",
        "'string'",
        "'def.'",
        "':'",
        "\"def\"",
        "\"def['\"",
        "\"']=\"",
        "''",
        "\":\"",
        "'_'",
        "\"(^|[^\\\\w$])\"",
        "\"([^\\\\w$])\"",
        "\"g\"",
        "\"$1\"",
        "\"$2\"",
        "\"def.__exp['\"",
        "\"']\"",
        "\"def\"",
        "\"return \"",
        "\"$1\"",
        "' '",
        "\"var out='\"",
        "' '",
        "''",
        "'\\\\$&'",
        "\"';if(\"",
        "\"){out+='\"",
        "\"';}out+='\"",
        "\"';}else if(\"",
        "\"){out+='\"",
        "\"';}else{out+='\"",
        "\"';} } out+='\"",
        "\"value\"",
        "\"index\"",
        "\"arr\"",
        "\"';var \"",
        "\"=\"",
        "\";if(\"",
        "\" && \"",
        "\".length > 0){var \"",
        "\",\"",
        "\"=-1,l\"",
        "\"=\"",
        "\".length-1;while(\"",
        "\"<l\"",
        "\"){\"",
        "\"=\"",
        "\"[\"",
        "\"+=1];out+='\"",
        "\"';} } out+='\"",
        "\"value\"",
        "\"key\"",
        "\"arr\"",
        "\"';var \"",
        "\"=\"",
        "\";if(\"",
        "\" && Object.size(\"",
        "\") > 0){var \"",
        "\";for( var \"",
        "\" in \"",
        "\"){ if (!\"",
        "\".hasOwnProperty(\"",
        "\")) continue; \"",
        "\"=\"",
        "\"[\"",
        "\"];out+='\"",
        "\"';}}else{if(true){out+='\"",
        "\"';\"",
        "\"out+='\"",
        "\"';return out;\"",
        "'\\\\n'",
        "'\\\\t'",
        "'\\\\r'",
        "'$1'",
        "''",
        "'$1out+='",
        "\"String.prototype.encodeHTML=(\"",
        "\"());\"",
        "'undefined'",
        "\"Could not create a template function: \""
    ],
    "variables": [
        "doT",
        "encodeHTMLRules",
        "matchHTML",
        "startend",
        "skip",
        "rw",
        "v",
        "cse",
        "needhtmlencode",
        "sid",
        "arrayName",
        "objectName"
    ],
    "comments": [
        "fn, compile template",
        "fn, for express",
        "The \"if(true)\" condition is required to account for the for tag closing with two brackets"
    ],
    "docstrings": [],
    "functions": [
        "encodeHTMLSource",
        "resolveDefs",
        "unescape"
    ],
    "classes": []
}