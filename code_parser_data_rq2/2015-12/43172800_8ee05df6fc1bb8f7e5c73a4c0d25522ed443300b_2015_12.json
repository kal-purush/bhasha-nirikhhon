{
    "identifiers": [
        "QUnit",
        "$",
        "$",
        "QUnit",
        "QUnit",
        "$",
        "officeDropdown",
        "officeDropdown",
        "officeDropdown",
        "officeDropdown",
        "officeDropdown",
        "QUnit",
        "QUnit",
        "$",
        "controller",
        "data",
        "testData",
        "testData",
        "testData",
        "testData",
        "feature",
        "feature",
        "testData",
        "feature",
        "feature",
        "testData",
        "feature",
        "done",
        "QUnit",
        "$",
        "controller",
        "data",
        "testData",
        "testData",
        "testData",
        "testData",
        "testData",
        "A1",
        "testData",
        "testData",
        "A2",
        "testData",
        "testData",
        "B1",
        "done"
    ],
    "literals": [
        "'Map Tests'",
        "'#qunit-fixture'",
        "'<div id=\"map\"></div>'",
        "'The map exists.'",
        "'The leaflet map object exists.'",
        "'The current office is not yet set.'",
        "'The office list is empty at start-up.'",
        "'Active layers list is empty at start-up'",
        "'No level controls have been added yet.'",
        "'Testing map initialization.'",
        "'Adding offices.'",
        "'<ul class=\"dropdown-menu\" id=\"officeList\"></ul>'",
        "'#officeList'",
        "'Conshohocken'",
        "'Office list has 1 element.'",
        "'id'",
        "'name'",
        "'Conshohocken'",
        "'floorList'",
        "'Office 1 added.'",
        "'Office dropdown contains 1 child.'",
        "'<a href=\"#\" id=\"office1\">Conshohocken</a>'",
        "'Dropdown contains office 1'",
        "'San Diego'",
        "'Office list has 2 elements.'",
        "'id'",
        "'name'",
        "'Conshohocken'",
        "'floorList'",
        "'id'",
        "'name'",
        "'San Diego'",
        "'floorList'",
        "'Office 2 added.'",
        "'Office dropdown contains 2 children.'",
        "'<a href=\"#\" id=\"office1\">Conshohocken</a>'",
        "'Dropdown contains office 1'",
        "'<a href=\"#\" id=\"office2\">San Diego</a>'",
        "'Dropdown contains office 2'",
        "'testImage.png'",
        "'testImage.png'",
        "'testImage.png'",
        "'Office 1 has 2 floors.'",
        "'Office 2 has 1 floor.'",
        "'Office 1 floor 1 has correct floor number.'",
        "'testImage.png'",
        "'Office 1 floor 1 has correct image URL.'",
        "'Office 1 floor 1 has an image object'",
        "'Office 1 floor 1 has an empty markers list.'",
        "'Office 1 floor 2 has correct floor number.'",
        "'testImage.png'",
        "'Office 1 floor 2 has correct image URL.'",
        "'Office 1 floor 2 has an image object'",
        "'Office 1 floor 2 has an empty markers list.'",
        "'Office 2 floor 1 has correct floor number.'",
        "'testImage.png'",
        "'Office 2 floor 1 has correct image URL.'",
        "'Office 2 floor 1 has an image object'",
        "'Office 2 floor 1 has an empty markers list.'",
        "'Data Tests'",
        "'Getting map data.'",
        "'../tests/data.json'",
        "'json'",
        "'Data exists.'",
        "'FeatureCollection'",
        "'Data has the correct type'",
        "'Data has the correct number of features'",
        "\"type\"",
        "\"Feature\"",
        "\"properties\"",
        "\"switchName\"",
        "\"emaswitch00\"",
        "\"port\"",
        "\"A1\"",
        "\"office\"",
        "\"level\"",
        "\"popupContent\"",
        "\"\"",
        "\"users\"",
        "\"geometry\"",
        "\"type\"",
        "\"Point\"",
        "\"coordinates\"",
        "'First feature matches.'",
        "\"type\"",
        "\"Feature\"",
        "\"properties\"",
        "\"switchName\"",
        "\"emaswitch00\"",
        "\"port\"",
        "\"A2\"",
        "\"office\"",
        "\"level\"",
        "\"popupContent\"",
        "\"\"",
        "\"users\"",
        "\"geometry\"",
        "\"type\"",
        "\"Point\"",
        "\"coordinates\"",
        "'Second feature matches.'",
        "\"type\"",
        "\"Feature\"",
        "\"properties\"",
        "\"switchName\"",
        "\"emaswitch01\"",
        "\"port\"",
        "\"B1\"",
        "\"office\"",
        "\"level\"",
        "\"popupContent\"",
        "\"\"",
        "\"users\"",
        "\"geometry\"",
        "\"type\"",
        "\"Point\"",
        "\"coordinates\"",
        "'Third feature matches.'",
        "'Getting user data'",
        "'../tests/userData.json'",
        "'json'",
        "'Data exists.'",
        "'emaswitch00 found'",
        "'emaswitch01 found'",
        "'emaswitch00 port A1 found'",
        "\"id\"",
        "\"firstName\"",
        "\"John\"",
        "\"lastName\"",
        "\"Doe\"",
        "\"userName\"",
        "\"jdoe\"",
        "\"city\"",
        "\"Newark\"",
        "\"department\"",
        "\"IT\"",
        "\"email\"",
        "\"jdoe@email.com\"",
        "'emaswitch00 port A1 matches'",
        "'emaswitch00 port A2 found'",
        "\"id\"",
        "\"firstName\"",
        "\"Jane\"",
        "\"lastName\"",
        "\"Doe\"",
        "\"userName\"",
        "\"doej\"",
        "\"city\"",
        "\"Newark\"",
        "\"department\"",
        "\"Marketing\"",
        "\"email\"",
        "\"doej@email.com\"",
        "'emaswitch00 port A2 matches'",
        "'emaswitch01 port B1 found'",
        "\"id\"",
        "\"firstName\"",
        "\"Ryan\"",
        "\"lastName\"",
        "\"Serva\"",
        "\"userName\"",
        "\"rserva\"",
        "\"city\"",
        "\"Newark\"",
        "\"department\"",
        "\"Software\"",
        "\"email\"",
        "\"rserva@email.com\"",
        "'emaswitch01 port B1 matches'"
    ],
    "variables": [
        "officeDropdown",
        "done",
        "controller",
        "testData",
        "data",
        "feature",
        "done",
        "controller",
        "testData",
        "data",
        "A1",
        "A2",
        "B1"
    ],
    "comments": [
        "office 1",
        "office 2",
        "floors",
        "office 1 floor 1",
        "office 1 floor 2",
        "office 2 floor 1",
        "QUnit.test('template', function(assert){\n\t\n});"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}