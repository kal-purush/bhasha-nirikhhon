{
    "identifiers": [
        "require",
        "express",
        "app",
        "require",
        "BitGo",
        "_callback",
        "bitgo",
        "err",
        "res",
        "res",
        "bitgo",
        "err",
        "res",
        "res",
        "setTimeout",
        "Delay",
        "bitgo",
        "err",
        "res",
        "err",
        "wallet",
        "res",
        "setTimeout",
        "Delay2",
        "_callback",
        "firstFunction",
        "wallet",
        "wallet",
        "callback",
        "err",
        "address",
        "address",
        "wallet",
        "rule",
        "callback",
        "err",
        "w",
        "w",
        "app",
        "req",
        "res",
        "req",
        "req",
        "webhookData",
        "webhookData",
        "output",
        "output",
        "webhookData",
        "theOutput",
        "output",
        "require",
        "x",
        "request",
        "url",
        "error",
        "response",
        "body",
        "error",
        "response",
        "body",
        "Data",
        "result",
        "result",
        "result",
        "result",
        "census_number",
        "parseInt",
        "result",
        "census_number",
        "census_number",
        "name",
        "result",
        "count",
        "census_number",
        "outcome",
        "outcome",
        "name",
        "outcome",
        "name",
        "count",
        "outcome",
        "outcome",
        "error",
        "secondFunction",
        "bitgo"
    ],
    "literals": [
        "'express'",
        "'server listening on: 8000'",
        "'bitgo'",
        "'prod'",
        "'17ec0eb485ddebd36ada6d9926e48cfe7755f0d1a44222fa4f7f8cb53b86b035'",
        "'changeme'",
        "'apiwallet'",
        "\"wallet\"",
        "\"chain\"",
        "\"webhookRule1\"",
        "\"webhook\"",
        "\"deny\"",
        "\"url\"",
        "'https://d7718d1c.ngrok.io/name'",
        "'/name'",
        "\"WEBHOOD DATA\"",
        "\"https://cdph.data.ca.gov/api/views/9h3n-g3p4/rows.json?accessType=DOWNLOAD\"",
        "'request'",
        "\"\"",
        "\"alexandra\"",
        "\"ALEXANDRA\"",
        "\"2014\"",
        "\"name exists\"",
        "\"name does not exist\"",
        "\"\"",
        "'name exists'",
        "'name: '",
        "'count: '",
        "'result: '",
        "\"name exists\"",
        "'WOHOOOO, name is on the list :) '",
        "'name not in the list :( '",
        "'error'"
    ],
    "variables": [
        "express",
        "app",
        "BitGo",
        "bitgo",
        "wallet",
        "rule",
        "webhookData",
        "theOutput",
        "url",
        "request",
        "Data",
        "name",
        "count",
        "outcome",
        "address"
    ],
    "comments": [
        "Bitgo API interface to parse through html page and transfers funds to student's address depending on whether certain name exists on page",
        "bitgo example api code for reference",
        "https://docs.google.com/document/d/1eIVhuF8qJyAKbRSUKgrZCOFhtRjK82700gVlNGcxfLI/edit",
        "npm install express",
        "starting JS interpreter and loading module",
        "do something asynchronous",
        "do some asynchronous work",
        "creating wallet",
        "end of Delay2 function",
        "end of Delay function",
        "end of firstFunction",
        "first function runs when it has completed",
        "------------------------------------------------------------------",
        "creating a new bitcoin address",
        "-----------------------------------------------------------------------",
        "Adds a policy webhook rule onto an existing wallet and then attempts to send out funds from the wallet, causing the webhook to fire.",
        "If the webhook URL returns a 200 status, the transaction is sent; otherwise it is denied.",
        "After the transaction is sent, the policy rule is removed",
        "",
        "Use ngrok and a simple http server to respond to the webhook and see what it sends",
        "-----------------------------------------------------------------------",
        "setting a policy rule",
        "the ngrok -- your callback uri",
        "'http s://17fc38db.ngrok.com/poll'",
        "console.log(rule);",
        "wallet then accepts rule and waits to receive an update from webhook (coming from our application)",
        "webhook connecting our application to bitgo wallet?",
        "-----------------------------------------------------------------------",
        "code for the remote endpoint",
        "--- THIS CODE NEEDS WORK! -----------------------------",
        "Webhook notifications are triggered when the specified event occurs, such as an incoming transaction.",
        "this accepts a post request on ngrok/name from wallet? ----???",
        "end of app.post",
        "--- ABOVE CODE NEEDS WORK! -----------------------------",
        "---- start of oracle code that will inform how to cosign",
        "This can be substituted with cheerio code (html parsing)",
        "url that we will be getting relevant data (needs to be json data)",
        "example:(data.gov) dataset of baby names for the years 2009 through 2013. State of California, Department of Public Health, Birth Records. 2014. Baby Names-2009-2013-CA-CDPH",
        "bitgo example url with poll data",
        "var url = \"https://www.polleverywhere.com/discourses/llb3d9yZe89MQA7.json?humanize=false&_=%22%20+%20Math.random()*10000000\"",
        "pull from html data?",
        "console.log(\"data\", Data.data);",
        "data[0] //will be the first name only",
        "Data.data will be all arrays of names",
        "console.log(\"RESULT\", result);",
        "'result' variable = arrays -- each array contains name and other data",
        "checking to see if in 2014 more than 100 children were named Alexandra",
        "the names are 11th in each array",
        "if name matches --> now check for census number",
        "parse string into a number",
        "address = result.value;",
        "end of forEach function",
        "count = undefined;",
        "if ( ( theOutput === address && name ) || outcome == \"name exists\") {",
        "res.status(200).send({}); //sending to webhook ngrok a status 200 --> so it will execute transaction?",
        "next step: send bitcoin to the designated address/recipient based on multisig",
        "res.status(400).send({});  //sending to webhook ngrok a status 200 and nothing --> so it will NOT execute transaction?",
        "end of if statement on line 114",
        "end of request.get",
        "end of calling first function call within secondFunction",
        "---------------------------------------------------------------",
        "})",
        "end of secondFunction",
        "calling secondFunction that has firstFunciton called within it",
        "------- other bitgo functions we may want to use later ------------//",
        "View Transactions",
        "wallet.transactions({}, function callback(err, transactions) {",
        "console.dir(transactions);",
        "});",
        "Send Coins",
        "wallet.sendCoins({ address: \"2NEe9QhKPB2gnQLB3hffMuDcoFKZFjHYJYx\", amount: 0.01 * 1e8, walletPassphrase:  \"replaceme\" }, function(err, result) {",
        "console.dir(result);",
        "});"
    ],
    "docstrings": [
        "*******************************************************//",
        "*******************************************************//"
    ],
    "functions": [
        "firstFunction",
        "Delay",
        "Delay2",
        "secondFunction"
    ],
    "classes": []
}