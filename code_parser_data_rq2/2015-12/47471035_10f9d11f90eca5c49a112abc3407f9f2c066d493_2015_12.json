{
    "identifiers": [
        "_",
        "Rest",
        "RestOptions",
        "parseString",
        "xml2js",
        "Rest",
        "ChartLyricsApi",
        "artistName",
        "trackName",
        "onlyExactMatch",
        "artistName",
        "_",
        "artistName",
        "trackName",
        "_",
        "trackName",
        "artistName",
        "trackName",
        "result",
        "result",
        "result",
        "result",
        "onlyExactMatch",
        "res",
        "res",
        "res",
        "song",
        "ChartLyricsApi",
        "song",
        "artistName",
        "trackName",
        "artistName",
        "trackName",
        "artistName",
        "_",
        "artistName",
        "trackName",
        "_",
        "trackName",
        "artistName",
        "trackName",
        "result",
        "result",
        "result",
        "lyricText",
        "lyricText",
        "result",
        "result",
        "result",
        "result",
        "lyricId",
        "lyricCheckSum",
        "lyricId",
        "lyricCheckSum",
        "result",
        "result",
        "result",
        "trackId",
        "trackCheckSum",
        "lyric",
        "email",
        "trackId",
        "trackCheckSum",
        "lyric",
        "email",
        "result",
        "result",
        "result",
        "result",
        "method",
        "options",
        "options",
        "method",
        "resolve",
        "reject",
        "options",
        "resultXml",
        "resultXml",
        "xml2js",
        "resultXml",
        "err",
        "result",
        "err",
        "reject",
        "err",
        "resultXml",
        "resolve",
        "result",
        "reject",
        "resultXml",
        "reason",
        "reject",
        "reason",
        "song",
        "artistName",
        "trackName",
        "song",
        "song",
        "song",
        "song",
        "artistName",
        "song",
        "trackName",
        "ChartLyricsApi"
    ],
    "literals": [
        "'lodash'",
        "'./rest'",
        "'es6-promise'",
        "'xml2js'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'http://api.chartlyrics.com/apiv1.asmx/:method'",
        "string",
        "string",
        "'SearchLyric'",
        "string",
        "string",
        "'SearchLyricDirect'",
        "string",
        "'SearchLyricText'",
        "string",
        "'GetLyric'",
        "string",
        "string",
        "string",
        "string",
        "'AddLyric'",
        "string",
        "'method'",
        "string",
        "string"
    ],
    "variables": [
        "res"
    ],
    "comments": [
        "<reference path=\"../../typings/tsd.d.ts\"/>"
    ],
    "docstrings": [
        "* Search for lyrics and return the lyricId and lyricChecksum for the GetLyric function\n     * @param artistName\n     * @param trackName\n     * @param onlyExactMatch\n     * @returns {Promise<SearchLyricResult[]>}",
        "* Search for lyrics by artist and track and directly returns the lyric or lyric add parameters.\n     * @param artistName\n     * @param trackName\n     * @returns {Promise<GetLyricResult>}",
        "* Search for text in lyric and returns the lyricId and lyricChecksum for the GetLyric function\n     * @param lyricText\n     * @returns {Promise<SearchLyricResult[]>}",
        "* Return lyric with lyric text, correction URL, Lyric rankigs and an URL to the album cover if applicable.\n     * @param lyricId\n     * @param lyricCheckSum\n     * @returns {Promise<GetLyricResult>}",
        "* Add lyric with lyric text and email.\n     * @param trackId\n     * @param trackCheckSum\n     * @param lyric\n     * @param email\n     * @returns {Promise<string>}",
        "* Runs a ChartLytics HTTP API query for {{method}}, using {{options}} as query string\n     * @param method\n     * @param options\n     * @returns {Promise}"
    ],
    "functions": [
        "searchLyric",
        "searchLyricDirect",
        "searchLyricText",
        "getLyric",
        "addLyric",
        "runQuery",
        "matchArtistTrack"
    ],
    "classes": [
        "ChartLyricsApi"
    ]
}