{
    "identifiers": [
        "Collections",
        "Generic",
        "Runtime",
        "InteropServices",
        "Text",
        "Threading",
        "Threading",
        "Tasks",
        "TDengineDriver",
        "TDengineDataType",
        "TSDB_DATA_TYPE_NULL",
        "TSDB_DATA_TYPE_BOOL",
        "TSDB_DATA_TYPE_TINYINT",
        "TSDB_DATA_TYPE_SMALLINT",
        "TSDB_DATA_TYPE_INT",
        "TSDB_DATA_TYPE_BIGINT",
        "TSDB_DATA_TYPE_FLOAT",
        "TSDB_DATA_TYPE_DOUBLE",
        "TSDB_DATA_TYPE_BINARY",
        "TSDB_DATA_TYPE_TIMESTAMP",
        "TSDB_DATA_TYPE_NCHAR",
        "TSDB_DATA_TYPE_UTINYINT",
        "TSDB_DATA_TYPE_USMALLINT",
        "TSDB_DATA_TYPE_UINT",
        "TSDB_DATA_TYPE_UBIGINT",
        "TSDB_DATA_TYPE_JSONTAG",
        "StructLayout",
        "LayoutKind",
        "Sequential",
        "CharSet",
        "CharSet",
        "Ansi",
        "taosField",
        "MarshalAs",
        "UnmanagedType",
        "ByValArray",
        "SizeConst",
        "MarshalAs",
        "UnmanagedType",
        "U1",
        "SizeConst",
        "MarshalAs",
        "UnmanagedType",
        "U2",
        "SizeConst",
        "TSDB_TIME_PRECISION",
        "TSDB_TIME_PRECISION_MILLI",
        "TSDB_TIME_PRECISION_MICRO",
        "TSDB_TIME_PRECISION_NANO",
        "TDengineInitOption",
        "TSDB_OPTION_LOCALE",
        "TSDB_OPTION_CHARSET",
        "TSDB_OPTION_TIMEZONE",
        "TSDB_OPTION_CONFIGDIR",
        "TSDB_OPTION_SHELL_ACTIVITY_TIMER",
        "TaosField",
        "STRUCT_SIZE",
        "NAME_LENGTH",
        "TYPE_OFFSET",
        "BYTES_OFFSET",
        "TDengineDataType",
        "TDengineDataType",
        "TSDB_DATA_TYPE_BOOL",
        "TDengineDataType",
        "TSDB_DATA_TYPE_TINYINT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_SMALLINT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_INT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_BIGINT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_UTINYINT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_USMALLINT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_UINT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_UBIGINT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_FLOAT",
        "TDengineDataType",
        "TSDB_DATA_TYPE_DOUBLE",
        "TDengineDataType",
        "TSDB_DATA_TYPE_BINARY",
        "TDengineDataType",
        "TSDB_DATA_TYPE_TIMESTAMP",
        "TDengineDataType",
        "TSDB_DATA_TYPE_NCHAR",
        "TDengineDataType",
        "TSDB_DATA_TYPE_JSONTAG",
        "StructLayout",
        "LayoutKind",
        "Sequential",
        "CharSet",
        "CharSet",
        "Ansi",
        "TAOS_BIND",
        "StructLayout",
        "LayoutKind",
        "Sequential",
        "TAOS_MULTI_BIND",
        "QueryAsyncCallback",
        "IntPtr",
        "param",
        "IntPtr",
        "taoRes",
        "code",
        "FetchRowAsyncCallback",
        "IntPtr",
        "param",
        "IntPtr",
        "taoRes",
        "numOfRows",
        "SubscribeCallback",
        "IntPtr",
        "subscribe",
        "IntPtr",
        "tasRes",
        "IntPtr",
        "param",
        "code",
        "StreamOpenCallback",
        "IntPtr",
        "param",
        "IntPtr",
        "taosRes",
        "IntPtr",
        "taosRow",
        "StreamOpenCallback2",
        "IntPtr",
        "ptr",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "option",
        "value",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "ip",
        "user",
        "password",
        "db",
        "port",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "res",
        "IntPtr",
        "res",
        "taos_errstr",
        "res",
        "Marshal",
        "PtrToStringAnsi",
        "errPtr",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "res",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "conn",
        "IntPtr",
        "byteArr",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "IntPtr",
        "conn",
        "command",
        "IntPtr",
        "Zero",
        "Marshal",
        "StringToCoTaskMemUTF8",
        "command",
        "res",
        "Query",
        "conn",
        "commandBuffer",
        "res",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "res",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "res",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "res",
        "TDengineMeta",
        "IntPtr",
        "res",
        "TDengineMeta",
        "TDengineMeta",
        "FieldCount",
        "res",
        "taos_fetch_fields",
        "res",
        "i",
        "fieldCount",
        "i",
        "i",
        "TaosField",
        "STRUCT_SIZE",
        "NET45",
        "taosField",
        "Marshal",
        "PtrToStructure",
        "fieldsPtr",
        "offset",
        "taosField",
        "Marshal",
        "PtrToStructure",
        "taosField",
        "fieldsPtr",
        "offset",
        "TDengineMeta",
        "name",
        "Encoding",
        "Default",
        "GetString",
        "field",
        "name",
        "TrimEnd",
        "size",
        "field",
        "field",
        "metas",
        "Add",
        "meta",
        "metas",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "res",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "res",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "db",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "sql",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "name",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "name",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "name",
        "TAOS_BIND",
        "tags",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "SetLastError",
        "IntPtr",
        "stmt",
        "TAOS_BIND",
        "bind",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "TAOS_MULTI_BIND",
        "bind",
        "colIdx",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "In",
        "Out",
        "TAOS_MULTI_BIND",
        "bind",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "tableList",
        "IntPtr",
        "taos",
        "tableList",
        "Join",
        "tableList",
        "LoadTableInfoDll",
        "taos",
        "listStr",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stmt",
        "IntPtr",
        "stmt",
        "StmtErrPtr",
        "stmt",
        "Marshal",
        "PtrToStringAnsi",
        "stmtErrPrt",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "sql",
        "QueryAsyncCallback",
        "fq",
        "IntPtr",
        "param",
        "IntPtr",
        "taoRes",
        "code",
        "IntPtr",
        "taos",
        "sql",
        "IntPtr",
        "param",
        "Semaphore",
        "IntPtr",
        "taoRes",
        "code",
        "QueryAsync",
        "taos",
        "sql",
        "IntPtr",
        "param",
        "IntPtr",
        "taoRes",
        "code",
        "sema",
        "Release",
        "result",
        "taoRes",
        "taoRes",
        "result",
        "code",
        "code",
        "param",
        "sema",
        "WaitOne",
        "FromResult",
        "result",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taoRes",
        "FetchRowAsyncCallback",
        "fq",
        "IntPtr",
        "param",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "restart",
        "topic",
        "sql",
        "SubscribeCallback",
        "fq",
        "IntPtr",
        "param",
        "interval",
        "IntPtr",
        "taos",
        "restart",
        "topic",
        "sql",
        "SubscribeCallback",
        "fq",
        "IntPtr",
        "param",
        "interval",
        "taos",
        "IntPtr",
        "Zero",
        "WriteLine",
        "Subscribe",
        "taos",
        "restart",
        "topic",
        "sql",
        "fq",
        "param",
        "interval",
        "subPtr",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "subscribe",
        "IntPtr",
        "subscribe",
        "IntPtr",
        "Zero",
        "subscribe",
        "IntPtr",
        "Zero",
        "WriteLine",
        "res",
        "TaosConsume",
        "subscribe",
        "res",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "subscribe",
        "keep",
        "IntPtr",
        "subscribe",
        "keep",
        "subscribe",
        "IntPtr",
        "Zero",
        "WriteLine",
        "Unsubscribe",
        "subscribe",
        "keep",
        "WriteLine",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "taos",
        "sql",
        "StreamOpenCallback",
        "fp",
        "Int64",
        "stime",
        "IntPtr",
        "param",
        "StreamOpenCallback2",
        "callback2",
        "DllImport",
        "EntryPoint",
        "CallingConvention",
        "CallingConvention",
        "Cdecl",
        "IntPtr",
        "stream"
    ],
    "literals": [
        "\"BOOL\"",
        "\"TINYINT\"",
        "\"SMALLINT\"",
        "\"INT\"",
        "\"BIGINT\"",
        "\"TINYINT UNSIGNED\"",
        "\"SMALLINT UNSIGNED\"",
        "\"INT UNSIGNED\"",
        "\"BIGINT UNSIGNED\"",
        "\"FLOAT\"",
        "\"DOUBLE\"",
        "\"BINARY\"",
        "\"TIMESTAMP\"",
        "\"NCHAR\"",
        "\"JSON\"",
        "\"undefine\"",
        "\"taos\"",
        "\"taos_init\"",
        "\"taos\"",
        "\"taos_cleanup\"",
        "\"taos\"",
        "\"taos_options\"",
        "\"taos\"",
        "\"taos_connect\"",
        "\"taos\"",
        "\"taos_errstr\"",
        "\"taos\"",
        "\"taos_errno\"",
        "\"taos\"",
        "\"taos_query\"",
        "\"taos\"",
        "\"taos_stop_query\"",
        "\"taos\"",
        "\"taos_affected_rows\"",
        "\"taos\"",
        "\"taos_field_count\"",
        "\"taos\"",
        "\"taos_fetch_fields\"",
        "\"taos\"",
        "\"taos_fetch_row\"",
        "\"taos\"",
        "\"taos_free_result\"",
        "\"taos\"",
        "\"taos_close\"",
        "\"taos\"",
        "\"taos_get_client_info\"",
        "\"taos\"",
        "\"taos_result_precision\"",
        "\"taos\"",
        "\"taos_get_server_info\"",
        "\"taos\"",
        "\"taos_select_db\"",
        "\"taos\"",
        "\"taos_stmt_init\"",
        "\"taos\"",
        "\"taos_stmt_prepare\"",
        "\"taos\"",
        "\"taos_stmt_set_tbname\"",
        "\"taos\"",
        "\"taos_stmt_set_sub_tbname\"",
        "\"taos\"",
        "\"taos_stmt_set_tbname_tags\"",
        "\"taos\"",
        "\"taos_stmt_bind_param\"",
        "\"taos\"",
        "\"taos_stmt_bind_single_param_batch\"",
        "\"taos\"",
        "\"taos_stmt_bind_param_batch\"",
        "\"taos\"",
        "\"taos_stmt_add_batch\"",
        "\"taos\"",
        "\"taos_stmt_execute\"",
        "\"taos\"",
        "\"taos_stmt_use_result\"",
        "\"taos\"",
        "\"taos_stmt_close\"",
        "\"taos\"",
        "\"taos_load_table_info\"",
        "\",\"",
        "\"taos\"",
        "\"taos_stmt_errstr\"",
        "\"taos\"",
        "\"taos_fetch_lengths\"",
        "\"taos\"",
        "\"taos_query_a\"",
        "\"taos\"",
        "\"taos_fetch_rows_a\"",
        "\"taos\"",
        "\"taos_subscribe\"",
        "\"taos connect is null,subscribe failed\"",
        "\"taos connect is null\"",
        "\"taos\"",
        "\"taos_consume\"",
        "\"Object subscribe is null,please subscribe first.\"",
        "\"Object subscribe is null\"",
        "\"taos\"",
        "\"taos_unsubscribe\"",
        "\"subscribe is null, close Unsubscribe failed\"",
        "\"Object subscribe is null\"",
        "\"Unsubscribe success.\"",
        "\"taos\"",
        "\"taos_open_stream\"",
        "\"taos\"",
        "\"taos_close_stream\""
    ],
    "variables": [
        "name",
        "name",
        "size",
        "buffer_type",
        "IntPtr",
        "buffer",
        "Int32",
        "buffer_length",
        "IntPtr",
        "length",
        "IntPtr",
        "is_null",
        "is_unsigned",
        "IntPtr",
        "error",
        "Int64",
        "u",
        "allocated",
        "buffer_type",
        "IntPtr",
        "buffer",
        "buffer_length",
        "IntPtr",
        "length",
        "IntPtr",
        "is_null",
        "num",
        "TSDB_CODE_SUCCESS",
        "IntPtr",
        "errPtr",
        "IntPtr",
        "res",
        "IntPtr",
        "commandBuffer",
        "metas",
        "fieldCount",
        "IntPtr",
        "fieldsPtr",
        "i",
        "offset",
        "taosField",
        "field",
        "taosField",
        "field",
        "TDengineMeta",
        "meta",
        "listStr",
        "IntPtr",
        "stmtErrPrt",
        "Semaphore",
        "sema",
        "result",
        "IntPtr",
        "subPtr",
        "IntPtr",
        "res"
    ],
    "comments": [
        "1 bytes",
        "1 bytes",
        "1 bytes",
        "2 bytes",
        "4 bytes",
        "8 bytes",
        "4 bytes",
        "8 bytes",
        "string",
        "8 bytes",
        "unicode string",
        "1 byte",
        "2 bytes",
        "4 bytes",
        "8 bytes",
        "4096 bytes",
        "column type",
        "one column value",
        "unused",
        "actual value length in buffer",
        "indicates the column value is null or not",
        "unused",
        "unused",
        "column type",
        "array, one or more lines column value",
        "length of element in TAOS_MULTI_BIND.buffer (for binary and nchar it is the longest element's length)",
        "array, actual data length for each value",
        "array, indicates each column value is null or not",
        "line number, or the values number in buffer",
        "User defined callback function for interface \"QueryAsync()\"",
        ",actually is a delegate in .Net.",
        "This function aim to handle the taoRes which points to",
        "the caller method's sql resultset.",
        "</summary>",
        "<param name=\"param\"> This parameter will sent by caller method (QueryAsync()).</param>",
        "<param name=\"taoRes\"> This is the retrieved by caller method's sql.</param>",
        "<param name=\"code\"> 0 for indicate operation success and negative for operation fail.</param>",
        "User defined callback function for interface \"FetchRowAsync()\"",
        ",actually is a delegate in .Net.",
        "This callback allow applications to get each row of the",
        "batch records by calling FetchRowAsync() forward iteration.",
        "After reading all the records in a block, the application needs to continue calling",
        "FetchRowAsync() in this callback function to obtain the next batch of records for",
        "processing until the number of records",
        "</summary>",
        "<param name=\"param\">The parameter passed by <see cref=\"FetchRowAsync\"/></param>",
        "<param name=\"taoRes\">Query status</param>",
        "<param name=\"numOfRows\"> The number of rows of data obtained (not a function of",
        "the entire query result set). When the number is zero (the result is returned)",
        "or the number of records is negative (the query fails).</param>",
        "In asynchronous mode, the prototype of the callback function.",
        "</summary>",
        "<param name=\"subscribe\">Subscription object return by <see cref = \"Subscribe\"> </param>",
        "<param name=\"tasRes\"> Query retrieve result set. (Note there may be no record in the result set.)</param>",
        "<param name=\"param\"> Additional parameters supplied by the client when taos_subscribe is called.</param>",
        "<param name=\"code\"> Error code.</param>",
        "static extern public IntPtr Query(IntPtr conn, string sqlstr);",
        "get precision of restultset",
        "stmt APIs:",
        "init a TAOS_STMT object for later use.",
        "</summary>",
        "<param name=\"taos\">a valid taos connection</param>",
        "<returns>",
        "Not NULL returned for success, NULL for failure. And it should be freed with taos_stmt_close.",
        "</returns>",
        "prepare a sql statement��'sql' should be a valid INSERT/SELECT statement.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<param name=\"sql\">sql string,used to bind parameters with</param>",
        "<param name=\"length\">no used</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "For INSERT only. Used to bind table name as a parmeter for the input stmt object.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<param name=\"name\">table name you want to  bind</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "For INSERT only.",
        "Set a table name for binding table name as parameter. Only used for binding all tables",
        "in one stable, user application must call 'loadTableInfo' API to load all table",
        "meta before calling this API. If the table meta is not cached locally, it will return error.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<param name=\"name\">table name which is belong to an stable</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "For INSERT only.",
        "set a table name for binding table name as parameter and tag values for all  tag parameters.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<param name=\"name\">use to set table name</param>",
        "<param name=\"tags\">",
        "is an array contains all tag values,each item in the array represents a tag column's value.",
        "the item number and sequence should keep consistence with that in stable tag definition.",
        "</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "For both INSERT and SELECT.",
        "bind a whole line data.",
        "The usage of structure TAOS_BIND is the same with MYSQL_BIND in MySQL.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<param name=\"bind\">",
        "points to an array contains the whole line data.",
        "the item number and sequence should keep consistence with columns in sql statement.",
        "</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "bind a single column's data, INTERNAL used and for INSERT only.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<param name=\"bind\">points to a column's data which could be the one or more lines. </param>",
        "<param name=\"colIdx\">the column's index in prepared sql statement, it starts from 0.</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "for INSERT only",
        "bind one or multiple lines data. The parameter 'bind'",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<param name=\"bind\">",
        "points to an array contains one or more lines data.Each item in array represents a column's value(s),",
        "the item number and sequence should keep consistence with columns in sql statement.",
        "</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "For INSERT only.",
        "add all current bound parameters to batch process. Must be called after each call to",
        "StmtBindParam/StmtBindSingleParamBatch, or all columns binds for one or more lines",
        "with StmtBindSingleParamBatch. User application can call any bind parameter",
        "API again to bind more data lines after calling to this API.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "actually execute the INSERT/SELECT sql statement.",
        "User application can continue to bind new data after calling to this API.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<returns></returns>",
        "For SELECT only,getting the query result. User application should free it with API 'FreeResult' at the end.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<returns>Not NULL for success, NULL for failure.</returns>",
        "close STMT object and free resources.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<returns>0 for success, non-zero for failure.</returns>",
        "user application must call this API to  load all tables meta,",
        "</summary>",
        "<param name=\"taos\">taos connection</param>",
        "<param name=\"tableList\">tablelist</param>",
        "<returns></returns>",
        "user application  call this API to load all tables meta,this method call the native",
        "method LoadTableInfoDll.",
        "this method must be called before StmtSetSubTbname(IntPtr stmt, string name);",
        "</summary>",
        "<param name=\"taos\">taos connection</param>",
        "<param name=\"tableList\">tables need to load meta info are form in an array</param>",
        "<returns></returns>",
        "get detail error message when got failure for any stmt API call. If not failure, the result",
        "returned in this API is unknown.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<returns>point the error message</returns>",
        "get detail error message when got failure for any stmt API call. If not failure, the result",
        "returned in this API is unknown.",
        "</summary>",
        "<param name=\"stmt\">could be the value returned by 'StmtInit', that may be a valid object or NULL.</param>",
        "<returns>error string</returns>",
        "Async Query",
        "This API uses non-blocking call mode.",
        "Application can open multiple tables and manipulate(query or insert) opened table concurrently.",
        "So applications must ensure that opetations on the same table is completely serialized.",
        "Because that will cause some query and insert operations cannot be performed.",
        "</summary>",
        "<param name=\"taos\"> A taos connection return by Connect()</param>",
        "<param name=\"sql\">sql command need to execute</param>",
        "<param name=\"fq\">User-defined callback function. <see cref=\"QueryAsyncCallback\"/></param>",
        "<param name=\"param\">the parameter for callback</param>",
        "Get the result set of asynchronous queries in batch,",
        "which can only be used with QueryAsync().<c>FetchRowAsyncCallback<c>",
        "</summary>",
        "<param name=\"taoRes\"> The result set returned when backcall QueryAsyncCallback </param>",
        "<param name=\"fq\"> Callback function.<see cref=\"FetchRowAsyncCallback\"/></param>",
        "<param name=\"param\"> The parameter for callback FetchRowAsyncCallback </param>",
        "Subscribe",
        "This function is used for start subscription service.",
        "</summary>",
        "<param name=\"taos\"> taos connection return by <see cref = \"Connect\"></param>",
        "<param name=\"restart\">If the subscription is already exists, to decide whether to",
        "start over or continue with previous subscription.</param>",
        "<param name=\"topic\"> The name of the subscription.(This is the unique identification of the subscription).</param>",
        "<param name=\"sql\">The subscribe statement(select only).Only query original data and in positive time sequence.</param>",
        "<param name=\"fq\">The callback function when the query result is received.</param>",
        "<param name=\"param\"> Additional parameter when calling callback function. System API will pass it to",
        "callback function without any operations.It is only used when calling asynchronously,",
        "and this parameter should be passed to NULL when calling synchronously</param>",
        "<param name=\"interval\">Polling period in milliseconds. During asynchronous call, the callback function will be",
        "called periodically according to this parameter; In order to avoid affecting system",
        "performance, it is not recommended to set this parameter too small; When calling synchronously,",
        "if the interval between two calls to taos_consume is less than this period, the API will block",
        "until the interval exceeds this period.</param>",
        "<returns>Return null for failure, return subscribe object for success.</returns>",
        "Only synchronous mode, this function is used to get the result of subscription.",
        "If the interval between two calls to taos_consume is less than the polling",
        "cycle of the subscription, the API will block until the interval exceeds this",
        "cycle. If a new record arrives in the database, the API will return the latest",
        "record, otherwise it will return an empty result set with no records.",
        "If the return value is NULL, it indicates a system error.",
        "</summary>",
        "<param name=\"subscribe\"> Subscription object return by <see cref = \"Subscribe\">. </param>",
        "<returns></returns>",
        "Unsubscribe.",
        "</summary>",
        "<param name=\"subscribe\"> Subscription object return by <see cref = \"Subscribe\">.</param>",
        "<param name=\"keep\"> If it is not 0, the API will keep the progress of subscription,",
        "and the  and the subsequent call to taos_subscribe can continue",
        "based on this progress; otherwise, the progress information will",
        "be deleted and the data can only be read again.",
        "</param>",
        "Stream",
        "Used to open an stream, which can do continuous query.",
        "</summary>",
        "<param name=\"taos\"> taos connection return by <see cref = \"Connect\"></param>",
        "<param name=\"sql\"> Query statement( query only)</param>",
        "<param name=\"fp\"> User defined callback.</param>",
        "<param name=\"stime\"> The time when stream computing starts. If it is 0, it means starting from now.",
        "If it is not zero, it means starting from the specified time (the number of",
        "milliseconds from 1970/1/1 UTC time).",
        "</param>",
        "<param name=\"param\">First parameter provide by application for callback usage.",
        "While callback,this parameter is provided to the application.</param>",
        "<param name=\"callback2\">The second callback function which will be called when the continuous query",
        "stop automatically.</param>",
        "<returns> Return null indicate creation failed, not null for success.</returns>",
        "Used too stop data flow.",
        "Remember to stop data flow when you stopped steam computing.",
        "</summary>",
        "<param name=\"stream\"> Value returned by <see cref = \"OpenStream\"></param>"
    ],
    "docstrings": [
        "*Copyright(c) 2019 TAOS Data, Inc. <jhtao@taosdata.com>\n *\n * This program is free software: you can use, redistribute, and/or modify\n * it under the terms of the GNU Affero General Public License, version 3\n * or later (\"AGPL\"), as published by the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n * FITNESS FOR A PARTICULAR PURPOSE.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "TypeName",
        "Init",
        "Cleanup",
        "Options",
        "IntPtr",
        "Connect",
        "IntPtr",
        "taos_errstr",
        "ErrorNo",
        "IntPtr",
        "Query",
        "StopQuery",
        "IntPtr",
        "Query",
        "AffectRows",
        "FieldCount",
        "IntPtr",
        "taos_fetch_fields",
        "FetchFields",
        "IntPtr",
        "FetchRows",
        "IntPtr",
        "FreeResult",
        "Close",
        "IntPtr",
        "GetClientInfo",
        "ResultPrecision",
        "IntPtr",
        "GetServerInfo",
        "SelectDatabase",
        "IntPtr",
        "StmtInit",
        "StmtPrepare",
        "StmtSetTbname",
        "StmtSetSubTbname",
        "StmtSetTbnameTags",
        "StmtBindParam",
        "StmtBindSingleParamBatch",
        "StmtBindParamBatch",
        "StmtAddBatch",
        "StmtExecute",
        "IntPtr",
        "StmtUseResult",
        "StmtClose",
        "LoadTableInfoDll",
        "LoadTableInfo",
        "IntPtr",
        "StmtErrPtr",
        "StmtErrorStr",
        "IntPtr",
        "FetchLengths",
        "QueryAsync",
        "QueryAsync",
        "FetchRowAsync",
        "IntPtr",
        "Subscribe",
        "IntPtr",
        "Subscribe",
        "IntPtr",
        "TaosConsume",
        "IntPtr",
        "Consume",
        "Unsubscribe",
        "Unsubscribe",
        "IntPtr",
        "OpenStream",
        "CloseStream"
    ],
    "classes": [
        "TDengineMeta",
        "TDengine"
    ]
}