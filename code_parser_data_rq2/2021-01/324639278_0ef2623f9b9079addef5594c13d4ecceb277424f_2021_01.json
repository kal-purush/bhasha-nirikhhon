{
    "identifiers": [
        "Sparkade",
        "SparkTools",
        "CustomProjectSettings",
        "Editor",
        "Collections",
        "Generic",
        "IO",
        "UnityEditor",
        "UnityEngine",
        "Type",
        "SettingsAsset",
        "Type",
        "SettingsAsset",
        "Path",
        "Combine",
        "Directory",
        "GetParent",
        "Application",
        "dataPath",
        "FullName",
        "T",
        "T",
        "SettingsAsset",
        "SettingsExists",
        "T",
        "Debug",
        "LogError",
        "SettingsManager",
        "GetSettingsName",
        "T",
        "ScriptableObject",
        "CreateInstance",
        "T",
        "asset",
        "Reset",
        "Directory",
        "Exists",
        "SettingsPath",
        "Directory",
        "CreateDirectory",
        "SettingsPath",
        "File",
        "WriteAllText",
        "Path",
        "Combine",
        "SettingsPath",
        "GetSettingsFilename",
        "T",
        "JsonUtility",
        "ToJson",
        "asset",
        "T",
        "T",
        "SettingsAsset",
        "SettingsExists",
        "T",
        "Debug",
        "LogError",
        "SettingsManager",
        "GetSettingsName",
        "T",
        "File",
        "Delete",
        "Path",
        "Combine",
        "SettingsPath",
        "GetSettingsFilename",
        "T",
        "SettingsCache",
        "Remove",
        "T",
        "T",
        "T",
        "SettingsAsset",
        "GetCachedSettings",
        "T",
        "T",
        "T",
        "SettingsAsset",
        "LoadSettings",
        "T",
        "T",
        "T",
        "SettingsAsset",
        "GetCachedSettings",
        "T",
        "asset",
        "Debug",
        "LogError",
        "SettingsManager",
        "GetSettingsName",
        "T",
        "Selection",
        "activeObject",
        "asset",
        "T",
        "T",
        "SettingsAsset",
        "SettingsExists",
        "T",
        "CreateSettings",
        "T",
        "LoadSettings",
        "T",
        "T",
        "T",
        "SettingsAsset",
        "SettingsExists",
        "T",
        "CreateSettings",
        "T",
        "InspectSettings",
        "T",
        "KeyValuePair",
        "Type",
        "SettingsAsset",
        "pair",
        "SettingsCache",
        "File",
        "WriteAllText",
        "Path",
        "Combine",
        "SettingsPath",
        "GetSettingsFilename",
        "pair",
        "Key",
        "JsonUtility",
        "ToJson",
        "pair",
        "Value",
        "SettingsCache",
        "Clear",
        "T",
        "T",
        "SettingsAsset",
        "SettingsCache",
        "ContainsKey",
        "T",
        "Path",
        "Combine",
        "SettingsPath",
        "GetSettingsFilename",
        "T",
        "File",
        "Exists",
        "filePath",
        "SettingsCache",
        "T",
        "ScriptableObject",
        "CreateInstance",
        "T",
        "JsonUtility",
        "FromJsonOverwrite",
        "File",
        "ReadAllText",
        "filePath",
        "SettingsCache",
        "T",
        "SettingsCache",
        "T",
        "T",
        "Type",
        "Path",
        "ChangeExtension",
        "SettingsManager",
        "GetSettingsName",
        "T",
        "GetSettingsFilename",
        "T"
    ],
    "literals": [
        "\"ProjectSettings\"",
        "\"CustomSettings\"",
        "\"asset\""
    ],
    "variables": [
        "SettingsCache",
        "SettingsPath",
        "T",
        "asset",
        "T",
        "asset",
        "filePath"
    ],
    "comments": [
        "Editor-only settings manager capable of creating, destroying, writing, and reading settings.",
        "</summary>",
        "Gets the absolute path to where custom project settings are stored.",
        "</summary>",
        "Creates a cusom project setting of type 'T'.",
        "</summary>",
        "<typeparam name=\"T\">Type of SettingsAsset to be created.</typeparam>",
        "Destroys a cusom project setting of type 'T'.",
        "</summary>",
        "<typeparam name=\"T\">Type of SettingsAsset to be destroyed.</typeparam>",
        "Returns a custom project setting of type 'T'.",
        "</summary>",
        "<typeparam name=\"T\">Type of SettingsAsset to be returned.</typeparam>",
        "<returns>The SettingsAsset of type 'T'. If it does not exist, null is returned.</returns>",
        "Gets whether a custom project setting of type 'T' exists.",
        "</summary>",
        "<typeparam name=\"T\">The type of SettingsAsset you are checking for.</typeparam>",
        "<returns>True if the custom project setting of type 'T' exists, otherwise false.</returns>",
        "Opens the SettingsAsset of type 'T' in the inspector.",
        "</summary>",
        "<typeparam name=\"T\">The type of SettingsAsset to inspect.</typeparam>",
        "Loads a custom project setting, and creates it if it did not exist.",
        "</summary>",
        "<typeparam name=\"T\">Type of SettingsAsset to be returned.</typeparam>",
        "<returns>The SettingsAsset of type 'T'.</returns>",
        "Inspects a custom project setting, and creates it if it did not exist.",
        "</summary>",
        "<typeparam name=\"T\">The type of SettingsAsset to inspect.</typeparam>",
        "Manually saves all currently cached settings.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "CreateSettings",
        "DestroySettings",
        "T",
        "LoadSettings",
        "SettingsExists",
        "InspectSettings",
        "T",
        "LoadOrCreateSettings",
        "InspectOrCreateSettings",
        "SaveCachedSettings",
        "T",
        "GetCachedSettings",
        "GetSettingsFilename",
        "GetSettingsFilename"
    ],
    "classes": [
        "EditorSettingsManager"
    ]
}