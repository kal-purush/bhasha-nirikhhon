{
    "identifiers": [
        "org",
        "apache",
        "cassandra",
        "distributed",
        "test",
        "java",
        "util",
        "java",
        "util",
        "com",
        "google",
        "common",
        "collect",
        "ImmutableMap",
        "org",
        "junit",
        "Test",
        "org",
        "apache",
        "cassandra",
        "distributed",
        "Cluster",
        "org",
        "apache",
        "cassandra",
        "distributed",
        "api",
        "Feature",
        "org",
        "apache",
        "cassandra",
        "distributed",
        "api",
        "IIsolatedExecutor",
        "SerializableRunnable",
        "org",
        "apache",
        "cassandra",
        "distributed",
        "shared",
        "NetworkTopology",
        "org",
        "apache",
        "cassandra",
        "net",
        "MessagingService",
        "com",
        "google",
        "common",
        "collect",
        "Iterables",
        "getOnlyElement",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "Test",
        "builder",
        "builder",
        "withNodes",
        "withConfig",
        "c",
        "c",
        "Feature",
        "NETWORK",
        "c",
        "Feature",
        "NATIVE_PROTOCOL",
        "c",
        "num",
        "encryption",
        "encryption",
        "put",
        "encryption",
        "put",
        "encryption",
        "put",
        "encryption",
        "put",
        "encryption",
        "put",
        "c",
        "encryption",
        "withNodeIdTopology",
        "ImmutableMap",
        "of",
        "NetworkTopology",
        "dcAndRack",
        "NetworkTopology",
        "dcAndRack",
        "cluster",
        "builder",
        "start",
        "cluster",
        "get",
        "runOnInstance",
        "threads",
        "MessagingService",
        "instance",
        "getSocketThreads",
        "assertEquals",
        "threads",
        "size",
        "thread",
        "threads",
        "assertEquals",
        "thread",
        "connections",
        "size",
        "cluster",
        "get",
        "runOnInstance",
        "threads",
        "MessagingService",
        "instance",
        "getSocketThreads",
        "assertEquals",
        "threads",
        "size",
        "assertTrue",
        "getOnlyElement",
        "threads",
        "connections",
        "isEmpty",
        "Test",
        "builder",
        "builder",
        "withNodes",
        "withConfig",
        "c",
        "c",
        "Feature",
        "NETWORK",
        "c",
        "Feature",
        "NATIVE_PROTOCOL",
        "encryption",
        "encryption",
        "put",
        "encryption",
        "put",
        "encryption",
        "put",
        "encryption",
        "put",
        "encryption",
        "put",
        "c",
        "encryption",
        "withNodeIdTopology",
        "ImmutableMap",
        "of",
        "NetworkTopology",
        "dcAndRack",
        "NetworkTopology",
        "dcAndRack",
        "cluster",
        "builder",
        "start",
        "runnable",
        "threads",
        "MessagingService",
        "instance",
        "getSocketThreads",
        "assertEquals",
        "threads",
        "size",
        "sslThread",
        "threads",
        "get",
        "assertEquals",
        "sslThread",
        "connections",
        "size",
        "plainThread",
        "threads",
        "get",
        "assertEquals",
        "plainThread",
        "connections",
        "size",
        "cluster",
        "get",
        "runOnInstance",
        "runnable",
        "cluster",
        "get",
        "runOnInstance",
        "runnable"
    ],
    "literals": [
        "\"keystore\"",
        "\"test/conf/cassandra_ssl_test.keystore\"",
        "\"keystore_password\"",
        "\"cassandra\"",
        "\"truststore\"",
        "\"test/conf/cassandra_ssl_test.truststore\"",
        "\"truststore_password\"",
        "\"cassandra\"",
        "\"internode_encryption\"",
        "\"dc\"",
        "\"server_encryption_options\"",
        "\"dc1\"",
        "\"r1a\"",
        "\"dc2\"",
        "\"r2a\"",
        "\"keystore\"",
        "\"test/conf/cassandra_ssl_test.keystore\"",
        "\"keystore_password\"",
        "\"cassandra\"",
        "\"truststore\"",
        "\"test/conf/cassandra_ssl_test.truststore\"",
        "\"truststore_password\"",
        "\"cassandra\"",
        "\"internode_encryption\"",
        "\"dc\"",
        "\"server_encryption_options\"",
        "\"dc1\"",
        "\"r1a\"",
        "\"dc2\"",
        "\"r2a\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* instance (1) won't connect to (2), since (2) won't have a TLS listener;\n             * instance (2) won't connect to (1), since inbound check will reject\n             * the unencrypted connection attempt;\n             *\n             * without the patch, instance (2) *CAN* connect to (1), without encryption,\n             * despite being in a different dc.",
        "* instance (1) should connect to instance (2) without any issues;\n             * instance (2) should connect to instance (1) without any issues."
    ],
    "functions": [
        "testConnectionsAreRejectedWithInvalidConfig",
        "testConnectionsAreAcceptedWithValidConfig"
    ],
    "classes": [
        "InternodeEncryptionEnforcementTest"
    ]
}