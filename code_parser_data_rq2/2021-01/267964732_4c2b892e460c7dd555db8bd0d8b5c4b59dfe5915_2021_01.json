{
    "identifiers": [
        "Runtime",
        "CompilerServices",
        "TerraFX",
        "Interop",
        "Voltium",
        "Core",
        "Devices",
        "SysDebug",
        "Diagnostics",
        "Debug",
        "Voltium",
        "Core",
        "Memory",
        "ComputeAllocator",
        "GraphicsDevice",
        "device",
        "device",
        "SysDebug",
        "Assert",
        "device",
        "_device",
        "QueryFeatureSupport",
        "D3D12_FEATURE",
        "D3D12_FEATURE_D3D12_OPTIONS",
        "D3D12_FEATURE_DATA_D3D12_OPTIONS",
        "options",
        "_hasMergedHeapSupport",
        "options",
        "ResourceHeapTier",
        "D3D12_RESOURCE_HEAP_TIER",
        "D3D12_RESOURCE_HEAP_TIER_2",
        "_4kbTextures",
        "_64kbTextures",
        "_4mbTextures",
        "_hasMergedHeapSupport",
        "_64kbRtOrDs",
        "_4mbRtOrDs",
        "_accelerationStructureHeap",
        "_device",
        "QueryFeatureSupport",
        "D3D12_FEATURE",
        "D3D12_FEATURE_D3D12_OPTIONS6",
        "D3D12_FEATURE_DATA_D3D12_OPTIONS6",
        "options6",
        "_tileSize",
        "options6",
        "ShadingRateImageTileSize",
        "AccelerationStructureBuildInfo",
        "info",
        "Buffer",
        "scratch",
        "AllocateRaytracingAccelerationBuffer",
        "info",
        "AllocFlags",
        "scratch",
        "AccelerationStructureBuildInfo",
        "info",
        "AllocFlags",
        "allocFlags",
        "Buffer",
        "scratch",
        "scratch",
        "AllocateBuffer",
        "info",
        "ScratchSize",
        "MemoryAccess",
        "GpuOnly",
        "ResourceFlags",
        "AllowUnorderedAccess",
        "ResourceFlags",
        "DenyShaderResource",
        "allocFlags",
        "AllocateRaytracingAccelerationBuffer",
        "info",
        "DestSize",
        "allocFlags",
        "length",
        "AllocFlags",
        "allocFlags",
        "AllocFlags",
        "CreateAllocDesc",
        "BufferDesc",
        "Length",
        "length",
        "ResourceFlags",
        "ResourceFlags",
        "AllowUnorderedAccess",
        "allocDesc",
        "MemoryAccess",
        "GpuOnly",
        "ResourceState",
        "RaytracingAccelerationStructure",
        "allocFlags",
        "RaytracingAccelerationStructure",
        "Buffer",
        "_device",
        "Allocate",
        "allocDesc",
        "allocDesc",
        "buffer",
        "Buffer",
        "alias",
        "TextureDesc",
        "desc",
        "ResourceState",
        "initialResourceState",
        "AllocFlags",
        "allocFlags",
        "AllocFlags",
        "CreateAllocDesc",
        "desc",
        "allocDesc",
        "initialResourceState",
        "allocFlags",
        "Texture",
        "desc",
        "AllocateAliasing",
        "alias",
        "Resource",
        "allocDesc",
        "Texture",
        "alias",
        "TextureDesc",
        "desc",
        "ResourceState",
        "initialResourceState",
        "AllocFlags",
        "allocFlags",
        "AllocFlags",
        "CreateAllocDesc",
        "desc",
        "allocDesc",
        "initialResourceState",
        "allocFlags",
        "Texture",
        "desc",
        "AllocateAliasing",
        "alias",
        "Resource",
        "allocDesc",
        "TextureDesc",
        "desc",
        "ResourceState",
        "initialResourceState",
        "AllocFlags",
        "allocFlags",
        "AllocFlags",
        "CreateAllocDesc",
        "desc",
        "allocDesc",
        "initialResourceState",
        "allocFlags",
        "Texture",
        "desc",
        "Allocate",
        "allocDesc",
        "GpuOnlyResourcesAreWritable",
        "texture",
        "GetResourcePointer",
        "GetDesc",
        "GetSubresources",
        "ID3D12Device",
        "_device",
        "DevicePointer",
        "i",
        "numSubresources",
        "i",
        "_device",
        "ThrowIfFailed",
        "texture",
        "GetResourcePointer",
        "i",
        "texture",
        "TextureDesc",
        "desc",
        "InternalAllocDesc",
        "pDesc",
        "ResourceState",
        "initialResourceState",
        "AllocFlags",
        "allocFlags",
        "DXGI_SAMPLE_DESC",
        "desc",
        "Msaa",
        "SampleCount",
        "desc",
        "Msaa",
        "QualityLevel",
        "desc",
        "Msaa",
        "SampleCount",
        "sample",
        "Count",
        "D3D12_RESOURCE_DESC",
        "Dimension",
        "D3D12_RESOURCE_DIMENSION",
        "desc",
        "Dimension",
        "Alignment",
        "Width",
        "desc",
        "Width",
        "Height",
        "Max",
        "desc",
        "Height",
        "DepthOrArraySize",
        "Max",
        "desc",
        "DepthOrArraySize",
        "MipLevels",
        "desc",
        "MipCount",
        "Format",
        "DXGI_FORMAT",
        "desc",
        "Format",
        "Flags",
        "D3D12_RESOURCE_FLAGS",
        "desc",
        "ResourceFlags",
        "SampleDesc",
        "sample",
        "Layout",
        "D3D12_TEXTURE_LAYOUT",
        "desc",
        "Layout",
        "D3D12_CLEAR_VALUE",
        "Format",
        "resDesc",
        "Format",
        "desc",
        "ClearValue",
        "GetValueOrDefault",
        "desc",
        "ResourceFlags",
        "HasFlag",
        "ResourceFlags",
        "AllowRenderTarget",
        "Unsafe",
        "Write",
        "clearVal",
        "Anonymous",
        "Color",
        "val",
        "Color",
        "desc",
        "ResourceFlags",
        "HasFlag",
        "ResourceFlags",
        "AllowDepthStencil",
        "clearVal",
        "Anonymous",
        "DepthStencil",
        "Depth",
        "val",
        "Depth",
        "clearVal",
        "Anonymous",
        "DepthStencil",
        "Stencil",
        "val",
        "Stencil",
        "_device",
        "GetAllocationInfo",
        "pDesc",
        "resDesc",
        "Alignment",
        "allocInfo",
        "Alignment",
        "HeapInfo",
        "Alignment",
        "Alignment",
        "allocInfo",
        "Alignment",
        "Access",
        "MemoryAccess",
        "GpuOnly",
        "Type",
        "GetResourceType",
        "resDesc",
        "Dimension",
        "resDesc",
        "Flags",
        "pDesc",
        "InternalAllocDesc",
        "Desc",
        "resDesc",
        "ClearValue",
        "clearVal",
        "InitialState",
        "D3D12_RESOURCE_STATES",
        "initialResourceState",
        "AllocFlags",
        "allocFlags",
        "HeapType",
        "D3D12_HEAP_TYPE",
        "D3D12_HEAP_TYPE_DEFAULT",
        "HeapProperties",
        "GetHeapProperties",
        "heapInfo",
        "Size",
        "allocInfo",
        "SizeInBytes"
    ],
    "literals": [],
    "variables": [
        "_tileSize",
        "InternalAllocDesc",
        "allocDesc",
        "buffer",
        "InternalAllocDesc",
        "allocDesc",
        "InternalAllocDesc",
        "allocDesc",
        "InternalAllocDesc",
        "allocDesc",
        "texture",
        "numSubresources",
        "i",
        "DXGI_SAMPLE_DESC",
        "sample",
        "resDesc",
        "D3D12_CLEAR_VALUE",
        "clearVal",
        "val",
        "allocInfo",
        "heapInfo"
    ],
    "comments": [
        "private UniqueComPtr<ID3D12Heap> GetHeapForArray<T>(T[] array, MemoryAccess access) where T : unmanaged",
        "{",
        "// god forgive my damn'ed soul",
        "var manager = _COMArrayDisposal.Create(array);",
        "var heap = OpenHeapFromAddress(manager.Pointer);",
        "Guard.ThrowIfFailed(heap.Ptr->SetPrivateDataInterface(_COMArrayDisposal.RID, (IUnknown*)&manager));",
        "return heap;",
        "}",
        "[NativeComType(implements: typeof(IUnknown))]",
        "private struct _COMArrayDisposal",
        "{",
        "private readonly void** lpVtbl;",
        "public static readonly Guid* RID = InitGuid();",
        "private static readonly Guid Guid = // {B7D81026-6DBF-4A61-BEA5-F08D0AAF371F}",
        "new(0xb7d81026, 0x6dbf, 0x4a61, 0xbe, 0xa5, 0xf0, 0x8d, 0xa, 0xaf, 0x37, 0x1f);",
        "private static Guid* InitGuid()",
        "{",
        "var p = (Guid*)RuntimeHelpers.AllocateTypeAssociatedMemory(typeof(_COMArrayDisposal), sizeof(Guid));",
        "return p;",
        "}",
        "private uint _refCount;",
        "private IntPtr _handle;",
        "public void* Pointer => (void*)GCHandle.FromIntPtr(_handle).AddrOfPinnedObject();",
        "private _COMArrayDisposal(GCHandle handle)",
        "{",
        "_lpVtbl = Init();",
        "_refCount = 1;",
        "_handle = GCHandle.ToIntPtr(handle);",
        "}",
        "public static _COMArrayDisposal Create<T>(T[] arr)",
        "{",
        "var handle = GCHandle.Alloc(arr, GCHandleType.Pinned);",
        "return Create(handle);",
        "}",
        "public static _COMArrayDisposal Create(GCHandle handle)",
        "{",
        "return new(handle);",
        "}",
        "[NativeComMethod]",
        "public int QueryInterface(Guid* riid, void** ppvObject)",
        "{",
        "return E_NOINTERFACE;",
        "}",
        "[NativeComMethod]",
        "public uint AddRef()",
        "{",
        "return Interlocked.Increment(ref _refCount);",
        "}",
        "[NativeComMethod]",
        "public uint Release()",
        "{",
        "var val = Interlocked.Decrement(ref _refCount);",
        "if (val < 0)",
        "{",
        "var gc = GCHandle.FromIntPtr(_handle);",
        "gc.Free();",
        "}",
        "return val;",
        "}",
        "}",
        "Creates a new allocator",
        "</summary>",
        "<param name=\"device\">The <see cref=\"ID3D12Device\"/> to allocate on</param>",
        "Allocates a buffer for use as a raytracing acceleration structure",
        "</summary>",
        "<param name=\"info\">The <see cref=\"AccelerationStructureBuildInfo\"/> containing the required sizes of the buffers</param>",
        "<param name=\"scratch\">On return, this is filled with a <see cref=\"Buffer\"/> with a large anough size to be used as the scratch buffer in a raytracing acceleration structure build</param>",
        "<returns>A <see cref=\"RaytracingAccelerationStructure\"/> with a large anough size to be used as the destination in a raytracing acceleration structure build</returns>",
        "Allocates a buffer for use as a raytracing acceleration structure",
        "</summary>",
        "<param name=\"info\">The <see cref=\"AccelerationStructureBuildInfo\"/> containing the required sizes of the buffers</param>",
        "<param name=\"scratch\">On return, this is filled with a <see cref=\"Buffer\"/> with a large anough size to be used as the scratch buffer in a raytracing acceleration structure build</param>",
        "<param name=\"allocFlags\">Any additional allocation flags</param>",
        "<returns>A <see cref=\"RaytracingAccelerationStructure\"/> with a large anough size to be used as the destination in a raytracing acceleration structure build</returns>",
        "Allocates a buffer for use as a raytracing acceleration structure or scratch buffer for a raytracing acceleration structure build",
        "</summary>",
        "<param name=\"length\">The length, in bytes, to allocate</param>",
        "<param name=\"allocFlags\">Any additional allocation flags</param>",
        "<returns>A <see cref=\"RaytracingAccelerationStructure\"/></returns>",
        "Allocates a texture",
        "</summary>",
        "<param name=\"alias\">The buffer to alias</param>",
        "<param name=\"desc\">The <see cref=\"TextureDesc\"/> describing the texture</param>",
        "<param name=\"initialResourceState\">The state of the resource when it is allocated</param>",
        "<param name=\"allocFlags\">Any additional allocation flags</param>",
        "<returns>A new <see cref=\"Texture\"/></returns>",
        "Allocates a texture",
        "</summary>",
        "<param name=\"alias\">The texture to alias</param>",
        "<param name=\"desc\">The <see cref=\"TextureDesc\"/> describing the texture</param>",
        "<param name=\"initialResourceState\">The state of the resource when it is allocated</param>",
        "<param name=\"allocFlags\">Any additional allocation flags</param>",
        "<returns>A new <see cref=\"Texture\"/></returns>",
        "Allocates a texture",
        "</summary>",
        "<param name=\"desc\">The <see cref=\"TextureDesc\"/> describing the texture</param>",
        "<param name=\"initialResourceState\">The state of the resource when it is allocated</param>",
        "<param name=\"allocFlags\">Any additional allocation flags</param>",
        "<returns>A new <see cref=\"Texture\"/></returns>",
        "Normalize default"
    ],
    "docstrings": [
        "*p = Guid;",
        "*ppvObject = null;",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "GraphicsAllocator",
        "RaytracingAccelerationStructure",
        "AllocateRaytracingAccelerationBuffer",
        "RaytracingAccelerationStructure",
        "AllocateRaytracingAccelerationBuffer",
        "RaytracingAccelerationStructure",
        "AllocateRaytracingAccelerationBuffer",
        "Texture",
        "AllocateTextureAliasing",
        "Texture",
        "AllocateTextureAliasing",
        "Texture",
        "AllocateTexture",
        "CreateAllocDesc"
    ],
    "classes": [
        "GraphicsAllocator"
    ]
}