{
    "identifiers": [
        "com",
        "vmware",
        "dcm",
        "compiler",
        "com",
        "facebook",
        "presto",
        "sql",
        "SqlFormatter",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "AliasedRelation",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "AllColumns",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "ArithmeticBinaryExpression",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "ArithmeticUnaryExpression",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "AstVisitor",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "BooleanLiteral",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "ComparisonExpression",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "CreateView",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "DereferenceExpression",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "ExistsPredicate",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "GroupBy",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "Identifier",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "InPredicate",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "IsNotNullPredicate",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "IsNullPredicate",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "Join",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "LogicalBinaryExpression",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "LongLiteral",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "Node",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "NodeLocation",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "NotExpression",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "Query",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "QuerySpecification",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "Select",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "SimpleGroupBy",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "SingleColumn",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "StringLiteral",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "SubqueryExpression",
        "com",
        "facebook",
        "presto",
        "sql",
        "tree",
        "Table",
        "com",
        "vmware",
        "dcm",
        "ModelException",
        "com",
        "vmware",
        "dcm",
        "ViewsWithAnnotations",
        "javax",
        "annotation",
        "java",
        "util",
        "Optional",
        "lastTraversedNode",
        "Override",
        "node",
        "context",
        "lastTraversedNode",
        "node",
        "ret",
        "process",
        "node",
        "context",
        "ret",
        "ret",
        "nodeLocation",
        "lastTraversedNode",
        "getLocation",
        "get",
        "err",
        "format",
        "lastTraversedNode",
        "getClass",
        "lastTraversedNode",
        "nodeLocation",
        "getLineNumber",
        "nodeLocation",
        "getColumnNumber",
        "err",
        "ret",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "node",
        "getType",
        "equals",
        "Join",
        "Type",
        "INNER",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "processChildren",
        "node",
        "Override",
        "node",
        "context",
        "Override",
        "node",
        "context",
        "Override",
        "node",
        "context",
        "Override",
        "node",
        "context",
        "Override",
        "node",
        "context",
        "node",
        "node",
        "getChildren",
        "stream",
        "process",
        "reduce",
        "a",
        "b",
        "a",
        "b",
        "view",
        "check",
        "view",
        "view",
        "getCreateView",
        "view",
        "getCheckExpression",
        "ifPresent",
        "expr",
        "check",
        "view",
        "expr",
        "view",
        "getMaximizeExpression",
        "ifPresent",
        "expr",
        "check",
        "view",
        "expr",
        "view",
        "part",
        "partType",
        "validQuery",
        "validQuery",
        "process",
        "view",
        "getCreateView",
        "inner",
        "err",
        "format",
        "view",
        "getCreateView",
        "getName",
        "partType",
        "SqlFormatter",
        "formatSql",
        "part",
        "Optional",
        "empty",
        "inner",
        "getMessage",
        "err"
    ],
    "literals": [
        "\"Unexpected AST type %s (%s) at line number %s and column number %s\"",
        "\"CREATE VIEW\"",
        "\"CHECK\"",
        "\"MAXIMIZE\"",
        "\"Unsupported SQL syntax in view \\\"%s\\\".\"",
        "\"%nIn %s component %s\"",
        "\"%s\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2018-2021 VMware, Inc. All Rights Reserved.\n * SPDX-License-Identifier: BSD-2",
        "* Checks if the parsed AST only uses the supported subset of SQL to specify policies"
    ],
    "functions": [
        "process",
        "visitCreateView",
        "visitAliasedRelation",
        "visitAllColumns",
        "visitGroupBy",
        "visitSimpleGroupBy",
        "visitTable",
        "visitJoin",
        "visitQuery",
        "visitQuerySpecification",
        "visitSelect",
        "visitLogicalBinaryExpression",
        "visitComparisonExpression",
        "visitArithmeticBinary",
        "visitArithmeticUnary",
        "visitExists",
        "visitInPredicate",
        "visitFunctionCall",
        "visitDereferenceExpression",
        "visitSubqueryExpression",
        "visitSingleColumn",
        "visitNotExpression",
        "visitIsNullPredicate",
        "visitIsNotNullPredicate",
        "visitLiteral",
        "visitStringLiteral",
        "visitLongLiteral",
        "visitBooleanLiteral",
        "visitIdentifier",
        "processChildren",
        "apply",
        "check"
    ],
    "classes": [
        "SyntaxChecking"
    ]
}