{
    "identifiers": [
        "updateAnimal",
        "arr",
        "callback",
        "arr",
        "element",
        "newArr",
        "callback",
        "element",
        "newArr",
        "sortNames",
        "arr",
        "arr",
        "sortNumbers",
        "arr",
        "arr",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "sortBackwards",
        "arr",
        "arr",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "alphabetize",
        "arr",
        "arr",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "sortByPrice",
        "arr",
        "arr",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "alphabetizeBetter",
        "arr",
        "sortByLength",
        "arr",
        "sortNumbersByLength",
        "arr",
        "firstName",
        "lastName",
        "age",
        "firstName",
        "lastName",
        "age",
        "Person",
        "Person",
        "Person",
        "sortPeople",
        "arr",
        "sortPeopleBetter",
        "arr",
        "dayOfWeek",
        "start",
        "end",
        "dayOfWeek",
        "start",
        "end",
        "Meeting",
        "Meeting",
        "Meeting",
        "Meeting",
        "Meeting",
        "Meeting",
        "sortMeetingsByDay",
        "arr",
        "sortSchedule",
        "arr",
        "describe",
        "test",
        "expect",
        "updateAnimal",
        "arr",
        "upper",
        "expect",
        "updateAnimal",
        "arr",
        "upper",
        "test",
        "expect",
        "updateAnimal",
        "arr",
        "lower",
        "expect",
        "updateAnimal",
        "arr",
        "lower",
        "describe",
        "test",
        "expect",
        "sortNames",
        "describe",
        "test",
        "expect",
        "sortNumbers",
        "describe",
        "test",
        "expect",
        "sortBackwards",
        "nums",
        "expect",
        "sortBackwards",
        "expect",
        "sortBackwards",
        "expect",
        "sortBackwards",
        "expect",
        "sortBackwards",
        "describe",
        "test",
        "expect",
        "alphabetize",
        "expect",
        "alphabetize",
        "expect",
        "alphabetize",
        "describe",
        "test",
        "expect",
        "sortByPrice",
        "expect",
        "sortByPrice",
        "expect",
        "sortByPrice",
        "xdescribe",
        "test",
        "expect",
        "alphabetizeBetter",
        "alphabetizeBetter",
        "expect",
        "ans",
        "expect",
        "expect",
        "ans",
        "xdescribe",
        "test",
        "sortByLength",
        "expect",
        "ans",
        "expect",
        "ans",
        "expect",
        "expect",
        "sortByLength",
        "expect",
        "sortByLength",
        "expect",
        "sortByLength",
        "xdescribe",
        "test",
        "expect",
        "sortNumbersByLength",
        "expect",
        "sortNumbersByLength",
        "expect",
        "sortNumbersByLength",
        "expect",
        "xdescribe",
        "test",
        "expect",
        "sortPeople",
        "people",
        "Person",
        "Person",
        "Person",
        "expect",
        "sortPeople",
        "xdescribe",
        "test",
        "Person",
        "Person",
        "Person",
        "Person",
        "Person",
        "expect",
        "sortPeopleBetter",
        "family",
        "Person",
        "Person",
        "Person",
        "Person",
        "Person",
        "expect",
        "sortPeopleBetter",
        "xdescribe",
        "test",
        "sortMeetingsByDay",
        "meetings",
        "expect",
        "sortedMeetings",
        "expect",
        "Meeting",
        "Meeting",
        "expect",
        "sortedMeetings",
        "Meeting",
        "expect",
        "sortedMeetings",
        "expect",
        "Meeting",
        "Meeting",
        "expect",
        "sortedMeetings",
        "Meeting",
        "xdescribe",
        "test",
        "expect",
        "sortSchedule",
        "meetings",
        "Meeting",
        "Meeting",
        "Meeting",
        "Meeting",
        "Meeting",
        "Meeting"
    ],
    "literals": [
        "'use strict'",
        "'Wes'",
        "'Washington'",
        "'Casey'",
        "'Codefellow'",
        "'Stan'",
        "'Seattle'",
        "'Monday'",
        "'0900'",
        "'1000'",
        "'Wednesday'",
        "'1300'",
        "'1500'",
        "'Tuesday'",
        "'1145'",
        "'1315'",
        "'Wednesday'",
        "'0930'",
        "'1000'",
        "'Monday'",
        "'0900'",
        "'0945'",
        "'Friday'",
        "'1200'",
        "'1345'",
        "'Testing challenge 1'",
        "'It should return an array of uppercase animal names'",
        "'BeAr'",
        "'lIon'",
        "'BEAR'",
        "'LION'",
        "'It should return an array of lowercase animal names'",
        "'BeAr'",
        "'lIon'",
        "'bear'",
        "'lion'",
        "'Testing challenge 2'",
        "'It should return an array of names sorted alphabetically'",
        "'able'",
        "'Bob'",
        "'Bob'",
        "'Testing challenge 3'",
        "'It should sort low-to-high the numbers in an array'",
        "'Testing challenge 4'",
        "'It should sort high-to-low the numbers in an array'",
        "'Testing challenge 5'",
        "'It should sort strings alphabetically'",
        "'alphabet'",
        "'Zebra'",
        "'Alphabet'",
        "'carrot'",
        "'Alphabet'",
        "'Zebra'",
        "'alphabet'",
        "'carrot'",
        "'alphabet'",
        "'Alphabet'",
        "'carrot'",
        "'Alphabet'",
        "'alphabet'",
        "'carrot'",
        "'Testing challenge 6'",
        "'It should sort items by their price'",
        "'Sweatshirt'",
        "'Bookmark'",
        "'Tote bag'",
        "'Bookmark'",
        "'Tote bag'",
        "'Sweatshirt'",
        "'Testing challenge 7'",
        "'It should alphabetize without regard to capitalization'",
        "'Alice'",
        "'apple'",
        "'alert'",
        "'Average'",
        "'alert'",
        "'Alice'",
        "'apple'",
        "'Average'",
        "'alphabet'",
        "'Zebra'",
        "'Alphabet'",
        "'carrot'",
        "'Alphabet'",
        "'alphabet'",
        "'carrot'",
        "'Zebra'",
        "'Testing challenge 8'",
        "'It should sort strings by length'",
        "'alphabet'",
        "'Zebra'",
        "'Alphabet'",
        "'carrot'",
        "'Zebra'",
        "'carrot'",
        "'Alphabet'",
        "'alphabet'",
        "'a'",
        "'bc'",
        "''",
        "''",
        "'a'",
        "'bc'",
        "'a'",
        "'a'",
        "'Testing challenge 9'",
        "'It should sort numbers by their length'",
        "'Testing challenge 10'",
        "'It should sort people by their last names'",
        "'Casey'",
        "'Codefellow'",
        "'Stan'",
        "'Seattle'",
        "'Wes'",
        "'Washington'",
        "'banana'",
        "'apple'",
        "'apple'",
        "'banana'",
        "'Testing challenge 11'",
        "'It should sort people with more strict ordering'",
        "'Casey'",
        "'Codefellows'",
        "'Casey'",
        "'Codefellows'",
        "'Charlie'",
        "'Codefellows'",
        "'Charles'",
        "'Codefellows'",
        "'Carol'",
        "'Codefellow'",
        "'Carol'",
        "'Codefellow'",
        "'Casey'",
        "'Codefellows'",
        "'Casey'",
        "'Codefellows'",
        "'Charles'",
        "'Codefellows'",
        "'Charlie'",
        "'Codefellows'",
        "'andrew'",
        "'apple'",
        "'andre'",
        "'apple'",
        "'andre'",
        "'apple'",
        "'andrew'",
        "'apple'",
        "'Testing challenge 12'",
        "'It should sort meetings by the day on which they happen'",
        "'Monday'",
        "'0900'",
        "'0945'",
        "'Monday'",
        "'0900'",
        "'1000'",
        "'Tuesday'",
        "'1145'",
        "'1315'",
        "'Wednesday'",
        "'0930'",
        "'1000'",
        "'Wednesday'",
        "'1300'",
        "'1500'",
        "'Friday'",
        "'1200'",
        "'1345'",
        "'Testing challenge 13'",
        "'It should sort meetings by when they happen'",
        "'Monday'",
        "'0900'",
        "'0945'",
        "'Monday'",
        "'0900'",
        "'1000'",
        "'Tuesday'",
        "'1145'",
        "'1315'",
        "'Wednesday'",
        "'0930'",
        "'1000'",
        "'Wednesday'",
        "'1300'",
        "'1500'",
        "'Friday'",
        "'1200'",
        "'1345'"
    ],
    "variables": [
        "updateAnimal",
        "newArr",
        "sortNames",
        "sortNumbers",
        "sortBackwards",
        "alphabetize",
        "sortByPrice",
        "alphabetizeBetter",
        "sortByLength",
        "sortNumbersByLength",
        "people",
        "sortPeople",
        "sortPeopleBetter",
        "meetings",
        "sortMeetingsByDay",
        "sortSchedule",
        "arr",
        "arr",
        "nums",
        "ans",
        "ans",
        "family",
        "sortedMeetings"
    ],
    "comments": [
        "------------------------------------------------------------------------------------------------\nCHALLENGE 1 - Review\n\nWrite a function named addAnimal that takes in array of animals (strings) and some callback function.\n\nThis function should first create a new array. Then iterate over the input array and modify each value based on the callback function provided.\n\nPush each updated animal string into the new array. Return the new array.\n\nHINT: Look at the tests to see how the callback functions are used.\n\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 2\n\nWrite a function called sortNames that takes an array of names and sorts them alphabetically. Capital letters should come before lowercase letters.\n\nFor example: 'Cat' would come before 'apple'\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 3\n\nWrite a function called sortNumbers that takes an array of numbers and sorts them from smallest to largest.\n\nHINT: Beware... JS default is \"Lexical\" ordering.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 4\n\nWrite a function named sortBackwards that takes in an array of numbers and returns the same array, with the numbers sorted, largest to smallest.\n\nHINT: Do it with a custom sort callback, not with using `.reverse()`. ;)\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 5\n\nWrite a function named alphabetize that takes in an array of strings and returns the same array with the strings sorted alphabetically.\n\nIn this alphabetization, capital letters come before lower case letters.\n\nFor example, ['Alphabet', 'Zebra', 'alphabet', 'carrot'] is correctly sorted.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 6\n\nWrite a function named sortByPrice that takes in an array of objects, each of which has a 'price' property, and sorts those objects by price, lowest to highest, returning the same array.\n\nHere is an example of the input:\n[\n  {name: 'Sweatshirt', price: 45},\n  {name: 'Bookmark', price: 2.50},\n  {name: 'Tote bag', price: 15}\n];\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 7 - Stretch Goal\n\nWrite a function named alphabetizeBetter that takes in an array of strings and returns the same array, with the strings sorted alphabetically. Capitalization should not change the sort order of two strings.\n\nFor example, ['Alphabet', 'alphabet', 'carrot', 'Zebra'] is correctly sorted, and so is ['alphabet', 'Alphabet', 'carrot', 'Zebra'].\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 8 - Stretch Goal\n\nWrite a function named sortByLength that takes in an array of strings and returns the same array, with the strings sorted by their length, lowest to highest.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 9 - Stretch Goal\n\nWrite a function named sortNumbersByLength that takes in an array of numbers and sorts those numbers by their length.\n\nFor example, [1, 14, 0.2, -281, 54782] is only correctly sorted in that order.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "-----------------------------------------------------------------------------------------------\nCHALLENGE 10 - Stretch Goal\n\nWrite a function named sortPeople that takes in an array of Person objects, each of which has firstName, lastName, and age properties, and sorts those people by their last names. Do not worry about capitalization or first names.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 11 - Stretch Goal\n\nWrite a function named sortPeopleBetter that takes in an array of Person objects, each of which has firstName, lastName, and age properties, and sorts those people by their last names.\n\nIf two people share the same last name, alphabetize on their first name.\n\nIf two people have the same full name, the younger one should come first. Do not worry about capitalization.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 12 - Stretch Goal\n\nWrite a function named sortMeetingsByDay that takes in an array of objects, each of which represents a meeting happening a particular day of the week, with a particular start time and end time.\n\nSort the meetings by the day on which they happen, Monday-Friday. It does not matter which order meetings come in on a particular day. For example, if there are two meetings on Monday, it does not matter which comes first.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nCHALLENGE 13 - Stretch Goal\n\nThis challenge should use the array of meetings from challenge 9, above.\n\nSort the meetings in the order that they start. If two meetings start at the same time on the same day, the shorter meeting should come first.\n\nYou DO NOT need to use your solution to Challenge 9 in completing Challenge 10.\n------------------------------------------------------------------------------------------------",
        "Solution code here...",
        "------------------------------------------------------------------------------------------------\nTESTS\n\nAll the code below will verify that your functions are working to solve the challenges.\n\nDO NOT CHANGE any of the below code.\n\nRun your tests from the console: jest challenges-03.test.js\n------------------------------------------------------------------------------------------------"
    ],
    "docstrings": [],
    "functions": [
        "upper",
        "lower",
        "Person",
        "Meeting"
    ],
    "classes": []
}