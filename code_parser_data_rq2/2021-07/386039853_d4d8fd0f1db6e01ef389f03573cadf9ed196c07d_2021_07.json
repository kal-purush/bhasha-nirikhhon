{
    "identifiers": [
        "bdd",
        "step_definitions",
        "io",
        "cucumber",
        "java",
        "Before",
        "io",
        "cucumber",
        "java",
        "en",
        "Given",
        "io",
        "cucumber",
        "java",
        "en",
        "Then",
        "io",
        "cucumber",
        "java",
        "en",
        "When",
        "io",
        "restassured",
        "response",
        "Response",
        "net",
        "thucydides",
        "core",
        "annotations",
        "Steps",
        "utils",
        "ConfigurationLoader",
        "utils",
        "Helper",
        "utils",
        "RequestMaker",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Collectors",
        "net",
        "serenitybdd",
        "rest",
        "SerenityRest",
        "then",
        "org",
        "hamcrest",
        "MatcherAssert",
        "assertThat",
        "org",
        "hamcrest",
        "Matchers",
        "everyItem",
        "org",
        "hamcrest",
        "Matchers",
        "userId",
        "postIDs",
        "userName",
        "emails",
        "url",
        "Steps",
        "requestMaker",
        "Steps",
        "configurationLoader",
        "Before",
        "configurationLoader",
        "readProperties",
        "url",
        "configurationLoader",
        "getPropertyValue",
        "Given",
        "userName",
        "userName",
        "userName",
        "requestMaker",
        "makeGetRequest",
        "url",
        "configurationLoader",
        "getPropertyValue",
        "response",
        "then",
        "extract",
        "response",
        "userId",
        "response",
        "jsonPath",
        "getInt",
        "userName",
        "When",
        "requestMaker",
        "makeGetRequest",
        "url",
        "configurationLoader",
        "getPropertyValue",
        "Arrays",
        "asList",
        "userId",
        "toString",
        "configurationLoader",
        "getPropertyValue",
        "response",
        "then",
        "extract",
        "response",
        "postIDs",
        "response",
        "jsonPath",
        "getList",
        "When",
        "postID",
        "postIDs",
        "requestMaker",
        "makeGetRequest",
        "url",
        "configurationLoader",
        "getPropertyValue",
        "Arrays",
        "asList",
        "postID",
        "toString",
        "configurationLoader",
        "getPropertyValue",
        "response",
        "then",
        "extract",
        "response",
        "emailByPost",
        "response",
        "jsonPath",
        "getList",
        "emailByPost",
        "stream",
        "forEach",
        "emails",
        "add",
        "Then",
        "userName",
        "response",
        "then",
        "extract",
        "response",
        "users",
        "response",
        "jsonPath",
        "getList",
        "assertThat",
        "users",
        "contains",
        "userName",
        "Then",
        "userName",
        "response",
        "then",
        "extract",
        "response",
        "users",
        "response",
        "jsonPath",
        "getList",
        "assertThat",
        "users",
        "contains",
        "userName",
        "Then",
        "assertThat",
        "emails",
        "stream",
        "Helper",
        "isValidEmail",
        "collect",
        "Collectors",
        "toList",
        "everyItem"
    ],
    "literals": [
        "\"baseURL\"",
        "\"a user with username {string}\"",
        "\"users\"",
        "\"find {user -> user.username==\\\"\"",
        "\"\\\"}.id\"",
        "\"posts are retrieved for the user\"",
        "\"users\"",
        "\"/\"",
        "\"posts\"",
        "\"id\"",
        "\"comments are retrieved for those posts\"",
        "\"posts\"",
        "\"/\"",
        "\"comments\"",
        "\"email\"",
        "\"a user with username {string} should be present\"",
        "\"username\"",
        "\"a user with username {string} should not be present\"",
        "\"username\"",
        "\"those comments must have emails in valid format\""
    ],
    "variables": [
        "userId",
        "postIDs",
        "userName",
        "url",
        "requestMaker",
        "configurationLoader"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "setup",
        "getUserId",
        "retrievePostsByUser",
        "retrieveCommentsForPostsByUser",
        "assertUserIsPresent",
        "assertUserIsNotPresent",
        "validateEmailFormatOnComments"
    ],
    "classes": [
        "UserSearchSteps"
    ]
}