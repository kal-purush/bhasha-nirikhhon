{
    "identifiers": [
        "org",
        "camunda",
        "bpm",
        "engine",
        "test",
        "bpmn",
        "start",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThatThrownBy",
        "org",
        "camunda",
        "bpm",
        "engine",
        "ParseException",
        "org",
        "camunda",
        "bpm",
        "engine",
        "RepositoryService",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "cfg",
        "ProcessEngineConfigurationImpl",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "form",
        "handler",
        "DefaultStartFormHandler",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "form",
        "handler",
        "DelegateFormHandler",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "persistence",
        "entity",
        "ProcessDefinitionEntity",
        "org",
        "camunda",
        "bpm",
        "engine",
        "impl",
        "test",
        "TestHelper",
        "org",
        "camunda",
        "bpm",
        "engine",
        "repository",
        "ProcessDefinition",
        "org",
        "camunda",
        "bpm",
        "engine",
        "test",
        "Deployment",
        "org",
        "camunda",
        "bpm",
        "engine",
        "test",
        "ProcessEngineRule",
        "org",
        "camunda",
        "bpm",
        "engine",
        "test",
        "util",
        "ProcessEngineTestRule",
        "org",
        "camunda",
        "bpm",
        "engine",
        "test",
        "util",
        "ProvidedProcessEngineRule",
        "org",
        "junit",
        "After",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Rule",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "rules",
        "RuleChain",
        "engineRule",
        "testRule",
        "engineRule",
        "Rule",
        "chain",
        "RuleChain",
        "outerRule",
        "engineRule",
        "around",
        "testRule",
        "repositoryService",
        "processEngineConfiguration",
        "Before",
        "repositoryService",
        "engineRule",
        "getRepositoryService",
        "processEngineConfiguration",
        "engineRule",
        "getProcessEngineConfiguration",
        "After",
        "deployment",
        "repositoryService",
        "createDeploymentQuery",
        "repositoryService",
        "deleteDeployment",
        "deployment",
        "getId",
        "getProcessDefinition",
        "getStartFormHandler",
        "getFormHandler",
        "processDefinition",
        "repositoryService",
        "createProcessDefinitionQuery",
        "singleResult",
        "cachedProcessDefinition",
        "processEngineConfiguration",
        "getDeploymentCache",
        "getProcessDefinitionCache",
        "get",
        "processDefinition",
        "getId",
        "cachedProcessDefinition",
        "Test",
        "Deployment",
        "startFormHandler",
        "getStartFormHandler",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionKey",
        "getExpressionText",
        "isEqualTo",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionBinding",
        "isEqualTo",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionVersion",
        "getExpressionText",
        "isEqualTo",
        "Test",
        "Deployment",
        "startFormHandler",
        "getStartFormHandler",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionKey",
        "getExpressionText",
        "isEqualTo",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionBinding",
        "isEqualTo",
        "Test",
        "Deployment",
        "startFormHandler",
        "getStartFormHandler",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionKey",
        "getExpressionText",
        "isEqualTo",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionBinding",
        "isEqualTo",
        "Test",
        "Deployment",
        "startFormHandler",
        "getStartFormHandler",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionKey",
        "getExpressionText",
        "isEqualTo",
        "assertThat",
        "startFormHandler",
        "getCamundaFormDefinitionBinding",
        "isEqualTo",
        "Test",
        "resource",
        "TestHelper",
        "getBpmnProcessDefinitionResource",
        "getClass",
        "assertThatThrownBy",
        "repositoryService",
        "createDeployment",
        "name",
        "resource",
        "addClasspathResource",
        "resource",
        "deploy",
        "isInstanceOf",
        "hasMessageContaining",
        "resource",
        "TestHelper",
        "getBpmnProcessDefinitionResource",
        "getClass",
        "assertThatThrownBy",
        "repositoryService",
        "createDeployment",
        "name",
        "resource",
        "addClasspathResource",
        "resource",
        "deploy",
        "isInstanceOf",
        "hasMessageContaining"
    ],
    "literals": [
        "\"formId\"",
        "\"version\"",
        "\"1\"",
        "\"formId\"",
        "\"latest\"",
        "\"formId\"",
        "\"latest\"",
        "\"formId\"",
        "\"deployment\"",
        "\"shouldNotParseCamundaFormDefinitionUnsupportedBinding\"",
        "\"Invalid element definition: value for formRefBinding attribute has to be one of [deployment, latest, version] but was unsupported\"",
        "\"shouldNotParseCamundaFormDefinitionAndFormKey\"",
        "\"Invalid element definition: only one of the attributes formKey and formRef is allowed.\""
    ],
    "variables": [
        "repositoryService",
        "processEngineConfiguration"
    ],
    "comments": [
        "given a deployed process with a StartEvent containing a Camunda Form definition with version binding",
        "then",
        "given a deployed process with a StartEvent containing a Camunda Form definition with latest binding",
        "then",
        "given a deployed process with a StartEvent containing a Camunda Form definition with latest binding and another StartEvent inside a subprocess",
        "then",
        "given a deployed process with a StartEvent containing a Camunda Form definition with deployment binding",
        "then",
        "given a deployed process with a UserTask containing a Camunda Form definition with unsupported binding",
        "when/then expect parse exception",
        "given a deployed process with a UserTask containing a Camunda Form definition and formKey",
        "when/then expect parse exception"
    ],
    "docstrings": [
        "* Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership. Camunda licenses this file to you under the Apache License,\n * Version 2.0; you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "setup",
        "tearDown",
        "DefaultStartFormHandler",
        "getStartFormHandler",
        "ProcessDefinitionEntity",
        "getProcessDefinition",
        "shouldParseCamundaFormDefinitionVersionBinding",
        "shouldParseCamundaFormDefinitionLatestBinding",
        "shouldParseCamundaFormDefinitionMultipleStartEvents",
        "shouldParseCamundaFormDefinitionDeploymentBinding",
        "shouldNotParseCamundaFormDefinitionUnsupportedBinding",
        "shouldNotParseCamundaFormDefinitionAndFormKey"
    ],
    "classes": [
        "StartEventCamundaFormDefinitionParseTest"
    ]
}