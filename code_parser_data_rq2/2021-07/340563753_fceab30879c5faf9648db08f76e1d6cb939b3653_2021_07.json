{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "numpy",
        "np",
        "ppdet",
        "utils",
        "logger",
        "setup_logger",
        "setup_logger",
        "bboxes1",
        "bboxes2",
        "mode",
        "is_aligned",
        "eps",
        "mode",
        "format",
        "mode",
        "bboxes1",
        "shape",
        "bboxes1",
        "shape",
        "bboxes2",
        "shape",
        "bboxes2",
        "shape",
        "bboxes1",
        "shape",
        "bboxes2",
        "shape",
        "bboxes1",
        "shape",
        "bboxes1",
        "shape",
        "bboxes1",
        "shape",
        "bboxes2",
        "shape",
        "bboxes2",
        "shape",
        "is_aligned",
        "rows",
        "cols",
        "rows",
        "cols",
        "is_aligned",
        "np",
        "random",
        "random",
        "batch_shape",
        "rows",
        "np",
        "random",
        "random",
        "batch_shape",
        "rows",
        "cols",
        "bboxes1",
        "bboxes1",
        "bboxes1",
        "bboxes1",
        "bboxes2",
        "bboxes2",
        "bboxes2",
        "bboxes2",
        "is_aligned",
        "np",
        "maximum",
        "bboxes1",
        "bboxes2",
        "np",
        "minimum",
        "bboxes1",
        "bboxes2",
        "rb",
        "lt",
        "clip",
        "min",
        "wh",
        "wh",
        "mode",
        "area1",
        "area2",
        "overlap",
        "area1",
        "mode",
        "np",
        "minimum",
        "bboxes1",
        "bboxes2",
        "np",
        "maximum",
        "bboxes1",
        "bboxes2",
        "np",
        "maximum",
        "bboxes1",
        "bboxes2",
        "np",
        "minimum",
        "bboxes1",
        "bboxes2",
        "rb",
        "lt",
        "clip",
        "min",
        "wh",
        "wh",
        "mode",
        "area1",
        "area2",
        "overlap",
        "area1",
        "mode",
        "np",
        "minimum",
        "bboxes1",
        "bboxes2",
        "np",
        "maximum",
        "bboxes1",
        "bboxes2",
        "np",
        "array",
        "eps",
        "np",
        "maximum",
        "union",
        "eps",
        "overlap",
        "union",
        "mode",
        "ious",
        "enclosed_rb",
        "enclosed_lt",
        "clip",
        "min",
        "enclose_wh",
        "enclose_wh",
        "np",
        "maximum",
        "enclose_area",
        "eps",
        "ious",
        "enclose_area",
        "union",
        "enclose_area",
        "gious",
        "input",
        "k",
        "axis",
        "largest",
        "input",
        "largest",
        "input",
        "axis",
        "np",
        "arange",
        "input",
        "shape",
        "axis",
        "np",
        "argpartition",
        "x",
        "k",
        "axis",
        "axis",
        "k",
        "x",
        "topk_index",
        "row_index",
        "np",
        "argsort",
        "topk_data",
        "axis",
        "axis",
        "topk_data",
        "topk_index_sort",
        "row_index",
        "topk_index",
        "k",
        "topk_index_sort",
        "row_index",
        "np",
        "arange",
        "x",
        "shape",
        "axis",
        "np",
        "argpartition",
        "x",
        "k",
        "axis",
        "axis",
        "k",
        "x",
        "column_index",
        "topk_index",
        "topk_data",
        "largest",
        "topk_data",
        "np",
        "argsort",
        "topk_data",
        "axis",
        "axis",
        "topk_data",
        "column_index",
        "topk_index_sort",
        "topk_index",
        "k",
        "column_index",
        "topk_index_sort",
        "topk_data_sort",
        "topk_index_sort",
        "topk",
        "topk",
        "bboxes",
        "num_level_bboxes",
        "gt_bboxes",
        "gt_bboxes_ignore",
        "gt_labels",
        "bboxes",
        "gt_bboxes",
        "shape",
        "bboxes",
        "shape",
        "bbox_overlaps",
        "bboxes",
        "gt_bboxes",
        "np",
        "zeros",
        "num_bboxes",
        "dtype",
        "np",
        "int64",
        "num_gt",
        "num_bboxes",
        "np",
        "zeros",
        "num_bboxes",
        "num_gt",
        "np",
        "gt_labels",
        "np",
        "ones",
        "num_bboxes",
        "dtype",
        "np",
        "int64",
        "assigned_gt_inds",
        "max_overlaps",
        "assigned_labels",
        "gt_bboxes",
        "gt_bboxes",
        "gt_bboxes",
        "gt_bboxes",
        "np",
        "stack",
        "gt_cx",
        "gt_cy",
        "axis",
        "bboxes",
        "bboxes",
        "bboxes",
        "bboxes",
        "np",
        "stack",
        "bboxes_cx",
        "bboxes_cy",
        "axis",
        "np",
        "sqrt",
        "np",
        "power",
        "bboxes_points",
        "gt_points",
        "sum",
        "bboxes_per_level",
        "num_level_bboxes",
        "start_idx",
        "bboxes_per_level",
        "distances",
        "start_idx",
        "end_idx",
        "min",
        "topk",
        "bboxes_per_level",
        "topk_",
        "distances_per_level",
        "selectable_k",
        "axis",
        "largest",
        "candidate_idxs",
        "append",
        "topk_idxs_per_level",
        "start_idx",
        "end_idx",
        "np",
        "concatenate",
        "candidate_idxs",
        "axis",
        "overlaps",
        "candidate_idxs",
        "np",
        "arange",
        "num_gt",
        "candidate_overlaps",
        "mean",
        "candidate_overlaps",
        "std",
        "overlaps_mean_per_gt",
        "overlaps_std_per_gt",
        "candidate_overlaps",
        "overlaps_thr_per_gt",
        "gt_idx",
        "num_gt",
        "candidate_idxs",
        "gt_idx",
        "gt_idx",
        "num_bboxes",
        "np",
        "broadcast_to",
        "bboxes_cx",
        "reshape",
        "num_gt",
        "num_bboxes",
        "reshape",
        "np",
        "broadcast_to",
        "bboxes_cy",
        "reshape",
        "num_gt",
        "num_bboxes",
        "reshape",
        "candidate_idxs",
        "reshape",
        "ep_bboxes_cx",
        "candidate_idxs",
        "reshape",
        "num_gt",
        "gt_bboxes",
        "ep_bboxes_cy",
        "candidate_idxs",
        "reshape",
        "num_gt",
        "gt_bboxes",
        "gt_bboxes",
        "ep_bboxes_cx",
        "candidate_idxs",
        "reshape",
        "num_gt",
        "gt_bboxes",
        "ep_bboxes_cy",
        "candidate_idxs",
        "reshape",
        "num_gt",
        "np",
        "stack",
        "l_",
        "t_",
        "r_",
        "b_",
        "axis",
        "min",
        "axis",
        "is_pos",
        "is_in_gts",
        "np",
        "inf",
        "np",
        "ones_like",
        "overlaps",
        "T",
        "reshape",
        "candidate_idxs",
        "reshape",
        "is_pos",
        "reshape",
        "overlaps",
        "T",
        "reshape",
        "index",
        "overlaps_inf",
        "reshape",
        "num_gt",
        "T",
        "overlaps_inf",
        "max",
        "axis",
        "overlaps_inf",
        "argmax",
        "axis",
        "max_overlaps",
        "np",
        "inf",
        "argmax_overlaps",
        "max_overlaps",
        "np",
        "inf",
        "assigned_gt_inds",
        "max_overlaps"
    ],
    "literals": [
        "'iou'",
        "'iou'",
        "'iof'",
        "'giou'",
        "'Unsupported mode {}'",
        "'iou'",
        "'giou'",
        "'giou'",
        "'iou'",
        "'giou'",
        "'giou'",
        "'iou'",
        "'iof'"
    ],
    "variables": [
        "logger",
        "batch_shape",
        "rows",
        "cols",
        "area1",
        "area2",
        "lt",
        "rb",
        "wh",
        "overlap",
        "union",
        "union",
        "enclosed_lt",
        "enclosed_rb",
        "lt",
        "rb",
        "wh",
        "overlap",
        "union",
        "union",
        "enclosed_lt",
        "enclosed_rb",
        "eps",
        "union",
        "ious",
        "enclose_wh",
        "enclose_area",
        "enclose_area",
        "gious",
        "x",
        "row_index",
        "topk_index",
        "topk_data",
        "topk_index_sort",
        "topk_data_sort",
        "topk_index_sort",
        "column_index",
        "topk_index",
        "topk_data",
        "topk_data",
        "topk_index_sort",
        "topk_data_sort",
        "topk_index_sort",
        "topk",
        "bboxes",
        "num_gt",
        "num_bboxes",
        "overlaps",
        "assigned_gt_inds",
        "max_overlaps",
        "assigned_gt_inds",
        "assigned_labels",
        "assigned_labels",
        "gt_cx",
        "gt_cy",
        "gt_points",
        "bboxes_cx",
        "bboxes_cy",
        "bboxes_points",
        "distances",
        "candidate_idxs",
        "start_idx",
        "end_idx",
        "distances_per_level",
        "selectable_k",
        "_",
        "topk_idxs_per_level",
        "start_idx",
        "candidate_idxs",
        "candidate_overlaps",
        "overlaps_mean_per_gt",
        "overlaps_std_per_gt",
        "overlaps_thr_per_gt",
        "is_pos",
        "ep_bboxes_cx",
        "ep_bboxes_cy",
        "candidate_idxs",
        "l_",
        "t_",
        "r_",
        "b_",
        "is_in_gts",
        "is_pos",
        "overlaps_inf",
        "index",
        "overlaps_inf",
        "index",
        "overlaps_inf",
        "max_overlaps",
        "argmax_overlaps",
        "assigned_gt_inds"
    ],
    "comments": [
        "Copyright (c) 2021 PaddlePaddle Authors. All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Either the boxes are empty or the length of boxes's last dimenstion is 4",
        "Batch dim must be the same",
        "Batch dim: (B1, B2, ... Bn)",
        "[B, rows, 2]",
        "[B, rows, 2]",
        "[B, rows, 2]",
        "[B, rows, cols, 2]",
        "[B, rows, cols, 2]",
        "[B, rows, cols, 2]",
        "calculate gious",
        "compute iou between all bbox and gt",
        "assign 0 by default",
        "No ground truth or boxes, return empty assignment",
        "No truth, assign everything to background",
        "compute center distance between all bbox and gt",
        "Selecting candidates based on the center distance",
        "on each pyramid level, for each gt,",
        "select k bbox whose center are closest to the gt center",
        "get corresponding iou for the these candidates, and compute the",
        "mean and std, set mean + std as the iou threshold",
        "limit the positive sample's center in gt",
        "calculate the left, top, right, bottom distance between positive",
        "bbox center and gt side",
        "if an anchor box is assigned to multiple gts,",
        "the one with the highest IoU will be selected."
    ],
    "docstrings": [
        "\"\"\"Calculate overlap between two set of bboxes.\n    If ``is_aligned `` is ``False``, then calculate the overlaps between each\n    bbox of bboxes1 and bboxes2, otherwise the overlaps between each aligned\n    pair of bboxes1 and bboxes2.\n    Args:\n        bboxes1 (Tensor): shape (B, m, 4) in <x1, y1, x2, y2> format or empty.\n        bboxes2 (Tensor): shape (B, n, 4) in <x1, y1, x2, y2> format or empty.\n            B indicates the batch dim, in shape (B1, B2, ..., Bn).\n            If ``is_aligned `` is ``True``, then m and n must be equal.\n        mode (str): \"iou\" (intersection over union) or \"iof\" (intersection over\n            foreground).\n        is_aligned (bool, optional): If True, then m and n must be equal.\n            Default False.\n        eps (float, optional): A value added to the denominator for numerical\n            stability. Default 1e-6.\n    Returns:\n        Tensor: shape (m, n) if ``is_aligned `` is False else shape (m,)\n    \"\"\"",
        "\"\"\"Assign a corresponding gt bbox or background to each bbox.\n\n    Each proposals will be assigned with `0` or a positive integer\n    indicating the ground truth index.\n\n    - 0: negative sample, no assigned gt\n    - positive integer: positive sample, index (1-based) of assigned gt\n\n    Args:\n        topk (float): number of bbox selected in each level\n    \"\"\"",
        "\"\"\"Assign gt to bboxes.\n        The assignment is done in following steps\n        1. compute iou between all bbox (bbox of all pyramid levels) and gt\n        2. compute center distance between all bbox and gt\n        3. on each pyramid level, for each gt, select k bbox whose center\n           are closest to the gt center, so we total select k*l bbox as\n           candidates for each gt\n        4. get corresponding iou for the these candidates, and compute the\n           mean and std, set mean + std as the iou threshold\n        5. select these candidates whose iou are greater than or equal to\n           the threshold as postive\n        6. limit the positive sample's center in gt\n        Args:\n            bboxes (np.array): Bounding boxes to be assigned, shape(n, 4).\n            num_level_bboxes (List): num of bboxes in each level\n            gt_bboxes (np.array): Groundtruth boxes, shape (k, 4).\n            gt_bboxes_ignore (np.array, optional): Ground truth bboxes that are\n                labelled as `ignored`, e.g., crowd boxes in COCO.\n            gt_labels (np.array, optional): Label of gt_bboxes, shape (k, ).\n        \"\"\""
    ],
    "functions": [
        "bbox_overlaps",
        "topk_",
        "__call__"
    ],
    "classes": [
        "ATSSAssigner"
    ]
}