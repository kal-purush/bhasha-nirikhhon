{
    "identifiers": [
        "LogikSim",
        "LogikSim",
        "LogikSim",
        "LogikSim",
        "parent",
        "properties",
        "properties",
        "parent",
        "parent",
        "parent",
        "LogikSim",
        "input_port",
        "state",
        "input_port",
        "state",
        "when",
        "output_port",
        "output_port",
        "future_outputs",
        "output_port",
        "output_port",
        "events",
        "LogikSim",
        "when",
        "output_port",
        "future_outputs",
        "output_port",
        "output_port",
        "future_outputs",
        "output_port",
        "events",
        "output_port",
        "state",
        "output_port",
        "state",
        "output_port",
        "output_port",
        "component",
        "input_port",
        "delay",
        "output_port",
        "component",
        "output_port",
        "input_port",
        "output_port",
        "output_port",
        "component",
        "input_port",
        "delay",
        "component",
        "output_port",
        "input_port",
        "state",
        "input_port",
        "input_port",
        "component",
        "output_port",
        "input_port",
        "state",
        "output_port",
        "output_port",
        "connection",
        "connection",
        "connection",
        "output_port",
        "input_port",
        "input_port",
        "input_port",
        "input_port",
        "input_port",
        "input_port",
        "input",
        "input",
        "input",
        "output_port",
        "output_port",
        "output_port",
        "output",
        "output_port",
        "key",
        "value",
        "value",
        "LogikSim",
        "value",
        "value"
    ],
    "literals": [
        "\"use strict\"",
        "\"id\"",
        "\"undefined\"",
        "\"undefined\""
    ],
    "variables": [
        "LogikSim",
        "events",
        "future_outputs",
        "output_port",
        "connection",
        "input_port",
        "input",
        "output_port",
        "output"
    ],
    "comments": [
        "Add our own state",
        "must be >0, see OutEdge",
        "TODO: Propagate state change",
        "Can't connect twice",
        "Other element rejected connection",
        "Already have something connected on that port",
        "FIXME: Instead of this hack the connect on 'component' should schedule an edge with proper delay on us.",
        "Nothing to do",
        "Drop inbound connections",
        "Drop outbound connections",
        "FIXME: Propagate our destruction?"
    ],
    "docstrings": [
        "* Returns the type of the component template.\n     * @return {String} Template type",
        "* Returns this components id\n     * @return {number} Component id",
        "* Processes an incoming edge on one of the input ports.\n     *\n     * @param input_port Number of port edge is coming in on\n     * @param state New state for port.",
        "* Converts this objects properties into a JSON string.\n     *\n     * This does not include template properties that weren't\n     * overridden for this instance. Together with the template\n     * this should be sufficient to re-create the component\n     * with identical state. Note that the id and connections\n     * will be lost though.\n     *\n     * @return JSON string describing this instance."
    ],
    "functions": [],
    "classes": []
}