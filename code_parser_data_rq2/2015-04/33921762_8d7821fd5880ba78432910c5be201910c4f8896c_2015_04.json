{
    "identifiers": [
        "OAuth",
        "key",
        "percentEncode",
        "s",
        "percentEncode",
        "s",
        "s",
        "s",
        "s",
        "i",
        "s",
        "s",
        "e",
        "e",
        "e",
        "OAuth",
        "s",
        "i",
        "e",
        "s",
        "encodeURIComponent",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "decodeURIComponent",
        "s",
        "getParameterList",
        "parameters",
        "getParameterList",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "OAuth",
        "parameters",
        "parameters",
        "parameters",
        "p",
        "parameters",
        "p",
        "parameters",
        "p",
        "getParameterMap",
        "parameters",
        "getParameterMap",
        "parameters",
        "parameters",
        "parameters",
        "parameters",
        "OAuth",
        "OAuth",
        "parameters",
        "parameters",
        "key",
        "p",
        "parameters",
        "p",
        "parameters",
        "p",
        "key",
        "key",
        "parameters",
        "p",
        "parameters",
        "getParameter",
        "parameters",
        "name",
        "getParameter",
        "parameters",
        "name",
        "parameters",
        "name",
        "parameters",
        "p",
        "parameters",
        "p",
        "parameters",
        "p",
        "name",
        "parameters",
        "p",
        "OAuth",
        "parameters",
        "name",
        "parameters",
        "OAuth",
        "parameters",
        "p",
        "p",
        "p",
        "value",
        "value",
        "form",
        "form",
        "form",
        "OAuth",
        "p",
        "OAuth",
        "value",
        "form",
        "form",
        "form",
        "n",
        "nvps",
        "n",
        "nvps",
        "n",
        "nvp",
        "nvp",
        "equals",
        "name",
        "OAuth",
        "nvp",
        "value",
        "name",
        "OAuth",
        "nvp",
        "equals",
        "value",
        "OAuth",
        "nvp",
        "equals",
        "name",
        "value",
        "message",
        "name",
        "value",
        "message",
        "pp",
        "pp",
        "p",
        "parameters",
        "p",
        "parameters",
        "p",
        "name",
        "value",
        "parameters",
        "p",
        "parameters",
        "p",
        "value",
        "value",
        "value",
        "parameters",
        "name",
        "value",
        "key",
        "pp",
        "parameters2",
        "OAuth",
        "parameters2",
        "parameters2",
        "name",
        "value",
        "message",
        "parameters2",
        "setParameters",
        "message",
        "parameters",
        "setParameters",
        "message",
        "parameters",
        "message",
        "parameters",
        "OAuth",
        "parameters",
        "i",
        "i",
        "OAuth",
        "message",
        "i",
        "i",
        "message",
        "accessor",
        "message",
        "message",
        "OAuth",
        "message",
        "OAuth",
        "message",
        "accessor",
        "accessor",
        "OAuth",
        "message",
        "accessor",
        "OAuth",
        "message",
        "OAuth",
        "message",
        "OAuth",
        "OAuth",
        "message",
        "OAuth",
        "OAuth",
        "message",
        "accessor",
        "message",
        "OAuth",
        "message",
        "OAuth",
        "OAuth",
        "message",
        "OAuth",
        "url",
        "parameters",
        "parameters",
        "OAuth",
        "parameters",
        "toAdd",
        "url",
        "q",
        "newURL",
        "newURL",
        "newURL",
        "toAdd",
        "newURL",
        "getAuthorizationHeader",
        "realm",
        "parameters",
        "getAuthorizationHeader",
        "realm",
        "parameters",
        "realm",
        "parameters",
        "OAuth",
        "realm",
        "OAuth",
        "parameters",
        "p",
        "p",
        "p",
        "parameter",
        "name",
        "header",
        "OAuth",
        "name",
        "OAuth",
        "parameter",
        "header",
        "parameterName",
        "parameterName",
        "parameterName",
        "scripts",
        "scripts",
        "scripts",
        "scripts",
        "src",
        "src",
        "q",
        "OAuth",
        "OAuth",
        "src",
        "q",
        "parameters",
        "parameterName",
        "t",
        "OAuth",
        "t",
        "timestamp",
        "OAuth",
        "timestamp",
        "OAuth",
        "t",
        "length",
        "i",
        "length",
        "i",
        "chars",
        "result",
        "chars",
        "rnum",
        "rnum",
        "result",
        "baseString",
        "message",
        "OAuth",
        "message",
        "baseString",
        "OAuth",
        "message",
        "signature",
        "signature",
        "name",
        "accessor",
        "accessor",
        "name",
        "name",
        "name",
        "consumerSecret",
        "accessor",
        "consumerSecret",
        "accessor",
        "OAuth",
        "consumerSecret",
        "OAuth",
        "accessor",
        "message",
        "accessor",
        "OAuth",
        "message",
        "name",
        "name",
        "name",
        "OAuth",
        "message",
        "name",
        "OAuth",
        "name",
        "accessor",
        "message",
        "name",
        "accessor",
        "OAuth",
        "name",
        "impl",
        "impl",
        "method",
        "name",
        "accessor",
        "method",
        "r",
        "OAuth",
        "acceptable",
        "acceptable",
        "acceptable",
        "OAuth",
        "r",
        "err",
        "acceptable",
        "err",
        "name",
        "names",
        "classConstructor",
        "n",
        "names",
        "n",
        "OAuth",
        "names",
        "n",
        "classConstructor",
        "getSignatureFunction",
        "baseString",
        "OAuth",
        "superClass",
        "subClass",
        "superClass",
        "subClass",
        "getSignatureFunction",
        "subClass",
        "subClass",
        "subClass",
        "message",
        "message",
        "URL",
        "key",
        "q",
        "parameters",
        "message",
        "OAuth",
        "URL",
        "q",
        "OAuth",
        "message",
        "a",
        "toAdd",
        "a",
        "pp",
        "toAdd",
        "a",
        "parameters",
        "pp",
        "OAuth",
        "message",
        "OAuth",
        "OAuth",
        "URL",
        "OAuth",
        "OAuth",
        "parameters",
        "url",
        "OAuth",
        "url",
        "uri",
        "uri",
        "scheme",
        "uri",
        "scheme",
        "uri",
        "dropPort",
        "authority",
        "index",
        "authority",
        "authority",
        "index",
        "uri",
        "path",
        "path",
        "scheme",
        "authority",
        "path",
        "o",
        "key",
        "i",
        "uri",
        "o",
        "i",
        "m",
        "i",
        "uri",
        "parameters",
        "key",
        "parameters",
        "OAuth",
        "parameters",
        "p",
        "p",
        "p",
        "nvp",
        "sortable",
        "OAuth",
        "nvp",
        "OAuth",
        "nvp",
        "nvp",
        "sortable",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "s",
        "sortable",
        "s",
        "sorted",
        "sortable",
        "s",
        "OAuth",
        "sorted",
        "OAuth",
        "OAuth",
        "getSignature",
        "baseString",
        "OAuth",
        "OAuth",
        "getSignature",
        "baseString",
        "b64pad",
        "b64_hmac_sha1",
        "baseString",
        "signature",
        "OAuth",
        "e"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"\"",
        "\"\"",
        "\"\"",
        "'&'",
        "\"%21\"",
        "\"%2A\"",
        "\"%27\"",
        "\"%28\"",
        "\"%29\"",
        "string",
        "string",
        "\" \"",
        "string",
        "\"object\"",
        "\"\"",
        "string",
        "string",
        "string",
        "\"object\"",
        "\"\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"\"",
        "\"\"",
        "\"\"",
        "'&'",
        "'='",
        "string",
        "string",
        "string",
        "'&'",
        "\"\"",
        "'='",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"GET\"",
        "\"oauth_consumer_key\"",
        "\"oauth_consumer_key\"",
        "\"\"",
        "\"oauth_token\"",
        "\"oauth_token\"",
        "\"oauth_version\"",
        "\"oauth_version\"",
        "\"1.0\"",
        "\"oauth_timestamp\"",
        "\"oauth_timestamp\"",
        "\"\"",
        "\"oauth_nonce\"",
        "\"oauth_nonce\"",
        "\"oauth_timestamp\"",
        "\"\"",
        "\"oauth_nonce\"",
        "string",
        "string",
        "'?'",
        "'?'",
        "'&'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'OAuth realm=\"'",
        "'\"'",
        "\"oauth_\"",
        "','",
        "'=\"'",
        "'\"'",
        "string",
        "\"oauth_timestamp\"",
        "'script'",
        "\"?\"",
        "\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz\"",
        "\"\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"Abstract method\"",
        "string",
        "\"oauth_signature\"",
        "string",
        "string",
        "\"-Accessor\"",
        "\"&\"",
        "\"oauth_signature_method\"",
        "\"\"",
        "\"HMAC-SHA1\"",
        "\"oauth_signature_method\"",
        "string",
        "\"signature_method_rejected\"",
        "\"\"",
        "\"\"",
        "'&'",
        "string",
        "string",
        "string",
        "string",
        "'?'",
        "string",
        "string",
        "string",
        "string",
        "'&'",
        "'&'",
        "string",
        "\"http\"",
        "\"https\"",
        "\":\"",
        "\"/\"",
        "\"://\"",
        "string",
        "\"source\"",
        "\"protocol\"",
        "\"authority\"",
        "\"userInfo\"",
        "\"user\"",
        "\"password\"",
        "\"host\"",
        "\"port\"",
        "\"relative\"",
        "\"path\"",
        "\"directory\"",
        "\"file\"",
        "\"query\"",
        "\"anchor\"",
        "string",
        "string",
        "\"\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"\"",
        "string",
        "string",
        "string",
        "\"oauth_signature\"",
        "\" \"",
        "string",
        "string",
        "\"PLAINTEXT\"",
        "\"PLAINTEXT-Accessor\"",
        "\"HMAC-SHA1\"",
        "\"HMAC-SHA1-Accessor\"",
        "'='"
    ],
    "variables": [
        "e",
        "i",
        "p",
        "key",
        "p",
        "form",
        "p",
        "value",
        "nvps",
        "n",
        "nvp",
        "equals",
        "name",
        "value",
        "pp",
        "parameters",
        "p",
        "parameters2",
        "i",
        "newURL",
        "url",
        "toAdd",
        "q",
        "header",
        "p",
        "parameter",
        "name",
        "scripts",
        "src",
        "q",
        "parameters",
        "t",
        "timeCorrectionMsec",
        "t",
        "NONCE_CHARS",
        "chars",
        "NONCE_CHARS",
        "result",
        "i",
        "rnum",
        "baseString",
        "signature",
        "consumerSecret",
        "name",
        "impl",
        "method",
        "err",
        "acceptable",
        "n",
        "superClass",
        "subClass",
        "URL",
        "q",
        "parameters",
        "pp",
        "toAdd",
        "a",
        "uri",
        "scheme",
        "authority",
        "dropPort",
        "index",
        "path",
        "o",
        "m",
        "uri",
        "i",
        "sortable",
        "p",
        "nvp",
        "sorted",
        "s",
        "signature"
    ],
    "comments": [
        "<reference path=\".\\sha1.ts\" />",
        "Here's some JavaScript software for implementing OAuth.\n\n   This isn't as useful as you might hope.  OAuth is based around\n   allowing tools and websites to talk to each other.  However,\n   JavaScript running in web browsers is hampered by security\n   restrictions that prevent code running on one website from\n   accessing data stored or served on another.\n\n   Before you start hacking, make sure you understand the limitations\n   posed by cross-domain XMLHttpRequest.\n\n   On the bright side, some platforms use JavaScript as their\n   language, but enable the programmer to access other web sites.\n   Examples include Google Gadgets, and Microsoft Vista Sidebar.\n   For those platforms, this library should come in handy.",
        "The HMAC-SHA1 signature method calls b64_hmac_sha1, defined by",
        "http://pajhome.org.uk/crypt/md5/sha1.js",
        "An OAuth message is represented as an object like this:\n   {method: \"GET\", action: \"http://server.com/path\", parameters: ...}\n\n   The parameters may be either a map {name: value, name2: value2}\n   or an Array of name-value pairs [[name, value], [name2, value2]].\n   The latter representation is more powerful: it supports parameters\n   in a specific sequence, or several parameters with the same name;\n   for example [[\"a\", 1], [\"b\", 2], [\"a\", 3]].\n\n   Parameter names and values are NOT percent-encoded in an object.\n   They must be encoded before transmission and decoded after reception.\n   For example, this message object:\n   {method: \"GET\", action: \"http://server/path\", parameters: {p: \"x y\"}}\n   ... can be transmitted as an HTTP request that begins:\n   GET /path?p=x%20y HTTP/1.0\n   (This isn't a valid OAuth request, since it lacks a signature etc.)\n   Note that the object \"x y\" is transmitted as x%20y.  To encode\n   parameters, you can call OAuth.addToURL, OAuth.formEncode or\n   OAuth.getAuthorization.\n\n   This message object model harmonizes with the browser object model for\n   input elements of an form, whose value property isn't percent encoded.\n   The browser encodes each value before transmitting it. For example,\n   see consumer.setInputs in example/consumer.js.",
        "This script needs to know what time it is. By default, it uses the local\n   clock (new Date), which is apt to be inaccurate in browsers. To do\n   better, you can load this script from a URL whose query string contains\n   an oauth_timestamp parameter, whose value is a current Unix timestamp.\n   For example, when generating the enclosing document using PHP:\n\n   <script src=\"oauth.js?oauth_timestamp=<?=time()?>\" ...\n\n   Another option is to call OAuth.correctTimestamp with a Unix timestamp.",
        "SignatureMethod expects an accessor object to be like this:\n       {tokenSecret: \"lakjsdflkj...\", consumerSecret: \"QOUEWRI..\", accessorSecret: \"xcmvzc...\"}\n       The accessorSecret property is optional.",
        "Now replace the values which encodeURIComponent doesn't do",
        "encodeURIComponent ignores: - _ . ! ~ * ' ( )",
        "OAuth dictates the only ones you can ignore are: - _ . ~",
        "Source: http://developer.mozilla.org/en/docs/Core_JavaScript_1.5_Reference:Global_Functions:encodeURIComponent",
        "Handle application/x-www-form-urlencoded, which is defined by",
        "http://www.w3.org/TR/html4/interact/forms.html#h-17.13.4.1",
        "Convert the given parameters to an Array of name-value pairs.",
        "Convert the given parameters to a map from name to value.",
        "first value wins",
        "first value wins",
        "Fill in parameters to help construct a request message.\n        This function doesn't fill in every parameter.\n        The accessor object should be like:\n        {consumerKey:'foo', consumerSecret:'bar', accessorSecret:'nurn', token:'krelm', tokenSecret:'blah'}\n        The accessorSecret property is optional.",
        "Construct the value of the Authorization header for an HTTP request.",
        "Correct the time using a parameter from the URL from which the last script was loaded.",
        "Generate timestamps starting with the given value.",
        "The difference between the correct time and my clock.",
        "Add a signature to the message.",
        "just in case someone's interested",
        "Set the key string for signing.",
        "Instantiate a SignatureMethod for the given method name.",
        "TODO: プロパティの宣言",
        "A map from signature method name to constructor.",
        "Subsequently, the given constructor will be used for the named methods.\n            The constructor will be called with no parameters.\n            The resulting object should usually implement getSignature(baseString).\n            You can easily define such a constructor by calling makeSubclass, below.",
        "Create a subclass of OAuth.SignatureMethod, with the given getSignature function.",
        "Delete instance variables from prototype:",
        "delete subclass.prototype... There aren't any.",
        "Combine the URL query string with the other parameters:",
        "find the last : in the authority",
        "conforms to RFC 2616 section 3.2.2",
        "we know that there is no query and no fragment here.",
        "This function was adapted from parseUri 1.2.1\n               http://stevenlevithan.com/demo/parseuri/js/assets/parseuri.js",
        "because it comes before any character that can appear in a percentEncoded string."
    ],
    "docstrings": [
        "* This file is derived from oauth project ( https://code.google.com/p/oauth/ )\n * and is modified for oauth-typescript project.\n *\n * Copyright 2008 Netflix, Inc.\n * Copyright 2015 NOBUOKA Yu.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "percentEncode",
        "decodePercent",
        "getParameterList",
        "getParameterMap",
        "getParameter",
        "formEncode",
        "decodeForm",
        "setParameter",
        "setParameters",
        "completeRequest",
        "setTimestampAndNonce",
        "addToURL",
        "getAuthorizationHeader",
        "correctTimestampFromSrc",
        "correctTimestamp",
        "timestamp",
        "nonce",
        "getSignature",
        "sign",
        "initialize",
        "sign",
        "newMethod",
        "registerMethodClass",
        "makeSubclass",
        "getBaseString",
        "normalizeUrl",
        "parseUri",
        "normalizeParameters"
    ],
    "classes": [
        "SignatureMethod"
    ]
}