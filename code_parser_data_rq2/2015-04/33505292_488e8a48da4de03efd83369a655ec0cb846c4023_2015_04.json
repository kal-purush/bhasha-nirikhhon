{
    "identifiers": [
        "JITCoach",
        "Alignment",
        "s",
        "length",
        "c",
        "alignment",
        "alignment",
        "Alignment",
        "padLeft",
        "s",
        "length",
        "c",
        "padRight",
        "s",
        "length",
        "c",
        "value",
        "alignment",
        "alignment",
        "alignment",
        "Alignment",
        "isNaN",
        "value",
        "alignment",
        "Alignment",
        "width",
        "cells",
        "cells",
        "columns",
        "cell",
        "i",
        "columns",
        "i",
        "columns",
        "i",
        "Column",
        "column",
        "column",
        "cell",
        "columns",
        "cell",
        "i",
        "s",
        "padAlignment",
        "cell",
        "columns",
        "i",
        "cell",
        "s",
        "values",
        "Row",
        "values",
        "x",
        "x",
        "Cell",
        "x",
        "Cell",
        "x",
        "row",
        "row",
        "columns",
        "x",
        "x",
        "columns",
        "require",
        "require",
        "ansi",
        "process",
        "require",
        "process",
        "argv",
        "argv",
        "argv",
        "require",
        "outcome",
        "SUCCESSFUL_OUTCOMES",
        "outcome",
        "fileName",
        "fs",
        "fileName",
        "profile",
        "profile",
        "profile",
        "i",
        "threads",
        "i",
        "threads",
        "i",
        "thread",
        "i",
        "samples",
        "j",
        "samples",
        "j",
        "samples",
        "j",
        "sample",
        "k",
        "frames",
        "k",
        "frames",
        "k",
        "frame",
        "thread",
        "frame",
        "optimization",
        "frame",
        "optimization",
        "optimization",
        "optimization",
        "profile",
        "dumpFunctions",
        "profile",
        "dumpOptimizationSites",
        "profile",
        "counter",
        "padLeft",
        "counter",
        "padLeft",
        "counter",
        "padLeft",
        "counter",
        "frame",
        "frame",
        "i",
        "CONTENT_SCHEMES",
        "i",
        "CONTENT_SCHEMES",
        "i",
        "frame",
        "scheme",
        "thread",
        "thread",
        "j",
        "samples",
        "j",
        "samples",
        "j",
        "sample",
        "k",
        "frames",
        "k",
        "frames",
        "k",
        "isContent",
        "frame",
        "showGeckoPlatformData",
        "sampleCount",
        "functionCounters",
        "frame",
        "functionCounters",
        "frame",
        "frame",
        "counter",
        "frame",
        "frame",
        "k",
        "frames",
        "counter",
        "frame",
        "frame",
        "k",
        "functionCounters",
        "functionCounterList",
        "functionCounters",
        "k",
        "functionCounterList",
        "a",
        "b",
        "b",
        "b",
        "b",
        "a",
        "a",
        "a",
        "Table",
        "table",
        "table",
        "table",
        "i",
        "functionCounterList",
        "i",
        "functionCounterList",
        "i",
        "counter",
        "counter",
        "counter",
        "counter",
        "counter",
        "counter",
        "table",
        "counter",
        "counter",
        "counter",
        "counter",
        "counter",
        "counter",
        "callSamples",
        "callSamples",
        "sampleCount",
        "selfSamples",
        "Cell",
        "stringShrink",
        "counter",
        "process",
        "table",
        "location",
        "location",
        "location",
        "location",
        "location",
        "location",
        "location",
        "i",
        "j",
        "url",
        "url",
        "url",
        "url",
        "optimizationSites",
        "i",
        "optimizationSites",
        "i",
        "optimizationSites",
        "i",
        "getURLFromLocation",
        "site",
        "fileURL",
        "site",
        "dumpSampleThreshold",
        "files",
        "fileURL",
        "files",
        "fileURL",
        "files",
        "fileURL",
        "files",
        "fileURL",
        "site",
        "key",
        "files",
        "files",
        "key",
        "a",
        "b",
        "a",
        "b",
        "dumpOptimizationSitesForFile",
        "key",
        "files",
        "key",
        "siteMap",
        "i",
        "i",
        "j",
        "i",
        "j",
        "siteMap",
        "j",
        "fileURL",
        "sites",
        "request",
        "fileURL",
        "error",
        "response",
        "body",
        "body",
        "source",
        "i",
        "sites",
        "i",
        "sites",
        "i",
        "lineSites",
        "site",
        "lineSites",
        "site",
        "lineSites",
        "site",
        "site",
        "maxSampleNumber",
        "maxSampleNumber",
        "site",
        "totalSamples",
        "site",
        "fileURL",
        "sites",
        "totalSamples",
        "maxLineNumber",
        "maxSampleNumber",
        "i",
        "source",
        "i",
        "source",
        "i",
        "dumpAll",
        "siteInRange",
        "lineSites",
        "i",
        "inRange",
        "padLeft",
        "i",
        "gutterWidth",
        "sourceLine",
        "inRange",
        "padLeft",
        "gutterWidth",
        "inRange",
        "lineSites",
        "i",
        "dumpLineOptimizationSite",
        "gutterWidth",
        "sourceLine",
        "lineSites",
        "i",
        "gutterWidth",
        "sourceLine",
        "sites",
        "j",
        "sites",
        "j",
        "j",
        "sites",
        "j",
        "site",
        "cursor",
        "isSuccessfulOutcome",
        "attempts",
        "attempts",
        "lastOutcomeIsSuccessful",
        "cursor",
        "cursor",
        "padLeft",
        "site",
        "gutterWidth",
        "maskString",
        "sourceLine",
        "divider",
        "cursor",
        "cursor",
        "padLeft",
        "site",
        "gutterWidth",
        "maskString",
        "sourceLine",
        "divider",
        "i",
        "attempts",
        "i",
        "isSuccessfulOutcome",
        "attempts",
        "i",
        "cursor",
        "lastOutcomeIsSuccessful",
        "cursor",
        "cursor",
        "attempts",
        "i",
        "cursor",
        "gutterWidth",
        "stringStart",
        "sourceLine",
        "cursor",
        "attempt",
        "attempt",
        "cursor",
        "argv",
        "fileName",
        "loadProfile",
        "fileName",
        "scanProfile",
        "profile",
        "profile",
        "dumpProfile",
        "profiles",
        "s",
        "n",
        "c",
        "n",
        "s",
        "s",
        "c",
        "s",
        "s",
        "s",
        "n",
        "c",
        "n",
        "s",
        "s",
        "s",
        "c",
        "s",
        "s",
        "c",
        "single",
        "s",
        "single",
        "stringEnd",
        "s",
        "stringStart",
        "s",
        "i",
        "j",
        "i",
        "chars",
        "i",
        "c",
        "chars",
        "i",
        "s",
        "i",
        "s",
        "i",
        "r",
        "c",
        "r",
        "s",
        "i",
        "r",
        "s",
        "i",
        "s",
        "s",
        "i",
        "i",
        "i",
        "s",
        "s",
        "i",
        "s",
        "i",
        "i",
        "i",
        "s",
        "length",
        "s",
        "length",
        "s",
        "s",
        "length",
        "s",
        "length",
        "s",
        "s",
        "stringClamp",
        "s",
        "length",
        "c",
        "n",
        "n",
        "s",
        "c",
        "s"
    ],
    "literals": [
        "string",
        "string",
        "string",
        "\"\"",
        "' '",
        "\" \"",
        "\"\\n\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'fs'",
        "'ansi'",
        "'minimist'",
        "\"request\"",
        "\"GenericSuccess\"",
        "\"Inlined\"",
        "\"DOM\"",
        "\"Monomorphic\"",
        "\"Polymorphic\"",
        "string",
        "string",
        "'utf8'",
        "\"Loading thread: \"",
        "\", \"",
        "\" samples.\"",
        "' '",
        "\" \"",
        "' '",
        "\" \"",
        "' '",
        "\"chrome://\"",
        "\"resource://\"",
        "\"jar:file://\"",
        "\"http://\"",
        "\"https://\"",
        "\"file://\"",
        "\"app://\"",
        "\"interpreter\"",
        "\"interpreter\"",
        "'INT'",
        "'BSL'",
        "'ION'",
        "'INT'",
        "'BSL'",
        "'ION'",
        "'   '",
        "'    '",
        "'   '",
        "''",
        "'ALL'",
        "'ALL'",
        "'ALL'",
        "'SLF'",
        "'SLF'",
        "'SLF'",
        "'ALL'",
        "'%ALL'",
        "'SLF'",
        "'Function'",
        "'---'",
        "'---'",
        "'---'",
        "'---'",
        "'---'",
        "'---'",
        "'---'",
        "'----'",
        "'---'",
        "'--------'",
        "string",
        "\" \"",
        "string",
        "\"(\"",
        "\":\"",
        "\"file://\"",
        "\"http://\"",
        "string",
        "string",
        "\"\\n\"",
        "\"\"",
        "\"File: \"",
        "\", \"",
        "\" optimization site(s) with \"",
        "\" sample(s).\"",
        "\"\"",
        "\": \"",
        "\"\"",
        "\": \"",
        "\"...\"",
        "string",
        "\"^\"",
        "\"-\"",
        "'#7FFF00'",
        "\":<\"",
        "\"\\n\"",
        "'#880000'",
        "\":>\"",
        "\"\\n\"",
        "'#7FFF00'",
        "'#FFFF00'",
        "'#880000'",
        "\"• \"",
        "\" -> \"",
        "\"\\n\"",
        "string",
        "' '",
        "string",
        "string",
        "' '",
        "string",
        "string",
        "string",
        "\"\"",
        "\"\"",
        "\"\"",
        "' '",
        "string",
        "' '",
        "string",
        "' '",
        "string",
        "\" ...\"",
        "string",
        "\"http://localhost:8000\"",
        "\"...:8000\"",
        "string",
        "\"\""
    ],
    "variables": [
        "column",
        "s",
        "columns",
        "fs",
        "ansi",
        "cursor",
        "argv",
        "dumpAll",
        "dumpSampleThreshold",
        "showGeckoPlatformData",
        "request",
        "SUCCESSFUL_OUTCOMES",
        "profile",
        "threads",
        "i",
        "thread",
        "samples",
        "j",
        "sample",
        "frames",
        "k",
        "frame",
        "optimization",
        "CHROME_SCHEMES",
        "CONTENT_SCHEMES",
        "i",
        "scheme",
        "functionCounters",
        "samples",
        "sampleCount",
        "j",
        "sample",
        "frames",
        "k",
        "frame",
        "counter",
        "functionCounterList",
        "table",
        "i",
        "counter",
        "callSamples",
        "selfSamples",
        "i",
        "j",
        "url",
        "files",
        "i",
        "site",
        "fileURL",
        "j",
        "source",
        "maxLineNumber",
        "maxSampleNumber",
        "lineSites",
        "totalSamples",
        "i",
        "site",
        "gutterWidth",
        "inRange",
        "i",
        "sourceLine",
        "j",
        "divider",
        "site",
        "attempts",
        "lastOutcomeIsSuccessful",
        "i",
        "attempt",
        "profiles",
        "profile",
        "chars",
        "j",
        "i",
        "r",
        "i",
        "i",
        "i",
        "s"
    ],
    "comments": [
        "<reference path='./node.d.ts'/>",
        "An outcome of an OptimizationAttempt that is considered successful.",
        "console.dir(profile.profile.threads[0].samples, {depth: null});",
        "console.dir(profile.profile.threads[0].optimizations, {depth: null});",
        "console.dir(Object.keys(profile.profile.threads[0]));",
        "console.dir(profile.profile.threads[0].optimizations);",
        "console.dir(profile.profile.threads[0], {depth: null});",
        "console.log(profile.allocations.counts.length);",
        "console.log(profile.allocations.frames.length);",
        "console.log(profile.allocations.sites.length);",
        "console.log(profile.allocations.timestamps.length);",
        "console.dir(profile.allocations.frames, {depth: 1});",
        "Only C++ stack frames have associated category information.",
        "!CHROME_SCHEMES.find(e => frame.location.contains(e)) &&",
        "console.dir(thread, {depth: 0});",
        "console.log(\"Cannot parse location: \" + url);",
        "Sort sites by line number.",
        "var types = site.types;",
        "for (var i = 0; i < types.length; i++) {",
        "var type = types[i];",
        "cursor.horizontalAbsolute(4 + gutterWidth + stringStart(sourceLine));",
        "cursor.write(\"• \" + type.mirType + \"\\n\");",
        "}",
        "",
        "function processFile(fileName: string) {",
        "var source: string [] = fs.readFileSync(fileName, 'utf8').split(\"\\n\");",
        "var lineNumberWidth = String(source.length).length;",
        "var lineOffset = lineNumberWidth + 2;",
        "for (var i = 0; i < source.length; i++) {",
        "var line = source[i];",
        "if (i === 17) {",
        "cursor.hex('#660000');",
        "// console.log(padLeft(dup('█', String(i).length + 1), lineNumberWidth + 1) + \" \" + line);",
        "// cursor.horizontalAbsolute(5);",
        "// cursor.write('█\\n');",
        "cursor.reset();",
        "}",
        "console.log(padLeft(String(i), lineNumberWidth) + \": \" + line);",
        "}",
        "}"
    ],
    "docstrings": [
        "* Dumps entire file without ellipsis.",
        "* Don't dump any optimization site that has fewer than this number of samples."
    ],
    "functions": [
        "padAlignment",
        "toString",
        "stretch",
        "toString",
        "addRow",
        "toString",
        "isSuccessfulOutcome",
        "loadProfile",
        "scanProfile",
        "dumpProfile",
        "countersToString",
        "isContent",
        "dumpFunctions",
        "getNameFromLocation",
        "getURLFromLocation",
        "dumpOptimizationSites",
        "siteInRange",
        "dumpOptimizationSitesForFile",
        "dumpLineOptimizationSite",
        "padLeft",
        "padRight",
        "maskString",
        "stringStart",
        "stringEnd",
        "stringClamp",
        "stringShrink",
        "dup"
    ],
    "classes": [
        "Cell",
        "Column",
        "Row",
        "Table"
    ]
}