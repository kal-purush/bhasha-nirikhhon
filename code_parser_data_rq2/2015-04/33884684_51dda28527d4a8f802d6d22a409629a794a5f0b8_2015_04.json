{
    "identifiers": [
        "program",
        "tagit",
        "process",
        "err",
        "err",
        "tagit",
        "err",
        "err",
        "err",
        "process",
        "program",
        "program",
        "dir",
        "makeRepo",
        "dir",
        "repo",
        "err",
        "initialized",
        "err",
        "initialized",
        "repo",
        "repo",
        "process",
        "err",
        "process",
        "program",
        "makeRepo",
        "program",
        "options",
        "makeRepo",
        "program",
        "f",
        "tag",
        "otherTags",
        "otherTags",
        "allTags",
        "tag",
        "makeRepo",
        "f",
        "allTags",
        "err",
        "tagged",
        "err",
        "err",
        "f",
        "process",
        "f",
        "allTags",
        "program",
        "f",
        "options",
        "f",
        "makeRepo",
        "f",
        "makeRepo",
        "tag",
        "tag",
        "program",
        "tag",
        "tags",
        "tags",
        "tags",
        "tags",
        "tag",
        "makeRepo",
        "tags",
        "files",
        "files",
        "f",
        "f",
        "tags",
        "program",
        "f",
        "tag",
        "tags",
        "tags",
        "allTags",
        "tag",
        "makeRepo",
        "f",
        "allTags",
        "program",
        "f",
        "makeRepo",
        "f",
        "program",
        "tags",
        "options",
        "makeRepo",
        "tags",
        "f",
        "f",
        "tags",
        "program",
        "args",
        "args",
        "program",
        "program",
        "process",
        "program",
        "program",
        "dir",
        "dir",
        "dir",
        "program",
        "program",
        "tagit",
        "dir"
    ],
    "literals": [
        "'commander'",
        "'./lib/tagit'",
        "'.'",
        "'uncaughtException'",
        "'Unhandled error: %s'",
        "'0.0.1'",
        "'-d --directory <directory>'",
        "'Taggit work directory'",
        "'init [directory]'",
        "'Initialize directory for file tagging'",
        "\"Initialized %s\"",
        "\"%s is already initialized\"",
        "'update'",
        "'Update the index by adding new files and removing missing ones'",
        "'autotag'",
        "'Automatically tag all files extracting tags from their filenames'",
        "'tag <file> <tag> [tags...]'",
        "\"Tag a file with the given tags\"",
        "'ENOENT'",
        "'Can\\'t tag inexistent file '",
        "'Tagged file %s with tags %s'",
        "'tags [file]'",
        "'List tags for file. If no file is given list all available tags'",
        "'tagged <tag> [tags...]'",
        "'List files matching all given tags'",
        "\"There are no files matching tags %s\"",
        "'untag <file> <tag> [tags...]'",
        "'Remove all given tags from file'",
        "'remove <file>'",
        "'remove file from index'",
        "'random [tags...]'",
        "'Choose a random file matching the specified tags.'",
        "\"No file found matching tags %s\"",
        "'*'",
        "''",
        "'Unknown action %s'",
        "\".\""
    ],
    "variables": [
        "workDir",
        "repo",
        "allTags",
        "files",
        "allTags",
        "f"
    ],
    "comments": [
        "<reference path=\"types/node/node.d.ts\" />",
        "<reference path=\"types/commander/commander.d.ts\" />",
        "utility functions"
    ],
    "docstrings": [
        "*  Global error handler, last step before crashing.",
        "*  Main CLI parameters",
        "* Create a Tagit instance for the current work directory;\n *\n * @returns {exports.Tagit}"
    ],
    "functions": [
        "makeRepo"
    ],
    "classes": []
}