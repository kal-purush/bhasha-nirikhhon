{
    "identifiers": [
        "pytest_mock_resources",
        "create_postgres_fixture",
        "sqlalchemy",
        "Column",
        "text",
        "types",
        "sqlalchemy_declarative_extensions",
        "Row",
        "Rows",
        "declarative_database",
        "register_sqlalchemy_events",
        "sqlalchemy_declarative_extensions",
        "row",
        "compare",
        "compare_rows",
        "sqlalchemy_declarative_extensions",
        "sqlalchemy",
        "declarative_base",
        "declarative_base",
        "declarative_database",
        "_Base",
        "Base",
        "Column",
        "types",
        "primary_key",
        "Column",
        "types",
        "Unicode",
        "nullable",
        "register_sqlalchemy_events",
        "Base",
        "metadata",
        "rows",
        "create_postgres_fixture",
        "scope",
        "engine_kwargs",
        "session",
        "pg",
        "pg",
        "execute",
        "text",
        "pg",
        "execute",
        "text",
        "Base",
        "metadata",
        "create_all",
        "bind",
        "pg",
        "connection",
        "pg",
        "commit",
        "Rows",
        "ignore_unspecified",
        "are",
        "Row",
        "id",
        "name",
        "compare_rows",
        "pg",
        "connection",
        "Base",
        "metadata",
        "rows",
        "op",
        "result",
        "query",
        "op",
        "render",
        "Base",
        "metadata",
        "pg",
        "execute",
        "query",
        "pg",
        "commit",
        "pg",
        "execute",
        "text",
        "fetchall",
        "result"
    ],
    "literals": [
        "\"foo\"",
        "\"function\"",
        "\"echo\"",
        "\"CREATE SCHEMA foo\"",
        "\"SET SEARCH_PATH=foo\"",
        "\"foo\"",
        "\"qwer\"",
        "\"SELECT * FROM foo.foo\"",
        "\"qwer\""
    ],
    "variables": [
        "_Base",
        "__abstract__",
        "__tablename__",
        "id",
        "name",
        "pg",
        "rows",
        "result",
        "result"
    ],
    "comments": [
        "type: ignore"
    ],
    "docstrings": [],
    "functions": [
        "test_insert_missing"
    ],
    "classes": [
        "Base",
        "Foo"
    ]
}