{
    "identifiers": [
        "sys",
        "sys",
        "path",
        "append",
        "tritonclient",
        "http",
        "httpclient",
        "argparse",
        "datetime",
        "numpy",
        "np",
        "client_utils",
        "print_statistics",
        "urllib",
        "request",
        "urlretrieve",
        "pathlib",
        "Path",
        "os",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "parser",
        "add_argument",
        "help",
        "dest",
        "parser",
        "add_argument",
        "required",
        "help",
        "vars",
        "parser",
        "parse_args",
        "args",
        "get",
        "args",
        "httpclient",
        "InferenceServerClient",
        "url",
        "url",
        "ssl",
        "ssl_options",
        "ssl_options",
        "verbose",
        "args",
        "image_url",
        "image_url",
        "split",
        "Path",
        "os",
        "path",
        "join",
        "input_name",
        "os",
        "path",
        "exists",
        "sample_path",
        "sample_path",
        "parent",
        "mkdir",
        "parents",
        "exist_ok",
        "urlretrieve",
        "image_url",
        "sample_path",
        "args",
        "args",
        "split",
        "input_labels",
        "open",
        "sample_path",
        "f",
        "image_data",
        "append",
        "f",
        "read",
        "np",
        "array",
        "image_data",
        "dtype",
        "np",
        "object_",
        "np",
        "array",
        "input_labels_array",
        "dtype",
        "np",
        "object_",
        "inputs",
        "append",
        "httpclient",
        "InferInput",
        "len",
        "npydata",
        "inputs",
        "set_data_from_numpy",
        "npydata",
        "binary_data",
        "inputs",
        "append",
        "httpclient",
        "InferInput",
        "len",
        "npylabelsdata",
        "inputs",
        "set_data_from_numpy",
        "npylabelsdata",
        "binary_data",
        "iteration",
        "iterations",
        "iteration",
        "datetime",
        "datetime",
        "now",
        "triton_client",
        "model_name",
        "model_name",
        "inputs",
        "inputs",
        "datetime",
        "datetime",
        "now",
        "end_time",
        "start_time",
        "total_seconds",
        "processing_times",
        "append",
        "duration",
        "results",
        "as_numpy",
        "tobytes",
        "decode",
        "print_statistics",
        "np",
        "array",
        "processing_times",
        "batch_size"
    ],
    "literals": [
        "\"../../common/python\"",
        "'REST Client for clip example'",
        "'--input_labels'",
        "\"cat,dog,wolf,tiger,man,horse,frog,tree,house,computer\"",
        "\"Specify input_labels to the CLIP model. default:cat,dog,wolf,tiger,man,horse,frog,tree,house,computer\"",
        "'--image_url'",
        "'https://storage.openvinotoolkit.org/repositories/openvino_notebooks/data/data/image/coco.jpg'",
        "'Specify image_url to send to the CLIP model. default:https://storage.openvinotoolkit.org/repositories/openvino_notebooks/data/data/image/coco.jpg'",
        "'--iterations'",
        "'Number of requests iterations, as default use number of images in numpy memmap. default: 1 '",
        "'iterations'",
        "'--url'",
        "'localhost:8000'",
        "'Specify url to grpc service. default:localhost:8000'",
        "'iterations'",
        "'url'",
        "'image_url'",
        "f\"Using image_url:\\n{image_url}\\n\"",
        "\"/\"",
        "\"data\"",
        "'input_labels'",
        "'input_labels'",
        "\",\"",
        "f\"Using input_labels:\\n{input_labels}\\n\"",
        "\"rb\"",
        "'image'",
        "\"BYTES\"",
        "'input_labels'",
        "\"BYTES\"",
        "f\"Iteration {iteration}\"",
        "\"python_model\"",
        "f\"Detection:\\n{results.as_numpy('output_label').tobytes().decode()}\\n\"",
        "'output_label'"
    ],
    "variables": [
        "parser",
        "args",
        "iterations",
        "iteration",
        "url",
        "ssl_options",
        "triton_client",
        "image_url",
        "input_name",
        "sample_path",
        "input_labels_array",
        "input_labels",
        "image_data",
        "npydata",
        "npylabelsdata",
        "inputs",
        "processing_times",
        "outputs",
        "start_time",
        "model_name",
        "results",
        "end_time",
        "duration"
    ],
    "comments": [
        "",
        "Copyright (c) 2024 Intel Corporation",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        ""
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}