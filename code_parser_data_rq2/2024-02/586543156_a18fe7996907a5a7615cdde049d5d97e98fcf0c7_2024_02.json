{
    "identifiers": [
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "addressSchema",
        "z",
        "z",
        "userSchema",
        "z",
        "z",
        "z",
        "z",
        "categorySchema",
        "z",
        "z",
        "z",
        "z",
        "tagSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "categorySchema",
        "z",
        "z",
        "z",
        "z",
        "tagSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "petSchema",
        "z",
        "petSchema",
        "z",
        "z",
        "z",
        "z",
        "addPetRequestSchema",
        "z",
        "petSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "petSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "petSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "petSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "apiResponseSchema",
        "z",
        "z",
        "z",
        "z",
        "orderSchema",
        "z",
        "orderSchema",
        "z",
        "z",
        "orderSchema",
        "z",
        "orderSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "orderSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "userSchema",
        "z",
        "z",
        "userSchema",
        "z",
        "userSchema",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "z",
        "userSchema",
        "z",
        "z",
        "z",
        "z",
        "userSchema",
        "z",
        "z",
        "z",
        "z",
        "z"
    ],
    "literals": [
        "'zod'",
        "'street'",
        "'city'",
        "'state'",
        "'zip'",
        "'code'",
        "'type'",
        "'message'",
        "'id'",
        "'name'",
        "'id'",
        "'petId'",
        "'quantity'",
        "'shipDate'",
        "'status'",
        "placed",
        "approved",
        "delivered",
        "Order Status",
        "'http_status'",
        "HTTP Status",
        "'complete'",
        "'code'",
        "'message'",
        "'id'",
        "'name'",
        "'id'",
        "'username'",
        "'firstName'",
        "'lastName'",
        "'email'",
        "'password'",
        "'phone'",
        "'userStatus'",
        "User Status",
        "'id'",
        "'username'",
        "'address'",
        "'id'",
        "'name'",
        "'category'",
        "'photoUrls'",
        "'tags'",
        "'status'",
        "available",
        "pending",
        "sold",
        "pet status in the store",
        "'id'",
        "'name'",
        "'category'",
        "'photoUrls'",
        "'tags'",
        "'status'",
        "available",
        "pending",
        "sold",
        "pet status in the store",
        "'code'",
        "'message'",
        "'status'",
        "available",
        "pending",
        "sold",
        "'available'",
        "Status values that need to be considered for filter",
        "'tags'",
        "Tags to filter by",
        "'page'",
        "to request with required page number or pagination",
        "'pageSize'",
        "to request with required page size",
        "'petId'",
        "ID of pet to return",
        "'petId'",
        "ID of pet that needs to be updated",
        "'name'",
        "Name of pet that needs to be updated",
        "'status'",
        "Status of pet that needs to be updated",
        "'api_key'",
        "'petId'",
        "Pet id to delete",
        "'petId'",
        "ID of pet to update",
        "'additionalMetadata'",
        "Additional Metadata",
        "'orderId'",
        "ID of order that needs to be fetched",
        "'orderId'",
        "ID of the order that needs to be deleted",
        "'username'",
        "The user name for login",
        "'password'",
        "The password for login in clear text",
        "'username'",
        "The name that needs to be fetched. Use user1 for testing.",
        "'username'",
        "name that need to be deleted",
        "'username'",
        "The name that needs to be deleted"
    ],
    "variables": [
        "addressSchema",
        "apiResponseSchema",
        "categorySchema",
        "orderSchema",
        "petNotFoundSchema",
        "tagSchema",
        "userSchema",
        "customerSchema",
        "userArraySchema",
        "addPetRequestSchema",
        "petSchema",
        "updatePet400Schema",
        "updatePet404Schema",
        "updatePet405Schema",
        "updatePetMutationRequestSchema",
        "updatePetMutationResponseSchema",
        "addPet405Schema",
        "addPetMutationRequestSchema",
        "addPetMutationResponseSchema",
        "findPetsByStatus400Schema",
        "findPetsByStatusQueryParamsSchema",
        "findPetsByStatusQueryResponseSchema",
        "findPetsByTags400Schema",
        "findPetsByTagsQueryParamsSchema",
        "findPetsByTagsQueryResponseSchema",
        "getPetById400Schema",
        "getPetById404Schema",
        "getPetByIdPathParamsSchema",
        "getPetByIdQueryResponseSchema",
        "updatePetWithForm405Schema",
        "updatePetWithFormMutationResponseSchema",
        "updatePetWithFormPathParamsSchema",
        "updatePetWithFormQueryParamsSchema",
        "deletePet400Schema",
        "deletePetHeaderParamsSchema",
        "deletePetMutationResponseSchema",
        "deletePetPathParamsSchema",
        "uploadFileMutationRequestSchema",
        "uploadFilePathParamsSchema",
        "uploadFileQueryParamsSchema",
        "uploadFileMutationResponseSchema",
        "getInventoryQueryResponseSchema",
        "placeOrder405Schema",
        "placeOrderMutationRequestSchema",
        "placeOrderMutationResponseSchema",
        "placeOrderPatch405Schema",
        "placeOrderPatchMutationRequestSchema",
        "placeOrderPatchMutationResponseSchema",
        "getOrderById400Schema",
        "getOrderById404Schema",
        "getOrderByIdPathParamsSchema",
        "getOrderByIdQueryResponseSchema",
        "deleteOrder400Schema",
        "deleteOrder404Schema",
        "deleteOrderMutationResponseSchema",
        "deleteOrderPathParamsSchema",
        "createUserMutationResponseSchema",
        "createUserMutationRequestSchema",
        "createUsersWithListInputMutationRequestSchema",
        "createUsersWithListInputMutationResponseSchema",
        "loginUser400Schema",
        "loginUserQueryParamsSchema",
        "loginUserQueryResponseSchema",
        "logoutUserQueryResponseSchema",
        "getUserByName400Schema",
        "getUserByName404Schema",
        "getUserByNamePathParamsSchema",
        "getUserByNameQueryResponseSchema",
        "updateUserMutationResponseSchema",
        "updateUserPathParamsSchema",
        "updateUserMutationRequestSchema",
        "deleteUser400Schema",
        "deleteUser404Schema",
        "deleteUserMutationResponseSchema",
        "deleteUserPathParamsSchema"
    ],
    "comments": [],
    "docstrings": [
        "* @description Invalid ID supplied",
        "* @description Pet not found",
        "* @description Validation exception",
        "* @description Update an existent pet in the store",
        "* @description Successful operation",
        "* @description Create a new pet in the store",
        "* @description Successful operation",
        "* @description Invalid status value",
        "* @description successful operation",
        "* @description Invalid tag value",
        "* @description successful operation",
        "* @description Invalid ID supplied",
        "* @description Pet not found",
        "* @description successful operation",
        "* @description Invalid input",
        "* @description Invalid pet value",
        "* @description successful operation",
        "* @description successful operation",
        "* @description Invalid input",
        "* @description successful operation",
        "* @description Invalid input",
        "* @description successful operation",
        "* @description Invalid ID supplied",
        "* @description Order not found",
        "* @description successful operation",
        "* @description Invalid ID supplied",
        "* @description Order not found",
        "* @description Created user object",
        "* @description Successful operation",
        "* @description Invalid username/password supplied",
        "* @description successful operation",
        "* @description Invalid username supplied",
        "* @description User not found",
        "* @description successful operation",
        "* @description Update an existent user in the store",
        "* @description Invalid username supplied",
        "* @description User not found"
    ],
    "functions": [],
    "classes": []
}