{
    "identifiers": [
        "datetime",
        "datetime",
        "flask",
        "g",
        "Flask",
        "render_template",
        "request",
        "flask_babel",
        "Babel",
        "get_locale",
        "flask_babel",
        "gettext",
        "_",
        "format_datetime",
        "pytz",
        "Flask",
        "Babel",
        "app",
        "app",
        "config",
        "from_object",
        "Config",
        "user_id",
        "users",
        "get",
        "user_id",
        "app",
        "before_request",
        "request",
        "args",
        "get",
        "login_as",
        "get_user",
        "login_as",
        "request",
        "args",
        "get",
        "param",
        "param",
        "app",
        "config",
        "param",
        "g",
        "user",
        "g",
        "user",
        "g",
        "user",
        "app",
        "config",
        "g",
        "user",
        "request",
        "headers",
        "get",
        "header_locale",
        "lang",
        "header_locale",
        "split",
        "lang",
        "split",
        "strip",
        "lang",
        "app",
        "config",
        "lang",
        "app",
        "config",
        "request",
        "args",
        "get",
        "tmz",
        "pytz",
        "timezone",
        "tmz",
        "tmz",
        "pytz",
        "exceptions",
        "UnknownTimeZoneError",
        "g",
        "user",
        "g",
        "user",
        "pytz",
        "timezone",
        "g",
        "user",
        "g",
        "user",
        "pytz",
        "exceptions",
        "UnknownTimeZoneError",
        "get_tmz",
        "app",
        "route",
        "methods",
        "datetime",
        "now",
        "pytz",
        "timezone",
        "get_timezone",
        "format_datetime",
        "current_time",
        "format",
        "render_template",
        "current_time",
        "formatted_time",
        "app",
        "run",
        "host"
    ],
    "literals": [
        "\"name\"",
        "\"Balou\"",
        "\"locale\"",
        "\"fr\"",
        "\"timezone\"",
        "\"Europe/Paris\"",
        "\"name\"",
        "\"Beyonce\"",
        "\"locale\"",
        "\"en\"",
        "\"timezone\"",
        "\"US/Central\"",
        "\"name\"",
        "\"Spock\"",
        "\"locale\"",
        "\"kg\"",
        "\"timezone\"",
        "\"Vulcan\"",
        "\"name\"",
        "\"Teletubby\"",
        "\"locale\"",
        "\"timezone\"",
        "\"Europe/London\"",
        "\"en\"",
        "\"fr\"",
        "\"en\"",
        "\"UTC\"",
        "'login_as'",
        "'locale'",
        "'LANGUAGES'",
        "'locale'",
        "'locale'",
        "'LANGUAGES'",
        "'locale'",
        "'Accept-Language'",
        "','",
        "';'",
        "'LANGUAGES'",
        "'BABEL_DEFAULT_LOCALE'",
        "'timezone'",
        "'timezone'",
        "'timezone'",
        "'timezone'",
        "'UTC'",
        "'/'",
        "'GET'",
        "'medium'",
        "'7-index.html'",
        "'__main__'",
        "'0.0.0.0'"
    ],
    "variables": [
        "app",
        "babel",
        "users",
        "LANGUAGES",
        "BABEL_DEFAULT_LOCALE",
        "BABEL_DEFAULT_TIMEZONE",
        "login_as",
        "g",
        "user",
        "g",
        "user",
        "param",
        "header_locale",
        "lang",
        "tmz",
        "current_time",
        "formatted_time"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Check if locale is provided in URL parameters",
        "Check if user is logged in and has a preferred locale",
        "Check request header for preffered locale",
        "Check if timezone is provided in URL parameters",
        "Check if user is logged in and has a preferred timezone",
        "Default to UTC if no valid timezone is found"
    ],
    "docstrings": [
        "\"\"\"This module function creates a basic flask app\"\"\"",
        "\"\"\"This class provides the configuration of languages and timezone\"\"\"",
        "\"\"\"Retrieve user information based on the user ID\"\"\"",
        "\"\"\"Set the global user variable 'g.user' before each request\"\"\"",
        "\"\"\"\n    Get the preferred locale for the user.\n\n    The order of priority is:\n        1. Locale from URL parameters\n        2. Locale from user settings\n        3. Locale from request header\n        4. Default locale\n\n    Returns:\n        str: The preferred locale for the user.\n    \"\"\"",
        "\"\"\"\n    Get the appropriate time zone for the user.\n\n    The order of priority is:\n        1. Timezone from URL parameters\n        2. Timezone from user settings\n        3. Default to UTC\n\n    Returns:\n        str: The appropriate time zone for the user.\n    \"\"\"",
        "\"\"\"Get the appropriate time zone for the user.\"\"\"",
        "\"\"\"Render the index.html template with the current time\n    \"\"\""
    ],
    "functions": [
        "get_user",
        "before_request",
        "get_locale",
        "get_tmz",
        "get_timezone",
        "hello"
    ],
    "classes": [
        "Config"
    ]
}