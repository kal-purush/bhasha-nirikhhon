{
    "identifiers": [],
    "literals": [],
    "variables": [],
    "comments": [
        "Cart",
        "User",
        "Product",
        "Category",
        "Brand",
        "Todo: Create a new order with Email",
        "‚òëÔ∏è Create a new order ‚òëÔ∏è",
        "Todo: Fetch All Orders",
        "‚òëÔ∏è FETCH ALL ORDERS ‚òëÔ∏è",
        "Todo: Delete an Order",
        "‚òëÔ∏è Delete an order ‚òëÔ∏è",
        "Todo: Update an Order",
        "‚òëÔ∏è Update an order ‚òëÔ∏è",
        "‚òëÔ∏è Fetch all orders with optional sorting and pagination ‚òëÔ∏è"
    ],
    "docstrings": [
        "* @swagger\n * /api/v1/cart:\n *   get:\n *     summary: Retrieve cart items for the authenticated user\n *     tags: [üõí Cart]\n *     responses:\n *       200:\n *         description: Cart items successfully retrieved\n *         content:\n *           application/json:\n *             example:\n *               status: \"success\"\n *               data:\n *                 cartItems:\n *                   - productId: \"12345\"\n *                     quantity: 2\n *                     price: 25.99\n *                     # ... (other cart item details)\n *       404:\n *         description: No cart items found for the authenticated user\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"No cart items found for the user\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/cart:\n *   post:\n *     summary: Add a product to the cart for the authenticated user\n *     tags: [üõí Cart]\n *     security:\n *       - bearerAuth: []\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               productId:\n *                 type: string\n *               quantity:\n *                 type: number\n *             example:\n *               productId: \"12345\"\n *               quantity: 2\n *     responses:\n *       201:\n *         description: Product successfully added to the cart\n *         content:\n *           application/json:\n *             example:\n *               status: \"success\"\n *               data:\n *                 cartItem:\n *                   productId: \"12345\"\n *                   quantity: 2\n *                   price: 25.99\n *                   # ... (other cart item details)\n *       400:\n *         description: Bad request. Validation errors in the request body.\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"Invalid request body\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/cart/{id}:\n *   patch:\n *     summary: Update the quantity of a product in the cart by ID for the authenticated user\n *     tags: [üõí Cart]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the cart item to be updated\n *     requestBody:\n *       description: Updated cart item details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               quantity:\n *                 type: number\n *             example:\n *               quantity: 3\n *     responses:\n *       200:\n *         description: Cart item quantity successfully updated\n *         content:\n *           application/json:\n *             example:\n *               status: \"success\"\n *               message: \"Cart item quantity updated successfully\"\n *               data:\n *                 updatedCartItem:\n *                   productId: \"12345\"\n *                   quantity: 3\n *                   price: 25.99\n *                   # ... (other updated cart item details)\n *       400:\n *         description: Bad request. Invalid cart item ID or validation errors.\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"Invalid cart item ID\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/cart/{id}:\n *   delete:\n *     summary: Remove a product from the cart by ID for the authenticated user\n *     tags: [üõí Cart]\n *     security:\n *       - bearerAuth: []\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the cart item to be deleted\n *     responses:\n *       200:\n *         description: Product successfully removed from the cart\n *         content:\n *           application/json:\n *             example:\n *               status: \"success\"\n *               message: \"Product removed from the cart successfully\"\n *               data:\n *                 deletedCartItem:\n *                   productId: \"12345\"\n *                   quantity: 2\n *                   price: 25.99\n *                   # ... (other deleted cart item details)\n *       400:\n *         description: Bad request. Invalid cart item ID or validation errors.\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"Invalid cart item ID\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               status: \"error\"\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/users/own:\n *   get:\n *     summary: Fetch a user by ID\n *     tags: [üë§ Users]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the user to fetch\n *     responses:\n *       200:\n *         description: The fetched user\n *         content:\n *           application/json:\n *             example:\n *               id: \"65870c4cfdff5cfa6ef4687a\"\n *               addresses: []\n *               email: \"abcd@gmail.com\"\n *               role: \"user\"\n *       400:\n *         description: Bad request. Invalid user ID.\n *         content:\n *           application/json:\n *             example:\n *               message: \"Invalid user ID\"\n *       404:\n *         description: User not found\n *         content:\n *           application/json:\n *             example:\n *               message: \"User not found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/users/{id}:\n *   patch:\n *     summary: Update a user by ID\n *     tags: [üë§ Users]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the user to update\n *     requestBody:\n *       description: Updated user details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               email:\n *                 type: string\n *               password:\n *                 type: object\n *                 properties:\n *                   type:\n *                     type: string\n *                   data:\n *                     type: array\n *                     items:\n *                       type: number\n *               role:\n *                 type: string\n *               addresses:\n *                 type: array\n *               orders:\n *                 type: array\n *               salt:\n *                 type: object\n *                 properties:\n *                   type:\n *                     type: string\n *                   data:\n *                     type: array\n *                     items:\n *                       type: number\n *               id:\n *                 type: string\n *             example:\n *               email: \"abcd@gmail.com\"\n *               password: { \"type\": \"Buffer\", \"data\": [80, 147, ...] }\n *               role: \"user\"\n *               addresses: []\n *               orders: []\n *               salt: { \"type\": \"Buffer\", \"data\": [162, 242, ...] }\n *               id: \"65870c4cfdff5cfa6ef4687a\"\n *     responses:\n *       200:\n *         description: The updated user\n *         content:\n *           application/json:\n *             example:\n *               id: \"65870c4cfdff5cfa6ef4687a\"\n *               email: \"abcd@gmail.com\"\n *               role: \"user\"\n *               addresses: []\n *               orders: []\n *               salt: { \"type\": \"Buffer\", \"data\": [162, 242, ...] }\n *       400:\n *         description: Bad request. Invalid user ID or request body.\n *         content:\n *           application/json:\n *             example:\n *               message: \"Invalid user ID\"\n *       404:\n *         description: User not found\n *         content:\n *           application/json:\n *             example:\n *               message: \"User not found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/products:\n *   post:\n *     summary: Create a new product\n *     tags: [üß∫ Products]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           example:\n *             colors: []\n *             sizes: []\n *             deleted: false\n *             title: \"New\"\n *             description: \"Comfortable stretch cloth, lightweight body; ,rubber sole, anti-skid wear;\"\n *             price: 20\n *             discountPercentage: 8.71\n *             rating: 4.33\n *             stock: 137\n *             brand: \"Sneakers\"\n *             category: \"mens-shoes\"\n *             thumbnail: \"https://i.dummyjson.com/data/products/59/thumbnail.jpg\"\n *             images:\n *               - \"https://i.dummyjson.com/data/products/59/1.jpg\"\n *               - \"https://i.dummyjson.com/data/products/59/2.jpg\"\n *               - \"https://i.dummyjson.com/data/products/59/3.jpg\"\n *               - \"https://i.dummyjson.com/data/products/59/4.jpg\"\n *               - \"https://i.dummyjson.com/data/products/59/thumbnail.jpg\"\n *     responses:\n *       201:\n *         description: The product was successfully created\n *         content:\n *           application/json:\n *             example:\n *               message: \"Product created successfully\"\n *               savedProduct:\n *                 colors: []\n *                 sizes: []\n *                 deleted: false\n *                 title: \"New\"\n *                 description: \"Comfortable stretch cloth, lightweight body; ,rubber sole, anti-skid wear;\"\n *                 price: 20\n *                 discountPercentage: 8.71\n *                 rating: 4.33\n *                 stock: 137\n *                 brand: \"Sneakers\"\n *                 category: \"mens-shoes\"\n *                 thumbnail: \"https://i.dummyjson.com/data/products/59/thumbnail.jpg\"\n *                 images:\n *                   - \"https://i.dummyjson.com/data/products/59/1.jpg\"\n *                   - \"https://i.dummyjson.com/data/products/59/2.jpg\"\n *                   - \"https://i.dummyjson.com/data/products/59/3.jpg\"\n *                   - \"https://i.dummyjson.com/data/products/59/4.jpg\"\n *                   - \"https://i.dummyjson.com/data/products/59/thumbnail.jpg\"\n *       400:\n *         description: Please fill all required fields\n *         content:\n *           application/json:\n *             example:\n *               message: \"Please fill all required fields\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/products:\n *   get:\n *     summary: Retrieve a list of products with optional filtering, sorting, pagination, and search\n *     tags: [üß∫ Products]\n *     parameters:\n *       - in: query\n *         name: admin\n *         schema:\n *           type: string\n *         description: Flag to include deleted products (optional)\n *       - in: query\n *         name: category\n *         schema:\n *           type: string\n *         description: Filter products by category (optional)\n *       - in: query\n *         name: brand\n *         schema:\n *           type: string\n *         description: Filter products by brand (optional)\n *       - in: query\n *         name: _sort\n *         schema:\n *           type: string\n *         description: Sort products by a specified attribute (optional)\n *       - in: query\n *         name: _order\n *         schema:\n *           type: string\n *         description: Specify the sorting order (asc or desc) (optional)\n *       - in: query\n *         name: _page\n *         schema:\n *           type: string\n *         description: Current page for pagination (optional)\n *       - in: query\n *         name: _limit\n *         schema:\n *           type: string\n *         description: Number of items per page for pagination (optional)\n *       - in: query\n *         name: q\n *         schema:\n *           type: string\n *         description: Search query to filter products (optional)\n *     responses:\n *       200:\n *         description: A list of products with optional filtering, sorting, and pagination\n *         content:\n *           application/json:\n *             examples:\n *               multipleExamples:\n *                 summary: Multiple Examples of Product Listing\n *                 value:\n *                   - colors: []\n *                     sizes: []\n *                     deleted: false\n *                     id: \"657483b37ebcb47acc9407b2\"\n *                     title: \"Samsung Universe 9\"\n *                     description: \"Samsung's new variant which goes beyond Galaxy to the Universe\"\n *                     price: 1249\n *                     discountPercentage: 15.46\n *                     rating: 4.09\n *                     stock: 36\n *                     brand: \"Samsung\"\n *                     category: \"smartphones\"\n *                     thumbnail: \"https://i.dummyjson.com/data/products/3/thumbnail.jpg\"\n *                     images:\n *                       - \"https://i.dummyjson.com/data/products/3/1.jpg\"\n *                   - ... (remaining products)\n *               specificExample:\n *                 summary: Example with specific parameters\n *                 value:\n *                   - colors: []\n *                     sizes: []\n *                     deleted: false\n *                     id: \"exampleProductId1\"\n *                     title: \"Fragrance Product 1\"\n *                     description: \"A delightful fragrance\"\n *                     price: 20\n *                     discountPercentage: 5.0\n *                     rating: 4.5\n *                     stock: 50\n *                     brand: \"Samsung\"\n *                     category: \"fragrances\"\n *                     thumbnail: \"https://example.com/thumbnail.jpg\"\n *                     images:\n *                       - \"https://example.com/image1.jpg\"\n *                       - \"https://example.com/image2.jpg\"\n *                   - ... (remaining products)\n *       404:\n *         description: No products found\n *         content:\n *           application/json:\n *             example:\n *               message: \"No products found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/products/{id}:\n *   get:\n *     summary: Retrieve a single product by ID\n *     tags: [üß∫ Products]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the product to retrieve\n *     responses:\n *       200:\n *         description: The product with the specified ID\n *         content:\n *           application/json:\n *             example:\n *               id: \"productID123\"\n *               title: \"Product 1\"\n *               description: \"Description for Product 1\"\n *               price: 19.99\n *               category: \"Electronics\"\n *               brand: \"Brand X\"\n *               # ... (other product details)\n *       404:\n *         description: Product not found\n *         content:\n *           application/json:\n *             example:\n *               message: \"Product not found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/products/{id}:\n *   patch:\n *     summary: Update a product by ID\n *     tags: [üß∫ Products]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the product to update\n *     requestBody:\n *       description: Updated product details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               title:\n *                 type: string\n *               description:\n *                 type: string\n *               price:\n *                 type: number\n *               discountPercentage:\n *                 type: number\n *             example:\n *               title: \"Updated Product\"\n *               description: \"Updated description\"\n *               price: 29.99\n *               discountPercentage: 10\n *     responses:\n *       200:\n *         description: The updated product\n *         content:\n *           application/json:\n *             example:\n *               id: \"updatedProductID123\"\n *               title: \"Updated Product\"\n *               description: \"Updated description\"\n *               price: 29.99\n *               discountPercentage: 10\n *               # ... (other updated product details)\n *       400:\n *         description: Bad request. Invalid product ID or request body.\n *         content:\n *           application/json:\n *             example:\n *               message: \"Invalid product ID\"\n *       404:\n *         description: Product not found\n *         content:\n *           application/json:\n *             example:\n *               message: \"Product not found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/createCategory:\n *   post:\n *     summary: Create a new category\n *     tags: [üß© Categories]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           example:\n *             value: \"New Category\"\n *             description: \"A description for the new category\"\n *     responses:\n *       201:\n *         description: Category created successfully\n *         content:\n *           application/json:\n *             example:\n *               message: \"Category created successfully\"\n *               savedCategory:\n *                 value: \"New Category\"\n *                 description: \"A description for the new category\"\n *       400:\n *         description: Bad request, validation errors\n *         content:\n *           application/json:\n *             example:\n *               errors: [\"Validation error 1\", \"Validation error 2\"]\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/fetchCategory:\n *   get:\n *     summary: Retrieve a list of all categories\n *     tags: [üß© Categories]\n *     responses:\n *       200:\n *         description: A list of all categories\n *         content:\n *           application/json:\n *             example:\n *               - value: \"Category 1\"\n *                 description: \"Description for Category 1\"\n *               - value: \"Category 2\"\n *                 description: \"Description for Category 2\"\n *               # ... (remaining categories)\n *       404:\n *         description: No categories found\n *         content:\n *           application/json:\n *             example:\n *               message: \"No categories found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/brands:\n *   post:\n *     summary: Create a new brand\n *     tags: [üß† Brands]\n *     requestBody:\n *       description: Brand details to be created\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               value:\n *                 type: string\n *               label:\n *                 type: string\n *             example:\n *               value: \"New Brand\"\n *               label: \"A description for the new Brand\"\n *     responses:\n *       201:\n *         description: Brand created successfully\n *         content:\n *           application/json:\n *             example:\n *               message: \"Brand created successfully\"\n *               savedBrand:\n *                 value: \"New Brand\"\n *                 label: \"A description for the new Brand\"\n *       400:\n *         description: Bad request. Validation errors in the request body.\n *         content:\n *           application/json:\n *             example:\n *               errors: [\n *                 {\n *                   value: \"\",\n *                   msg: \"Brand value is required\",\n *                   param: \"value\",\n *                   location: \"body\"\n *                 },\n *                 {\n *                   value: \"\",\n *                   msg: \"Brand label is required\",\n *                   param: \"label\",\n *                   location: \"body\"\n *                 }\n *               ]\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/brands:\n *   get:\n *     summary: Retrieve a list of all brands\n *     tags: [üß† Brands]\n *     responses:\n *       200:\n *         description: A list of all brands\n *         content:\n *           application/json:\n *             example:\n *               - value: \"New Brand\"\n *                 label: \"A description for the new Brand\"\n *               - value: \"Another Brand\"\n *                 label: \"Another Label\"\n *               # ... (remaining brands)\n *       404:\n *         description: No brands found\n *         content:\n *           application/json:\n *             example:\n *               message: \"No brands found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/orders:\n *   post:\n *     summary: Create a new order\n *     tags: [üì¶ Orders]\n *     requestBody:\n *       required: true\n *       content:\n *         application/json:\n *           example:\n *             items:\n *               -\n *                 quantity: 1\n *                 product:\n *                   id: \"657483b37ebcb47acc9407c8\"\n *             totalAmount: 60.49\n *             totalItems: 1\n *             user:\n *               id: \"65b618b5e9a9eb06fc5c5416\"\n *             paymentMethod: \"cash\"\n *             paymentStatus: \"pending\"\n *             status: \"pending\"\n *             selectedAddress:\n *               name: \"Subham Maity\"\n *               email: \"maitysubham4041@gmail.com\"\n *               phone: \"9933515901\"\n *               street: \"kolkata\"\n *               city: \"kolkata\"\n *               state: \"wb\"\n *               pinCode: \"700041\"\n *     responses:\n *       201:\n *         description: The order was successfully created\n *         content:\n *           application/json:\n *             example:\n *               items:\n *                 -\n *                   quantity: 1\n *                   product:\n *                     id: \"657483b37ebcb47acc9407c8\"\n *               totalAmount: 60.49\n *               totalItems: 1\n *               user:\n *                 id: \"65b618b5e9a9eb06fc5c5416\"\n *               paymentMethod: \"cash\"\n *               paymentStatus: \"pending\"\n *               status: \"pending\"\n *               selectedAddress:\n *                 name: \"Subham Maity\"\n *                 email: \"maitysubham4041@gmail.com\"\n *                 phone: \"9933515901\"\n *                 street: \"kolkata\"\n *                 city: \"kolkata\"\n *                 state: \"wb\"\n *                 pinCode: \"700041\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/orders/own:\n *   get:\n *     summary: Fetch all orders for the authenticated user\n *     tags: [üì¶ Orders]\n *     security:\n *       - bearerAuth: []\n *     responses:\n *       200:\n *         description: A list of orders for the authenticated user\n *         content:\n *           application/json:\n *             examples:\n *               multipleExamples:\n *                 summary: Multiple Examples of User's Orders\n *                 value:\n *                   -\n *                     items:\n *                       -\n *                         quantity: 1\n *                         product:\n *                           id: \"657483b37ebcb47acc9407c8\"\n *                     totalAmount: 60.49\n *                     totalItems: 1\n *                     user:\n *                       id: \"65b618b5e9a9eb06fc5c5416\"\n *                     paymentMethod: \"cash\"\n *                     paymentStatus: \"pending\"\n *                     status: \"pending\"\n *                     selectedAddress:\n *                       name: \"Subham Maity\"\n *                       email: \"maitysubham4041@gmail.com\"\n *                       phone: \"9933515901\"\n *                       street: \"kolkata\"\n *                       city: \"kolkata\"\n *                       state: \"wb\"\n *                       pinCode: \"700041\"\n *                   - ... (remaining orders)\n *               specificExample:\n *                 summary: Example of User's Order\n *                 value:\n *                   -\n *                     items:\n *                       -\n *                         quantity: 1\n *                         product:\n *                           id: \"657483b37ebcb47acc9407c8\"\n *                     totalAmount: 60.49\n *                     totalItems: 1\n *                     user:\n *                       id: \"65b618b5e9a9eb06fc5c5416\"\n *                     paymentMethod: \"cash\"\n *                     paymentStatus: \"pending\"\n *                     status: \"pending\"\n *                     selectedAddress:\n *                       name: \"Subham Maity\"\n *                       email: \"maitysubham4041@gmail.com\"\n *                       phone: \"9933515901\"\n *                       street: \"kolkata\"\n *                       city: \"kolkata\"\n *                       state: \"wb\"\n *                       pinCode: \"700041\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/orders/{id}:\n *   delete:\n *     summary: Delete an order by ID\n *     tags: [üì¶ Orders]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the order to delete\n *     responses:\n *       200:\n *         description: The order was successfully deleted\n *         content:\n *           application/json:\n *             example:\n *               items:\n *                 -\n *                   quantity: 1\n *                   product:\n *                     id: \"657483b37ebcb47acc9407c8\"\n *               totalAmount: 60.49\n *               totalItems: 1\n *               user:\n *                 id: \"65b618b5e9a9eb06fc5c5416\"\n *               paymentMethod: \"cash\"\n *               paymentStatus: \"pending\"\n *               status: \"pending\"\n *               selectedAddress:\n *                 name: \"Subham Maity\"\n *                 email: \"maitysubham4041@gmail.com\"\n *                 phone: \"9933515901\"\n *                 street: \"kolkata\"\n *                 city: \"kolkata\"\n *                 state: \"wb\"\n *                 pinCode: \"700041\"\n *       404:\n *         description: Order not found\n *         content:\n *           application/json:\n *             example:\n *               message: \"Order not found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/orders/{id}:\n *   patch:\n *     summary: Update an order by ID\n *     tags: [üì¶ Orders]\n *     parameters:\n *       - in: path\n *         name: id\n *         required: true\n *         schema:\n *           type: string\n *         description: ID of the order to update\n *     requestBody:\n *       description: Updated order details\n *       required: true\n *       content:\n *         application/json:\n *           schema:\n *             type: object\n *             properties:\n *               items:\n *                 type: array\n *                 items:\n *                   type: object\n *                   properties:\n *                     quantity:\n *                       type: number\n *                     product:\n *                       type: object\n *                       properties:\n *                         id:\n *                           type: string\n *               totalAmount:\n *                 type: number\n *               totalItems:\n *                 type: number\n *               user:\n *                 type: object\n *                 properties:\n *                   id:\n *                     type: string\n *               paymentMethod:\n *                 type: string\n *               paymentStatus:\n *                 type: string\n *               status:\n *                 type: string\n *               selectedAddress:\n *                 type: object\n *                 properties:\n *                   name:\n *                     type: string\n *                   email:\n *                     type: string\n *                   phone:\n *                     type: string\n *                   street:\n *                     type: string\n *                   city:\n *                     type: string\n *                   state:\n *                     type: string\n *                   pinCode:\n *                     type: string\n *     responses:\n *       200:\n *         description: The updated order\n *         content:\n *           application/json:\n *             example:\n *               items:\n *                 -\n *                   quantity: 1\n *                   product:\n *                     id: \"657483b37ebcb47acc9407c8\"\n *               totalAmount: 60.49\n *               totalItems: 1\n *               user:\n *                 id: \"65b618b5e9a9eb06fc5c5416\"\n *               paymentMethod: \"cash\"\n *               paymentStatus: \"pending\"\n *               status: \"pending\"\n *               selectedAddress:\n *                 name: \"Subham Maity\"\n *                 email: \"maitysubham4041@gmail.com\"\n *                 phone: \"9933515901\"\n *                 street: \"kolkata\"\n *                 city: \"kolkata\"\n *                 state: \"wb\"\n *                 pinCode: \"700041\"\n *       400:\n *         description: Bad request. Invalid order ID or request body.\n *         content:\n *           application/json:\n *             example:\n *               message: \"Invalid order ID\"\n *       404:\n *         description: Order not found\n *         content:\n *           application/json:\n *             example:\n *               message: \"Order not found\"\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\"",
        "* @swagger\n * /api/v1/orders:\n *   get:\n *     summary: Fetch all orders with optional sorting and pagination\n *     tags: [üì¶ Orders]\n *     parameters:\n *       - in: query\n *         name: _sort\n *         schema:\n *           type: string\n *         description: Sort orders by a specified attribute (optional)\n *       - in: query\n *         name: _order\n *         schema:\n *           type: string\n *         description: Specify the sorting order (asc or desc) (optional)\n *       - in: query\n *         name: _page\n *         schema:\n *           type: string\n *         description: Current page for pagination (optional)\n *       - in: query\n *         name: _limit\n *         schema:\n *           type: string\n *         description: Number of items per page for pagination (optional)\n *     responses:\n *       200:\n *         description: A list of orders with optional sorting and pagination\n *         content:\n *           application/json:\n *             examples:\n *               multipleExamples:\n *                 summary: Multiple Examples of Orders Listing\n *                 value:\n *                   -\n *                     items:\n *                       -\n *                         quantity: 1\n *                         product:\n *                           id: \"657483b37ebcb47acc9407c8\"\n *                     totalAmount: 60.49\n *                     totalItems: 1\n *                     user:\n *                       id: \"65b618b5e9a9eb06fc5c5416\"\n *                     paymentMethod: \"cash\"\n *                     paymentStatus: \"pending\"\n *                     status: \"pending\"\n *                     selectedAddress:\n *                       name: \"Subham Maity\"\n *                       email: \"maitysubham4041@gmail.com\"\n *                       phone: \"9933515901\"\n *                       street: \"kolkata\"\n *                       city: \"kolkata\"\n *                       state: \"wb\"\n *                       pinCode: \"700041\"\n *                   - ... (remaining orders)\n *               specificExample:\n *                 summary: Example with specific parameters\n *                 value:\n *                   -\n *                     items:\n *                       -\n *                         quantity: 1\n *                         product:\n *                           id: \"657483b37ebcb47acc9407c8\"\n *                     totalAmount: 60.49\n *                     totalItems: 1\n *                     user:\n *                       id: \"65b618b5e9a9eb06fc5c5416\"\n *                     paymentMethod: \"cash\"\n *                     paymentStatus: \"pending\"\n *                     status: \"pending\"\n *                     selectedAddress:\n *                       name: \"Subham Maity\"\n *                       email: \"maitysubham4041@gmail.com\"\n *                       phone: \"9933515901\"\n *                       street: \"kolkata\"\n *                       city: \"kolkata\"\n *                       state: \"wb\"\n *                       pinCode: \"700041\"\n *                   - ... (remaining orders)\n *       500:\n *         description: Internal server error\n *         content:\n *           application/json:\n *             example:\n *               message: \"Internal server error\""
    ],
    "functions": [],
    "classes": []
}