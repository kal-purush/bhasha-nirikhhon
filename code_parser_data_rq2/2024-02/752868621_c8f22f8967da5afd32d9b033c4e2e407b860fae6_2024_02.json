{
    "identifiers": [
        "uniandes",
        "dpoo",
        "estructuras",
        "logica",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "stream",
        "Collectors",
        "java",
        "util",
        "arregloEnteros",
        "arregloCadenas",
        "arregloEnteros",
        "arregloCadenas",
        "CopiaEnteros",
        "arregloEnteros",
        "clone",
        "CopiaEnteros",
        "CopiaCadenas",
        "arregloCadenas",
        "clone",
        "CopiaCadenas",
        "CantidadEnteros",
        "arregloEnteros",
        "length",
        "CantidadEnteros",
        "CantidadCadenas",
        "arregloCadenas",
        "length",
        "CantidadCadenas",
        "Entero",
        "nTamanio",
        "arregloEnteros",
        "length",
        "nArreglo",
        "nTamanio",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "nArreglo",
        "i",
        "arregloEnteros",
        "i",
        "nArreglo",
        "nTamanio",
        "Entero",
        "arregloEnteros",
        "nArreglo",
        "cadena",
        "nTamanio1",
        "arregloCadenas",
        "length",
        "nArreglo",
        "nTamanio1",
        "i",
        "i",
        "arregloCadenas",
        "length",
        "i",
        "nArreglo",
        "i",
        "arregloCadenas",
        "i",
        "nArreglo",
        "nTamanio1",
        "cadena",
        "arregloCadenas",
        "nArreglo",
        "valor",
        "arregloEnteros",
        "Arrays",
        "stream",
        "arregloEnteros",
        "elemento",
        "elemento",
        "valor",
        "toArray",
        "cadena",
        "arregloCadenas",
        "Arrays",
        "stream",
        "arregloCadenas",
        "elemento",
        "elemento",
        "equals",
        "cadena",
        "toArray",
        "entero",
        "posicion",
        "posicion",
        "max",
        "min",
        "posicion",
        "arregloEnteros",
        "length",
        "arregloEnteros",
        "Arrays",
        "copyOf",
        "arregloEnteros",
        "arregloEnteros",
        "length",
        "arraycopy",
        "arregloEnteros",
        "posicion",
        "arregloEnteros",
        "posicion",
        "arregloEnteros",
        "length",
        "posicion",
        "arregloEnteros",
        "posicion",
        "entero",
        "posicion",
        "posicion",
        "posicion",
        "arregloEnteros",
        "length",
        "arregloEnteros",
        "Arrays",
        "copyOfRange",
        "arregloEnteros",
        "arregloEnteros",
        "length",
        "arraycopy",
        "arregloEnteros",
        "posicion",
        "arregloEnteros",
        "posicion",
        "arregloEnteros",
        "length",
        "posicion",
        "valores",
        "nuevoArreglo",
        "valores",
        "length",
        "i",
        "i",
        "valores",
        "length",
        "i",
        "numeroRedondeado",
        "round",
        "valores",
        "i",
        "nuevoArreglo",
        "i",
        "numeroRedondeado",
        "arregloEnteros",
        "nuevoArreglo",
        "objetos",
        "nuevoTamanio",
        "objetos",
        "length",
        "nuevoArreglo",
        "nuevoTamanio",
        "i",
        "i",
        "objetos",
        "length",
        "i",
        "nuevoArreglo",
        "i",
        "objetos",
        "i",
        "toString",
        "arregloCadenas",
        "nuevoArreglo",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "arregloEnteros",
        "i",
        "arregloEnteros",
        "i",
        "arregloEnteros",
        "i",
        "Arrays",
        "sort",
        "arregloEnteros",
        "Arrays",
        "sort",
        "arregloCadenas",
        "valor",
        "contador",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "arregloEnteros",
        "i",
        "valor",
        "contador",
        "contador",
        "cadena",
        "contador",
        "i",
        "i",
        "arregloCadenas",
        "length",
        "i",
        "arregloCadenas",
        "i",
        "arregloCadenas",
        "i",
        "equalsIgnoreCase",
        "cadena",
        "contador",
        "contador",
        "valor",
        "numeroApariciones",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "arregloEnteros",
        "i",
        "valor",
        "numeroApariciones",
        "nuevoArreglo",
        "numeroApariciones",
        "indicePosiciones",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "arregloEnteros",
        "i",
        "valor",
        "nuevoArreglo",
        "indicePosiciones",
        "i",
        "indicePosiciones",
        "nuevoArreglo",
        "arregloEnteros",
        "arregloEnteros",
        "length",
        "arregloVacio",
        "arregloVacio",
        "minimo",
        "arregloEnteros",
        "maximo",
        "arregloEnteros",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "minimo",
        "arregloEnteros",
        "i",
        "minimo",
        "arregloEnteros",
        "i",
        "maximo",
        "arregloEnteros",
        "i",
        "maximo",
        "arregloEnteros",
        "i",
        "nuevoArreglo",
        "minimo",
        "maximo",
        "nuevoArreglo",
        "nHashMap",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "nHashMap",
        "put",
        "arregloEnteros",
        "i",
        "contarAparicionesValue",
        "arregloEnteros",
        "i",
        "nHashMap",
        "arregloEnteros",
        "arregloEnteros",
        "length",
        "contadorRepetidos",
        "contado",
        "arregloEnteros",
        "length",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "contado",
        "i",
        "j",
        "i",
        "j",
        "arregloEnteros",
        "length",
        "j",
        "contado",
        "j",
        "arregloEnteros",
        "i",
        "arregloEnteros",
        "j",
        "contadorRepetidos",
        "contado",
        "j",
        "contado",
        "i",
        "contadorRepetidos",
        "otroArreglo",
        "arregloEnteros",
        "length",
        "otroArreglo",
        "length",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "arregloEnteros",
        "i",
        "otroArreglo",
        "i",
        "otroArreglo",
        "arregloEnteros",
        "length",
        "otroArreglo",
        "length",
        "coincidentes",
        "arregloEnteros",
        "length",
        "i",
        "i",
        "arregloEnteros",
        "length",
        "i",
        "encontrado",
        "j",
        "j",
        "otroArreglo",
        "length",
        "j",
        "coincidentes",
        "j",
        "arregloEnteros",
        "i",
        "otroArreglo",
        "j",
        "encontrado",
        "coincidentes",
        "j",
        "encontrado",
        "cantidad",
        "minimo",
        "maximo",
        "arregloEnteros",
        "cantidad",
        "i",
        "i",
        "cantidad",
        "i",
        "Aleatorio",
        "random",
        "maximo",
        "minimo",
        "minimo",
        "arregloEnteros",
        "i",
        "Aleatorio"
    ],
    "literals": [],
    "variables": [
        "arregloEnteros",
        "arregloCadenas"
    ],
    "comments": [
        "Ajusta la posición si es menor a 0 o mayor que el tamaño del arreglo",
        "Contar el número de apariciones",
        "Crear el nuevo arreglo con las posiciones",
        "Llenar el nuevo arreglo con las posiciones",
        "Encontrar el mínimo y máximo",
        "Crear un nuevo arreglo con el rango",
        "No hay elementos para contar",
        "Utilizamos un arreglo para marcar si un número ha sido contado",
        "Contamos los números repetidos",
        "Marcar como contado para evitar contar repetidos múltiples veces",
        "Marcar como contado para evitar contar repetidos múltiples veces",
        "Verifica si los arreglos tienen la misma longitud",
        "Utiliza un arreglo de booleanos para marcar los elementos coincidentes",
        "Itera sobre cada elemento en arregloEnteros",
        "Itera sobre cada elemento en otroArreglo",
        "Compara el elemento actual de arregloEnteros con cada elemento en otroArreglo",
        "Marcar como coincidente",
        "Sale del bucle interno si encuentra una coincidencia",
        "Si no se encontró una coincidencia para el elemento actual de arregloEnteros, retorna false",
        "Si ha llegado hasta aquí, significa que todos los elementos son iguales"
    ],
    "docstrings": [
        "* Esta clase tiene un conjunto de métodos para practicar operaciones sobre arreglos de enteros y de cadenas.\n *\n * Todos los métodos deben operar sobre los atributos arregloEnteros y arregloCadenas.\n * \n * No pueden agregarse nuevos atributos.\n * \n * Implemente los métodos usando operaciones sobre arreglos (ie., no haga cosas como construir listas para evitar la manipulación de arreglos).",
        "* Un arreglo de enteros para realizar varias de las siguientes operaciones.\n     * \n     * Ninguna posición del arreglo puede estar vacía en ningún momento.",
        "* Un arreglo de cadenas para realizar varias de las siguientes operaciones\n     * \n     * Ninguna posición del arreglo puede estar vacía en ningún momento.",
        "* Crea una nueva instancia de la clase con los dos arreglos inicializados pero vacíos (tamaño 0)",
        "* Retorna una copia del arreglo de enteros, es decir un nuevo arreglo del mismo tamaño que contiene copias de los valores del arreglo original\n     * @return Una copia del arreglo de enteros",
        "* Retorna una copia del arreglo de cadenas, es decir un nuevo arreglo del mismo tamaño que contiene copias de los valores del arreglo original\n     * @return Una copia del arreglo de cadenas",
        "* Retorna la cantidad de valores en el arreglo de enteros\n     * @return",
        "* Retorna la cantidad de valores en el arreglo de cadenas\n     * @return",
        "* Agrega un nuevo valor al final del arreglo. Es decir que este método siempre debería aumentar en 1 la capacidad del arreglo.\n     * \n     * @param entero El valor que se va a agregar.",
        "* Agrega un nuevo valor al final del arreglo. Es decir que este método siempre debería aumentar en 1 la capacidad del arreglo.\n     * \n     * @param cadena La cadena que se va a agregar.",
        "* Elimina todas las apariciones de un determinado valor dentro del arreglo de enteros\n     * @param valor El valor que se va eliminar",
        "* Elimina todas las apariciones de un determinado valor dentro del arreglo de cadenas\n     * @param cadena La cadena que se va eliminar",
        "* Inserta un nuevo entero en el arreglo de enteros.\n     * \n     * @param entero El nuevo valor que debe agregarse\n     * @param posicion La posición donde debe quedar el nuevo valor en el arreglo aumentado. Si la posición es menor a 0, se inserta el valor en la primera posición. Si la\n     *        posición es mayor que el tamaño del arreglo, se inserta el valor en la última posición.",
        "* Elimina un valor del arreglo de enteros dada su posición.\n     * @param posicion La posición donde está el elemento que debe ser eliminado. Si el parámetro posicion no corresponde a ninguna posición del arreglo de enteros, el método\n     *        no debe hacer nada.",
        "* Reinicia el arreglo de enteros con los valores contenidos en el arreglo del parámetro 'valores' truncados.\n     * \n     * Es decir que si el valor fuera 3.67, en el nuevo arreglo de enteros debería quedar el entero 3.\n     * @param valores Un arreglo de valores decimales.",
        "* Reinicia el arreglo de cadenas con las representaciones como Strings de los objetos contenidos en el arreglo del parámetro 'objetos'.\n     * \n     * Use el método toString para convertir los objetos a cadenas.\n     * @param valores Un arreglo de objetos",
        "* Modifica el arreglo de enteros para que todos los valores sean positivos.\n     * \n     * Es decir que si en una posición había un valor negativo, después de ejecutar el método debe quedar el mismo valor muliplicado por -1.",
        "* Modifica el arreglo de enteros para que todos los valores queden organizados de menor a mayor.",
        "* Modifica el arreglo de cadenas para que todos los valores queden organizados lexicográficamente.",
        "* Cuenta cuántas veces aparece el valor recibido por parámetro en el arreglo de enteros\n     * @param valor El valor buscado\n     * @return La cantidad de veces que aparece el valor",
        "* Cuenta cuántas veces aparece la cadena recibida por parámetro en el arreglo de cadenas.\n     * \n     * La búsqueda no debe diferenciar entre mayúsculas y minúsculas.\n     * @param cadena La cadena buscada\n     * @return La cantidad de veces que aparece la cadena",
        "* Busca en qué posiciones del arreglo de enteros se encuentra el valor que se recibe en el parámetro\n     * @param valor El valor que se debe buscar\n     * @return Un arreglo con los números de las posiciones del arreglo de enteros en las que se encuentra el valor buscado. Si el valor no se encuentra, el arreglo retornado\n     *         es de tamaño 0.",
        "* Calcula cuál es el rango de los enteros (el valor mínimo y el máximo).\n     * @return Un arreglo con dos posiciones: en la primera posición, debe estar el valor mínimo en el arreglo de enteros; en la segunda posición, debe estar el valor máximo\n     *         en el arreglo de enteros. Si el arreglo está vacío, debe retornar un arreglo vacío.",
        "* Calcula un histograma de los valores del arreglo de enteros y lo devuelve como un mapa donde las llaves son los valores del arreglo y los valores son la cantidad de\n     * veces que aparece cada uno en el arreglo de enteros.\n     * @return Un mapa con el histograma de valores.",
        "* Cuenta cuántos valores dentro del arreglo de enteros están repetidos.\n     * @return La cantidad de enteos diferentes que aparecen más de una vez",
        "* Compara el arreglo de enteros con otro arreglo de enteros y verifica si son iguales, es decir que contienen los mismos elementos exactamente en el mismo orden.\n     * @param otroArreglo El arreglo de enteros con el que se debe comparar\n     * @return True si los arreglos son idénticos y false de lo contrario",
        "* Compara el arreglo de enteros con otro arreglo de enteros y verifica que tengan los mismos elementos, aunque podría ser en otro orden.\n     * @param otroArreglo El arreglo de enteros con el que se debe comparar\n     * @return True si los elementos en los dos arreglos son los mismos",
        "* Cambia los elementos del arreglo de enteros por una nueva serie de valores generada de forma aleatoria.\n     * \n     * Para generar los valores se debe partir de una distribución uniforme usando Math.random().\n     * \n     * Los números en el arreglo deben quedar entre el valor mínimo y el máximo.\n     * @param cantidad La cantidad de elementos que debe haber en el arreglo\n     * @param minimo El valor mínimo para los números generados\n     * @param maximo El valor máximo para los números generados"
    ],
    "functions": [
        "SandboxArreglos",
        "getCopiaEnteros",
        "getCopiaCadenas",
        "getCantidadEnteros",
        "getCantidadCadenas",
        "agregarEntero",
        "agregarCadena",
        "eliminarEntero",
        "eliminarCadena",
        "insertarEntero",
        "eliminarEnteroPorPosicion",
        "reiniciarArregloEnteros",
        "reiniciarArregloCadenas",
        "volverPositivos",
        "organizarEnteros",
        "organizarCadenas",
        "contarAparicionesValue",
        "contarAparicionescadena",
        "buscarEntero",
        "calcularRangoEnteros",
        "calcularHistograma",
        "contarEnterosRepetidos",
        "compararArregloEnteros",
        "mismosEnteros",
        "generarEnteros"
    ],
    "classes": [
        "SandboxArreglos"
    ]
}