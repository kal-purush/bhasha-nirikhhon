{
    "identifiers": [
        "com",
        "android",
        "phone",
        "security",
        "android",
        "safetycenter",
        "SafetyCenterManager",
        "ACTION_REFRESH_SAFETY_SOURCES",
        "android",
        "safetycenter",
        "SafetyCenterManager",
        "EXTRA_REFRESH_SAFETY_SOURCES_BROADCAST_ID",
        "org",
        "mockito",
        "ArgumentMatchers",
        "org",
        "mockito",
        "Mockito",
        "mock",
        "org",
        "mockito",
        "Mockito",
        "org",
        "mockito",
        "Mockito",
        "spy",
        "org",
        "mockito",
        "Mockito",
        "times",
        "org",
        "mockito",
        "Mockito",
        "verify",
        "org",
        "mockito",
        "Mockito",
        "when",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "Intent",
        "android",
        "content",
        "pm",
        "PackageManager",
        "android",
        "platform",
        "test",
        "flag",
        "junit",
        "SetFlagsRule",
        "androidx",
        "test",
        "ext",
        "junit",
        "runners",
        "AndroidJUnit4",
        "com",
        "android",
        "telephony",
        "Phone",
        "com",
        "android",
        "telephony",
        "flags",
        "Flags",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Rule",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "mockito",
        "Answers",
        "org",
        "mockito",
        "Mock",
        "org",
        "mockito",
        "MockitoAnnotations",
        "RunWith",
        "Rule",
        "mSetFlagsRule",
        "Mock",
        "answer",
        "Answers",
        "RETURNS_DEEP_STUBS",
        "mContext",
        "mSafetySourceReceiver",
        "Before",
        "MockitoAnnotations",
        "initMocks",
        "receiver",
        "mSafetySourceReceiver",
        "spy",
        "receiver",
        "Test",
        "mSetFlagsRule",
        "enableFlags",
        "Flags",
        "FLAG_ENABLE_IDENTIFIER_DISCLOSURE_TRANSPARENCY_UNSOL_EVENTS",
        "Flags",
        "FLAG_ENABLE_MODEM_CIPHER_TRANSPARENCY_UNSOL_EVENTS",
        "mockPhone",
        "mock",
        "when",
        "mSafetySourceReceiver",
        "getDefaultPhone",
        "thenReturn",
        "mockPhone",
        "intent",
        "ACTION_REFRESH_SAFETY_SOURCES",
        "intent",
        "putExtra",
        "EXTRA_REFRESH_SAFETY_SOURCES_BROADCAST_ID",
        "mSafetySourceReceiver",
        "onReceive",
        "mContext",
        "intent",
        "verify",
        "mockPhone",
        "times",
        "refreshSafetySources",
        "Test",
        "mSetFlagsRule",
        "disableFlags",
        "Flags",
        "FLAG_ENABLE_IDENTIFIER_DISCLOSURE_TRANSPARENCY_UNSOL_EVENTS",
        "Flags",
        "FLAG_ENABLE_MODEM_CIPHER_TRANSPARENCY_UNSOL_EVENTS",
        "intent",
        "ACTION_REFRESH_SAFETY_SOURCES",
        "intent",
        "putExtra",
        "EXTRA_REFRESH_SAFETY_SOURCES_BROADCAST_ID",
        "mSafetySourceReceiver",
        "onReceive",
        "mContext",
        "intent",
        "verify",
        "mSafetySourceReceiver",
        "getDefaultPhone",
        "Test",
        "mSetFlagsRule",
        "enableFlags",
        "Flags",
        "FLAG_ENABLE_IDENTIFIER_DISCLOSURE_TRANSPARENCY_UNSOL_EVENTS",
        "Flags",
        "FLAG_ENABLE_MODEM_CIPHER_TRANSPARENCY_UNSOL_EVENTS",
        "Flags",
        "FLAG_ENFORCE_TELEPHONY_FEATURE_MAPPING_FOR_PUBLIC_APIS",
        "when",
        "mSafetySourceReceiver",
        "getDefaultPhone",
        "thenReturn",
        "when",
        "mContext",
        "getPackageManager",
        "hasSystemFeature",
        "PackageManager",
        "FEATURE_TELEPHONY",
        "thenReturn",
        "intent",
        "ACTION_REFRESH_SAFETY_SOURCES",
        "intent",
        "putExtra",
        "EXTRA_REFRESH_SAFETY_SOURCES_BROADCAST_ID",
        "mSafetySourceReceiver",
        "onReceive",
        "mContext",
        "intent",
        "Test",
        "mSetFlagsRule",
        "enableFlags",
        "Flags",
        "FLAG_ENABLE_IDENTIFIER_DISCLOSURE_TRANSPARENCY_UNSOL_EVENTS",
        "Flags",
        "FLAG_ENABLE_MODEM_CIPHER_TRANSPARENCY_UNSOL_EVENTS",
        "Flags",
        "FLAG_ENFORCE_TELEPHONY_FEATURE_MAPPING_FOR_PUBLIC_APIS",
        "when",
        "mContext",
        "getPackageManager",
        "hasSystemFeature",
        "PackageManager",
        "FEATURE_TELEPHONY",
        "thenReturn",
        "mockPhone",
        "mock",
        "when",
        "mSafetySourceReceiver",
        "getDefaultPhone",
        "thenReturn",
        "mockPhone",
        "intent",
        "ACTION_REFRESH_SAFETY_SOURCES",
        "intent",
        "putExtra",
        "EXTRA_REFRESH_SAFETY_SOURCES_BROADCAST_ID",
        "mSafetySourceReceiver",
        "onReceive",
        "mContext",
        "intent",
        "verify",
        "mockPhone",
        "refreshSafetySources"
    ],
    "literals": [
        "\"aBroadcastId\"",
        "\"aBroadcastId\"",
        "\"aBroadcastId\"",
        "\"aBroadcastId\"",
        "\"aBroadcastId\""
    ],
    "variables": [
        "mContext",
        "mSafetySourceReceiver"
    ],
    "comments": [
        "this call succeeding without a NPE means this test has passed. There are no observable",
        "side effects to a null Phone, because all side effects happen on the Phone instance."
    ],
    "docstrings": [
        "* Copyright (C) 2024 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "setUp",
        "testOnReceive",
        "testOnReceive_featureFlagsOff",
        "testOnReceive_phoneNotReadyYet",
        "testOnReceive_noTelephonyFeature"
    ],
    "classes": [
        "SafetySourceReceiverTest"
    ]
}