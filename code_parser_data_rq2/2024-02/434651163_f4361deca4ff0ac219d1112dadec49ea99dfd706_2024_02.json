{
    "identifiers": [
        "expectFileMetric",
        "getParserConfiguration",
        "testFileMetrics",
        "FileMetric",
        "MetricResult",
        "GenericParser",
        "fs",
        "describe",
        "beforeAll",
        "fs",
        "cppTestResourcesPath",
        "GenericParser",
        "getParserConfiguration",
        "realInputPath",
        "results",
        "parser",
        "describe",
        "it",
        "expectFileMetric",
        "results",
        "cppTestResourcesPath",
        "FileMetric",
        "it",
        "expectFileMetric",
        "results",
        "cppTestResourcesPath",
        "FileMetric",
        "it",
        "expectFileMetric",
        "results",
        "cppTestResourcesPath",
        "FileMetric",
        "it",
        "expectFileMetric",
        "results",
        "cppTestResourcesPath",
        "FileMetric"
    ],
    "literals": [
        "\"./TestHelper\"",
        "\"../../src/parser/metrics/Metric\"",
        "\"../../src/parser/GenericParser\"",
        "\"fs\"",
        "\"C++ metrics tests\"",
        "\"./resources/c++/\"",
        "string",
        "string",
        "\"parses C++ real lines of code metric\"",
        "\"should count correctly for a non-empty file, ignoring comments and empty lines\"",
        "\"cpp_example_code.cpp\"",
        "\"should count correctly for an empty file\"",
        "\"empty.cpp\"",
        "\"should count correctly for a header file\"",
        "\"cpp_example_header.hpp\"",
        "\"should count correctly if there are comments in the same line as actual code\"",
        "\"same_line_comment.cpp\""
    ],
    "variables": [
        "cppTestResourcesPath",
        "results",
        "realInputPath",
        "parser"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}