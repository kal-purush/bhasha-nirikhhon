{
    "identifiers": [
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "cUrl",
        "cUrl",
        "cUrl",
        "cUrl",
        "$",
        "$",
        "cUrl",
        "$",
        "$",
        "$",
        "$",
        "e",
        "$",
        "e",
        "$",
        "$",
        "resizeBroadcast",
        "setInterval",
        "timesRun",
        "timesRun",
        "clearInterval",
        "interval",
        "navigator",
        "navigator",
        "evt",
        "evt",
        "Event",
        "$",
        "$",
        "resizeBroadcast",
        "$",
        "$",
        "resizeBroadcast",
        "$",
        "$",
        "$",
        "$",
        "resizeBroadcast",
        "$",
        "$",
        "resizeBroadcast",
        "$",
        "$",
        "$",
        "e",
        "e",
        "$",
        "e",
        "e",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "url",
        "$",
        "$",
        "fn",
        "fn",
        "toStr",
        "fn",
        "value",
        "value",
        "isNaN",
        "number",
        "number",
        "isFinite",
        "number",
        "number",
        "number",
        "number",
        "value",
        "toInteger",
        "value",
        "len",
        "maxSafeInteger",
        "arrayLike",
        "arrayLike",
        "arrayLike",
        "arguments",
        "arguments",
        "mapFn",
        "isCallable",
        "mapFn",
        "arguments",
        "T",
        "arguments",
        "toLength",
        "items",
        "isCallable",
        "C",
        "C",
        "len",
        "len",
        "k",
        "len",
        "kValue",
        "items",
        "k",
        "mapFn",
        "A",
        "k",
        "T",
        "mapFn",
        "kValue",
        "k",
        "mapFn",
        "T",
        "kValue",
        "k",
        "A",
        "k",
        "kValue",
        "k",
        "A",
        "len",
        "A",
        "searchElement",
        "fromIndex",
        "o",
        "len",
        "fromIndex",
        "n",
        "n",
        "len",
        "n",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "isNaN",
        "x",
        "isNaN",
        "y",
        "k",
        "len",
        "sameValueZero",
        "o",
        "k",
        "searchElement",
        "k"
    ],
    "literals": [
        "'nav > ul.nav'",
        "'icon-arrow-up'",
        "'icon-arrow-down'",
        "'#20a8d8'",
        "'#4dbd74'",
        "'#63c2de'",
        "'#f8cb00'",
        "'#f86c6b'",
        "'#2a2c36'",
        "'#55595c'",
        "'#818a91'",
        "'#d1d4d7'",
        "'#f8f9fa'",
        "'use strict'",
        "'a'",
        "'?'",
        "'#'",
        "'active'",
        "'ul'",
        "'open'",
        "'click'",
        "'a'",
        "'nav-dropdown-toggle'",
        "'open'",
        "'MSIE'",
        "'Trident/'",
        "'UIEvents'",
        "'resize'",
        "'resize'",
        "'.sidebar-toggler'",
        "'body'",
        "'sidebar-hidden'",
        "'.sidebar-minimizer'",
        "'body'",
        "'sidebar-minimized'",
        "'.brand-minimizer'",
        "'body'",
        "'brand-minimized'",
        "'.aside-menu-toggler'",
        "'body'",
        "'aside-menu-hidden'",
        "'.mobile-sidebar-toggler'",
        "'body'",
        "'sidebar-mobile-show'",
        "'.sidebar-close'",
        "'body'",
        "'sidebar-opened'",
        "'sidebar-opened'",
        "'a[href=\"#\"][data-top!=true]'",
        "'click'",
        "'.card-actions a'",
        "'btn-close'",
        "'btn-minimize'",
        "'.card-body'",
        "'collapsed'",
        "'i'",
        "'i'",
        "'btn-setting'",
        "'#myModal'",
        "'show'",
        "'[rel=\"tooltip\"],[data-rel=\"tooltip\"]'",
        "\"placement\"",
        "\"bottom\"",
        "'[rel=\"popover\"],[data-rel=\"popover\"],[data-toggle=\"popover\"]'",
        "'function'",
        "'[object Function]'",
        "'Array.from requires an array-like object - not null or undefined'",
        "'undefined'",
        "'Array.from: when provided, the second argument must be a function'",
        "'undefined'",
        "'includes'",
        "'\"this\" is null or not defined'",
        "'number'",
        "'number'"
    ],
    "variables": [
        "cUrl",
        "timesRun",
        "interval",
        "evt",
        "$target",
        "toStr",
        "isCallable",
        "toInteger",
        "number",
        "maxSafeInteger",
        "toLength",
        "len",
        "C",
        "items",
        "mapFn",
        "T",
        "len",
        "A",
        "k",
        "kValue",
        "o",
        "len",
        "n",
        "k"
    ],
    "comments": [
        "Main navigation",
        "Default colours",
        "Add class .active to current link",
        "Dropdown Menu",
        "---------- Main Menu Open/Close, Min/Full ----------",
        "---------- Disable moving to top ----------",
        "---------- Tooltip ----------",
        "---------- Popover ----------",
        "Production steps of ECMA-262, Edition 6, 22.1.2.1",
        "The length property of the from method is 1.",
        ", mapFn, thisArg",
        "1. Let C be the this value.",
        "2. Let items be ToObject(arrayLike).",
        "3. ReturnIfAbrupt(items).",
        "4. If mapfn is undefined, then let mapping be false.",
        "5. else",
        "5. a If IsCallable(mapfn) is false, throw a TypeError exception.",
        "5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.",
        "10. Let lenValue be Get(items, \"length\").",
        "11. Let len be ToLength(lenValue).",
        "13. If IsConstructor(C) is true, then",
        "13. a. Let A be the result of calling the [[Construct]] internal method",
        "of C with an argument list containing the single item len.",
        "14. a. Else, Let A be ArrayCreate(len).",
        "16. Let k be 0.",
        "17. Repeat, while k < len… (also steps a - h)",
        "18. Let putStatus be Put(A, \"length\", len, true).",
        "20. Return A.",
        "https://tc39.github.io/ecma262/#sec-array.prototype.includes",
        "1. Let O be ? ToObject(this value).",
        "2. Let len be ? ToLength(? Get(O, \"length\")).",
        "3. If len is 0, return false.",
        "4. Let n be ? ToInteger(fromIndex).",
        "(If fromIndex is undefined, this step produces the value 0.)",
        "5. If n ≥ 0, then",
        "a. Let k be n.",
        "6. Else n < 0,",
        "a. Let k be len + n.",
        "b. If k < 0, let k be 0.",
        "7. Repeat, while k < len",
        "a. Let elementK be the result of ? Get(O, ! ToString(k)).",
        "b. If SameValueZero(searchElement, elementK) is true, return true.",
        "c. Increase k by 1.",
        "8. Return false"
    ],
    "docstrings": [
        "***\n* CONFIGURATION",
        "**\n* MAIN NAVIGATION",
        "**\n* CARDS ACTIONS"
    ],
    "functions": [
        "resizeBroadcast",
        "capitalizeFirstLetter",
        "init",
        "sameValueZero"
    ],
    "classes": []
}