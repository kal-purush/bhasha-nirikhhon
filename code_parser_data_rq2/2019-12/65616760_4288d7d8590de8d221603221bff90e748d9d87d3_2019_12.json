{
    "identifiers": [
        "com",
        "minecolonies",
        "api",
        "entity",
        "com",
        "google",
        "common",
        "collect",
        "Sets",
        "com",
        "minecolonies",
        "api",
        "util",
        "Log",
        "net",
        "minecraft",
        "entity",
        "MobEntity",
        "net",
        "minecraft",
        "entity",
        "ai",
        "goal",
        "Goal",
        "net",
        "minecraft",
        "entity",
        "ai",
        "goal",
        "GoalSelector",
        "net",
        "minecraft",
        "entity",
        "ai",
        "goal",
        "PrioritizedGoal",
        "net",
        "minecraft",
        "profiler",
        "IProfiler",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "jetbrains",
        "annotations",
        "NotNull",
        "java",
        "lang",
        "reflect",
        "Field",
        "java",
        "util",
        "java",
        "util",
        "stream",
        "Stream",
        "DUMMY",
        "MAX_VALUE",
        "flagGoalsArray",
        "FLAG_COUNT",
        "goals",
        "Sets",
        "newHashSet",
        "profiler",
        "disabledFlagsArray",
        "FLAG_COUNT",
        "FLAG_COUNT",
        "Goal",
        "Flag",
        "values",
        "length",
        "counter",
        "NotNull",
        "old",
        "old",
        "profiler",
        "importFrom",
        "old",
        "goals",
        "goals",
        "NotNull",
        "profiler",
        "profiler",
        "profiler",
        "profiler",
        "goals",
        "goals",
        "flag",
        "Goal",
        "Flag",
        "values",
        "flagGoalsArray",
        "flag",
        "ordinal",
        "DUMMY",
        "selector",
        "selector",
        "flag",
        "Goal",
        "Flag",
        "values",
        "flagGoalsArray",
        "flag",
        "ordinal",
        "selector",
        "flagGoals",
        "getOrDefault",
        "flag",
        "DUMMY",
        "goals",
        "selector",
        "goals",
        "profiler",
        "selector",
        "profiler",
        "flag",
        "selector",
        "disabledFlags",
        "disabledFlagsArray",
        "flag",
        "ordinal",
        "priority",
        "task",
        "goals",
        "add",
        "priority",
        "task",
        "task",
        "goals",
        "stream",
        "goal",
        "goal",
        "getGoal",
        "task",
        "PrioritizedGoal",
        "isRunning",
        "forEach",
        "PrioritizedGoal",
        "resetTask",
        "goals",
        "removeIf",
        "goal",
        "goal",
        "getGoal",
        "task",
        "goal",
        "flag",
        "goal",
        "getMutexFlags",
        "disabledFlagsArray",
        "flag",
        "ordinal",
        "goal1",
        "flag",
        "goal1",
        "getMutexFlags",
        "compareGoal",
        "flagGoalsArray",
        "flag",
        "ordinal",
        "compareGoal",
        "isRunning",
        "compareGoal",
        "isPreemptedBy",
        "goal1",
        "profiler",
        "startSection",
        "i",
        "i",
        "FLAG_COUNT",
        "i",
        "goalToRun",
        "flagGoalsArray",
        "i",
        "goalToRun",
        "isRunning",
        "goalContainsDisabledFlag",
        "goalToRun",
        "goalToRun",
        "shouldContinueExecuting",
        "goalToRun",
        "resetTask",
        "counter",
        "currentGoal",
        "goals",
        "currentGoal",
        "isRunning",
        "goalContainsDisabledFlag",
        "currentGoal",
        "isPreemptedByAll",
        "currentGoal",
        "currentGoal",
        "shouldExecute",
        "flag",
        "currentGoal",
        "getMutexFlags",
        "prioritizedgoal",
        "flagGoalsArray",
        "flag",
        "ordinal",
        "prioritizedgoal",
        "resetTask",
        "flagGoalsArray",
        "flag",
        "ordinal",
        "currentGoal",
        "currentGoal",
        "startExecuting",
        "counter",
        "counter",
        "profiler",
        "endSection",
        "profiler",
        "startSection",
        "i",
        "i",
        "FLAG_COUNT",
        "i",
        "goalToRun",
        "flagGoalsArray",
        "i",
        "goalToRun",
        "isRunning",
        "goalToRun",
        "tick",
        "profiler",
        "endSection",
        "flagGoals",
        "values",
        "stream",
        "PrioritizedGoal",
        "isRunning",
        "flag",
        "disabledFlagsArray",
        "flag",
        "ordinal",
        "flag",
        "disabledFlagsArray",
        "flag",
        "ordinal",
        "flag",
        "enabled",
        "enabled",
        "enableFlag",
        "flag",
        "disableFlag",
        "flag"
    ],
    "literals": [
        "\"goalUpdate\"",
        "\"goalTick\""
    ],
    "variables": [
        "profiler"
    ],
    "comments": [
        "import current goals for flags",
        "Set goal list reference to existing",
        "Set profiler reference",
        "Set which flags are disabled",
        "Vanilla behaviour changed to checking it each tick with 1.14"
    ],
    "docstrings": [
        "* A simplified goal selector, for more performance.",
        "* Dummy Goal, used for filling up the list.",
        "* By vanilla design there is max 1 running goal per flag, which is running is determined by priorities. This array contains the current goal for each flag.",
        "* All goals added to this selector",
        "* Profiler used for debug information /debug",
        "* Array of flags, true if currently disabled",
        "* Amount of flags.",
        "* Tick counter",
        "* Create a new goalselector from an existing one, simply re-uses the references.\n     *\n     * @param old the old selector to use",
        "* Creates a new customgoalselector with the given profiler.\n     *\n     * @param profiler the profiler to use, usually attached to a world object",
        "* Imports values from another selector\n     *\n     * @param selector selector to import from",
        "* Add a now AITask. Args : priority, task",
        "* removes the indicated task from the entity's AI tasks.",
        "* Whether the goals flag are within the disabled flags.\n     *\n     * @param goal\n     * @return",
        "* Returns whether the given goal is higher priority in all flags it uses than existing running goals.\n     * @param goal1 goal to check\n     * @return true if it overrules the existing goal.",
        "* Ticks this selector, first checks running goals to stop, then checks all goals to see which should start running. Finally ticks all running goals\n     * Performance wise this is about 6 times faster, when checking at the same rate as the vanilla one, resulting in about 3-4 times less time spent updating and executing AI goals.\n     * When updating non-running goals only every 4 ticks it goes up to about 10% of vanilla's time spent for the whole update goals and their execution.",
        "* Gets all goals currently running\n     *\n     * @return",
        "* Disables the given flag\n     *\n     * @param flag",
        "* Enables the given flag\n     *\n     * @param flag",
        "* Sets the flag to enabled or disabled\n     *\n     * @param flag    Flag to set\n     * @param enabled enable or disable it"
    ],
    "functions": [
        "shouldExecute",
        "isRunning",
        "CustomGoalSelector",
        "CustomGoalSelector",
        "importFrom",
        "addGoal",
        "removeGoal",
        "goalContainsDisabledFlag",
        "isPreemptedByAll",
        "tick",
        "getRunningGoals",
        "disableFlag",
        "enableFlag",
        "setFlag"
    ],
    "classes": [
        "CustomGoalSelector"
    ]
}