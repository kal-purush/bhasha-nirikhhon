{
    "identifiers": [
        "Uri",
        "Utils",
        "util",
        "execFile",
        "process",
        "platform",
        "platform",
        "DiagnosticProvider",
        "DiagnosticProvider",
        "DiagnosticProvider",
        "DiagnosticProvider",
        "msg",
        "msg",
        "msg",
        "Utils",
        "msg",
        "cmd",
        "args",
        "ctx",
        "resolve",
        "reject",
        "execFile",
        "cmd",
        "args",
        "error",
        "stdout",
        "error",
        "resolve",
        "error",
        "code",
        "code",
        "resolve",
        "stdout",
        "reject",
        "error",
        "child",
        "ctx",
        "rawUri",
        "ctx",
        "Uri",
        "rawUri",
        "uri",
        "path",
        "ctx",
        "msg",
        "e",
        "Utils",
        "e",
        "Utils",
        "e",
        "uri",
        "ctx",
        "uri",
        "uri",
        "ctx"
    ],
    "literals": [
        "'vscode-uri'",
        "'./utils'",
        "'util'",
        "\"child_process\"",
        "string",
        "string",
        "string",
        "\"luackeck\"",
        "\"win32\"",
        "\"../../../luacheck/luacheck_0.23.0.exe\"",
        "\"linux\"",
        "\"../../../luacheck/luacheck_0.23.0\"",
        "string",
        "\"\"",
        "string",
        "string",
        "string",
        "\"\"",
        "string",
        "string",
        "'--codes'",
        "'--ranges'",
        "'--formatter'",
        "'plain'",
        "'--filename'",
        "'-'",
        "luacheck ${JSON.stringify(e)}",
        "string",
        "string"
    ],
    "variables": [
        "platform",
        "child",
        "code",
        "uri",
        "path",
        "msg"
    ],
    "comments": [
        "lint 代码检查",
        "对应child_process.execFile的Option字段",
        "default 0",
        "Largest amount of data in bytes allowed on stdout or stderr. If exceeded,",
        "the child process is terminated and any output is truncated. See caveat",
        "at maxBuffer and Unicode. Default: 1024 * 1024.",
        "正在等待检查的文件，key为uri",
        "https://nodejs.org/api/process.html#process_process_platform",
        "其他平台默认要把luacheck添加到path",
        "https://luacheck.readthedocs.io/en/stable/config.html",
        "luacheck tries to load configuration from .luacheckrc file in the",
        "current directory. If not found, it will look for it in the parent",
        "directory and so on, going up until it reaches file system root",
        "luacheck chooses exit code as follows:\n     * Exit code is 0 if no warnings or errors occurred.\n     * Exit code is 1 if some warnings occurred but there were no syntax errors or invalid inline options.\n     * Exit code is 2 if there were some syntax errors or invalid inline options.\n     * Exit code is 3 if some files couldn’t be checked, typically due to an incorrect file name.\n     * Exit code is 4 if there was a critical error (invalid CLI arguments, config, or cache file).",
        "https://nodejs.org/api/child_process.html",
        "判断一下文件是否还存在，可能被删除了",
        "用promisify没找到输入stdin的方法",
        "const procExecFile = util.promisify(execFile);",
        "await procExecFile(this.cmd, ['--filename', path, '-'], this.option);",
        "日志里显示是错误还是警告(例如：W211)",
        "日志里显示有问题的范围",
        "日志格式，plain表示一个警告一个错误一行",
        "文件名，由于是从stdin输入",
        "需要指定一个文件名，这样在输入日志的时候才有文件名",
        "表示从stdin读取内容",
        "已经在等待检查，不用处理"
    ],
    "docstrings": [],
    "functions": [
        "instance",
        "toDiagnostic",
        "runCheck",
        "rawCheck",
        "check"
    ],
    "classes": [
        "DiagnosticProvider"
    ]
}