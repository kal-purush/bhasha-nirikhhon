{
    "identifiers": [
        "io",
        "os",
        "sys",
        "six",
        "brewtils",
        "errors",
        "ValidationError",
        "client",
        "client",
        "bytes_parameter",
        "writer",
        "client",
        "stream_to_sink",
        "bytes_parameter",
        "writer",
        "value",
        "sys",
        "version_info",
        "io",
        "IOBase",
        "file",
        "io",
        "IOBase",
        "isinstance",
        "value",
        "_upload_dict",
        "value",
        "isinstance",
        "value",
        "six",
        "string_types",
        "_upload_filename",
        "value",
        "isinstance",
        "value",
        "file_types",
        "_upload_file_descriptor",
        "value",
        "ValidationError",
        "value",
        "value",
        "value",
        "value",
        "value",
        "ValidationError",
        "_upload_filename",
        "value",
        "value",
        "get",
        "filename",
        "desired_filename",
        "os",
        "path",
        "isfile",
        "filename",
        "ValidationError",
        "filename",
        "desired_filename",
        "os",
        "path",
        "basename",
        "filename",
        "open",
        "filename",
        "file_to_upload",
        "_upload_file_descriptor",
        "file_to_upload",
        "desired_filename",
        "fd",
        "filename",
        "filename",
        "hasattr",
        "fd",
        "os",
        "path",
        "basename",
        "fd",
        "name",
        "filename",
        "fd",
        "client",
        "upload_file",
        "fd",
        "filename"
    ],
    "literals": [
        "\"id\"",
        "\"Do not know how to upload bytes type %s\"",
        "\"id\"",
        "\"filename\"",
        "\"When uploading a bytes object as a dictionary, you must include a 'filename' key.\"",
        "\"filename\"",
        "\"desired_filename\"",
        "\"Cannot upload a bytes object if the file does not exist %s\"",
        "\"rb\"",
        "\"name\""
    ],
    "variables": [
        "client",
        "file_types",
        "file_types",
        "desired_filename",
        "filename",
        "filename"
    ],
    "comments": [
        "noqa: F821"
    ],
    "docstrings": [
        "\"\"\"Bytes-Resolver for GridFS\n\n    Resolvers are meant to be written for specific storage types.\n    In this case, we are just simply using the API to stream bytes\n    into a file.\n\n    This class is meant to be used transparently to Plugin developers.\n    Resolvers respond to two methods:\n\n    * `upload(value)`\n    * `download(bytes_parameter, writer)`\n\n    Attributes:\n        client: A `brewtils.EasyClient`\n    \"\"\"",
        "\"\"\"Download the given bytes parameter.\n\n        Args:\n            bytes_parameter: A specific request's parameter value.\n            writer: File-like object that has a `write` method.\n        \"\"\"",
        "\"\"\"Upload the given value to the server if necessary.\n\n        The value can be one of the following:\n\n        1. A dictionary with a storage_type and filename.\n        2. A string pointing to a valid filename.\n        3. An open file descriptor.\n\n        If you use a dictionary, and include an \"id\" the resolver will\n        assume you have already uploaded the file, and skip doing it for you.\n\n        Args:\n            value: Value to upload.\n\n        Returns:\n            A valid dictionary to use as a bytes parameter.\n        \"\"\""
    ],
    "functions": [
        "download",
        "upload",
        "_upload_dict",
        "_upload_filename",
        "_upload_file_descriptor"
    ],
    "classes": [
        "GridfsResolver"
    ]
}