{
    "identifiers": [
        "dragonfly",
        "dragonfly",
        "Choice",
        "name",
        "DIRECTION_STANDARD",
        "Choice",
        "name",
        "DIRECTION_STANDARD",
        "dragonfly",
        "engines",
        "get_engine",
        "_name",
        "Choice",
        "comma"
    ],
    "literals": [
        "\"sauce [E]\"",
        "\"up\"",
        "\"dunce [E]\"",
        "\"down\"",
        "\"lease [E]\"",
        "\"left\"",
        "\"ross [E]\"",
        "\"right\"",
        "\"back\"",
        "\"left\"",
        "'natlink'",
        "\"(comma | ,)\"",
        "\"comma\"",
        "\"target\"",
        "\",\"",
        "\"(period | dot)\"",
        "\".\"",
        "\"(pair | parentheses)\"",
        "\"(~)\"",
        "\"[square] (bracket | brackets)\"",
        "\"[~]\"",
        "\"curly [brace]\"",
        "\"{~}\"",
        "\"loop\"",
        "\"for~while\"",
        "\"L paren\"",
        "\"(\"",
        "\"are paren\"",
        "\")\"",
        "\"openers\"",
        "\"(~[~{\"",
        "\"closers\"",
        "\"}~]~)\"",
        "\"token\"",
        "\"TOKEN\""
    ],
    "variables": [
        "DIRECTION_STANDARD",
        "comma",
        "comma",
        "TARGET_CHOICE"
    ],
    "comments": [
        "Insurers comma is recognized consistently with DNS/Natlink",
        "if/else statement workaround engines that do not expect punctuation symbol as a command"
    ],
    "docstrings": [
        "'''\nTarget Choice Note: distinct token types were removed because\nA) a general purpose fill token is easier to remember than 10 of them, and\nB) the user of a programming language will know what they're supposed to get filled with\n'''"
    ],
    "functions": [
        "get_direction_choice"
    ],
    "classes": []
}