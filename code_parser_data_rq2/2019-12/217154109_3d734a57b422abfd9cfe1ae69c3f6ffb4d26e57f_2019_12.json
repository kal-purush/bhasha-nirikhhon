{
    "identifiers": [
        "keras",
        "pred",
        "keras",
        "backend",
        "sum",
        "keras",
        "backend",
        "cast",
        "pred",
        "dtype",
        "keras",
        "backend",
        "sum",
        "keras",
        "backend",
        "sum",
        "num_pred",
        "keras",
        "backend",
        "epsilon",
        "keras",
        "backend",
        "sum",
        "keras",
        "backend",
        "cast",
        "pred",
        "dtype",
        "num_pred",
        "keras",
        "backend",
        "epsilon",
        "zero_weight",
        "one_weight",
        "keras",
        "backend",
        "binary_crossentropy",
        "pred",
        "weight_vector",
        "bin_crossentropy",
        "keras",
        "backend",
        "mean",
        "weighted_bin_crossentropy"
    ],
    "literals": [],
    "variables": [
        "num_pred",
        "zero_weight",
        "one_weight",
        "weight_vector",
        "bin_crossentropy",
        "weighted_bin_crossentropy"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "get the total number of inputs",
        "get weight of values in 'pos' category",
        "get weight of values in 'false' category",
        "calculate the weight vector",
        "calculate the binary cross entropy",
        "apply the weights"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Thu Feb 28 15:09:26 2019\n\n@author: lhuang\n\"\"\"",
        "\"\"\"\n    Calculates weighted binary cross entropy. The weights are determined dynamically\n    by the balance of each category. This weight is calculated for each batch.\n    \n    The weights are calculted by determining the number of 'pos' and 'neg' classes \n    in the true labels, then dividing by the number of total predictions.\n    \n    For example if there is 1 pos class, and 99 neg class, then the weights are 1/100 and 99/100.\n    These weights can be applied so false negatives are weighted 99/100, while false postives are weighted\n    1/100. This prevents the classifier from labeling everything negative and getting 99% accuracy.\n    \n    This can be useful for unbalanced catagories.\n\n    \"\"\""
    ],
    "functions": [
        "dyn_weighted_bincrossentropy"
    ],
    "classes": []
}