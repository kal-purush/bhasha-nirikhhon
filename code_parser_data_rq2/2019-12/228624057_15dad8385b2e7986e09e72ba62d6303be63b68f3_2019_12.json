{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "sys",
        "os",
        "pandas",
        "core",
        "indexes",
        "sys",
        "modules",
        "pandas",
        "core",
        "indexes",
        "time",
        "yaml",
        "keras",
        "tensorflow",
        "tf",
        "keras",
        "models",
        "Sequential",
        "keras",
        "layers",
        "Dense",
        "Dropout",
        "Flatten",
        "Conv3D",
        "MaxPooling3D",
        "BatchNormalization",
        "Activation",
        "keras",
        "callbacks",
        "EarlyStopping",
        "keras",
        "backend",
        "tensorflow_backend",
        "set_session",
        "keras",
        "utils",
        "multi_gpu_model",
        "sklearn",
        "metrics",
        "roc_auc_score",
        "sklearn",
        "model_selection",
        "ParameterGrid",
        "keras_helper",
        "helper",
        "plotting_helper",
        "imaging_predictive_models",
        "os",
        "environ",
        "os",
        "environ",
        "tf",
        "ConfigProto",
        "config",
        "gpu_options",
        "config",
        "gpu_options",
        "set_session",
        "tf",
        "Session",
        "config",
        "config",
        "np",
        "random",
        "seed",
        "tf",
        "set_random_seed",
        "loader",
        "node",
        "loader",
        "construct_sequence",
        "node",
        "join",
        "i",
        "i",
        "seq",
        "yaml",
        "add_constructor",
        "join",
        "yaml",
        "load",
        "open",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "tuning_params",
        "update",
        "arc_params",
        "imaging_dataset",
        "dataset_name",
        "data",
        "assign_train_val_test_sets",
        "splits_path",
        "test_size",
        "val_size",
        "num_splits",
        "i",
        "num_splits",
        "i",
        "sets",
        "current_split_num",
        "sets",
        "current_split_num",
        "values",
        "sets",
        "current_split_num",
        "sets",
        "current_split_num",
        "values",
        "sets",
        "current_split_num",
        "sets",
        "current_split_num",
        "values",
        "def_params",
        "pd",
        "get_dummies",
        "y_tr",
        "pd",
        "get_dummies",
        "y_val",
        "pd",
        "get_dummies",
        "y_te",
        "time",
        "time",
        "tune",
        "ParameterGrid",
        "tuning_params",
        "j",
        "current_split_num",
        "comb",
        "j",
        "os",
        "path",
        "isfile",
        "model_path",
        "Sequential",
        "model",
        "add",
        "Conv3D",
        "tune",
        "tune",
        "strides",
        "tune",
        "padding",
        "kernel_regularizer",
        "keras",
        "regularizers",
        "l2",
        "tune",
        "input_shape",
        "model",
        "add",
        "Activation",
        "def_params",
        "model",
        "add",
        "MaxPooling3D",
        "pool_size",
        "tune",
        "model",
        "add",
        "Conv3D",
        "tune",
        "tune",
        "strides",
        "tune",
        "padding",
        "kernel_regularizer",
        "keras",
        "regularizers",
        "l2",
        "tune",
        "model",
        "add",
        "Activation",
        "def_params",
        "model",
        "add",
        "MaxPooling3D",
        "pool_size",
        "tune",
        "model",
        "add",
        "Conv3D",
        "tune",
        "tune",
        "strides",
        "tune",
        "padding",
        "kernel_regularizer",
        "keras",
        "regularizers",
        "l2",
        "tune",
        "model",
        "add",
        "Activation",
        "def_params",
        "model",
        "add",
        "MaxPooling3D",
        "pool_size",
        "tune",
        "model",
        "add",
        "Flatten",
        "model",
        "add",
        "Dense",
        "tune",
        "tune",
        "activation",
        "def_params",
        "kernel_regularizer",
        "keras",
        "regularizers",
        "l2",
        "tune",
        "model",
        "add",
        "Dropout",
        "tune",
        "def_params",
        "model",
        "add",
        "Dense",
        "activation",
        "def_params",
        "kernel_regularizer",
        "keras",
        "regularizers",
        "l2",
        "tune",
        "model",
        "add",
        "Dense",
        "activation",
        "def_params",
        "kernel_regularizer",
        "keras",
        "regularizers",
        "l2",
        "tune",
        "keras",
        "optimizers",
        "Adam",
        "lr",
        "tune",
        "model",
        "compile",
        "loss",
        "def_params",
        "optimizer",
        "optimizer",
        "multi_gpu_model",
        "model",
        "parallel_model",
        "compile",
        "loss",
        "def_params",
        "optimizer",
        "optimizer",
        "EarlyStopping",
        "monitor",
        "min_delta",
        "def_params",
        "patience",
        "def_params",
        "mode",
        "EpochEvaluation",
        "validation_data",
        "X_val",
        "y_val",
        "training_data",
        "X_tr",
        "y_tr",
        "test_data",
        "X_te",
        "y_te",
        "ep_val",
        "e_stop",
        "comb",
        "tune",
        "time",
        "time",
        "parallel_model",
        "fit",
        "X_tr",
        "y_tr",
        "validation_data",
        "X_val",
        "y_val",
        "callbacks",
        "callbacks",
        "batch_size",
        "tune",
        "epochs",
        "def_params",
        "verbose",
        "time",
        "time",
        "np",
        "floor",
        "end",
        "start",
        "model",
        "set_weights",
        "parallel_model",
        "get_weights",
        "current_split_num",
        "os",
        "path",
        "exists",
        "models_path",
        "os",
        "makedirs",
        "models_path",
        "model",
        "save",
        "models_path",
        "comb",
        "j",
        "history",
        "history",
        "history",
        "history",
        "ep_val",
        "roc_auc",
        "ep_val",
        "val_roc_auc",
        "ep_val",
        "test_roc_auc",
        "current_split_num",
        "os",
        "path",
        "exists",
        "scores_path",
        "os",
        "makedirs",
        "scores_path",
        "np",
        "savetxt",
        "scores_path",
        "comb",
        "j",
        "auc",
        "val_auc",
        "test_auc",
        "loss",
        "val_loss",
        "delimiter",
        "current_split_num",
        "os",
        "path",
        "exists",
        "figures_path",
        "os",
        "makedirs",
        "figures_path",
        "plot_evolution",
        "loss",
        "val_loss",
        "auc",
        "val_auc",
        "test_auc",
        "tune",
        "figures_path",
        "comb",
        "j",
        "model",
        "ValueError",
        "keras",
        "backend",
        "clear_session",
        "comb",
        "time",
        "time",
        "np",
        "floor",
        "end_grid",
        "start_grid",
        "np",
        "floor",
        "end_grid",
        "start_grid"
    ],
    "literals": [
        "'pandas.indexes'",
        "\"KERAS_BACKEND\"",
        "\"tensorflow\"",
        "'TF_CPP_MIN_LOG_LEVEL'",
        "'1'",
        "\"0,1\"",
        "''",
        "'!join'",
        "'config.yml'",
        "'r'",
        "'dataset name'",
        "'imaging dataset'",
        "'splits path'",
        "'test size'",
        "'validation size'",
        "'hyperparameters'",
        "'tuning parameters'",
        "'number of runs'",
        "'arc_params'",
        "'filter_size'",
        "'filter_stride'",
        "'pool_size'",
        "'train_data'",
        "'train_labels'",
        "'test_data'",
        "'test_labels'",
        "'val_data'",
        "'val_labels'",
        "'out_activation'",
        "'softmax'",
        "'final_gridsearch_softmax_2/models/split_'",
        "'/trained_model_params_comb_'",
        "'_test_'",
        "'.h5'",
        "'num_filters'",
        "'arc_params'",
        "'filter_size'",
        "'arc_params'",
        "'filter_stride'",
        "\"same\"",
        "'l2_reg'",
        "'hidden_activation'",
        "'arc_params'",
        "'pool_size'",
        "'num_filters'",
        "'arc_params'",
        "'filter_size'",
        "'arc_params'",
        "'filter_stride'",
        "\"same\"",
        "'l2_reg'",
        "'hidden_activation'",
        "'arc_params'",
        "'pool_size'",
        "'num_filters'",
        "'arc_params'",
        "'filter_size'",
        "'arc_params'",
        "'filter_stride'",
        "\"same\"",
        "'l2_reg'",
        "'hidden_activation'",
        "'arc_params'",
        "'pool_size'",
        "'num_neurons_in_powers'",
        "'num_filters'",
        "'hidden_activation'",
        "'l2_reg'",
        "'dropout'",
        "'out_activation'",
        "'softmax'",
        "'out_activation'",
        "'l2_reg'",
        "'out_activation'",
        "'l2_reg'",
        "'learning_rate'",
        "'loss_func'",
        "'loss_func'",
        "'val_loss'",
        "'min_delta'",
        "'iter_patience'",
        "'auto'",
        "'Training for comb %i with parameters %s'",
        "'batch_size'",
        "'epochs'",
        "'Training completed in around %i minutes'",
        "'final_gridsearch_softmax_2/models/split_'",
        "'/'",
        "'trained_model_params_comb_'",
        "'_test_'",
        "'.h5'",
        "'loss'",
        "'val_loss'",
        "'final_gridsearch_softmax_2/scores/split_'",
        "'/'",
        "'loss and_auc_over epochs_params_comb_'",
        "'_test_'",
        "'.csv'",
        "\",\"",
        "'final_gridsearch_softmax_2/figures/split_'",
        "'/'",
        "'trained_model_params_comb_'",
        "'_test_'",
        "'.png'",
        "'Whole training completed in %i hours %i minutes.'"
    ],
    "variables": [
        "config",
        "allow_growth",
        "visible_device_list",
        "seq",
        "cfg",
        "dataset_name",
        "split_path",
        "test_size",
        "val_size",
        "def_params",
        "tuning_params",
        "num_splits",
        "arc_params",
        "data",
        "sets",
        "current_split_num",
        "X_tr",
        "y_tr",
        "X_te",
        "y_te",
        "X_val",
        "y_val",
        "y_tr",
        "y_val",
        "y_te",
        "start_grid",
        "comb",
        "model_path",
        "model",
        "optimizer",
        "parallel_model",
        "e_stop",
        "ep_val",
        "callbacks",
        "start",
        "history",
        "end",
        "models_path",
        "loss",
        "val_loss",
        "auc",
        "val_auc",
        "test_auc",
        "scores_path",
        "figures_path",
        "end_grid"
    ],
    "comments": [
        "ENVIRONMENT AND SESSION SET UP ####################################################################",
        "set the environment variable",
        "Silence INFO logs",
        "create a configuration protocol",
        "set the allow_growth option to true in the protocol",
        "define GPU to use",
        "start a sesstion that uses the configuration protocol",
        "fix seed",
        "READ CONFIGURATION FILE ###########################################################################",
        "ASSIGN PATHS AND VARIABLES #########################################################################",
        ", {'filter_size': (3,3,3), 'filter_stride':(2,2,2),'pool_size': (2,2,2)},",
        "{'filter_size': (5,5,5), 'filter_stride':(1,1,1),'pool_size': (3,3,3)}, {'filter_size': (5,5,5), 'filter_stride':(2,2,2),'pool_size': (2,2,2)}]}",
        "arc_params = {'filter_size':[(3,3,3),(5,5,5)], 'filter_stride':[(1,1,1),(2,2,2)], 'pool_size': [(2,2,2),(3,3,3)]}",
        "LOAD DATA ###########################################################################################",
        "ASSIGN TRAINING, TEST AND VALIDATION SETS FOR CURRENT SPLIT ##########################################",
        "START GRID SEARCH #####################################################################################",
        "print(tune['num_neurons_in_powers']*tune['num_filters'][2])",
        "probs_tr = model.predict(X_tr, batch_size = 8).T[0]",
        "probs_te = model.predict(X_te, batch_size = 8).T[0]",
        "probs_val = model.predict(X_val, batch_size = 8).T[0]",
        "score_tr = roc_auc_score(y_tr, probs_tr)",
        "score_te = roc_auc_score(y_te, probs_te)",
        "score_val = roc_auc_score(y_val, probs_val)",
        "np.savetxt('parameter search/final_gridsearch_softmax_2/scores/split_'+str(current_split_num)+'/final_performance_auc_scores_params_comb_'+str(comb)+'_test_'+str(j)+'.csv', [score_tr, score_val, score_te], delimiter=\",\")"
    ],
    "docstrings": [
        "\"\"\"\nFile name: CNN_gridsearch.py\nAuthor: Esra Zihni\nDate created: 04.04.2019\n\n\nThis file trains models on different parameters using grid search. It saves the trained models, AUC metrics on corresdponding \ntraining, validation and test sets and evolution of loss and AUC metrics over epochs during training.\n\"\"\""
    ],
    "functions": [
        "join"
    ],
    "classes": []
}