{
    "identifiers": [
        "jake",
        "blog",
        "inventoryApi",
        "mappers",
        "jake",
        "blog",
        "inventoryApi",
        "model",
        "db",
        "PurchaseRecord",
        "jake",
        "blog",
        "inventoryApi",
        "model",
        "dto",
        "InboundPurchaseRecordDTO",
        "jake",
        "blog",
        "inventoryApi",
        "model",
        "dto",
        "OutboundPurchaseRecordDTO",
        "jake",
        "blog",
        "inventoryApi",
        "persist",
        "StoreItemRepository",
        "jake",
        "blog",
        "inventoryApi",
        "testUtils",
        "DefaultStoreValues",
        "lombok",
        "log4j",
        "Log4j2",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "mockito",
        "Mockito",
        "java",
        "util",
        "NoSuchElementException",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "Log4j2",
        "storeItemRepository",
        "objectUnderTest",
        "BeforeEach",
        "storeItemRepository",
        "Mockito",
        "mock",
        "objectUnderTest",
        "storeItemRepository",
        "DefaultStoreValues",
        "initialize",
        "storeItemRepository",
        "Test",
        "inboundPurchaseRecordDTO",
        "DefaultStoreValues",
        "defaultInboundCustomerPurchase",
        "expectedResult",
        "DefaultStoreValues",
        "defaultCustomerPurchaseRecord",
        "setCreatedDate",
        "setPurchaseID",
        "actualResult",
        "objectUnderTest",
        "toPurchaseRecord",
        "inboundPurchaseRecordDTO",
        "Assertions",
        "assertEquals",
        "expectedResult",
        "actualResult",
        "Test",
        "randomStoreItemID",
        "purchasedItemIDs",
        "DefaultStoreValues",
        "defaultCustomerPurchaseItemIDs",
        "purchasedItemIDs",
        "add",
        "randomStoreItemID",
        "Mockito",
        "when",
        "storeItemRepository",
        "findById",
        "randomStoreItemID",
        "thenReturn",
        "Optional",
        "empty",
        "inboundPurchaseRecordDTO",
        "setCustomerID",
        "DefaultStoreValues",
        "defaultCustomerID1",
        "setPurchasedItems",
        "purchasedItemIDs",
        "actualResult",
        "objectUnderTest",
        "toPurchaseRecord",
        "inboundPurchaseRecordDTO",
        "e",
        "log",
        "error",
        "e",
        "Assertions",
        "assertTrue",
        "Assertions",
        "assertTrue",
        "Test",
        "purchaseRecord",
        "DefaultStoreValues",
        "defaultCustomerPurchaseRecord",
        "totalCost",
        "actualResult",
        "objectUnderTest",
        "toOutboundPurchaseRecordDTO",
        "purchaseRecord",
        "totalCost"
    ],
    "literals": [
        "\"Exception: \"",
        "\"Exception occurred as expected when item not found in store repository\"",
        "\"Exception did not occur as expected when item not found in store repository\""
    ],
    "variables": [
        "storeItemRepository",
        "objectUnderTest"
    ],
    "comments": [
        "augment the default purchase with a rogue store item id with no matching item in the repository"
    ],
    "docstrings": [
        "* Setup",
        "* Exercise",
        "* Verify",
        "* Setup",
        "* Exercise",
        "* Verify",
        "* Verify",
        "* Setup",
        "* Exercise",
        "* Verify"
    ],
    "functions": [
        "setup",
        "toPurchaseRecordSuccess",
        "toPurchaseRecordFailStoreItemNotFound",
        "toOutboundPurchaseRecordDtoSuccess"
    ],
    "classes": [
        "DtoMapperTest"
    ]
}