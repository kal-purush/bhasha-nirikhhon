{
    "identifiers": [
        "sys",
        "path",
        "PYTHONPATH",
        "os",
        "environ",
        "os",
        "path",
        "abspath",
        "dirname",
        "PYTHONPATH",
        "insert",
        "dirname",
        "dirname",
        "abspath",
        "qemu",
        "qvd_load_with_cache",
        "describable",
        "SysBusDeviceType",
        "QProject",
        "source",
        "Type",
        "Header",
        "Call",
        "describable",
        "SysBusDeviceType",
        "CustomSBDType",
        "fill_source",
        "Header",
        "is_global",
        "custom_h",
        "add_types",
        "find_mmio_read_helper",
        "read_func",
        "args",
        "read_func",
        "body",
        "children",
        "insert",
        "Call",
        "args2callback",
        "mmioN",
        "get_Ith_mmio_id_component",
        "mmioN",
        "qtn",
        "for_id_name",
        "component",
        "Type",
        "name",
        "QProject",
        "descriptions",
        "CustomSBDDescription",
        "name",
        "directory",
        "mmio_num",
        "environ",
        "qvd_load_with_cache",
        "qemu_build",
        "version",
        "qemu_version_description",
        "use",
        "p",
        "gen_all",
        "qemu_src",
        "qemu_version_description",
        "src_path",
        "exit",
        "main"
    ],
    "literals": [
        "\"custom-api.h\"",
        "\"custom_callback\"",
        "\"custom_callback\"",
        "\"_\"",
        "\"_read\"",
        "\"custom_device\"",
        "\"misc\"",
        "\"QEMU_BUILD_DIR\"",
        "\"v4.1.0\"",
        "\"__main__\""
    ],
    "variables": [
        "custom_h",
        "read_func",
        "args2callback",
        "component",
        "name",
        "p",
        "qemu_build",
        "qemu_version_description"
    ],
    "comments": [
        "Imports below are from QDT.",
        "Now, code of device's module is generated. It's time to patch it!",
        "Assuming, your code uses functions and types from your header.",
        "If your header is inside Qemu source tree and under Git, then you",
        "likely should write above statement as follows:",
        "",
        "custom_h = Header[\"custom/custom-api.h\"]",
        "",
        "Because the header is already registered.",
        "To use custom functions (and other things) you must declare them.",
        "Note that, macros are added automatically if header is inside Qemu",
        "source tree.",
        "Only name is sufficient because no code will be generated for them.",
        "We are going to pass second and following argument values of the",
        "read helper to the custom callback.",
        "Of course, you can made different choice in your code.",
        "Insert function call statement before 3-nd statement.",
        "Note, first statements are likely variable declarations.",
        "This is for prettiness only.",
        "Evaluate name of the read helper.",
        "This code came from superclass `fill_source`.",
        "Currently all functions (including `static`) are in global name",
        "space (it's an implementation limitation yet).",
        "And they are \"types\"... Here it's more generic term then in C.",
        "This class is defined by `@describable`",
        "We need information about target Qemu source tree.",
        "QDT gets it starting from build directory (where `configure` has work).",
        "First time the loading may take few minutes because Qemu sources",
        "are analyzed.",
        "Then result is cached in a file to be reused.",
        "Apply Qemu's source code environment.",
        "And finally, generate the boilerplate."
    ],
    "docstrings": [
        "\"\"\" This is an example of system bus device boilerplate extension with\ncustom functionality.\n    \"\"\"",
        "\"\"\" Adds a hook callback in MMIO read handler.\n        \"\"\""
    ],
    "functions": [
        "fill_source",
        "find_mmio_read_helper",
        "main"
    ],
    "classes": [
        "CustomSBDType"
    ]
}