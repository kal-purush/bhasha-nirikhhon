{
    "identifiers": [
        "Boom",
        "NodeCache",
        "proto",
        "DEFAULT_CACHE_TTLS",
        "WA_DEFAULT_EPHEMERAL",
        "AnyMessageContent",
        "MediaConnInfo",
        "MessageReceiptType",
        "MessageRelayOptions",
        "MiscMessageGenerationOptions",
        "SocketConfig",
        "WAMessageKey",
        "aggregateMessageKeysNotFromMe",
        "assertMediaContent",
        "bindWaitForEvent",
        "decryptMediaRetryData",
        "encodeSignedDeviceIdentity",
        "encodeWAMessage",
        "encryptMediaRetryRequest",
        "extractDeviceJids",
        "generateMessageID",
        "generateWAMessage",
        "getStatusCodeForMediaRetry",
        "getUrlFromDirectPath",
        "getWAUploadToServer",
        "parseAndInjectE2ESessions",
        "unixTimestampSeconds",
        "getUrlInfo",
        "areJidsSameUser",
        "BinaryNode",
        "BinaryNodeAttributes",
        "getBinaryNodeChild",
        "getBinaryNodeChildren",
        "isJidGroup",
        "isJidUser",
        "jidDecode",
        "jidEncode",
        "jidNormalizedUser",
        "JidWithDevice",
        "S_WHATSAPP_NET",
        "makeGroupsSocket",
        "ListType",
        "proto",
        "makeMessagesSocket",
        "config",
        "makeGroupsSocket",
        "config",
        "config",
        "NodeCache",
        "DEFAULT_CACHE_TTLS",
        "refreshMediaConn",
        "forceGet",
        "mediaConn",
        "media",
        "forceGet",
        "media",
        "media",
        "mediaConn",
        "query",
        "S_WHATSAPP_NET",
        "getBinaryNodeChild",
        "result",
        "getBinaryNodeChildren",
        "mediaConnNode",
        "attrs",
        "attrs",
        "mediaConnNode",
        "mediaConnNode",
        "logger",
        "node",
        "mediaConn",
        "sendReceipt",
        "jid",
        "participant",
        "messageIds",
        "messageIds",
        "isReadReceipt",
        "node",
        "unixTimestampSeconds",
        "isJidUser",
        "jid",
        "node",
        "jid",
        "node",
        "participant",
        "node",
        "jid",
        "participant",
        "node",
        "participant",
        "node",
        "messageIds",
        "remainingMessageIds",
        "node",
        "remainingMessageIds",
        "id",
        "logger",
        "node",
        "sendNode",
        "node",
        "sendReceipts",
        "keys",
        "aggregateMessageKeysNotFromMe",
        "keys",
        "recps",
        "sendReceipt",
        "jid",
        "participant",
        "messageIds",
        "readMessages",
        "keys",
        "fetchPrivacySettings",
        "privacySettings",
        "sendReceipts",
        "keys",
        "readType",
        "getUSyncDevices",
        "jids",
        "useCache",
        "ignoreZeroDevices",
        "useCache",
        "logger",
        "jids",
        "jids",
        "jid",
        "jids",
        "jidDecode",
        "jid",
        "jid",
        "jidNormalizedUser",
        "jid",
        "userDevicesCache",
        "user",
        "devices",
        "useCache",
        "deviceResults",
        "devices",
        "logger",
        "users",
        "S_WHATSAPP_NET",
        "generateMessageTag",
        "users",
        "query",
        "iq",
        "extractDeviceJids",
        "result",
        "authState",
        "ignoreZeroDevices",
        "_",
        "item",
        "extracted",
        "deviceMap",
        "item",
        "deviceMap",
        "item",
        "deviceMap",
        "item",
        "item",
        "deviceResults",
        "item",
        "key",
        "deviceMap",
        "userDevicesCache",
        "key",
        "deviceMap",
        "key",
        "deviceResults",
        "assertSessions",
        "jids",
        "force",
        "force",
        "jidsRequiringFetch",
        "jids",
        "jids",
        "jid",
        "signalRepository",
        "jid",
        "authState",
        "addrs",
        "jid",
        "jids",
        "signalRepository",
        "jid",
        "sessions",
        "signalId",
        "jidsRequiringFetch",
        "jid",
        "jidsRequiringFetch",
        "logger",
        "query",
        "S_WHATSAPP_NET",
        "jidsRequiringFetch",
        "jid",
        "parseAndInjectE2ESessions",
        "result",
        "signalRepository",
        "didFetchNewSession",
        "didFetchNewSession",
        "createParticipantNodes",
        "jids",
        "message",
        "proto",
        "extraAttrs",
        "patchMessageBeforeSending",
        "message",
        "jids",
        "encodeWAMessage",
        "patched",
        "jids",
        "jid",
        "signalRepository",
        "shouldIncludeDeviceIdentity",
        "extraAttrs",
        "ciphertext",
        "node",
        "relayMessage",
        "jid",
        "message",
        "proto",
        "authState",
        "jidDecode",
        "jid",
        "server",
        "msgId",
        "msgId",
        "generateMessageID",
        "useUserDevicesCache",
        "useUserDevicesCache",
        "jidEncode",
        "user",
        "isGroup",
        "proto",
        "participant",
        "isGroup",
        "additionalAttributes",
        "additionalAttributes",
        "jidDecode",
        "participant",
        "devices",
        "authState",
        "getMediaType",
        "message",
        "isGroup",
        "cachedGroupMetadata",
        "cachedGroupMetadata",
        "jid",
        "groupData",
        "logger",
        "groupData",
        "groupData",
        "groupData",
        "groupMetadata",
        "jid",
        "groupData",
        "participant",
        "authState",
        "jid",
        "result",
        "jid",
        "participant",
        "groupData",
        "p",
        "p",
        "getUSyncDevices",
        "participantsList",
        "useUserDevicesCache",
        "devices",
        "additionalDevices",
        "patchMessageBeforeSending",
        "message",
        "devices",
        "d",
        "jidEncode",
        "d",
        "d",
        "encodeWAMessage",
        "patched",
        "signalRepository",
        "destinationJid",
        "devices",
        "jidEncode",
        "user",
        "device",
        "senderKeyMap",
        "jid",
        "participant",
        "senderKeyJids",
        "jid",
        "senderKeyMap",
        "jid",
        "senderKeyJids",
        "logger",
        "proto",
        "senderKeyDistributionMessage",
        "destinationJid",
        "assertSessions",
        "senderKeyJids",
        "createParticipantNodes",
        "senderKeyJids",
        "senderKeyMsg",
        "mediaType",
        "mediaType",
        "shouldIncludeDeviceIdentity",
        "shouldIncludeDeviceIdentity",
        "result",
        "participants",
        "result",
        "binaryNodeContent",
        "ciphertext",
        "authState",
        "jid",
        "senderKeyMap",
        "jidDecode",
        "meId",
        "participant",
        "devices",
        "devices",
        "meUser",
        "getUSyncDevices",
        "meId",
        "jid",
        "useUserDevicesCache",
        "devices",
        "additionalDevices",
        "devices",
        "jidEncode",
        "user",
        "device",
        "user",
        "meUser",
        "isMe",
        "meJids",
        "jid",
        "otherJids",
        "jid",
        "allJids",
        "jid",
        "assertSessions",
        "allJids",
        "createParticipantNodes",
        "meJids",
        "meMsg",
        "mediaType",
        "mediaType",
        "createParticipantNodes",
        "otherJids",
        "message",
        "mediaType",
        "mediaType",
        "participants",
        "meNodes",
        "participants",
        "otherNodes",
        "shouldIncludeDeviceIdentity",
        "shouldIncludeDeviceIdentity",
        "s1",
        "s2",
        "participants",
        "binaryNodeContent",
        "participants",
        "msgId",
        "additionalAttributes",
        "binaryNodeContent",
        "participant",
        "isJidGroup",
        "destinationJid",
        "stanza",
        "destinationJid",
        "stanza",
        "participant",
        "areJidsSameUser",
        "participant",
        "meId",
        "stanza",
        "participant",
        "stanza",
        "destinationJid",
        "stanza",
        "participant",
        "stanza",
        "destinationJid",
        "shouldIncludeDeviceIdentity",
        "stanza",
        "encodeSignedDeviceIdentity",
        "authState",
        "logger",
        "getButtonType",
        "message",
        "buttonType",
        "stanza",
        "buttonType",
        "getButtonArgs",
        "message",
        "logger",
        "logger",
        "participants",
        "sendNode",
        "stanza",
        "msgId",
        "getMediaType",
        "message",
        "proto",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "message",
        "getButtonType",
        "message",
        "proto",
        "message",
        "message",
        "message",
        "message",
        "message",
        "getButtonArgs",
        "message",
        "proto",
        "message",
        "message",
        "message",
        "Boom",
        "ListType",
        "getPrivacyTokens",
        "jids",
        "unixTimestampSeconds",
        "query",
        "S_WHATSAPP_NET",
        "jids",
        "jid",
        "jidNormalizedUser",
        "jid",
        "result",
        "getWAUploadToServer",
        "config",
        "refreshMediaConn",
        "bindWaitForEvent",
        "ev",
        "sock",
        "message",
        "proto",
        "assertMediaContent",
        "message",
        "content",
        "authState",
        "encryptMediaRetryRequest",
        "message",
        "mediaKey",
        "meId",
        "sendNode",
        "node",
        "waitForMsgMediaUpdate",
        "update",
        "update",
        "c",
        "c",
        "message",
        "result",
        "result",
        "error",
        "result",
        "decryptMediaRetryData",
        "result",
        "mediaKey",
        "result",
        "media",
        "proto",
        "proto",
        "media",
        "Boom",
        "resultStr",
        "media",
        "getStatusCodeForMediaRetry",
        "media",
        "content",
        "media",
        "content",
        "getUrlFromDirectPath",
        "content",
        "logger",
        "media",
        "result",
        "err",
        "error",
        "err",
        "error",
        "error",
        "ev",
        "message",
        "message",
        "message",
        "jid",
        "content",
        "options",
        "authState",
        "content",
        "content",
        "content",
        "isJidGroup",
        "jid",
        "disappearingMessagesInChat",
        "disappearingMessagesInChat",
        "WA_DEFAULT_EPHEMERAL",
        "disappearingMessagesInChat",
        "groupToggleEphemeral",
        "jid",
        "value",
        "generateWAMessage",
        "jid",
        "content",
        "text",
        "getUrlInfo",
        "text",
        "linkPreviewImageThumbnailWidth",
        "axiosOptions",
        "generateHighQualityLinkPreview",
        "waUploadToServer",
        "waUploadToServer",
        "config",
        "config",
        "options",
        "content",
        "content",
        "isDeleteMsg",
        "isJidGroup",
        "content",
        "content",
        "additionalAttributes",
        "additionalAttributes",
        "relayMessage",
        "jid",
        "fullMsg",
        "fullMsg",
        "options",
        "config",
        "process",
        "processingMutex",
        "upsertMessage",
        "fullMsg",
        "fullMsg"
    ],
    "literals": [
        "'@hapi/boom'",
        "'node-cache'",
        "'@adiwajshing/baileys'",
        "'@adiwajshing/baileys'",
        "'@adiwajshing/baileys'",
        "'@adiwajshing/baileys'",
        "'@adiwajshing/baileys'",
        "'@adiwajshing/baileys'",
        "'@adiwajshing/baileys'",
        "'iq'",
        "'set'",
        "'w:m'",
        "'media_conn'",
        "'media_conn'",
        "'host'",
        "'fetched media conn'",
        "string",
        "string",
        "string",
        "'receipt'",
        "'read'",
        "'read-self'",
        "'sender'",
        "'list'",
        "'item'",
        "'sending receipt for messages'",
        "'all'",
        "'read'",
        "'read-self'",
        "string",
        "'not using cache for devices'",
        "'using cache for devices'",
        "'user'",
        "'iq'",
        "'get'",
        "'usync'",
        "'usync'",
        "'query'",
        "'true'",
        "'0'",
        "'message'",
        "'query'",
        "'devices'",
        "'2'",
        "'list'",
        "string",
        "string",
        "string",
        "'session'",
        "'fetching sessions'",
        "'iq'",
        "'encrypt'",
        "'get'",
        "'key'",
        "'user'",
        "string",
        "'attrs'",
        "'pkmsg'",
        "'to'",
        "'enc'",
        "'2'",
        "string",
        "'g.us'",
        "'g.us'",
        "'s.whatsapp.net'",
        "'device_fanout'",
        "'false'",
        "'using cached group metadata'",
        "'sender-key-memory'",
        "'s.whatsapp.net'",
        "string",
        "'s.whatsapp.net'",
        "'sending new sender key'",
        "'enc'",
        "'2'",
        "'skmsg'",
        "'sender-key-memory'",
        "string",
        "string",
        "string",
        "'s.whatsapp.net'",
        "'participants'",
        "'message'",
        "'text'",
        "'device-identity'",
        "'adding device identity'",
        "'biz'",
        "'adding business node'",
        "sending message to ${participants.length} devices",
        "'image'",
        "'gif'",
        "'video'",
        "'ptt'",
        "'audio'",
        "'vcard'",
        "'document'",
        "'contact_array'",
        "'livelocation'",
        "'sticker'",
        "'list'",
        "'list_response'",
        "'buttons_response'",
        "'order'",
        "'product'",
        "'native_flow_response'",
        "'buttons'",
        "'buttons_response'",
        "'interactive_response'",
        "'list'",
        "'list_response'",
        "'attrs'",
        "\"Expected list type inside message\"",
        "'2'",
        "string",
        "'iq'",
        "'set'",
        "'privacy'",
        "'tokens'",
        "'token'",
        "'trusted_contact'",
        "'messages.media-update'",
        "Media re-upload failed by device (${resultStr})",
        "'media update successful'",
        "'messages.update'",
        "string",
        "'object'",
        "'disappearingMessagesInChat'",
        "'disappearingMessagesInChat'",
        "'undefined'",
        "'boolean'",
        "'delete'",
        "string",
        "'8'",
        "'7'",
        "'append'"
    ],
    "variables": [
        "makeMessagesSocket",
        "axiosOptions",
        "config",
        "sock",
        "sock",
        "userDevicesCache",
        "mediaConn",
        "refreshMediaConn",
        "media",
        "result",
        "mediaConnNode",
        "node",
        "sendReceipt",
        "node",
        "isReadReceipt",
        "remainingMessageIds",
        "sendReceipts",
        "recps",
        "readMessages",
        "privacySettings",
        "readType",
        "getUSyncDevices",
        "deviceResults",
        "users",
        "user",
        "devices",
        "iq",
        "result",
        "extracted",
        "deviceMap",
        "assertSessions",
        "didFetchNewSession",
        "jidsRequiringFetch",
        "addrs",
        "sessions",
        "signalId",
        "result",
        "createParticipantNodes",
        "patched",
        "shouldIncludeDeviceIdentity",
        "nodes",
        "node",
        "relayMessage",
        "msgId",
        "meId",
        "shouldIncludeDeviceIdentity",
        "isGroup",
        "participants",
        "destinationJid",
        "binaryNodeContent",
        "devices",
        "meMsg",
        "mediaType",
        "groupData",
        "senderKeyMap",
        "groupData",
        "result",
        "participantsList",
        "additionalDevices",
        "patched",
        "senderKeyJids",
        "jid",
        "senderKeyMsg",
        "result",
        "meUser",
        "additionalDevices",
        "allJids",
        "meJids",
        "otherJids",
        "jid",
        "isMe",
        "meNodes",
        "s1",
        "otherNodes",
        "s2",
        "stanza",
        "buttonType",
        "getMediaType",
        "getButtonType",
        "getButtonArgs",
        "getPrivacyTokens",
        "t",
        "result",
        "waUploadToServer",
        "waitForMsgMediaUpdate",
        "content",
        "mediaKey",
        "meId",
        "node",
        "error",
        "result",
        "media",
        "resultStr",
        "userJid",
        "content",
        "value",
        "fullMsg",
        "isDeleteMsg",
        "additionalAttributes"
    ],
    "comments": [
        "5 minutes",
        "Correctly bulk send receipts to multiple chats, participants",
        "Bulk read messages. Keys can be from different chats & participants",
        "based on privacy settings, we have to change the read type",
        "Fetch all the devices we've to send a message to",
        "when the retry request is not for a group",
        "only send to the specific device that asked for a retry",
        "otherwise the message is sent out to every device that should be a recipient",
        "ensure a connection is established with every device",
        "store that this person has had the sender keys sent to them",
        "if there are some participants with whom the session has not been established",
        "if there are, we re-send the senderkey",
        "if the participant to send to is explicitly specified (generally retry recp)",
        "ensure the message is only sent to that person",
        "if a retry receipt is sent to everyone -- it'll fail decryption for everyone else who received the msg",
        "TODO: Add attributes",
        "required for delete",
        "if the chat is a group, and I am not the author, then delete the message as an admin"
    ],
    "docstrings": [
        "* generic send receipt function\n     * used for receipts of phone call, read, delivery etc.\n     *"
    ],
    "functions": [],
    "classes": []
}