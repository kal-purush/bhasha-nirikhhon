{
    "identifiers": [
        "FluentValidation",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Microsoft",
        "Azure",
        "WebJobs",
        "Microsoft",
        "Azure",
        "WebJobs",
        "Extensions",
        "Http",
        "Microsoft",
        "EntityFrameworkCore",
        "Microsoft",
        "Extensions",
        "DependencyInjection",
        "Microsoft",
        "Extensions",
        "Logging",
        "MyCoreBanking",
        "MyCoreBanking",
        "API",
        "Data",
        "MyCoreBanking",
        "Args",
        "FreedomHub",
        "API",
        "Services",
        "Auth",
        "FunctionName",
        "nameof",
        "TransacoesEfetivarPut",
        "IActionResult",
        "HttpTrigger",
        "AuthorizationLevel",
        "Anonymous",
        "Route",
        "HttpRequest",
        "httpRequest",
        "ILogger",
        "logger",
        "Guid",
        "transacaoId",
        "httpRequest",
        "Authorize",
        "httpRequest",
        "HttpContext",
        "RequestServices",
        "GetRequiredService",
        "MeuDbContext",
        "httpRequest",
        "ReadJsonBodyAsAsync",
        "TransacoesEfetivacaoPutArgs",
        "TransacoesEfetivacaoPutArgs",
        "Validator",
        "ValidateAndThrow",
        "args",
        "context",
        "Transacoes",
        "Include",
        "t",
        "Conta",
        "Where",
        "t",
        "UsuarioId",
        "userId",
        "FirstOrDefaultAsync",
        "t",
        "Id",
        "transacaoId",
        "transacaoEntity",
        "NotFoundException",
        "message",
        "paramName",
        "nameof",
        "transacaoId",
        "transacaoEntity",
        "DataEfetivacao",
        "HasValue",
        "InvalidOperationException",
        "message",
        "transacaoEntity",
        "DataEfetivacao",
        "args",
        "DataEfetivacao",
        "transacaoEntity",
        "TipoOperacao",
        "OperacaoTipo",
        "Receita",
        "transacaoEntity",
        "Conta",
        "Saldo",
        "transacaoEntity",
        "Valor",
        "transacaoEntity",
        "Conta",
        "Saldo",
        "transacaoEntity",
        "Valor",
        "context",
        "Transacoes",
        "Update",
        "transacaoEntity",
        "context",
        "SaveChangesAsync",
        "httpRequest",
        "CreateResult",
        "transacaoEntity",
        "Id",
        "ex",
        "httpRequest",
        "CreateResult",
        "ex",
        "logger"
    ],
    "literals": [
        "\"PUT\"",
        "\"transacoes/{transacaoId:guid}/efetivar\"",
        "\"Transação não encontrada\"",
        "\"Transação já efetivada\""
    ],
    "variables": [
        "userId",
        "context",
        "args",
        "transacaoEntity"
    ],
    "comments": [
        "Tenta obter a transação",
        "include na conta para atualizar o saldo",
        "Atualização da data de efetivação",
        "Atualização do saldo"
    ],
    "docstrings": [],
    "functions": [
        "Run"
    ],
    "classes": [
        "TransacoesEfetivarPut"
    ]
}