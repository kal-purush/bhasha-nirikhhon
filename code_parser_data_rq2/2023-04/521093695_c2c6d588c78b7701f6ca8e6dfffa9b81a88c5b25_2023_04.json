{
    "identifiers": [
        "logging",
        "ops",
        "framework",
        "StoredState",
        "EventBase",
        "ObjectEvents",
        "EventSource",
        "ops",
        "model",
        "Relation",
        "SecretNotFoundError",
        "logging",
        "getLogger",
        "EventBase",
        "EventBase",
        "EventBase",
        "ObjectEvents",
        "EventSource",
        "CloudCredentialsConnectedEvent",
        "EventSource",
        "CloudCredentialsReadyEvent",
        "EventSource",
        "CloudCredentialsGoneAwayEvent",
        "CloudCredentialsServerEvents",
        "StoredState",
        "charm",
        "relation_name",
        "charm",
        "relation_name",
        "charm",
        "relation_name",
        "framework",
        "observe",
        "charm",
        "on",
        "relation_name",
        "relation_joined",
        "_on_cloud_credentials_relation_joined",
        "framework",
        "observe",
        "charm",
        "on",
        "relation_name",
        "relation_changed",
        "_on_cloud_credentials_relation_changed",
        "framework",
        "observe",
        "charm",
        "on",
        "relation_name",
        "relation_departed",
        "_on_cloud_credentials_relation_changed",
        "framework",
        "observe",
        "charm",
        "on",
        "relation_name",
        "relation_broken",
        "_on_cloud_credentials_relation_broken",
        "logging",
        "debug",
        "on",
        "connected",
        "emit",
        "request_credentials",
        "logging",
        "debug",
        "on",
        "ready",
        "emit",
        "AttributeError",
        "KeyError",
        "logger",
        "exception",
        "logging",
        "debug",
        "on",
        "goneaway",
        "emit",
        "property",
        "Relation",
        "framework",
        "model",
        "get_relation",
        "relation_name",
        "key",
        "_cloud_credentials_rel",
        "data",
        "_cloud_credentials_rel",
        "app",
        "data",
        "get",
        "key",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "credentials_id",
        "charm",
        "model",
        "get_secret",
        "id",
        "credentials_id",
        "credentials",
        "get_content",
        "get",
        "SecretNotFoundError",
        "logger",
        "warning",
        "credentials_id",
        "property",
        "get_remote_app_data",
        "credentials_id",
        "charm",
        "model",
        "get_secret",
        "id",
        "credentials_id",
        "credentials",
        "get_content",
        "get",
        "SecretNotFoundError",
        "logger",
        "warning",
        "credentials_id",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "property",
        "get_remote_app_data",
        "model",
        "unit",
        "is_leader",
        "logging",
        "debug",
        "charm",
        "app",
        "name",
        "_cloud_credentials_rel",
        "data",
        "charm",
        "app",
        "charm",
        "app",
        "name",
        "EventBase",
        "EventBase",
        "handle",
        "relation_id",
        "relation_name",
        "username",
        "handle",
        "relation_id",
        "relation_name",
        "username",
        "relation_id",
        "relation_name",
        "username",
        "snapshot",
        "restore",
        "snapshot",
        "snapshot",
        "snapshot",
        "snapshot",
        "EventBase",
        "ObjectEvents",
        "EventSource",
        "HasCloudCredentialsClientsEvent",
        "EventSource",
        "ReadyCloudCredentialsClientsEvent",
        "EventSource",
        "CloudCredentialsClientsGoneAwayEvent",
        "CloudCredentialsClientEvents",
        "StoredState",
        "charm",
        "relation_name",
        "charm",
        "relation_name",
        "charm",
        "relation_name",
        "framework",
        "observe",
        "charm",
        "on",
        "relation_name",
        "relation_joined",
        "_on_cloud_credentials_relation_joined",
        "framework",
        "observe",
        "charm",
        "on",
        "relation_name",
        "relation_changed",
        "_on_cloud_credentials_relation_changed",
        "framework",
        "observe",
        "charm",
        "on",
        "relation_name",
        "relation_broken",
        "_on_cloud_credentials_relation_broken",
        "logging",
        "debug",
        "on",
        "has_cloud_credentials_clients",
        "emit",
        "logging",
        "debug",
        "relation",
        "data",
        "relation",
        "app",
        "get",
        "k",
        "k",
        "REQUIRED_KEYS",
        "all",
        "values",
        "relation",
        "data",
        "relation",
        "app",
        "on",
        "ready_cloud_credentials_clients",
        "emit",
        "relation",
        "id",
        "relation",
        "name",
        "username",
        "logging",
        "debug",
        "on",
        "cloud_credentials_clients_gone",
        "emit",
        "relation_name",
        "relation_id",
        "api_version",
        "auth_host",
        "auth_port",
        "auth_protocol",
        "internal_host",
        "internal_port",
        "internal_protocol",
        "credentials",
        "project_name",
        "project_id",
        "user_domain_name",
        "user_domain_id",
        "project_domain_name",
        "project_domain_id",
        "region",
        "logging",
        "debug",
        "relation",
        "framework",
        "model",
        "relations",
        "relation_name",
        "relation",
        "id",
        "relation_id",
        "relation",
        "_cloud_credentials_rel",
        "_cloud_credentials_rel",
        "data",
        "charm",
        "app",
        "api_version",
        "auth_host",
        "auth_port",
        "auth_protocol",
        "internal_host",
        "internal_port",
        "internal_protocol",
        "credentials",
        "project_name",
        "project_id",
        "user_domain_name",
        "user_domain_id",
        "project_domain_name",
        "project_domain_id",
        "region",
        "charm",
        "internal_endpoint",
        "charm",
        "public_endpoint"
    ],
    "literals": [
        "\"a5d96cc2686c47eea554ce2210c2d24e\"",
        "\"CloudCredentials on_joined\"",
        "\"CloudCredentials on_changed\"",
        "'Error when emitting event'",
        "\"CloudCredentials on_broken\"",
        "'api-version'",
        "'auth-host'",
        "'auth-port'",
        "'auth-protocol'",
        "'internal-host'",
        "'internal-port'",
        "'internal-protocol'",
        "'credentials'",
        "'credentials'",
        "\"username\"",
        "f\"Secret {credentials_id} not found\"",
        "'credentials'",
        "\"password\"",
        "f\"Secret {credentials_id} not found\"",
        "'project-name'",
        "'project-id'",
        "'user-domain-name'",
        "'user-domain-id'",
        "'project-domain-name'",
        "'project-domain-id'",
        "'region'",
        "'internal-endpoint'",
        "'public-endpoint'",
        "f'Requesting credentials for {self.charm.app.name}'",
        "'username'",
        "\"relation_id\"",
        "\"relation_name\"",
        "\"username\"",
        "\"relation_id\"",
        "\"relation_name\"",
        "\"username\"",
        "\"CloudCredentialsProvides on_joined\"",
        "\"CloudCredentials on_changed\"",
        "'username'",
        "'username'",
        "\"CloudCredentialsProvides on_departed\"",
        "\"Setting cloud_credentials connection information.\"",
        "\"api-version\"",
        "\"auth-host\"",
        "\"auth-port\"",
        "\"auth-protocol\"",
        "\"internal-host\"",
        "\"internal-port\"",
        "\"internal-protocol\"",
        "\"credentials\"",
        "\"project-name\"",
        "\"project-id\"",
        "\"user-domain-name\"",
        "\"user-domain-id\"",
        "\"project-domain-name\"",
        "\"project-domain-id\"",
        "\"region\"",
        "\"internal-endpoint\"",
        "\"public-endpoint\""
    ],
    "variables": [
        "LIBID",
        "LIBAPI",
        "LIBPATCH",
        "logger",
        "connected",
        "ready",
        "goneaway",
        "on",
        "_stored",
        "charm",
        "relation_name",
        "data",
        "credentials_id",
        "credentials",
        "credentials_id",
        "credentials",
        "app_data",
        "app_data",
        "relation_id",
        "relation_name",
        "username",
        "relation_id",
        "relation_name",
        "username",
        "has_cloud_credentials_clients",
        "ready_cloud_credentials_clients",
        "cloud_credentials_clients_gone",
        "on",
        "_stored",
        "charm",
        "relation_name",
        "REQUIRED_KEYS",
        "values",
        "username",
        "_cloud_credentials_rel",
        "_cloud_credentials_rel",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data",
        "app_data"
    ],
    "comments": [
        "The unique Charmhub library identifier, never change it",
        "Increment this major API version when introducing breaking changes",
        "Increment this PATCH version before using `charmcraft publish-lib` or reset",
        "to 0 if you are raising the major API version",
        "Validate data on the relation",
        "Relation has disappeared so don't send the data"
    ],
    "docstrings": [
        "\"\"\"CloudCredentialsProvides and Requires module.\n\n\nThis library contains the Requires and Provides classes for handling\nthe cloud_credentials interface.\n\nImport `CloudCredentialsRequires` in your charm, with the charm object and the\nrelation name:\n    - self\n    - \"cloud_credentials\"\n\nAlso provide additional parameters to the charm object:\n    - service\n    - internal_url\n    - public_url\n    - admin_url\n    - region\n    - username\n    - vhost\n\nTwo events are also available to respond to:\n    - connected\n    - ready\n    - goneaway\n\nA basic example showing the usage of this relation follows:\n\n```\nfrom charms.keystone_k8s.v0.cloud_credentials import CloudCredentialsRequires\n\nclass CloudCredentialsClientCharm(CharmBase):\n    def __init__(self, *args):\n        super().__init__(*args)\n        # CloudCredentials Requires\n        self.cloud_credentials = CloudCredentialsRequires(\n            self, \"cloud_credentials\",\n            service = \"my-service\"\n            internal_url = \"http://internal-url\"\n            public_url = \"http://public-url\"\n            admin_url = \"http://admin-url\"\n            region = \"region\"\n        )\n        self.framework.observe(\n            self.cloud_credentials.on.connected, self._on_cloud_credentials_connected)\n        self.framework.observe(\n            self.cloud_credentials.on.ready, self._on_cloud_credentials_ready)\n        self.framework.observe(\n            self.cloud_credentials.on.goneaway, self._on_cloud_credentials_goneaway)\n\n    def _on_cloud_credentials_connected(self, event):\n        '''React to the CloudCredentials connected event.\n\n        This event happens when n CloudCredentials relation is added to the\n        model before credentials etc have been provided.\n        '''\n        # Do something before the relation is complete\n        pass\n\n    def _on_cloud_credentials_ready(self, event):\n        '''React to the CloudCredentials ready event.\n\n        The CloudCredentials interface will use the provided config for the\n        request to the identity server.\n        '''\n        # CloudCredentials Relation is ready. Do something with the completed relation.\n        pass\n\n    def _on_cloud_credentials_goneaway(self, event):\n        '''React to the CloudCredentials goneaway event.\n\n        This event happens when an CloudCredentials relation is removed.\n        '''\n        # CloudCredentials Relation has goneaway. shutdown services or suchlike\n        pass\n```\n\"\"\"",
        "\"\"\"CloudCredentials connected Event.\"\"\"",
        "\"\"\"CloudCredentials ready for use Event.\"\"\"",
        "\"\"\"CloudCredentials relation has gone-away Event\"\"\"",
        "\"\"\"Events class for `on`\"\"\"",
        "\"\"\"\n    CloudCredentialsRequires class\n    \"\"\"",
        "\"\"\"CloudCredentials relation joined.\"\"\"",
        "\"\"\"CloudCredentials relation changed.\"\"\"",
        "\"\"\"CloudCredentials relation broken.\"\"\"",
        "\"\"\"The CloudCredentials relation.\"\"\"",
        "\"\"\"Return the value for the given key from remote app data.\"\"\"",
        "\"\"\"Return the api_version.\"\"\"",
        "\"\"\"Return the auth_host.\"\"\"",
        "\"\"\"Return the auth_port.\"\"\"",
        "\"\"\"Return the auth_protocol.\"\"\"",
        "\"\"\"Return the internal_host.\"\"\"",
        "\"\"\"Return the internal_port.\"\"\"",
        "\"\"\"Return the internal_protocol.\"\"\"",
        "\"\"\"Return the project name.\"\"\"",
        "\"\"\"Return the project id.\"\"\"",
        "\"\"\"Return the name of the user domain.\"\"\"",
        "\"\"\"Return the id of the user domain.\"\"\"",
        "\"\"\"Return the name of the project domain.\"\"\"",
        "\"\"\"Return the id of the project domain.\"\"\"",
        "\"\"\"Return the region for the auth urls.\"\"\"",
        "\"\"\"Return the region for the internal auth url.\"\"\"",
        "\"\"\"Return the region for the public auth url.\"\"\"",
        "\"\"\"Request credentials from the CloudCredentials server.\"\"\"",
        "\"\"\"Has CloudCredentialsClients Event.\"\"\"",
        "\"\"\"CloudCredentialsClients Ready Event.\"\"\"",
        "\"\"\"Has CloudCredentialsClientsGoneAwayEvent Event.\"\"\"",
        "\"\"\"Events class for `on`\"\"\"",
        "\"\"\"\n    CloudCredentialsProvides class\n    \"\"\"",
        "\"\"\"Handle CloudCredentials joined.\"\"\"",
        "\"\"\"Handle CloudCredentials changed.\"\"\"",
        "\"\"\"Handle CloudCredentials broken.\"\"\""
    ],
    "functions": [
        "_on_cloud_credentials_relation_joined",
        "_on_cloud_credentials_relation_changed",
        "_on_cloud_credentials_relation_broken",
        "_cloud_credentials_rel",
        "get_remote_app_data",
        "api_version",
        "auth_host",
        "auth_port",
        "auth_protocol",
        "internal_host",
        "internal_port",
        "internal_protocol",
        "credentials",
        "username",
        "password",
        "project_name",
        "project_id",
        "user_domain_name",
        "user_domain_id",
        "project_domain_name",
        "project_domain_id",
        "region",
        "internal_endpoint",
        "public_endpoint",
        "request_credentials",
        "snapshot",
        "restore",
        "_on_cloud_credentials_relation_joined",
        "_on_cloud_credentials_relation_changed",
        "_on_cloud_credentials_relation_broken",
        "set_cloud_credentials"
    ],
    "classes": [
        "CloudCredentialsConnectedEvent",
        "CloudCredentialsReadyEvent",
        "CloudCredentialsGoneAwayEvent",
        "CloudCredentialsServerEvents",
        "CloudCredentialsRequires",
        "HasCloudCredentialsClientsEvent",
        "ReadyCloudCredentialsClientsEvent",
        "CloudCredentialsClientsGoneAwayEvent",
        "CloudCredentialsClientEvents",
        "CloudCredentialsProvides"
    ]
}