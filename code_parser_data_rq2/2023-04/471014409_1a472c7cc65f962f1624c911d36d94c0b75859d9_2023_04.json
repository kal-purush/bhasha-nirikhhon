{
    "identifiers": [
        "Logger",
        "DynamoDBClient",
        "ApiClient",
        "Response",
        "Session",
        "Bsn",
        "IdTokenClaims",
        "BrpApi",
        "OpenIDConnect",
        "props",
        "props",
        "Logger",
        "Session",
        "session",
        "session",
        "Response",
        "session",
        "state",
        "claims",
        "claims",
        "bsn",
        "Response",
        "claims",
        "logger",
        "claims",
        "bsn",
        "session",
        "bsn",
        "username",
        "error",
        "error",
        "Response",
        "Response",
        "error",
        "error",
        "Response",
        "Response",
        "session",
        "bsn",
        "apiClient",
        "BrpApi",
        "apiClient",
        "brpApi",
        "bsn",
        "brpData",
        "brpData",
        "naam",
        "error",
        "claims",
        "val",
        "val",
        "possibleClaims",
        "possibleClaims",
        "yiviClaims",
        "possibleClaims",
        "claims",
        "Bsn",
        "claims",
        "error"
    ],
    "literals": [
        "'@aws-lambda-powertools/logger'",
        "'@aws-sdk/client-dynamodb'",
        "'@gemeentenijmegen/apiclient'",
        "'@gemeentenijmegen/apigateway-http/lib/V2/Response'",
        "'@gemeentenijmegen/session'",
        "'@gemeentenijmegen/utils'",
        "'openid-client'",
        "'./BrpApi'",
        "'../../shared/OpenIDConnect'",
        "string",
        "string",
        "string",
        "string",
        "'mijnnijmegen'",
        "'/login'",
        "'state'",
        "'/login'",
        "'acr'",
        "'auth succesful'",
        "'/login'",
        "'/login'",
        "'/'",
        "string",
        "'Onbekende gebruiker'",
        "'Error getting username'",
        "'Onbekende gebruiker'",
        "'sub'",
        "'string'",
        "' '",
        "''",
        "string"
    ],
    "variables": [
        "logger",
        "session",
        "state",
        "claims",
        "bsn",
        "username",
        "brpApi",
        "brpData",
        "naam",
        "possibleClaims",
        "yiviClaims"
    ],
    "comments": [
        "we don't care about non-valid BSN's (sub could have a random string)"
    ],
    "docstrings": [
        "* Extract bsn from token claims\n   *\n   * The bsn can be found in several fields: either the 'sub' claim\n   * or a yivi-specific field can be used. This function tries (in order)\n   * to get a valid BSN from:\n   * - sub\n   * - any values in space separated yivi attributes string, in order\n   *\n   * @param claims an IdTokenClaims object\n   * @returns {BSN|false}"
    ],
    "functions": [
        "handleRequest",
        "loggedinUserName",
        "bsnFromClaims"
    ],
    "classes": [
        "AuthRequestHandler"
    ]
}