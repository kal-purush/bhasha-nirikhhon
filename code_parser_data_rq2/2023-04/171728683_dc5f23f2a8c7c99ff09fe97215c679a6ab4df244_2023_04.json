{
    "identifiers": [
        "os",
        "sys",
        "sys",
        "path",
        "append",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "argparse",
        "hashlib",
        "logging",
        "traceback",
        "botocore",
        "exceptions",
        "boto3exception",
        "v2",
        "lib",
        "resource_op",
        "s3lib",
        "v2",
        "utils",
        "utils",
        "utils",
        "v2",
        "lib",
        "exceptions",
        "AccessDeniedObjectDeleted",
        "ObjectVersionCountMismatch",
        "RGWBaseException",
        "TestExecError",
        "v2",
        "lib",
        "manage_data",
        "io_generator",
        "v2",
        "lib",
        "resource_op",
        "Config",
        "v2",
        "lib",
        "rgw_config_opts",
        "CephConfOp",
        "v2",
        "lib",
        "s3",
        "auth",
        "Auth",
        "v2",
        "lib",
        "s3",
        "write_io_info",
        "BasicIOInfoStructure",
        "IOInfoInitialize",
        "v2",
        "tests",
        "s3_swift",
        "reusable",
        "v2",
        "tests",
        "s3cmd",
        "reusable",
        "get_rgw_ip_and_port",
        "v2",
        "utils",
        "log",
        "configure_logging",
        "v2",
        "utils",
        "test_desc",
        "AddTestInfo",
        "v2",
        "utils",
        "utils",
        "RGWService",
        "logging",
        "getLogger",
        "config",
        "ssh_con",
        "IOInfoInitialize",
        "BasicIOInfoStructure",
        "io_info_initialize",
        "initialize",
        "basic_io_structure",
        "initial",
        "CephConfOp",
        "ssh_con",
        "RGWService",
        "s3lib",
        "create_users",
        "config",
        "user_count",
        "each_user",
        "all_users_info",
        "Auth",
        "each_user",
        "ssh_con",
        "ssl",
        "config",
        "ssl",
        "auth",
        "do_auth_using_client",
        "config",
        "test_ops",
        "log",
        "info",
        "config",
        "bucket_count",
        "bc",
        "config",
        "bucket_count",
        "utils",
        "gen_bucket_name_from_userid",
        "each_user",
        "rand_no",
        "bc",
        "log",
        "info",
        "bucket_name_to_create",
        "get_rgw_ip_and_port",
        "ssh_con",
        "s3_conn_client",
        "create_bucket",
        "Bucket",
        "bucket_name_to_create",
        "ObjectLockEnabledForBucket",
        "config",
        "test_ops",
        "config",
        "test_ops",
        "log",
        "info",
        "config",
        "objects_count",
        "oc",
        "size",
        "config",
        "mapped_sizes",
        "items",
        "utils",
        "gen_s3_object_name",
        "bucket_name_to_create",
        "log",
        "info",
        "s3_object_name",
        "os",
        "path",
        "join",
        "TEST_DATA_PATH",
        "s3_object_name",
        "log",
        "info",
        "s3_object_path",
        "log",
        "info",
        "lock_mode",
        "io_generator",
        "TEST_DATA_PATH",
        "s3_object_name",
        "size",
        "TEST_DATA_PATH",
        "s3_object_name",
        "reusable",
        "object_lock_retention",
        "s3_conn_client",
        "bucket_name_to_create",
        "s3_object_name",
        "obj_body",
        "lock_mode",
        "retain_until",
        "log",
        "info",
        "s3_conn_client",
        "list_object_versions",
        "Bucket",
        "bucket_name_to_create",
        "version_dict",
        "versions",
        "s3_conn_client",
        "delete_object",
        "Bucket",
        "bucket_name_to_create",
        "Key",
        "s3_object_name",
        "VersionId",
        "version_dict",
        "AccessDeniedObjectDeleted",
        "boto3exception",
        "ClientError",
        "e",
        "e",
        "response",
        "actual_code",
        "expected_code",
        "reusable",
        "check_for_crash",
        "crash_info",
        "TestExecError",
        "AddTestInfo",
        "test_info",
        "started_info",
        "os",
        "path",
        "abspath",
        "os",
        "path",
        "join",
        "RGWService",
        "os",
        "path",
        "join",
        "project_dir",
        "test_data_dir",
        "log",
        "info",
        "os",
        "path",
        "exists",
        "TEST_DATA_PATH",
        "log",
        "info",
        "os",
        "makedirs",
        "TEST_DATA_PATH",
        "argparse",
        "ArgumentParser",
        "description",
        "usage",
        "parser",
        "add_argument",
        "dest",
        "help",
        "usage",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "add_argument",
        "dest",
        "help",
        "parser",
        "parse_args",
        "args",
        "config",
        "args",
        "rgw_node",
        "rgw_node",
        "utils",
        "connect_remote",
        "rgw_node",
        "os",
        "path",
        "basename",
        "os",
        "path",
        "splitext",
        "yaml_file",
        "configure_logging",
        "f_name",
        "log_f_name",
        "set_level",
        "args",
        "log_level",
        "upper",
        "Config",
        "yaml_file",
        "CephConfOp",
        "ssh_con",
        "config",
        "read",
        "ssh_con",
        "config",
        "mapped_sizes",
        "utils",
        "make_mapped_sizes",
        "config",
        "test_exec",
        "config",
        "ssh_con",
        "test_info",
        "success_status",
        "sys",
        "exit",
        "RGWBaseException",
        "e",
        "log",
        "error",
        "e",
        "log",
        "error",
        "traceback",
        "format_exc",
        "test_info",
        "failed_status",
        "sys",
        "exit"
    ],
    "literals": [
        "\"../../../..\"",
        "\"create_bucket\"",
        "f\"no of buckets to create: {config.bucket_count}\"",
        "\"user_id\"",
        "f\"creating bucket with name: {bucket_name_to_create}\"",
        "\"create_object\"",
        "\"object_compliance\"",
        "\"COMPLIANCE\"",
        "\"GOVERNANCE\"",
        "\"2025-01-01T00:00:00\"",
        "f\"s3 objects to create: {config.objects_count}\"",
        "f\"s3 object name: {s3_object_name}\"",
        "f\"s3 object path: {s3_object_path}\"",
        "f\"upload type: normal with lock mode {lock_mode}\"",
        "\"/\"",
        "\"/\"",
        "\"Try to delete the uploaded object versions\"",
        "\"Versions\"",
        "\"VersionId\"",
        "\"Access denied object deleted\"",
        "\"AccessDenied\"",
        "\"Error\"",
        "\"Code\"",
        "\"Expected: {expected_code}, Actual: {actual_code}\"",
        "\"ceph daemon crash found!\"",
        "\"__main__\"",
        "\"Test object lock configuration at a object level\"",
        "\"../../..\"",
        "\"test_data\"",
        "\"TEST_DATA_PATH: {TEST_DATA_PATH}\"",
        "\"test data dir not exists, creating.. \"",
        "\"-c\"",
        "\"config\"",
        "\"-log_level\"",
        "\"log_level\"",
        "\"Set Log Level [DEBUG, INFO, WARNING, ERROR, CRITICAL]\"",
        "\"info\"",
        "\"--rgw-node\"",
        "\"rgw_node\"",
        "\"RGW Node\"",
        "\"127.0.0.1\"",
        "\"127.0.0.1\"",
        "\"test passed\"",
        "\"test failed\""
    ],
    "variables": [
        "log",
        "TEST_DATA_PATH",
        "io_info_initialize",
        "basic_io_structure",
        "ceph_conf",
        "rgw_service",
        "all_users_info",
        "auth",
        "s3_conn_client",
        "bucket_name_to_create",
        "rgw_ip_and_port",
        "lock_mode",
        "lock_mode",
        "retain_until",
        "s3_object_name",
        "s3_object_path",
        "obj_body",
        "versions",
        "expected_code",
        "actual_code",
        "crash_info",
        "test_info",
        "project_dir",
        "test_data_dir",
        "rgw_service",
        "TEST_DATA_PATH",
        "usage",
        "parser",
        "args",
        "yaml_file",
        "rgw_node",
        "ssh_con",
        "ssh_con",
        "log_f_name",
        "config",
        "ceph_conf",
        "config",
        "mapped_sizes"
    ],
    "comments": [
        "create user",
        "authentication",
        "create buckets with object lock configuration",
        "uploading data in mentioned mode",
        "defining retain until date for longer",
        "check for any crashes during the execution"
    ],
    "docstrings": [
        "\"\"\" test_object_lock.py - Test object lock configuration at a object level\n\nPolarion ID : CEPH-83574058\nUsage: test_object_level_retention.py -c <input_yaml>\n\n<input_yaml>\n\ttest_object_level_compliance.yaml\n    test_object_level_governance.yaml\n\nOperation:\n    Create bucket with bucket lock enabled\n    Upload object to the bucket with compliance mode with retention date set\n    Upload another object in same bucket with governance mode\n    Verify overwriting of these objects is not allowed\n\"\"\"",
        "\"\"\"\n\n        Usage:\n\n          python3 test_object_lock.py -c test_object_lock.yaml\n        \"\"\""
    ],
    "functions": [
        "test_exec"
    ],
    "classes": []
}