{
    "identifiers": [
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "impl",
        "java",
        "util",
        "Locale",
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "CSSUnit",
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "CSSValueSyntax",
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "CSSValueSyntax",
        "Match",
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "nsac",
        "LexicalUnit",
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "nsac",
        "LexicalUnit",
        "LexicalType",
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "parser",
        "ParseHelper",
        "io",
        "sf",
        "carte",
        "doc",
        "style",
        "css",
        "parser",
        "SyntaxParser",
        "lunit",
        "nextParam",
        "lunit",
        "getParameters",
        "getNextLexicalUnit",
        "nextParam",
        "attrType",
        "nextParam",
        "getLexicalUnitType",
        "LexicalType",
        "OPERATOR_COMMA",
        "attrType",
        "nextParam",
        "nextParam",
        "getNextLexicalUnit",
        "nextParam",
        "postType",
        "nextParam",
        "getNextLexicalUnit",
        "postType",
        "LexicalType",
        "IDENT",
        "attrType",
        "nextParam",
        "getStringValue",
        "toLowerCase",
        "Locale",
        "ROOT",
        "LexicalType",
        "OPERATOR_MOD",
        "attrType",
        "postType",
        "getLexicalUnitType",
        "LexicalType",
        "OPERATOR_COMMA",
        "nextParam",
        "postType",
        "getNextLexicalUnit",
        "unitFitsAttrType",
        "nextParam",
        "attrType",
        "lunit",
        "attrtype",
        "equalsIgnoreCase",
        "attrtype",
        "attrtype",
        "syn",
        "SyntaxParser",
        "createSimpleSyntax",
        "attrtype",
        "syn",
        "lunit",
        "matches",
        "syn",
        "Match",
        "TRUE",
        "lunit",
        "getLexicalUnitType",
        "LexicalType",
        "STRING",
        "attrtype",
        "equals",
        "attrtype",
        "attrtype",
        "intern",
        "declUnit",
        "ParseHelper",
        "unitFromString",
        "attrtype",
        "fbUnit",
        "lunit",
        "getCssUnit",
        "declUnit",
        "CSSUnit",
        "CSS_OTHER",
        "fbUnit",
        "CSSUnit",
        "CSS_INVALID"
    ],
    "literals": [
        "\"string\"",
        "\"percentage\"",
        "\"ident\"",
        "\"custom-ident\"",
        "\"url\""
    ],
    "variables": [
        "attrType"
    ],
    "comments": [
        "No attribute type, no fallback",
        "Possible syntax error",
        "No fallback",
        "Obtain a string with the attribute type",
        "Probably error",
        "Syntax error",
        "We got the fallback in nextParam",
        "Could be an unit suffix, or an error"
    ],
    "docstrings": [
        "Copyright (c) 2005-2023, Carlos Amengual.\n\n SPDX-License-Identifier: BSD-3-Clause\n\n Licensed under a BSD-style License. You can find the license here:\n https://css4j.github.io/LICENSE.txt",
        "* Utility methods related to attribute values.",
        "* Determine whether the final type of an attr() could be only one, by comparing\n\t * the attribute type to the fallback value, if any.\n\t * \n\t * @param lunit\n\t * @return",
        "* Determine whether the lexical unit is of a type compatible with the lower\n\t * case attrtype.\n\t * \n\t * @param lunit    the lexical unit to test.\n\t * @param attrtype the attribute type (in lower case letters).\n\t * @return true if the lexical unit is of the same type or has a compatible\n\t *         unit."
    ],
    "functions": [
        "isProxyAttr",
        "unitFitsAttrType"
    ],
    "classes": [
        "AttrUtil"
    ]
}