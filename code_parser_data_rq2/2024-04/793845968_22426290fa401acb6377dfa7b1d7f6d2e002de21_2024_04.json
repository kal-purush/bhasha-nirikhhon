{
    "identifiers": [
        "json",
        "datetime",
        "date",
        "datetime",
        "Decimal",
        "getcontext",
        "typing",
        "Any",
        "Optional",
        "Union",
        "getcontext",
        "PRECISION",
        "Decimal",
        "Decimal",
        "SCALE",
        "Decimal",
        "Decimal",
        "PRECISION",
        "SCALE",
        "ALLOWED_DECIMALS",
        "schema_collision_counter",
        "data",
        "Optional",
        "props",
        "Optional",
        "data",
        "fix_recursive_inner",
        "datum",
        "props",
        "datum",
        "datum",
        "data",
        "data",
        "Optional",
        "schema",
        "Optional",
        "data",
        "name",
        "props",
        "schema",
        "items",
        "name",
        "data",
        "data",
        "name",
        "fix_recursive_inner",
        "data",
        "name",
        "props",
        "result",
        "value",
        "Optional",
        "Any",
        "props",
        "Optional",
        "Union",
        "Decimal",
        "date",
        "datetime",
        "value",
        "props",
        "json",
        "dumps",
        "value",
        "is_unstructured_object",
        "props",
        "json",
        "dumps",
        "value",
        "props",
        "props",
        "props",
        "props",
        "json",
        "dumps",
        "value",
        "props",
        "get",
        "props",
        "get",
        "parse_datetime",
        "value",
        "props",
        "get",
        "Decimal",
        "value",
        "MAX_NUM",
        "n",
        "MAX_NUM",
        "MAX_NUM",
        "n",
        "MAX_NUM",
        "n",
        "quantize",
        "ALLOWED_DECIMALS",
        "props",
        "get",
        "props",
        "fix_recursive_types_in_dict",
        "value",
        "props",
        "props",
        "get",
        "props",
        "fix_recursive_types_in_array",
        "value",
        "props",
        "value",
        "props",
        "props",
        "props",
        "dt",
        "Any",
        "Optional",
        "Union",
        "datetime",
        "date",
        "isinstance",
        "dt",
        "date",
        "dt",
        "dt",
        "dt",
        "datetime",
        "strptime",
        "dt",
        "datetime",
        "strptime",
        "dt",
        "datetime",
        "fromisoformat",
        "join",
        "dt",
        "split",
        "name",
        "schema_property",
        "nullable",
        "Union",
        "name",
        "Union",
        "Union",
        "Any",
        "schema_collision_counter",
        "schema_property",
        "len",
        "schema_property",
        "nullable",
        "result",
        "schema_property",
        "KeyError",
        "KeyError",
        "name",
        "schema_property",
        "get",
        "property_type",
        "column_type_avro",
        "name",
        "schema_property",
        "nullable",
        "items_type",
        "KeyError",
        "property_type",
        "column_type_avro",
        "col",
        "schema_property",
        "nullable",
        "col",
        "schema_property",
        "schema_property",
        "get",
        "items",
        "items_types",
        "schema_collision_counter",
        "name",
        "schema_collision_counter",
        "items_types",
        "property_format",
        "property_format",
        "property_type",
        "property_type",
        "SCALE",
        "PRECISION",
        "property_type",
        "property_type",
        "property_type",
        "property_type",
        "result_type",
        "nullable",
        "result_type",
        "result",
        "stream_name",
        "schema_properties",
        "primary_keys",
        "stream_name",
        "replace",
        "column_type_avro",
        "name",
        "json_type",
        "nullable",
        "name",
        "primary_keys",
        "name",
        "json_type",
        "schema_properties",
        "items",
        "schema"
    ],
    "literals": [
        "\"anyOf\"",
        "\"array\"",
        "\"type\"",
        "\"items\"",
        "\"$ref\"",
        "\"items\"",
        "\"type\"",
        "\"items\"",
        "\"date-time\"",
        "\"format\"",
        "\"\"",
        "\"string\"",
        "\"type\"",
        "\"number\"",
        "\"type\"",
        "\"object\"",
        "\"type\"",
        "\"\"",
        "\"properties\"",
        "\"properties\"",
        "\"array\"",
        "\"type\"",
        "\"items\"",
        "\"items\"",
        "\"object\"",
        "\"type\"",
        "\"properties\"",
        "\"Z\"",
        "\".\"",
        "\"%Y-%m-%dT%H:%M:%S.%fZ\"",
        "\"%Y-%m-%dT%H:%M:%SZ\"",
        "\"+\"",
        "\"+\"",
        "\"name\"",
        "\"\"",
        "\"anyOf\"",
        "\"anyOf\"",
        "\"type\"",
        "\"null\"",
        "\"string\"",
        "\"string\"",
        "\"type\"",
        "f\"Column [{name}] did not have a defined type in the schema\"",
        "\"format\"",
        "\"array\"",
        "\"items\"",
        "\"type\"",
        "\"array\"",
        "\"items\"",
        "\"type\"",
        "\"string\"",
        "\"object\"",
        "\"properties\"",
        "\"type\"",
        "\"record\"",
        "\"name\"",
        "f\"{name}_{schema_collision_counter}_properties\"",
        "\"fields\"",
        "\"string\"",
        "\"date-time\"",
        "\"type\"",
        "\"long\"",
        "\"logicalType\"",
        "\"timestamp-millis\"",
        "\"time\"",
        "\"type\"",
        "\"int\"",
        "\"logicalType\"",
        "\"time-millis\"",
        "\"string\"",
        "\"string\"",
        "\"number\"",
        "\"type\"",
        "\"bytes\"",
        "\"logicalType\"",
        "\"decimal\"",
        "\"scale\"",
        "\"precision\"",
        "\"integer\"",
        "\"string\"",
        "\"string\"",
        "\"integer\"",
        "\"long\"",
        "\"boolean\"",
        "\"boolean\"",
        "\"string\"",
        "\"type\"",
        "\"null\"",
        "\"type\"",
        "\"record\"",
        "\"namespace\"",
        "\"youcruit.avro\"",
        "\"name\"",
        "\"-\"",
        "\"_\"",
        "\"fields\""
    ],
    "variables": [
        "PRECISION",
        "SCALE",
        "prec",
        "ALLOWED_DECIMALS",
        "MAX_NUM",
        "schema_collision_counter",
        "result",
        "result",
        "name",
        "result",
        "name",
        "n",
        "result",
        "result_type",
        "result",
        "property_type",
        "property_format",
        "items_type",
        "result_type",
        "result_type",
        "items_types",
        "result_type",
        "result_type",
        "result_type",
        "result_type",
        "result_type",
        "result_type",
        "result_type",
        "result_type",
        "result_type",
        "result_type",
        "result",
        "schema"
    ],
    "comments": [
        "Limit decimals to the same precision and scale as BigQuery accepts",
        "dump to string if array without items or recursive",
        "Seems like there are fractional seconds",
        "Seems to be no fractional seconds",
        "noqa: C901",
        "type: ignore",
        "type: ignore",
        "Avro tries to be smart and reuse schemas or something,",
        "this causes collisions when different schemas end up",
        "having the same name. So ensure that doesn't happen.",
        "For some reason hyphens are not liked here"
    ],
    "docstrings": [
        "\"\"\"AVRO utility functions.\"\"\"",
        "\"\"\"\n    Recursively walks the array to find datetimes and such\n    \"\"\"",
        "\"\"\"\n    Recursively walks the object to find datetimes and such\n    \"\"\"",
        "\"\"\"\n    Recursively walks the item to find datetimes and such\n    \"\"\"",
        "\"\"\"Check if property is object and it has no properties.\"\"\""
    ],
    "functions": [
        "fix_recursive_types_in_array",
        "fix_recursive_types_in_dict",
        "fix_recursive_inner",
        "is_unstructured_object",
        "parse_datetime",
        "column_type_avro",
        "avro_schema"
    ],
    "classes": []
}