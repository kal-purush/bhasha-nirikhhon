{
    "identifiers": [
        "z",
        "zodResolver",
        "ChatGoogleGenerativeAI",
        "revalidatePath",
        "ChatGoogleGenerativeAI",
        "process",
        "prevState",
        "formData",
        "z",
        "z",
        "schema",
        "formData",
        "parse",
        "parse",
        "parse",
        "process",
        "model",
        "descriptionData",
        "descriptionData",
        "data",
        "revalidatePath",
        "data",
        "error"
    ],
    "literals": [
        "\"use server\"",
        "\"zod\"",
        "\"@hookform/resolvers/zod\"",
        "\"@langchain/google-genai\"",
        "\"next/cache\"",
        "\"gemini-pro\"",
        "string",
        "\"Based on the description, generate a survey with questions array where every element has 2 fields: text and the fieldType and fieldType can be of these options RadioGroup, Select,Input, Textarea, Switch and return it in json format. For RadioGroup, and Select types also return fieldOptions array with text and value fields. For example, for RadioGroup, and Select types, the field options array can be [{text:'Yes', value:'yes'}, {text:'no', value:'no'}] and for input, textarea and switch types, the field options array can be empty. For example, for input, textarea and switch types, the field options array can be []\"",
        "\"description\"",
        "\"Failed to parse data\"",
        "\"API key not found\"",
        "\"system\"",
        "${descriptionData.description}  ${\n          descriptionData.description as string\n        }",
        "string",
        "\"/\"",
        "\"Success\"",
        "\"Failed to create form\""
    ],
    "variables": [
        "model",
        "promptTemplate",
        "schema",
        "parse",
        "descriptionData",
        "data"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "generateForm"
    ],
    "classes": []
}