{
    "identifiers": [
        "styleHref",
        "styleGroup",
        "activeElm",
        "activeElm",
        "styleHref",
        "activeElm",
        "styleGroup",
        "activeElm",
        "activeElm",
        "linkOnLoad",
        "activeElm",
        "linkOnLoad",
        "handleSwitch",
        "styleHref",
        "styleGroup",
        "activeElm",
        "styleHref",
        "styleGroup",
        "styleGroup",
        "styleHref",
        "styleGroup",
        "styleHref",
        "activeElm",
        "activeElm",
        "createLinkedStylesheet",
        "styleHref",
        "styleGroup",
        "activeElm",
        "activeElm",
        "activeElm",
        "activeElm",
        "activeElm",
        "sessionStorage",
        "SESSION_STORAGE_KEY",
        "styleGroup",
        "styleHref",
        "SESSION_VAL_SEPARATOR",
        "styleGroup",
        "styleHref",
        "styleGroup",
        "styleHref",
        "styleGroup",
        "styleHref",
        "i",
        "inactiveElms",
        "i",
        "inactiveElms",
        "i",
        "elm",
        "elm",
        "linkRel",
        "linkRel",
        "linkRel",
        "elm",
        "linkRelAlt",
        "isInitialized",
        "isInitialized",
        "sessionStorage",
        "SESSION_STORAGE_KEY",
        "storedData",
        "SESSION_VAL_SEPARATOR",
        "storedVals",
        "storedVals",
        "styleHref",
        "handleSwitch",
        "styleHref",
        "styleGroup",
        "evt",
        "evt",
        "evt",
        "styleHref",
        "handleSwitch",
        "styleHref",
        "styleGroup",
        "evt",
        "initStyleSwitcher"
    ],
    "literals": [
        "'activeStylesheetHref'",
        "'||'",
        "'link'",
        "'rel'",
        "'stylesheet'",
        "'href'",
        "'data-style-group'",
        "''",
        "'load'",
        "'load'",
        "'link[href*=\"'",
        "'\"][data-style-group=\"'",
        "'\"]'",
        "'link[href*=\"'",
        "'\"]'",
        "'rel'",
        "''",
        "''",
        "'media'",
        "'link:not([href*=\"'",
        "'\"])[data-style-group=\"'",
        "'\"]'",
        "'link:not([href*=\"'",
        "'\"])'",
        "'rel'",
        "''",
        "'alternate'",
        "' alternate'",
        "'rel'",
        "'DOMContentLoaded'",
        "''",
        "''",
        "''",
        "'click'",
        "'data-style-href'",
        "'data-style-group'"
    ],
    "variables": [
        "SESSION_STORAGE_KEY",
        "SESSION_VAL_SEPARATOR",
        "isInitialized",
        "activeElm",
        "activeElm",
        "inactiveElms",
        "i",
        "elm",
        "linkRel",
        "linkRelAlt",
        "storedData",
        "storedVals",
        "styleHref",
        "styleGroup",
        "styleHref",
        "styleGroup"
    ],
    "comments": [
        "Functions",
        "=========================================================================",
        "Stylesheet will call this function after loading is complete",
        "Remove \"alternate\" keyword and media attribute",
        "Force enable stylesheet (required for some browsers)",
        "Store active style sheet",
        "Disable other elms",
        "Fix for browsersync and alternate stylesheet updates. Will",
        "cause FOUC when switching stylesheets during development, but",
        "required to properly apply style updates when alternate",
        "stylesheets are enabled.",
        "CSS custom property ponyfill",
        "Event listeners",
        "Restore active stylesheet",
        "Update active stylesheet",
        "Main",
        "========================================================================="
    ],
    "docstrings": [
        "* Adds event listeners to change active stylesheet and restore previously\n   * activated stylesheet on reload.\n   *\n   * @example\n   *\n   * This link:\n   *   <a href=\"#\" data-style-href=\"path/to/file.css\" data-style-group=\"foo\">Bar</a>\n   * Activates an existing matched <link> (href + group match):\n   *   <link rel=\"stylesheet alternate\" data-style-group=\"foo\" href=\"deep/path/to/file.css\" >\n   * Generates a new <link> if needed (no href + group match):\n   *   <link rel=\"stylesheet\" data-style-group=\"foo\" href=\"path/to/file.css\" >\n   * Disables <link> elements that match group but not href\n   *   <link rel=\"stylesheet\" data-style-group=\"foo\" href=\"some/other/file.css\" >\n   * Ignores <link> elements that do not match href and group\n   *   <link rel=\"stylesheet\" data-style-group=\"bar\" href=\"some/other/file.css\" >"
    ],
    "functions": [
        "initStyleSwitcher",
        "createLinkedStylesheet",
        "handleSwitch"
    ],
    "classes": []
}