{
    "identifiers": [
        "pandas",
        "pd",
        "flask",
        "Flask",
        "request",
        "render_template",
        "joblib",
        "Flask",
        "joblib",
        "load",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "methods",
        "request",
        "method",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "request",
        "form",
        "pd",
        "DataFrame",
        "profile_id",
        "u_q",
        "coolant",
        "u_d",
        "motor_speed",
        "i_d",
        "i_q",
        "ambient",
        "model",
        "predict",
        "data",
        "render_template",
        "prediction_text",
        "prediction",
        "app",
        "run",
        "app",
        "run",
        "host",
        "port"
    ],
    "literals": [
        "'ev_temp_regression.pkl'",
        "\"/\"",
        "\"index.html\"",
        "'/predict'",
        "\"POST\"",
        "\"POST\"",
        "'profile_id'",
        "'u_q'",
        "'coolant'",
        "'u_d'",
        "'motor_speed'",
        "'i_d'",
        "'i_q'",
        "'ambient'",
        "'profile_id'",
        "'u_q'",
        "'coolant'",
        "'u_d'",
        "'motor_speed'",
        "'i_d'",
        "'i_q'",
        "'ambient'",
        "\"index.html\"",
        "\"__main__\"",
        "\"0.0.0.0\""
    ],
    "variables": [
        "app",
        "model",
        "profile_id",
        "u_q",
        "coolant",
        "u_d",
        "motor_speed",
        "i_d",
        "i_q",
        "ambient",
        "data",
        "prediction"
    ],
    "comments": [
        "Create Flask app",
        "Load the trained model",
        "Define the home route",
        "Define the prediction route",
        "Get input values from the HTML form",
        "Create a DataFrame with the input data",
        "Make prediction using the loaded model",
        "Run the app if executed directly"
    ],
    "docstrings": [],
    "functions": [
        "home",
        "predict"
    ],
    "classes": []
}