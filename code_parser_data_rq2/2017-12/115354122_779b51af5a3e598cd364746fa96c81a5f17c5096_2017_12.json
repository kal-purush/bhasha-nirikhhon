{
    "identifiers": [
        "Collections",
        "Windows",
        "Forms",
        "Tagger",
        "IComparer",
        "x",
        "y",
        "x",
        "y",
        "TreeNode",
        "x",
        "TreeNode",
        "y",
        "tnX",
        "Text",
        "Length",
        "c",
        "tnX",
        "Text",
        "values_tnX",
        "charCount",
        "Convert",
        "ToInt32",
        "c",
        "charCount",
        "charCount",
        "tnY",
        "Text",
        "Length",
        "c",
        "tnY",
        "Text",
        "values_tnY",
        "charCount",
        "Convert",
        "ToInt32",
        "c",
        "charCount",
        "tnX",
        "Text",
        "Length",
        "tnY",
        "Text",
        "Length",
        "charToBeChecked",
        "tnX",
        "Text",
        "Length",
        "tnX",
        "Text",
        "Length",
        "tnY",
        "Text",
        "Length",
        "charToBeChecked",
        "tnY",
        "Text",
        "Length",
        "charToBeChecked",
        "tnX",
        "Text",
        "Length",
        "i",
        "charToBeChecked",
        "i",
        "values_tnX",
        "i",
        "values_tnY",
        "i",
        "values_tnX",
        "i",
        "values_tnY",
        "i",
        "i",
        "charToBeChecked",
        "tnX",
        "Text",
        "Length",
        "charToBeChecked",
        "tnY",
        "Text",
        "Length",
        "charToBeChecked",
        "ArgumentException"
    ],
    "literals": [
        "\"Fehler beim alphabetischen Sortieren der TreeView-Knoten\""
    ],
    "variables": [
        "TreeNode",
        "tnX",
        "TreeNode",
        "tnY",
        "charCount",
        "values_tnX",
        "values_tnY",
        "charToBeChecked",
        "i"
    ],
    "comments": [
        "Verleiche Namen der TreeView-Knoten und sortiere alphabetisch",
        "</summary>",
        "<param name=\"x\"></param>",
        "<param name=\"y\"></param>",
        "<returns></returns>",
        "tnX: Zerlege ersten Knoten-Namen in Character und speichere deren Integerwert in Array",
        "tnY: Zerlege zweiten Knoten-Namen in Character und speichere deren Integerwert in Array",
        "Festlegen wieviele Integer mindestens verglichen werden müssen",
        "Arrays vergleichen bis zu prüfende Zeichenlänge erreicht, wenn nicht bereits zuvor Rückgabewert.",
        "Falls zu prüfende Zeichenlänge erreicht Entscheidung über Namenslänge sonst identisch"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "Compare"
    ],
    "classes": [
        "AlphabeticSorter"
    ]
}