{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Reflection",
        "Text",
        "Threading",
        "Tasks",
        "Windows",
        "Windows",
        "Input",
        "WinHue3",
        "Functions",
        "Behaviors",
        "DependencyObject",
        "obj",
        "ICommand",
        "obj",
        "GetValue",
        "CommandProperty",
        "DependencyObject",
        "obj",
        "ICommand",
        "value",
        "obj",
        "SetValue",
        "CommandProperty",
        "value",
        "DependencyProperty",
        "RegisterAttached",
        "ICommand",
        "CommandBehavior",
        "FrameworkPropertyMetadata",
        "ICommand",
        "DependencyProperty",
        "RegisterAttached",
        "CommandBehavior",
        "FrameworkPropertyMetadata",
        "Empty",
        "PropertyChangedCallback",
        "OnRoutedEventNameChanged",
        "DependencyObject",
        "d",
        "d",
        "GetValue",
        "RoutedEventNameProperty",
        "DependencyObject",
        "d",
        "value",
        "d",
        "SetValue",
        "RoutedEventNameProperty",
        "value",
        "DependencyObject",
        "d",
        "DependencyPropertyChangedEventArgs",
        "e",
        "e",
        "NewValue",
        "IsNullOrEmpty",
        "routedEvent",
        "EventHooker",
        "eventHooker",
        "ObjectWithAttachedCommand",
        "d",
        "d",
        "GetType",
        "GetEvent",
        "routedEvent",
        "BindingFlags",
        "Public",
        "BindingFlags",
        "Instance",
        "eventInfo",
        "eventInfo",
        "AddEventHandler",
        "d",
        "eventHooker",
        "GetNewEventHandlerToRunCommand",
        "eventInfo",
        "EventInfo",
        "eventInfo",
        "eventInfo",
        "ArgumentNullException",
        "eventInfo",
        "EventHandlerType",
        "ArgumentException",
        "Delegate",
        "CreateDelegate",
        "eventInfo",
        "EventHandlerType",
        "GetType",
        "GetMethod",
        "BindingFlags",
        "NonPublic",
        "BindingFlags",
        "Instance",
        "sender",
        "EventArgs",
        "e",
        "ICommand",
        "sender",
        "DependencyObject",
        "GetValue",
        "CommandBehavior",
        "CommandProperty",
        "command",
        "command",
        "Execute"
    ],
    "literals": [
        "\"Command\"",
        "\"RoutedEventName\"",
        "\"eventInfo\"",
        "\"EventHandlerType is null\"",
        "\"OnEventRaised\""
    ],
    "variables": [
        "DependencyProperty",
        "CommandProperty",
        "DependencyProperty",
        "RoutedEventNameProperty",
        "routedEvent",
        "EventHooker",
        "eventHooker",
        "EventInfo",
        "eventInfo",
        "DependencyObject",
        "ObjectWithAttachedCommand",
        "Delegate",
        "ICommand",
        "command"
    ],
    "comments": [
        "Using a DependencyProperty as the backing store for MyProperty.  This enables animation, styling, binding, etc...",
        "Gets the RoutedEventName property.",
        "</summary>",
        "Sets the RoutedEventName property.",
        "</summary>",
        "Hooks up a Dynamically created EventHandler (by using the",
        "<see cref=\"EventHooker\">EventHooker</see> class) that when",
        "run will run the associated ICommand",
        "</summary>",
        "If the RoutedEvent string is not null, create a new",
        "dynamically created EventHandler that when run will execute",
        "the actual bound ICommand instance (usually in the ViewModel)",
        "Hook up Dynamically created event handler",
        "Contains the event that is hooked into the source RoutedEvent",
        "that was specified to run the ICommand",
        "</summary>",
        "The DependencyObject, that holds a binding to the actual",
        "ICommand to execute",
        "</summary>",
        "Creates a Dynamic EventHandler that will be run the ICommand",
        "when the user specified RoutedEvent fires",
        "</summary>",
        "<param name=\"eventInfo\">The specified RoutedEvent EventInfo</param>",
        "<returns>An Delegate that points to a new EventHandler",
        "that will be run the ICommand</returns>",
        "Runs the ICommand when the requested RoutedEvent fires",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ICommand",
        "GetCommand",
        "SetCommand",
        "GetRoutedEventName",
        "SetRoutedEventName",
        "OnRoutedEventNameChanged",
        "Delegate",
        "GetNewEventHandlerToRunCommand",
        "OnEventRaised"
    ],
    "classes": [
        "CommandBehavior",
        "EventHooker"
    ]
}