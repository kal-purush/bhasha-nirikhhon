{
    "identifiers": [
        "com",
        "alibaba",
        "datax",
        "plugin",
        "reader",
        "mongodbreader",
        "util",
        "com",
        "alibaba",
        "datax",
        "common",
        "exception",
        "DataXException",
        "com",
        "alibaba",
        "datax",
        "common",
        "util",
        "Configuration",
        "com",
        "alibaba",
        "datax",
        "plugin",
        "reader",
        "mongodbreader",
        "KeyConstant",
        "com",
        "alibaba",
        "datax",
        "plugin",
        "reader",
        "mongodbreader",
        "MongoDBReaderErrorCode",
        "com",
        "google",
        "common",
        "Strings",
        "com",
        "mongodb",
        "com",
        "mongodb",
        "client",
        "MongoCollection",
        "com",
        "mongodb",
        "client",
        "MongoDatabase",
        "org",
        "bson",
        "BsonDocument",
        "java",
        "util",
        "java",
        "util",
        "originalSliceConfig",
        "adviceNumber",
        "mongoClient",
        "confList",
        "dbName",
        "originalSliceConfig",
        "getString",
        "KeyConstant",
        "MONGO_DB_NAME",
        "collectionName",
        "originalSliceConfig",
        "getString",
        "KeyConstant",
        "MONGO_COLLECTION_NAME",
        "Strings",
        "isNullOrEmpty",
        "dbName",
        "Strings",
        "isNullOrEmpty",
        "collectionName",
        "mongoClient",
        "DataXException",
        "asDataXException",
        "MongoDBReaderErrorCode",
        "ILLEGAL_VALUE",
        "MongoDBReaderErrorCode",
        "ILLEGAL_VALUE",
        "getDescription",
        "query",
        "originalSliceConfig",
        "getString",
        "KeyConstant",
        "MONGO_QUERY",
        "db",
        "mongoClient",
        "getDatabase",
        "dbName",
        "collection",
        "db",
        "getCollection",
        "collectionName",
        "countInterval",
        "doSplitInterval",
        "adviceNumber",
        "collection",
        "query",
        "interval",
        "countInterval",
        "conf",
        "originalSliceConfig",
        "clone",
        "conf",
        "KeyConstant",
        "SKIP_COUNT",
        "interval",
        "interval",
        "conf",
        "KeyConstant",
        "BATCH_SIZE",
        "interval",
        "batchSize",
        "confList",
        "add",
        "conf",
        "confList",
        "adviceNumber",
        "collection",
        "query",
        "intervalCountList",
        "totalCount",
        "Strings",
        "isNullOrEmpty",
        "query",
        "queryString",
        "query",
        "split",
        "q",
        "queryString",
        "queryString",
        "queryString",
        "BsonDocument",
        "parse",
        "q",
        "totalCount",
        "collection",
        "count",
        "BsonDocument",
        "parse",
        "q",
        "totalCount",
        "totalCount",
        "collection",
        "count",
        "totalCount",
        "intervalCountList",
        "batchSize",
        "totalCount",
        "adviceNumber",
        "i",
        "i",
        "adviceNumber",
        "i",
        "entry",
        "i",
        "adviceNumber",
        "entry",
        "batchSize",
        "batchSize",
        "adviceNumber",
        "entry",
        "batchSize",
        "batchSize",
        "entry",
        "interval",
        "batchSize",
        "i",
        "intervalCountList",
        "add",
        "entry",
        "intervalCountList",
        "interval",
        "batchSize"
    ],
    "literals": [
        "\"=\"",
        "\"{\"",
        "\":{$gt:ISODate('\"",
        "\"'),$lte:ISODate('\"",
        "\"')}}\"",
        "\"-----count sql===\"",
        "\"-----totalCount===\""
    ],
    "variables": [
        "interval",
        "batchSize"
    ],
    "comments": [
        "String q = \"{\"+queryString[0]+\":{$gte:ISODate('\"+queryString[1]+\"')}}\";//\"{\" + queryString[0] + \":{$gte:ISODate('\" + queryString[1] + \"')}}\";",
        "100 6 => 16 mod 4"
    ],
    "docstrings": [
        "* 这个判断确认不会丢失最后一页数据，\n             * 因为 totalCount/adviceNumber 不整除时，如果不做判断会丢失最后一页"
    ],
    "functions": [
        "doSplit",
        "doSplitInterval"
    ],
    "classes": [
        "CollectionSplitUtil",
        "Entry"
    ]
}