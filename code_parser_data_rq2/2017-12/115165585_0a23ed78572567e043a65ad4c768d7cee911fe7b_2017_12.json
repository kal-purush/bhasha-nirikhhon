{
    "identifiers": [
        "idc",
        "idaapi",
        "idautils",
        "os",
        "sys",
        "time",
        "pickle",
        "collections",
        "SHOW",
        "key",
        "ea",
        "formal",
        "iteritems",
        "RizzoFunctionDescriptor",
        "formal",
        "functions",
        "key",
        "func",
        "name",
        "SHOW",
        "func",
        "name",
        "key",
        "ea",
        "fuzzy",
        "iteritems",
        "RizzoFunctionDescriptor",
        "fuzzy",
        "functions",
        "key",
        "func",
        "name",
        "SHOW",
        "func",
        "name",
        "ea",
        "x",
        "frm",
        "x",
        "idautils",
        "XrefsTo",
        "ea",
        "block",
        "block",
        "block",
        "block",
        "block",
        "nblock",
        "fuzzy",
        "formal",
        "nblock",
        "formal",
        "len",
        "immediates",
        "len",
        "nblock",
        "immediates",
        "len",
        "functions",
        "len",
        "nblock",
        "functions",
        "signatures",
        "functions",
        "key",
        "signatures",
        "key",
        "functions",
        "ea",
        "functions",
        "ea",
        "sigfile",
        "sigfile",
        "sigfile",
        "DEFAULT_SIGNATURE_FILE",
        "idautils",
        "Strings",
        "strings",
        "ea",
        "RizzoStringDescriptor",
        "time",
        "time",
        "generate",
        "time",
        "time",
        "len",
        "signatures",
        "formal",
        "len",
        "signatures",
        "fuzzy",
        "len",
        "signatures",
        "functions",
        "end",
        "start",
        "sigfile",
        "open",
        "sigfile",
        "pickle",
        "dump",
        "signatures",
        "fp",
        "fp",
        "close",
        "sigfile",
        "open",
        "sigfile",
        "pickle",
        "load",
        "fp",
        "fp",
        "close",
        "sigs",
        "value",
        "hash",
        "value",
        "block",
        "block",
        "startEA",
        "ea",
        "block",
        "endEA",
        "idaapi",
        "decode_insn",
        "ea",
        "x",
        "x",
        "idautils",
        "DataRefsFrom",
        "ea",
        "x",
        "x",
        "idautils",
        "CodeRefsFrom",
        "ea",
        "formal",
        "append",
        "idc",
        "GetMnem",
        "ea",
        "idaapi",
        "is_call_insn",
        "ea",
        "cref",
        "crefs",
        "idc",
        "Name",
        "cref",
        "func_name",
        "functions",
        "append",
        "func_name",
        "fuzzy",
        "append",
        "drefs",
        "dref",
        "drefs",
        "strings",
        "has_key",
        "dref",
        "formal",
        "append",
        "strings",
        "dref",
        "value",
        "fuzzy",
        "append",
        "strings",
        "dref",
        "value",
        "formal",
        "append",
        "fuzzy",
        "append",
        "drefs",
        "crefs",
        "n",
        "len",
        "idaapi",
        "cmd",
        "Operands",
        "idc",
        "GetOpnd",
        "ea",
        "n",
        "formal",
        "append",
        "opnd_text",
        "idaapi",
        "cmd",
        "Operands",
        "n",
        "idaapi",
        "o_imm",
        "opnd_text",
        "startswith",
        "idaapi",
        "cmd",
        "Operands",
        "n",
        "value",
        "idaapi",
        "getFlags",
        "idaapi",
        "cmd",
        "Operands",
        "n",
        "value",
        "fuzzy",
        "append",
        "idaapi",
        "cmd",
        "Operands",
        "n",
        "value",
        "immediates",
        "append",
        "idaapi",
        "cmd",
        "Operands",
        "n",
        "value",
        "idc",
        "NextHead",
        "ea",
        "sighash",
        "join",
        "formal",
        "sighash",
        "join",
        "fuzzy",
        "immediates",
        "functions",
        "func",
        "block",
        "idaapi",
        "FlowChart",
        "func",
        "blocks",
        "append",
        "block",
        "block",
        "blocks",
        "RizzoSignatures",
        "ea",
        "strings",
        "iteritems",
        "len",
        "value",
        "len",
        "xrefs",
        "idaapi",
        "get_func",
        "xrefs",
        "func",
        "sighash",
        "value",
        "signatures",
        "strings",
        "has_key",
        "strhash",
        "signatures",
        "strings",
        "strhash",
        "signatures",
        "stringdups",
        "add",
        "strhash",
        "strhash",
        "signatures",
        "stringdups",
        "signatures",
        "strings",
        "func",
        "startEA",
        "ea",
        "idautils",
        "Functions",
        "idaapi",
        "get_func",
        "ea",
        "func",
        "func",
        "sighash",
        "join",
        "e",
        "e",
        "f",
        "i",
        "c",
        "blocks",
        "sighash",
        "join",
        "f",
        "e",
        "f",
        "i",
        "c",
        "blocks",
        "signatures",
        "functions",
        "func",
        "startEA",
        "idc",
        "Name",
        "func",
        "startEA",
        "blocks",
        "signatures",
        "formal",
        "has_key",
        "formal",
        "signatures",
        "formal",
        "formal",
        "signatures",
        "formaldups",
        "add",
        "formal",
        "formal",
        "signatures",
        "formaldups",
        "signatures",
        "formal",
        "func",
        "startEA",
        "signatures",
        "fuzzy",
        "has_key",
        "fuzzy",
        "signatures",
        "fuzzy",
        "fuzzy",
        "signatures",
        "fuzzydups",
        "add",
        "fuzzy",
        "fuzzy",
        "signatures",
        "fuzzydups",
        "signatures",
        "fuzzy",
        "func",
        "startEA",
        "e",
        "f",
        "immediates",
        "c",
        "blocks",
        "immediate",
        "immediates",
        "signatures",
        "immediates",
        "has_key",
        "immediate",
        "signatures",
        "immediates",
        "immediate",
        "signatures",
        "immediatedups",
        "add",
        "immediate",
        "immediate",
        "signatures",
        "immediatedups",
        "signatures",
        "immediates",
        "func",
        "startEA",
        "signatures",
        "show",
        "signatures",
        "extsigs",
        "time",
        "time",
        "extsig",
        "ext_func_ea",
        "extsigs",
        "formal",
        "iteritems",
        "signatures",
        "formal",
        "has_key",
        "extsig",
        "RizzoFunctionDescriptor",
        "extsigs",
        "formal",
        "extsigs",
        "functions",
        "extsig",
        "RizzoFunctionDescriptor",
        "signatures",
        "formal",
        "signatures",
        "functions",
        "extsig",
        "newfunc",
        "time",
        "time",
        "len",
        "formal",
        "end",
        "start",
        "time",
        "time",
        "extsig",
        "ext_func_ea",
        "extsigs",
        "fuzzy",
        "iteritems",
        "signatures",
        "fuzzy",
        "has_key",
        "extsig",
        "RizzoFunctionDescriptor",
        "signatures",
        "fuzzy",
        "signatures",
        "functions",
        "extsig",
        "RizzoFunctionDescriptor",
        "extsigs",
        "fuzzy",
        "extsigs",
        "functions",
        "extsig",
        "len",
        "curfunc",
        "blocks",
        "len",
        "newfunc",
        "blocks",
        "newfunc",
        "time",
        "time",
        "len",
        "fuzzy",
        "end",
        "start",
        "time",
        "time",
        "extsig",
        "ext_func_ea",
        "extsigs",
        "strings",
        "iteritems",
        "signatures",
        "strings",
        "has_key",
        "extsig",
        "RizzoFunctionDescriptor",
        "signatures",
        "strings",
        "signatures",
        "functions",
        "extsig",
        "RizzoFunctionDescriptor",
        "extsigs",
        "strings",
        "extsigs",
        "functions",
        "extsig",
        "newfunc",
        "time",
        "time",
        "len",
        "strings",
        "end",
        "start",
        "time",
        "time",
        "extsig",
        "ext_func_ea",
        "extsigs",
        "immediates",
        "iteritems",
        "signatures",
        "immediates",
        "has_key",
        "extsig",
        "RizzoFunctionDescriptor",
        "signatures",
        "immediates",
        "signatures",
        "functions",
        "extsig",
        "RizzoFunctionDescriptor",
        "extsigs",
        "immediates",
        "extsigs",
        "functions",
        "extsig",
        "newfunc",
        "time",
        "time",
        "len",
        "immediates",
        "end",
        "start",
        "formal",
        "strings",
        "immediates",
        "fuzzy",
        "ea",
        "name",
        "idc",
        "Name",
        "ea",
        "curname",
        "startswith",
        "name",
        "split",
        "idc",
        "LocByName",
        "name",
        "idc",
        "BADADDR",
        "idc",
        "MakeName",
        "ea",
        "name",
        "idc",
        "SetFunctionFlags",
        "ea",
        "idc",
        "GetFunctionFlags",
        "ea",
        "idc",
        "FUNC_LIB",
        "extsigs",
        "time",
        "time",
        "match",
        "fuzzy",
        "match",
        "extsigs",
        "curfunc",
        "newfunc",
        "match",
        "iteritems",
        "rename",
        "has_key",
        "newfunc",
        "name",
        "newfunc",
        "name",
        "rename",
        "newfunc",
        "name",
        "append",
        "curfunc",
        "ea",
        "nblock",
        "newfunc",
        "blocks",
        "RizzoBlockDescriptor",
        "nblock",
        "cblock",
        "curfunc",
        "blocks",
        "RizzoBlockDescriptor",
        "cblock",
        "cblock",
        "match",
        "nblock",
        "fuzzy",
        "bm",
        "has_key",
        "cblock",
        "bm",
        "cblock",
        "duplicates",
        "add",
        "cblock",
        "cblock",
        "duplicates",
        "nblock",
        "cblock",
        "nblock",
        "bm",
        "iteritems",
        "n",
        "len",
        "cblock",
        "functions",
        "idc",
        "LocByName",
        "cblock",
        "functions",
        "n",
        "ea",
        "idc",
        "BADADDR",
        "rename",
        "has_key",
        "nblock",
        "functions",
        "n",
        "rename",
        "nblock",
        "functions",
        "n",
        "append",
        "ea",
        "nblock",
        "functions",
        "n",
        "ea",
        "name",
        "candidates",
        "rename",
        "iteritems",
        "candidates",
        "collections",
        "Counter",
        "candidates",
        "most_common",
        "count",
        "rename",
        "winner",
        "name",
        "time",
        "time",
        "count",
        "end",
        "start",
        "sigfile",
        "time",
        "time",
        "Rizzo",
        "sigfile",
        "r",
        "save",
        "time",
        "time",
        "end",
        "start",
        "sigfile",
        "time",
        "time",
        "Rizzo",
        "sigfile",
        "r",
        "load",
        "r",
        "apply",
        "s",
        "time",
        "time",
        "end",
        "start",
        "arg",
        "idc",
        "AskFile",
        "fname",
        "fname",
        "fname",
        "RizzoBuild",
        "fname",
        "arg",
        "idc",
        "AskFile",
        "fname",
        "RizzoApply",
        "fname",
        "idaapi",
        "plugin_t",
        "idaapi",
        "IDA_SDK_VERSION",
        "idaapi",
        "register_action",
        "idaapi",
        "action_desc_t",
        "action_rizzo_loadfile",
        "rizzo_loadHandler",
        "idaapi",
        "attach_action_to_menu",
        "action_rizzo_loadfile",
        "idaapi",
        "SETMENU_APP",
        "idaapi",
        "register_action",
        "idaapi",
        "action_desc_t",
        "action_rizzo_producefile",
        "rizzo_produceHandler",
        "idaapi",
        "attach_action_to_menu",
        "action_rizzo_producefile",
        "idaapi",
        "SETMENU_APP",
        "idaapi",
        "add_menu_item",
        "rizzo_load",
        "idaapi",
        "add_menu_item",
        "rizzo_produce",
        "idaapi",
        "PLUGIN_KEEP",
        "idaapi",
        "IDA_SDK_VERSION",
        "idaapi",
        "unregister_action",
        "action_rizzo_loadfile",
        "idaapi",
        "unregister_action",
        "action_rizzo_producefile",
        "idaapi",
        "del_menu_item",
        "menu_context_load",
        "idaapi",
        "del_menu_item",
        "menu_context_produce",
        "arg",
        "idaapi",
        "IDAPython_ExecScript",
        "script",
        "globals",
        "idaapi",
        "action_handler_t",
        "idaapi",
        "action_handler_t",
        "ctx",
        "rizzo_load",
        "ctx",
        "idaapi",
        "AST_ENABLE_ALWAYS",
        "idaapi",
        "action_handler_t",
        "idaapi",
        "action_handler_t",
        "ctx",
        "rizzo_produce",
        "ctx",
        "idaapi",
        "AST_ENABLE_ALWAYS",
        "RizzoPlugin"
    ],
    "literals": [
        "\"\\n\\nGENERATED FORMAL SIGNATURES FOR:\"",
        "\"\\n\\nGENERATRED FUZZY SIGNATURES FOR:\"",
        "\"rizzo.sig\"",
        "\"Generated %d formal signatures and %d fuzzy signatures for %d functions in %.2f seconds.\"",
        "\"Saving signatures to %s...\"",
        "\"wb\"",
        "\"done.\"",
        "\"Loading signatures from %s...\"",
        "\"rb\"",
        "\"done.\"",
        "\"funcref\"",
        "\"dataref\"",
        "\"dataref\"",
        "'-'",
        "''",
        "''",
        "''",
        "''",
        "\"Found %d formal matches in %.2f seconds.\"",
        "\"Found %d fuzzy matches in %.2f seconds.\"",
        "\"Found %d string matches in %.2f seconds.\"",
        "\"Found %d immediate matches in %.2f seconds.\"",
        "'sub_'",
        "'_'",
        "'sub'",
        "'loc'",
        "'unk'",
        "'dword'",
        "'word'",
        "'byte'",
        "\"Renamed %d functions in %.2f seconds.\"",
        "\"Building Rizzo signatures, this may take a few minutes...\"",
        "\"Built signatures in %.2f seconds\"",
        "\"Applying Rizzo signatures, this may take a few minutes...\"",
        "\"Signatures applied in %.2f seconds\"",
        "\"*.riz\"",
        "\"Save signature file as\"",
        "'.'",
        "\".riz\"",
        "\"*.riz\"",
        "\"Load signature file\"",
        "\"Function signature\"",
        "\"\"",
        "\"Rizzo\"",
        "\"\"",
        "\"rizzo.py\"",
        "'rizzo:loadfile'",
        "'rizzo:producefile'",
        "'Rizzo signature file...'",
        "'Rizzo signature file...'",
        "\"File/Load file/\"",
        "'Rizzo signature file...'",
        "'Rizzo signature file...'",
        "\"File/Produce file/\"",
        "\"File/Load file/\"",
        "\"Rizzo signature file...\"",
        "\"\"",
        "\"File/Produce file/\"",
        "\"Rizzo signature file...\"",
        "\"\""
    ],
    "variables": [
        "SHOW",
        "fuzzy",
        "formal",
        "strings",
        "functions",
        "immediates",
        "fuzzydups",
        "formaldups",
        "stringdups",
        "immediatedups",
        "func",
        "func",
        "ea",
        "value",
        "xrefs",
        "formal",
        "fuzzy",
        "immediates",
        "functions",
        "ea",
        "name",
        "blocks",
        "DEFAULT_SIGNATURE_FILE",
        "sigfile",
        "sigfile",
        "strings",
        "start",
        "signatures",
        "end",
        "fp",
        "fp",
        "sigs",
        "formal",
        "fuzzy",
        "functions",
        "immediates",
        "ea",
        "drefs",
        "crefs",
        "func_name",
        "opnd_text",
        "ea",
        "blocks",
        "signatures",
        "func",
        "strhash",
        "strhash",
        "func",
        "blocks",
        "formal",
        "fuzzy",
        "formal",
        "fuzzy",
        "immediate",
        "signatures",
        "fuzzydups",
        "signatures",
        "formaldups",
        "signatures",
        "stringdups",
        "signatures",
        "immediatedups",
        "fuzzy",
        "formal",
        "strings",
        "immediates",
        "start",
        "newfunc",
        "curfunc",
        "formal",
        "curfunc",
        "end",
        "start",
        "curfunc",
        "newfunc",
        "fuzzy",
        "curfunc",
        "end",
        "start",
        "curfunc",
        "newfunc",
        "strings",
        "curfunc",
        "end",
        "start",
        "curfunc",
        "newfunc",
        "immediates",
        "curfunc",
        "end",
        "curname",
        "count",
        "start",
        "rename",
        "rename",
        "bm",
        "duplicates",
        "nblock",
        "cblock",
        "bm",
        "cblock",
        "ea",
        "rename",
        "winner",
        "end",
        "start",
        "r",
        "end",
        "start",
        "r",
        "s",
        "end",
        "fname",
        "fname",
        "flags",
        "comment",
        "help",
        "wanted_name",
        "wanted_hotkey",
        "NAME",
        "action_rizzo_loadfile",
        "action_rizzo_producefile",
        "menu_context_load",
        "menu_context_produce"
    ],
    "comments": [
        "",
        "An IDAPython plugin that generates \"fuzzy\" function signatures that can",
        "be shared and applied amongst different IDBs.",
        "",
        "There are multiple sets of signatures that are generated:",
        "",
        "o \"Formal\" signatures, where functions must match exactly",
        "o \"Fuzzy\" signatures, where functions must only resemble each other",
        "in terms of data/call references.",
        "o String-based signatures, where functions are identified based on",
        "unique string references.",
        "o Immediate-based signatures, where functions are identified based",
        "on immediate value references.",
        "",
        "These signatures are applied based on accuracy, that is, formal",
        "signatures are applied first, then string and immediate based",
        "signatures, and finally fuzzy signatures.",
        "",
        "Further, functions are identified based on call references. Consider,",
        "for example, two functions, one named 'foo', the other named 'bar'.",
        "The 'foo' function is fairly unique and a reliable signature is easily",
        "generated for it, but the 'bar' function is more difficult to reliably",
        "identify. However, 'foo' calls 'bar', and thus once 'foo' is identified,",
        "'bar' can also be identified by association.",
        "",
        "Craig Heffner",
        "@devttys0",
        "",
        "http://natashenka.ca/pickle/",
        "TODO: Fuzzy matching at the block level gets close, but produces a higher number of",
        "false positives; for example, it confuses hmac_md5 with hmac_sha1.",
        "return ((self.formal == nblock.formal or (fuzzy and self.fuzzy == nblock.fuzzy)) and",
        "Useful for quickly identifying string xrefs from individual instructions",
        "Get a list of all data/code references from the current instruction",
        "Add all instruction mnemonics to the formal block hash",
        "If this is a call instruction, be sure to note the name of the function",
        "being called. This is used to apply call-based signatures to functions.",
        "",
        "For fuzzy signatures, we can't use the actual name or EA of the function,",
        "but rather just want to note that a function call was made.",
        "",
        "Formal signatures already have the call instruction mnemonic, which is more",
        "specific than just saying that a call was made.",
        "If there are data references from the instruction, check to see if any of them",
        "are strings. These are looked up in the pre-generated strings dictionary.",
        "",
        "String values are easily identifiable, and are used as part of both the fuzzy",
        "and the formal signatures.",
        "",
        "It is more difficult to determine if non-string values are constants or not;",
        "for both fuzzy and formal signatures, just use \"data\" to indicate that some data",
        "was referenced.",
        "If there are no data or code references from the instruction, use every operand as",
        "part of the formal signature.",
        "",
        "Fuzzy signatures are only concerned with interesting immediate values, that is, values",
        "that are greater than 65,535, are not memory addresses, and are not displayed as",
        "negative values.",
        "Generate unique string-based function signatures",
        "Only generate signatures on reasonably long strings with one xref",
        "Check for and remove string duplicate signatures (the same",
        "string can appear more than once in an IDB).",
        "If no duplicates, add this to the string signature dict.",
        "Generate formal, fuzzy, and immediate-based function signatures",
        "Generate a signature for each block in this function",
        "Build function-wide formal and fuzzy signatures by simply",
        "concatenating the individual function block signatures.",
        "Add this signature to the function dictionary.",
        "Check for and remove formal duplicate signatures.",
        "If no duplicates, add this to the formal signature dict.",
        "Check for and remove fuzzy duplicate signatures.",
        "If no duplicates, add this to the fuzzy signature dict.",
        "Check for and remove immediate duplicate signatures.",
        "If no duplicates, add this to the immediate signature dict.",
        "These need not be maintained across function calls,",
        "and only add to the size of the saved signature file.",
        "DEBUG",
        "Match formal function signatures",
        "Match fuzzy function signatures",
        "Only accept this as a valid match if the functions have the same number of basic code blocks",
        "Match string based function signatures",
        "Match immediate baesd function signatures",
        "Return signature matches in the order we want them applied",
        "The second tuple of each match is set to True if it is a fuzzy match, e.g.:",
        "",
        "((match, fuzzy), (match, fuzzy), ...)",
        "Don't rely on the name in curfunc, as it could have already been renamed",
        "Don't rename if the name is a special identifier, or if the ea has already been named",
        "TODO: What's a better way to check for reserved name prefixes?",
        "Don't rename if the name already exists in the IDB",
        "print \"%s  =>  %s\" % (curname, name)",
        "else:",
        "print \"WARNING: Attempted to rename '%s' => '%s', but '%s' already exists!\" % (curname, name, name)",
        "This applies formal matches first, then fuzzy matches",
        "Keeps track of all function names that we've identified candidate functions for",
        "Attempt to rename this function",
        "Search for unique matching code blocks inside this function",
        "Rename known function calls from each unique identified code block",
        "Rename the identified functions",
        "Actions"
    ],
    "docstrings": [
        "'''\n    Simple wrapper class for storing signature info.\n    '''",
        "'''\n    Wrapper class for easily accessing necessary string information.\n    '''",
        "'''\n    Code block info is stored in tuples, which minimize pickle storage space.\n    This class provides more Pythonic (and sane) access to values of interest for a given block.\n    '''",
        "'''\n    Function signature info is stored in dicts and tuples, which minimize pickle storage space.\n    This class provides more Pythonic (and sane) access to values of interest for a given function.\n    '''",
        "'''\n    Workhorse class which performs the primary logic and functionality.\n    '''",
        "'''\n        Returns a tuple: ([formal, block, signatures], [fuzzy, block, signatures], set([unique, immediate, values]), [called, function, names])\n        '''",
        "'''\n        Returns a list of blocks.\n        '''"
    ],
    "functions": [
        "show",
        "match",
        "save",
        "load",
        "sighash",
        "block",
        "generate",
        "match",
        "rename",
        "apply",
        "RizzoBuild",
        "RizzoApply",
        "rizzo_produce",
        "rizzo_load",
        "init",
        "term",
        "run",
        "rizzo_script",
        "activate",
        "update",
        "activate",
        "update",
        "PLUGIN_ENTRY"
    ],
    "classes": [
        "RizzoSignatures",
        "RizzoStringDescriptor",
        "RizzoBlockDescriptor",
        "RizzoFunctionDescriptor",
        "Rizzo",
        "RizzoPlugin",
        "rizzo_loadHandler",
        "rizzo_produceHandler"
    ]
}