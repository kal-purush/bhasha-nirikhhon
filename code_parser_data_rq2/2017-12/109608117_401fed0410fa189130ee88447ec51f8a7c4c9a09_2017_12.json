{
    "identifiers": [
        "math",
        "random",
        "DataRW",
        "dataReader",
        "BackPropagation",
        "BP",
        "data",
        "iterations",
        "pop_size",
        "selection_rate",
        "benchmark",
        "init_population",
        "pop_size",
        "i",
        "iterations",
        "i",
        "iterations",
        "mutation_rate",
        "j",
        "len",
        "population",
        "population",
        "j",
        "j",
        "len",
        "population",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "dataReader",
        "createTrainingData",
        "data",
        "data_gap",
        "dataReader",
        "createTrainingData",
        "data",
        "round",
        "len",
        "test_data",
        "num_inputs",
        "hidden_layers",
        "num_inputs",
        "k",
        "len",
        "layers",
        "layer_connections",
        "layers",
        "k",
        "layers",
        "k",
        "layer_connections",
        "num_inputs",
        "num_inputs",
        "population",
        "j",
        "network_efficiency",
        "layer_connections",
        "iterations",
        "len",
        "training_data",
        "network_training_time",
        "BP",
        "build_network",
        "hidden_layers",
        "num_inputs",
        "BP",
        "train_network",
        "network",
        "training_data",
        "num_iterations",
        "num_inputs",
        "bias",
        "learning_rate",
        "momentum",
        "BP",
        "test_network",
        "network",
        "test_data",
        "num_inputs",
        "bias",
        "population",
        "j",
        "network_accuracy",
        "population",
        "j",
        "network_accuracy",
        "i",
        "benchmark",
        "j",
        "len",
        "population",
        "population",
        "j",
        "max_score",
        "population",
        "j",
        "population",
        "j",
        "i",
        "print_chromosome",
        "fittest_chromosome",
        "fittest_chromosome",
        "fittest_chromosome",
        "fittest_chromosome",
        "i",
        "len",
        "population",
        "mutate_population",
        "population",
        "mutation_rate",
        "selection_rate",
        "i",
        "iterations",
        "mutation_x",
        "population",
        "mutation_rate",
        "selection_rate",
        "round",
        "len",
        "population",
        "selection_rate",
        "num_parents",
        "len",
        "population",
        "num_parents",
        "roulette_selection",
        "population",
        "num_parents",
        "i",
        "num_children",
        "i",
        "parent_index",
        "num_parents",
        "parent_index",
        "num_parents",
        "clone_chromosome",
        "parent_chromosomes",
        "parent_index",
        "mutate_chromosome",
        "parent_clone",
        "mutation_rate",
        "new_chromosome",
        "child_chromosomes",
        "append",
        "new_child",
        "parent_chromosomes",
        "child_chromosomes",
        "new_population",
        "population",
        "num_parents",
        "elites",
        "i",
        "elites",
        "j",
        "len",
        "population",
        "population",
        "j",
        "fittest_score",
        "population",
        "j",
        "j",
        "clone_chromosome",
        "population",
        "fittest_index",
        "parent_chromosome",
        "parents",
        "append",
        "new_parent",
        "population",
        "fittest_index",
        "i",
        "num_parents",
        "elites",
        "chromosome",
        "population",
        "fitness_sum",
        "chromosome",
        "random",
        "uniform",
        "fitness_sum",
        "j",
        "len",
        "population",
        "selection_sum",
        "population",
        "j",
        "selection_sum",
        "selection",
        "clone_chromosome",
        "population",
        "j",
        "parent_chromosome",
        "parents",
        "append",
        "new_parent",
        "population",
        "j",
        "parents",
        "chromosome",
        "mutation_rate",
        "key",
        "chromosome",
        "chromosome",
        "key",
        "gene",
        "gene",
        "gene",
        "gene",
        "gMax",
        "gMin",
        "gValue",
        "gRange",
        "mutation_rate",
        "searchMin",
        "gMin",
        "gMin",
        "gValue",
        "gRange",
        "mutation_rate",
        "searchMax",
        "gMax",
        "gMax",
        "gInt",
        "round",
        "random",
        "randint",
        "math",
        "floor",
        "searchMin",
        "math",
        "ceil",
        "searchMax",
        "round",
        "searchMin",
        "round",
        "searchMax",
        "random",
        "randint",
        "adjustMin",
        "adjustMax",
        "chromosome",
        "key",
        "new_value",
        "chromosome",
        "pop_size",
        "guide",
        "guide",
        "population",
        "append",
        "init_chromosome",
        "i",
        "pop_size",
        "mutate_chromosome",
        "init_chromosome",
        "population",
        "append",
        "new_chomosome",
        "population",
        "chromosome",
        "old_chromosome",
        "init_chromosome",
        "gene",
        "new_chromosome",
        "value",
        "new_chromosome",
        "gene",
        "new_chromosome",
        "gene",
        "old_chromosome",
        "gene",
        "value",
        "new_chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "dataReader",
        "openFile",
        "fredkinGateData",
        "optimize_ANN",
        "my_data",
        "my_iterations",
        "my_pop_size",
        "my_selection_rate",
        "my_benchmark"
    ],
    "literals": [
        "\"TESTING GENERATION: \"",
        "\"/\"",
        "\"Mutation Rate:\"",
        "\"Testing Chromosome: \"",
        "\"/\"",
        "'hidden_layer1'",
        "'value'",
        "'iterations'",
        "'value'",
        "'bias'",
        "'value'",
        "'learning_rate'",
        "'value'",
        "'momentum'",
        "'value'",
        "'data_gap'",
        "'value'",
        "\"\\tO(n) =\"",
        "\"Fittest of Iteration\"",
        "\"NETWORK ACCURACY:\"",
        "\"NETWORK EFFICIENCY:\"",
        "\"CHROMOSOME SCORE:\"",
        "'value'",
        "'min'",
        "'max'",
        "'int'",
        "'value'",
        "'hidden_layer1'",
        "'value'",
        "'min'",
        "'max'",
        "'int'",
        "'iterations'",
        "'value'",
        "'min'",
        "'max'",
        "'int'",
        "'bias'",
        "'value'",
        "'min'",
        "'max'",
        "'int'",
        "'learning_rate'",
        "'value'",
        "'min'",
        "'max'",
        "'int'",
        "'momentum'",
        "'value'",
        "'min'",
        "'max'",
        "'int'",
        "'data_gap'",
        "'value'",
        "'min'",
        "'max'",
        "'int'",
        "\"CHROMOSOME TOPOLOGY\"",
        "\"Hidden Layer 1:\"",
        "'hidden_layer1'",
        "'value'",
        "\"Iterations:\"",
        "'iterations'",
        "'value'",
        "\"Bis:\"",
        "'bias'",
        "'value'",
        "\"Learning Rate:\"",
        "'learning_rate'",
        "'value'",
        "\"Momentum:\"",
        "'momentum'",
        "'value'",
        "\"Data Gap:\"",
        "'data_gap'",
        "'value'",
        "\"__main__\"",
        "\"QUANTUM NETWORK OPTIMIZATION COMENSING\"",
        "\"TrainingData/NOTGate.csv\"",
        "\"TrainingData/HADAMARDGate.csv\"",
        "\"TrainingData/PFLIPGate.csv\"",
        "\"TrainingData/SWAPGate.csv\"",
        "\"TrainingData/CNOTGate.csv\"",
        "\"TrainingData/CHADAMARDGate.csv\"",
        "\"TrainingData/CPFLIPGate.csv\"",
        "\"TrainingData/TOFFOLIGate.csv\"",
        "\"TrainingData/FREDKINGate.csv\""
    ],
    "variables": [
        "population",
        "mutation_rate",
        "chromosome",
        "hidden_layers",
        "num_iterations",
        "bias",
        "learning_rate",
        "momentum",
        "data_gap",
        "training_data",
        "test_data",
        "num_inputs",
        "layer_connections",
        "layers",
        "network_efficiency",
        "network_training_time",
        "network",
        "network_accuracy",
        "max_score",
        "fittest_chromosome",
        "max_score",
        "fittest_chromosome",
        "population",
        "mutation_x",
        "mutation_rate",
        "num_parents",
        "num_parents",
        "num_children",
        "parent_chromosomes",
        "child_chromosomes",
        "parent_index",
        "parent_clone",
        "new_chromosome",
        "new_child",
        "new_population",
        "parents",
        "fittest_score",
        "fittest_index",
        "fittest_score",
        "fittest_index",
        "parent_chromosome",
        "new_parent",
        "fitness_sum",
        "selection",
        "selection_sum",
        "parent_chromosome",
        "new_parent",
        "gene",
        "gValue",
        "gMin",
        "gMax",
        "gInt",
        "gRange",
        "searchMin",
        "searchMin",
        "searchMax",
        "searchMax",
        "new_value",
        "new_value",
        "adjustMin",
        "adjustMax",
        "new_value",
        "population",
        "new_chomosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "chromosome",
        "new_chromosome",
        "value",
        "notGateData",
        "hadamardGateData",
        "phaseFlipGateData",
        "swapGateData",
        "cNotGateData",
        "cHadamardGateData",
        "cPhaseFlipGateData",
        "toffolinGateData",
        "fredkinGateData",
        "my_data",
        "my_iterations",
        "my_pop_size",
        "my_selection_rate",
        "my_benchmark"
    ],
    "comments": [
        "grab chromosome",
        "build hidden layer pattern",
        "if (chromosome['hidden_layer1']['value'] != 0): hidden_layers.append(chromosome['hidden_layer1']['value'])",
        "if (chromosome['hidden_layer2']['value'] != 0): hidden_layers.append(chromosome['hidden_layer2']['value'])",
        "if (chromosome['hidden_layer3']['value'] != 0): hidden_layers.append(chromosome['hidden_layer3']['value'])",
        "extract genes",
        "Training and Test Data",
        "test on all available daata",
        "calculate network efficiency",
        "inverse of: conections / highest connections possible",
        "Build - Train - Test Network",
        "set score of chromosome",
        "score = (network_accuracy * accuracy_weight) + (network_efficiency * efficiency_weight)",
        "print fittest chromosome at benchmark",
        "mutate population",
        "iteration falling in the range from [1, 11]",
        "adjust 1 / x function",
        "extract gene info",
        "set mutation bounds",
        "generate new val",
        "chromosome['hidden_layer2'] = {'value': 3, 'min': 0, 'max': 6, 'int': True}",
        "chromosome['hidden_layer3'] = {'value': 3, 'min': 0, 'max': 6, 'int': True}",
        "print(\"Hidden Layer 2:\", chromosome['hidden_layer2']['value'])",
        "print(\"Hidden Layer 3:\", chromosome['hidden_layer3']['value'])",
        "Data Sets",
        "aka CCNOT Gate",
        "aka CSWAP Gate",
        "set GA params",
        "my_accuracy_weight = 0.95",
        "my_efficiency_weight = 0.05",
        "Build - Train - Test Network"
    ],
    "docstrings": [],
    "functions": [
        "optimize_ANN",
        "mutate_population",
        "roulette_selection",
        "mutate_chromosome",
        "init_population",
        "init_chromosome",
        "clone_chromosome",
        "print_chromosome"
    ],
    "classes": []
}