{
    "identifiers": [
        "left",
        "right",
        "data",
        "data",
        "data",
        "data",
        "root",
        "tmpNode",
        "tmpNode",
        "traverse",
        "tmpNode",
        "left",
        "tmpNode",
        "data",
        "traverse",
        "tmpNode",
        "right",
        "data",
        "newNode",
        "data",
        "root",
        "root",
        "newNode",
        "current",
        "root",
        "parent",
        "root",
        "parent",
        "current",
        "data",
        "current",
        "data",
        "current",
        "current",
        "right",
        "current",
        "parent",
        "right",
        "newNode",
        "current",
        "current",
        "left",
        "current",
        "parent",
        "left",
        "newNode",
        "data",
        "current",
        "root",
        "current",
        "data",
        "data",
        "data",
        "current",
        "data",
        "current",
        "current",
        "right",
        "current",
        "current",
        "left",
        "current",
        "root",
        "traverse",
        "root",
        "data",
        "parent",
        "root",
        "current",
        "root",
        "isLeft",
        "current",
        "data",
        "data",
        "parent",
        "current",
        "data",
        "current",
        "data",
        "current",
        "current",
        "right",
        "isLeft",
        "current",
        "current",
        "left",
        "isLeft",
        "current",
        "current",
        "left",
        "current",
        "right",
        "current",
        "root",
        "root",
        "isLeft",
        "parent",
        "left",
        "parent",
        "right",
        "current",
        "left",
        "current",
        "root",
        "root",
        "current",
        "right",
        "isLeft",
        "parent",
        "left",
        "current",
        "right",
        "parent",
        "right",
        "current",
        "left",
        "current",
        "right",
        "current",
        "root",
        "root",
        "current",
        "left",
        "isLeft",
        "parent",
        "left",
        "current",
        "right",
        "parent",
        "right",
        "parent",
        "left",
        "current",
        "right",
        "current",
        "left",
        "successor",
        "getSuccessor",
        "current",
        "current",
        "root",
        "root",
        "successor",
        "isLeft",
        "parent",
        "left",
        "successor",
        "parent",
        "right",
        "successor",
        "successor",
        "left",
        "current",
        "left",
        "deleteNode",
        "successor",
        "successorParent",
        "current",
        "deleteNode",
        "right",
        "current",
        "successorParent",
        "successor",
        "successor",
        "current",
        "current",
        "current",
        "left",
        "successor",
        "deleteNode",
        "right",
        "successorParent",
        "left",
        "successor",
        "right",
        "successor",
        "right",
        "deleteNode",
        "right",
        "successor",
        "args",
        "tree",
        "tree",
        "insert",
        "tree",
        "insert",
        "tree",
        "insert",
        "tree",
        "insert",
        "tree",
        "insert",
        "tree",
        "insert",
        "tree",
        "show",
        "tree",
        "root",
        "tree",
        "find",
        "tree",
        "find",
        "tree",
        "tree",
        "show",
        "tree",
        "root"
    ],
    "literals": [
        "\" \"",
        "\"original tree:\"",
        "\"find node 5 is : \"",
        "\"find node 5 is : \"",
        "\"delete node 5:\""
    ],
    "variables": [
        "left",
        "right",
        "data",
        "root"
    ],
    "comments": [
        "public BST(){",
        "this.root = root;",
        "}",
        "initialize",
        "case 1 , the node i want to delete have no childs",
        "case 2 , the node i want to delete have one childs",
        "right child has data",
        "because left child is null",
        "because left child is null",
        "case 3 , the node i want to delete have two childs",
        "chose minimun in right sub tree",
        "or chose maximun in left sub tree",
        "we chose one"
    ],
    "docstrings": [],
    "functions": [
        "Node",
        "traverse",
        "insert",
        "find",
        "show",
        "Node",
        "getSuccessor",
        "main"
    ],
    "classes": [
        "Node",
        "BST"
    ]
}