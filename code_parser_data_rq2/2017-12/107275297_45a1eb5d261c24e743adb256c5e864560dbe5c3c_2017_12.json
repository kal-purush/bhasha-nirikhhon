{
    "identifiers": [
        "com",
        "tkluza",
        "image",
        "algorithms",
        "ij",
        "ij",
        "plugin",
        "ij",
        "process",
        "ij",
        "gui",
        "ij",
        "measure",
        "java",
        "awt",
        "java",
        "awt",
        "image",
        "org",
        "fife",
        "rsta",
        "ac",
        "xml",
        "ValidationConfig",
        "org",
        "python",
        "antlr",
        "PythonParser",
        "return_stmt_return",
        "com",
        "tkluza",
        "image",
        "model",
        "Constraint",
        "Mode",
        "com",
        "tkluza",
        "image",
        "model",
        "ImageAlgorithm",
        "com",
        "tkluza",
        "image",
        "model",
        "ImageSSIMAlgorithm",
        "com",
        "tkluza",
        "image",
        "view",
        "ImageQuality",
        "java",
        "awt",
        "java",
        "applet",
        "java",
        "awt",
        "geom",
        "java",
        "awt",
        "font",
        "image_1_p",
        "image_2_p",
        "sigma_gauss",
        "filter_width",
        "K1",
        "K2",
        "lod",
        "number_of_levels",
        "downsampled",
        "gaussian_window",
        "window_type",
        "window_selection",
        "window_type",
        "kind_of_algorithm",
        "algorithm_selection",
        "kind_of_algorithm",
        "show_ssim_map",
        "ssim_map_level_option",
        "ssim_map_selection",
        "ssim_map_level_option",
        "ssim_map_level",
        "show_downsampled_images",
        "title_1",
        "title_2",
        "message_1",
        "message_2",
        "pointer",
        "filter_length",
        "image_height",
        "image1_width",
        "image_dimension",
        "bits_per_pixel_1",
        "bits_per_pixel_2",
        "a",
        "b",
        "c",
        "filter_weights",
        "luminance_exponent",
        "contrast_exponent",
        "structure_exponent",
        "luminance_comparison",
        "contrast_comparison",
        "structure_comparison",
        "ms_ssim_index",
        "ssim_map",
        "ssim_index",
        "gd",
        "mode",
        "name",
        "image1",
        "image2",
        "name",
        "image1",
        "image2",
        "mode",
        "Mode",
        "DEFAULT",
        "name",
        "image1",
        "image2",
        "mode",
        "name",
        "image1",
        "image2",
        "mode",
        "mode",
        "prepareImages",
        "converter",
        "image1",
        "converter2",
        "image2",
        "converter",
        "convertToGray16",
        "converter2",
        "convertToGray16",
        "Override",
        "mode",
        "Mode",
        "DEFAULT",
        "gd",
        "gd",
        "addNumericField",
        "sigma_gauss",
        "gd",
        "addChoice",
        "window_type",
        "window_selection",
        "gd",
        "addChoice",
        "kind_of_algorithm",
        "algorithm_selection",
        "gd",
        "addNumericField",
        "filter_width",
        "gd",
        "addNumericField",
        "K1",
        "gd",
        "addNumericField",
        "K2",
        "gd",
        "addNumericField",
        "downsampled",
        "gd",
        "addChoice",
        "ssim_map_level_option",
        "ssim_map_selection",
        "gd",
        "addNumericField",
        "lod",
        "gd",
        "addNumericField",
        "lod",
        "gd",
        "addNumericField",
        "lod",
        "gd",
        "addNumericField",
        "lod",
        "gd",
        "addNumericField",
        "lod",
        "gd",
        "showDialog",
        "gd",
        "wasCanceled",
        "sigma_gauss",
        "gd",
        "getNextNumber",
        "window_selection",
        "gd",
        "getNextChoice",
        "algorithm_selection",
        "gd",
        "getNextChoice",
        "filter_width",
        "gd",
        "getNextNumber",
        "K1",
        "gd",
        "getNextNumber",
        "K2",
        "gd",
        "getNextNumber",
        "downsampled",
        "gd",
        "getNextNumber",
        "ssim_map_level",
        "gd",
        "getNextChoiceIndex",
        "lod",
        "lod",
        "gd",
        "getNextNumber",
        "lod",
        "lod",
        "gd",
        "getNextNumber",
        "lod",
        "lod",
        "gd",
        "getNextNumber",
        "lod",
        "lod",
        "gd",
        "getNextNumber",
        "lod",
        "gd",
        "getNextNumber",
        "gd",
        "showDialog",
        "Override",
        "validationState",
        "image1",
        "image2",
        "IJ",
        "error",
        "validationState",
        "image_height",
        "image1",
        "getHeight",
        "a",
        "image2",
        "getHeight",
        "a",
        "image_height",
        "IJ",
        "error",
        "validationState",
        "image1_width",
        "image1",
        "getWidth",
        "a",
        "image2",
        "getWidth",
        "a",
        "image1_width",
        "IJ",
        "error",
        "validationState",
        "image_height",
        "image1_width",
        "IJ",
        "error",
        "validationState",
        "bits_per_pixel_1",
        "image1",
        "getBitDepth",
        "bits_per_pixel_2",
        "image2",
        "getBitDepth",
        "bits_per_pixel_1",
        "bits_per_pixel_2",
        "IJ",
        "error",
        "validationState",
        "bits_per_pixel_1",
        "IJ",
        "error",
        "validationState",
        "d",
        "a",
        "filter_width",
        "d",
        "filter_width",
        "a",
        "window_selection",
        "gaussian_window",
        "d",
        "IJ",
        "error",
        "gaussian_window",
        "sigma_gauss",
        "IJ",
        "error",
        "image_height",
        "downsampled",
        "image1_width",
        "downsampled",
        "IJ",
        "error",
        "downsampled",
        "IJ",
        "error",
        "downsampled",
        "show_downsampled_images",
        "validationState",
        "Override",
        "C1",
        "pow",
        "bits_per_pixel_1",
        "K1",
        "C1",
        "C1",
        "C1",
        "C2",
        "pow",
        "bits_per_pixel_1",
        "K2",
        "C2",
        "C2",
        "C2",
        "filter_length",
        "filter_width",
        "filter_width",
        "window_weights",
        "filter_length",
        "array_gauss_window",
        "filter_length",
        "gaussian_window",
        "value",
        "distance",
        "center",
        "filter_width",
        "total",
        "sigma_sq",
        "sigma_gauss",
        "sigma_gauss",
        "y",
        "y",
        "filter_width",
        "y",
        "x",
        "x",
        "filter_width",
        "x",
        "distance",
        "abs",
        "x",
        "center",
        "abs",
        "x",
        "center",
        "abs",
        "y",
        "center",
        "abs",
        "y",
        "center",
        "pointer",
        "y",
        "filter_width",
        "x",
        "array_gauss_window",
        "pointer",
        "exp",
        "distance",
        "sigma_sq",
        "total",
        "total",
        "array_gauss_window",
        "pointer",
        "pointer",
        "pointer",
        "filter_length",
        "pointer",
        "array_gauss_window",
        "pointer",
        "array_gauss_window",
        "pointer",
        "total",
        "window_weights",
        "pointer",
        "array_gauss_window",
        "pointer",
        "pointer",
        "pointer",
        "filter_length",
        "pointer",
        "array_gauss_window",
        "pointer",
        "filter_length",
        "window_weights",
        "pointer",
        "array_gauss_window",
        "pointer",
        "lpf",
        "lpf_width",
        "a",
        "a",
        "lpf_width",
        "a",
        "b",
        "b",
        "lpf_width",
        "b",
        "lpf",
        "a",
        "lpf_width",
        "b",
        "lod",
        "a",
        "lod",
        "b",
        "suma_lpf",
        "cont",
        "cont",
        "cont",
        "cont",
        "suma_lpf",
        "suma_lpf",
        "lpf",
        "cont",
        "cont",
        "cont",
        "cont",
        "lpf",
        "cont",
        "lpf",
        "cont",
        "suma_lpf",
        "image_1_original_p",
        "image1",
        "getProcessor",
        "image_2_original_p",
        "image2",
        "getProcessor",
        "image1_width",
        "image_1_original_p",
        "getWidth",
        "image1_width",
        "image1_width",
        "downsampled",
        "image_1_original_p",
        "setInterpolate",
        "image_2_original_p",
        "setInterpolate",
        "image_1_p",
        "image_1_original_p",
        "resize",
        "image1_width",
        "image_2_p",
        "image_2_original_p",
        "resize",
        "image1_width",
        "level",
        "contrast",
        "structure",
        "luminance",
        "level",
        "level",
        "number_of_levels",
        "level",
        "level",
        "image_1_p",
        "convolve",
        "lpf",
        "lpf_width",
        "lpf_width",
        "image_2_p",
        "convolve",
        "lpf",
        "lpf_width",
        "lpf_width",
        "image_1_p",
        "setInterpolate",
        "image_2_p",
        "setInterpolate",
        "image_1_p",
        "image_1_p",
        "resize",
        "image1_width",
        "image_2_p",
        "image_2_p",
        "resize",
        "image1_width",
        "image_height",
        "image_1_p",
        "getHeight",
        "image1_width",
        "image_1_p",
        "getWidth",
        "image_dimension",
        "image1_width",
        "image_height",
        "ssim_map_level",
        "level",
        "ssim_map",
        "image_dimension",
        "show_ssim_map",
        "ssim_map",
        "show_ssim_map",
        "mu1_ip",
        "image1_width",
        "image_height",
        "mu2_ip",
        "image1_width",
        "image_height",
        "array_mu1_ip",
        "mu1_ip",
        "getPixels",
        "array_mu2_ip",
        "mu2_ip",
        "getPixels",
        "array_mu1_ip_copy",
        "image_dimension",
        "array_mu2_ip_copy",
        "image_dimension",
        "a",
        "b",
        "pointer",
        "pointer",
        "image_dimension",
        "pointer",
        "bits_per_pixel_1",
        "a",
        "image_1_p",
        "get",
        "pointer",
        "b",
        "image_2_p",
        "get",
        "pointer",
        "bits_per_pixel_1",
        "a",
        "image_1_p",
        "get",
        "pointer",
        "b",
        "image_2_p",
        "get",
        "pointer",
        "bits_per_pixel_1",
        "a",
        "image_1_p",
        "get",
        "pointer",
        "b",
        "image_2_p",
        "get",
        "pointer",
        "array_mu1_ip",
        "pointer",
        "array_mu1_ip_copy",
        "pointer",
        "a",
        "array_mu2_ip",
        "pointer",
        "array_mu2_ip_copy",
        "pointer",
        "b",
        "mu1_ip",
        "convolve",
        "window_weights",
        "filter_width",
        "filter_width",
        "mu2_ip",
        "convolve",
        "window_weights",
        "filter_width",
        "filter_width",
        "mu1_sq",
        "image_dimension",
        "mu2_sq",
        "image_dimension",
        "mu1_mu2",
        "image_dimension",
        "pointer",
        "pointer",
        "image_dimension",
        "pointer",
        "mu1_sq",
        "pointer",
        "array_mu1_ip",
        "pointer",
        "array_mu1_ip",
        "pointer",
        "mu2_sq",
        "pointer",
        "array_mu2_ip",
        "pointer",
        "array_mu2_ip",
        "pointer",
        "mu1_mu2",
        "pointer",
        "array_mu1_ip",
        "pointer",
        "array_mu2_ip",
        "pointer",
        "sigma1",
        "image_dimension",
        "sigma2",
        "image_dimension",
        "sigma1_sq",
        "image_dimension",
        "sigma2_sq",
        "image_dimension",
        "sigma12",
        "image_dimension",
        "pointer",
        "pointer",
        "image_dimension",
        "pointer",
        "sigma1_sq",
        "pointer",
        "array_mu1_ip_copy",
        "pointer",
        "array_mu1_ip_copy",
        "pointer",
        "sigma2_sq",
        "pointer",
        "array_mu2_ip_copy",
        "pointer",
        "array_mu2_ip_copy",
        "pointer",
        "sigma12",
        "pointer",
        "array_mu1_ip_copy",
        "pointer",
        "array_mu2_ip_copy",
        "pointer",
        "soporte_1_ip",
        "image1_width",
        "image_height",
        "soporte_2_ip",
        "image1_width",
        "image_height",
        "soporte_3_ip",
        "image1_width",
        "image_height",
        "array_soporte_1",
        "soporte_1_ip",
        "getPixels",
        "array_soporte_2",
        "soporte_2_ip",
        "getPixels",
        "array_soporte_3",
        "soporte_3_ip",
        "getPixels",
        "pointer",
        "pointer",
        "image_dimension",
        "pointer",
        "array_soporte_1",
        "pointer",
        "sigma1_sq",
        "pointer",
        "array_soporte_2",
        "pointer",
        "sigma2_sq",
        "pointer",
        "array_soporte_3",
        "pointer",
        "sigma12",
        "pointer",
        "soporte_1_ip",
        "convolve",
        "window_weights",
        "filter_width",
        "filter_width",
        "soporte_2_ip",
        "convolve",
        "window_weights",
        "filter_width",
        "filter_width",
        "soporte_3_ip",
        "convolve",
        "window_weights",
        "filter_width",
        "filter_width",
        "pointer",
        "pointer",
        "image_dimension",
        "pointer",
        "sigma1_sq",
        "pointer",
        "array_soporte_1",
        "pointer",
        "mu1_sq",
        "pointer",
        "sigma2_sq",
        "pointer",
        "array_soporte_2",
        "pointer",
        "mu2_sq",
        "pointer",
        "sigma12",
        "pointer",
        "array_soporte_3",
        "pointer",
        "mu1_mu2",
        "pointer",
        "sigma1_sq",
        "pointer",
        "sigma1_sq",
        "pointer",
        "sigma2_sq",
        "pointer",
        "sigma2_sq",
        "pointer",
        "sigma1",
        "pointer",
        "sqrt",
        "sigma1_sq",
        "pointer",
        "sigma2",
        "pointer",
        "sqrt",
        "sigma2_sq",
        "pointer",
        "luminance_point",
        "contrast_point",
        "structure_point",
        "suma",
        "luminance",
        "level",
        "contrast",
        "level",
        "structure",
        "level",
        "algorithm_selection",
        "pointer",
        "pointer",
        "image_dimension",
        "pointer",
        "luminance_point",
        "mu1_mu2",
        "pointer",
        "C1",
        "mu1_sq",
        "pointer",
        "mu2_sq",
        "pointer",
        "C1",
        "luminance",
        "level",
        "luminance",
        "level",
        "luminance_point",
        "contrast_point",
        "sigma1",
        "pointer",
        "sigma2",
        "pointer",
        "C2",
        "sigma1_sq",
        "pointer",
        "sigma2_sq",
        "pointer",
        "C2",
        "contrast",
        "level",
        "contrast",
        "level",
        "contrast_point",
        "structure_point",
        "sigma12",
        "pointer",
        "C2",
        "sigma1",
        "pointer",
        "sigma2",
        "pointer",
        "C2",
        "structure",
        "level",
        "structure",
        "level",
        "structure_point",
        "show_ssim_map",
        "ssim_map",
        "pointer",
        "luminance_point",
        "contrast_point",
        "structure_point",
        "suma",
        "suma",
        "ssim_map",
        "pointer",
        "pointer",
        "pointer",
        "image_dimension",
        "pointer",
        "mu1_sq",
        "pointer",
        "mu2_sq",
        "pointer",
        "luminance_point",
        "luminance_point",
        "mu1_mu2",
        "pointer",
        "mu1_sq",
        "pointer",
        "mu2_sq",
        "pointer",
        "luminance",
        "level",
        "luminance",
        "level",
        "luminance_point",
        "sigma1_sq",
        "pointer",
        "sigma2_sq",
        "pointer",
        "contrast_point",
        "contrast_point",
        "sigma1",
        "pointer",
        "sigma2",
        "pointer",
        "sigma1_sq",
        "pointer",
        "sigma2_sq",
        "pointer",
        "contrast",
        "level",
        "contrast",
        "level",
        "contrast_point",
        "sigma1",
        "pointer",
        "sigma2",
        "pointer",
        "sigma1",
        "pointer",
        "sigma2",
        "pointer",
        "structure_point",
        "sigma1",
        "pointer",
        "sigma2",
        "pointer",
        "structure_point",
        "structure_point",
        "sigma12",
        "pointer",
        "sigma1",
        "pointer",
        "sigma2",
        "pointer",
        "structure",
        "level",
        "structure",
        "level",
        "structure_point",
        "show_ssim_map",
        "ssim_map",
        "pointer",
        "luminance_point",
        "contrast_point",
        "structure_point",
        "suma",
        "suma",
        "ssim_map",
        "pointer",
        "contrast",
        "level",
        "contrast",
        "level",
        "image_dimension",
        "structure",
        "level",
        "structure",
        "level",
        "image_dimension",
        "level",
        "number_of_levels",
        "luminance",
        "level",
        "luminance",
        "level",
        "image_dimension",
        "luminance",
        "level",
        "level",
        "level",
        "number_of_levels",
        "level",
        "structure",
        "level",
        "structure",
        "level",
        "structure",
        "level",
        "luminance_comparison",
        "pow",
        "luminance",
        "level",
        "luminance_exponent",
        "level",
        "luminance_comparison",
        "contrast_comparison",
        "pow",
        "contrast",
        "level",
        "contrast_exponent",
        "level",
        "contrast_comparison",
        "structure_comparison",
        "pow",
        "structure",
        "level",
        "structure_exponent",
        "level",
        "structure_comparison",
        "ms_ssim_index",
        "luminance_comparison",
        "contrast_comparison",
        "structure_comparison",
        "results",
        "results",
        "addNumericField",
        "luminance_comparison",
        "results",
        "addNumericField",
        "contrast_comparison",
        "results",
        "addNumericField",
        "structure_comparison",
        "algorithm_selection",
        "results",
        "addNumericField",
        "ms_ssim_index",
        "results",
        "addNumericField",
        "ms_ssim_index",
        "mode",
        "mode",
        "DEFAULT",
        "results",
        "showDialog",
        "results",
        "dispose",
        "algorithmResult",
        "ms_ssim_index"
    ],
    "literals": [
        "\"Gaussian\"",
        "\"Same weight\"",
        "\"Zhou Wang\"",
        "\"Rouse/Hemami\"",
        "\"0\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "\"MS-SSIM Index calculation\"",
        "\"Standard deviation:\"",
        "\"Window type:\"",
        "\"Algorithm:\"",
        "\"Filter width:\"",
        "\"K1:\"",
        "\"K2:\"",
        "\"Downsample image (prior to calculate MS-SSIM):\"",
        "\"Show SSIM map (with exponents alfa, beta, gamma eq 1) at level: \"",
        "\"lod_11_33:\"",
        "\"\"",
        "\"lod_12_32:\"",
        "\"\"",
        "\"lod_13_31:\"",
        "\"\"",
        "\"lod_21_23:\"",
        "\"\"",
        "\"lod_22:\"",
        "\"\"",
        "\"There must be two images open to calculate SSIM index\"",
        "\"Both images must have the same height\"",
        "\"Both images must have the same width\"",
        "\"Miminum height and width must be 32 pixels\"",
        "\"Both images must have the same number of bits per pixel\"",
        "\"RGB images are not supportedl\"",
        "\"Gaussian\"",
        "\"Filter width and heigth must be odd\"",
        "\"Sigma must be greater than 0\"",
        "\"Miminum height must be 32 pixels (review downsample value)\"",
        "\"Minimun value of Viewing scale must be 1\"",
        "\"Zhou Wang\"",
        "\"RESULTS: MS-SSIM Index and components\"",
        "\"Luminance comparison: \"",
        "\"\"",
        "\"Contrast comparison: \"",
        "\"\"",
        "\"Structure comparison: \"",
        "\"\"",
        "\"Zhou Wang\"",
        "\"MS-SSIM index Zhou Wang: \"",
        "\"\"",
        "\"MS-SSIM index Rouse/Hemami: \"",
        "\"\""
    ],
    "variables": [
        "image_1_p",
        "image_2_p",
        "title_1",
        "title_2",
        "message_1",
        "message_2",
        "pointer",
        "filter_length",
        "image_height",
        "image1_width",
        "image_dimension",
        "bits_per_pixel_1",
        "bits_per_pixel_2",
        "a",
        "b",
        "c",
        "filter_weights[]",
        "ms_ssim_index",
        "ssim_map",
        "ssim_index",
        "gd",
        "mode",
        "d",
        "value"
    ],
    "comments": [
        "protected ImagePlus image_1_imp, image_2_imp; // THIS PLUGIN WORKS WITH TWO",
        "(AND ONLY TWO) IMAGES OPEN IN IMAGEJ",
        "THIS DIALOG BOX SHOWS DIFFERENT OPTIONS TO CREATE THE WINDOW WE ARE GOING TO",
        "USE TO EVALUATE SSIM INDEX OVER THE ENTIRE IMAGES",
        "",
        "",
        "LOD [] ARE LOW PASS FILTER VALUES. Impulse response of low-pass filter to use",
        "defaults to 9/7 biorthogonal wavelet filters. IT USES THE ROUSE/HEMAMI'S",
        "VALUES INSTEAD OF ZHOU WANG'S METHOD AND VALUES.",
        "THERE IS A LITTLE DIFFERENCE (< 2%) WITH MR. WANG'S VALUES FOR THE SAME SET",
        "OF IMAGES.",
        "",
        "WE CAN WEIGHTS THE WINDOW WITH A GAUSSIAN WEIGHTING",
        "FUNCTION OR GIVING THE SAME WEIGHT TO ALL THE PIXELS IN",
        "THE WINDOW",
        "WE CAN USE THE INDEX FOR THE SUPRA-THRESHOLD LEVEL",
        "(WANG) OR THE RECOGNITION THRESHOLD",
        "(ROUSE/HEMAMI)",
        "",
        "WE SHOW THE DIALOG BOX",
        "",
        "",
        "ERROR CONTROLS. TWO IMAGES SHOULD BE OPENED AND BOTH WITH THE SAME DIMENSIONS",
        "",
        "",
        "NOW, WE CREATE THE FILTER, GAUSSIAN OR MEDIA FILTER, ACCORDING TO THE VALUE",
        "OF boolean \"gaussian_window\"",
        "",
        "NO WEIGHTS. ALL THE PIXELS IN THE EVALUATION WINDOW HAVE THE SAME WEIGHT",
        "",
        "END OF FILTER SELECTION",
        "",
        "",
        "THE VALUE OF THE LOW PASS FILTER",
        "",
        "",
        "MAIN ALGORITHM",
        "",
        "YOU",
        "CAN",
        "DOWNSAMPLE",
        "THE",
        "IMAGE",
        "BEFORE",
        "YOU",
        "CALCULATE",
        "THE",
        "MS-SSIM",
        "",
        "WE ARE GOING TO USE ARRAYS OF 6 LEVELS INSTEAD OF 5.",
        "WE WANT TO FORCE THAT THE INDEX OVER THE LEVEL WERE THE SAME THAN THE INDEX",
        "OVER THE ARRAY.",
        "REMEMBER THAT IN JAVA THE FIRST INDEX OF AN ARRAY IS THE \"0\" POSITION. WE",
        "WILL NEVER USE THIS POSITION IN THE FOLLOWING THREE ARRAYS.",
        "",
        "THIS LOOP CALCULATES, FOR EACH ITERATION, THE VALUES OF",
        "L, C AND S",
        "IT'S CRITICAL TO THIS VALUE. DON'T USE TRUE",
        "Float.intBitsToFloat(a);",
        "Float.intBitsToFloat(b);",
        "",
        "THERE IS A METHOD IN IMAGEJ THAT CONVOLVES ANY ARRAY, BUT IT ONLY WORKS WITH",
        "IMAGE PROCESSORS. THIS IS THE REASON BECAUSE I CREATE THE FOLLOWING",
        "PROCESSORS",
        "",
        "",
        "THE FOLLOWING SENTENCES ARE VERY AD-HOC. SOMETIMES, FOR INTERNAL REASONS OF",
        "PRECISION OF CALCULATIONS AROUND THE BORDERS, SIGMA_SQ",
        "CAN BE NEGATIVE. THE VALUE CAN BE AROUND 0.001 IN SOME POINTS (A FEW). THE",
        "PROBLEM IS THAT, FOR SIMPICITY I CALCULATE SIGMA1 AS SQUARE ROOT OF SIGMA1_SQ",
        "OF COURSE, IF THE ALGORITHM FINDS NEGATIVE VALUES, YOU GET THE MESSAGE \"IS",
        "NOT A NUMBER\" IN RUN TIME.",
        "",
        "",
        "WE HAVE GOT ALL THE VALUES TO CALCULATE LUMINANCE, CONTRAST AND STRUCTURE",
        "",
        "ROUSE/HEMAMI",
        "END WANG - ROUSE/HEMAMI IF-ELSE",
        "",
        "END-FOR OF OUTER LOOP OVER THE DIFFERENT VIEWING LEVELS",
        ""
    ],
    "docstrings": [
        "* \n * MS-SSIM index by Zhou Wang and MS-SSIM* Index by David Rouse and Sheila\n * Hemami\n * \n * \n * The equivalent of Zhou Wang's MS-SSIM (SUPRA-THRESHOLD LEVEL PROBLEM) MatLab\n * code as a Java plugin inside ImageJ. Also, this plugin performs the\n * equivalent of David Rouse and Sheila Hemami's MSSIM* (RECOGNITION THRESHOLD\n * PROBLEM). This plugin works with 8, 16 and 32 bits gray levels.\n * \n * Main references:\n * \n * Zhou Wang, A. C. Bovik, H. R. Sheikh, and E. P. Simoncelli, “Image quality\n * assessment: From error visibility to structural similarity”, IEEE Trans.\n * Image Processing, vol. 13, pp. 600–612, Apr. 2004.\n * \n * David M. Rouse and Sheila S. Hemami, \"Analyzing the Role of Visual Structure\n * in the Recognition of Natural Image Content with Multi-Scale SSIM,\" Proc.\n * SPIE Vol. 6806, Human Vision and Electronic Imaging 2008.\n * \n * ImageJ by W. Rasband, U. S. National Institutes of Health, Bethesda,\n * Maryland, USA, http://rsb.info.nih.gov/ij/. 1997-2008. January 22th 2009.\n * \n * Java Code by Gabriel Prieto, Margarita Chevalier, Eduardo Guibelalde\n * 22/01/2009.gprietor@med.ucm.es\n * \n * Permission to use, copy, or modify this software and its documentation for\n * educational and research purposes only and without fee is hereby granted,\n * provided that this copyright notice and the original authors' names appear on\n * all copies and supporting documentation. This program shall not be used,\n * rewritten, or adapted as the basis of a commercial software or hardware\n * product without first obtaining permission of the authors. The authors make\n * no representations about the suitability of this software for any purpose. It\n * is provided \"as is\" without express or implied warranty.\n * \n * Please, refer to this version as:\n * \n * Gabriel Prieto, Margarita Chevalier, Eduardo Guibelalde. \"MS_SSIM Index and\n * MS_SSIM* Index as a Java plugin for ImageJ\" Department of Radiology, Faculty\n * of Medicine. Universidad Complutense. Madrid. SPAIN.\n * http://www.ucm.es/info/fismed/MSSIM/MSSIM.htm\n *",
        "* if (show_downsampled_images) { title_1 = image_1_imp.getTitle(); title_2 =\n\t\t * image_2_imp.getTitle(); title_1 = title_1 + \" down scaled \" + downsampled +\n\t\t * \" times\"; title_2 = title_2 + \" down scaled \" + downsampled + \" times\";\n\t\t * ImagePlus image_1_final_imp = new ImagePlus(title_1, image_1_p);\n\t\t * image_1_final_imp.show(); image_1_final_imp.updateAndDraw(); ImagePlus\n\t\t * image_2_final_imp = new ImagePlus(title_2, image_2_p);\n\t\t * image_2_final_imp.show(); image_2_final_imp.updateAndDraw(); }",
        "* if (show_ssim_map) {\n\t\t\t * \n\t\t\t * ssim_index = (double) suma / image_dimension; message_1 = \" \"; message_2 =\n\t\t\t * \"SSIM_index:  \" + ssim_index; IJ.showProgress(1.0); IJ.showMessage(message_1,\n\t\t\t * message_2); ImageProcessor ssim_map_ip = new FloatProcessor(image1_width,\n\t\t\t * image_height, ssim_map); message_1 = \"SSIM Index at level \" + level + \":  \" +\n\t\t\t * ssim_index; ImagePlus ssim_map_imp = new ImagePlus(message_1, ssim_map_ip);\n\t\t\t * ssim_map_imp.show(); ssim_map_imp.updateAndDraw(); }"
    ],
    "functions": [
        "MeanStructuralSimilarity",
        "MeanStructuralSimilarity",
        "prepareImages",
        "showDialog",
        "validation",
        "actualAlgorithm"
    ],
    "classes": [
        "MeanStructuralSimilarity"
    ]
}