{
    "identifiers": [
        "tensorflow",
        "tf",
        "numpy",
        "np",
        "time",
        "matplotlib",
        "pyplot",
        "plt",
        "time",
        "time",
        "graph_range",
        "graph_range",
        "x_plot_sub",
        "np",
        "random",
        "rand",
        "data_num",
        "astype",
        "x_sample",
        "np",
        "sin",
        "x_sample",
        "intercept",
        "np",
        "random",
        "rand",
        "data_num",
        "astype",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "tf",
        "placeholder",
        "tf",
        "float32",
        "tf",
        "Variable",
        "tf",
        "random_uniform",
        "tf",
        "Variable",
        "tf",
        "zeros",
        "tf",
        "constant",
        "tenosor_num",
        "shape",
        "tenosor_num",
        "dtype",
        "tf",
        "float32",
        "tf",
        "constant",
        "np",
        "arange",
        "tenosor_num",
        "astype",
        "tenosor_num",
        "shape",
        "tenosor_num",
        "dtype",
        "tf",
        "float32",
        "tf",
        "Variable",
        "tf",
        "random_uniform",
        "tenosor_num",
        "tf",
        "Variable",
        "tf",
        "zeros",
        "tf",
        "add",
        "w_input",
        "x_data",
        "b_input",
        "tf",
        "sigmoid",
        "tf",
        "add",
        "h_linear1",
        "w",
        "b",
        "tf",
        "reduce_sum",
        "tf",
        "matmul",
        "w_output",
        "h_linear2",
        "tf",
        "add",
        "h_linear3",
        "b_output",
        "tf",
        "reduce_mean",
        "tf",
        "square",
        "y_data",
        "y",
        "tf",
        "train",
        "AdamOptimizer",
        "optimizer",
        "minimize",
        "loss",
        "tf",
        "initialize_all_variables",
        "tf",
        "Session",
        "sess",
        "run",
        "init",
        "step",
        "xrange",
        "i",
        "xrange",
        "data_num",
        "step",
        "sess",
        "run",
        "loss",
        "feed_dict",
        "x_data",
        "x_sample",
        "i",
        "y_data",
        "y_sample",
        "i",
        "sess",
        "run",
        "loss",
        "feed_dict",
        "x_data",
        "x_sample",
        "i",
        "y_data",
        "y_sample",
        "i",
        "result",
        "sess",
        "run",
        "train",
        "feed_dict",
        "x_data",
        "x_sample",
        "i",
        "y_data",
        "y_sample",
        "i",
        "step",
        "step",
        "sess",
        "run",
        "w",
        "sess",
        "run",
        "b",
        "acc",
        "plt",
        "scatter",
        "x_sample",
        "y_sample",
        "i",
        "xrange",
        "x_range",
        "i",
        "x_range",
        "x_plot_sub",
        "x",
        "append",
        "prot_x",
        "r",
        "append",
        "sess",
        "run",
        "y",
        "feed_dict",
        "x_data",
        "prot_x",
        "r",
        "i",
        "plt",
        "plot",
        "x",
        "r",
        "color",
        "plt",
        "pause",
        "plt",
        "close",
        "plt",
        "scatter",
        "x_sample",
        "y_sample",
        "i",
        "xrange",
        "x_range",
        "i",
        "x_range",
        "x_plot_sub",
        "x",
        "append",
        "prot_x",
        "r",
        "append",
        "sess",
        "run",
        "y",
        "feed_dict",
        "x_data",
        "prot_x",
        "r",
        "i",
        "plt",
        "plot",
        "x",
        "r",
        "color",
        "plt",
        "show",
        "sess",
        "close",
        "time",
        "time",
        "start",
        "format",
        "timer"
    ],
    "literals": [
        "\"float32\"",
        "\"float32\"",
        "'orangered'",
        "'orangered'",
        "\"time:{0}\"",
        "\"[sec]\""
    ],
    "variables": [
        "intercept",
        "coefficient1",
        "coefficient2",
        "coefficient3",
        "coefficient4",
        "start",
        "data_num",
        "tenosor_num",
        "graph_range",
        "x_plot_sub",
        "x_range",
        "x_sample",
        "x_sample",
        "y_sample",
        "x_data",
        "y_data",
        "w_input",
        "b_input",
        "w",
        "b",
        "w_output",
        "b_output",
        "h_linear1",
        "h_linear2",
        "h_linear3",
        "y",
        "loss",
        "optimizer",
        "train",
        "init",
        "sess",
        "result",
        "acc",
        "x",
        "r",
        "prot_x",
        "x",
        "r",
        "prot_x",
        "timer"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "完成",
        "テンソルを減らす 47行目",
        "import math",
        "data set",
        "graph_para",
        "w = tf.Variable(tf.constant(tenosor_num,shape=[tenosor_num,1],dtype=tf.float32))",
        "b = tf.Variable(tf.constant(2.0*(np.arange(tenosor_num).astype(float)-(tenosor_num/2.0)),shape=[tenosor_num,1],dtype=tf.float32))",
        "w_input2 = tf.Variable(tf.random_uniform([1], -1.0, 1.0))",
        "b_input2 = tf.Variable(tf.zeros([1]))",
        "w2 = tf.Variable(tf.random_uniform([4,4], -1.0, 1.0))",
        "b2 = tf.Variable(tf.zeros([4,4]))",
        "b_output2 = tf.Variable(tf.zeros([1]))",
        "1st layer",
        "h_linear1 = x_data",
        "2nd layer",
        "output",
        "# Add summary ops to collect data",
        "w_hist = tf.histogram_summary(\"weights\", w)",
        "b_hist = tf.histogram_summary(\"biases\", b)",
        "y_hist = tf.histogram_summary(\"y\", y)",
        "loss_summary = tf.scalar_summary(\"loss\", loss)",
        "optimizer = tf.train.GradientDescentOptimizer(0.01)",
        "merged = tf.merge_all_summaries()",
        "writer = tf.train.SummaryWriter(\"/tmp/tensorflow_log\", sess.graph_def)",
        "summary_str = result[0]",
        "writer.add_summary(summary_str, step)"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}