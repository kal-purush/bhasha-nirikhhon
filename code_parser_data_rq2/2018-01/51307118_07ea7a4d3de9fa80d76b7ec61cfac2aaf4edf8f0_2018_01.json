{
    "identifiers": [
        "MusicSheet",
        "Fraction",
        "MultiTempoExpression",
        "ContDynamicEnum",
        "ContinuousDynamicExpression",
        "ContinuousTempoExpression",
        "DynamicEnum",
        "InstantaniousDynamicExpression",
        "OctaveShift",
        "Instrument",
        "MultiExpression",
        "IXmlAttribute",
        "IXmlElement",
        "SourceMeasure",
        "InstantaniousTempoExpression",
        "MoodExpression",
        "UnknownExpression",
        "TextAlignment",
        "Logging",
        "ITextTranslation",
        "PlacementEnum",
        "musicSheet",
        "instrument",
        "staffNumber",
        "musicSheet",
        "staffNumber",
        "musicSheet",
        "instrument",
        "staffNumber",
        "xmlNode",
        "currentInstrument",
        "divisions",
        "inSourceMeasureCurrentFraction",
        "inSourceMeasureFormerFraction",
        "currentMeasureIndex",
        "ignoreDivisionsOffset",
        "xmlNode",
        "offsetNode",
        "ignoreDivisionsOffset",
        "parseInt",
        "offsetNode",
        "ex",
        "Logging",
        "errorMsg",
        "ex",
        "errorMsg",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "Fraction",
        "divisions",
        "inSourceMeasureCurrentFraction",
        "offsetFraction",
        "Fraction",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "inSourceMeasureFormerFraction",
        "offsetFraction",
        "Fraction",
        "offsetFraction",
        "inSourceMeasureCurrentFraction",
        "Fraction",
        "offsetFraction",
        "inSourceMeasureCurrentFraction",
        "offsetFraction",
        "Fraction",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "inSourceMeasureFormerFraction",
        "offsetFraction",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "offsetFraction",
        "Fraction",
        "offsetFraction",
        "xmlNode",
        "placeAttr",
        "placeAttr",
        "placementString",
        "PlacementEnum",
        "placementString",
        "PlacementEnum",
        "ex",
        "ITextTranslation",
        "Logging",
        "errorMsg",
        "ex",
        "errorMsg",
        "PlacementEnum",
        "PlacementEnum",
        "xmlNode",
        "directionTypeNode",
        "directionTypeNode",
        "dynamicsNode",
        "dynamicsNode",
        "defAttr",
        "defAttr",
        "directionTypeNode",
        "wedgeNode",
        "wedgeNode",
        "defAttr",
        "defAttr",
        "directionTypeNode",
        "wordsNode",
        "wordsNode",
        "defAttr",
        "defAttr",
        "ex",
        "ITextTranslation",
        "Logging",
        "errorMsg",
        "ex",
        "errorMsg",
        "PlacementEnum",
        "PlacementEnum",
        "currentInstrument",
        "PlacementEnum",
        "currentInstrument",
        "PlacementEnum",
        "PlacementEnum",
        "directionNode",
        "currentMeasure",
        "inSourceMeasureCurrentFraction",
        "directionNode",
        "n",
        "n",
        "n",
        "tempoAttr",
        "tempoAttr",
        "match",
        "parseInt",
        "match",
        "isTempoInstruction",
        "dynAttr",
        "dynAttr",
        "match",
        "parseInt",
        "match",
        "isDynamicInstruction",
        "directionNode",
        "dirNode",
        "dirNode",
        "dirContentNode",
        "dirContentNode",
        "dirContentNode",
        "dirContentNode",
        "beatUnit",
        "bpm",
        "dirContentNode",
        "dirContentNode",
        "useCurrentFractionForPositioning",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "beatUnit",
        "bpm",
        "hasDot",
        "text",
        "text",
        "parseInt",
        "bpm",
        "currentMeasure",
        "InstantaniousTempoExpression",
        "text",
        "bpmNumber",
        "instantaniousTempoExpression",
        "text",
        "dirContentNode",
        "dirNode",
        "dirContentNode",
        "directionNode",
        "dirContentNode",
        "currentMeasure",
        "inSourceMeasureCurrentFraction",
        "fromNotation",
        "dirContentNode",
        "dirNode",
        "dirContentNode",
        "isTempoInstruction",
        "currentMeasure",
        "dirContentNode",
        "InstantaniousTempoExpression",
        "dirContentNode",
        "instantaniousTempoExpression",
        "isDynamicInstruction",
        "dirContentNode",
        "currentMeasure",
        "inSourceMeasureCurrentFraction",
        "dirContentNode",
        "dirNode",
        "dirContentNode",
        "dirContentNode",
        "currentMeasure",
        "inSourceMeasureCurrentFraction",
        "currentMeasure",
        "sourceMeasure",
        "timestamp",
        "sourceMeasure",
        "timestamp",
        "Fraction",
        "sourceMeasure",
        "timestamp",
        "directionNode",
        "currentMeasure",
        "endTimestamp",
        "directionNode",
        "staffNode",
        "octaveStaffNumber",
        "parseInt",
        "staffNode",
        "ex",
        "ITextTranslation",
        "errorMsg",
        "octaveStaffNumber",
        "Logging",
        "errorMsg",
        "ex",
        "directionNode",
        "directionTypeNode",
        "directionTypeNode",
        "octaveShiftNode",
        "octaveShiftNode",
        "octaveShiftNode",
        "parseInt",
        "octaveShiftNode",
        "size",
        "octave",
        "size",
        "octave",
        "octaveShiftNode",
        "octaveShiftNode",
        "OctaveShift",
        "octave",
        "octaveShift",
        "octaveStaffNumber",
        "currentMeasure",
        "octaveShift",
        "octaveShift",
        "octaveShift",
        "currentMeasure",
        "endTimestamp",
        "ex",
        "ITextTranslation",
        "errorMsg",
        "Logging",
        "errorMsg",
        "ex",
        "PlacementEnum",
        "defAttr",
        "catchLogMessage",
        "parseInt",
        "defAttr",
        "y",
        "PlacementEnum",
        "y",
        "PlacementEnum",
        "ex",
        "Logging",
        "catchLogMessage",
        "ex",
        "dynamicsNode",
        "currentMeasure",
        "inSourceMeasureCurrentFraction",
        "fromNotation",
        "dynamicsNode",
        "dynamicsNode",
        "dynamicsNode",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "dynamicsNode",
        "name",
        "dynamicEnum",
        "DynamicEnum",
        "name",
        "err",
        "ITextTranslation",
        "errorMsg",
        "dynamicEnum",
        "fromNotation",
        "currentMeasure",
        "currentMeasure",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "InstantaniousDynamicExpression",
        "name",
        "instantaniousDynamicExpression",
        "instantaniousDynamicExpression",
        "InstantaniousDynamicExpression",
        "name",
        "PlacementEnum",
        "wordsNode",
        "currentMeasure",
        "inSourceMeasureCurrentFraction",
        "wordsNode",
        "text",
        "wordsNode",
        "wordsNode",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "text",
        "text",
        "currentMeasure",
        "wedgeNode",
        "currentMeasure",
        "inSourceMeasureCurrentFraction",
        "currentMeasureIndex",
        "wedgeNode",
        "wedgeNode",
        "wedgeNode",
        "Fraction",
        "inSourceMeasureCurrentFraction",
        "currentMeasure",
        "wedgeNode",
        "currentMeasureIndex",
        "currentMeasure",
        "timestamp",
        "timestamp",
        "timestamp",
        "currentMeasure",
        "currentMeasure",
        "timestamp",
        "MultiExpression",
        "currentMeasure",
        "Fraction",
        "timestamp",
        "currentMeasure",
        "currentMeasure",
        "currentMeasure",
        "MultiTempoExpression",
        "currentMeasure",
        "Fraction",
        "currentMeasure",
        "wedgeNode",
        "currentMeasureIndex",
        "wedgeNode",
        "wedgeNode",
        "wedgeNode",
        "ContinuousDynamicExpression",
        "ContDynamicEnum",
        "continuousDynamicExpression",
        "continuousDynamicExpression",
        "continuousDynamicExpression",
        "continuousDynamicExpression",
        "ex",
        "errorMsg",
        "Logging",
        "errorMsg",
        "ex",
        "inputString",
        "currentMeasure",
        "inputString",
        "inputString",
        "tmpInputString",
        "splitStr",
        "splitStrings",
        "splitStr",
        "currentMeasure",
        "inputString",
        "prefix",
        "stringTrimmed",
        "currentMeasure",
        "inputString",
        "InstantaniousTempoExpression",
        "stringTrimmed",
        "ContinuousTempoExpression",
        "stringTrimmed",
        "currentMeasure",
        "currentMeasure",
        "idx",
        "len",
        "idx",
        "currentMeasure",
        "idx",
        "multiTempoExpression",
        "multiTempoExpression",
        "multiTempoExpression",
        "stringTrimmed",
        "currentMeasure",
        "inputString",
        "InstantaniousTempoExpression",
        "stringTrimmed",
        "InstantaniousTempoExpression",
        "stringTrimmed",
        "instantaniousTempoExpression",
        "prefix",
        "ContinuousTempoExpression",
        "stringTrimmed",
        "ContinuousTempoExpression",
        "stringTrimmed",
        "continuousTempoExpression",
        "prefix",
        "InstantaniousDynamicExpression",
        "stringTrimmed",
        "ContinuousDynamicExpression",
        "stringTrimmed",
        "currentMeasure",
        "InstantaniousDynamicExpression",
        "stringTrimmed",
        "InstantaniousDynamicExpression",
        "stringTrimmed",
        "instantaniousDynamicExpression",
        "prefix",
        "ContinuousDynamicExpression",
        "stringTrimmed",
        "ContinuousDynamicExpression",
        "stringTrimmed",
        "continuousDynamicExpression",
        "continuousDynamicExpression",
        "continuousDynamicExpression",
        "continuousDynamicExpression",
        "prefix",
        "MoodExpression",
        "stringTrimmed",
        "currentMeasure",
        "MoodExpression",
        "stringTrimmed",
        "moodExpression",
        "prefix",
        "currentMeasure",
        "currentMeasure",
        "currentMeasure",
        "idx",
        "len",
        "idx",
        "currentMeasure",
        "idx",
        "multiTempoExpression",
        "multiTempoExpression",
        "multiTempoExpression",
        "stringTrimmed",
        "multiTempoExpression",
        "stringTrimmed",
        "UnknownExpression",
        "stringTrimmed",
        "TextAlignment",
        "unknownExpression",
        "prefix",
        "endTimestamp",
        "endTimestamp",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "inputString",
        "input",
        "input"
    ],
    "literals": [
        "\"../../MusicSheet\"",
        "\"../../../Common/DataObjects/Fraction\"",
        "\"../../VoiceData/Expressions/MultiTempoExpression\"",
        "\"../../VoiceData/Expressions/ContinuousExpressions/ContinuousDynamicExpression\"",
        "\"../../VoiceData/Expressions/ContinuousExpressions/ContinuousTempoExpression\"",
        "\"../../VoiceData/Expressions/InstantaniousDynamicExpression\"",
        "\"../../VoiceData/Expressions/ContinuousExpressions/OctaveShift\"",
        "\"../../Instrument\"",
        "\"../../VoiceData/Expressions/MultiExpression\"",
        "\"../../../Common/FileIO/Xml\"",
        "\"../../VoiceData/SourceMeasure\"",
        "\"../../VoiceData/Expressions/InstantaniousTempoExpression\"",
        "\"../../VoiceData/Expressions/MoodExpression\"",
        "\"../../VoiceData/Expressions/UnknownExpression\"",
        "\"../../../Common/Enums/TextAlignment\"",
        "\"../../../Common/Logging\"",
        "\"../../Interfaces/ITextTranslation\"",
        "\"offset\"",
        "string",
        "\"ReaderErrorMessages/ExpressionOffsetError\"",
        "\", Invalid expression offset -> set to default.\"",
        "\"ExpressionReader.readExpressionParameters\"",
        "\"placement\"",
        "string",
        "\"below\"",
        "\"above\"",
        "string",
        "\"ReaderErrorMessages/ExpressionPlacementError\"",
        "\"Invalid expression placement -> set to default.\"",
        "\"ExpressionReader.readExpressionParameters\"",
        "\"direction-type\"",
        "\"dynamics\"",
        "\"default-y\"",
        "\"read dynamics y pos\"",
        "\"wedge\"",
        "\"default-y\"",
        "\"read wedge y pos\"",
        "\"words\"",
        "\"default-y\"",
        "\"read words y pos\"",
        "string",
        "\"ReaderErrorMessages/ExpressionPlacementError\"",
        "\"Invalid expression placement -> set to default.\"",
        "\"ExpressionReader.readExpressionParameters\"",
        "\"sound\"",
        "\"tempo\"",
        "\"dynamics\"",
        "string",
        "string",
        "\"direction-type\"",
        "\"metronome\"",
        "\"beat-unit\"",
        "\"beat-unit-dot\"",
        "\"per-minute\"",
        "\"default-x\"",
        "string",
        "\" = \"",
        "\"dotted \"",
        "\"\"",
        "\"dynamics\"",
        "\"notations\"",
        "\"words\"",
        "\"\"",
        "\"wedge\"",
        "\"staff\"",
        "string",
        "\"ReaderErrorMessages/OctaveShiftStaffError\"",
        "\"Invalid octave shift staff number -> set to default\"",
        "\"ExpressionReader.addOctaveShift\"",
        "\"direction-type\"",
        "\"octave-shift\"",
        "\"size\"",
        "\"size\"",
        "\"type\"",
        "string",
        "\"type\"",
        "\"up\"",
        "\"down\"",
        "\"stop\"",
        "string",
        "\"ReaderErrorMessages/OctaveShiftError\"",
        "\"Error while reading octave shift.\"",
        "\"ExpressionReader.addOctaveShift\"",
        "string",
        "\"ExpressionReader.readExpressionParameters\"",
        "\"default-x\"",
        "string",
        "string",
        "\"ReaderErrorMessages/DynamicError\"",
        "\"Error while reading dynamic.\"",
        "\"\"",
        "string",
        "\"default-x\"",
        "\"default-x\"",
        "string",
        "\"type\"",
        "\"crescendo\"",
        "\"diminuendo\"",
        "\"stop\"",
        "string",
        "\"ReaderErrorMessages/WedgeError\"",
        "\", Error while reading Crescendo / Diminuendo.\"",
        "\"ExpressionReader.addWedge\"",
        "string",
        "string",
        "string",
        "\"\"",
        "string",
        "string",
        "string",
        "string",
        "\"coda\"",
        "\"tocoda\"",
        "\"to coda\"",
        "\"fine\"",
        "\"d.c.\"",
        "\"dacapo\"",
        "\"da capo\"",
        "\"d.s.\"",
        "\"dalsegno\"",
        "\"dal segno\"",
        "\"d.c. al fine\"",
        "\"d.s. al fine\"",
        "\"d.c. al coda\"",
        "\"d.s. al coda\"",
        "string"
    ],
    "variables": [
        "offsetNode",
        "errorMsg",
        "offsetFraction",
        "placeAttr",
        "placementString",
        "errorMsg",
        "directionTypeNode",
        "dynamicsNode",
        "defAttr",
        "wedgeNode",
        "defAttr",
        "wordsNode",
        "defAttr",
        "errorMsg",
        "isTempoInstruction",
        "isDynamicInstruction",
        "n",
        "tempoAttr",
        "dynAttr",
        "match",
        "match",
        "dirNode",
        "dirContentNode",
        "beatUnit",
        "hasDot",
        "bpm",
        "useCurrentFractionForPositioning",
        "text",
        "bpmNumber",
        "instantaniousTempoExpression",
        "fromNotation",
        "instantaniousTempoExpression",
        "octaveStaffNumber",
        "staffNode",
        "errorMsg",
        "directionTypeNode",
        "octaveShiftNode",
        "size",
        "octave",
        "octaveShift",
        "errorMsg",
        "y",
        "name",
        "dynamicEnum",
        "errorMsg",
        "instantaniousDynamicExpression",
        "text",
        "continuousDynamicExpression",
        "errorMsg",
        "tmpInputString",
        "splitStrings",
        "idx",
        "len",
        "multiTempoExpression",
        "instantaniousTempoExpression",
        "continuousTempoExpression",
        "instantaniousDynamicExpression",
        "continuousDynamicExpression",
        "moodExpression",
        "idx",
        "len",
        "multiTempoExpression",
        "unknownExpression"
    ],
    "comments": [
        "split string at enumerating words or signs",
        "private splitStringRecursive(input: [string, string], stringSeparators: string[]): [string, string][] {\n        let text: string = input[1];\n        let lastSeparator: string = input[0];\n        let resultList: [string, string][] = [];\n        for (let idx: number = 0, len: number = stringSeparators.length; idx < len; ++idx) {\n            let stringSeparator: string = stringSeparators[idx];\n            if (text.indexOf(stringSeparator) < 0) {\n                continue;\n            }\n            let splitStrings: string[] = text.split(stringSeparator, StringSplitOptions.RemoveEmptyEntries);\n\n            if (splitStrings.length !== 0) {\n                resultList.push(...this.splitStringRecursive([lastSeparator, splitStrings[0]], stringSeparators));\n                for (let index: number = 1; index < splitStrings.length; index++) {\n                    resultList.push(...this.splitStringRecursive([stringSeparator, splitStrings[index]], stringSeparators));\n                }\n            } else {\n                resultList.push([\"\", stringSeparator]);\n            }\n            break;\n        }\n        if (resultList.length === 0) {\n            resultList.push(input);\n        }\n        return resultList;\n    }",
        "first check if there is already a tempo expression with the same function",
        "create unknown:"
    ],
    "docstrings": [],
    "functions": [
        "readExpressionParameters",
        "read",
        "checkForOpenExpressions",
        "addOctaveShift",
        "initialize",
        "readExpressionPlacement",
        "interpretInstantaniousDynamics",
        "interpretWords",
        "interpretWedge",
        "createNewMultiExpressionIfNeeded",
        "createNewTempoExpressionIfNeeded",
        "addWedge",
        "fillMultiOrTempoExpression",
        "createExpressionFromString",
        "closeOpenContinuousDynamic",
        "closeOpenContinuousTempo",
        "checkIfWordsNodeIsRepetitionInstruction",
        "hasDigit"
    ],
    "classes": [
        "ExpressionReader"
    ]
}