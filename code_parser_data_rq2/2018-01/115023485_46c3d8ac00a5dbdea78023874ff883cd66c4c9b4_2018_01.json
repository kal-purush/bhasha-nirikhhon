{
    "identifiers": [
        "com",
        "jojo",
        "pad",
        "util",
        "android",
        "annotation",
        "SuppressLint",
        "android",
        "text",
        "TextUtils",
        "java",
        "io",
        "java",
        "io",
        "OutputStream",
        "java",
        "nio",
        "charset",
        "Charset",
        "LINE_BYTE_SIZE",
        "LEFT_LENGTH",
        "RIGHT_LENGTH",
        "LEFT_TEXT_MAX_LENGTH",
        "MEAL_NAME_MAX_LENGTH",
        "outputStream",
        "outputStream",
        "outputStream",
        "PrintUtils",
        "outputStream",
        "outputStream",
        "text",
        "data",
        "text",
        "getBytes",
        "outputStream",
        "write",
        "data",
        "data",
        "length",
        "outputStream",
        "flush",
        "e",
        "e",
        "printStackTrace",
        "command",
        "outputStream",
        "write",
        "command",
        "outputStream",
        "flush",
        "e",
        "e",
        "printStackTrace",
        "RESET",
        "ALIGN_LEFT",
        "ALIGN_CENTER",
        "ALIGN_RIGHT",
        "BOLD",
        "BOLD_CANCEL",
        "DOUBLE_HEIGHT_WIDTH",
        "DOUBLE_WIDTH",
        "DOUBLE_HEIGHT",
        "NORMAL",
        "LINE_SPACING_DEFAULT",
        "SuppressLint",
        "leftText",
        "rightText",
        "sb",
        "leftTextLength",
        "getBytesLength",
        "leftText",
        "rightTextLength",
        "getBytesLength",
        "rightText",
        "sb",
        "append",
        "leftText",
        "marginBetweenMiddleAndRight",
        "LINE_BYTE_SIZE",
        "leftTextLength",
        "rightTextLength",
        "i",
        "i",
        "marginBetweenMiddleAndRight",
        "i",
        "sb",
        "append",
        "sb",
        "append",
        "rightText",
        "sb",
        "toString",
        "SuppressLint",
        "leftText",
        "middleText",
        "rightText",
        "sb",
        "leftText",
        "length",
        "LEFT_TEXT_MAX_LENGTH",
        "leftText",
        "leftText",
        "substring",
        "LEFT_TEXT_MAX_LENGTH",
        "leftTextLength",
        "getBytesLength",
        "leftText",
        "middleTextLength",
        "getBytesLength",
        "middleText",
        "rightTextLength",
        "getBytesLength",
        "rightText",
        "sb",
        "append",
        "leftText",
        "marginBetweenLeftAndMiddle",
        "LEFT_LENGTH",
        "leftTextLength",
        "middleTextLength",
        "i",
        "i",
        "marginBetweenLeftAndMiddle",
        "i",
        "sb",
        "append",
        "sb",
        "append",
        "middleText",
        "marginBetweenMiddleAndRight",
        "RIGHT_LENGTH",
        "middleTextLength",
        "rightTextLength",
        "i",
        "i",
        "marginBetweenMiddleAndRight",
        "i",
        "sb",
        "append",
        "sb",
        "sb",
        "length",
        "sb",
        "length",
        "append",
        "rightText",
        "sb",
        "toString",
        "SuppressLint",
        "msg",
        "msg",
        "getBytes",
        "Charset",
        "forName",
        "length",
        "name",
        "TextUtils",
        "isEmpty",
        "name",
        "name",
        "name",
        "length",
        "MEAL_NAME_MAX_LENGTH",
        "name",
        "substring",
        "name"
    ],
    "literals": [
        "\"gbk\"",
        "\"NewApi\"",
        "\" \"",
        "\"NewApi\"",
        "\"..\"",
        "\" \"",
        "\" \"",
        "\"NewApi\"",
        "\"GB2312\"",
        "\"..\""
    ],
    "variables": [],
    "comments": [
        "Toast.makeText(this.context, \"发送失败！\", Toast.LENGTH_SHORT).show();",
        "Toast.makeText(this.context, \"发送失败！\", Toast.LENGTH_SHORT).show();",
        "public static final byte[] LINE_SPACING = {0x1b, 0x32};//{0x1b, 0x33, 0x14};  // 20的行间距（0，255）",
        "final byte[][] byteCommands = {",
        "{ 0x1b, 0x61, 0x00 }, // 左对齐",
        "{ 0x1b, 0x61, 0x01 }, // 中间对齐",
        "{ 0x1b, 0x61, 0x02 }, // 右对齐",
        "{ 0x1b, 0x40 },// 复位打印机",
        "{ 0x1b, 0x4d, 0x00 },// 标准ASCII字体",
        "{ 0x1b, 0x4d, 0x01 },// 压缩ASCII字体",
        "{ 0x1d, 0x21, 0x00 },// 字体不放大",
        "{ 0x1d, 0x21, 0x11 },// 宽高加倍",
        "{ 0x1b, 0x45, 0x00 },// 取消加粗模式",
        "{ 0x1b, 0x45, 0x01 },// 选择加粗模式",
        "{ 0x1b, 0x7b, 0x00 },// 取消倒置打印",
        "{ 0x1b, 0x7b, 0x01 },// 选择倒置打印",
        "{ 0x1d, 0x42, 0x00 },// 取消黑白反显",
        "{ 0x1d, 0x42, 0x01 },// 选择黑白反显",
        "{ 0x1b, 0x56, 0x00 },// 取消顺时针旋转90°",
        "{ 0x1b, 0x56, 0x01 },// 选择顺时针旋转90°",
        "};",
        "计算两侧文字中间的空格",
        "左边最多显示 LEFT_TEXT_MAX_LENGTH 个汉字 + 两个点",
        "计算左侧文字和中间文字的空格长度",
        "计算右侧文字和中间文字的空格长度",
        "打印的时候发现，最右边的文字总是偏右一个字符，所以需要删除一个空格"
    ],
    "docstrings": [
        "* 打印纸一行最大的字节",
        "* 左侧汉字最多显示几个文字",
        "* 小票打印菜品的名称，上限调到8个字",
        "* 打印文字\n     *\n     * @param text 要打印的文字",
        "* 设置打印格式\n     *\n     * @param command 格式指令",
        "* 复位打印机",
        "* 左对齐",
        "* 中间对齐",
        "* 右对齐",
        "* 选择加粗模式",
        "* 取消加粗模式",
        "* 宽高加倍",
        "* 宽加倍",
        "* 高加倍",
        "* 字体不放大",
        "* 设置默认行间距",
        "* 设置行间距",
        "* 打印两列\n     *\n     * @param leftText  左侧文字\n     * @param rightText 右侧文字\n     * @return",
        "* 打印三列\n     *\n     * @param leftText   左侧文字\n     * @param middleText 中间文字\n     * @param rightText  右侧文字\n     * @return",
        "* 获取数据长度\n     *\n     * @param msg\n     * @return",
        "* 格式化菜品名称，最多显示MEAL_NAME_MAX_LENGTH个数\n     *\n     * @param name\n     * @return"
    ],
    "functions": [
        "OutputStream",
        "getOutputStream",
        "setOutputStream",
        "printText",
        "selectCommand",
        "printTwoData",
        "printThreeData",
        "getBytesLength",
        "formatMealName"
    ],
    "classes": [
        "PrintUtils"
    ]
}