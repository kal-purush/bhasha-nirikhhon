{
    "identifiers": [
        "numpy",
        "np",
        "cv2",
        "serial",
        "picamera",
        "array",
        "PiRGBArray",
        "picamera",
        "PiCamera",
        "time",
        "argparse",
        "imutils",
        "threading",
        "rplidar",
        "RPLidar",
        "cv2",
        "CascadeClassifier",
        "resolution",
        "framerate",
        "PiCamera",
        "camera",
        "resolution",
        "camera",
        "camera",
        "framerate",
        "PiRGBArray",
        "camera",
        "size",
        "resolution",
        "camera",
        "capture_continuous",
        "rawCapture",
        "format",
        "use_video_port",
        "target",
        "update",
        "args",
        "start",
        "f",
        "stream",
        "f",
        "array",
        "rawCapture",
        "truncate",
        "stopped",
        "stream",
        "close",
        "rawCapture",
        "close",
        "camera",
        "close",
        "frame",
        "cv2",
        "setUseOptimized",
        "PiVideoStream",
        "start",
        "serial",
        "Serial",
        "timeout",
        "time",
        "sleep",
        "frame",
        "frame",
        "shape",
        "cv2",
        "line",
        "frame",
        "height",
        "width",
        "height",
        "cv2",
        "line",
        "frame",
        "width",
        "width",
        "height",
        "cv2",
        "cvtColor",
        "frame",
        "cv2",
        "COLOR_BGR2GRAY",
        "height",
        "upperbody_cascade",
        "detectMultiScale",
        "gray",
        "minSize",
        "min",
        "min",
        "x",
        "y",
        "w",
        "h",
        "uppers",
        "count",
        "cv2",
        "rectangle",
        "frame",
        "x",
        "y",
        "x",
        "w",
        "y",
        "h",
        "x",
        "w",
        "y",
        "h",
        "cv2",
        "rectangle",
        "frame",
        "a",
        "b",
        "a",
        "b",
        "count",
        "a",
        "width",
        "b",
        "height",
        "cv2",
        "imshow",
        "frame",
        "cv2",
        "waitKey",
        "ord",
        "get_front_distance",
        "arduino",
        "write",
        "left",
        "right",
        "arduino",
        "write",
        "cv2",
        "imshow",
        "frame",
        "time",
        "time",
        "vs",
        "read",
        "process",
        "frame",
        "time",
        "time",
        "end",
        "start",
        "fps",
        "cv2",
        "waitKey",
        "ord",
        "vs",
        "stop",
        "cap",
        "release",
        "cv2",
        "destroyAllWindows"
    ],
    "literals": [
        "'haarcascade_upperbody.xml'",
        "\"bgr\"",
        "\"/dev/ttyACM1\"",
        "\"turn left\"",
        "\"turn right\"",
        "\"forward\"",
        "\"backward\"",
        "\"frame2\"",
        "'q'",
        "\"<\"",
        "\",\"",
        "\">\"",
        "\"<0,0>\"",
        "\"frame\"",
        "\"q\""
    ],
    "variables": [
        "upperbody_cascade",
        "camera",
        "resolution",
        "rotation",
        "framerate",
        "rawCapture",
        "stream",
        "frame",
        "stopped",
        "frame",
        "stopped",
        "resheight",
        "vs",
        "arduino",
        "height",
        "width",
        "channels",
        "gray",
        "min",
        "uppers",
        "count",
        "a",
        "b",
        "left",
        "right",
        "start",
        "frame",
        "end",
        "fps"
    ],
    "comments": [
        "initialize the camera and stream",
        "initialize the frame and the variable used to indicate",
        "if the thread should be stopped",
        "start the thread to read frames from the video stream",
        "keep looping infinitely until the thread is stopped",
        "grab the frame from the stream and clear the stream in",
        "preparation for the next frame",
        "if the thread indicator variable is set, stop the thread",
        "and resource camera resources",
        "laptop cam is 480x640",
        "plot bisecting lines horizontally and vertically",
        "plot centre of detection square",
        "print(\"%s detected\" % count)"
    ],
    "docstrings": [],
    "functions": [
        "start",
        "update",
        "read",
        "stop",
        "process"
    ],
    "classes": [
        "PiVideoStream"
    ]
}