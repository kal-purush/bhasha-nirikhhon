{
    "identifiers": [
        "element",
        "classNames",
        "element",
        "classNames",
        "element",
        "classNames",
        "element",
        "classNames",
        "x",
        "toBeRemoved",
        "x",
        "original",
        "toBeRemoved",
        "x",
        "index",
        "original",
        "index",
        "element",
        "original",
        "element",
        "element",
        "element",
        "element",
        "src",
        "src",
        "src",
        "src",
        "cpy",
        "x",
        "src",
        "x",
        "cpy",
        "copy",
        "src",
        "x",
        "cpy",
        "src",
        "src",
        "src",
        "cpy",
        "src",
        "cpy",
        "src",
        "cpy",
        "src",
        "cpy",
        "src",
        "cpy",
        "src",
        "cpy",
        "src",
        "cpy",
        "prop",
        "src",
        "src",
        "prop",
        "cpy",
        "prop",
        "copy",
        "src",
        "prop",
        "cpy",
        "src",
        "instance",
        "initialize",
        "instance",
        "root",
        "root",
        "instance",
        "instance",
        "copy",
        "instance",
        "instance",
        "initialize",
        "instance",
        "el",
        "fn",
        "useCapture",
        "el",
        "fn",
        "useCapture",
        "el",
        "fn",
        "el",
        "fn",
        "el",
        "fn",
        "useCapture",
        "el",
        "fn",
        "useCapture",
        "el",
        "fn",
        "el",
        "fn",
        "t",
        "transitions",
        "t",
        "transitions",
        "t",
        "supported",
        "supported",
        "context",
        "method",
        "arguments",
        "x",
        "arguments",
        "x",
        "args",
        "arguments",
        "x",
        "args",
        "context",
        "method",
        "context",
        "args",
        "method",
        "context",
        "context",
        "index",
        "button",
        "index",
        "button",
        "eventType",
        "instance",
        "instance",
        "eventType",
        "instance",
        "eventType",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "copy",
        "instance",
        "reflow",
        "instance",
        "setup",
        "instance",
        "setup",
        "setup",
        "setup",
        "setup",
        "setup",
        "instance",
        "instance",
        "setup",
        "b",
        "setup",
        "b",
        "setup",
        "b",
        "i",
        "i",
        "cpy",
        "i",
        "i",
        "buttonsDefinition",
        "cpy",
        "instance",
        "buttonsDefinition",
        "setup",
        "elements",
        "elements",
        "classes",
        "classes",
        "elements",
        "templates",
        "templates",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "templates",
        "elements",
        "elements",
        "elements",
        "templates",
        "templates",
        "templates",
        "templates",
        "templates",
        "templates",
        "templates",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "templates",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "templates",
        "templates",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "elements",
        "templates",
        "elements",
        "elements",
        "elements",
        "elements",
        "x",
        "instance",
        "x",
        "instance",
        "x",
        "usedKeys",
        "button",
        "usedKeys",
        "button",
        "button",
        "elements",
        "button",
        "button",
        "button",
        "button",
        "addClass",
        "button",
        "button",
        "key",
        "button",
        "key",
        "button",
        "key",
        "button",
        "key",
        "button",
        "key",
        "button",
        "elements",
        "button",
        "elements",
        "button",
        "instance",
        "elements",
        "instance",
        "onReset",
        "instance",
        "beginMove",
        "instance",
        "beginResize",
        "instance",
        "bringToFront",
        "instance",
        "modalClickHandler",
        "instance",
        "buttonsClickHandler",
        "instance",
        "commandsClickHandler",
        "instance",
        "handleTransitionInEvent",
        "instance",
        "handleTransitionOutEvent",
        "opKey",
        "setup",
        "opKey",
        "instance",
        "opKey",
        "setup",
        "opKey",
        "alertify",
        "opKey",
        "instance",
        "opKey",
        "alertify",
        "opKey",
        "opKey",
        "instance",
        "opKey",
        "alertify",
        "opKey",
        "instance",
        "instance",
        "instance",
        "scrollX",
        "getScrollLeft",
        "scrollY",
        "getScrollTop",
        "scrollX",
        "scrollY",
        "x",
        "openDialogs",
        "x",
        "openDialogs",
        "x",
        "instance",
        "instance",
        "requiresNoOverflow",
        "requiresNoOverflow",
        "classes",
        "removeClass",
        "classes",
        "preventBodyShift",
        "requiresNoOverflow",
        "classes",
        "preventBodyShift",
        "addClass",
        "classes",
        "add",
        "alertify",
        "add",
        "topScroll",
        "scrollY",
        "top",
        "addClass",
        "classes",
        "scrollY",
        "scrollY",
        "topScroll",
        "top",
        "removeClass",
        "classes",
        "restoreScrollPosition",
        "instance",
        "value",
        "oldValue",
        "oldValue",
        "removeClass",
        "instance",
        "classes",
        "oldValue",
        "addClass",
        "instance",
        "classes",
        "value",
        "reflow",
        "instance",
        "instance",
        "instance",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "unbindModelessEvents",
        "instance",
        "updateAbsPositionFix",
        "instance",
        "ensureNoOverflow",
        "addClass",
        "instance",
        "classes",
        "instance",
        "bindModelessEvents",
        "instance",
        "updateAbsPositionFix",
        "instance",
        "ensureNoOverflow",
        "instance",
        "instance",
        "addClass",
        "instance",
        "classes",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "instance",
        "addClass",
        "instance",
        "classes",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "openDialogs",
        "instance",
        "index",
        "x",
        "openDialogs",
        "x",
        "openDialogs",
        "x",
        "instance",
        "instance",
        "openDialogs",
        "openDialogs",
        "instance",
        "openDialogs",
        "instance",
        "setFocus",
        "instance",
        "instance",
        "option",
        "oldValue",
        "newValue",
        "option",
        "instance",
        "newValue",
        "updateDisplayMode",
        "instance",
        "updateBasicMode",
        "instance",
        "updateFramelessMode",
        "instance",
        "updatePinned",
        "instance",
        "updateClosable",
        "instance",
        "updateMaximizable",
        "instance",
        "updatePinnable",
        "instance",
        "updateMovable",
        "instance",
        "updateResizable",
        "instance",
        "updateTransition",
        "instance",
        "newValue",
        "oldValue",
        "newValue",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "classes",
        "addClass",
        "instance",
        "classes",
        "newValue",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "classes",
        "addClass",
        "instance",
        "classes",
        "updateTransition",
        "instance",
        "newValue",
        "oldValue",
        "instance",
        "instance",
        "instance",
        "option",
        "oldValue",
        "newValue",
        "instance",
        "obj",
        "callback",
        "key",
        "value",
        "value",
        "key",
        "result",
        "obj",
        "key",
        "result",
        "result",
        "obj",
        "key",
        "result",
        "result",
        "result",
        "key",
        "prop",
        "args",
        "obj",
        "prop",
        "obj",
        "prop",
        "args",
        "prop",
        "old",
        "obj",
        "prop",
        "obj",
        "prop",
        "args",
        "prop",
        "callback",
        "instance",
        "prop",
        "old",
        "args",
        "prop",
        "result",
        "prop",
        "args",
        "prop",
        "result",
        "prop",
        "args",
        "prop",
        "key",
        "obj",
        "key",
        "obj",
        "key",
        "value",
        "old",
        "obj",
        "key",
        "obj",
        "key",
        "value",
        "callback",
        "instance",
        "key",
        "old",
        "value",
        "result",
        "key",
        "value",
        "result",
        "key",
        "value",
        "result",
        "instance",
        "triggerCallback",
        "instance",
        "button",
        "found",
        "button",
        "found",
        "instance",
        "instance",
        "instance",
        "target",
        "instance",
        "instance",
        "pin",
        "instance",
        "unpin",
        "instance",
        "instance",
        "instance",
        "maximize",
        "instance",
        "restore",
        "instance",
        "instance",
        "triggerClose",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "dispatchEvent",
        "instance",
        "addClass",
        "instance",
        "classes",
        "instance",
        "ensureNoOverflow",
        "dispatchEvent",
        "instance",
        "instance",
        "dispatchEvent",
        "instance",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "ensureNoOverflow",
        "dispatchEvent",
        "instance",
        "instance",
        "instance",
        "addClass",
        "instance",
        "classes",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "getScrollLeft",
        "instance",
        "getScrollTop",
        "instance",
        "scrollLeft",
        "instance",
        "scrollLeft",
        "instance",
        "parseInt",
        "instance",
        "parseInt",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "top",
        "parseInt",
        "instance",
        "instance",
        "top",
        "marginTop",
        "getScrollTop",
        "instance",
        "left",
        "parseInt",
        "instance",
        "instance",
        "left",
        "marginLeft",
        "getScrollLeft",
        "instance",
        "instance",
        "instance",
        "addAbsPositionFix",
        "instance",
        "removeAbsPositionFix",
        "instance",
        "instance",
        "instance",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "removeAbsPositionFix",
        "instance",
        "addClass",
        "instance",
        "classes",
        "instance",
        "instance",
        "addAbsPositionFix",
        "instance",
        "instance",
        "instance",
        "addClass",
        "instance",
        "classes",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "instance",
        "addClass",
        "instance",
        "classes",
        "bindClosableEvents",
        "instance",
        "removeClass",
        "instance",
        "classes",
        "unbindClosableEvents",
        "instance",
        "instance",
        "cancelClick",
        "target",
        "instance",
        "instance",
        "triggerClose",
        "instance",
        "cancelClick",
        "instance",
        "check",
        "idx",
        "instance",
        "idx",
        "instance",
        "idx",
        "button",
        "check",
        "button",
        "createCloseEvent",
        "idx",
        "button",
        "instance",
        "instance",
        "instance",
        "closeEvent",
        "closeEvent",
        "instance",
        "instance",
        "triggerCallback",
        "instance",
        "button",
        "button",
        "target",
        "cancelKeyup",
        "cancelKeyup",
        "cancelKeyup",
        "openDialogs",
        "openDialogs",
        "instance",
        "keyCode",
        "keys",
        "instance",
        "triggerClose",
        "instance",
        "usedKeys",
        "keyCode",
        "triggerCallback",
        "instance",
        "button",
        "button",
        "keyCode",
        "openDialogs",
        "openDialogs",
        "keyCode",
        "keys",
        "keyCode",
        "keys",
        "instance",
        "x",
        "buttons",
        "x",
        "buttons",
        "x",
        "keyCode",
        "keys",
        "buttons",
        "x",
        "buttons",
        "keys",
        "buttons",
        "x",
        "buttons",
        "keyCode",
        "keys",
        "keyCode",
        "keys",
        "usedKeys",
        "keyCode",
        "triggerCallback",
        "instance",
        "button",
        "button",
        "keyCode",
        "instance",
        "resetTarget",
        "resetTarget",
        "resetTarget",
        "instance",
        "focus",
        "focus",
        "instance",
        "focus",
        "instance",
        "element",
        "instance",
        "element",
        "instance",
        "focus",
        "element",
        "instance",
        "focus",
        "element",
        "focus",
        "instance",
        "element",
        "element",
        "instance",
        "element",
        "instance",
        "element",
        "element",
        "element",
        "focus",
        "element",
        "element",
        "instance",
        "instance",
        "openDialogs",
        "x",
        "x",
        "openDialogs",
        "x",
        "instance",
        "openDialogs",
        "x",
        "instance",
        "instance",
        "target",
        "instance",
        "instance",
        "target",
        "lastResetElement",
        "instance",
        "resetTarget",
        "instance",
        "instance",
        "resetTarget",
        "instance",
        "resetTarget",
        "instance",
        "target",
        "instance",
        "resetTarget",
        "instance",
        "instance",
        "lastResetElement",
        "resetTarget",
        "instance",
        "target",
        "instance",
        "resetTarget",
        "instance",
        "instance",
        "setFocus",
        "instance",
        "resetTarget",
        "instance",
        "clearTimeout",
        "instance",
        "setFocus",
        "instance",
        "restoreScrollPosition",
        "cancelKeyup",
        "dispatchEvent",
        "instance",
        "off",
        "instance",
        "transition",
        "instance",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "clearTimeout",
        "instance",
        "off",
        "instance",
        "transition",
        "instance",
        "resetMove",
        "instance",
        "resetResize",
        "instance",
        "instance",
        "instance",
        "restore",
        "instance",
        "alertify",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "element",
        "xProp",
        "offsetX",
        "yProp",
        "offsetY",
        "refreshTop",
        "top",
        "element",
        "left",
        "element",
        "top",
        "element",
        "xProp",
        "offsetX",
        "yProp",
        "offsetY",
        "refreshTop",
        "top",
        "element",
        "bounds",
        "bounds",
        "left",
        "refreshTop",
        "element",
        "bounds",
        "bounds",
        "top",
        "element",
        "bounds",
        "top",
        "instance",
        "resizable",
        "instance",
        "instance",
        "eventSrc",
        "xProp",
        "yProp",
        "eventSrc",
        "eventSrc",
        "instance",
        "addClass",
        "element",
        "classes",
        "element",
        "left",
        "parseInt",
        "element",
        "element",
        "top",
        "parseInt",
        "element",
        "offsetX",
        "eventSrc",
        "xProp",
        "left",
        "offsetY",
        "eventSrc",
        "yProp",
        "top",
        "instance",
        "offsetY",
        "instance",
        "instance",
        "offsetY",
        "instance",
        "left",
        "top",
        "offsetLeft",
        "current",
        "offsetTop",
        "current",
        "current",
        "current",
        "bounds",
        "offsetLeft",
        "offsetLeft",
        "element",
        "offsetTop",
        "offsetTop",
        "moveDelegate",
        "moveElementBounded",
        "bounds",
        "moveDelegate",
        "moveElement",
        "dispatchEvent",
        "instance",
        "refreshTop",
        "instance",
        "instance",
        "movable",
        "instance",
        "moveDelegate",
        "eventSrc",
        "element",
        "addClass",
        "classes",
        "movable",
        "eventSrc",
        "eventSrc",
        "eventSrc",
        "moveDelegate",
        "eventSrc",
        "movable",
        "movable",
        "movable",
        "bounds",
        "removeClass",
        "classes",
        "removeClass",
        "instance",
        "classes",
        "dispatchEvent",
        "instance",
        "instance",
        "movable",
        "instance",
        "element",
        "element",
        "instance",
        "instance",
        "addClass",
        "instance",
        "classes",
        "instance",
        "bindMovableEvents",
        "instance",
        "resetMove",
        "instance",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "unbindMovableEvents",
        "instance",
        "element",
        "pageRelative",
        "offsetLeft",
        "current",
        "offsetTop",
        "current",
        "current",
        "current",
        "pageRelative",
        "X",
        "Y",
        "X",
        "Y",
        "isRightToLeft",
        "isRTL",
        "X",
        "X",
        "isNaN",
        "startingLeft",
        "offsetLeft",
        "offsetLeft",
        "element",
        "element",
        "Y",
        "offsetTop",
        "handleOffset",
        "element",
        "X",
        "offsetLeft",
        "handleOffset",
        "isNaN",
        "startingLeft",
        "element",
        "startingWidth",
        "isRTL",
        "diff",
        "element",
        "startingWidth",
        "element",
        "startingLeft",
        "diff",
        "element",
        "minWidth",
        "element",
        "startingLeft",
        "diff",
        "instance",
        "instance",
        "eventSrc",
        "eventSrc",
        "eventSrc",
        "dispatchEvent",
        "instance",
        "resizable",
        "instance",
        "handleOffset",
        "instance",
        "instance",
        "addClass",
        "element",
        "classes",
        "startingLeft",
        "parseInt",
        "element",
        "element",
        "element",
        "element",
        "instance",
        "instance",
        "element",
        "startingWidth",
        "element",
        "element",
        "element",
        "minWidth",
        "element",
        "element",
        "addClass",
        "classes",
        "resizable",
        "eventSrc",
        "eventSrc",
        "eventSrc",
        "resizeElement",
        "eventSrc",
        "resizable",
        "resizable",
        "resizable",
        "resizable",
        "resizable",
        "removeClass",
        "classes",
        "removeClass",
        "instance",
        "classes",
        "cancelClick",
        "dispatchEvent",
        "instance",
        "instance",
        "resizable",
        "instance",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "element",
        "startingLeft",
        "startingWidth",
        "minWidth",
        "handleOffset",
        "instance",
        "instance",
        "addClass",
        "instance",
        "classes",
        "instance",
        "bindResizableEvents",
        "instance",
        "resetResize",
        "instance",
        "removeClass",
        "instance",
        "classes",
        "instance",
        "unbindResizableEvents",
        "instance",
        "x",
        "openDialogs",
        "x",
        "openDialogs",
        "x",
        "instance",
        "resetMove",
        "instance",
        "resetResize",
        "instance",
        "instance",
        "openDialogs",
        "on",
        "windowResize",
        "on",
        "keyupHandler",
        "on",
        "keydownHandler",
        "on",
        "onReset",
        "on",
        "move",
        "on",
        "move",
        "on",
        "endMove",
        "on",
        "endMove",
        "on",
        "resize",
        "on",
        "resize",
        "on",
        "endResize",
        "on",
        "endResize",
        "on",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "cancelKeyup",
        "on",
        "instance",
        "transition",
        "instance",
        "instance",
        "bindModelessEvents",
        "instance",
        "instance",
        "bindResizableEvents",
        "instance",
        "instance",
        "bindMovableEvents",
        "instance",
        "instance",
        "openDialogs",
        "off",
        "windowResize",
        "off",
        "keyupHandler",
        "off",
        "keydownHandler",
        "off",
        "onReset",
        "off",
        "move",
        "off",
        "endMove",
        "off",
        "resize",
        "off",
        "endResize",
        "off",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "on",
        "instance",
        "transition",
        "instance",
        "instance",
        "unbindModelessEvents",
        "instance",
        "instance",
        "unbindMovableEvents",
        "instance",
        "instance",
        "unbindResizableEvents",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "instance",
        "on",
        "instance",
        "instance",
        "instance",
        "off",
        "instance",
        "instance",
        "initialize",
        "classes",
        "classes",
        "classes",
        "maximize",
        "restore",
        "pin",
        "unpin",
        "bringToFront",
        "x",
        "y",
        "isNaN",
        "x",
        "isNaN",
        "y",
        "dispatchEvent",
        "element",
        "offsetLeft",
        "parseInt",
        "element",
        "element",
        "offsetTop",
        "parseInt",
        "element",
        "offsetLeft",
        "current",
        "offsetTop",
        "current",
        "current",
        "current",
        "x",
        "offsetLeft",
        "y",
        "offsetTop",
        "isRightToLeft",
        "left",
        "element",
        "left",
        "element",
        "top",
        "dispatchEvent",
        "width",
        "height",
        "parseFloat",
        "width",
        "parseFloat",
        "height",
        "isNaN",
        "w",
        "isNaN",
        "h",
        "dispatchEvent",
        "width",
        "regex",
        "w",
        "w",
        "height",
        "regex",
        "h",
        "h",
        "element",
        "element",
        "minWidth",
        "element",
        "element",
        "element",
        "element",
        "w",
        "element",
        "h",
        "dispatchEvent",
        "key",
        "value",
        "update",
        "k",
        "o",
        "n",
        "optionUpdated",
        "k",
        "o",
        "n",
        "key",
        "value",
        "result",
        "result",
        "result",
        "update",
        "key",
        "value",
        "result",
        "result",
        "x",
        "result",
        "x",
        "result",
        "x",
        "item",
        "update",
        "callback",
        "item",
        "item",
        "key",
        "value",
        "key",
        "value",
        "key",
        "key",
        "content",
        "content",
        "clearContents",
        "content",
        "content",
        "content",
        "clearContents",
        "content",
        "content",
        "content",
        "clearContents",
        "content",
        "content",
        "content",
        "clearContents",
        "content",
        "className",
        "className",
        "modal",
        "className",
        "initialize",
        "openDialogs",
        "alertify",
        "bindEvents",
        "modal",
        "modal",
        "saveScrollPosition",
        "ensureNoOverflow",
        "className",
        "className",
        "className",
        "addClass",
        "className",
        "restore",
        "updateAbsPositionFix",
        "removeClass",
        "classes",
        "addClass",
        "classes",
        "clearTimeout",
        "setTimeout",
        "transition",
        "isSafari",
        "root",
        "setTimeout",
        "root",
        "reflow",
        "removeClass",
        "classes",
        "dispatchEvent",
        "resetMove",
        "resetResize",
        "addClass",
        "classes",
        "setTimeout",
        "removeClass",
        "classes",
        "dispatchEvent",
        "unbindEvents",
        "removeClass",
        "classes",
        "addClass",
        "classes",
        "clearTimeout",
        "setTimeout",
        "transition",
        "addClass",
        "classes",
        "reflow",
        "removeClass",
        "dispatchEvent",
        "openDialogs",
        "openDialogs",
        "ensureNoOverflow",
        "alertify",
        "destruct",
        "initialize",
        "destruct",
        "initialize",
        "instance",
        "instance",
        "instance",
        "alertify",
        "alertify",
        "element",
        "updatePosition",
        "instance",
        "element",
        "element",
        "instance",
        "instance",
        "openInstances",
        "instance",
        "instance",
        "openInstances",
        "openInstances",
        "instance",
        "instance",
        "instance",
        "element",
        "classes",
        "instance",
        "addClass",
        "element",
        "classes",
        "classes",
        "addClass",
        "element",
        "classes",
        "classes",
        "addClass",
        "element",
        "classes",
        "classes",
        "addClass",
        "element",
        "classes",
        "classes",
        "addClass",
        "element",
        "classes",
        "classes",
        "addClass",
        "element",
        "classes",
        "classes",
        "div",
        "callback",
        "instance",
        "instance",
        "instance",
        "instance",
        "off",
        "instance",
        "transition",
        "transitionDone",
        "element",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "clickDelegate",
        "instance",
        "instance",
        "transitionDone",
        "instance",
        "instance",
        "clearTimeout",
        "instance",
        "clearTimeout",
        "instance",
        "initialize",
        "div",
        "_content",
        "_wait",
        "pushInstance",
        "clearTimers",
        "arguments",
        "wait",
        "_content",
        "wait",
        "_content",
        "content",
        "_content",
        "wait",
        "content",
        "_content",
        "wait",
        "_wait",
        "alertify",
        "content",
        "content",
        "notifier",
        "element",
        "element",
        "element",
        "reflow",
        "addClass",
        "classes",
        "on",
        "wait",
        "callback",
        "clicked",
        "clearTimers",
        "off",
        "element",
        "setTimeout",
        "transition",
        "removeClass",
        "classes",
        "clicked",
        "popInstance",
        "wait",
        "clearTimers",
        "wait",
        "isNaN",
        "wait",
        "wait",
        "notifier",
        "setTimeout",
        "content",
        "content",
        "clearContents",
        "content",
        "content",
        "content",
        "clearContents",
        "content",
        "addClass",
        "close",
        "classes",
        "close",
        "close",
        "notifier",
        "key",
        "value",
        "initialize",
        "value",
        "key",
        "key",
        "value",
        "updatePosition",
        "value",
        "key",
        "value",
        "key",
        "value",
        "key",
        "key",
        "callback",
        "initialize",
        "div",
        "classes",
        "create",
        "div",
        "callback",
        "openInstances",
        "x",
        "clone",
        "x",
        "clone",
        "x",
        "instance",
        "instance",
        "sub",
        "prop",
        "prop",
        "sub",
        "prop",
        "prop",
        "sub",
        "name",
        "dialogs",
        "name",
        "dialog",
        "dialog",
        "dialog",
        "dialog",
        "dialog",
        "name",
        "Factory",
        "Factory",
        "definition",
        "extend",
        "dialogs",
        "Factory",
        "definition",
        "extend",
        "definition",
        "dialog",
        "dialogs",
        "name",
        "definition",
        "defaults",
        "name",
        "Factory",
        "Factory",
        "get_dialog",
        "name",
        "name",
        "register",
        "name",
        "Factory",
        "name",
        "arguments",
        "definition",
        "extend",
        "definition",
        "dialog",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "instance",
        "arguments",
        "instance",
        "instance",
        "name",
        "definition",
        "definition",
        "definition",
        "definition",
        "arguments",
        "definition",
        "definition",
        "dialog",
        "definition",
        "arguments",
        "dialog",
        "definition",
        "openDialogs",
        "x",
        "clone",
        "x",
        "clone",
        "x",
        "instance",
        "instance",
        "name",
        "key",
        "value",
        "name",
        "notifier",
        "key",
        "value",
        "get_dialog",
        "name",
        "dialog",
        "dialog",
        "key",
        "value",
        "name",
        "key",
        "value",
        "name",
        "key",
        "value",
        "name",
        "key",
        "name",
        "key",
        "message",
        "wait",
        "callback",
        "notifier",
        "callback",
        "message",
        "wait",
        "message",
        "wait",
        "callback",
        "notifier",
        "callback",
        "message",
        "wait",
        "message",
        "wait",
        "callback",
        "notifier",
        "callback",
        "message",
        "wait",
        "message",
        "wait",
        "callback",
        "notifier",
        "callback",
        "message",
        "wait",
        "message",
        "wait",
        "callback",
        "notifier",
        "callback",
        "message",
        "wait",
        "notifier",
        "Alertify",
        "alertify",
        "_title",
        "_message",
        "_onok",
        "arguments",
        "message",
        "_title",
        "_message",
        "message",
        "_title",
        "onok",
        "_message",
        "title",
        "_title",
        "message",
        "_message",
        "title",
        "_title",
        "message",
        "_message",
        "onok",
        "_onok",
        "title",
        "message",
        "onok",
        "alertify",
        "keys",
        "alertify",
        "message",
        "message",
        "key",
        "oldValue",
        "newValue",
        "key",
        "newValue",
        "newValue",
        "closeEvent",
        "closeEvent",
        "returnValue",
        "closeEvent",
        "returnValue",
        "alertify",
        "autoConfirm",
        "autoConfirm",
        "autoConfirm",
        "autoConfirm",
        "autoConfirm",
        "clearAutoConfirm",
        "autoConfirm",
        "createCloseEvent",
        "autoConfirm",
        "button",
        "closeEvent",
        "closeEvent",
        "clearAutoConfirm",
        "autoConfirm",
        "clearInterval",
        "autoConfirm",
        "autoConfirm",
        "autoConfirm",
        "autoConfirm",
        "index",
        "duration",
        "clearAutoConfirm",
        "autoConfirm",
        "duration",
        "autoConfirm",
        "index",
        "autoConfirm",
        "index",
        "autoConfirm",
        "setInterval",
        "autoConfirm",
        "autoConfirm",
        "_title",
        "_message",
        "_onok",
        "_oncancel",
        "arguments",
        "message",
        "_title",
        "message",
        "_title",
        "onok",
        "_message",
        "message",
        "_title",
        "onok",
        "_message",
        "oncancel",
        "_onok",
        "title",
        "_title",
        "message",
        "_message",
        "onok",
        "_onok",
        "oncancel",
        "_oncancel",
        "title",
        "message",
        "onok",
        "oncancel",
        "alertify",
        "keys",
        "alertify",
        "alertify",
        "keys",
        "alertify",
        "message",
        "message",
        "key",
        "oldValue",
        "newValue",
        "key",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "closeEvent",
        "clearAutoConfirm",
        "closeEvent",
        "returnValue",
        "closeEvent",
        "returnValue",
        "closeEvent",
        "returnValue",
        "returnValue",
        "closeEvent",
        "returnValue",
        "closeEvent",
        "returnValue",
        "duration",
        "startAutoConfirm",
        "duration",
        "duration",
        "startAutoConfirm",
        "duration",
        "alertify",
        "_title",
        "_message",
        "_value",
        "_onok",
        "_oncancel",
        "arguments",
        "message",
        "_title",
        "message",
        "_title",
        "value",
        "_message",
        "message",
        "_title",
        "value",
        "_message",
        "onok",
        "_value",
        "message",
        "_title",
        "value",
        "_message",
        "onok",
        "_value",
        "oncancel",
        "_onok",
        "title",
        "_title",
        "message",
        "_message",
        "value",
        "_value",
        "onok",
        "_onok",
        "oncancel",
        "_oncancel",
        "title",
        "message",
        "value",
        "onok",
        "oncancel",
        "alertify",
        "keys",
        "alertify",
        "alertify",
        "keys",
        "alertify",
        "input",
        "input",
        "alertify",
        "input",
        "input",
        "p",
        "input",
        "message",
        "message",
        "clearContents",
        "p",
        "p",
        "message",
        "message",
        "p",
        "message",
        "clearContents",
        "p",
        "p",
        "message",
        "key",
        "oldValue",
        "newValue",
        "key",
        "newValue",
        "input",
        "newValue",
        "newValue",
        "input",
        "newValue",
        "input",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "newValue",
        "closeEvent",
        "closeEvent",
        "input",
        "returnValue",
        "closeEvent",
        "returnValue",
        "closeEvent",
        "returnValue",
        "returnValue",
        "closeEvent",
        "returnValue",
        "closeEvent",
        "returnValue",
        "closeEvent",
        "input",
        "alertify",
        "define",
        "define",
        "define",
        "alertify",
        "alertify"
    ],
    "literals": [
        "'use strict'",
        "'pulse'",
        "'bottom-right'",
        "'PayPulse'",
        "'OK'",
        "'Cancel'",
        "'Accept'",
        "'Deny'",
        "'Confirm'",
        "'Decline'",
        "'Close'",
        "'Maximize'",
        "'Restore'",
        "'ajs-input'",
        "'ajs-ok'",
        "'ajs-cancel'",
        "' '",
        "' '",
        "' '",
        "' '",
        "'rtl'",
        "'object'",
        "'on'",
        "'on'",
        "'animation'",
        "'animationend'",
        "'OAnimation'",
        "'oAnimationEnd oanimationend'",
        "'msAnimation'",
        "'MSAnimationEnd'",
        "'MozAnimation'",
        "'animationend'",
        "'WebkitAnimation'",
        "'webkitAnimationEnd'",
        "'function'",
        "'Safari'",
        "'Chrome'",
        "'<div class=\"ajs-dimmer\"></div>'",
        "'<div class=\"ajs-modal\" tabindex=\"0\"></div>'",
        "'<div class=\"ajs-dialog\" tabindex=\"0\"></div>'",
        "'<button class=\"ajs-reset\"></button>'",
        "'<div class=\"ajs-commands\"><button class=\"ajs-pin\"></button><button class=\"ajs-maximize\"></button><button class=\"ajs-close\"></button></div>'",
        "'<div class=\"ajs-header\"></div>'",
        "'<div class=\"ajs-body\"></div>'",
        "'<div class=\"ajs-content\"></div>'",
        "'<div class=\"ajs-footer\"></div>'",
        "'<div class=\"ajs-primary ajs-buttons\"></div>'",
        "'<div class=\"ajs-auxiliary ajs-buttons\"></div>'",
        "'<button class=\"ajs-button\"></button>'",
        "'<div class=\"ajs-handle\"></div>'",
        "'ajs-in'",
        "'ajs-out'",
        "'alertify'",
        "'ajs-basic'",
        "'ajs-capture'",
        "'ajs-closable'",
        "'ajs-fixed'",
        "'ajs-frameless'",
        "'ajs-hidden'",
        "'ajs-maximize'",
        "'ajs-maximized'",
        "'ajs-maximizable'",
        "'ajs-modeless'",
        "'ajs-movable'",
        "'ajs-no-selection'",
        "'ajs-no-overflow'",
        "'ajs-no-padding'",
        "'ajs-pin'",
        "'ajs-pinnable'",
        "'ajs-'",
        "'ajs-resizable'",
        "'ajs-restore'",
        "'ajs-shake'",
        "'ajs-unpinned'",
        "'tabindex'",
        "'0'",
        "'function'",
        "'object'",
        "'div'",
        "' '",
        "' '",
        "'string'",
        "''",
        "'className'",
        "'auxiliary'",
        "'title'",
        "'function'",
        "''",
        "'px'",
        "'string'",
        "'modal'",
        "'basic'",
        "'frameless'",
        "'title'",
        "'modal'",
        "'basic'",
        "'frameless'",
        "'pinned'",
        "'closable'",
        "'maximizable'",
        "'pinnable'",
        "'movable'",
        "'resizable'",
        "'transition'",
        "'padding'",
        "'overflow'",
        "'transition'",
        "'function'",
        "'undefined'",
        "'string'",
        "'get'",
        "'set'",
        "'object'",
        "'key'",
        "'value'",
        "'found'",
        "'key'",
        "'value'",
        "'found'",
        "'string'",
        "'key'",
        "'value'",
        "'found'",
        "'key'",
        "'value'",
        "'found'",
        "'args must be a string or object'",
        "'pinned'",
        "'pinned'",
        "'onmaximize'",
        "'onmaximized'",
        "'onrestore'",
        "'onrestored'",
        "'pinnable'",
        "'px'",
        "'px'",
        "'px'",
        "''",
        "''",
        "''",
        "''",
        "'px'",
        "''",
        "'px'",
        "'modal'",
        "'pinned'",
        "'pinned'",
        "'maximizable'",
        "'closable'",
        "'closableByDimmer'",
        "'function'",
        "'closable'",
        "'number'",
        "'basic'",
        "'string'",
        "'function'",
        "'undefined'",
        "'maximizable'",
        "'closable'",
        "'number'",
        "'onfocus'",
        "'startMaximized'",
        "'function'",
        "'pageX'",
        "'pageY'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'movable'",
        "'touchstart'",
        "'clientX'",
        "'clientY'",
        "'moveBounded'",
        "'onmove'",
        "'touchmove'",
        "'onmoved'",
        "''",
        "'movable'",
        "'px'",
        "'px'",
        "'px'",
        "'px'",
        "'touchstart'",
        "'onresize'",
        "'px'",
        "'px'",
        "'px'",
        "'none'",
        "'px'",
        "'none'",
        "'touchmove'",
        "'modal'",
        "'pinned'",
        "'onresized'",
        "'none'",
        "''",
        "'resizable'",
        "'autoReset'",
        "'resize'",
        "'keyup'",
        "'keydown'",
        "'focus'",
        "'mousemove'",
        "'touchmove'",
        "'mouseup'",
        "'touchend'",
        "'mousemove'",
        "'touchmove'",
        "'mouseup'",
        "'touchend'",
        "'click'",
        "'click'",
        "'focus'",
        "'focus'",
        "'modal'",
        "'resizable'",
        "'movable'",
        "'resize'",
        "'keyup'",
        "'keydown'",
        "'focus'",
        "'mousemove'",
        "'mouseup'",
        "'mousemove'",
        "'mouseup'",
        "'click'",
        "'click'",
        "'focus'",
        "'focus'",
        "'modal'",
        "'movable'",
        "'resizable'",
        "'focus'",
        "'focus'",
        "'mousedown'",
        "'touchstart'",
        "'mousedown'",
        "'touchstart'",
        "'mousedown'",
        "'touchstart'",
        "'mousedown'",
        "'touchstart'",
        "'click'",
        "'click'",
        "'onmove'",
        "'px'",
        "'px'",
        "'onmoved'",
        "'resizable'",
        "'onresize'",
        "''",
        "''",
        "'none'",
        "'px'",
        "'none'",
        "'px'",
        "'px'",
        "'px'",
        "'onresized'",
        "'get'",
        "'undefined'",
        "'set'",
        "'undefined'",
        "'string'",
        "'string'",
        "'function'",
        "'modal'",
        "'string'",
        "''",
        "'startMaximized'",
        "'none'",
        "'block'",
        "'function'",
        "'onshow'",
        "'onclosing'",
        "'undefined'",
        "''",
        "'function'",
        "'onclose'",
        "'alertify-notifier'",
        "'ajs-message'",
        "'ajs-top'",
        "'ajs-right'",
        "'ajs-bottom'",
        "'ajs-left'",
        "'ajs-center'",
        "'ajs-visible'",
        "'ajs-hidden'",
        "'ajs-close'",
        "'DIV'",
        "'top-right'",
        "' '",
        "'top-left'",
        "' '",
        "'top-center'",
        "' '",
        "'bottom-left'",
        "' '",
        "'bottom-center'",
        "' '",
        "'bottom-right'",
        "' '",
        "'data-close'",
        "'true'",
        "'number'",
        "'undefined'",
        "'top'",
        "'click'",
        "'function'",
        "'click'",
        "'undefined'",
        "'function'",
        "'undefined'",
        "'string'",
        "'span'",
        "'data-close'",
        "'undefined'",
        "'position'",
        "'delay'",
        "'div'",
        "'string'",
        "''",
        "' ajs-'",
        "''",
        "'function'",
        "'function'",
        "'alertify.dialog: name already exists'",
        "'function'",
        "'main'",
        "'show'",
        "'function'",
        "'main'",
        "'show'",
        "'notifier'",
        "'success'",
        "'error'",
        "'warning'",
        "'alert'",
        "'function'",
        "'title'",
        "'message'",
        "'onok'",
        "'message'",
        "'label'",
        "'onok'",
        "'function'",
        "'onok'",
        "'undefined'",
        "'confirm'",
        "' (&#8207;'",
        "'&#8207;) '",
        "'function'",
        "'title'",
        "'message'",
        "'onok'",
        "'oncancel'",
        "'message'",
        "'labels'",
        "'ok'",
        "'cancel'",
        "'reverseButtons'",
        "'defaultFocus'",
        "'ok'",
        "'onok'",
        "'function'",
        "'onok'",
        "'undefined'",
        "'oncancel'",
        "'function'",
        "'oncancel'",
        "'undefined'",
        "'prompt'",
        "'INPUT'",
        "'P'",
        "'title'",
        "'message'",
        "'value'",
        "'onok'",
        "'oncancel'",
        "'type'",
        "'text'",
        "'value'",
        "'string'",
        "''",
        "'text'",
        "'message'",
        "'value'",
        "'type'",
        "'text'",
        "'color'",
        "'date'",
        "'datetime-local'",
        "'email'",
        "'month'",
        "'number'",
        "'password'",
        "'search'",
        "'tel'",
        "'time'",
        "'week'",
        "'text'",
        "'labels'",
        "'reverseButtons'",
        "'onok'",
        "'function'",
        "'onok'",
        "'undefined'",
        "'oncancel'",
        "'function'",
        "'oncancel'",
        "'undefined'",
        "'object'",
        "'object'",
        "'function'",
        "'undefined'"
    ],
    "variables": [
        "keys",
        "defaults",
        "openDialogs",
        "original",
        "toBeRemoved",
        "x",
        "index",
        "cpy",
        "x",
        "root",
        "on",
        "off",
        "transition",
        "t",
        "supported",
        "transitions",
        "args",
        "x",
        "dialog",
        "usedKeys",
        "reflow",
        "isSafari",
        "templates",
        "classes",
        "setup",
        "buttonsDefinition",
        "b",
        "cpy",
        "elements",
        "x",
        "button",
        "scrollX",
        "scrollY",
        "requiresNoOverflow",
        "x",
        "instance",
        "top",
        "topScroll",
        "index",
        "x",
        "result",
        "old",
        "args",
        "key",
        "found",
        "target",
        "scrollLeft",
        "marginTop",
        "marginLeft",
        "top",
        "left",
        "cancelClick",
        "target",
        "cancelKeyup",
        "idx",
        "button",
        "closeEvent",
        "target",
        "instance",
        "keyCode",
        "instance",
        "keyCode",
        "buttons",
        "x",
        "focus",
        "element",
        "x",
        "resetTarget",
        "target",
        "lastResetElement",
        "movable",
        "offsetX",
        "offsetY",
        "xProp",
        "yProp",
        "bounds",
        "refreshTop",
        "moveDelegate",
        "left",
        "top",
        "left",
        "top",
        "eventSrc",
        "left",
        "top",
        "element",
        "current",
        "element",
        "offsetLeft",
        "offsetTop",
        "eventSrc",
        "instance",
        "movable",
        "element",
        "resizable",
        "startingLeft",
        "startingWidth",
        "minWidth",
        "handleOffset",
        "current",
        "element",
        "offsetLeft",
        "offsetTop",
        "X",
        "Y",
        "isRTL",
        "diff",
        "eventSrc",
        "element",
        "eventSrc",
        "instance",
        "resizable",
        "element",
        "x",
        "instance",
        "element",
        "current",
        "element",
        "offsetLeft",
        "offsetTop",
        "left",
        "top",
        "w",
        "h",
        "regex",
        "element",
        "result",
        "callback",
        "x",
        "item",
        "root",
        "notifier",
        "reflow",
        "element",
        "openInstances",
        "classes",
        "content",
        "wait",
        "close",
        "div",
        "clone",
        "x",
        "instance",
        "dialogs",
        "dialog",
        "definition",
        "definition",
        "instance",
        "dialog",
        "clone",
        "x",
        "instance",
        "dialog",
        "alertify",
        "title",
        "message",
        "onok",
        "returnValue",
        "autoConfirm",
        "button",
        "closeEvent",
        "title",
        "message",
        "onok",
        "oncancel",
        "returnValue",
        "input",
        "p",
        "title",
        "message",
        "value",
        "onok",
        "oncancel",
        "returnValue"
    ],
    "comments": [
        "global default not per instance, applies to all dialogs",
        "global default not per instance, applies to all dialogs",
        "holds open dialogs instances",
        "copy dialog pototype over definition.",
        "delete the dom and it's references.",
        "copy back initial settings.",
        "re-reference init function.",
        "delete __internal variable to allow re-initialization.",
        "holds the list of used keys.",
        "dummy variable, used to trigger dom reflow.",
        "condition for detecting safari",
        "dialog building blocks",
        "tab index required to fire click event before body focus",
        "common class names",
        "no need to expose init after this.",
        "keep a copy of initial dialog settings",
        "in case the script was included before body.",
        "after first dialog gets initialized, it won't be null anymore!",
        "set tabindex attribute on body element this allows script to give it",
        "focus after the dialog is closed",
        "get dialog buttons/focus setup",
        "initialize hooks object.",
        "copy buttons defintion",
        "root node",
        "dimmer",
        "dialog",
        "reset links",
        "commands",
        "header",
        "body",
        "footer",
        "resize handle",
        "buttons",
        "remove button template",
        "add to the list of used keys.",
        "make elements pubic",
        "save event handlers delegates",
        "settings",
        "if found in user options",
        "else if found in defaults options",
        "else if title key, use alertify.defaults.glossary",
        "allow dom customization",
        "add to the end of the DOM tree.",
        "last open modal or last maximized one",
        "first open modal or first maximized one",
        "&& openDialogs[openDialogs.length-1].elements.dialog.clientHeight <= document.documentElement.clientHeight){",
        "make modal",
        "only if open",
        "in case a pinned modless dialog was made modal while open.",
        "make modelss",
        "only if open",
        "in case pin/unpin was called while a modal is open",
        "add class",
        "remove class",
        "add class",
        "remove class",
        "Do not bring to front if preceeded by an open modal",
        "Bring to front by making it the last child.",
        "also make sure its at the end of the list",
        "internal on option updated event",
        "get",
        "set",
        "set multiple",
        "set single",
        "invalid params",
        "none of the buttons registered as onclose callback",
        "close the dialog",
        "pin the dialog",
        "unpin the dialog",
        "allow custom `onmaximize` method",
        "maximize the dialog",
        "allow custom `onmaximized` method",
        "allow custom `onrestore` method",
        "maximize the dialog",
        "allow custom `onrestored` method",
        "add class",
        "remove class",
        "if modeless and unpinned add fix",
        "add class",
        "remove class",
        "add class",
        "remove class",
        "flag to cancel click event if already handled by end resize event (the mousedown, mousemove, mouseup sequence fires a click event.).",
        "flag to cancel keyup event if already handled by click event (pressing Enter on a focusted button).",
        "close the dialog only if not canceled.",
        "if this button caused the click, cancel keyup event",
        "hitting enter while button has focus will trigger keyup too.",
        "ignore if handled by clickHandler",
        "reset target has already been determined.",
        "current instance focus settings",
        "the focus element.",
        "a number means a button index",
        "in basic view, skip focusing the buttons.",
        "a string means querySelector to select from dialog body contents.",
        "a function should return the focus element.",
        "if no focus element, default to first reset element.",
        "focus",
        "if selectable",
        "should work on last modal if triggered from document.body",
        "if modal",
        "determine reset target to enable forward/backward tab cycle.",
        "if last reset link, then go to maximize or close",
        "if no reset target found, try finding the best button",
        "button focus element, go to first available button",
        "restart the cycle by going to first reset link",
        "will reach here when tapping backwards, so go to last child",
        "The focus element SHOULD NOT be a button (logically!).",
        "focus",
        "clear the timer",
        "once transition is complete, set focus",
        "restore scroll to prevent document jump",
        "allow handling key up after transition ended.",
        "allow custom `onfocus` method",
        "unbind the event",
        "clear the timer",
        "unbind the event",
        "reset move updates",
        "reset resize updates",
        "restore if maximized",
        "return focus to the last active element",
        "destory the instance",
        "Controls moving a dialog around",
        "holde the current moving instance",
        "holds the current X offset when move starts",
        "holds the current Y offset when move starts",
        "calc offset",
        "allow custom `onmove` method",
        "allow custom `onmoved` method",
        "add class",
        "reset",
        "remove class",
        "Controls moving a dialog around",
        "holde the current instance being resized",
        "holds the staring left offset when resize starts.",
        "holds the staring width when resize starts.",
        "holds the initial width when resized for the first time.",
        "holds the offset of the resize handle.",
        "calculate offsets from 0,0",
        "determine X,Y coordinates.",
        "rtl handling",
        "reverse X",
        "if has a starting left, calculate offsetRight",
        "set width/height",
        "if the element being resized has a starting left, maintain it.",
        "the dialog is centered, divide by half the offset to maintain the margins.",
        "negate the diff, why?",
        "when growing it should decrease left",
        "when shrinking it should increase left",
        "growing",
        "shrinking",
        "allow custom `onresize` method",
        "allow custom `onresized` method",
        "clear inline styles.",
        "reset variables.",
        "add class",
        "reset",
        "remove class",
        "event",
        "if first dialog, hook global handlers",
        "global",
        "move",
        "resize",
        "common events",
        "prevent handling key up when dialog is being opened by a key stroke.",
        "hook in transition handler",
        "modelss only events",
        "resizable",
        "movable",
        "if last dialog, remove global handlers",
        "global",
        "move",
        "resize",
        "common events",
        "hook out transition handler",
        "modelss only events",
        "movable",
        "resizable",
        "dialog API",
        "allow custom `onmove` method",
        "subtract existing left,top",
        "calc offset",
        "calc left, top",
        "rtl handling",
        "allow custom `onmoved` method",
        "allow custom `onresize` method",
        "allow custom `onresized` method",
        "ensure initialization",
        "add to open dialogs",
        "save last focused element",
        "allow custom dom manipulation updates before showing the dialog.",
        "save scroll to prevent document jump",
        "allow custom dialog class on show",
        "maximize if start maximized",
        "set 1s fallback in case transition event doesn't fire",
        "force desktop safari reflow",
        "reflow",
        "show dialog",
        "internal on show event",
        "allow custom `onshow` method",
        "reset move updates",
        "reset resize updates",
        "shake the dialog to indicate its already open",
        "custom `onclosing` event",
        "set 1s fallback in case transition event doesn't fire",
        "hide dialog",
        "reflow",
        "remove custom dialog class on hide",
        "internal on close event",
        "allow custom `onclose` method",
        "remove from open dialogs",
        "mark dialog for destruction, this will be called on tranistionOut event.",
        "close the dialog to unbind all events.",
        "add to DOM tree.",
        "unbind event",
        "remove the message",
        "notification DOM element",
        "set contents",
        "append or insert",
        "attach click event",
        "detach click event",
        "ensure element exists",
        "transition end or fallback",
        "custom callback on dismiss",
        "notifier api",
        "ensure init",
        "get",
        "set",
        "ensure notifier init",
        "create new notification message",
        "holds a references of created dialogs",
        "copy dialog pototype over definition.",
        "initialize the dialog if its not already initialized.",
        "if this is based on an existing dialog, create a new definition",
        "by applying the new protoype over the existing one.",
        "create a new definition based on dialog",
        "get request, create a new instance and return it.",
        "register the dialog",
        "make it public",
        "if passed with no params, consider it a get request",
        "ensure init",
        "make it public",
        "ensure init",
        "if passed with no params, consider it a get request",
        "nothing",
        "nothing",
        "close the dialog.",
        "nothing",
        "nothing",
        "nothing",
        "CommonJS",
        "AMD",
        "window"
    ],
    "docstrings": [
        "* alertifyjs 1.11.0 http://alertifyjs.com\n * AlertifyJS is a javascript framework for developing pretty browser dialogs and notifications.\n * Copyright 2017 Mohammad Younes <Mohammad@alertifyjs.com> (http://alertifyjs.com)\n * Licensed under GPL 3 <https://opensource.org/licenses/gpl-3.0>",
        "* Keys enum\n     * @type {Object}",
        "* Default options\n     * @type {Object}",
        "* [Helper]  Adds the specified class(es) to the element.\n     *\n     * @element {node}      The element\n     * @className {string}  One or more space-separated classes to be added to the class attribute of the element.\n     *\n     * @return {undefined}",
        "* [Helper]  Removes the specified class(es) from the element.\n     *\n     * @element {node}      The element\n     * @className {string}  One or more space-separated classes to be removed from the class attribute of the element.\n     *\n     * @return {undefined}",
        "* [Helper]  Checks if the document is RTL\n     *\n     * @return {Boolean} True if the document is RTL, false otherwise.",
        "* [Helper]  Get the document current scrollTop\n     *\n     * @return {Number} current document scrollTop value",
        "* [Helper]  Get the document current scrollLeft\n     *\n     * @return {Number} current document scrollLeft value",
        "* Helper: clear contents\n    *",
        "* Extends a given prototype by merging properties from base into sub.\n     *\n     * @sub {Object} sub The prototype being overwritten.\n     * @base {Object} base The prototype being written.\n     *\n     * @return {Object} The extended prototype.",
        "* Helper: destruct the dialog\n      *",
        "* Use a closure to return proper event listener method. Try to use\n     * `addEventListener` by default but fallback to `attachEvent` for\n     * unsupported browser. The closure simply ensures that the test doesn't\n     * happen every time the method is called.\n     *\n     * @param    {Node}     el    Node element\n     * @param    {String}   event Event type\n     * @param    {Function} fn    Callback of event\n     * @return   {Function}",
        "* Use a closure to return proper event listener method. Try to use\n     * `removeEventListener` by default but fallback to `detachEvent` for\n     * unsupported browser. The closure simply ensures that the test doesn't\n     * happen every time the method is called.\n     *\n     * @param    {Node}     el    Node element\n     * @param    {String}   event Event type\n     * @param    {Function} fn    Callback of event\n     * @return   {Function}",
        "* Prevent default event from firing\n     *\n     * @param  {Event} event Event object\n     * @return {undefined}\n\n    function prevent ( event ) {\n        if ( event ) {\n            if ( event.preventDefault ) {\n                event.preventDefault();\n            } else {\n                event.returnValue = false;\n            }\n        }\n    }",
        "* Creates event handler delegate that sends the instance as last argument.\n    *\n    * @return {Function}    a function wrapper which sends the instance as last argument.",
        "* Helper for creating a dialog close event.\n    *\n    * @return {object}",
        "* Helper for dispatching events.\n    *\n    * @param  {string} evenType The type of the event to disptach.\n    * @param  {object} instance The dialog instance disptaching the event.\n    *\n    * @return   {any}   The result of the invoked function.",
        "* Super class for all dialogs\n     *\n     * @return {Object}\t\tbase dialog prototype",
        "* Helper: initializes the dialog instance\n         *\n         * @return\t{Number}\tThe total count of currently open modals.",
        "* Flag holding the open state of the dialog\n                     *\n                     * @type {Boolean}",
        "* Active element is the element that will receive focus after\n                     * closing the dialog. It defaults as the body tag, but gets updated\n                     * to the last focused element before the dialog was opened.\n                     *\n                     * @type {Node}",
        "* Helper: maintains scroll position\n         *",
        "* Helper: adds/removes no-overflow class from body\n         *",
        "* Helper: prevents body shift.\n         *",
        "* Sets the name of the transition used to show/hide the dialog\n         *\n         * @param {Object} instance The dilog instance.\n         *",
        "* Toggles the dialog display mode\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Toggles the dialog basic view mode\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Toggles the dialog frameless view mode\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Helper: Brings the modeless dialog to front, attached to modeless dialogs.\n         *\n         * @param {Event} event Focus event\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Helper: reflects dialogs options updates\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {String} option The updated option name.\n         *\n         * @return\t{undefined}",
        "* Helper: reflects dialogs options updates\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Object} obj The object to set/get a value on/from.\n         * @param {Function} callback The callback function to call if the key was found.\n         * @param {String|Object} key A string specifying a propery name or a collection of key value pairs.\n         * @param {Object} value Optional, the value associated with the key (in case it was a string).\n         * @param {String} option The updated option name.\n         *\n         * @return\t{Object} result object\n         *\tThe result objects has an 'op' property, indicating of this is a SET or GET operation.\n         *\t\tGET:\n         *\t\t- found: a flag indicating if the key was found or not.\n         *\t\t- value: the property value.\n         *\t\tSET:\n         *\t\t- items: a list of key value pairs of the properties being set.\n         *\t\t\t\teach contains:\n         *\t\t\t\t\t- found: a flag indicating if the key was found or not.\n         *\t\t\t\t\t- key: the property key.\n         *\t\t\t\t\t- value: the property value.",
        "* Triggers a close event.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Dialogs commands event handler, attached to the dialog commands element.\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Helper: pins the modeless dialog.\n         *\n         * @param {Object} instance\tThe dialog instance.\n         *\n         * @return {undefined}",
        "* Helper: unpins the modeless dialog.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Helper: enlarges the dialog to fill the entire screen.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Helper: returns the dialog to its former size.\n         *\n         * @param {Object} instance\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Show or hide the maximize box.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}",
        "* Helper: Fixes the absolutly positioned modal div position.\n         *\n         * @param {Object} instance The dialog instance.\n         *\n         * @return {undefined}",
        "* Helper: Removes the absolutly positioned modal div position fix.\n         *\n         * @param {Object} instance The dialog instance.\n         *\n         * @return {undefined}",
        "* Helper: Adds/Removes the absolutly positioned modal div position fix based on its pinned setting.\n         *\n         * @param {Object} instance The dialog instance.\n         *\n         * @return {undefined}",
        "* Toggles the dialog position lock | modeless only.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to make it modal, false otherwise.\n         *\n         * @return {undefined}",
        "* Show or hide the maximize box.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}",
        "* Show or hide the close box.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}",
        "* Helper: closes the modal dialog when clicking the modal\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Helper: triggers a button callback\n         *\n         * @param {Object}\t\tThe dilog instance.\n         * @param {Function}\tCallback to check which button triggered the event.\n         *\n         * @return {undefined}",
        "* Clicks event handler, attached to the dialog footer.\n         *\n         * @param {Event}\t\tDOM event object.\n         * @param {Object}\t\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Keyup event handler, attached to the document.body\n         *\n         * @param {Event}\t\tDOM event object.\n         * @param {Object}\t\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Keydown event handler, attached to the document.body\n        *\n        * @param {Event}\t\tDOM event object.\n        * @param {Object}\t\tThe dilog instance.\n        *\n        * @return {undefined}",
        "* Sets focus to proper dialog element\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Node} [resetTarget=undefined] DOM element to reset focus to.\n         *\n         * @return {undefined}",
        "* Focus event handler, attached to document.body and dialogs own reset links.\n         * handles the focus for modal dialogs only.\n         *\n         * @param {Event} event DOM focus event object.\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Transition in transitionend event handler.\n         *\n         * @param {Event}\t\tTransitionEnd event object.\n         * @param {Object}\t\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Transition out transitionend event handler.\n         *\n         * @param {Event}\t\tTransitionEnd event object.\n         * @param {Object}\t\tThe dilog instance.\n         *\n         * @return {undefined}",
        "* Helper: sets the element top/left coordinates\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Node} element The element being moved.\n         *\n         * @return {undefined}",
        "* Helper: sets the element top/left coordinates within screen bounds\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Node} element The element being moved.\n         *\n         * @return {undefined}",
        "* Triggers the start of a move event, attached to the header element mouse down event.\n         * Adds no-selection class to the body, disabling selection while moving.\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {Boolean} false",
        "* The actual move handler,  attached to document.body mousemove event.\n         *\n         * @param {Event} event\tDOM event object.\n         *\n         * @return {undefined}",
        "* Triggers the end of a move event,  attached to document.body mouseup event.\n         * Removes no-selection class from document.body, allowing selection.\n         *\n         * @return {undefined}",
        "* Resets any changes made by moving the element to its original state,\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Updates the dialog move behavior.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}",
        "* Helper: sets the element width/height and updates left coordinate if neccessary.\n         *\n         * @param {Event} event\tDOM mousemove event object.\n         * @param {Node} element The element being moved.\n         * @param {Boolean} pinned A flag indicating if the element being resized is pinned to the screen.\n         *\n         * @return {undefined}",
        "* Triggers the start of a resize event, attached to the resize handle element mouse down event.\n         * Adds no-selection class to the body, disabling selection while moving.\n         *\n         * @param {Event} event\tDOM event object.\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {Boolean} false",
        "* The actual resize handler,  attached to document.body mousemove event.\n         *\n         * @param {Event} event\tDOM event object.\n         *\n         * @return {undefined}",
        "* Triggers the end of a resize event,  attached to document.body mouseup event.\n         * Removes no-selection class from document.body, allowing selection.\n         *\n         * @return {undefined}",
        "* Resets any changes made by resizing the element to its original state.\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Updates the dialog move behavior.\n         *\n         * @param {Object} instance The dilog instance.\n         * @param {Boolean} on True to add the behavior, removes it otherwise.\n         *\n         * @return {undefined}",
        "* Reset move/resize on window resize.\n         *\n         * @param {Event} event\twindow resize event object.\n         *\n         * @return {undefined}",
        "* Bind dialogs events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Unbind dialogs events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Bind modeless specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Unbind modeless specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Bind movable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Unbind movable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Bind resizable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Unbind resizable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Bind closable events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Unbind closable specific events\n         *\n         * @param {Object} instance The dilog instance.\n         *\n         * @return {undefined}",
        "* Check if dialog is currently open\n             *\n             * @return {Boolean}",
        "* Move the dialog to a specific x/y coordinates\n             *\n             * @param {Number} x    The new dialog x coordinate in pixels.\n             * @param {Number} y    The new dialog y coordinate in pixels.\n             *\n             * @return {Object} The dialog instance.",
        "* Resize the dialog to a specific width/height (the dialog must be 'resizable').\n             * The dialog can be resized to:\n             *  A minimum width equal to the initial display width\n             *  A minimum height equal to the sum of header/footer heights.\n             *\n             *\n             * @param {Number or String} width    The new dialog width in pixels or in percent.\n             * @param {Number or String} height   The new dialog height in pixels or in percent.\n             *\n             * @return {Object} The dialog instance.",
        "* Gets or Sets dialog settings/options\n             *\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\n             * @param {Object} value Optional, the value associated with the key (in case it was a string).\n             *\n             * @return {undefined}",
        "* [Alias] Sets dialog settings/options",
        "* [Alias] Gets dialog settings/options",
        "* Sets dialog header\n            * @content {string or element}\n            *\n            * @return {undefined}",
        "* Sets dialog contents\n            * @content {string or element}\n            *\n            * @return {undefined}",
        "* Show the dialog as modal\n             *\n             * @return {Object} the dialog instance.",
        "* Show the dialog\n             *\n             * @return {Object} the dialog instance.",
        "* Close the dialog\n             *\n             * @return {Object} The dialog instance",
        "* Close all open dialogs except this.\n             *\n             * @return {undefined}",
        "* Destroys this dialog instance\n             *\n             * @return {undefined}",
        "* Helper: initializes the notifier instance\n         *",
        "* Helper: update the notifier instance position\n         *",
        "* creates a new notification message\n        *\n        * @param  {DOMElement} message\tThe notifier message element\n        * @param  {Number} wait   Time (in ms) to wait before the message is dismissed, a value of 0 means keep open till clicked.\n        * @param  {Function} callback A callback function to be invoked when the message is dismissed.\n        *\n        * @return {undefined}",
        "* Pushes a notification message\n                 * @param {string or DOMElement} content The notification message content\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\n                 *",
        "* {Function} callback function to be invoked before dismissing the notification message.\n                 * Remarks: A return value === 'false' will cancel the dismissal\n                 *",
        "* {Function} callback function to be invoked when the message is dismissed.\n                 *",
        "* Dismisses the notification message\n                 * @param {Boolean} clicked A flag indicating if the dismissal was caused by a click.\n                 *",
        "* Delays the notification message dismissal\n                 * @param {Number} wait The time (in seconds) to wait before the message is dismissed, a value of 0 means keep open till clicked.\n                 *",
        "* Sets the notification message contents\n                 * @param {string or DOMElement} content The notification message content\n                 *",
        "* Dismisses all open notifications except this.\n                 *",
        "* Gets or Sets notifier settings.\n             *\n             * @param {string} key The setting name\n             * @param {Variant} value The setting value.\n             *\n             * @return {Object}\tif the called as a setter, return the notifier instance.",
        "* [Alias] Sets dialog settings/options",
        "* [Alias] Gets dialog settings/options",
        "* Creates a new notification message\n             *\n             * @param {string} type The type of notification message (simply a CSS class name 'ajs-{type}' to be added).\n             * @param {Function} callback  A callback function to be invoked when the message is dismissed.\n             *\n             * @return {undefined}",
        "* Dismisses all open notifications.\n             *\n             * @param {Object} excpet [optional] The notification object to exclude from dismissal.\n             *",
        "* Alertify public API\n     * This contains everything that is exposed through the alertify object.\n     *\n     * @return {Object}",
        "* Extends a given prototype by merging properties from base into sub.\n         *\n         * @sub {Object} sub The prototype being overwritten.\n         * @base {Object} base The prototype being written.\n         *\n         * @return {Object} The extended prototype.",
        "* Helper: returns a dialog instance from saved dialogs.\n        * and initializes the dialog if its not already initialized.\n        *\n        * @name {String} name The dialog name.\n        *\n        * @return {Object} The dialog instance.",
        "* Helper:  registers a new dialog definition.\n         *\n         * @name {String} name The dialog name.\n         * @Factory {Function} Factory a function resposible for creating dialog prototype.\n         * @transient {Boolean} transient True to create a new dialog instance each time the dialog is invoked, false otherwise.\n         * @base {String} base the name of another dialog to inherit from.\n         *\n         * @return {Object} The dialog definition.",
        "* Alertify defaults\n             *\n             * @type {Object}",
        "* Dialogs factory\n             *\n             * @param {string}      Dialog name.\n             * @param {Function}    A Dialog factory function.\n             * @param {Boolean}     Indicates whether to create a singleton or transient dialog.\n             * @param {String}      The name of the base type to inherit from.",
        "* Close all open dialogs.\n             *\n             * @param {Object} excpet [optional] The dialog object to exclude from closing.\n             *\n             * @return {undefined}",
        "* Gets or Sets dialog settings/options. if the dialog is transient, this call does nothing.\n             *\n             * @param {string} name The dialog name.\n             * @param {String|Object} key A string specifying a propery name or a collection of key/value pairs.\n             * @param {Variant} value Optional, the value associated with the key (in case it was a string).\n             *\n             * @return {undefined}",
        "* [Alias] Sets dialog settings/options",
        "* [Alias] Gets dialog settings/options",
        "* Creates a new notification message.\n             * If a type is passed, a class name \"ajs-{type}\" will be added.\n             * This allows for custom look and feel for various types of notifications.\n             *\n             * @param  {String | DOMElement}    [message=undefined]\t\tMessage text\n             * @param  {String}                 [type='']\t\t\t\tType of log message\n             * @param  {String}                 [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}               [callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.",
        "* Creates a new notification message.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.",
        "* Creates a new notification message of type 'success'.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.",
        "* Creates a new notification message of type 'error'.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.",
        "* Creates a new notification message of type 'warning'.\n             *\n             * @param  {String}\t\t[message=undefined]\t\tMessage text\n             * @param  {String}     [wait='']\t\t\t\tTime (in seconds) to wait before auto-close\n             * @param  {Function}\t[callback=undefined]\tA callback function to be invoked when the log is closed.\n             *\n             * @return {Object} Notification object.",
        "* Dismisses all open notifications\n             *\n             * @return {undefined}",
        "* Alert dialog definition\n    *\n    * invoked by:\n    *\talertify.alert(message);\n    *\talertify.alert(title, message);\n    *\talertify.alert(message, onok);\n    *\talertify.alert(title, message, onok);",
        "* Confirm dialog object\n     *\n     *\talertify.confirm(message);\n     *\talertify.confirm(message, onok);\n     *\talertify.confirm(message, onok, oncancel);\n     *\talertify.confirm(title, message, onok, oncancel);",
        "* Prompt dialog object\n     *\n     * invoked by:\n     *\talertify.prompt(message);\n     *\talertify.prompt(message, value);\n     *\talertify.prompt(message, value, onok);\n     *\talertify.prompt(message, value, onok, oncancel);\n     *\talertify.prompt(title, message, value, onok, oncancel);"
    ],
    "functions": [
        "addClass",
        "removeClass",
        "isRightToLeft",
        "getScrollTop",
        "getScrollLeft",
        "clearContents",
        "copy",
        "destruct",
        "createCloseEvent",
        "dispatchEvent",
        "initialize",
        "saveScrollPosition",
        "restoreScrollPosition",
        "ensureNoOverflow",
        "preventBodyShift",
        "updateTransition",
        "updateDisplayMode",
        "updateBasicMode",
        "updateFramelessMode",
        "bringToFront",
        "optionUpdated",
        "update",
        "triggerClose",
        "commandsClickHandler",
        "pin",
        "unpin",
        "maximize",
        "restore",
        "updatePinnable",
        "addAbsPositionFix",
        "removeAbsPositionFix",
        "updateAbsPositionFix",
        "updatePinned",
        "updateMaximizable",
        "updateClosable",
        "modalClickHandler",
        "triggerCallback",
        "buttonsClickHandler",
        "keyupHandler",
        "keydownHandler",
        "setFocus",
        "onReset",
        "handleTransitionInEvent",
        "handleTransitionOutEvent",
        "moveElement",
        "moveElementBounded",
        "beginMove",
        "move",
        "endMove",
        "resetMove",
        "updateMovable",
        "resizeElement",
        "beginResize",
        "resize",
        "endResize",
        "resetResize",
        "updateResizable",
        "windowResize",
        "bindEvents",
        "unbindEvents",
        "bindModelessEvents",
        "unbindModelessEvents",
        "bindMovableEvents",
        "unbindMovableEvents",
        "bindResizableEvents",
        "unbindResizableEvents",
        "bindClosableEvents",
        "unbindClosableEvents",
        "initialize",
        "pushInstance",
        "popInstance",
        "updatePosition",
        "create",
        "clickDelegate",
        "transitionDone",
        "initialize",
        "clearTimers",
        "Alertify",
        "extend",
        "get_dialog",
        "register",
        "clearAutoConfirm",
        "startAutoConfirm"
    ],
    "classes": []
}