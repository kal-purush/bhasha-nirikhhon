{
    "identifiers": [
        "webpackUniversalModuleDefinition",
        "root",
        "factory",
        "factory",
        "modules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "moduleId",
        "modules",
        "moduleId",
        "__webpack_require__",
        "__webpack_require__",
        "modules",
        "__webpack_require__",
        "installedModules",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "options",
        "options",
        "extend",
        "Vue",
        "__webpack_require__",
        "Vue",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "Vue",
        "p",
        "newData",
        "newData",
        "newData",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "extend",
        "p",
        "__webpack_require__",
        "_",
        "Vue",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "lang",
        "extend",
        "exports",
        "lang",
        "extend",
        "exports",
        "__webpack_require__",
        "extend",
        "exports",
        "__webpack_require__",
        "extend",
        "exports",
        "__webpack_require__",
        "extend",
        "exports",
        "__webpack_require__",
        "extend",
        "exports",
        "__webpack_require__",
        "exports",
        "exports",
        "c",
        "c",
        "exports",
        "value",
        "value",
        "value",
        "exports",
        "value",
        "value",
        "value",
        "value",
        "isNaN",
        "parsed",
        "value",
        "parsed",
        "exports",
        "value",
        "value",
        "value",
        "value",
        "exports",
        "a",
        "b",
        "a",
        "a",
        "exports",
        "toUpper",
        "_",
        "c",
        "c",
        "c",
        "exports",
        "exports",
        "classifyRE",
        "toUpper",
        "exports",
        "fn",
        "ctx",
        "a",
        "arguments",
        "l",
        "l",
        "fn",
        "ctx",
        "arguments",
        "fn",
        "ctx",
        "a",
        "fn",
        "ctx",
        "exports",
        "start",
        "start",
        "start",
        "start",
        "i",
        "i",
        "ret",
        "i",
        "i",
        "start",
        "ret",
        "exports",
        "to",
        "key",
        "to",
        "key",
        "key",
        "to",
        "exports",
        "obj",
        "obj",
        "obj",
        "exports",
        "obj",
        "toString",
        "obj",
        "exports",
        "exports",
        "obj",
        "key",
        "val",
        "enumerable",
        "obj",
        "key",
        "val",
        "enumerable",
        "exports",
        "func",
        "wait",
        "timestamp",
        "last",
        "wait",
        "last",
        "timeout",
        "setTimeout",
        "later",
        "wait",
        "last",
        "timeout",
        "result",
        "func",
        "context",
        "args",
        "timeout",
        "context",
        "args",
        "context",
        "args",
        "arguments",
        "timestamp",
        "timeout",
        "timeout",
        "setTimeout",
        "later",
        "wait",
        "result",
        "exports",
        "arr",
        "obj",
        "arr",
        "i",
        "l",
        "i",
        "arr",
        "i",
        "obj",
        "i",
        "exports",
        "fn",
        "cb",
        "fn",
        "arguments",
        "cb",
        "cb",
        "cb",
        "exports",
        "a",
        "b",
        "a",
        "b",
        "exports",
        "a",
        "exports",
        "b",
        "a",
        "b",
        "exports",
        "exports",
        "exports",
        "exports",
        "inBrowser",
        "navigator",
        "exports",
        "inBrowser",
        "navigator",
        "inBrowser",
        "exports",
        "exports",
        "isWebkitTrans",
        "exports",
        "isWebkitTrans",
        "exports",
        "isWebkitAnim",
        "exports",
        "isWebkitAnim",
        "exports",
        "pending",
        "callbacks",
        "callbacks",
        "i",
        "copies",
        "i",
        "copies",
        "i",
        "MutationObserver",
        "MutationObserver",
        "nextTickHandler",
        "counter",
        "observer",
        "textNode",
        "timerFunc",
        "counter",
        "counter",
        "textNode",
        "counter",
        "timerFunc",
        "setTimeout",
        "cb",
        "ctx",
        "ctx",
        "cb",
        "ctx",
        "cb",
        "callbacks",
        "func",
        "pending",
        "pending",
        "timerFunc",
        "nextTickHandler",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "el",
        "el",
        "el",
        "el",
        "el",
        "_",
        "selector",
        "el",
        "exports",
        "node",
        "node",
        "node",
        "doc",
        "node",
        "doc",
        "parent",
        "parent",
        "parent",
        "doc",
        "parent",
        "exports",
        "node",
        "attr",
        "attr",
        "config",
        "attr",
        "node",
        "attr",
        "val",
        "node",
        "attr",
        "val",
        "exports",
        "el",
        "target",
        "target",
        "el",
        "target",
        "exports",
        "el",
        "target",
        "target",
        "exports",
        "el",
        "target",
        "target",
        "el",
        "exports",
        "el",
        "el",
        "el",
        "exports",
        "el",
        "target",
        "target",
        "exports",
        "el",
        "target",
        "target",
        "el",
        "exports",
        "target",
        "el",
        "target",
        "parent",
        "parent",
        "el",
        "target",
        "exports",
        "el",
        "cb",
        "el",
        "cb",
        "exports",
        "el",
        "cb",
        "el",
        "cb",
        "exports",
        "el",
        "cls",
        "el",
        "el",
        "cls",
        "el",
        "cur",
        "cls",
        "el",
        "cur",
        "cls",
        "exports",
        "el",
        "cls",
        "el",
        "el",
        "cls",
        "el",
        "cls",
        "cur",
        "tar",
        "cur",
        "cur",
        "tar",
        "el",
        "cur",
        "exports",
        "el",
        "asFragment",
        "exports",
        "el",
        "el",
        "DocumentFragment",
        "el",
        "el",
        "el",
        "exports",
        "el",
        "rawContent",
        "asFragment",
        "child",
        "el",
        "rawContent",
        "child",
        "rawContent",
        "exports",
        "node",
        "trim",
        "node",
        "node",
        "trim",
        "node",
        "node",
        "parent",
        "node",
        "node",
        "node",
        "node",
        "parent",
        "node",
        "exports",
        "el",
        "el",
        "el",
        "exports",
        "content",
        "persist",
        "config",
        "content",
        "persist",
        "exports",
        "delimiters",
        "val",
        "delimiters",
        "val",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "to",
        "key",
        "toVal",
        "to",
        "key",
        "fromVal",
        "key",
        "to",
        "key",
        "to",
        "key",
        "fromVal",
        "_",
        "toVal",
        "_",
        "fromVal",
        "mergeData",
        "toVal",
        "fromVal",
        "to",
        "strats",
        "parentVal",
        "childVal",
        "vm",
        "vm",
        "childVal",
        "parentVal",
        "childVal",
        "_",
        "parentVal",
        "parentVal",
        "childVal",
        "mergedDataFn",
        "mergeData",
        "childVal",
        "parentVal",
        "parentVal",
        "childVal",
        "mergedInstanceDataFn",
        "childVal",
        "childVal",
        "vm",
        "childVal",
        "parentVal",
        "parentVal",
        "vm",
        "instanceData",
        "mergeData",
        "instanceData",
        "defaultData",
        "defaultData",
        "strats",
        "parentVal",
        "childVal",
        "vm",
        "vm",
        "childVal",
        "childVal",
        "_",
        "childVal",
        "parentVal",
        "vm",
        "ret",
        "ret",
        "vm",
        "ret",
        "strats",
        "strats",
        "strats",
        "strats",
        "strats",
        "strats",
        "strats",
        "strats",
        "strats",
        "parentVal",
        "childVal",
        "childVal",
        "parentVal",
        "parentVal",
        "childVal",
        "_",
        "childVal",
        "childVal",
        "childVal",
        "parentVal",
        "strats",
        "_",
        "parentVal",
        "childVal",
        "parentVal",
        "childVal",
        "extend",
        "res",
        "guardArrayAssets",
        "childVal",
        "res",
        "config",
        "strats",
        "mergeAssets",
        "strats",
        "strats",
        "parentVal",
        "childVal",
        "childVal",
        "parentVal",
        "parentVal",
        "childVal",
        "extend",
        "ret",
        "parentVal",
        "key",
        "childVal",
        "ret",
        "key",
        "childVal",
        "key",
        "parent",
        "_",
        "parent",
        "parent",
        "parent",
        "ret",
        "key",
        "parent",
        "parent",
        "child",
        "child",
        "ret",
        "strats",
        "strats",
        "parentVal",
        "childVal",
        "childVal",
        "parentVal",
        "parentVal",
        "childVal",
        "parentVal",
        "extend",
        "ret",
        "childVal",
        "ret",
        "parentVal",
        "childVal",
        "childVal",
        "parentVal",
        "childVal",
        "options",
        "options",
        "options",
        "guardArrayAssets",
        "options",
        "components",
        "ids",
        "i",
        "l",
        "i",
        "ids",
        "i",
        "_",
        "key",
        "_",
        "key",
        "components",
        "key",
        "_",
        "key",
        "components",
        "key",
        "_",
        "options",
        "options",
        "_",
        "props",
        "options",
        "props",
        "key",
        "props",
        "key",
        "_",
        "val",
        "val",
        "val",
        "val",
        "key",
        "val",
        "_",
        "props",
        "options",
        "props",
        "prop",
        "prop",
        "prop",
        "prop",
        "assets",
        "_",
        "assets",
        "assets",
        "i",
        "asset",
        "assets",
        "i",
        "asset",
        "asset",
        "asset",
        "id",
        "_",
        "res",
        "id",
        "asset",
        "res",
        "assets",
        "exports",
        "merge",
        "parent",
        "child",
        "vm",
        "guardComponents",
        "child",
        "guardProps",
        "child",
        "child",
        "child",
        "i",
        "l",
        "i",
        "parent",
        "merge",
        "parent",
        "child",
        "i",
        "vm",
        "key",
        "parent",
        "mergeField",
        "key",
        "key",
        "child",
        "parent",
        "key",
        "mergeField",
        "key",
        "key",
        "strats",
        "key",
        "defaultStrat",
        "options",
        "key",
        "strat",
        "parent",
        "key",
        "child",
        "key",
        "vm",
        "key",
        "options",
        "exports",
        "resolve",
        "options",
        "id",
        "_",
        "id",
        "camelizedId",
        "camelizedId",
        "options",
        "assets",
        "id",
        "assets",
        "camelizedId",
        "assets",
        "pascalizedId",
        "asset",
        "options",
        "config",
        "options",
        "options",
        "options",
        "options",
        "assets",
        "options",
        "asset",
        "assets",
        "id",
        "assets",
        "camelizedId",
        "assets",
        "pascalizedId",
        "asset",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "exports",
        "el",
        "options",
        "el",
        "tag",
        "el",
        "el",
        "exp",
        "exports",
        "tag",
        "_",
        "options",
        "tag",
        "tag",
        "tag",
        "_",
        "el",
        "tag",
        "exports",
        "vm",
        "prop",
        "value",
        "exports",
        "prop",
        "value",
        "prop",
        "key",
        "vm",
        "_",
        "vm",
        "key",
        "value",
        "vm",
        "key",
        "value",
        "vm",
        "key",
        "value",
        "exports",
        "prop",
        "value",
        "prop",
        "prop",
        "prop",
        "options",
        "expectedType",
        "valid",
        "value",
        "expectedType",
        "expectedType",
        "valid",
        "value",
        "expectedType",
        "valid",
        "value",
        "expectedType",
        "valid",
        "value",
        "expectedType",
        "valid",
        "_",
        "value",
        "expectedType",
        "valid",
        "_",
        "value",
        "valid",
        "value",
        "valid",
        "_",
        "prop",
        "prop",
        "formatType",
        "expectedType",
        "formatValue",
        "value",
        "options",
        "validator",
        "validator",
        "value",
        "_",
        "prop",
        "prop",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "msg",
        "hasConsole",
        "config",
        "msg",
        "exports",
        "msg",
        "e",
        "hasConsole",
        "config",
        "config",
        "msg",
        "config",
        "e",
        "exports",
        "val",
        "id",
        "id",
        "exports",
        "id",
        "exports",
        "val",
        "exports",
        "id",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "_",
        "exports",
        "config",
        "exports",
        "_",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "exports",
        "extendOptions",
        "extendOptions",
        "extendOptions",
        "createClass",
        "extendOptions",
        "Super",
        "Sub",
        "Super",
        "Sub",
        "Sub",
        "Sub",
        "cid",
        "Sub",
        "_",
        "Super",
        "extendOptions",
        "Sub",
        "Super",
        "Sub",
        "Super",
        "config",
        "Sub",
        "Super",
        "Sub",
        "name",
        "_",
        "name",
        "exports",
        "plugin",
        "_",
        "arguments",
        "args",
        "plugin",
        "plugin",
        "plugin",
        "args",
        "plugin",
        "args",
        "config",
        "exports",
        "id",
        "definition",
        "definition",
        "id",
        "_",
        "definition",
        "definition",
        "id",
        "definition",
        "_",
        "definition",
        "id",
        "definition",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "exports",
        "__webpack_require__",
        "_",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "__webpack_require__",
        "exports",
        "el",
        "options",
        "partial",
        "partial",
        "options",
        "compileNode",
        "el",
        "options",
        "nodeLinkFn",
        "nodeLinkFn",
        "el",
        "el",
        "compileNodeList",
        "el",
        "options",
        "compositeLinkFn",
        "vm",
        "el",
        "host",
        "_",
        "el",
        "linkAndCapture",
        "nodeLinkFn",
        "nodeLinkFn",
        "vm",
        "el",
        "host",
        "childLinkFn",
        "childLinkFn",
        "vm",
        "childNodes",
        "host",
        "vm",
        "makeUnlinkFn",
        "vm",
        "dirs",
        "linker",
        "vm",
        "vm",
        "linker",
        "vm",
        "originalDirCount",
        "vm",
        "dirs",
        "context",
        "contextDirs",
        "unlink",
        "destroying",
        "teardownDirs",
        "vm",
        "dirs",
        "destroying",
        "context",
        "contextDirs",
        "teardownDirs",
        "context",
        "contextDirs",
        "vm",
        "dirs",
        "destroying",
        "dirs",
        "i",
        "dirs",
        "i",
        "destroying",
        "vm",
        "dirs",
        "i",
        "exports",
        "vm",
        "el",
        "props",
        "compileProps",
        "el",
        "props",
        "linkAndCapture",
        "propsLinkFn",
        "vm",
        "vm",
        "makeUnlinkFn",
        "vm",
        "propDirs",
        "exports",
        "el",
        "options",
        "options",
        "options",
        "el",
        "options",
        "containerAttrs",
        "contextLinkFn",
        "compileDirectives",
        "containerAttrs",
        "options",
        "replacerAttrs",
        "replacerLinkFn",
        "compileDirectives",
        "replacerAttrs",
        "options",
        "replacerLinkFn",
        "compileDirectives",
        "el",
        "options",
        "rootLinkFn",
        "vm",
        "el",
        "vm",
        "context",
        "contextLinkFn",
        "contextDirs",
        "linkAndCapture",
        "contextLinkFn",
        "context",
        "el",
        "context",
        "linkAndCapture",
        "replacerLinkFn",
        "replacerLinkFn",
        "vm",
        "el",
        "vm",
        "makeUnlinkFn",
        "vm",
        "selfDirs",
        "context",
        "contextDirs",
        "node",
        "options",
        "node",
        "node",
        "compileElement",
        "node",
        "options",
        "config",
        "node",
        "compileTextNode",
        "node",
        "options",
        "el",
        "options",
        "el",
        "textParser",
        "el",
        "el",
        "el",
        "el",
        "hasAttrs",
        "linkFn",
        "checkTerminalDirectives",
        "el",
        "options",
        "linkFn",
        "linkFn",
        "checkElementDirectives",
        "el",
        "options",
        "linkFn",
        "linkFn",
        "checkComponent",
        "el",
        "options",
        "linkFn",
        "hasAttrs",
        "linkFn",
        "compileDirectives",
        "el",
        "options",
        "linkFn",
        "node",
        "options",
        "textParser",
        "node",
        "tokens",
        "tokens",
        "i",
        "l",
        "i",
        "token",
        "tokens",
        "i",
        "el",
        "token",
        "processTextToken",
        "token",
        "options",
        "token",
        "frag",
        "el",
        "makeTextNodeLinkFn",
        "tokens",
        "frag",
        "options",
        "token",
        "options",
        "token",
        "el",
        "token",
        "token",
        "el",
        "setTokenType",
        "el",
        "setTokenType",
        "token",
        "token",
        "resolveAsset",
        "options",
        "token",
        "dirParser",
        "token",
        "el",
        "tokens",
        "frag",
        "textNodeLinkFn",
        "vm",
        "el",
        "frag",
        "_",
        "fragClone",
        "tokens",
        "i",
        "l",
        "i",
        "token",
        "tokens",
        "i",
        "value",
        "token",
        "token",
        "node",
        "childNodes",
        "i",
        "token",
        "value",
        "vm",
        "value",
        "token",
        "_",
        "node",
        "templateParser",
        "value",
        "node",
        "value",
        "vm",
        "token",
        "node",
        "token",
        "token",
        "_",
        "el",
        "fragClone",
        "nodeList",
        "options",
        "nodeList",
        "i",
        "l",
        "i",
        "node",
        "nodeList",
        "i",
        "nodeLinkFn",
        "compileNode",
        "node",
        "options",
        "childLinkFn",
        "nodeLinkFn",
        "nodeLinkFn",
        "node",
        "node",
        "compileNodeList",
        "node",
        "options",
        "linkFns",
        "nodeLinkFn",
        "childLinkFn",
        "linkFns",
        "makeChildLinkFn",
        "linkFns",
        "linkFns",
        "childLinkFn",
        "vm",
        "nodes",
        "host",
        "linkFns",
        "i",
        "l",
        "n",
        "node",
        "nodes",
        "n",
        "nodeLinkFn",
        "linkFns",
        "i",
        "childrenLinkFn",
        "linkFns",
        "i",
        "_",
        "node",
        "nodeLinkFn",
        "nodeLinkFn",
        "vm",
        "node",
        "host",
        "childrenLinkFn",
        "childrenLinkFn",
        "vm",
        "childNodes",
        "host",
        "el",
        "options",
        "el",
        "_",
        "tag",
        "resolveAsset",
        "options",
        "tag",
        "makeTerminalNodeLinkFn",
        "el",
        "tag",
        "options",
        "el",
        "options",
        "hasAttrs",
        "_",
        "el",
        "options",
        "hasAttrs",
        "componentId",
        "vm",
        "el",
        "host",
        "vm",
        "el",
        "componentId",
        "componentDef",
        "host",
        "componentLinkFn",
        "componentLinkFn",
        "el",
        "options",
        "_",
        "el",
        "skip",
        "terminalDirectives",
        "i",
        "l",
        "i",
        "dirName",
        "terminalDirectives",
        "i",
        "value",
        "_",
        "el",
        "dirName",
        "makeTerminalNodeLinkFn",
        "el",
        "dirName",
        "value",
        "options",
        "skip",
        "el",
        "dirName",
        "value",
        "options",
        "dirParser",
        "value",
        "options",
        "dirName",
        "terminalNodeLinkFn",
        "vm",
        "el",
        "host",
        "vm",
        "dirName",
        "el",
        "descriptor",
        "host",
        "fn",
        "fn",
        "attrs",
        "options",
        "attrs",
        "i",
        "attr",
        "attrs",
        "i",
        "name",
        "attr",
        "value",
        "attr",
        "name",
        "config",
        "dirName",
        "name",
        "config",
        "dirDef",
        "resolveAsset",
        "options",
        "dirName",
        "_",
        "dirDef",
        "dirName",
        "dirDef",
        "dirs",
        "dirName",
        "dirParser",
        "value",
        "dirDef",
        "config",
        "dir",
        "collectAttrDirective",
        "name",
        "value",
        "options",
        "dir",
        "dirs",
        "dir",
        "dirs",
        "dirs",
        "directiveComparator",
        "makeNodeLinkFn",
        "dirs",
        "directives",
        "nodeLinkFn",
        "vm",
        "el",
        "host",
        "directives",
        "i",
        "dir",
        "directives",
        "i",
        "dir",
        "dir",
        "vm",
        "el",
        "k",
        "dir",
        "j",
        "j",
        "k",
        "j",
        "vm",
        "dir",
        "el",
        "dir",
        "j",
        "dir",
        "host",
        "name",
        "value",
        "options",
        "textParser",
        "value",
        "name",
        "tokens",
        "isClass",
        "options",
        "dirName",
        "tokens",
        "i",
        "tokens",
        "i",
        "token",
        "token",
        "allOneTime",
        "allOneTime",
        "vm",
        "el",
        "el",
        "name",
        "vm",
        "value",
        "vm",
        "el",
        "textParser",
        "tokens",
        "vm",
        "isClass",
        "dirParser",
        "exp",
        "dirParser",
        "name",
        "exp",
        "isClass",
        "desc",
        "value",
        "vm",
        "dirName",
        "el",
        "desc",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "a",
        "b",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "compileProps",
        "el",
        "propOptions",
        "propOptions",
        "i",
        "options",
        "propOptions",
        "i",
        "name",
        "options",
        "path",
        "_",
        "name",
        "dataAttrRE",
        "identRE",
        "path",
        "_",
        "name",
        "attr",
        "_",
        "name",
        "value",
        "el",
        "attr",
        "value",
        "attr",
        "attr",
        "value",
        "el",
        "attr",
        "prop",
        "name",
        "value",
        "path",
        "options",
        "propBindingModes",
        "value",
        "el",
        "attr",
        "textParser",
        "value",
        "tokens",
        "prop",
        "prop",
        "textParser",
        "tokens",
        "single",
        "tokens",
        "literal",
        "literalValueRE",
        "prop",
        "literal",
        "single",
        "tokens",
        "prop",
        "propBindingModes",
        "literal",
        "single",
        "tokens",
        "settablePathRE",
        "prop",
        "prop",
        "propBindingModes",
        "_",
        "prop",
        "options",
        "prop",
        "propBindingModes",
        "_",
        "name",
        "options",
        "options",
        "_",
        "name",
        "props",
        "prop",
        "makePropsLinkFn",
        "props",
        "props",
        "propsLinkFn",
        "vm",
        "el",
        "vm",
        "props",
        "i",
        "prop",
        "props",
        "i",
        "path",
        "prop",
        "vm",
        "path",
        "prop",
        "options",
        "prop",
        "prop",
        "_",
        "vm",
        "prop",
        "getDefault",
        "options",
        "prop",
        "vm",
        "prop",
        "propBindingModes",
        "value",
        "vm",
        "prop",
        "_",
        "vm",
        "prop",
        "value",
        "vm",
        "el",
        "prop",
        "propDef",
        "_",
        "prop",
        "prop",
        "prop",
        "value",
        "options",
        "raw",
        "raw",
        "_",
        "_",
        "raw",
        "raw",
        "_",
        "vm",
        "prop",
        "value",
        "options",
        "options",
        "options",
        "options",
        "_",
        "_",
        "options",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "regexEscapeRE",
        "config",
        "config",
        "config",
        "firstChar",
        "open",
        "lastChar",
        "close",
        "close",
        "escapeRegex",
        "firstChar",
        "escapeRegex",
        "lastChar",
        "escapeRegex",
        "open",
        "escapeRegex",
        "close",
        "tagRE",
        "firstCharRE",
        "openRE",
        "closeRE",
        "lastCharRE",
        "htmlRE",
        "firstCharRE",
        "openRE",
        "closeRE",
        "lastCharRE",
        "cache",
        "Cache",
        "exports",
        "text",
        "config",
        "compileRegex",
        "cache",
        "text",
        "hit",
        "hit",
        "text",
        "text",
        "tagRE",
        "text",
        "tagRE",
        "match",
        "tagRE",
        "text",
        "index",
        "match",
        "index",
        "lastIndex",
        "tokens",
        "text",
        "lastIndex",
        "index",
        "first",
        "match",
        "oneTime",
        "first",
        "twoWay",
        "first",
        "value",
        "oneTime",
        "twoWay",
        "match",
        "match",
        "tokens",
        "value",
        "htmlRE",
        "match",
        "oneTime",
        "twoWay",
        "lastIndex",
        "index",
        "match",
        "lastIndex",
        "text",
        "tokens",
        "text",
        "lastIndex",
        "cache",
        "text",
        "tokens",
        "tokens",
        "exports",
        "tokens",
        "vm",
        "tokens",
        "tokens",
        "token",
        "formatToken",
        "token",
        "vm",
        "formatToken",
        "tokens",
        "vm",
        "token",
        "vm",
        "single",
        "token",
        "vm",
        "token",
        "vm",
        "token",
        "inlineFilters",
        "token",
        "single",
        "token",
        "exp",
        "single",
        "filterRE",
        "exp",
        "single",
        "exp",
        "exp",
        "dirParser",
        "exp",
        "dir",
        "exp",
        "dir",
        "dir",
        "exports",
        "limit",
        "limit",
        "Cache",
        "p",
        "key",
        "value",
        "key",
        "value",
        "key",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "p",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "p",
        "key",
        "returnEntry",
        "key",
        "entry",
        "entry",
        "returnEntry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "returnEntry",
        "entry",
        "entry",
        "Cache",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "Cache",
        "dir",
        "begin",
        "i",
        "dir",
        "dir",
        "argIndex",
        "i",
        "lastFilterIndex",
        "begin",
        "pushFilter",
        "i",
        "dir",
        "dirs",
        "dir",
        "lastFilterIndex",
        "i",
        "exp",
        "exp",
        "filterTokenRE",
        "tokens",
        "tokens",
        "tokens",
        "processFilterArg",
        "dir",
        "dir",
        "lastFilterIndex",
        "i",
        "arg",
        "reservedArgRE",
        "arg",
        "arg",
        "_",
        "arg",
        "stripped",
        "dynamic",
        "arg",
        "stripped",
        "dynamic",
        "exports",
        "s",
        "cache",
        "s",
        "hit",
        "hit",
        "s",
        "inSingle",
        "inDouble",
        "curly",
        "square",
        "paren",
        "begin",
        "argIndex",
        "lastFilterIndex",
        "dirs",
        "dir",
        "arg",
        "i",
        "l",
        "i",
        "l",
        "i",
        "c",
        "i",
        "inSingle",
        "c",
        "inSingle",
        "inSingle",
        "inDouble",
        "c",
        "inDouble",
        "inDouble",
        "c",
        "paren",
        "curly",
        "square",
        "pushDir",
        "dir",
        "begin",
        "argIndex",
        "lastFilterIndex",
        "i",
        "c",
        "dir",
        "dir",
        "arg",
        "begin",
        "i",
        "argRE",
        "arg",
        "argIndex",
        "i",
        "dir",
        "_",
        "arg",
        "arg",
        "c",
        "i",
        "i",
        "dir",
        "lastFilterIndex",
        "i",
        "dir",
        "argIndex",
        "i",
        "pushFilter",
        "c",
        "inDouble",
        "inSingle",
        "paren",
        "paren",
        "square",
        "square",
        "curly",
        "curly",
        "i",
        "begin",
        "i",
        "pushDir",
        "cache",
        "s",
        "dirs",
        "dirs",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "child",
        "prop",
        "prop",
        "Watcher",
        "parent",
        "parentKey",
        "val",
        "_",
        "prop",
        "val",
        "child",
        "childKey",
        "val",
        "childKey",
        "child",
        "value",
        "_",
        "child",
        "prop",
        "value",
        "prop",
        "bindingModes",
        "child",
        "Watcher",
        "child",
        "childKey",
        "val",
        "parent",
        "parentKey",
        "val",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "vm",
        "expOrFn",
        "cb",
        "options",
        "options",
        "_",
        "options",
        "expOrFn",
        "vm",
        "vm",
        "isFn",
        "expOrFn",
        "expOrFn",
        "cb",
        "uid",
        "isFn",
        "expOrFn",
        "expParser",
        "expOrFn",
        "res",
        "res",
        "Watcher",
        "dep",
        "_",
        "newDeps",
        "dep",
        "newDeps",
        "dep",
        "_",
        "old",
        "dep",
        "i",
        "dep",
        "old",
        "i",
        "Watcher",
        "value",
        "vm",
        "vm",
        "e",
        "config",
        "_",
        "config",
        "e",
        "traverse",
        "value",
        "value",
        "value",
        "value",
        "vm",
        "value",
        "value",
        "Watcher",
        "value",
        "value",
        "vm",
        "value",
        "vm",
        "vm",
        "value",
        "e",
        "config",
        "_",
        "e",
        "Watcher",
        "Dep",
        "Watcher",
        "Dep",
        "i",
        "i",
        "dep",
        "dep",
        "Watcher",
        "shallow",
        "config",
        "shallow",
        "shallow",
        "config",
        "batcher",
        "Watcher",
        "value",
        "_",
        "value",
        "value",
        "config",
        "prevError",
        "value",
        "oldValue",
        "e",
        "_",
        "prevError",
        "e",
        "value",
        "oldValue",
        "Watcher",
        "Dep",
        "Dep",
        "current",
        "Watcher",
        "i",
        "i",
        "Watcher",
        "i",
        "i",
        "obj",
        "key",
        "obj",
        "val",
        "obj",
        "key",
        "_",
        "val",
        "i",
        "val",
        "i",
        "traverse",
        "val",
        "i",
        "_",
        "val",
        "traverse",
        "val",
        "Watcher",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "Dep",
        "Dep",
        "sub",
        "sub",
        "Dep",
        "sub",
        "sub",
        "Dep",
        "Dep",
        "Dep",
        "_",
        "subs",
        "i",
        "l",
        "i",
        "subs",
        "i",
        "Dep",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "Cache",
        "allowedKeywords",
        "improperKeywords",
        "isString",
        "saved",
        "saved",
        "i",
        "isString",
        "newlineRE",
        "i",
        "raw",
        "raw",
        "raw",
        "allowedKeywordsRE",
        "path",
        "raw",
        "path",
        "path",
        "path",
        "restoreRE",
        "restore",
        "path",
        "c",
        "path",
        "i",
        "saved",
        "i",
        "exp",
        "needSet",
        "improperKeywordsRE",
        "exp",
        "_",
        "exp",
        "saved",
        "exp",
        "saveRE",
        "save",
        "wsRE",
        "body",
        "body",
        "pathReplaceRE",
        "rewrite",
        "restoreRE",
        "restore",
        "makeGetter",
        "body",
        "getter",
        "getter",
        "body",
        "needSet",
        "makeSetter",
        "body",
        "exp",
        "exp",
        "path",
        "exp",
        "path",
        "exp",
        "getter",
        "Path",
        "path",
        "path",
        "Path",
        "exp",
        "getter",
        "path",
        "getter",
        "obj",
        "val",
        "Path",
        "obj",
        "path",
        "val",
        "body",
        "body",
        "e",
        "_",
        "body",
        "body",
        "body",
        "e",
        "_",
        "body",
        "hit",
        "hit",
        "hit",
        "makeSetter",
        "hit",
        "exports",
        "exp",
        "needSet",
        "exp",
        "exp",
        "expressionCache",
        "exp",
        "hit",
        "needSet",
        "checkSetter",
        "hit",
        "hit",
        "exports",
        "exp",
        "compilePathFns",
        "exp",
        "compileExpFns",
        "exp",
        "needSet",
        "expressionCache",
        "exp",
        "res",
        "res",
        "exports",
        "exp",
        "pathTestRE",
        "exp",
        "booleanLiteralRE",
        "exp",
        "exp",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "Cache",
        "exports",
        "pathStateMachine",
        "BEFORE_PATH",
        "BEFORE_PATH",
        "IN_IDENT",
        "APPEND",
        "BEFORE_ELEMENT",
        "AFTER_PATH",
        "pathStateMachine",
        "IN_PATH",
        "IN_PATH",
        "BEFORE_IDENT",
        "BEFORE_ELEMENT",
        "AFTER_PATH",
        "pathStateMachine",
        "BEFORE_IDENT",
        "BEFORE_IDENT",
        "IN_IDENT",
        "APPEND",
        "pathStateMachine",
        "IN_IDENT",
        "IN_IDENT",
        "APPEND",
        "IN_IDENT",
        "APPEND",
        "IN_IDENT",
        "APPEND",
        "IN_PATH",
        "PUSH",
        "BEFORE_IDENT",
        "PUSH",
        "BEFORE_ELEMENT",
        "PUSH",
        "AFTER_PATH",
        "PUSH",
        "pathStateMachine",
        "BEFORE_ELEMENT",
        "BEFORE_ELEMENT",
        "AFTER_ZERO",
        "APPEND",
        "IN_INDEX",
        "APPEND",
        "IN_SINGLE_QUOTE",
        "APPEND",
        "IN_DOUBLE_QUOTE",
        "APPEND",
        "IN_SUB_PATH",
        "APPEND",
        "pathStateMachine",
        "AFTER_ZERO",
        "AFTER_ELEMENT",
        "PUSH",
        "IN_PATH",
        "PUSH",
        "pathStateMachine",
        "IN_INDEX",
        "IN_INDEX",
        "APPEND",
        "IN_INDEX",
        "APPEND",
        "AFTER_ELEMENT",
        "IN_PATH",
        "PUSH",
        "pathStateMachine",
        "IN_SINGLE_QUOTE",
        "AFTER_ELEMENT",
        "ERROR",
        "IN_SINGLE_QUOTE",
        "APPEND",
        "pathStateMachine",
        "IN_DOUBLE_QUOTE",
        "AFTER_ELEMENT",
        "ERROR",
        "IN_DOUBLE_QUOTE",
        "APPEND",
        "pathStateMachine",
        "IN_SUB_PATH",
        "IN_SUB_PATH",
        "APPEND",
        "IN_SUB_PATH",
        "APPEND",
        "IN_SUB_PATH",
        "APPEND",
        "AFTER_ELEMENT",
        "IN_PATH",
        "PUSH",
        "pathStateMachine",
        "AFTER_ELEMENT",
        "AFTER_ELEMENT",
        "IN_PATH",
        "PUSH",
        "ch",
        "ch",
        "ch",
        "code",
        "ch",
        "code",
        "code",
        "code",
        "code",
        "code",
        "code",
        "path",
        "actions",
        "PUSH",
        "key",
        "keys",
        "key",
        "key",
        "actions",
        "APPEND",
        "key",
        "key",
        "newChar",
        "key",
        "newChar",
        "path",
        "index",
        "mode",
        "IN_SINGLE_QUOTE",
        "nextChar",
        "mode",
        "IN_DOUBLE_QUOTE",
        "nextChar",
        "index",
        "newChar",
        "nextChar",
        "actions",
        "APPEND",
        "mode",
        "index",
        "c",
        "path",
        "index",
        "c",
        "maybeUnescapeQuote",
        "getPathCharType",
        "c",
        "typeMap",
        "pathStateMachine",
        "mode",
        "transition",
        "typeMap",
        "typeMap",
        "ERROR",
        "transition",
        "ERROR",
        "mode",
        "transition",
        "action",
        "actions",
        "transition",
        "action",
        "newChar",
        "transition",
        "newChar",
        "newChar",
        "c",
        "newChar",
        "newChar",
        "c",
        "newChar",
        "action",
        "mode",
        "AFTER_PATH",
        "keys",
        "path",
        "keys",
        "key",
        "identRE",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "formatAccessor",
        "key",
        "key",
        "exports",
        "path",
        "path",
        "formatAccessor",
        "body",
        "exports",
        "path",
        "pathCache",
        "path",
        "hit",
        "hit",
        "parsePath",
        "path",
        "hit",
        "hit",
        "exports",
        "hit",
        "pathCache",
        "path",
        "hit",
        "hit",
        "exports",
        "obj",
        "path",
        "path",
        "exports",
        "path",
        "path",
        "path",
        "obj",
        "exports",
        "obj",
        "path",
        "val",
        "path",
        "path",
        "exports",
        "path",
        "path",
        "_",
        "obj",
        "path",
        "i",
        "l",
        "i",
        "last",
        "obj",
        "key",
        "path",
        "i",
        "key",
        "key",
        "original",
        "key",
        "i",
        "l",
        "obj",
        "obj",
        "key",
        "_",
        "obj",
        "warnNonExistent",
        "path",
        "obj",
        "last",
        "key",
        "obj",
        "_",
        "obj",
        "obj",
        "key",
        "val",
        "key",
        "obj",
        "obj",
        "key",
        "val",
        "warnNonExistent",
        "path",
        "obj",
        "key",
        "val",
        "path",
        "_",
        "path",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "queue",
        "userQueue",
        "has",
        "circular",
        "waiting",
        "internalQueueDepleted",
        "runBatcherQueue",
        "queue",
        "internalQueueDepleted",
        "runBatcherQueue",
        "userQueue",
        "resetBatcherState",
        "queue",
        "i",
        "queue",
        "i",
        "queue",
        "i",
        "watcher",
        "has",
        "id",
        "watcher",
        "has",
        "id",
        "circular",
        "id",
        "circular",
        "id",
        "circular",
        "id",
        "config",
        "queue",
        "has",
        "id",
        "_",
        "watcher",
        "exports",
        "watcher",
        "watcher",
        "has",
        "id",
        "internalQueueDepleted",
        "watcher",
        "watcher",
        "watcher",
        "userQueue",
        "queue",
        "has",
        "id",
        "q",
        "q",
        "watcher",
        "waiting",
        "waiting",
        "_",
        "flushBatcherQueue",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "Cache",
        "Cache",
        "node",
        "_",
        "node",
        "node",
        "DocumentFragment",
        "templateString",
        "templateCache",
        "templateString",
        "hit",
        "hit",
        "templateString",
        "tagRE",
        "entityRE",
        "templateString",
        "tagMatch",
        "entityMatch",
        "frag",
        "templateString",
        "tagMatch",
        "tagMatch",
        "tag",
        "wrap",
        "wrap",
        "wrap",
        "node",
        "prefix",
        "templateString",
        "suffix",
        "depth",
        "node",
        "node",
        "child",
        "node",
        "frag",
        "child",
        "templateCache",
        "templateString",
        "frag",
        "frag",
        "node",
        "isRealTemplate",
        "node",
        "_",
        "node",
        "node",
        "node",
        "stringToFragment",
        "node",
        "exports",
        "node",
        "child",
        "clone",
        "frag",
        "child",
        "_",
        "frag",
        "frag",
        "_",
        "a",
        "a",
        "_",
        "t",
        "t",
        "exports",
        "node",
        "node",
        "node",
        "node",
        "hasBrokenTemplate",
        "isRealTemplate",
        "node",
        "node",
        "node",
        "clone",
        "res",
        "original",
        "node",
        "original",
        "cloned",
        "clone",
        "i",
        "cloned",
        "i",
        "cloned",
        "i",
        "exports",
        "original",
        "i",
        "cloned",
        "i",
        "hasTextareaCloneBug",
        "node",
        "res",
        "node",
        "original",
        "node",
        "original",
        "cloned",
        "res",
        "i",
        "cloned",
        "i",
        "cloned",
        "i",
        "original",
        "i",
        "res",
        "exports",
        "template",
        "clone",
        "noSelector",
        "template",
        "DocumentFragment",
        "_",
        "template",
        "clone",
        "exports",
        "template",
        "template",
        "template",
        "noSelector",
        "template",
        "frag",
        "idSelectorCache",
        "template",
        "frag",
        "node",
        "template",
        "node",
        "frag",
        "nodeToFragment",
        "node",
        "idSelectorCache",
        "template",
        "frag",
        "frag",
        "stringToFragment",
        "template",
        "template",
        "frag",
        "nodeToFragment",
        "template",
        "frag",
        "clone",
        "exports",
        "frag",
        "frag",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "_",
        "config",
        "_",
        "_",
        "_",
        "waitFor",
        "options",
        "waitFor",
        "anchor",
        "options",
        "child",
        "child",
        "anchor",
        "value",
        "value",
        "value",
        "cb",
        "value",
        "cb",
        "value",
        "_",
        "waitFor",
        "options",
        "waitFor",
        "cb",
        "options",
        "waitFor",
        "cached",
        "newComponent",
        "cb",
        "newComponent",
        "id",
        "cb",
        "_",
        "Component",
        "Component",
        "cb",
        "id",
        "extraOptions",
        "cached",
        "cached",
        "templateParser",
        "extraOptions",
        "_",
        "options",
        "extraOptions",
        "parent",
        "options",
        "child",
        "child",
        "defer",
        "child",
        "child",
        "defer",
        "child",
        "cb",
        "child",
        "cb",
        "child",
        "keepAlive",
        "child",
        "cb",
        "cb",
        "target",
        "cb",
        "target",
        "target",
        "current",
        "cb",
        "current",
        "target",
        "cb",
        "current",
        "target",
        "cb",
        "child",
        "child",
        "child",
        "refID",
        "refID",
        "child",
        "child",
        "child",
        "refID",
        "refID",
        "key",
        "key",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "el",
        "options",
        "options",
        "options",
        "extractAttrs",
        "el",
        "_",
        "el",
        "el",
        "templateParser",
        "el",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "_",
        "el",
        "el",
        "transcludeTemplate",
        "el",
        "options",
        "el",
        "DocumentFragment",
        "_",
        "_",
        "el",
        "el",
        "_",
        "el",
        "el",
        "options",
        "options",
        "templateParser",
        "template",
        "frag",
        "frag",
        "replacer",
        "replacer",
        "options",
        "el",
        "_",
        "frag",
        "replacer",
        "tag",
        "_",
        "options",
        "tag",
        "replacer",
        "config",
        "_",
        "options",
        "tag",
        "replacer",
        "config",
        "frag",
        "options",
        "extractAttrs",
        "replacer",
        "mergeAttrs",
        "el",
        "replacer",
        "replacer",
        "el",
        "frag",
        "el",
        "_",
        "template",
        "el",
        "el",
        "el",
        "_",
        "el",
        "to",
        "attrs",
        "i",
        "name",
        "attrs",
        "i",
        "value",
        "attrs",
        "i",
        "to",
        "name",
        "to",
        "name",
        "value",
        "name",
        "value",
        "to",
        "name",
        "value",
        "to",
        "name",
        "value",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "value",
        "_",
        "value",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "_",
        "value",
        "value",
        "_",
        "value",
        "value",
        "value",
        "value",
        "i",
        "_",
        "i",
        "templateParser",
        "value",
        "_",
        "frag",
        "_",
        "frag",
        "exports",
        "value",
        "value",
        "value",
        "value",
        "value",
        "attr",
        "cache",
        "attr",
        "value",
        "attr",
        "cache",
        "attr",
        "attr",
        "value",
        "val",
        "value",
        "attr",
        "val",
        "cache",
        "attr",
        "cache",
        "attr",
        "val",
        "attr",
        "val",
        "attr",
        "value",
        "inputProps",
        "attr",
        "attr",
        "attr",
        "attr",
        "value",
        "value",
        "value",
        "xlinkRE",
        "attr",
        "xlinkNS",
        "attr",
        "value",
        "attr",
        "value",
        "attr",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "value",
        "transition",
        "el",
        "value",
        "el",
        "value",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "el",
        "target",
        "vm",
        "cb",
        "apply",
        "el",
        "target",
        "el",
        "vm",
        "cb",
        "exports",
        "el",
        "target",
        "vm",
        "cb",
        "apply",
        "el",
        "_",
        "el",
        "target",
        "vm",
        "cb",
        "exports",
        "el",
        "vm",
        "cb",
        "apply",
        "el",
        "_",
        "el",
        "vm",
        "cb",
        "exports",
        "el",
        "target",
        "vm",
        "cb",
        "apply",
        "el",
        "target",
        "el",
        "vm",
        "cb",
        "exports",
        "block",
        "target",
        "vm",
        "_",
        "block",
        "nodes",
        "i",
        "l",
        "i",
        "exports",
        "nodes",
        "i",
        "target",
        "vm",
        "exports",
        "start",
        "end",
        "vm",
        "start",
        "node",
        "end",
        "next",
        "node",
        "exports",
        "node",
        "vm",
        "node",
        "next",
        "exports",
        "el",
        "direction",
        "op",
        "vm",
        "cb",
        "el",
        "transition",
        "transition",
        "_",
        "vm",
        "vm",
        "vm",
        "op",
        "cb",
        "cb",
        "direction",
        "transition",
        "action",
        "op",
        "cb",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "_",
        "raw",
        "raw",
        "value",
        "value",
        "addClass",
        "removeClass",
        "value",
        "value",
        "stringToObject",
        "value",
        "_",
        "value",
        "value",
        "value",
        "value",
        "value",
        "keys",
        "i",
        "l",
        "i",
        "keys",
        "i",
        "value",
        "key",
        "addClass",
        "key",
        "removeClass",
        "key",
        "value",
        "i",
        "i",
        "value",
        "value",
        "key",
        "removeClass",
        "key",
        "value",
        "value",
        "keys",
        "i",
        "res",
        "keys",
        "i",
        "res",
        "exports",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "vm",
        "_",
        "vm",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "el",
        "config",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "prop",
        "cache",
        "prop",
        "value",
        "prop",
        "cache",
        "prop",
        "prop",
        "value",
        "val",
        "value",
        "prop",
        "val",
        "cache",
        "prop",
        "cache",
        "prop",
        "val",
        "prop",
        "val",
        "prop",
        "value",
        "prop",
        "normalize",
        "prop",
        "prop",
        "value",
        "value",
        "value",
        "importantRE",
        "value",
        "isImportant",
        "value",
        "value",
        "importantRE",
        "prop",
        "value",
        "isImportant",
        "prop",
        "prop",
        "propCache",
        "prop",
        "propCache",
        "prop",
        "prefix",
        "prop",
        "propCache",
        "prop",
        "propCache",
        "res",
        "res",
        "res",
        "prop",
        "prop",
        "prop",
        "camelRE",
        "_",
        "prop",
        "camel",
        "camel",
        "testEl",
        "testEl",
        "camel",
        "testEl",
        "prop",
        "prefixes",
        "i",
        "prefixed",
        "camelPrefixes",
        "i",
        "upper",
        "prefixed",
        "testEl",
        "prefixes",
        "i",
        "prop",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "id",
        "oldId",
        "_",
        "vm",
        "id",
        "id",
        "id",
        "el",
        "Transition",
        "el",
        "id",
        "hooks",
        "vm",
        "oldId",
        "_",
        "el",
        "oldId",
        "_",
        "el",
        "id",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "_",
        "_",
        "_",
        "_",
        "_",
        "el",
        "id",
        "hooks",
        "vm",
        "uid",
        "el",
        "id",
        "id",
        "hooks",
        "vm",
        "m",
        "m",
        "_",
        "m",
        "Transition",
        "p",
        "op",
        "cb",
        "cb",
        "addClass",
        "op",
        "queue",
        "p",
        "_",
        "TYPE_TRANSITION",
        "removeClass",
        "transitionEndEvent",
        "enterDone",
        "TYPE_ANIMATION",
        "animationEndEvent",
        "enterDone",
        "enterDone",
        "p",
        "removeClass",
        "p",
        "op",
        "cb",
        "op",
        "cb",
        "addClass",
        "queue",
        "p",
        "TYPE_TRANSITION",
        "transitionEndEvent",
        "animationEndEvent",
        "p",
        "removeClass",
        "p",
        "hasPending",
        "_",
        "hasPending",
        "hasPending",
        "removeClass",
        "removeClass",
        "p",
        "p",
        "hook",
        "hook",
        "_",
        "hook",
        "p",
        "className",
        "transitionEndEvent",
        "className",
        "inlineStyles",
        "transDurationProp",
        "computedStyles",
        "transDurationProp",
        "transDuration",
        "transDuration",
        "TYPE_TRANSITION",
        "inlineStyles",
        "animDurationProp",
        "computedStyles",
        "animDurationProp",
        "animDuration",
        "animDuration",
        "TYPE_ANIMATION",
        "className",
        "p",
        "cb",
        "e",
        "e",
        "el",
        "_",
        "el",
        "onEnd",
        "cb",
        "cb",
        "_",
        "el",
        "onEnd",
        "Transition",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "job",
        "queue",
        "job",
        "queued",
        "queued",
        "_",
        "flush",
        "i",
        "queue",
        "i",
        "queue",
        "i",
        "queue",
        "queued",
        "f",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "handler",
        "handler",
        "_",
        "handler",
        "e",
        "e",
        "vm",
        "vm",
        "e",
        "handler",
        "e",
        "vm",
        "res",
        "_",
        "_",
        "el",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "handlers",
        "_",
        "el",
        "tag",
        "handler",
        "handlers",
        "el",
        "handlers",
        "tag",
        "handler",
        "handlers",
        "tag",
        "handler",
        "handlers",
        "_",
        "tag",
        "handler",
        "handler",
        "handler",
        "filters",
        "filters",
        "i",
        "_",
        "filters",
        "i",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "el",
        "parseInt",
        "_",
        "isRange",
        "composing",
        "composing",
        "isRange",
        "composing",
        "number",
        "isRange",
        "_",
        "el",
        "el",
        "val",
        "_",
        "debounce",
        "_",
        "debounce",
        "jQuery",
        "jQuery",
        "el",
        "lazy",
        "jQuery",
        "el",
        "lazy",
        "lazy",
        "_",
        "_",
        "e",
        "e",
        "e",
        "el",
        "el",
        "el",
        "number",
        "_",
        "el",
        "el",
        "value",
        "_",
        "value",
        "jQuery",
        "el",
        "jQuery",
        "el",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "el",
        "number",
        "val",
        "_",
        "val",
        "expression",
        "val",
        "expression",
        "val",
        "el",
        "value",
        "_",
        "value",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "optionsParam",
        "initOptions",
        "optionsParam",
        "el",
        "getValue",
        "el",
        "value",
        "_",
        "value",
        "value",
        "_",
        "_",
        "value",
        "value",
        "value",
        "checkInitialValue",
        "value",
        "el",
        "value",
        "_",
        "value",
        "el",
        "options",
        "i",
        "op",
        "options",
        "i",
        "val",
        "op",
        "op",
        "op",
        "op",
        "multi",
        "indexOf",
        "value",
        "val",
        "_",
        "value",
        "val",
        "expression",
        "dirParser",
        "expression",
        "value",
        "_",
        "value",
        "el",
        "i",
        "el",
        "i",
        "option",
        "defaultOption",
        "el",
        "option",
        "buildOptions",
        "el",
        "value",
        "_",
        "value",
        "Watcher",
        "descriptor",
        "optionUpdateWatcher",
        "descriptor",
        "optionUpdateWatcher",
        "parent",
        "options",
        "options",
        "i",
        "l",
        "i",
        "op",
        "options",
        "i",
        "op",
        "el",
        "op",
        "el",
        "el",
        "op",
        "op",
        "_",
        "op",
        "el",
        "op",
        "el",
        "op",
        "el",
        "op",
        "op",
        "el",
        "el",
        "el",
        "op",
        "buildOptions",
        "el",
        "op",
        "parent",
        "el",
        "options",
        "i",
        "l",
        "i",
        "options",
        "i",
        "initValue",
        "initValue",
        "options",
        "i",
        "initValue",
        "options",
        "i",
        "initValue",
        "_",
        "initValue",
        "initValue",
        "el",
        "multi",
        "multi",
        "el",
        "i",
        "l",
        "i",
        "op",
        "el",
        "i",
        "op",
        "val",
        "op",
        "op",
        "op",
        "multi",
        "res",
        "val",
        "val",
        "res",
        "arr",
        "val",
        "arr",
        "i",
        "_",
        "arr",
        "i",
        "val",
        "i",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "value",
        "trueExp",
        "_",
        "value",
        "trueExp",
        "value",
        "el",
        "val",
        "trueExp",
        "val",
        "trueExp",
        "val",
        "falseExp",
        "val",
        "falseExp",
        "val",
        "getValue",
        "el",
        "getValue",
        "value",
        "value",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "_",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "inMatch",
        "inMatch",
        "inMatch",
        "uid",
        "_",
        "_",
        "_",
        "_",
        "_",
        "templateParser",
        "stagger",
        "stagger",
        "config",
        "config",
        "_",
        "_",
        "_",
        "UNRESOLVED",
        "_",
        "options",
        "id",
        "_",
        "compiler",
        "_",
        "options",
        "copy",
        "compiler",
        "copy",
        "_",
        "textParser",
        "id",
        "tokens",
        "textParser",
        "tokens",
        "expParser",
        "componentExp",
        "id",
        "PENDING",
        "_",
        "Component",
        "ABORTED",
        "Component",
        "RESOLVED",
        "data",
        "meta",
        "key",
        "data",
        "_",
        "context",
        "key",
        "data",
        "key",
        "key",
        "meta",
        "_",
        "context",
        "key",
        "meta",
        "key",
        "context",
        "context",
        "_",
        "id",
        "_",
        "Component",
        "id",
        "Component",
        "_",
        "id",
        "_",
        "Component",
        "data",
        "state",
        "UNRESOLVED",
        "data",
        "state",
        "PENDING",
        "data",
        "state",
        "RESOLVED",
        "data",
        "data",
        "data",
        "data",
        "toRefObject",
        "vm",
        "vm",
        "data",
        "oldVms",
        "_",
        "start",
        "oldVms",
        "data",
        "i",
        "l",
        "data",
        "i",
        "l",
        "i",
        "obj",
        "data",
        "i",
        "raw",
        "converted",
        "obj",
        "obj",
        "primitive",
        "isObject",
        "raw",
        "vm",
        "init",
        "raw",
        "i",
        "converted",
        "obj",
        "vm",
        "vm",
        "vm",
        "i",
        "idKey",
        "converted",
        "primitive",
        "alias",
        "vm",
        "alias",
        "raw",
        "_",
        "raw",
        "vm",
        "raw",
        "vm",
        "raw",
        "vm",
        "obj",
        "i",
        "vm",
        "vms",
        "i",
        "vm",
        "init",
        "vm",
        "end",
        "init",
        "vms",
        "oldVms",
        "vms",
        "i",
        "l",
        "oldVms",
        "i",
        "l",
        "i",
        "vm",
        "oldVms",
        "i",
        "vm",
        "vm",
        "vm",
        "vm",
        "removalIndex",
        "totalRemoved",
        "inDoc",
        "i",
        "l",
        "vms",
        "i",
        "l",
        "i",
        "vm",
        "vms",
        "i",
        "targetPrev",
        "vms",
        "i",
        "prevEl",
        "targetPrev",
        "targetPrev",
        "targetPrev",
        "targetPrev",
        "targetPrev",
        "start",
        "vm",
        "vm",
        "currentPrev",
        "findPrevVm",
        "vm",
        "start",
        "currentPrev",
        "targetPrev",
        "vm",
        "prevEl",
        "vm",
        "insertionIndex",
        "prevEl",
        "inDoc",
        "vm",
        "vms",
        "data",
        "index",
        "needCache",
        "index",
        "meta",
        "data",
        "data",
        "data",
        "alias",
        "data",
        "data",
        "alias",
        "raw",
        "isPlainObject",
        "raw",
        "data",
        "meta",
        "raw",
        "data",
        "raw",
        "data",
        "meta",
        "parent",
        "templateParser",
        "data",
        "meta",
        "Component",
        "_",
        "Component",
        "needCache",
        "raw",
        "vm",
        "index",
        "meta",
        "isPrimitive",
        "raw",
        "vm",
        "alias",
        "val",
        "dir",
        "_",
        "dir",
        "dir",
        "dir",
        "vm",
        "val",
        "dir",
        "vm",
        "val",
        "vm",
        "ABORTED",
        "i",
        "vm",
        "i",
        "vm",
        "vm",
        "data",
        "vm",
        "index",
        "key",
        "isObject",
        "data",
        "key",
        "idKey",
        "primitive",
        "id",
        "idKey",
        "idKey",
        "index",
        "data",
        "idKey",
        "key",
        "index",
        "cache",
        "id",
        "cache",
        "id",
        "vm",
        "primitive",
        "idKey",
        "_",
        "id",
        "id",
        "data",
        "id",
        "data",
        "id",
        "data",
        "id",
        "vm",
        "_",
        "_",
        "data",
        "id",
        "vm",
        "vm",
        "data",
        "data",
        "index",
        "key",
        "isObject",
        "data",
        "key",
        "idKey",
        "primitive",
        "idKey",
        "idKey",
        "index",
        "data",
        "idKey",
        "key",
        "index",
        "id",
        "data",
        "vm",
        "vm",
        "vm",
        "vm",
        "vm",
        "isObject",
        "data",
        "idKey",
        "key",
        "primitive",
        "idKey",
        "idKey",
        "index",
        "data",
        "idKey",
        "key",
        "index",
        "id",
        "data",
        "vm",
        "vm",
        "index",
        "prevEl",
        "inDoc",
        "vm",
        "vm",
        "vm",
        "vm",
        "index",
        "inDoc",
        "staggerAmount",
        "vm",
        "anchor",
        "anchor",
        "vm",
        "_",
        "anchor",
        "vm",
        "_",
        "anchor",
        "prevEl",
        "vm",
        "_",
        "vm",
        "vm",
        "anchor",
        "_",
        "anchor",
        "setTimeout",
        "op",
        "staggerAmount",
        "vm",
        "prevEl",
        "vm",
        "prevEl",
        "vm",
        "prevEl",
        "vm",
        "index",
        "total",
        "inDoc",
        "vm",
        "vm",
        "vm",
        "vm",
        "index",
        "total",
        "inDoc",
        "staggerAmount",
        "vm",
        "_",
        "vm",
        "remove",
        "setTimeout",
        "op",
        "staggerAmount",
        "remove",
        "vm",
        "vm",
        "vm",
        "index",
        "total",
        "vm",
        "transition",
        "transition",
        "hooks",
        "hooks",
        "hooks",
        "hook",
        "hook",
        "vm",
        "index",
        "total",
        "index",
        "value",
        "value",
        "value",
        "isPlainObject",
        "value",
        "value",
        "value",
        "value",
        "_",
        "value",
        "value",
        "value",
        "keys",
        "i",
        "i",
        "key",
        "keys",
        "i",
        "res",
        "i",
        "key",
        "value",
        "key",
        "res",
        "vm",
        "anchor",
        "id",
        "vm",
        "el",
        "el",
        "el",
        "id",
        "el",
        "anchor",
        "el",
        "el",
        "el",
        "n",
        "n",
        "i",
        "n",
        "ret",
        "i",
        "i",
        "ret",
        "vms",
        "vms",
        "i",
        "l",
        "i",
        "vms",
        "i",
        "vms",
        "i",
        "value",
        "value",
        "value",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "Cache",
        "el",
        "_",
        "_",
        "_",
        "el",
        "_",
        "_",
        "el",
        "templateParser",
        "el",
        "templateParser",
        "el",
        "el",
        "cache",
        "cacheId",
        "compiler",
        "cache",
        "cacheId",
        "_",
        "value",
        "value",
        "templateParser",
        "frag",
        "linker",
        "linker",
        "vm",
        "frag",
        "transition",
        "frag",
        "vm",
        "_",
        "vm",
        "children",
        "children",
        "callAttach",
        "_",
        "children",
        "transition",
        "children",
        "children",
        "callDetach",
        "c",
        "next",
        "end",
        "next",
        "cur",
        "cur",
        "c",
        "cur",
        "cur",
        "c",
        "cur",
        "next",
        "vm",
        "vm",
        "contains",
        "child",
        "child",
        "child",
        "child",
        "child",
        "child",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "host",
        "host",
        "host",
        "host",
        "raw",
        "host",
        "selector",
        "extractFragment",
        "raw",
        "raw",
        "context",
        "vm",
        "host",
        "host",
        "compileDefaultContent",
        "compileDefaultContent",
        "raw",
        "selector",
        "nodes",
        "content",
        "extractFragment",
        "nodes",
        "raw",
        "content",
        "content",
        "context",
        "vm",
        "_",
        "content",
        "context",
        "host",
        "content",
        "context",
        "context",
        "content",
        "host",
        "content",
        "_",
        "content",
        "_",
        "nodes",
        "parent",
        "main",
        "nodes",
        "i",
        "l",
        "i",
        "nodes",
        "i",
        "main",
        "node",
        "frag",
        "clone",
        "node",
        "main",
        "node",
        "parent",
        "node",
        "frag",
        "clone",
        "node",
        "frag",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "Cache",
        "__webpack_require__",
        "vIf",
        "vIf",
        "vIf",
        "_",
        "_",
        "_",
        "el",
        "_",
        "el",
        "textParser",
        "id",
        "tokens",
        "tokens",
        "id",
        "tokens",
        "textParser",
        "tokens",
        "exp",
        "value",
        "value",
        "id",
        "_",
        "id",
        "_",
        "partial",
        "id",
        "partial",
        "templateParser",
        "partial",
        "partial",
        "frag",
        "cacheId",
        "frag",
        "linker",
        "frag",
        "cacheId",
        "cache",
        "cacheId",
        "hit",
        "hit",
        "compiler",
        "frag",
        "cache",
        "cacheId",
        "linker",
        "linker",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "value",
        "indent",
        "value",
        "value",
        "value",
        "indent",
        "value",
        "value",
        "e",
        "value",
        "exports",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "exports",
        "value",
        "value",
        "value",
        "value",
        "exports",
        "value",
        "value",
        "value",
        "value",
        "exports",
        "value",
        "currency",
        "value",
        "parseFloat",
        "value",
        "isFinite",
        "value",
        "value",
        "value",
        "currency",
        "currency",
        "currency",
        "value",
        "stringified",
        "_int",
        "i",
        "_int",
        "i",
        "_int",
        "stringified",
        "value",
        "currency",
        "sign",
        "head",
        "_int",
        "i",
        "digitsRE",
        "_float",
        "exports",
        "value",
        "_",
        "arguments",
        "args",
        "args",
        "value",
        "args",
        "args",
        "args",
        "value",
        "exports",
        "handler",
        "key",
        "handler",
        "keyCodes",
        "key",
        "code",
        "code",
        "parseInt",
        "key",
        "e",
        "e",
        "code",
        "handler",
        "e",
        "exports",
        "keyCodes",
        "exports",
        "handler",
        "delay",
        "handler",
        "delay",
        "delay",
        "_",
        "handler",
        "delay",
        "_",
        "exports",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "arr",
        "search",
        "delimiter",
        "search",
        "arr",
        "search",
        "arr",
        "search",
        "search",
        "search",
        "delimiter",
        "_",
        "arguments",
        "n",
        "prev",
        "cur",
        "prev",
        "cur",
        "arr",
        "item",
        "keys",
        "keys",
        "key",
        "contains",
        "Path",
        "item",
        "key",
        "search",
        "contains",
        "item",
        "search",
        "exports",
        "arr",
        "sortKey",
        "reverse",
        "sortKey",
        "arr",
        "arguments",
        "reverse",
        "order",
        "order",
        "reverse",
        "arr",
        "a",
        "b",
        "sortKey",
        "sortKey",
        "a",
        "a",
        "a",
        "a",
        "b",
        "b",
        "b",
        "b",
        "a",
        "_",
        "a",
        "Path",
        "a",
        "sortKey",
        "a",
        "b",
        "_",
        "b",
        "Path",
        "b",
        "sortKey",
        "b",
        "a",
        "b",
        "a",
        "b",
        "order",
        "order",
        "val",
        "search",
        "_",
        "val",
        "key",
        "val",
        "contains",
        "val",
        "key",
        "search",
        "_",
        "val",
        "val",
        "i",
        "contains",
        "val",
        "i",
        "search",
        "val",
        "val",
        "search",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "mergeOptions",
        "options",
        "options",
        "options",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "exports",
        "registerCallbacks",
        "options",
        "registerCallbacks",
        "options",
        "vm",
        "action",
        "hash",
        "hash",
        "key",
        "hash",
        "handlers",
        "hash",
        "key",
        "_",
        "handlers",
        "i",
        "j",
        "handlers",
        "i",
        "j",
        "i",
        "register",
        "vm",
        "action",
        "key",
        "handlers",
        "i",
        "register",
        "vm",
        "action",
        "key",
        "handlers",
        "vm",
        "action",
        "key",
        "handler",
        "options",
        "handler",
        "vm",
        "action",
        "key",
        "handler",
        "options",
        "vm",
        "methods",
        "methods",
        "handler",
        "method",
        "vm",
        "action",
        "key",
        "method",
        "options",
        "_",
        "handler",
        "action",
        "key",
        "handler",
        "register",
        "vm",
        "action",
        "key",
        "handler",
        "handler",
        "exports",
        "onAttached",
        "onDetached",
        "callAttach",
        "child",
        "child",
        "inDoc",
        "child",
        "child",
        "callDetach",
        "child",
        "child",
        "inDoc",
        "child",
        "child",
        "exports",
        "hook",
        "hook",
        "handlers",
        "handlers",
        "i",
        "j",
        "i",
        "handlers",
        "i",
        "hook",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "exports",
        "options",
        "options",
        "props",
        "el",
        "_",
        "el",
        "options",
        "_",
        "el",
        "el",
        "el",
        "props",
        "compiler",
        "el",
        "props",
        "exports",
        "optionsDataFn",
        "optionsDataFn",
        "optionsData",
        "optionsData",
        "prop",
        "propsData",
        "prop",
        "optionsData",
        "prop",
        "optionsData",
        "prop",
        "propsData",
        "prop",
        "data",
        "i",
        "keys",
        "i",
        "key",
        "keys",
        "i",
        "_",
        "key",
        "key",
        "Observer",
        "data",
        "exports",
        "newData",
        "newData",
        "newData",
        "newData",
        "props",
        "i",
        "props",
        "i",
        "key",
        "props",
        "i",
        "key",
        "newData",
        "key",
        "newData",
        "key",
        "oldData",
        "key",
        "keys",
        "oldData",
        "i",
        "keys",
        "i",
        "key",
        "keys",
        "i",
        "_",
        "key",
        "key",
        "newData",
        "key",
        "keys",
        "newData",
        "i",
        "keys",
        "i",
        "key",
        "keys",
        "i",
        "key",
        "_",
        "key",
        "key",
        "oldData",
        "Observer",
        "newData",
        "exports",
        "key",
        "key",
        "proxyGetter",
        "key",
        "proxySetter",
        "val",
        "key",
        "val",
        "exports",
        "key",
        "key",
        "exports",
        "i",
        "i",
        "i",
        "children",
        "i",
        "children",
        "i",
        "child",
        "child",
        "exports",
        "computed",
        "key",
        "computed",
        "computed",
        "key",
        "userDef",
        "makeComputedGetter",
        "userDef",
        "noop",
        "userDef",
        "userDef",
        "makeComputedGetter",
        "userDef",
        "_",
        "userDef",
        "noop",
        "userDef",
        "_",
        "userDef",
        "noop",
        "key",
        "getter",
        "owner",
        "Watcher",
        "owner",
        "getter",
        "computedGetter",
        "watcher",
        "watcher",
        "Dep",
        "watcher",
        "watcher",
        "exports",
        "methods",
        "key",
        "methods",
        "key",
        "_",
        "methods",
        "key",
        "exports",
        "metas",
        "key",
        "metas",
        "key",
        "metas",
        "key",
        "exports",
        "key",
        "value",
        "Dep",
        "key",
        "metaGetter",
        "Dep",
        "dep",
        "value",
        "metaSetter",
        "val",
        "val",
        "value",
        "value",
        "val",
        "dep",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "arrayMethods",
        "__webpack_require__",
        "value",
        "value",
        "Dep",
        "_",
        "value",
        "_",
        "value",
        "config",
        "_",
        "protoAugment",
        "copyAugment",
        "augment",
        "value",
        "arrayMethods",
        "arrayKeys",
        "value",
        "value",
        "Observer",
        "value",
        "vm",
        "value",
        "value",
        "value",
        "Observer",
        "ob",
        "value",
        "_",
        "value",
        "value",
        "value",
        "ob",
        "Observer",
        "value",
        "ob",
        "vm",
        "ob",
        "vm",
        "ob",
        "Observer",
        "obj",
        "obj",
        "keys",
        "i",
        "keys",
        "i",
        "obj",
        "keys",
        "i",
        "Observer",
        "val",
        "Observer",
        "val",
        "Observer",
        "items",
        "items",
        "i",
        "items",
        "i",
        "Observer",
        "key",
        "val",
        "ob",
        "val",
        "Dep",
        "ob",
        "key",
        "Dep",
        "dep",
        "childOb",
        "childOb",
        "_",
        "val",
        "val",
        "i",
        "l",
        "i",
        "e",
        "val",
        "i",
        "e",
        "e",
        "e",
        "val",
        "newVal",
        "newVal",
        "val",
        "val",
        "newVal",
        "childOb",
        "ob",
        "newVal",
        "dep",
        "Observer",
        "vm",
        "vm",
        "Observer",
        "vm",
        "vm",
        "target",
        "src",
        "target",
        "src",
        "target",
        "src",
        "keys",
        "keys",
        "i",
        "key",
        "keys",
        "i",
        "_",
        "target",
        "key",
        "src",
        "key",
        "Observer",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "arrayProto",
        "method",
        "arrayProto",
        "method",
        "_",
        "arrayMethods",
        "method",
        "mutator",
        "arguments",
        "i",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "original",
        "args",
        "method",
        "inserted",
        "args",
        "inserted",
        "args",
        "inserted",
        "args",
        "inserted",
        "ob",
        "inserted",
        "ob",
        "result",
        "_",
        "arrayProto",
        "$set",
        "index",
        "val",
        "index",
        "index",
        "index",
        "val",
        "_",
        "arrayProto",
        "$remove",
        "index",
        "index",
        "index",
        "_",
        "index",
        "index",
        "index",
        "arrayMethods",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "_",
        "objProto",
        "$add",
        "key",
        "val",
        "key",
        "ob",
        "_",
        "key",
        "key",
        "val",
        "ob",
        "key",
        "val",
        "ob",
        "ob",
        "ob",
        "i",
        "ob",
        "i",
        "vm",
        "key",
        "vm",
        "_",
        "objProto",
        "$set",
        "key",
        "val",
        "key",
        "val",
        "key",
        "val",
        "_",
        "objProto",
        "$delete",
        "key",
        "key",
        "key",
        "ob",
        "_",
        "key",
        "ob",
        "ob",
        "ob",
        "i",
        "ob",
        "i",
        "vm",
        "key",
        "vm",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "el",
        "options",
        "el",
        "options",
        "el",
        "host",
        "el",
        "compiler",
        "el",
        "options",
        "el",
        "compiler",
        "el",
        "options",
        "options",
        "contentLinkFn",
        "ctor",
        "contentLinkFn",
        "contentLinkFn",
        "ctor",
        "compiler",
        "el",
        "options",
        "rootLinker",
        "el",
        "contentLinkFn",
        "contentLinkFn",
        "el",
        "compiler",
        "el",
        "options",
        "el",
        "host",
        "rootUnlinkFn",
        "contentUnlinkFn",
        "options",
        "_",
        "original",
        "el",
        "el",
        "exports",
        "el",
        "el",
        "DocumentFragment",
        "el",
        "el",
        "el",
        "el",
        "exports",
        "name",
        "node",
        "desc",
        "host",
        "Directive",
        "name",
        "node",
        "desc",
        "host",
        "exports",
        "remove",
        "deferCleanup",
        "parent",
        "parent",
        "parent",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "remove",
        "deferCleanup",
        "exports",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "name",
        "el",
        "vm",
        "descriptor",
        "host",
        "name",
        "el",
        "vm",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "host",
        "Directive",
        "config",
        "_",
        "val",
        "oldVal",
        "dir",
        "dir",
        "val",
        "oldVal",
        "_",
        "Watcher",
        "update",
        "preProcess",
        "watcher",
        "watcher",
        "Directive",
        "expression",
        "textParser",
        "expression",
        "tokens",
        "textParser",
        "tokens",
        "exp",
        "exp",
        "Directive",
        "expression",
        "expParser",
        "expression",
        "expParser",
        "expression",
        "fn",
        "vm",
        "vm",
        "handler",
        "vm",
        "handler",
        "handler",
        "Directive",
        "name",
        "name",
        "param",
        "name",
        "param",
        "param",
        "param",
        "Directive",
        "value",
        "value",
        "_",
        "Directive",
        "fn",
        "fn",
        "_",
        "Directive",
        "handler",
        "_",
        "handler",
        "handler",
        "Directive",
        "listeners",
        "i",
        "listeners",
        "i",
        "_",
        "listeners",
        "i",
        "listeners",
        "i",
        "Directive",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "value",
        "oldValue",
        "filters",
        "write",
        "i",
        "l",
        "filters",
        "i",
        "l",
        "i",
        "filters",
        "i",
        "fn",
        "_",
        "_",
        "fn",
        "fn",
        "fn",
        "write",
        "fn",
        "fn",
        "fn",
        "fn",
        "args",
        "write",
        "value",
        "oldValue",
        "value",
        "offset",
        "write",
        "j",
        "k",
        "j",
        "k",
        "j",
        "arg",
        "j",
        "args",
        "j",
        "offset",
        "arg",
        "arg",
        "arg",
        "value",
        "fn",
        "args",
        "value",
        "exports",
        "id",
        "cb",
        "_",
        "id",
        "_",
        "factory",
        "id",
        "factory",
        "factory",
        "factory",
        "cb",
        "factory",
        "factory",
        "factory",
        "cb",
        "factory",
        "factory",
        "cb",
        "factory",
        "resolve",
        "res",
        "_",
        "res",
        "res",
        "_",
        "res",
        "factory",
        "res",
        "cbs",
        "i",
        "l",
        "i",
        "cbs",
        "i",
        "res",
        "reject",
        "reason",
        "_",
        "id",
        "reason",
        "reason",
        "cb",
        "factory",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "exp",
        "expParser",
        "exp",
        "res",
        "res",
        "e",
        "exports",
        "exp",
        "val",
        "expParser",
        "exp",
        "res",
        "res",
        "res",
        "val",
        "exports",
        "key",
        "val",
        "key",
        "val",
        "exports",
        "key",
        "key",
        "exports",
        "exp",
        "cb",
        "options",
        "Watcher",
        "vm",
        "exp",
        "cb",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "cb",
        "vm",
        "watcher",
        "unwatchFn",
        "watcher",
        "exports",
        "text",
        "filterRE",
        "text",
        "dirParser",
        "text",
        "dir",
        "dir",
        "val",
        "dir",
        "val",
        "text",
        "exports",
        "text",
        "textParser",
        "text",
        "tokens",
        "tokens",
        "vm",
        "tokens",
        "tokens",
        "token",
        "token",
        "vm",
        "token",
        "token",
        "text",
        "exports",
        "path",
        "path",
        "Path",
        "path",
        "data",
        "data",
        "data",
        "data",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "fn",
        "_",
        "fn",
        "exports",
        "target",
        "cb",
        "withTransition",
        "insert",
        "target",
        "cb",
        "withTransition",
        "append",
        "transition",
        "exports",
        "target",
        "cb",
        "withTransition",
        "target",
        "query",
        "target",
        "target",
        "target",
        "cb",
        "withTransition",
        "target",
        "cb",
        "withTransition",
        "exports",
        "target",
        "cb",
        "withTransition",
        "insert",
        "target",
        "cb",
        "withTransition",
        "before",
        "transition",
        "exports",
        "target",
        "cb",
        "withTransition",
        "target",
        "query",
        "target",
        "target",
        "target",
        "cb",
        "withTransition",
        "target",
        "cb",
        "withTransition",
        "exports",
        "cb",
        "withTransition",
        "cb",
        "cb",
        "_",
        "inDoc",
        "withTransition",
        "inDoc",
        "cb",
        "cb",
        "op",
        "withTransition",
        "append",
        "transition",
        "blockOp",
        "op",
        "realCb",
        "op",
        "withTransition",
        "remove",
        "transition",
        "op",
        "realCb",
        "vm",
        "target",
        "cb",
        "withTransition",
        "op1",
        "op2",
        "target",
        "query",
        "target",
        "_",
        "target",
        "withTransition",
        "targetIsDetached",
        "op1",
        "op2",
        "targetIsDetached",
        "vm",
        "_",
        "vm",
        "vm",
        "blockOp",
        "vm",
        "target",
        "op",
        "cb",
        "op",
        "vm",
        "target",
        "vm",
        "cb",
        "shouldCallHook",
        "vm",
        "vm",
        "vm",
        "target",
        "op",
        "cb",
        "vm",
        "vm",
        "next",
        "end",
        "next",
        "current",
        "op",
        "current",
        "target",
        "vm",
        "current",
        "next",
        "op",
        "end",
        "target",
        "vm",
        "cb",
        "el",
        "el",
        "el",
        "el",
        "el",
        "target",
        "vm",
        "cb",
        "target",
        "el",
        "cb",
        "cb",
        "el",
        "target",
        "vm",
        "cb",
        "_",
        "el",
        "target",
        "cb",
        "cb",
        "el",
        "vm",
        "cb",
        "_",
        "el",
        "cb",
        "cb",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "fn",
        "fn",
        "modifyListenerCount",
        "exports",
        "fn",
        "on",
        "fn",
        "arguments",
        "on",
        "fn",
        "on",
        "exports",
        "fn",
        "arguments",
        "cbs",
        "cbs",
        "modifyListenerCount",
        "cbs",
        "cbs",
        "cbs",
        "arguments",
        "modifyListenerCount",
        "cbs",
        "cbs",
        "i",
        "cb",
        "cbs",
        "i",
        "cb",
        "fn",
        "cb",
        "fn",
        "modifyListenerCount",
        "cbs",
        "i",
        "exports",
        "cbs",
        "arguments",
        "i",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "i",
        "cbs",
        "cbs",
        "_",
        "cbs",
        "cbs",
        "cbs",
        "i",
        "l",
        "i",
        "cbs",
        "i",
        "args",
        "exports",
        "children",
        "i",
        "l",
        "i",
        "children",
        "i",
        "child",
        "child",
        "arguments",
        "child",
        "child",
        "child",
        "arguments",
        "exports",
        "parent",
        "parent",
        "parent",
        "arguments",
        "parent",
        "parent",
        "parent",
        "vm",
        "count",
        "vm",
        "parent",
        "count",
        "hookRE",
        "parent",
        "parent",
        "parent",
        "count",
        "parent",
        "parent",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "opts",
        "BaseCtor",
        "BaseCtor",
        "BaseCtor",
        "_",
        "opts",
        "opts",
        "opts",
        "opts",
        "BaseCtor",
        "inherit",
        "parent",
        "ChildVue",
        "ctors",
        "BaseCtor",
        "ChildVue",
        "BaseCtor",
        "optionName",
        "_",
        "optionName",
        "ChildVue",
        "className",
        "className",
        "ChildVue",
        "BaseCtor",
        "ChildVue",
        "BaseCtor",
        "ChildVue",
        "opts",
        "ctors",
        "BaseCtor",
        "ChildVue",
        "ChildVue",
        "BaseCtor",
        "opts",
        "parent",
        "opts",
        "parent",
        "ChildVue",
        "opts",
        "child",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "el",
        "_",
        "el",
        "_",
        "el",
        "el",
        "el",
        "el",
        "_",
        "ready",
        "ready",
        "exports",
        "remove",
        "deferCleanup",
        "remove",
        "deferCleanup",
        "exports",
        "el",
        "host",
        "compiler",
        "el",
        "el",
        "host"
    ],
    "literals": [
        "''",
        "'$data'",
        "''",
        "''",
        "'string'",
        "'true'",
        "'false'",
        "''",
        "'$1-$2'",
        "'object'",
        "'[object Object]'",
        "'__proto__'",
        "'undefined'",
        "'[object Object]'",
        "'msie 9.0'",
        "'android'",
        "'WebkitTransition'",
        "'transition'",
        "'webkitTransitionEnd'",
        "'transitionend'",
        "'WebkitAnimation'",
        "'animation'",
        "'webkitAnimationEnd'",
        "'animationend'",
        "'undefined'",
        "'string'",
        "'development'",
        "'production'",
        "'Cannot find element: '",
        "' '",
        "'class'",
        "''",
        "' '",
        "' '",
        "' '",
        "'class'",
        "' '",
        "'class'",
        "''",
        "' '",
        "' '",
        "' '",
        "' '",
        "'class'",
        "'div'",
        "'template'",
        "' '",
        "''",
        "'v-'",
        "'component'",
        "'directive'",
        "'elementDirective'",
        "'filter'",
        "'transition'",
        "'partial'",
        "'{{'",
        "'}}'",
        "'delimiters'",
        "'function'",
        "'development'",
        "'production'",
        "'The \"data\" option should be a function '",
        "'that returns a per-instance value in component '",
        "'definitions.'",
        "'function'",
        "'function'",
        "'function'",
        "'development'",
        "'production'",
        "'The \"el\" option should be a function '",
        "'that returns a per-instance value in component '",
        "'definitions.'",
        "'function'",
        "'development'",
        "'production'",
        "'\"paramAttributes\" option has been deprecated in 0.12. '",
        "'Use \"props\" instead.'",
        "'s'",
        "'development'",
        "'production'",
        "'Do not use built-in HTML elements as component '",
        "'id: '",
        "'string'",
        "'development'",
        "'production'",
        "'Array-syntax assets must provide an id field.'",
        "'component'",
        "'is'",
        "'is'",
        "'components'",
        "'component'",
        "'string'",
        "'number'",
        "'number'",
        "'boolean'",
        "'boolean'",
        "'function'",
        "'function'",
        "'object'",
        "'array'",
        "'development'",
        "'production'",
        "'Invalid prop: type check failed for '",
        "'=\"'",
        "'\".'",
        "' Expected '",
        "', got '",
        "'.'",
        "'development'",
        "'production'",
        "'Invalid prop: custom validator check failed for '",
        "'=\"'",
        "'\"'",
        "'custom type'",
        "'undefined'",
        "'[Vue info]: '",
        "'[Vue warn]: '",
        "'Warning Stack Trace'",
        "'directive'",
        "'with'",
        "'v-with has been deprecated in ^0.12.0. '",
        "'Use props instead.'",
        "'events'",
        "'v-events has been deprecated in ^0.12.0. '",
        "'Pass down methods as callback props instead.'",
        "'Failed to resolve '",
        "': '",
        "'VueComponent'",
        "'super'",
        "'return function '",
        "' (options) { this._init(options) }'",
        "'function'",
        "'s'",
        "'component'",
        "'s'",
        "'repeat'",
        "'if'",
        "'SCRIPT'",
        "'SCRIPT'",
        "'TEXTAREA'",
        "'value'",
        "'v-html'",
        "'html'",
        "' '",
        "'text'",
        "'directives'",
        "'SCRIPT'",
        "'elementDirectives'",
        "''",
        "'component'",
        "'pre'",
        "'directives'",
        "'directive'",
        "'class'",
        "'class'",
        "'attr'",
        "':'",
        "''",
        "'development'",
        "'production'",
        "'Invalid prop key: \"'",
        "'\". Prop keys '",
        "'must be valid identifiers.'",
        "'data-'",
        "'development'",
        "'production'",
        "'Cannot bind two-way prop with non-settable '",
        "'parent path: '",
        "'development'",
        "'production'",
        "'Prop \"'",
        "'\" expects a two-way binding type.'",
        "'development'",
        "'production'",
        "'Missing required prop: '",
        "'prop'",
        "'development'",
        "'production'",
        "'Cannot bind dynamic prop on a root instance'",
        "' with no parent: '",
        "'=\"'",
        "'\"'",
        "''",
        "'default'",
        "'development'",
        "'production'",
        "'Object/Array as default prop values will be shared '",
        "'across multiple instances. Use a factory function '",
        "'to return the default value instead.'",
        "'function'",
        "'\\\\$&'",
        "'?'",
        "'(.+?)'",
        "'?'",
        "'g'",
        "'^'",
        "'.*'",
        "'$'",
        "''",
        "'+'",
        "'\"'",
        "'\"'",
        "'\"'",
        "'\"'",
        "'('",
        "')'",
        "'('",
        "')'",
        "'this._applyFilters('",
        "',null,'",
        "',false)'",
        "'$data'",
        "'hook:created'",
        "'function'",
        "'development'",
        "'production'",
        "'Error when evaluating expression \"'",
        "'\". '",
        "''",
        "'Turn on debug mode to see stack trace.'",
        "'development'",
        "'production'",
        "'Error when evaluating setter \"'",
        "'\"'",
        "'development'",
        "'production'",
        "'[vue] async stack trace'",
        "'development'",
        "'production'",
        "'Math,Date,this,true,false,null,undefined,Infinity,NaN,'",
        "'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,'",
        "'encodeURIComponent,parseInt,parseFloat'",
        "'^('",
        "'\\\\b|'",
        "'\\\\b)'",
        "'break,case,class,catch,const,continue,debugger,default,'",
        "'delete,do,else,export,extends,finally,for,function,if,'",
        "'import,in,instanceof,let,return,super,switch,throw,try,'",
        "'var,while,with,yield,enum,await,implements,package,'",
        "'proctected,static,interface,private,public'",
        "'^('",
        "'\\\\b|'",
        "'\\\\b)'",
        "'\\\\n'",
        "'\"'",
        "'\"'",
        "'\"'",
        "'scope.'",
        "'development'",
        "'production'",
        "'Avoid using reserved keywords in expression: '",
        "''",
        "' '",
        "'['",
        "'.'",
        "'scope'",
        "'return '",
        "';'",
        "'development'",
        "'production'",
        "'Invalid expression. '",
        "'Generated function body: '",
        "'scope'",
        "'value'",
        "'=value;'",
        "'development'",
        "'production'",
        "'Invalid setter function body: '",
        "'Math.'",
        "'ws'",
        "'ident'",
        "'['",
        "'eof'",
        "'ws'",
        "'.'",
        "'['",
        "'eof'",
        "'ws'",
        "'ident'",
        "'ident'",
        "'0'",
        "'number'",
        "'ws'",
        "'.'",
        "'['",
        "'eof'",
        "'ws'",
        "'0'",
        "'number'",
        "'\\''",
        "''",
        "'\"'",
        "''",
        "'ident'",
        "'*'",
        "'ws'",
        "']'",
        "'0'",
        "'number'",
        "'ws'",
        "']'",
        "'\\''",
        "'eof'",
        "'else'",
        "'\"'",
        "'eof'",
        "'else'",
        "'ident'",
        "'0'",
        "'number'",
        "'ws'",
        "']'",
        "'ws'",
        "']'",
        "'eof'",
        "'ident'",
        "'ws'",
        "'ident'",
        "'number'",
        "'else'",
        "'\\''",
        "'\"'",
        "'\\\\'",
        "'else'",
        "'*'",
        "'.'",
        "'['",
        "']'",
        "'*'",
        "'[o'",
        "']'",
        "'[\"'",
        "'\\\\\"'",
        "'\"]'",
        "'return o'",
        "''",
        "'o'",
        "'string'",
        "'*'",
        "'development'",
        "'production'",
        "'You are setting a non-existent path \"'",
        "'\" '",
        "'on a vm instance. Consider pre-initializing the property '",
        "'with the \"data\" option for more reliable reactivity '",
        "'and better performance.'",
        "'development'",
        "'production'",
        "'You may have an infinite update loop for watcher '",
        "'with expression: '",
        "''",
        "''",
        "'<fieldset>'",
        "'</fieldset>'",
        "'<table><tbody>'",
        "'</tbody></table>'",
        "'<table><tbody></tbody><colgroup>'",
        "'</colgroup></table>'",
        "'<table><tbody><tr>'",
        "'</tr></tbody></table>'",
        "'<select multiple=\"multiple\">'",
        "'</select>'",
        "'<table>'",
        "'</table>'",
        "'<svg '",
        "'xmlns=\"http://www.w3.org/2000/svg\" '",
        "'xmlns:xlink=\"http://www.w3.org/1999/xlink\" '",
        "'xmlns:ev=\"http://www.w3.org/2001/xml-events\"'",
        "'version=\"1.1\">'",
        "'</svg>'",
        "'div'",
        "'SCRIPT'",
        "'div'",
        "'<template>1</template>'",
        "'textarea'",
        "'t'",
        "'t'",
        "'template'",
        "'template'",
        "'TEXTAREA'",
        "'textarea'",
        "'textarea'",
        "'string'",
        "'#'",
        "'v-component'",
        "'keep-alive'",
        "'wait-for'",
        "'ref'",
        "'inline-template'",
        "'transition-mode'",
        "'development'",
        "'production'",
        "'cannot mount component \"'",
        "'\" '",
        "'on already mounted element: '",
        "'in-out'",
        "'out-in'",
        "'<content></content>'",
        "'v-start'",
        "'v-end'",
        "'development'",
        "'production'",
        "'You are mounting an instance with a template to '",
        "'<body>. This will replace <body> entirely. You '",
        "'should probably use `replace: false` here.'",
        "'component'",
        "'components'",
        "'component'",
        "'elementDirectives'",
        "'repeat'",
        "'development'",
        "'production'",
        "'Invalid template option: '",
        "'class'",
        "' '",
        "'class'",
        "'if'",
        "'data'",
        "'textContent'",
        "'v-html'",
        "'http://www.w3.org/1999/xlink'",
        "'object'",
        "''",
        "'none'",
        "'enter'",
        "'leave'",
        "'string'",
        "'development'",
        "'production'",
        "'v-ref should only be used on a component root element.'",
        "'hook:compiled'",
        "'cloak'",
        "'-webkit-'",
        "'-moz-'",
        "'-ms-'",
        "'Webkit'",
        "'Moz'",
        "'ms'",
        "'object'",
        "''",
        "'important'",
        "''",
        "''",
        "'$1-$2'",
        "'div'",
        "'transitions'",
        "'v'",
        "'-transition'",
        "'-transition'",
        "'Duration'",
        "'Duration'",
        "'-enter'",
        "'-leave'",
        "'enterNextTick'",
        "'enterDone'",
        "'leaveNextTick'",
        "'leaveDone'",
        "'beforeEnter'",
        "'enter'",
        "'afterEnter'",
        "'beforeLeave'",
        "'leave'",
        "'afterLeave'",
        "'Done'",
        "'0s'",
        "'0s'",
        "'IFRAME'",
        "'load'",
        "'load'",
        "'function'",
        "'development'",
        "'production'",
        "'Directive v-on=\"'",
        "': '",
        "'\" expects a function value, '",
        "'got '",
        "'development'",
        "'production'",
        "'It seems you are using a read-only filter with '",
        "'v-model. You might want to use a two-way filter '",
        "'to ensure correct behavior.'",
        "'INPUT'",
        "'SELECT'",
        "'TEXTAREA'",
        "'development'",
        "'production'",
        "'v-model does not support element type: '",
        "'filters'",
        "'function'",
        "'range'",
        "'lazy'",
        "'number'",
        "'debounce'",
        "'compositionstart'",
        "'compositionend'",
        "'focus'",
        "'blur'",
        "'function'",
        "'change'",
        "'input'",
        "'change'",
        "'input'",
        "'cut'",
        "'keyup'",
        "'value'",
        "'TEXTAREA'",
        "'change'",
        "'input'",
        "'number'",
        "'exp'",
        "'change'",
        "'options'",
        "'number'",
        "'multiple'",
        "'change'",
        "'hook:attached'",
        "'_value'",
        "'hook:attached'",
        "'development'",
        "'production'",
        "'Invalid options value for v-model: '",
        "'option'",
        "'string'",
        "''",
        "'optgroup'",
        "'selected'",
        "'undefined'",
        "'_value'",
        "'true-exp'",
        "'false-exp'",
        "'change'",
        "'__v_repeat_'",
        "'v-repeat-start'",
        "'v-repeat-end'",
        "'track-by'",
        "'stagger'",
        "'enter-stagger'",
        "'leave-stagger'",
        "'ref'",
        "'el'",
        "'development'",
        "'production'",
        "'OPTION'",
        "'Don\\'t use v-repeat for v-model options; '",
        "'use the `options` param instead: '",
        "'http://vuejs.org/guide/forms.html#Dynamic_Select_Options'",
        "'if'",
        "'development'",
        "'production'",
        "'Don\\'t use v-if with v-repeat. '",
        "'Use v-show or the \"filterBy\" filter instead.'",
        "'inline-template'",
        "'components'",
        "'component'",
        "'development'",
        "'production'",
        "'Async resolution is not supported for v-repeat '",
        "'+ dynamic component. (component: '",
        "')'",
        "'object'",
        "'$value'",
        "'development'",
        "'production'",
        "'You seem to be mutating the $value reference of '",
        "'a v-repeat instance (likely through v-model) '",
        "'and filtering the v-repeat at the same time. '",
        "'This will not work properly with an Array of '",
        "'primitive values. Please use an Array of '",
        "'Objects instead.'",
        "'$index'",
        "'$index'",
        "'development'",
        "'production'",
        "'Duplicate track-by key in v-repeat: '",
        "'development'",
        "'production'",
        "'Duplicate objects are not supported in v-repeat '",
        "'when using components or transitions.'",
        "'$index'",
        "'$key'",
        "'$index'",
        "'enter'",
        "'stagger-anchor'",
        "'leave'",
        "'Stagger'",
        "'number'",
        "'string'",
        "'string'",
        "'number'",
        "'boolean'",
        "'v-if-start'",
        "'v-if-end'",
        "''",
        "'development'",
        "'production'",
        "'v-if=\"'",
        "'\" cannot be '",
        "'used on an instance root element.'",
        "'attached'",
        "'detached'",
        "'select'",
        "'hook:compiled'",
        "'v-partial-start'",
        "'v-partial-end'",
        "'name'",
        "'partials'",
        "'partial'",
        "''",
        "'string'",
        "''",
        "''",
        "''",
        "''",
        "'$'",
        "','",
        "''",
        "''",
        "'-'",
        "''",
        "'$1,'",
        "''",
        "'s'",
        "'delete'",
        "'function'",
        "''",
        "'in'",
        "'-1'",
        "'$key'",
        "'$value'",
        "'$value'",
        "'$value'",
        "'created'",
        "'$on'",
        "'$watch'",
        "'function'",
        "'string'",
        "'development'",
        "'production'",
        "'Unknown method: \"'",
        "'\" when '",
        "'registering callback for '",
        "': \"'",
        "'\".'",
        "'object'",
        "'hook:attached'",
        "'hook:detached'",
        "'attached'",
        "'detached'",
        "'hook:'",
        "'development'",
        "'production'",
        "'Props will not be compiled if no `el` option is '",
        "'provided at instantiation.'",
        "'$data'",
        "'function'",
        "'__ob__'",
        "'__ob__'",
        "'push'",
        "'pop'",
        "'shift'",
        "'unshift'",
        "'splice'",
        "'sort'",
        "'reverse'",
        "'push'",
        "'unshift'",
        "'splice'",
        "'$set'",
        "'$remove'",
        "'number'",
        "'$add'",
        "'$set'",
        "'$delete'",
        "''",
        "'beforeCompile'",
        "'beforeDestroy'",
        "'destroyed'",
        "'cloak'",
        "'function'",
        "'Directive.set() can only be used inside twoWay'",
        "'directives.'",
        "'filters'",
        "'filter'",
        "'function'",
        "'components'",
        "'component'",
        "'development'",
        "'production'",
        "'Failed to resolve async component: '",
        "'. '",
        "'\\nReason: '",
        "''",
        "''",
        "'detached'",
        "'attached'",
        "'string'",
        "'VueComponent'",
        "'return function '",
        "' (options) {'",
        "'this.constructor = '",
        "';'",
        "'this._init(options) }'",
        "'development'",
        "'production'",
        "'$mount() should be called only once.'",
        "'div'",
        "'compiled'",
        "'attached'",
        "'hook:attached'",
        "'ready'"
    ],
    "variables": [
        "installedModules",
        "_",
        "extend",
        "p",
        "lang",
        "extend",
        "c",
        "parsed",
        "a",
        "b",
        "classifyRE",
        "l",
        "i",
        "ret",
        "toString",
        "timeout",
        "args",
        "context",
        "timestamp",
        "result",
        "later",
        "last",
        "i",
        "l",
        "cb",
        "inBrowser",
        "isWebkitTrans",
        "isWebkitAnim",
        "callbacks",
        "pending",
        "timerFunc",
        "copies",
        "i",
        "counter",
        "observer",
        "textNode",
        "func",
        "_",
        "config",
        "selector",
        "el",
        "doc",
        "parent",
        "val",
        "parent",
        "cur",
        "cur",
        "tar",
        "child",
        "rawContent",
        "delimiters",
        "_",
        "config",
        "extend",
        "strats",
        "key",
        "toVal",
        "fromVal",
        "instanceData",
        "defaultData",
        "ret",
        "res",
        "ret",
        "parent",
        "child",
        "ret",
        "defaultStrat",
        "components",
        "ids",
        "i",
        "l",
        "key",
        "props",
        "val",
        "res",
        "i",
        "asset",
        "id",
        "options",
        "key",
        "i",
        "l",
        "strat",
        "camelizedId",
        "pascalizedId",
        "assets",
        "asset",
        "_",
        "tag",
        "exp",
        "key",
        "options",
        "valid",
        "expectedType",
        "validator",
        "config",
        "hasConsole",
        "_",
        "config",
        "cid",
        "Super",
        "Sub",
        "args",
        "_",
        "_",
        "compileProps",
        "config",
        "textParser",
        "dirParser",
        "templateParser",
        "resolveAsset",
        "componentDef",
        "terminalDirectives",
        "nodeLinkFn",
        "childLinkFn",
        "childNodes",
        "dirs",
        "originalDirCount",
        "i",
        "propsLinkFn",
        "propDirs",
        "containerAttrs",
        "replacerAttrs",
        "contextLinkFn",
        "replacerLinkFn",
        "context",
        "contextDirs",
        "selfDirs",
        "linkFn",
        "hasAttrs",
        "tokens",
        "frag",
        "el",
        "token",
        "i",
        "l",
        "el",
        "fragClone",
        "childNodes",
        "token",
        "value",
        "node",
        "i",
        "l",
        "linkFns",
        "nodeLinkFn",
        "childLinkFn",
        "node",
        "i",
        "l",
        "node",
        "nodeLinkFn",
        "childrenLinkFn",
        "i",
        "n",
        "l",
        "childNodes",
        "tag",
        "componentId",
        "componentLinkFn",
        "value",
        "dirName",
        "i",
        "l",
        "descriptor",
        "fn",
        "i",
        "dirs",
        "attr",
        "name",
        "value",
        "dir",
        "dirName",
        "dirDef",
        "i",
        "dir",
        "j",
        "k",
        "tokens",
        "isClass",
        "dirName",
        "i",
        "allOneTime",
        "token",
        "exp",
        "desc",
        "_",
        "textParser",
        "propDef",
        "propBindingModes",
        "identRE",
        "dataAttrRE",
        "settablePathRE",
        "literalValueRE",
        "props",
        "i",
        "options",
        "name",
        "attr",
        "value",
        "path",
        "prop",
        "literal",
        "single",
        "tokens",
        "i",
        "prop",
        "path",
        "options",
        "value",
        "raw",
        "Cache",
        "config",
        "dirParser",
        "regexEscapeRE",
        "cache",
        "tagRE",
        "htmlRE",
        "firstChar",
        "lastChar",
        "open",
        "close",
        "firstCharRE",
        "lastCharRE",
        "openRE",
        "closeRE",
        "hit",
        "tokens",
        "lastIndex",
        "match",
        "index",
        "value",
        "first",
        "oneTime",
        "twoWay",
        "filterRE",
        "dir",
        "p",
        "entry",
        "entry",
        "entry",
        "_",
        "Cache",
        "cache",
        "argRE",
        "filterTokenRE",
        "reservedArgRE",
        "c",
        "i",
        "l",
        "inSingle",
        "inDouble",
        "curly",
        "square",
        "paren",
        "begin",
        "argIndex",
        "dirs",
        "dir",
        "lastFilterIndex",
        "arg",
        "exp",
        "tokens",
        "stripped",
        "dynamic",
        "hit",
        "_",
        "Watcher",
        "bindingModes",
        "child",
        "parent",
        "prop",
        "childKey",
        "parentKey",
        "value",
        "_",
        "config",
        "Dep",
        "expParser",
        "batcher",
        "uid",
        "isFn",
        "res",
        "newDeps",
        "old",
        "i",
        "vm",
        "value",
        "vm",
        "i",
        "dep",
        "value",
        "oldValue",
        "prevError",
        "current",
        "i",
        "i",
        "key",
        "val",
        "i",
        "_",
        "subs",
        "i",
        "l",
        "_",
        "Path",
        "Cache",
        "expressionCache",
        "allowedKeywords",
        "allowedKeywordsRE",
        "improperKeywords",
        "improperKeywordsRE",
        "wsRE",
        "newlineRE",
        "saveRE",
        "restoreRE",
        "pathTestRE",
        "pathReplaceRE",
        "booleanLiteralRE",
        "saved",
        "i",
        "c",
        "path",
        "body",
        "getter",
        "getter",
        "path",
        "hit",
        "res",
        "_",
        "Cache",
        "pathCache",
        "identRE",
        "APPEND",
        "PUSH",
        "BEFORE_PATH",
        "IN_PATH",
        "BEFORE_IDENT",
        "IN_IDENT",
        "BEFORE_ELEMENT",
        "AFTER_ZERO",
        "IN_INDEX",
        "IN_SINGLE_QUOTE",
        "IN_DOUBLE_QUOTE",
        "IN_SUB_PATH",
        "AFTER_ELEMENT",
        "AFTER_PATH",
        "ERROR",
        "pathStateMachine",
        "code",
        "keys",
        "index",
        "mode",
        "BEFORE_PATH",
        "c",
        "newChar",
        "key",
        "transition",
        "action",
        "typeMap",
        "actions",
        "nextChar",
        "body",
        "hit",
        "original",
        "obj",
        "last",
        "key",
        "i",
        "l",
        "_",
        "config",
        "queue",
        "userQueue",
        "has",
        "circular",
        "waiting",
        "internalQueueDepleted",
        "i",
        "watcher",
        "id",
        "id",
        "q",
        "_",
        "Cache",
        "templateCache",
        "idSelectorCache",
        "tagRE",
        "entityRE",
        "hit",
        "frag",
        "tagMatch",
        "entityMatch",
        "tag",
        "wrap",
        "depth",
        "prefix",
        "suffix",
        "node",
        "child",
        "clone",
        "frag",
        "child",
        "hasBrokenTemplate",
        "a",
        "hasTextareaCloneBug",
        "t",
        "res",
        "i",
        "original",
        "cloned",
        "clone",
        "res",
        "node",
        "frag",
        "_",
        "config",
        "templateParser",
        "anchor",
        "options",
        "waitFor",
        "child",
        "options",
        "waitFor",
        "cached",
        "newComponent",
        "cached",
        "options",
        "parent",
        "child",
        "child",
        "keepAlive",
        "current",
        "refID",
        "child",
        "refID",
        "_",
        "config",
        "templateParser",
        "template",
        "frag",
        "replacer",
        "tag",
        "attrs",
        "i",
        "name",
        "value",
        "_",
        "_",
        "templateParser",
        "i",
        "frag",
        "xlinkNS",
        "xlinkRE",
        "inputProps",
        "cache",
        "attr",
        "val",
        "transition",
        "el",
        "_",
        "nodes",
        "i",
        "l",
        "node",
        "next",
        "apply",
        "transition",
        "action",
        "_",
        "addClass",
        "removeClass",
        "raw",
        "keys",
        "i",
        "l",
        "key",
        "i",
        "key",
        "res",
        "keys",
        "i",
        "_",
        "vm",
        "config",
        "el",
        "_",
        "prefixes",
        "camelPrefixes",
        "importantRE",
        "camelRE",
        "testEl",
        "propCache",
        "cache",
        "prop",
        "val",
        "isImportant",
        "res",
        "camel",
        "upper",
        "i",
        "prefixed",
        "_",
        "Transition",
        "el",
        "vm",
        "hooks",
        "_",
        "queue",
        "addClass",
        "removeClass",
        "transitionEndEvent",
        "animationEndEvent",
        "transDurationProp",
        "animDurationProp",
        "TYPE_TRANSITION",
        "TYPE_ANIMATION",
        "uid",
        "p",
        "enterDone",
        "hasPending",
        "hook",
        "inlineStyles",
        "computedStyles",
        "transDuration",
        "animDuration",
        "el",
        "onEnd",
        "_",
        "queue",
        "queued",
        "f",
        "i",
        "_",
        "vm",
        "res",
        "el",
        "_",
        "handlers",
        "el",
        "tag",
        "handler",
        "filters",
        "i",
        "_",
        "el",
        "isRange",
        "lazy",
        "number",
        "debounce",
        "composing",
        "val",
        "el",
        "_",
        "el",
        "number",
        "expression",
        "val",
        "_",
        "Watcher",
        "dirParser",
        "el",
        "optionsParam",
        "value",
        "el",
        "multi",
        "options",
        "i",
        "op",
        "val",
        "el",
        "defaultOption",
        "descriptor",
        "i",
        "option",
        "op",
        "el",
        "i",
        "l",
        "initValue",
        "options",
        "i",
        "l",
        "res",
        "op",
        "val",
        "i",
        "l",
        "i",
        "_",
        "el",
        "trueExp",
        "falseExp",
        "val",
        "_",
        "config",
        "isObject",
        "isPlainObject",
        "textParser",
        "expParser",
        "templateParser",
        "compiler",
        "uid",
        "UNRESOLVED",
        "PENDING",
        "RESOLVED",
        "ABORTED",
        "inMatch",
        "stagger",
        "options",
        "id",
        "copy",
        "tokens",
        "componentExp",
        "context",
        "key",
        "id",
        "Component",
        "state",
        "idKey",
        "converted",
        "start",
        "end",
        "inDoc",
        "alias",
        "init",
        "vms",
        "obj",
        "raw",
        "vm",
        "i",
        "l",
        "primitive",
        "removalIndex",
        "totalRemoved",
        "targetPrev",
        "prevEl",
        "currentPrev",
        "insertionIndex",
        "meta",
        "raw",
        "alias",
        "Component",
        "parent",
        "vm",
        "dir",
        "i",
        "vm",
        "idKey",
        "cache",
        "primitive",
        "id",
        "idKey",
        "primitive",
        "id",
        "data",
        "idKey",
        "index",
        "key",
        "primitive",
        "id",
        "staggerAmount",
        "anchor",
        "op",
        "staggerAmount",
        "op",
        "transition",
        "hooks",
        "hook",
        "keys",
        "i",
        "res",
        "key",
        "el",
        "i",
        "ret",
        "i",
        "l",
        "_",
        "compiler",
        "templateParser",
        "transition",
        "Cache",
        "cache",
        "el",
        "cacheId",
        "vm",
        "children",
        "children",
        "vm",
        "start",
        "end",
        "cur",
        "start",
        "next",
        "_",
        "clone",
        "vm",
        "host",
        "vm",
        "raw",
        "content",
        "context",
        "selector",
        "compileDefaultContent",
        "nodes",
        "frag",
        "i",
        "l",
        "node",
        "_",
        "templateParser",
        "textParser",
        "compiler",
        "Cache",
        "cache",
        "vIf",
        "el",
        "id",
        "tokens",
        "exp",
        "partial",
        "frag",
        "cacheId",
        "linker",
        "hit",
        "linker",
        "_",
        "digitsRE",
        "stringified",
        "_int",
        "i",
        "head",
        "_float",
        "sign",
        "args",
        "keyCodes",
        "code",
        "_",
        "Path",
        "n",
        "keys",
        "order",
        "i",
        "mergeOptions",
        "_",
        "inDoc",
        "options",
        "handlers",
        "key",
        "i",
        "j",
        "methods",
        "method",
        "handlers",
        "i",
        "j",
        "_",
        "compiler",
        "Observer",
        "Dep",
        "Watcher",
        "options",
        "el",
        "props",
        "propsData",
        "optionsDataFn",
        "optionsData",
        "data",
        "keys",
        "i",
        "key",
        "oldData",
        "keys",
        "key",
        "i",
        "props",
        "i",
        "children",
        "child",
        "computed",
        "userDef",
        "watcher",
        "methods",
        "metas",
        "dep",
        "_",
        "config",
        "Dep",
        "arrayMethods",
        "arrayKeys",
        "augment",
        "ob",
        "keys",
        "i",
        "i",
        "ob",
        "childOb",
        "dep",
        "e",
        "i",
        "l",
        "i",
        "key",
        "_",
        "arrayProto",
        "arrayMethods",
        "original",
        "i",
        "args",
        "result",
        "ob",
        "inserted",
        "_",
        "objProto",
        "ob",
        "i",
        "vm",
        "ob",
        "i",
        "vm",
        "_",
        "Directive",
        "compiler",
        "options",
        "host",
        "original",
        "el",
        "rootLinker",
        "contentLinkFn",
        "ctor",
        "rootUnlinkFn",
        "contentUnlinkFn",
        "i",
        "parent",
        "_",
        "config",
        "Watcher",
        "textParser",
        "expParser",
        "dir",
        "update",
        "preProcess",
        "watcher",
        "expression",
        "tokens",
        "exp",
        "expression",
        "fn",
        "vm",
        "handler",
        "param",
        "listeners",
        "i",
        "_",
        "fn",
        "args",
        "arg",
        "offset",
        "i",
        "l",
        "j",
        "k",
        "factory",
        "cbs",
        "i",
        "l",
        "Watcher",
        "Path",
        "textParser",
        "dirParser",
        "expParser",
        "filterRE",
        "res",
        "res",
        "vm",
        "watcher",
        "dir",
        "val",
        "tokens",
        "vm",
        "data",
        "_",
        "transition",
        "inDoc",
        "op",
        "realCb",
        "targetIsDetached",
        "op",
        "shouldCallHook",
        "current",
        "end",
        "next",
        "_",
        "cbs",
        "cb",
        "i",
        "cbs",
        "i",
        "args",
        "l",
        "children",
        "i",
        "l",
        "child",
        "parent",
        "hookRE",
        "parent",
        "_",
        "parent",
        "ChildVue",
        "inherit",
        "ctors",
        "optionName",
        "className",
        "child",
        "_",
        "compiler"
    ],
    "comments": [
        "!\n * Vue.js v0.12.12\n * (c) 2015 Evan You\n * Released under the MIT License.",
        "webpackBootstrap",
        "The module cache",
        "The require function",
        "Check if module is in cache",
        "Create a new module (and put it into the cache)",
        "Execute the module function",
        "Flag the module as loaded",
        "Return the exports of the module",
        "expose the modules object (__webpack_modules__)",
        "expose the module cache",
        "__webpack_public_path__",
        "Load entry module and return exports",
        "eslint-disable eqeqeq",
        "eslint-enable eqeqeq",
        "can we use __proto__?",
        "Browser environment sniffing",
        "Transition property/event sniffing",
        "istanbul ignore if",
        "istanbul ignore if",
        "eslint-disable no-cond-assign",
        "eslint-enable no-cond-assign",
        "in a Vue.extend merge, both should be functions",
        "when parentVal & childVal are both present,",
        "we need to return a function that returns the",
        "merged result of both functions... no need to",
        "check if parentVal is a function here because",
        "it has to be a function to pass previous merges.",
        "instance merge",
        "invoke the element factory if this is instance merge",
        "istanbul ignore next",
        "dynamic syntax",
        "eslint-disable no-cond-assign",
        "eslint-enable no-cond-assign",
        "if a prop is not provided and is not required,",
        "skip the check.",
        "istanbul ignore if",
        "istanbul ignore if",
        "allow further extension",
        "create asset registers, so extended classes",
        "can have their private assets too.",
        "additional parameters",
        "terminal directives",
        "link function for the node itself.",
        "link function for the childNodes",
        "cache childNodes before linking parent, fix #657",
        "link",
        "only need to compile other attributes for",
        "non-fragment instances",
        "for components, container and replacer need to be",
        "compiled separately and linked in different scopes.",
        "2. container attributes",
        "3. replacer attributes",
        "non-component, just compile as a normal element.",
        "link context scope dirs",
        "link self",
        "return the unlink function that tearsdown context",
        "container directives.",
        "preprocess textareas.",
        "textarea treats its text content as the initial value.",
        "just bind it as a v-attr directive for value.",
        "check terminal directives (repeat & if)",
        "check element directives",
        "check component",
        "normal directives",
        "IE will clean up empty textNodes during",
        "frag.cloneNode(true), so we have to give it",
        "something here...",
        "cache childNodes before linking parent, fix #657",
        "no need to call resolveAsset since terminal directives",
        "are always internal",
        "sort by priority, LOW to HIGH",
        "reverse apply because it's sorted low to high",
        "custom link fn",
        "regexes",
        "props could contain dashes, which will be",
        "interpreted as minus calculations by the parser",
        "so we need to camelize the path here",
        "create a prop descriptor",
        "important so that this doesn't get compiled",
        "again as a normal attribute binding",
        "check prop binding type.",
        "one time: {{* prop}}",
        "store resolved props info",
        "initialize absent prop",
        "dynamic prop",
        "one time binding",
        "dynamic binding",
        "literal, cast it and just set once",
        "do not cast emptry string.",
        "_.toNumber casts empty string to 0.",
        "no default, return undefined",
        "absent boolean value defaults to false",
        "warn against non-factory defaults for Object & Array",
        "call factory function for non-Function types",
        "reset cache",
        "eslint-disable no-cond-assign",
        "eslint-enable no-cond-assign",
        "push text token",
        "tag token",
        "@",
        "value",
        "oldValue (null for read)",
        "filter descriptors",
        "write?",
        "HEAD--------------TAIL",
        "<.older   .newer>",
        "<--- add direction --",
        "A  B  C  <D>  E",
        "D --x",
        "D. --> E",
        "E. <-- D",
        "reset parser state",
        "check single quote",
        "check double quote",
        "comma",
        "reached the end of a directive",
        "reset & skip the comma",
        "colon",
        "argument",
        "test for valid argument here",
        "since we may have caught stuff like first half of",
        "an object literal or a ternary expression.",
        "pipe",
        "first filter, end of expression",
        "already has filter",
        "\"",
        "'",
        "(",
        ")",
        "[",
        "]",
        "{",
        "}",
        "NOTE: the prop internal directive is compiled and linked",
        "during _initScope(), before the created hook is called.",
        "The purpose is to make the initial prop values available",
        "inside `created` hooks and `data` functions.",
        "passed in from compiler directly",
        "set the child initial value.",
        "setup two-way binding",
        "important: defer the child watcher creation until",
        "the created hook (after data observation)",
        "mix in options",
        "uid for batching",
        "for lazy watchers",
        "for async error stacks",
        "parse expression for getter/setter",
        "state for avoiding false triggers for deep and Array",
        "watchers during vm._digest()",
        "\"touch\" every property so they are all tracked as",
        "dependencies for deep watching",
        "if queued, only overwrite shallow with non-shallow,",
        "but not the other way around.",
        "record before-push error stack in debug mode",
        "istanbul ignore if",
        "set new value",
        "in debug + async mode, when a watcher callbacks",
        "throws, we also throw the saved before-push error",
        "so the full cross-tick stack trace is available.",
        "istanbul ignore if",
        "avoid overwriting another watcher that is being",
        "collected.",
        "remove self from vm's watcher list",
        "we can skip this if the vm if being destroyed",
        "which can improve teardown performance.",
        "the current target watcher being evaluated.",
        "this is globally unique because there could be only one",
        "watcher being evaluated at any time.",
        "stablize the subscriber list first",
        "keywords that don't make sense inside expressions",
        "reset state",
        "save strings and object literal keys",
        "rewrite all paths",
        "pad 1 space here becaue the regex matches 1 extra char",
        "really simple path",
        "do the real parsing",
        "always generate setter for simple paths",
        "try cache",
        "we do a simple path check to optimize for them.",
        "the check fails valid paths with unusal whitespaces,",
        "but that's too rare and we don't care.",
        "also skip boolean literals and paths that start with",
        "global \"Math\"",
        "don't treat true/false as paths",
        "Math constants e.g. Math.PI, Math.E etc.",
        "actions",
        "states",
        "[",
        "]",
        ".",
        "\"",
        "'",
        "0",
        "_",
        "$",
        "Space",
        "Tab",
        "Newline",
        "Return",
        "No-break space",
        "Byte Order Mark",
        "Line Separator",
        "Paragraph Separator",
        "a-z, A-Z",
        "1-9",
        "parse error",
        "identifier",
        "bracket index",
        "bracket string",
        "we have two separate queues: one for directive updates",
        "and one for user watcher registered via $watch().",
        "we want to guarantee directive updates to be called",
        "before user watchers so that when user watchers are",
        "triggered, the DOM would have already been in updated",
        "state.",
        "do not cache length because more watchers might be pushed",
        "as we run existing watchers",
        "in dev build, check and stop circular updates.",
        "if an internal watcher is pushed, but the internal",
        "queue is already depleted, we run it immediately.",
        "push watcher into appropriate queue",
        "queue the flush",
        "try a cache hit first",
        "text only, return a single text node.",
        "eslint-disable no-cond-assign",
        "eslint-enable no-cond-assign",
        "if its a template tag and the browser supports it,",
        "its content is already a document fragment.",
        "script template",
        "normal node, clone it to avoid mutating the original",
        "eslint-disable no-cond-assign",
        "eslint-enable no-cond-assign",
        "Test for the presence of the Safari template cloning bug",
        "https://bugs.webkit.org/show_bug.cgi?id=137755",
        "Test for IE10/11 textarea placeholder clone bug",
        "istanbul ignore if",
        "istanbul ignore if",
        "if the template is already a document fragment,",
        "do nothing",
        "id selector",
        "id selector can be cached too",
        "save selector to cache",
        "normal string template",
        "a direct node",
        "create a ref anchor",
        "check keep-alive options.",
        "If yes, instead of destroying the active vm when",
        "hiding (v-if) or switching (dynamic literal) it,",
        "we simply remove it from the DOM and save it in a",
        "cache object, with its constructor id as the key.",
        "wait for event before insertion",
        "check ref",
        "check inline-template",
        "extract inline template as a DocumentFragment",
        "component resolution related state",
        "transition related state",
        "if static, build right now.",
        "check dynamic component params",
        "wait-for",
        "just remove current",
        "default options",
        "if no inline-template, then the compiled",
        "linker can be cached for better performance.",
        "extra options",
        "the sole purpose of `deferCleanup` is so that we can",
        "\"deactivate\" the vm right now and perform DOM removal",
        "later.",
        "we may have a component switch when a previous",
        "component is still being transitioned out.",
        "we want to trigger only one lastest insertion cb",
        "when the existing transition finishes. (#1119)",
        "Do not defer cleanup when unbinding",
        "destroy all keep-alive cached instances",
        "extract container attributes to pass them down",
        "to compiler, because they need to be compiled in",
        "parent scope. we are mutating the options object here",
        "assuming the same object will be used for compile",
        "right after this.",
        "for template tags, what we want is its content as",
        "a documentFragment (for fragment instances)",
        "anchors for fragment instance",
        "passing in `persist: true` to avoid them being",
        "discarded by IE during template cloning",
        "istanbul ignore if",
        "there are many cases where the instance must",
        "become a fragment instance: basically anything that",
        "can create more than 1 root nodes.",
        "multi-children template",
        "non-element template",
        "single nested component",
        "element directive",
        "repeat block",
        "manipulation directives",
        "event listener directives",
        "logic control directives",
        "internal directives that should not be used directly",
        "but we still want to expose them for advanced usage.",
        "a comment node means this is a binding for",
        "{{{ inline unescaped html }}}",
        "hold nodes",
        "replace the placeholder with proper anchor",
        "remove old nodes",
        "convert new value to a fragment",
        "do not attempt to retrieve from id selector",
        "save a reference to these nodes so we can remove later",
        "xlink",
        "cache object attrs so that only changed attrs",
        "are actually updated.",
        "skip transitions for initial compile",
        "interpolations like class=\"{{abc}}\" are converted",
        "to v-class, and we need to remove the raw,",
        "uninterpolated className at binding time.",
        "single toggle",
        "If we get here, it means this is a `v-ref` on a",
        "child, because parent scope `v-ref` is stripped in",
        "`v-component` already. So we just record our own ref",
        "here - it will overwrite parent ref in `v-component`,",
        "if any.",
        "cache object styles so that only changed props",
        "are actually updated.",
        "unsupported prop",
        "cast possible numbers/booleans into strings",
        "async state",
        "bind",
        "trigger transition by removing enter class now",
        "only need to handle leaveDone if",
        "1. the transition is already done (synchronously called",
        "by the user, which causes this.op set to null)",
        "2. there's no explicit js callback",
        "if a CSS transition leaves immediately after enter,",
        "the transitionend event never fires. therefore we",
        "detect such cases and end the leave immediately.",
        "istanbul ignore if",
        "skip CSS transitions if page is not visible -",
        "this solves the issue of transitionend events not",
        "firing until the page is visible again.",
        "pageVisibility API is supported in IE10+, same as",
        "CSS transitions.",
        "Force layout",
        "dummy return, so js linters don't complain about",
        "unused variable f",
        "deal with iframes",
        "friendly warning...",
        "check params",
        "- lazy: update model on \"change\" instead of \"input\"",
        "- number: cast value into number when updating model.",
        "- debounce: debounce the input listener",
        "handle composition events.",
        "http://blog.evanyou.me/2014/01/03/composition-event/",
        "skip this for Android because it handles composition",
        "events quite differently. Android doesn't trigger",
        "composition events for language input methods e.g.",
        "Chinese, but instead triggers them for spelling",
        "suggestions... (see Discussion/#162)",
        "in IE11 the \"compositionend\" event fires AFTER",
        "the \"input\" event, so the input handler is blocked",
        "at the end... have to call it here.",
        "prevent messing with the input when user is typing,",
        "and force update on blur.",
        "Now attach the main listener",
        "force update on next tick to avoid lock & same value",
        "also only update when user is not typing",
        "Support jQuery events, since jQuery.trigger() doesn't",
        "trigger native events in some cases and some plugins",
        "rely on $.trigger()",
        "",
        "We want to make sure if a listener is attached using",
        "jQuery, it is also removed with jQuery, that's why",
        "we do the check for each directive instance and",
        "store that check result on itself. This also allows",
        "easier test coverage control by unsetting the global",
        "jQuery variable in tests.",
        "IE9 doesn't fire input event on backspace/del/cut",
        "set initial value if present",
        "method to force update DOM using latest value.",
        "check options param",
        "attach listener",
        "check initial value (inline selected attribute)",
        "All major browsers except Firefox resets",
        "selectedIndex with value -1 to 0 when the element",
        "is appended to a new parent, therefore we have to",
        "force a DOM update whenever that happens...",
        "eslint-disable eqeqeq",
        "eslint-enable eqeqeq",
        "clear old options.",
        "cannot reset innerHTML here because IE family get",
        "confused during compilation.",
        "update with initial value",
        "object values gets serialized when set as value,",
        "so we store the raw value as a different property",
        "async component resolution states",
        "support for item in array syntax",
        "uid as a cache identifier",
        "setup anchor nodes",
        "check if this is a block repeat",
        "check for trackby param",
        "check for transition stagger",
        "check for v-ref/v-el",
        "check other directives that need to be handled",
        "at v-repeat level",
        "create cache object",
        "some helpful tips...",
        "istanbul ignore if",
        "default constructor",
        "inline repeats should inherit",
        "important: transclude with no options, just",
        "to ensure block start and block end",
        "check inline-template",
        "extract inline template as a DocumentFragment",
        "dynamic component to be resolved later",
        "static",
        "create a temporary context object and copy data",
        "and meta properties onto it.",
        "use _.define to avoid accidentally overwriting scope",
        "properties.",
        "once resolved, it will call realUpdate",
        "update v-ref",
        "First pass, go through the new Array and fill up",
        "the new vms array. If a piece of data has a cached",
        "instance for it, we reuse it. Otherwise build a new",
        "instance.",
        "reusable instance",
        "update $index",
        "update data for track-by or object repeat,",
        "since in these two cases the data is replaced",
        "rather than mutated.",
        "new instance",
        "insert if this is first run",
        "if this is the first run, we're done.",
        "Second pass, go through the old vm instances and",
        "destroy those who are not reused (and remove them",
        "from cache)",
        "defer cleanup until removal",
        "final pass, move/insert new instances into the",
        "right place.",
        "this is the vm that we should be after",
        "new instance, or still in stagger.",
        "insert with updated stagger index.",
        "non-object values",
        "default",
        "resolve constructor",
        "repeater meta, e.g. $index, $key",
        "mark this as an inline-repeat instance",
        "is this a component?",
        "linker cachable if no inline-template",
        "pre-compiled linker for simple repeats",
        "identifier, shows that this vm belongs to this collection",
        "transclusion content owner",
        "cache instance",
        "sync back changes for two-way bindings of primitive values",
        "fix #948: avoid accidentally fall through to",
        "a parent repeater which happens to have $key.",
        "create an anchor and insert it synchronously,",
        "so that we can resolve the correct order without",
        "worrying about some elements not inserted yet",
        "it's not possible for the same vm to be removed",
        "twice, so if we have a pending stagger callback,",
        "it means this vm is queued for enter but removed",
        "before its transition started. Since it is already",
        "destroyed, we can just leave it in detached state.",
        "regardless of type, store the un-filtered raw value.",
        "convert plain object to array.",
        "istanbul ignore if",
        "compile the nested partial",
        "partial",
        "avoid duplicate compiles, since update() can be",
        "called with different truthy values",
        "call attached for all the child components created",
        "during the compilation",
        "collect children beforehand",
        "This is the elementDirective that handles <content>",
        "transclusions. It relies on the raw content of an",
        "instance being stored as `$options._content` during",
        "the transclude phase.",
        "we need find the content context, which is the",
        "closest non-inline-repeater instance.",
        "Default content",
        "defer until the end of instance compilation,",
        "because the default outlet must wait until all",
        "other possible outlets with selectors have picked",
        "out their contents.",
        "select content",
        "if this is the main outlet, we want to skip all",
        "previously selected nodes;",
        "otherwise, we want to mark the node as selected.",
        "clone the node so the original raw content remains",
        "intact. this ensures proper re-compilation in cases",
        "where the outlet is inside a conditional block",
        "v-partial reuses logic from v-if",
        "dynamic partial",
        "static partial",
        "cache partials based on constructor id.",
        "this is provided by v-if",
        "expose keycode hash",
        "cast to lowercase string",
        "allow optional `in` delimiter",
        "because why not",
        "extract and flatten keys",
        "sort on a copy to avoid mutating original array",
        "child vm references",
        "element references",
        "all watchers as an array",
        "all directives",
        "inherit:true constructors",
        "a flag to avoid this being observed",
        "events bookkeeping",
        "registered callbacks",
        "for $broadcast optimization",
        "for event cancellation",
        "fragment instance properties",
        "@type {CommentNode}",
        "@type {CommentNode}",
        "lifecycle state",
        "context: the scope in which the component was used,",
        "and the scope in which props and contents of this",
        "instance should be compiled in.",
        "push self into parent / transclusion host",
        "props used in v-repeat diffing",
        "merge options.",
        "initialize data as empty object.",
        "it will be filled up in _initScope().",
        "initialize data observation and scope inheritance.",
        "setup event system and option events.",
        "call created hook",
        "if `el` option is passed, start compilation.",
        "make sure to convert string selectors into element now",
        "proxy data on instance",
        "observe data",
        "copy props.",
        "this should only happen during a v-repeat of component",
        "that also happens to have compiled props.",
        "unproxy keys not present in new data",
        "proxy keys not already proxied,",
        "and trigger change for changed values",
        "new property",
        "need to store ref to self here",
        "because these getter/setters might",
        "be called by child instances!",
        "shallow updates",
        "Static methods",
        "Instance methods",
        "helpers",
        "cache original method",
        "avoid leaking arguments:",
        "http://jsperf.com/closure-with-arguments",
        "notify change",
        "istanbul ignore if",
        "pre-transcluded with linker, just use it",
        "transclude and init element",
        "transclude can potentially replace original",
        "so we need to keep reference; this step also injects",
        "the template and caches the original attributes",
        "on the container node and replacer node.",
        "root is always compiled per-instance, because",
        "container attrs and props can be different every time.",
        "compile and link the rest",
        "component compilation can be cached",
        "as long as it's not using inline-template",
        "link phase",
        "register composite unlink function",
        "to be called during instance destruction",
        "passing destroying: true to avoid searching and",
        "splicing the directives",
        "finally replace original",
        "set persisted text anchors to empty",
        "remove self from parent. only necessary",
        "if parent is not being destroyed as well.",
        "destroy all children.",
        "teardown props",
        "teardown all directives. this also tearsdown all",
        "directive-owned watchers.",
        "remove reference to self on $el",
        "remove DOM element",
        "remove reference from data ob",
        "frozen object may not have observer.",
        "Clean up references to private properties and other",
        "instances. preserve reference to _data so that proxy",
        "accessors still work. The only potential side effect",
        "here is that mutating the instance after it's destroyed",
        "may affect the state of other components that are still",
        "observing the same object, but that seems to be a",
        "reasonable responsibility for the user rather than",
        "always throwing an error on them.",
        "call the last hook...",
        "turn off all instance listeners.",
        "public",
        "copy descriptor props",
        "private",
        "init",
        "wrapped updater for context",
        "noop if no update is provided",
        "pre-process hook called before the value is piped",
        "through the filters. used in v-repeat.",
        "callback",
        "istanbul ignore else",
        "async component factory",
        "cached",
        "pool callbacks",
        "cache resolved",
        "invoke callbacks",
        "normal component",
        "check for filters.",
        "the filter regex check might give false positive",
        "for pipes inside strings, so it's possible that",
        "we don't get any filters here",
        "no filter",
        "if we are not in document, no need to check",
        "for transitions",
        "all",
        "specific event",
        "specific handler",
        "avoid leaking arguments:",
        "http://jsperf.com/closure-with-arguments",
        "if no child has registered for this event,",
        "then there's no need to broadcast.",
        "hooks do not get broadcasted so no need",
        "to do bookkeeping for them",
        "important: transcluded inline repeaters should",
        "inherit from outer scope rather than host"
    ],
    "docstrings": [
        "* The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefiexed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public",
        "* Mixin global API",
        "* Vue and every constructor that extends Vue has an\n\t * associated options object, which can be accessed during\n\t * compilation steps as `this.constructor.options`.\n\t *\n\t * These can be seen as the default options of every\n\t * Vue instance.",
        "* Build up the prototype",
        "* $data has a setter which does a bunch of\n\t * teardown/setup work",
        "* Mixin internal instance methods",
        "* Mixin public API methods",
        "* Check is a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}",
        "* Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}",
        "* Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}",
        "* Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}",
        "* Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}",
        "* Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}",
        "* Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}",
        "* Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}",
        "* Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}",
        "* Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}",
        "* Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from",
        "* Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}",
        "* Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}",
        "* Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}",
        "* Define a non-enumerable property\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]",
        "* Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function",
        "* Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj",
        "* Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}",
        "* Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}",
        "* Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx",
        "* Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}",
        "* Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed byy doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}",
        "* Extract an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} attr",
        "* Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target",
        "* Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target",
        "* Remove el from DOM\n\t *\n\t * @param {Element} el",
        "* Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target",
        "* Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el",
        "* Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb",
        "* Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb",
        "* Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {Strong} cls",
        "* Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {Strong} cls",
        "* Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element}",
        "* Trim possible empty head/tail textNodes inside a parent.\n\t *\n\t * @param {Node} node",
        "* Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el",
        "* Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - component\n\t * - repeat\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}",
        "* The prefix to look for when parsing directives.\n\t   *\n\t   * @type {String}",
        "* Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}",
        "* Strict mode.\n\t   * Disables asset lookup in the view parent chain.",
        "* Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}",
        "* Whether allow observer to alter data objects'\n\t   * __proto__.\n\t   *\n\t   * @type {Boolean}",
        "* Whether to parse mustache tags in templates.\n\t   *\n\t   * @type {Boolean}",
        "* Whether to use async rendering.",
        "* Whether to warn against errors caught when evaluating\n\t   * expressions.",
        "* Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}",
        "* List of asset types that a component can own.\n\t   *\n\t   * @type {Array}",
        "* prop binding modes",
        "* Max circular updates allowed in a batcher flush cycle.",
        "* Interpolation delimiters.\n\t * We need to mark the changed flag so that the text parser\n\t * knows it needs to recompile the regex.\n\t *\n\t * @type {Array<String>}",
        "* Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]",
        "* Helper that recursively merges two data objects together.",
        "* Data",
        "* El",
        "* Hooks and param attributes are merged as arrays.",
        "* 0.11 deprecation warning",
        "* Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.",
        "* Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.",
        "* Other object hashes.",
        "* Default strategy.",
        "* Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options",
        "* Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options",
        "* Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}",
        "* Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.",
        "* Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}",
        "* Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {String|undefined}",
        "* Set a prop's initial value on a vm and its data object.\n\t * The vm may have inherit:true so we need to make sure\n\t * we don't accidentally overwrite parent value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value",
        "* Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value",
        "* Enable debug utilities.",
        "* Log a message.\n\t   *\n\t   * @param {String} msg",
        "* We've got a problem here.\n\t   *\n\t   * @param {String} msg",
        "* Assert asset exists",
        "* Expose useful internals",
        "* Each instance constructor, including Vue, has a unique\n\t * cid. This enables us to create wrapped \"child\n\t * constructors\" for prototypal inheritance and cache them.",
        "* Class inheritance\n\t *\n\t * @param {Object} extendOptions",
        "* A function that returns a sub-class constructor with the\n\t * given name. This gives us much nicer output when\n\t * logging instances in the console.\n\t *\n\t * @param {String} name\n\t * @return {Function}",
        "* Plugin system\n\t *\n\t * @param {Object} plugin",
        "* Create asset registration methods with the following\n\t * signature:\n\t *\n\t * @param {String} id\n\t * @param {*} definition",
        "* Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}",
        "* A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @return {Function|undefined}",
        "* Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm",
        "* Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}",
        "* Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying",
        "* Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function}",
        "* Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function}",
        "* Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}",
        "* Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}",
        "* Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn",
        "* Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}",
        "* Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag",
        "* Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}",
        "* Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn",
        "* Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options",
        "* Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Boolean} hasAttrs\n\t * @return {Function|undefined}",
        "* Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn",
        "* Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} [def]\n\t * @return {Function} terminalLinkFn",
        "* Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}",
        "* Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn",
        "* Check an attribute for potential dynamic bindings,\n\t * and return a directive object.\n\t *\n\t * Special case: class interpolations are translated into\n\t * v-class instead v-attr, so that it can work with user\n\t * provided v-class bindings.\n\t *\n\t * @param {String} name\n\t * @param {String} value\n\t * @param {Object} options\n\t * @return {Object}",
        "* Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b",
        "* Compile param attributes on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn",
        "* Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn",
        "* Get the default value of a prop.\n\t *\n\t * @param {Object} options\n\t * @return {*}",
        "* Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str",
        "* Compile the interpolation tag regex.\n\t *\n\t * @return {RegExp}",
        "* Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]",
        "*",
        "* Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}",
        "* Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} single\n\t * @return {String}",
        "* For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}",
        "* A doubly linked list-based Least Recently Used (LRU)\n\t * cache. Will keep most recently used items while\n\t * discarding least recently used items when its limit is\n\t * reached. This is a bare-bone version of\n\t * Rasmus Andersson's js-lru:\n\t *\n\t *   https://github.com/rsms/js-lru\n\t *\n\t * @param {Number} limit\n\t * @constructor",
        "* Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}",
        "* Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.",
        "* Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}",
        "* Parser state",
        "* Push a directive object into the result Array",
        "* Push a filter to the current directive object",
        "* Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}",
        "* Parse a directive string into an Array of AST-like\n\t * objects representing directives.\n\t *\n\t * Example:\n\t *\n\t * \"click: a = a + 1 | uppercase\" will yield:\n\t * {\n\t *   arg: 'click',\n\t *   expression: 'a = a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} str\n\t * @return {Array<Object>}",
        "* A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} expression\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t * @constructor",
        "* Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep",
        "* Evaluate the getter, and re-collect dependencies.",
        "* Set the corresponding value with the setter.\n\t *\n\t * @param {*} value",
        "* Prepare for dependency collection.",
        "* Clean up for dependency collection.",
        "* Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow",
        "* Batcher job interface.\n\t * Will be called by the batcher.",
        "* Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.",
        "* Depend on all deps collected by this watcher.",
        "* Remove self from all dependencies' subcriber list.",
        "* Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {Object} obj",
        "* A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor",
        "* Add a directive subscriber.\n\t *\n\t * @param {Directive} sub",
        "* Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub",
        "* Add self as a dependency to the target watcher.",
        "* Notify all subscribers of a new value.",
        "* Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.",
        "* Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index",
        "* Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}",
        "* Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}",
        "* Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}",
        "* Compile getter setters for a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Function}",
        "* Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}",
        "* Build a setter function.\n\t *\n\t * This is only needed in rare situations like \"a[b]\" where\n\t * a settable path requires dynamic evaluation.\n\t *\n\t * This setter function may throw error when called if the\n\t * expression body is not a valid left-hand expression in\n\t * assignment.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}",
        "* Check for setter existence on a cache hit.\n\t *\n\t * @param {Function} hit",
        "* Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}",
        "* Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}",
        "* Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type",
        "* Parse a string path into an array of segments\n\t * Todo implement cache\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}",
        "* Format a accessor segment based on its type.\n\t *\n\t * @param {String} key\n\t * @return {Boolean}",
        "* Compiles a getter function with a fixed path.\n\t * The fixed path getter supresses errors.\n\t *\n\t * @param {Array} path\n\t * @return {Function}",
        "* External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}",
        "* Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path",
        "* Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val",
        "* Reset the batcher's state.",
        "* Flush both queues and run the watchers.",
        "* Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue",
        "* Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run",
        "* Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}",
        "* Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @return {DocumentFragment}",
        "* Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}",
        "* 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}",
        "* Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *    Possible values include:\n\t *    - DocumentFragment object\n\t *    - Node object of type Template\n\t *    - id selector: '#some-template-id'\n\t *    - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} clone\n\t * @param {Boolean} noSelector\n\t * @return {DocumentFragment|undefined}",
        "* Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   v-component=\"comp\"\n\t   *\n\t   * - dynamic:\n\t   *   v-component=\"{{currentView}}\"",
        "* Initialize a static component.",
        "* Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. v-component=\"{{view}}\"",
        "* Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]",
        "* Resolve the component constructor to use when creating\n\t   * the child vm.",
        "* When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.",
        "* Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance",
        "* Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}",
        "* Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer",
        "* Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb",
        "* Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]",
        "* Set childVM and parent ref",
        "* Unset childVM and parent ref",
        "* Unbind.",
        "* Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-repeat.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}",
        "* Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}",
        "* Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}",
        "* Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to",
        "* Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]",
        "* InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]",
        "* Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]",
        "* Remove by appending to another parent with transition.\n\t * This is only used in block operations.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]",
        "* Append the childNodes of a fragment to target.\n\t *\n\t * @param {DocumentFragment} block\n\t * @param {Node} target\n\t * @param {Vue} vm",
        "* Remove a block of nodes between two edge nodes.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm",
        "* Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]",
        "* Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}",
        "* Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}",
        "* A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm",
        "* Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]",
        "* The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.",
        "* The \"cleanup\" phase of an entering transition.",
        "* Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]",
        "* The \"nextTick\" phase of a leaving transition.",
        "* The \"cleanup\" phase of a leaving transition.",
        "* Cancel any pending callbacks from a previously running\n\t * but not finished transition.",
        "* Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type",
        "* Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type",
        "* Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}",
        "* Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb",
        "* Push a job into the queue.\n\t *\n\t * @param {Function} job",
        "* Flush the queue, and do one forced reflow before\n\t * triggering transitions.",
        "* Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   *     - TODO: more types may be supplied as a plugin",
        "* Check read/write filter stats.",
        "* Initialize the option list from the param.\n\t *\n\t * @param {String} expression",
        "* Build up option elements. IE9 doesn't create options\n\t * when setting innerHTML on <select> elements, so we have\n\t * to use DOM API here.\n\t *\n\t * @param {Element} parent - a <select> or an <optgroup>\n\t * @param {Array} options",
        "* Check the initial value for selected options.",
        "* Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @return {Array|*}",
        "* Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val",
        "* Setup.",
        "* Warn against v-if usage.",
        "* Check the component constructor to use for repeated\n\t   * instances. If static we resolve it now, otherwise it\n\t   * needs to be resolved at build time with actual data.",
        "* Resolve a dynamic component to use for an instance.\n\t   * The tricky part here is that there could be dynamic\n\t   * components depending on instance data.\n\t   *\n\t   * @param {Object} data\n\t   * @param {Object} meta\n\t   * @return {Function}",
        "* Update.\n\t   * This is called whenever the Array mutates. If we have\n\t   * a component, we might need to wait for it to resolve\n\t   * asynchronously.\n\t   *\n\t   * @param {Array|Number|String} data",
        "* The real update that actually modifies the DOM.\n\t   *\n\t   * @param {Array|Number|String} data",
        "* Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   * @param {Array} oldVms\n\t   * @return {Array}",
        "* Build a new instance and cache it.\n\t   *\n\t   * @param {Object} data\n\t   * @param {Number} index\n\t   * @param {Boolean} needCache",
        "* Unbind, teardown everything",
        "* Cache a vm instance based on its data.\n\t   *\n\t   * If the data is an object, we save the vm's reference on\n\t   * the data object as a hidden property. Otherwise we\n\t   * cache them in an object and for each primitive value\n\t   * there is an array in case there are duplicates.\n\t   *\n\t   * @param {Object} data\n\t   * @param {Vue} vm\n\t   * @param {Number} index\n\t   * @param {String} [key]",
        "* Try to get a cached instance from a piece of data.\n\t   *\n\t   * @param {Object} data\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Vue|undefined}",
        "* Delete a cached vm instance.\n\t   *\n\t   * @param {Vue} vm",
        "* Insert an instance.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDoc",
        "* Move an already inserted instance.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Node} prevEl",
        "* Remove an instance.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Number} index\n\t   * @param {Boolean} inDoc",
        "* Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Number} index\n\t   * @param {String} type\n\t   * @param {Number} total",
        "* Pre-process the value before piping it through the\n\t   * filters, and convert non-Array objects to arrays.\n\t   *\n\t   * This function will be bound to this directive instance\n\t   * and passed into the watcher.\n\t   *\n\t   * @param {*} value\n\t   * @return {Array}\n\t   * @private",
        "* Helper to find the previous element that is an instance\n\t * root node. This is necessary because a destroyed vm's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its __vue__ reference\n\t * should have been removed so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return vm that is bound to this v-repeat. (see #929)\n\t *\n\t * @param {Vue} vm\n\t * @param {Comment|Text} anchor\n\t * @return {Vue}",
        "* Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}",
        "* Convert a vms array to an object ref for v-ref on an\n\t * Object value.\n\t *\n\t * @param {Array} vms\n\t * @return {Object}",
        "* Check if a value is a primitive one:\n\t * String, Number, Boolean, null or undefined.\n\t *\n\t * @param {*} value\n\t * @return {Boolean}",
        "* Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @param {Element} parent\n\t * @param {Boolean} main\n\t * @return {DocumentFragment}",
        "* Stringify value.\n\t *\n\t * @param {Number} indent",
        "* 'abc' => 'Abc'",
        "* 'abc' => 'ABC'",
        "* 'AbC' => 'abc'",
        "* 12345 => $12,345.00\n\t *\n\t * @param {String} sign",
        "* 'item' => 'items'\n\t *\n\t * @params\n\t *  an array of strings corresponding to\n\t *  the single, double, triple ... forms of the word to\n\t *  be pluralized. When the number to be pluralized\n\t *  exceeds the length of the args, it will use the last\n\t *  entry in the array.\n\t *\n\t *  e.g. ['single', 'double', 'triple', 'multiple']",
        "* A special filter that takes a handler function,\n\t * wraps it so it only gets triggered on specific\n\t * keypresses. v-on only.\n\t *\n\t * @param {String} key",
        "* Install special array filters",
        "* Filter filter for v-repeat\n\t *\n\t * @param {String} searchKey\n\t * @param {String} [delimiter]\n\t * @param {String} dataKey",
        "* Filter filter for v-repeat\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse",
        "* String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search",
        "* The main init sequence. This is called for every\n\t * instance, including ones that are created from extended\n\t * constructors.\n\t *\n\t * @param {Object} options - this options object should be\n\t *                           the result of merging class\n\t *                           options and the options passed\n\t *                           in to the constructor.",
        "* Setup the instance's option events & watchers.\n\t * If the value is a string, we pull it from the\n\t * instance's methods by name.",
        "* Register callbacks for option events and watchers.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} action\n\t * @param {Object} hash",
        "* Helper to register an event/watch callback.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} action\n\t * @param {String} key\n\t * @param {Function|String|Object} handler\n\t * @param {Object} [options]",
        "* Setup recursive attached/detached calls",
        "* Callback to recursively call attached hook on children",
        "* Iterator to call attached hook\n\t *\n\t * @param {Vue} child",
        "* Callback to recursively call detached hook on children",
        "* Iterator to call detached hook\n\t *\n\t * @param {Vue} child",
        "* Trigger all handlers for a hook\n\t *\n\t * @param {String} hook",
        "* Setup the scope of an instance, which contains:\n\t * - observed data\n\t * - computed properties\n\t * - user methods\n\t * - meta properties",
        "* Initialize props.",
        "* Initialize the data.",
        "* Swap the isntance's $data. Called in $data's setter.\n\t *\n\t * @param {Object} newData",
        "* Proxy a property, so that\n\t * vm.prop === vm._data.prop\n\t *\n\t * @param {String} key",
        "* Unproxy a property.\n\t *\n\t * @param {String} key",
        "* Force update on every watcher in scope.",
        "* Setup computed properties. They are essentially\n\t * special getter/setters",
        "* Setup instance methods. Methods must be bound to the\n\t * instance since they might be called by children\n\t * inheriting them.",
        "* Initialize meta information like $index, $key & $value.",
        "* Define a meta property, e.g $index, $key, $value\n\t * which only exists on the vm instance but not in $data.\n\t *\n\t * @param {String} key\n\t * @param {*} value",
        "* Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor",
        "* Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static",
        "* Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object. Properties prefixed with `$` or `_`\n\t * and accessor properties are ignored.\n\t *\n\t * @param {Object} obj",
        "* Try to carete an observer for a child value,\n\t * and if value is array, link dep to the array.\n\t *\n\t * @param {*} val\n\t * @return {Dep|undefined}",
        "* Observe a list of Array items.\n\t *\n\t * @param {Array} items",
        "* Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val",
        "* Add an owner vm, so that when $add/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm",
        "* Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm",
        "* Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto",
        "* Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto",
        "* Intercept mutating methods and emit events",
        "* Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element",
        "* Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val",
        "* Add a new property to an observed object\n\t * and emits corresponding event\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t * @public",
        "* Set a property on an observed object, calling add to\n\t * ensure the property is observed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t * @public",
        "* Deletes a property from an observed object\n\t * and emits corresponding event\n\t *\n\t * @param {String} key\n\t * @public",
        "* Transclude, compile and link element.\n\t *\n\t * If a pre-compiled linker is available, that means the\n\t * passed in element will be pre-transcluded and compiled\n\t * as well - all we need to do is to call the linker.\n\t *\n\t * Otherwise we need to call transclude/compile/link here.\n\t *\n\t * @param {Element} el\n\t * @return {Element}",
        "* Initialize instance element. Called in the public\n\t * $mount() method.\n\t *\n\t * @param {Element} el",
        "* Create and bind a directive to an element.\n\t *\n\t * @param {String} name - directive name\n\t * @param {Node} node   - target node\n\t * @param {Object} desc - parsed directive descriptor\n\t * @param {Object} def  - directive definition object\n\t * @param {Vue|undefined} host - transclusion host component",
        "* Teardown an instance, unobserves the data, unbind all the\n\t * directives, turn off all the event listeners, etc.\n\t *\n\t * @param {Boolean} remove - whether to remove the DOM node.\n\t * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t *                                 be called later",
        "* Clean up to ensure garbage collection.\n\t * This is called after the leave transition if there\n\t * is any.",
        "* A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {String} name\n\t * @param {Node} el\n\t * @param {Vue} vm\n\t * @param {Object} descriptor\n\t *                 - {String} expression\n\t *                 - {String} [arg]\n\t *                 - {Array<Object>} [filters]\n\t * @param {Object} def - directive definition object\n\t * @param {Vue|undefined} host - transclusion host target\n\t * @constructor",
        "* Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t *\n\t * @param {Object} def",
        "* check if this is a dynamic literal binding.\n\t *\n\t * e.g. v-component=\"{{currentView}}\"",
        "* Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. v-on=\"click: a++\"\n\t *\n\t * @return {Boolean}",
        "* Check for an attribute directive param, e.g. lazy\n\t *\n\t * @param {String} name\n\t * @return {String}",
        "* Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public",
        "* Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn",
        "* Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler",
        "* Teardown the watcher and call unbind.",
        "* Apply a list of filter (descriptors) to a value.\n\t * Using plain for loops here because this will be called in\n\t * the getter of any watcher with filters so it is very\n\t * performance sensitive.\n\t *\n\t * @param {*} value\n\t * @param {*} [oldValue]\n\t * @param {Array} filters\n\t * @param {Boolean} write\n\t * @return {*}",
        "* Resolve a component, depending on whether the component\n\t * is defined normally or using an async factory function.\n\t * Resolves synchronously if already resolved, otherwise\n\t * resolves asynchronously and caches the resolved\n\t * constructor on the factory.\n\t *\n\t * @param {String} id\n\t * @param {Function} cb",
        "* Get the value from an expression on this vm.\n\t *\n\t * @param {String} exp\n\t * @return {*}",
        "* Set the value from an expression on this vm.\n\t * The expression must be a valid left-hand\n\t * expression in an assignment.\n\t *\n\t * @param {String} exp\n\t * @param {*} val",
        "* Add a property on the VM\n\t *\n\t * @param {String} key\n\t * @param {*} val",
        "* Delete a property on the VM\n\t *\n\t * @param {String} key",
        "* Watch an expression, trigger callback when its\n\t * value changes.\n\t *\n\t * @param {String} exp\n\t * @param {Function} cb\n\t * @param {Object} [options]\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} immediate\n\t *                 - {Boolean} user\n\t * @return {Function} - unwatchFn",
        "* Evaluate a text directive, including filters.\n\t *\n\t * @param {String} text\n\t * @return {String}",
        "* Interpolate a piece of template text.\n\t *\n\t * @param {String} text\n\t * @return {String}",
        "* Log instance data as a plain JS object\n\t * so that it is easier to inspect in console.\n\t * This method assumes console is available.\n\t *\n\t * @param {String} [path]",
        "* Convenience on-instance nextTick. The callback is\n\t * auto-bound to the instance, and this avoids component\n\t * modules having to rely on the global Vue.\n\t *\n\t * @param {Function} fn",
        "* Append instance to target\n\t *\n\t * @param {Node} target\n\t * @param {Function} [cb]\n\t * @param {Boolean} [withTransition] - defaults to true",
        "* Prepend instance to target\n\t *\n\t * @param {Node} target\n\t * @param {Function} [cb]\n\t * @param {Boolean} [withTransition] - defaults to true",
        "* Insert instance before target\n\t *\n\t * @param {Node} target\n\t * @param {Function} [cb]\n\t * @param {Boolean} [withTransition] - defaults to true",
        "* Insert instance after target\n\t *\n\t * @param {Node} target\n\t * @param {Function} [cb]\n\t * @param {Boolean} [withTransition] - defaults to true",
        "* Remove instance from DOM\n\t *\n\t * @param {Function} [cb]\n\t * @param {Boolean} [withTransition] - defaults to true",
        "* Shared DOM insertion function.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} target\n\t * @param {Function} [cb]\n\t * @param {Boolean} [withTransition]\n\t * @param {Function} op1 - op for non-transition insert\n\t * @param {Function} op2 - op for transition insert\n\t * @return vm",
        "* Execute a transition operation on a fragment instance,\n\t * iterating through all its block nodes.\n\t *\n\t * @param {Vue} vm\n\t * @param {Node} target\n\t * @param {Function} op\n\t * @param {Function} cb",
        "* Check for selectors\n\t *\n\t * @param {String|Element} el",
        "* Append operation that takes a callback.\n\t *\n\t * @param {Node} el\n\t * @param {Node} target\n\t * @param {Vue} vm - unused\n\t * @param {Function} [cb]",
        "* InsertBefore operation that takes a callback.\n\t *\n\t * @param {Node} el\n\t * @param {Node} target\n\t * @param {Vue} vm - unused\n\t * @param {Function} [cb]",
        "* Remove operation that takes a callback.\n\t *\n\t * @param {Node} el\n\t * @param {Vue} vm - unused\n\t * @param {Function} [cb]",
        "* Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn",
        "* Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn",
        "* Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn",
        "* Trigger an event on self.\n\t *\n\t * @param {String} event",
        "* Recursively broadcast an event to all children instances.\n\t *\n\t * @param {String} event\n\t * @param {...*} additional arguments",
        "* Recursively propagate an event up the parent chain.\n\t *\n\t * @param {String} event\n\t * @param {...*} additional arguments",
        "* Modify the listener counts on all parents.\n\t * This bookkeeping allows $broadcast to return early when\n\t * no child has listened to a certain event.\n\t *\n\t * @param {Vue} vm\n\t * @param {String} event\n\t * @param {Number} count",
        "* Create a child instance that prototypally inherits\n\t * data on parent. To achieve that we create an intermediate\n\t * constructor with its prototype pointing to parent.\n\t *\n\t * @param {Object} opts\n\t * @param {Function} [BaseCtor]\n\t * @return {Vue}\n\t * @public",
        "* Set instance target element and kick off the compilation\n\t * process. The passed in `el` can be a selector string, an\n\t * existing Element, or a DocumentFragment (for block\n\t * instances).\n\t *\n\t * @param {Element|DocumentFragment|string} el\n\t * @public",
        "* Mark an instance as ready.",
        "* Teardown the instance, simply delegate to the internal\n\t * _destroy.",
        "* Partially compile a piece of DOM and return a\n\t * decompile function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Vue} [host]\n\t * @return {Function}"
    ],
    "functions": [
        "__webpack_require__",
        "Vue",
        "toUpper",
        "nextTickHandler",
        "trim",
        "mergeData",
        "mergeAssets",
        "guardComponents",
        "guardProps",
        "guardArrayAssets",
        "mergeField",
        "formatType",
        "formatValue",
        "createClass",
        "linkAndCapture",
        "makeUnlinkFn",
        "teardownDirs",
        "compileNode",
        "compileElement",
        "compileTextNode",
        "processTextToken",
        "setTokenType",
        "makeTextNodeLinkFn",
        "compileNodeList",
        "makeChildLinkFn",
        "checkElementDirectives",
        "checkComponent",
        "checkTerminalDirectives",
        "skip",
        "makeTerminalNodeLinkFn",
        "compileDirectives",
        "makeNodeLinkFn",
        "collectAttrDirective",
        "directiveComparator",
        "makePropsLinkFn",
        "getDefault",
        "escapeRegex",
        "compileRegex",
        "formatToken",
        "inlineFilters",
        "Cache",
        "pushDir",
        "pushFilter",
        "processFilterArg",
        "Watcher",
        "traverse",
        "Dep",
        "save",
        "rewrite",
        "restore",
        "compileExpFns",
        "compilePathFns",
        "makeGetter",
        "makeSetter",
        "checkSetter",
        "getPathCharType",
        "parsePath",
        "maybeUnescapeQuote",
        "formatAccessor",
        "warnNonExistent",
        "resetBatcherState",
        "flushBatcherQueue",
        "runBatcherQueue",
        "isRealTemplate",
        "stringToFragment",
        "nodeToFragment",
        "transcludeTemplate",
        "extractAttrs",
        "mergeAttrs",
        "stringToObject",
        "normalize",
        "prefix",
        "Transition",
        "flush",
        "initOptions",
        "optionUpdateWatcher",
        "buildOptions",
        "checkInitialValue",
        "getValue",
        "indexOf",
        "getValue",
        "remove",
        "findPrevVm",
        "toRefObject",
        "isPrimitive",
        "contains",
        "callAttach",
        "callDetach",
        "extractFragment",
        "contains",
        "registerCallbacks",
        "register",
        "onAttached",
        "callAttach",
        "onDetached",
        "callDetach",
        "noop",
        "makeComputedGetter",
        "Observer",
        "protoAugment",
        "copyAugment",
        "Directive",
        "insert",
        "blockOp",
        "query",
        "append",
        "before",
        "remove",
        "on",
        "modifyListenerCount",
        "ready"
    ],
    "classes": []
}