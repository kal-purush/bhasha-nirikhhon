{
    "identifiers": [
        "Nancy",
        "Tests",
        "Responses",
        "IO",
        "Nancy",
        "Responses",
        "Xunit",
        "Fact",
        "FakeResponse",
        "MaterialisingResponse",
        "sourceResponse",
        "GetContext",
        "response",
        "PreExecute",
        "context",
        "sourceResponse",
        "ContentsCalled",
        "ShouldBeTrue",
        "Fact",
        "FakeResponse",
        "MaterialisingResponse",
        "sourceResponse",
        "GetContext",
        "response",
        "PreExecute",
        "context",
        "sourceResponse",
        "ContentsCalled",
        "response",
        "Contents",
        "Invoke",
        "MemoryStream",
        "sourceResponse",
        "ContentsCalled",
        "ShouldBeFalse",
        "Fact",
        "FakeResponse",
        "MaterialisingResponse",
        "sourceResponse",
        "response",
        "Contents",
        "Invoke",
        "MemoryStream",
        "sourceResponse",
        "ContentsCalled",
        "ShouldBeTrue",
        "NancyContext",
        "Response",
        "Contents",
        "PassedStream",
        "stream",
        "ContentsCalled"
    ],
    "literals": [],
    "variables": [
        "sourceResponse",
        "response",
        "context",
        "sourceResponse",
        "response",
        "context",
        "sourceResponse",
        "response",
        "ContentsCalled",
        "Stream",
        "PassedStream"
    ],
    "comments": [
        "Given",
        "When",
        "Then",
        "Given",
        "When",
        "Then",
        "Given",
        "When",
        "Then"
    ],
    "docstrings": [],
    "functions": [
        "Should_call_inner_response_on_preinit",
        "Should_not_call_inner_response_again_if_alread_inited",
        "Should_call_inner_response_again_if_executed_and_not_already_inited",
        "NancyContext",
        "GetContext",
        "FakeResponse"
    ],
    "classes": [
        "MaterialisingResponseFixture",
        "FakeResponse"
    ]
}