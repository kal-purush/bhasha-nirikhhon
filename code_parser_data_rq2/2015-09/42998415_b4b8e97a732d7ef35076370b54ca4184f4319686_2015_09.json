{
    "identifiers": [
        "com",
        "brcorner",
        "drag_sort_listview_lib",
        "android",
        "graphics",
        "Color",
        "android",
        "graphics",
        "Point",
        "android",
        "util",
        "Log",
        "android",
        "view",
        "GestureDetector",
        "android",
        "view",
        "HapticFeedbackConstants",
        "android",
        "view",
        "MotionEvent",
        "android",
        "view",
        "View",
        "android",
        "view",
        "ViewConfiguration",
        "android",
        "widget",
        "AdapterView",
        "android",
        "widget",
        "ArrayAdapter",
        "android",
        "widget",
        "BaseAdapter",
        "android",
        "widget",
        "HeaderViewListAdapter",
        "com",
        "brcorner",
        "dnote",
        "android",
        "activity",
        "MainActivity",
        "com",
        "brcorner",
        "dnote",
        "android",
        "adapter",
        "NoteAdapter",
        "ON_DOWN",
        "ON_DRAG",
        "ON_LONG_PRESS",
        "mDragInitMode",
        "ON_DOWN",
        "mSortEnabled",
        "CLICK_REMOVE",
        "FLING_REMOVE",
        "mRemoveMode",
        "mRemoveEnabled",
        "mIsRemoving",
        "mDetector",
        "mFlingRemoveDetector",
        "mTouchSlop",
        "MISS",
        "mHitPos",
        "MISS",
        "mFlingHitPos",
        "MISS",
        "mClickRemoveHitPos",
        "MISS",
        "mTempLoc",
        "mItemX",
        "mItemY",
        "mCurrX",
        "mCurrY",
        "mDragging",
        "mFlingSpeed",
        "mDragHandleId",
        "mClickRemoveId",
        "mFlingHandleId",
        "mCanDrag",
        "mDslv",
        "mPositionX",
        "dslv",
        "dslv",
        "ON_DOWN",
        "FLING_REMOVE",
        "dslv",
        "dragHandleId",
        "dragInitMode",
        "removeMode",
        "dslv",
        "dragHandleId",
        "dragInitMode",
        "removeMode",
        "dslv",
        "dragHandleId",
        "dragInitMode",
        "removeMode",
        "clickRemoveId",
        "dslv",
        "dragHandleId",
        "dragInitMode",
        "removeMode",
        "clickRemoveId",
        "dslv",
        "dragHandleId",
        "dragInitMode",
        "removeMode",
        "clickRemoveId",
        "flingHandleId",
        "dslv",
        "mDslv",
        "dslv",
        "mDetector",
        "dslv",
        "getContext",
        "mFlingRemoveDetector",
        "dslv",
        "getContext",
        "mFlingRemoveListener",
        "mFlingRemoveDetector",
        "setIsLongpressEnabled",
        "mTouchSlop",
        "ViewConfiguration",
        "get",
        "dslv",
        "getContext",
        "getScaledTouchSlop",
        "mDragHandleId",
        "dragHandleId",
        "mClickRemoveId",
        "clickRemoveId",
        "mFlingHandleId",
        "flingHandleId",
        "setRemoveMode",
        "removeMode",
        "setDragInitMode",
        "dragInitMode",
        "mDragInitMode",
        "mode",
        "mDragInitMode",
        "mode",
        "enabled",
        "mSortEnabled",
        "enabled",
        "mSortEnabled",
        "mode",
        "mRemoveMode",
        "mode",
        "mRemoveMode",
        "enabled",
        "mRemoveEnabled",
        "enabled",
        "mRemoveEnabled",
        "id",
        "mDragHandleId",
        "id",
        "id",
        "mFlingHandleId",
        "id",
        "id",
        "mClickRemoveId",
        "id",
        "position",
        "deltaX",
        "deltaY",
        "dragFlags",
        "mSortEnabled",
        "mIsRemoving",
        "dragFlags",
        "DragSortListView",
        "DRAG_POS_Y",
        "DragSortListView",
        "DRAG_NEG_Y",
        "mRemoveEnabled",
        "mIsRemoving",
        "dragFlags",
        "DragSortListView",
        "DRAG_POS_X",
        "dragFlags",
        "DragSortListView",
        "DRAG_NEG_X",
        "mDragging",
        "mDslv",
        "startDrag",
        "position",
        "mDslv",
        "getHeaderViewsCount",
        "dragFlags",
        "deltaX",
        "deltaY",
        "mDragging",
        "Override",
        "v",
        "ev",
        "mDslv",
        "isDragEnabled",
        "mDslv",
        "listViewIntercepted",
        "mDetector",
        "onTouchEvent",
        "ev",
        "mRemoveEnabled",
        "mDragging",
        "mFlingRemoveDetector",
        "onTouchEvent",
        "ev",
        "action",
        "ev",
        "getAction",
        "MotionEvent",
        "ACTION_MASK",
        "action",
        "MotionEvent",
        "ACTION_DOWN",
        "mCurrX",
        "ev",
        "getX",
        "mCurrY",
        "ev",
        "getY",
        "MotionEvent",
        "ACTION_UP",
        "mRemoveEnabled",
        "mIsRemoving",
        "removePoint",
        "mDslv",
        "getWidth",
        "mPositionX",
        "removePoint",
        "mDslv",
        "stopDragWithVelocity",
        "mDslv",
        "getContext",
        "setDown",
        "mDslv",
        "getAdapter",
        "getWrappedAdapter",
        "notifyDataSetChanged",
        "MotionEvent",
        "ACTION_CANCEL",
        "mIsRemoving",
        "mDragging",
        "Override",
        "floatView",
        "position",
        "touch",
        "mRemoveEnabled",
        "mIsRemoving",
        "mPositionX",
        "position",
        "x",
        "ev",
        "dragHandleHitPosition",
        "ev",
        "ev",
        "flingHandleHitPosition",
        "ev",
        "ev",
        "viewIdHitPosition",
        "ev",
        "mDragHandleId",
        "ev",
        "viewIdHitPosition",
        "ev",
        "mFlingHandleId",
        "ev",
        "id",
        "x",
        "ev",
        "getX",
        "y",
        "ev",
        "getY",
        "touchPos",
        "mDslv",
        "pointToPosition",
        "x",
        "y",
        "numHeaders",
        "mDslv",
        "getHeaderViewsCount",
        "numFooters",
        "mDslv",
        "getFooterViewsCount",
        "count",
        "mDslv",
        "getCount",
        "touchPos",
        "AdapterView",
        "INVALID_POSITION",
        "touchPos",
        "numHeaders",
        "touchPos",
        "count",
        "numFooters",
        "item",
        "mDslv",
        "getChildAt",
        "touchPos",
        "mDslv",
        "getFirstVisiblePosition",
        "rawX",
        "ev",
        "getRawX",
        "rawY",
        "ev",
        "getRawY",
        "dragBox",
        "id",
        "item",
        "item",
        "findViewById",
        "id",
        "dragBox",
        "dragBox",
        "getLocationOnScreen",
        "mTempLoc",
        "rawX",
        "mTempLoc",
        "rawY",
        "mTempLoc",
        "rawX",
        "mTempLoc",
        "dragBox",
        "getWidth",
        "rawY",
        "mTempLoc",
        "dragBox",
        "getHeight",
        "mItemX",
        "item",
        "getLeft",
        "mItemY",
        "item",
        "getTop",
        "touchPos",
        "MISS",
        "Override",
        "ev",
        "mRemoveEnabled",
        "mRemoveMode",
        "CLICK_REMOVE",
        "mClickRemoveHitPos",
        "viewIdHitPosition",
        "ev",
        "mClickRemoveId",
        "mHitPos",
        "startDragPosition",
        "ev",
        "mHitPos",
        "MISS",
        "mDragInitMode",
        "ON_DOWN",
        "startDrag",
        "mHitPos",
        "ev",
        "getX",
        "mItemX",
        "ev",
        "getY",
        "mItemY",
        "mIsRemoving",
        "mCanDrag",
        "mPositionX",
        "mFlingHitPos",
        "startFlingPosition",
        "ev",
        "Override",
        "e1",
        "e2",
        "distanceX",
        "distanceY",
        "x1",
        "e1",
        "getX",
        "y1",
        "e1",
        "getY",
        "x2",
        "e2",
        "getX",
        "y2",
        "e2",
        "getY",
        "deltaX",
        "x2",
        "mItemX",
        "deltaY",
        "y2",
        "mItemY",
        "mCanDrag",
        "mDragging",
        "mHitPos",
        "MISS",
        "mFlingHitPos",
        "MISS",
        "mHitPos",
        "MISS",
        "mDragInitMode",
        "ON_DRAG",
        "abs",
        "y2",
        "y1",
        "mTouchSlop",
        "mSortEnabled",
        "startDrag",
        "mHitPos",
        "deltaX",
        "deltaY",
        "mDragInitMode",
        "ON_DOWN",
        "abs",
        "x2",
        "x1",
        "mTouchSlop",
        "mRemoveEnabled",
        "mIsRemoving",
        "startDrag",
        "mFlingHitPos",
        "deltaX",
        "deltaY",
        "mFlingHitPos",
        "MISS",
        "abs",
        "x2",
        "x1",
        "mTouchSlop",
        "mRemoveEnabled",
        "mIsRemoving",
        "startDrag",
        "mFlingHitPos",
        "deltaX",
        "deltaY",
        "abs",
        "y2",
        "y1",
        "mTouchSlop",
        "mCanDrag",
        "Override",
        "e",
        "Log",
        "d",
        "mHitPos",
        "MISS",
        "mDragInitMode",
        "ON_LONG_PRESS",
        "mDslv",
        "performHapticFeedback",
        "HapticFeedbackConstants",
        "LONG_PRESS",
        "startDrag",
        "mHitPos",
        "mCurrX",
        "mItemX",
        "mCurrY",
        "mItemY",
        "mDslv",
        "getContext",
        "setUp",
        "mDslv",
        "getAdapter",
        "getWrappedAdapter",
        "notifyDataSetChanged",
        "Override",
        "e1",
        "e2",
        "velocityX",
        "velocityY",
        "Override",
        "ev",
        "mRemoveEnabled",
        "mRemoveMode",
        "CLICK_REMOVE",
        "mClickRemoveHitPos",
        "MISS",
        "mDslv",
        "removeItem",
        "mClickRemoveHitPos",
        "mDslv",
        "getHeaderViewsCount",
        "Override",
        "ev",
        "mFlingRemoveListener",
        "Override",
        "e1",
        "e2",
        "velocityX",
        "velocityY"
    ],
    "literals": [
        "\"mobeta\"",
        "\"lift listener long pressed\""
    ],
    "variables": [
        "mRemoveMode",
        "mDetector",
        "mFlingRemoveDetector",
        "mTouchSlop",
        "mItemX",
        "mItemY",
        "mCurrX",
        "mCurrY",
        "mDragHandleId",
        "mClickRemoveId",
        "mFlingHandleId",
        "mCanDrag",
        "mDslv",
        "mPositionX"
    ],
    "comments": [
        "int x = mPositionX >= 0 ? mPositionX : -mPositionX;",
        "��   return mRemoveMode == FLING_REMOVE ? flingHandleHitPosition(ev) : MISS;",
        "includes headers/footers",
        "Log.d(\"mobeta\", \"touch down on position \" + itemnum);",
        "We're only interested if the touch was on an",
        "item that's not a header or footer.",
        "on long press",
        "if started to scroll the list then",
        "don't allow sorting nor fling-removing",
        "return whatever",
        "complete the OnGestureListener interface",
        "complete the OnGestureListener interface",
        "complete the OnGestureListener interface",
        "do nothing",
        "Log.d(\"mobeta\", \"on fling remove called\");",
        "��",
        "if (mRemoveEnabled && mIsRemoving) {",
        "int w = mDslv.getWidth();",
        "int minPos = w / 5;",
        "if (velocityX > mFlingSpeed) {",
        "if (mPositionX > -minPos) {",
        "mDslv.stopDragWithVelocity(true, velocityX);",
        "}",
        "} else if (velocityX < -mFlingSpeed) {",
        "if (mPositionX < minPos) {",
        "mDslv.stopDragWithVelocity(true, velocityX);",
        "}",
        "}",
        "mIsRemoving = false;",
        "}"
    ],
    "docstrings": [
        "* Class that starts and stops item drags on a {@link DragSortListView}\n * based on touch gestures. This class also inherits from\n * {@link SimpleFloatViewManager}, which provides basic float View\n * creation.\n *\n * An instance of this class is meant to be passed to the methods\n * {@link DragSortListView#setTouchListener()} and\n * {@link DragSortListView#setFloatViewManager()} of your\n * {@link DragSortListView} instance.",
        "* Drag init mode enum.",
        "* Remove mode enum.",
        "* The current remove mode.",
        "* Calls {@link #DragSortController(DragSortListView, int)} with a\n     * 0 drag handle id, FLING_RIGHT_REMOVE remove mode,\n     * and ON_DOWN drag init. By default, sorting is enabled, and\n     * removal is disabled.\n     *\n     * @param dslv The DSLV instance",
        "* By default, sorting is enabled, and removal is disabled.\n     *\n     * @param dslv The DSLV instance\n     * @param dragHandleId The resource id of the View that represents\n     * the drag handle in a list item.",
        "* Set how a drag is initiated. Needs to be one of\n     * {@link ON_DOWN}, {@link ON_DRAG}, or {@link ON_LONG_PRESS}.\n     *\n     * @param mode The drag init mode.",
        "* Enable/Disable list item sorting. Disabling is useful if only item\n     * removal is desired. Prevents drags in the vertical direction.\n     *\n     * @param enabled Set <code>true</code> to enable list\n     * item sorting.",
        "* One of {@link CLICK_REMOVE}, {@link FLING_RIGHT_REMOVE},\n     * {@link FLING_LEFT_REMOVE},\n     * {@link SLIDE_RIGHT_REMOVE}, or {@link SLIDE_LEFT_REMOVE}.",
        "* Enable/Disable item removal without affecting remove mode.",
        "* Set the resource id for the View that represents the drag\n     * handle in a list item.\n     *\n     * @param id An android resource id.",
        "* Set the resource id for the View that represents the fling\n     * handle in a list item.\n     *\n     * @param id An android resource id.",
        "* Set the resource id for the View that represents click\n     * removal button.\n     *\n     * @param id An android resource id.",
        "* Sets flags to restrict certain motions of the floating View\n     * based on DragSortController settings (such as remove mode).\n     * Starts the drag on the DragSortListView.\n     *\n     * @param position The list item position (includes headers).\n     * @param deltaX Touch x-coord minus left edge of floating View.\n     * @param deltaY Touch y-coord minus top edge of floating View.\n     *\n     * @return True if drag started, false otherwise.",
        "* Overrides to provide fading when slide removal is enabled.",
        "* Get the position to start dragging based on the ACTION_DOWN\n     * MotionEvent. This function simply calls\n     * {@link #dragHandleHitPosition(MotionEvent)}. Override\n     * to change drag handle behavior;\n     * this function is called internally when an ACTION_DOWN\n     * event is detected.\n     *\n     * @param ev The ACTION_DOWN MotionEvent.\n     *\n     * @return The list position to drag if a drag-init gesture is\n     * detected; MISS if unsuccessful.",
        "* Checks for the touch of an item's drag handle (specified by\n     * {@link #setDragHandleId(int)}), and returns that item's position\n     * if a drag handle touch was detected.\n     *\n     * @param ev The ACTION_DOWN MotionEvent.\n\n     * @return The list position of the item whose drag handle was\n     * touched; MISS if unsuccessful."
    ],
    "functions": [
        "DragSortController",
        "DragSortController",
        "DragSortController",
        "DragSortController",
        "getDragInitMode",
        "setDragInitMode",
        "setSortEnabled",
        "isSortEnabled",
        "setRemoveMode",
        "getRemoveMode",
        "setRemoveEnabled",
        "isRemoveEnabled",
        "setDragHandleId",
        "setFlingHandleId",
        "setClickRemoveId",
        "startDrag",
        "onTouch",
        "onDragFloatView",
        "startDragPosition",
        "startFlingPosition",
        "dragHandleHitPosition",
        "flingHandleHitPosition",
        "viewIdHitPosition",
        "onDown",
        "onScroll",
        "onLongPress",
        "onFling",
        "onSingleTapUp",
        "onShowPress",
        "onFling"
    ],
    "classes": [
        "DragSortController"
    ]
}