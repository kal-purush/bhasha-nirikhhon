{
    "identifiers": [
        "require",
        "Util",
        "require",
        "Http",
        "Path",
        "FileSystem",
        "require",
        "require",
        "MySql",
        "moment",
        "require",
        "Config",
        "Defs",
        "moment",
        "Config",
        "resolve",
        "resolve",
        "i",
        "Config",
        "i",
        "Config",
        "i",
        "dataFilePath",
        "_localFileRe",
        "dataFilePath",
        "dataFilePath",
        "_localFileRe",
        "Path",
        "dataFilePath",
        "Path",
        "Config",
        "fileSubpath",
        "isLocal",
        "Path",
        "Config",
        "fileSubpath",
        "Config",
        "FileSystem",
        "filePath",
        "_downloadsCount",
        "isLocal",
        "dataFilePath",
        "localFilePath",
        "filePath",
        "_promise",
        "_promise",
        "resolve",
        "reject",
        "process",
        "dataFilePath",
        "FileSystem",
        "localFilePath",
        "filePath",
        "error",
        "error",
        "error",
        "reject",
        "resolve",
        "dataFilePath",
        "localFilePath",
        "filePath",
        "dataFilePath",
        "_promise",
        "_promise",
        "downloadFile",
        "dataFilePath",
        "dataFilePath",
        "_promise",
        "_downloadsCount",
        "Path",
        "Config",
        "Config",
        "Config",
        "Config",
        "readQueryFromFile",
        "Path",
        "localDbAssetsDir",
        "databaseName",
        "databaseName",
        "readQueryFromFile",
        "Path",
        "localDbAssetsDir",
        "databaseName",
        "readQueryFromFile",
        "Path",
        "localDbAssetsDir",
        "databaseName",
        "readQueryFromFile",
        "Path",
        "localDbAssetsDir",
        "Config",
        "_promise",
        "_promise",
        "runMySqlQuery",
        "databaseName",
        "o",
        "databaseExists",
        "o",
        "_promise",
        "_promise",
        "databaseExists",
        "Config",
        "Defs",
        "_promise",
        "_promise",
        "runMySqlQuery",
        "truncDbQuery",
        "databaseName",
        "Defs",
        "_promise",
        "_promise",
        "runMySqlQuery",
        "dropDbQuery",
        "databaseName",
        "databaseExists",
        "Config",
        "Defs",
        "_promise",
        "_promise",
        "runMySqlQuery",
        "createDbQuery",
        "databaseName",
        "databaseExists",
        "Config",
        "Defs",
        "_promise",
        "_promise",
        "getFilePathsRecursively",
        "Path",
        "Config",
        "s",
        "s",
        "i",
        "filePaths",
        "i",
        "filePaths",
        "i",
        "filePath",
        "Config",
        "Path",
        "localDbAssetsDir",
        "fileSubpath",
        "Util",
        "FileSystem",
        "importQueryPath",
        "databaseName",
        "filePath",
        "query",
        "filePath",
        "_promise",
        "_promise",
        "runMySqlQuery",
        "query",
        "filePath",
        "query",
        "filePath",
        "i",
        "filePaths",
        "_promise",
        "postImportQuery",
        "_promise",
        "_promise",
        "runMySqlQuery",
        "databaseName",
        "postImportQuery",
        "_promise",
        "_promise",
        "durationSince",
        "_startMoment",
        "fileUrlSubpath",
        "resolve",
        "reject",
        "fileUrlSubpath",
        "fileUrlSubpath",
        "_baseUrl",
        "fileUrlSubpath",
        "Path",
        "fileUrlSubpath",
        "Path",
        "Config",
        "Path",
        "fileSubpath",
        "Path",
        "fileSubpath",
        "Path",
        "fileDir",
        "fileName",
        "handleError",
        "error",
        "statusBar",
        "statusBar",
        "error",
        "reject",
        "Http",
        "fileUrl",
        "response",
        "Http",
        "response",
        "fileDir",
        "FileSystem",
        "fileDir",
        "statusBar",
        "StatusBar",
        "response",
        "stats",
        "process",
        "fileName",
        "process",
        "fileName",
        "filenameMaxLength",
        "fileName",
        "fileName",
        "filenameMaxLength",
        "filenameMaxLength",
        "fileName",
        "remaining",
        "fileName",
        "fileName",
        "fileUrlSubpath",
        "statusBar",
        "stats",
        "statusBar",
        "stats",
        "statusBar",
        "stats",
        "statusBar",
        "stats",
        "statusBar",
        "stats",
        "process",
        "resolve",
        "response",
        "statusBar",
        "response",
        "Path",
        "fileName",
        "FileSystem",
        "filePath",
        "Unzip",
        "fileDir",
        "handleError",
        "fileUrlSubpath",
        "response",
        "handleError",
        "fileName",
        "args",
        "FileSystem",
        "fileName",
        "fileExists",
        "FileSystem",
        "fileName",
        "query",
        "args",
        "query",
        "Util",
        "Util",
        "query",
        "args",
        "query",
        "query",
        "message",
        "resolve",
        "reject",
        "message",
        "process",
        "message",
        "moment",
        "MySql",
        "Extend",
        "Config",
        "connection",
        "connection",
        "query",
        "error",
        "rows",
        "fields",
        "error",
        "message",
        "durationSince",
        "opMoment",
        "resolve",
        "rows",
        "fields",
        "message",
        "error",
        "reject",
        "connection",
        "dir",
        "walk",
        "dir",
        "FileSystem",
        "dir",
        "files",
        "name",
        "Path",
        "dir",
        "name",
        "FileSystem",
        "path",
        "filePaths",
        "walk",
        "path",
        "filePaths",
        "path",
        "filePaths",
        "walk",
        "dir",
        "filePaths",
        "m",
        "moment",
        "moment",
        "moment",
        "m"
    ],
    "literals": [
        "\"es6-promise\"",
        "\"util\"",
        "\"extend\"",
        "\"http\"",
        "\"path\"",
        "\"fs-extra\"",
        "\"unzip\"",
        "\"status-bar\"",
        "\"mysql\"",
        "\"moment\"",
        "\"moment-duration-format\"",
        "\"./config\"",
        "\"./lib/defs\"",
        "\"\"",
        "\"\\nDownloading and unzipping files...\"",
        "\"\"",
        "\".txt\"",
        "string",
        "string",
        "string",
        "${dataFilePath}: copying locally...",
        "\\n${error}\\n",
        "\" Done.\"",
        "string",
        "\"All files are already there, skipping (modify 'forceDownloading' in config).\"",
        "\"create-db.sql\"",
        "\"trunc-db.sql\"",
        "\"drop-db.sql\"",
        "\"post-import.sql\"",
        "\"mysql\"",
        "show databases like '${databaseName}'",
        "Database '${databaseName}' exists, truncating it...",
        "Database '${databaseName}' exists, dropping it...",
        "Creating database '${databaseName}'...",
        "\"Database exists, skipping import (modify 'actionIfDbExists' in config).\\n\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"import\"",
        "\".sql\"",
        "\"UTF8\"",
        "Importing file '${filePath}'...",
        "use ${databaseName};\\n${postImportQuery}",
        "\"Running post import query...\"",
        "All operations completed in ${durationSince(_startMoment) }.\\n",
        "string",
        "\"\"",
        "${_baseUrl}/${fileUrlSubpath}",
        "string",
        "\\n${error}",
        "\"content-length\"",
        "\"render\"",
        "string",
        "\"...\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" [\"",
        "\"] \"",
        "\"finish\"",
        "\"\"",
        "\".zip\"",
        "${fileUrlSubpath}: server returned ${response.statusCode}, aborting.",
        "\"error\"",
        "string",
        "\"UTF8\"",
        "\"\"",
        "string",
        "string",
        "Done in ${durationSince(opMoment) }.",
        "\" Failed.\"",
        "\\n${error}\\n",
        "string",
        "string",
        "string",
        "\"y[y] M[mo] d[d] h[h] m[m] s[s]\""
    ],
    "variables": [
        "Extend",
        "Unzip",
        "StatusBar",
        "_startMoment",
        "_baseUrl",
        "_promise",
        "_localFileRe",
        "_downloadsCount",
        "i",
        "dataFilePath",
        "isLocal",
        "fileSubpath",
        "filePath",
        "localFilePath",
        "localDbAssetsDir",
        "databaseName",
        "createDbQuery",
        "truncDbQuery",
        "dropDbQuery",
        "postImportQuery",
        "databaseExists",
        "filePaths",
        "i",
        "filePath",
        "fileSubpath",
        "importQueryPath",
        "query",
        "fileUrl",
        "fileSubpath",
        "fileDir",
        "fileName",
        "filePath",
        "statusBar",
        "handleError",
        "filenameMaxLength",
        "remaining",
        "fileExists",
        "query",
        "opMoment",
        "connection",
        "filePaths",
        "walk",
        "files",
        "path"
    ],
    "comments": [
        "<reference path=\"lib/typings/es6-promise.d.ts\" />",
        "<reference path=\"lib/typings/node.d.ts\" />",
        "<reference path=\"lib/typings/fs-extra.d.ts\" />",
        "<reference path=\"lib/typings/mysql.d.ts\" />",
        "<reference path=\"lib/typings/moment-node.d.ts\" />",
        "file is stored locally: just copy it to downloads dir",
        "download from server",
        "storing 'i' in current scope"
    ],
    "docstrings": [],
    "functions": [
        "downloadFile",
        "readQueryFromFile",
        "runMySqlQuery",
        "getFilePathsRecursively",
        "durationSince"
    ],
    "classes": []
}