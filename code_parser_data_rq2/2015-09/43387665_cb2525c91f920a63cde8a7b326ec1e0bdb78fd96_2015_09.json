{
    "identifiers": [
        "numpy",
        "np",
        "sklearn",
        "BaseEstimator",
        "TransformerMixin",
        "sklearn",
        "utils",
        "extmath",
        "fast_dot",
        "norm",
        "sklearn",
        "utils",
        "as_float_array",
        "check_array",
        "check_random_state",
        "sklearn",
        "utils",
        "validation",
        "check_is_fitted",
        "BaseEstimator",
        "TransformerMixin",
        "n_components",
        "trim_proportion",
        "copy",
        "tol",
        "random_state",
        "n_components",
        "trim_proportion",
        "copy",
        "random_state",
        "X",
        "y",
        "_fit",
        "X",
        "X",
        "y",
        "_fit",
        "X",
        "fast_dot",
        "X",
        "components_",
        "T",
        "X",
        "trim_proportion",
        "trim_proportion",
        "ValueError",
        "trim_proportion",
        "check_random_state",
        "random_state",
        "check_array",
        "X",
        "X",
        "shape",
        "as_float_array",
        "X",
        "copy",
        "copy",
        "np",
        "mean",
        "X",
        "axis",
        "X",
        "mean_",
        "n_components",
        "X",
        "shape",
        "n_components",
        "np",
        "empty",
        "n_features",
        "n_components",
        "k",
        "n_components",
        "rng",
        "rand",
        "n_features",
        "mu",
        "norm",
        "mu",
        "i",
        "fast_dot",
        "X",
        "mu",
        "fast_dot",
        "dots",
        "T",
        "X",
        "mu",
        "norm",
        "mu",
        "i",
        "n_samples",
        "mu",
        "np",
        "sign",
        "fast_dot",
        "X",
        "mu",
        "trimmed_mean",
        "X",
        "dot_signs",
        "trim_proportion",
        "mu",
        "norm",
        "mu",
        "np",
        "max",
        "np",
        "abs",
        "mu",
        "prev_mu",
        "tol",
        "k",
        "reorth",
        "components_",
        "k",
        "mu",
        "mu",
        "norm",
        "mu",
        "components_",
        "mu",
        "k",
        "n_components",
        "X",
        "fast_dot",
        "fast_dot",
        "X",
        "mu",
        "mu",
        "T",
        "X",
        "X",
        "y",
        "check_is_fitted",
        "check_array",
        "X",
        "mean_",
        "X",
        "mean_",
        "fast_dot",
        "X",
        "components_",
        "T",
        "X_transformed"
    ],
    "literals": [
        "'trim_proportion must be between 0 and 0.5,'",
        "' got %s.'",
        "'mean_'"
    ],
    "variables": [
        "n_components",
        "trim_proportion",
        "copy",
        "random_state",
        "X",
        "rng",
        "X",
        "n_samples",
        "n_features",
        "X",
        "mean_",
        "n_components",
        "n_components",
        "components_",
        "mu",
        "mu",
        "dots",
        "mu",
        "mu",
        "prev_mu",
        "dot_signs",
        "mu",
        "mu",
        "mu",
        "mu",
        "k",
        "X",
        "X",
        "X",
        "X_transformed"
    ],
    "comments": [
        "Center data",
        "compute k'th principle component",
        "initialize using a few EM iterations",
        "grassmann average",
        "store the estimated vector and possibly re-orthonormalize"
    ],
    "docstrings": [
        "\"\"\"Trimmed Grassmann Average as robust PCA\"\"\"",
        "\"\"\"Fit the model with X.\n\n        Parameters\n        ----------\n        X: array-like, shape (n_samples, n_features)\n            Training data, where n_samples in the number of samples\n            and n_features is the number of features.\n\n        Returns\n        -------\n        self : object\n            Returns the instance itself.\n        \"\"\"",
        "\"\"\"Fit the model with X and apply the dimensionality reduction on X.\n\n        Parameters\n        ----------\n        X : array-like, shape (n_samples, n_features)\n            Training data, where n_samples is the number of samples\n            and n_features is the number of features.\n\n        Returns\n        -------\n        X_new : array-like, shape (n_samples, n_components)\n        \"\"\"",
        "\"\"\"Fit the model on X\n\n        Parameters\n        ----------\n        X: array-like, shape (n_samples, n_features)\n            Training vector, where n_samples in the number of samples and\n            n_features is the number of features.\n\n        Returns\n        X : ndarray, shape (n_samples, n_features)\n            The input data, copied, centered and whitened when requested.\n        -------\n        \"\"\"",
        "\"\"\"Apply dimensionality reduction on X.\n\n        X is projected on the principal components previous extracted\n        from a training set.\n\n        Parameters\n        ----------\n        X : array-like, shape (n_samples, n_features)\n            New data, where n_samples in the number of samples\n            and n_features is the number of features.\n\n        Returns\n        -------\n        X_transformed : array-like, shape (n_samples, n_components)\n        \"\"\""
    ],
    "functions": [
        "trimmed_mean",
        "reorth",
        "fit",
        "fit_transform",
        "_fit",
        "transform"
    ],
    "classes": [
        "TGA"
    ]
}