{
    "identifiers": [
        "typing",
        "discord",
        "discord",
        "ext",
        "commands",
        "discord",
        "Intents",
        "commands",
        "Bot",
        "intents",
        "intents",
        "bot",
        "command",
        "ctx",
        "commands",
        "Context",
        "user",
        "discord",
        "User",
        "user",
        "id",
        "user",
        "name",
        "user",
        "avatar_url",
        "ctx",
        "send",
        "format",
        "user_id",
        "username",
        "avatar",
        "userinfo",
        "error",
        "ctx",
        "commands",
        "Context",
        "error",
        "commands",
        "CommandError",
        "isinstance",
        "error",
        "commands",
        "BadArgument",
        "ctx",
        "send",
        "commands",
        "Converter",
        "ctx",
        "commands",
        "Context",
        "argument",
        "commands",
        "MemberConverter",
        "member_converter",
        "convert",
        "ctx",
        "argument",
        "commands",
        "MemberNotFound",
        "member",
        "commands",
        "TextChannelConverter",
        "textchannel_converter",
        "convert",
        "ctx",
        "argument",
        "commands",
        "ChannelNotFound",
        "channel",
        "commands",
        "BadArgument",
        "format",
        "argument",
        "bot",
        "command",
        "ctx",
        "commands",
        "Context",
        "target",
        "ChannelOrMemberConverter",
        "target",
        "send",
        "format",
        "target",
        "name",
        "bot",
        "command",
        "ctx",
        "commands",
        "Context",
        "target",
        "typing",
        "Union",
        "discord",
        "Member",
        "discord",
        "TextChannel",
        "isinstance",
        "target",
        "discord",
        "Member",
        "ctx",
        "send",
        "format",
        "target",
        "mention",
        "isinstance",
        "target",
        "discord",
        "TextChannel",
        "ctx",
        "send",
        "format",
        "target",
        "mention",
        "bot",
        "command",
        "ctx",
        "commands",
        "Context",
        "number",
        "maybe",
        "maybe",
        "ctx",
        "send",
        "number",
        "ctx",
        "send",
        "number",
        "bot",
        "run"
    ],
    "literals": [
        "'!'",
        "'User found: {} -- {}\\n{}'",
        "'Couldn\\'t find that user.'",
        "'No Member or TextChannel could be converted from \"{}\"'",
        "'Hello, {}!'",
        "'Member found: {}, adding them to the ignore list.'",
        "'Channel found: {}, adding it to the ignore list.'",
        "'token'"
    ],
    "variables": [
        "intents",
        "intents",
        "members",
        "bot",
        "user_id",
        "username",
        "avatar",
        "member_converter",
        "member",
        "textchannel_converter",
        "channel"
    ],
    "comments": [
        "This example requires the 'members' privileged intent to use the Member converter.",
        "In the command signature above, you can see that the `user`",
        "parameter is typehinted to `discord.User`. This means that",
        "during command invocation we will attempt to convert",
        "the value passed as `user` to a `discord.User` instance.",
        "The documentation notes what can be converted, in the case of `discord.User`",
        "you pass an ID, mention or username (discrim optional)",
        "E.g. 80088516616269824, @Danny or Danny#0007",
        "NOTE: typehinting acts as a converter within the `commands` framework only.",
        "In standard Python, it is use for documentation and IDE assistance purposes.",
        "If the conversion is successful, we will have a `discord.User` instance",
        "and can do the following:",
        "if the conversion above fails for any reason, it will raise `commands.BadArgument`",
        "so we handle this in this error handler:",
        "Custom Converter here",
        "In this example we have made a custom converter.",
        "This checks if an input is convertible to a",
        "`discord.Member` or `discord.TextChannel` instance from the",
        "input the user has given us using the pre-existing converters",
        "that the library provides.",
        "Try and convert to a Member instance.",
        "If this fails, then an exception is raised.",
        "Otherwise, we just return the converted member value.",
        "Do the same for TextChannel...",
        "If the value could not be converted we can raise an error",
        "so our error handlers can deal with it in one place.",
        "The error has to be CommandError derived, so BadArgument works fine here.",
        "This command signature utilises the custom converter written above",
        "What will happen during command invocation is that the `target` above will be passed to",
        "the `argument` parameter of the `ChannelOrMemberConverter.convert` method and",
        "the conversion will go through the process defined there.",
        "This command signature utilises the `typing.Union` typehint.",
        "The `commands` framework attempts a conversion of each type in this Union *in order*.",
        "So, it will attempt to convert whatever is passed to `target` to a `discord.Member` instance.",
        "If that fails, it will attempt to convert it to a `discord.TextChannel` instance.",
        "See: https://discordpy.readthedocs.io/en/latest/ext/commands/commands.html#typing-union",
        "NOTE: If a Union typehint converter fails it will raise `commands.BadUnionArgument`",
        "instead of `commands.BadArgument`.",
        "To check the resulting type, `isinstance` is used",
        "this could be an `else` but for completeness' sake.",
        "Built-in type converters.",
        "We want an `int` and a `bool` parameter here.",
        "`bool` is a slightly special case, as shown here:",
        "See: https://discordpy.readthedocs.io/en/latest/ext/commands/commands.html#bool"
    ],
    "docstrings": [],
    "functions": [
        "userinfo",
        "userinfo_error",
        "convert",
        "notify",
        "ignore",
        "multiply"
    ],
    "classes": [
        "ChannelOrMemberConverter"
    ]
}