{
    "identifiers": [
        "require",
        "require",
        "mysql",
        "connection",
        "err",
        "err",
        "err",
        "askQuestions",
        "askQuestions",
        "inquirer",
        "answer",
        "answer",
        "viewEmployee",
        "employeeByDepartment",
        "addEmployee",
        "removeEmployee",
        "updateEmployeeRole",
        "addRole",
        "connection",
        "viewEmployee"
    ],
    "literals": [
        "\"inquirer\"",
        "\"mysql\"",
        "\"localhost\"",
        "\"root\"",
        "\"root\"",
        "\"employeemanagementDB\"",
        "\"list\"",
        "\"task\"",
        "\"What would you like to do?\"",
        "\"View all employee\"",
        "\"View employees by department\"",
        "\"Add employee\"",
        "\"Remove Employee\"",
        "\"Update employee role\"",
        "\"Add role\"",
        "\"End\"",
        "\"View all employee\"",
        "\"View employee by department\"",
        "\"Add employee\"",
        "\"Remove Employee\"",
        "\"Update employee role\"",
        "\"Add role\"",
        "SELECT e.id, e.first-name, e.last_name, r.title AS department, r.salary, CONCAT(m.first_name, ' ', m.last_name) AS Manager\n    FROM employee e\n        LEFT JOIN employee m ON m.id = e.manager_id\n        LEFT JOIN Role r ON e.role_id = r.id\n        LEFT JOIN Department d ON d.id = r.department_id\n    ORDER BY e.id ASC;"
    ],
    "variables": [
        "mysql",
        "mysql",
        "connection",
        "askQuestions",
        "viewEmployee"
    ],
    "comments": [
        "present to the user in the terminal",
        "we need to build functionality based on user choice",
        "connection.query(query, (\"SELECT * FROM employee\",  )",
        ".then((answer) => {",
        "//use convenience variable",
        "// const query = \"SELECT position, song, year FROM top5000 WHERE ?\";",
        "connection.query(query, { artist: answer.artist }, (err, res) => {",
        "res.forEach(({ position, song, year }) => {",
        "console.log(",
        "function viewEmployee() {",
        "console.log(\"View all employee\\n\");",
        "}"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}