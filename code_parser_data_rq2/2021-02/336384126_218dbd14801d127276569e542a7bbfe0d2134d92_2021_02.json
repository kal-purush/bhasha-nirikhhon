{
    "identifiers": [
        "_",
        "_",
        "_",
        "_",
        "_",
        "query",
        "query",
        "_",
        "query",
        "op",
        "breakpoint",
        "query",
        "query",
        "op",
        "breakpoint",
        "query",
        "query",
        "op",
        "breakpoint",
        "query",
        "query",
        "op",
        "breakpoint",
        "query",
        "query",
        "op",
        "breakpoint",
        "query",
        "op",
        "breakpoint",
        "query",
        "breakpoint",
        "breakpoint",
        "_",
        "a",
        "_",
        "breakpoint",
        "a",
        "x",
        "parseInt",
        "a",
        "y",
        "parseInt",
        "a",
        "isNaN",
        "x",
        "units",
        "a",
        "x",
        "isNaN",
        "y",
        "units",
        "a",
        "y",
        "isNaN",
        "x",
        "op",
        "media",
        "media",
        "y",
        "units",
        "media",
        "y",
        "units",
        "media",
        "media",
        "y",
        "units",
        "media",
        "y",
        "units",
        "isNaN",
        "y",
        "op",
        "media",
        "x",
        "units",
        "media",
        "media",
        "media",
        "x",
        "units",
        "media",
        "x",
        "units",
        "media",
        "x",
        "units",
        "op",
        "media",
        "x",
        "units",
        "media",
        "y",
        "units",
        "media",
        "y",
        "units",
        "media",
        "x",
        "units",
        "media",
        "x",
        "units",
        "y",
        "units",
        "media",
        "x",
        "units",
        "y",
        "units",
        "a",
        "media",
        "a",
        "media",
        "a",
        "_",
        "query",
        "media",
        "media",
        "_",
        "query",
        "_",
        "query",
        "query",
        "handler",
        "_",
        "query",
        "handler",
        "_",
        "query",
        "handler",
        "i",
        "i",
        "_",
        "i",
        "e",
        "_",
        "i",
        "_",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "_",
        "__",
        "_",
        "__",
        "query",
        "handler",
        "_",
        "query",
        "handler",
        "__",
        "query",
        "_",
        "query",
        "__",
        "root",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "exports",
        "factory",
        "root",
        "factory",
        "breakpoints"
    ],
    "literals": [
        "\"use strict\"",
        "'resize'",
        "'orientationchange'",
        "'load'",
        "'fullscreenchange'",
        "'>='",
        "'gte'",
        "'<='",
        "'lte'",
        "'>'",
        "'gt'",
        "'<'",
        "'lt'",
        "'!'",
        "'not'",
        "'eq'",
        "'gte'",
        "'screen'",
        "'lte'",
        "'screen and (max-width: '",
        "')'",
        "'gt'",
        "'screen and (min-width: '",
        "')'",
        "'lt'",
        "'screen and (max-width: -1px)'",
        "'not'",
        "'screen and (min-width: '",
        "')'",
        "'screen and (max-width: '",
        "')'",
        "'gte'",
        "'screen and (min-width: '",
        "')'",
        "'lte'",
        "'screen'",
        "'gt'",
        "'screen and (max-width: -1px)'",
        "'lt'",
        "'screen and (max-width: '",
        "')'",
        "'not'",
        "'screen and (max-width: '",
        "')'",
        "'screen and (min-width: '",
        "')'",
        "'gte'",
        "'screen and (min-width: '",
        "')'",
        "'lte'",
        "'screen and (max-width: '",
        "')'",
        "'gt'",
        "'screen and (min-width: '",
        "')'",
        "'lt'",
        "'screen and (max-width: '",
        "')'",
        "'not'",
        "'screen and (max-width: '",
        "'), screen and (min-width: '",
        "')'",
        "'screen and (min-width: '",
        "') and (max-width: '",
        "')'",
        "'('",
        "'screen and '",
        "'function'",
        "'object'"
    ],
    "variables": [
        "breakpoints",
        "_",
        "breakpoint",
        "op",
        "media",
        "a",
        "x",
        "y",
        "units",
        "i",
        "e"
    ],
    "comments": [
        "breakpoints.js v0.1-dev | @ajlkn | MIT licensed",
        "Set list.",
        "Add event listeners.",
        "Media for this query doesn't exist? Generate it.",
        "Determine operator, breakpoint.",
        "Greater than or equal.",
        "Less than or equal.",
        "Greater than.",
        "Less than.",
        "Not.",
        "Equal.",
        "Build media.",
        "Range.",
        "Max only.",
        "Greater than or equal (>= 0 / anything)",
        "Less than or equal (<= y)",
        "Greater than (> y)",
        "Less than (< 0 / invalid)",
        "Not (> y)",
        "Equal (<= y)",
        "Min only.",
        "Greater than or equal (>= x)",
        "Less than or equal (<= inf / anything)",
        "Greater than (> inf / invalid)",
        "Less than (< x)",
        "Not (< x)",
        "Equal (>= x)",
        "Min and max.",
        "Greater than or equal.",
        "Less than or equal.",
        "Greater than.",
        "Less than.",
        "Not.",
        "Equal.",
        "String.",
        "Missing a media type? Prefix with \"screen\".",
        "Otherwise, use as-is.",
        "Cache.",
        "Register event.",
        "Query active *right now*? Call handler.",
        "Step through events.",
        "Get event.",
        "Active?",
        "Hasn't been called yet?",
        "Mark as called.",
        "Call handler.",
        "Otherwise ...",
        "Previously called?",
        "Unmark as called.",
        "UMD Wrapper (github.com/umdjs/umd/blob/master/returnExports.js | @umdjs + @nason)",
        "AMD.",
        "Node.",
        "Breakpoints global."
    ],
    "docstrings": [
        "* List.\n\t * @var {array}",
        "* Media cache.\n\t * @var {object}",
        "* Events.\n\t * @var {array}",
        "* Initialize.\n\t * @param {array} list List.",
        "* Determines if a given query is active.\n\t * @param {string} query Query.\n\t * @return {bool} True if yes, false if no.",
        "* Registers an event.\n\t * @param {string} query Query.\n\t * @param {function} handler Handler.",
        "* Polls for events."
    ],
    "functions": [
        "__"
    ],
    "classes": []
}