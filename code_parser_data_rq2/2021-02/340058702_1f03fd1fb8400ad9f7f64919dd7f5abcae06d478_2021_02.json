{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "traverseDocsConfig",
        "path",
        "docInfo",
        "replaceMarkdownText",
        "fs",
        "path",
        "pa",
        "ele",
        "fs",
        "path",
        "ele",
        "info",
        "readDirSync",
        "path",
        "ele",
        "docInfo",
        "replaceMarkdownText",
        "path",
        "ele",
        "fileNameReg",
        "filePath",
        "shouldFormat",
        "readFile",
        "filePath",
        "docInfo",
        "replaceMarkdownText",
        "filePath",
        "docInfo",
        "replaceMarkdownText",
        "fs",
        "filePath",
        "err",
        "data",
        "err",
        "err",
        "data",
        "codeTxt",
        "replaceMarkdownText",
        "codeTxt",
        "docInfo",
        "filePath",
        "writeFile",
        "filePath",
        "codeTxt",
        "codeTxt",
        "docInfo",
        "filePath",
        "codeTxt",
        "repoUrl",
        "commitId",
        "filePath",
        "codeTxt",
        "title",
        "title",
        "title",
        "title",
        "codeTxt",
        "title",
        "codeTxt",
        "codeTxt",
        "codeTxt",
        "match",
        "p1",
        "p2",
        "p2",
        "p2",
        "match",
        "p2",
        "p1",
        "p1",
        "parentDepth",
        "depth",
        "p1",
        "prefix",
        "url",
        "p1",
        "codeTxt",
        "filePath",
        "codeTxt",
        "fs",
        "filePath",
        "codeTxt",
        "err",
        "err",
        "err",
        "path",
        "__dirname",
        "layoutTemplateFile",
        "loadYaml",
        "docConfig",
        "result",
        "data",
        "data",
        "item",
        "item",
        "item",
        "commitId",
        "repo",
        "repo",
        "docName",
        "version",
        "docName",
        "version",
        "docsInfo",
        "tpl",
        "localPath",
        "menuFileName",
        "menuFileName",
        "menuFileName",
        "execSync",
        "repo",
        "repoUrl",
        "commitId",
        "localPath",
        "menuFileName",
        "handleMenuFiles",
        "menuFileName",
        "docName",
        "version",
        "generateLayoutTemplate",
        "targetPath",
        "tpl",
        "handleDocsFiles",
        "docsInfo",
        "targetPath",
        "tpl",
        "promises",
        "targetPath",
        "codeTxt",
        "codeTxt",
        "codeTxt",
        "codeTxt",
        "match",
        "p1",
        "p2",
        "p3",
        "p1",
        "tpl",
        "p3",
        "promises",
        "targetPath",
        "codeTxt",
        "docsInfo",
        "docsInfo",
        "docInfo",
        "path",
        "__dirname",
        "localPath",
        "readDirSync",
        "root",
        "docInfo",
        "replaceMarkdownText",
        "menuFilePath",
        "docInfo",
        "localPath",
        "loadYaml",
        "menuFilePath",
        "nativeObject",
        "version",
        "nativeObject",
        "commitId",
        "handleMenuPath",
        "nativeObject",
        "localPath",
        "YAML",
        "nativeObject",
        "promises",
        "menuFilePath",
        "yamlString",
        "localPath",
        "item",
        "item",
        "pagePath",
        "item",
        "pagePath",
        "pagePath",
        "localPath",
        "pagePath",
        "item",
        "handleMenuPath",
        "item",
        "localPath",
        "filePath",
        "resolve",
        "YAML",
        "filePath",
        "result",
        "resolve",
        "result"
    ],
    "literals": [
        "\"fs\"",
        "\"path\"",
        "'yamljs'",
        "\"child_process\"",
        "'./data/docs.yml'",
        "'/themes/docsy/layouts/projectDoc/baseof.html'",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "\"happen an error when read file , error is \"",
        "'.git'",
        "'/tree'",
        "/${commitId}",
        "'/docs'",
        "'\\n'",
        "'ï¼š'",
        "---\ntitle: ${title}\ntype: projectDoc\nlayout: baseof\n---\\n",
        "'http'",
        "''",
        "'#'",
        "${p1}(${str})",
        "'./'",
        "${p1}(./../${str})",
        "'../'",
        "''",
        "${p1}(${prefix}/${url})",
        "${p1}(../${str})",
        "\"happen an error when write file , error is \"",
        "''",
        "'skywalking'",
        "'main'",
        "/content/docs/${docName}/${version}",
        "${docName}${version}",
        "'_'",
        "{{ if in .File.Path \"${localPath.split('/content/')[1]}\" }}\n                    <h5>Documentation: {{.Site.Data.docSidebar.${menuFileName}.version}}</h5>\n                    {{ partial \"sidebar-recurse.html\" .Site.Data.docSidebar.${menuFileName} }}\n                    <div class=\"commit-id\">Commit Id: {{.Site.Data.docSidebar.${menuFileName}.commitId}}</div>\n                    {{ end }}\\n",
        "'/content/'",
        "\"./doc.sh\" ${repo} ${repoUrl} ${commitId} ${localPath} ${menuFileName}",
        "./data/docSidebar/${menuFileName}.yml",
        "/docs/${docName}/${version}",
        "'utf8'",
        "${p1}\\n${tpl}\\n${p3}",
        "'utf8'",
        "'utf8'",
        "'http'"
    ],
    "variables": [
        "fs",
        "path",
        "YAML",
        "fs",
        "docConfig",
        "layoutTemplateFile",
        "pa",
        "info",
        "filePath",
        "fileNameReg",
        "shouldFormat",
        "codeTxt",
        "docInfo",
        "prefix",
        "depth",
        "title",
        "parentDepth",
        "url",
        "tpl",
        "docsInfo",
        "targetPath",
        "result",
        "item",
        "docName",
        "localPath",
        "menuFileName",
        "codeTxt",
        "docInfo",
        "root",
        "nativeObject",
        "docInfo",
        "yamlString",
        "pagePath"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "readDirSync",
        "readFile",
        "replaceMarkdownText",
        "writeFile",
        "traverseDocsConfig",
        "generateLayoutTemplate",
        "handleDocsFiles",
        "handleMenuFiles",
        "handleMenuPath",
        "loadYaml"
    ],
    "classes": []
}