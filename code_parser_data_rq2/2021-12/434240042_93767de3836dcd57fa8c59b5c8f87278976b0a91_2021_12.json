{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Threading",
        "Tasks",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Microsoft",
        "EntityFrameworkCore",
        "Doctors",
        "Doctors",
        "Data",
        "Microsoft",
        "AspNetCore",
        "Identity",
        "Doctors",
        "Controllers",
        "Route",
        "ApiController",
        "ControllerBase",
        "UserManager",
        "IdentityUser",
        "ApplicationDbContext",
        "context",
        "UserManager",
        "IdentityUser",
        "userManager",
        "_context",
        "context",
        "_userManager",
        "userManager",
        "HttpGet",
        "JsonResult",
        "Company",
        "CompanyName",
        "CompanyTitle",
        "JsonH",
        "SuccessAsync",
        "ss",
        "HttpGet",
        "ActionResult",
        "Company",
        "Threading",
        "Sleep",
        "HttpContext",
        "Items",
        "_context",
        "Companies",
        "FirstOrDefaultAsync",
        "c",
        "OwnerId",
        "userId",
        "ToString",
        "company",
        "ContactInfos",
        "_context",
        "ContactInfos",
        "Where",
        "c",
        "Company",
        "Id",
        "company",
        "Id",
        "ToList",
        "company",
        "JsonH",
        "ErrorAsync",
        "JsonH",
        "SuccessAsync",
        "company",
        "HttpGet",
        "ActionResult",
        "Company",
        "_context",
        "Companies",
        "ToListAsync",
        "HttpGet",
        "ActionResult",
        "Company",
        "id",
        "_context",
        "Companies",
        "FindAsync",
        "id",
        "company",
        "NotFound",
        "company",
        "HttpPut",
        "IActionResult",
        "id",
        "Company",
        "company",
        "id",
        "company",
        "Id",
        "BadRequest",
        "_context",
        "Entry",
        "company",
        "State",
        "EntityState",
        "Modified",
        "_context",
        "SaveChangesAsync",
        "DbUpdateConcurrencyException",
        "CompanyExists",
        "id",
        "NotFound",
        "NoContent",
        "HttpPost",
        "ActionResult",
        "Company",
        "Company",
        "company",
        "company",
        "Id",
        "Guid",
        "NewGuid",
        "ToString",
        "ICollection",
        "ContactInfo",
        "ContactInfo",
        "item",
        "company",
        "ContactInfos",
        "contacts",
        "Add",
        "ContactInfo",
        "Company",
        "company",
        "Type",
        "item",
        "Type",
        "Value",
        "item",
        "Value",
        "Id",
        "Guid",
        "NewGuid",
        "ToString",
        "ex",
        "JsonH",
        "ErrorAsync",
        "ex",
        "Message",
        "Guid",
        "NewGuid",
        "ToString",
        "HttpContext",
        "Items",
        "company",
        "OwnerId",
        "userId",
        "ToString",
        "company",
        "ContactInfos",
        "ContactInfo",
        "contacts",
        "_context",
        "Companies",
        "Add",
        "company",
        "_context",
        "SaveChangesAsync",
        "DbUpdateException",
        "ex",
        "CompanyExists",
        "company",
        "Id",
        "JsonH",
        "ErrorAsync",
        "JsonH",
        "ErrorAsync",
        "ex",
        "Message",
        "company",
        "ex",
        "JsonH",
        "ErrorAsync",
        "ex",
        "Message",
        "HttpDelete",
        "ActionResult",
        "Company",
        "id",
        "_context",
        "Companies",
        "FindAsync",
        "id",
        "company",
        "NotFound",
        "_context",
        "Companies",
        "Remove",
        "company",
        "_context",
        "SaveChangesAsync",
        "company",
        "id",
        "_context",
        "Companies",
        "Any",
        "e",
        "Id",
        "id"
    ],
    "literals": [
        "\"api/[controller]\"",
        "\"get-test\"",
        "\"kiloo\"",
        "\"ghanooon sazi\"",
        "\"get-my-company\"",
        "\"userId\"",
        "\"Company Not Found.\"",
        "\"{id}\"",
        "\"{id}\"",
        "\"new-company\"",
        "\"userId\"",
        "\"Conflict company id\"",
        "\"Db Exception: \"",
        "\"{id}\""
    ],
    "variables": [
        "ApplicationDbContext",
        "_context",
        "_userManager",
        "ss",
        "userId",
        "company",
        "company",
        "contacts",
        "IdentityUser",
        "_user",
        "newId",
        "userId",
        "company"
    ],
    "comments": [
        "_context.ContactInfos.AddRange(contacts);",
        "try",
        "{",
        "//await _context.SaveChangesAsync();",
        "}",
        "catch (DbUpdateException)",
        "{",
        "return await JsonH.ErrorAsync(\"Conflict Contact Infos\");",
        "}",
        "var userId = HttpContext.Items[\"userId\"];",
        "if (userId == null)",
        "return await JsonH.ErrorAsync(\"Couldn't find the users Id in httpContext.\");",
        "_user = await _userManager.FindByIdAsync(userId.ToString());",
        "if (_user == null)",
        "return await JsonH.ErrorAsync(\"Couldn't find the user in DB.\");",
        "UsersCompany nUC = new UsersCompany();",
        "nUC.CompanyId = company.Id;",
        "nUC.UserId = _user.Id;",
        "_context.UsersCompany.Add(nUC);",
        "return Conflict();",
        "return await JsonH.SuccessAsync(company);",
        "return CreatedAtAction(\"GetCompany\", new { id = company.Id }, company);"
    ],
    "docstrings": [],
    "functions": [
        "CompaniesController",
        "GetTset",
        "GetMyCompany",
        "GetCompanies",
        "GetCompany",
        "PutCompany",
        "PostCompany",
        "DeleteCompany",
        "CompanyExists"
    ],
    "classes": [
        "CompaniesController"
    ]
}