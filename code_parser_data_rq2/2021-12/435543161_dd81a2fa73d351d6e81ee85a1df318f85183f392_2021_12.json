{
    "identifiers": [
        "numpy",
        "np",
        "collections",
        "deque",
        "matplotlib",
        "pyplot",
        "plt",
        "maxDelay",
        "delay",
        "maxDelay",
        "gd",
        "gradient",
        "start",
        "learning_rate",
        "delay",
        "delay",
        "n_iter",
        "noIters",
        "iterList",
        "append",
        "noIters",
        "plt",
        "plot",
        "maxDelay",
        "iterList",
        "plt",
        "yscale",
        "plt",
        "ylabel",
        "plt",
        "xlabel",
        "plt",
        "grid",
        "plt",
        "show",
        "gradient",
        "start",
        "learning_rate",
        "n_iter",
        "tol",
        "delay",
        "start",
        "deque",
        "_",
        "delay",
        "q",
        "append",
        "start",
        "start",
        "n_iter",
        "i",
        "n_iter",
        "q",
        "popleft",
        "learning_rate",
        "gradient",
        "vector",
        "np",
        "all",
        "np",
        "abs",
        "diff",
        "tol",
        "i",
        "newVector",
        "diff",
        "q",
        "append",
        "newVector",
        "allVectors",
        "append",
        "newVector",
        "vector",
        "allVectors",
        "nIters",
        "v",
        "v",
        "testDelays"
    ],
    "literals": [
        "'log'",
        "'Number of iterations'",
        "'Delay'"
    ],
    "variables": [
        "iterList",
        "gradient",
        "vectorList",
        "noIters",
        "allVectors",
        "q",
        "newVector",
        "nIters",
        "vector",
        "diff",
        "nIters"
    ],
    "comments": [
        "Calculates step size",
        "Checks gradient against tolerance",
        "Adds step to gradient",
        "print(vectorList)"
    ],
    "docstrings": [
        "'''\n    Inputs:\n    gradient: Function that takes a vector and returns a gradient of the function\n    start: The initial point on the function\n    learning rate: Controls the magnitude of each step\n    n_iter: number of iterations\n    '''",
        "'''gradient, vectorList, noIters = gd(gradient=function, start=10, learning_rate=0.2, delay=2)\nprint(gradient)\nprint(noIters)'''"
    ],
    "functions": [
        "testDelays",
        "gd"
    ],
    "classes": []
}