{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "streamlit",
        "cache",
        "cache",
        "total_mass",
        "friction_u",
        "total_mass",
        "friction_u",
        "Ff",
        "cache",
        "friction_u",
        "friction_u",
        "cache",
        "force",
        "friction_force",
        "drag_force",
        "force",
        "friction_force",
        "drag_force",
        "Fnet",
        "cache",
        "co2_mass",
        "co2_mass",
        "cache",
        "allow_output_mutation",
        "dataframe",
        "car_mass",
        "friction_u",
        "dataframe",
        "car_mass",
        "friction_u",
        "friction_f",
        "dataframe",
        "dataframe",
        "force_net",
        "dataframe",
        "dataframe",
        "dataframe",
        "dataframe",
        "dva_dataframe",
        "index",
        "row",
        "dva_dataframe",
        "iterrows",
        "row",
        "dva_dataframe",
        "iloc",
        "index",
        "dva_dataframe",
        "reset_index",
        "drop",
        "dva_dataframe",
        "cache",
        "dva_dataframe",
        "index",
        "row",
        "dva_dataframe",
        "iterrows",
        "dva_dataframe",
        "iloc",
        "sec",
        "append",
        "row",
        "first_row",
        "pd",
        "concat",
        "sec",
        "reset_index",
        "drop",
        "pd",
        "concat",
        "dva_dataframe",
        "df",
        "axis",
        "dva_dataframe",
        "set_axis",
        "dva_dataframe",
        "columns",
        "axis",
        "inplace",
        "dva_dataframe",
        "cache",
        "dva_dataframe",
        "pd",
        "Series",
        "name",
        "index",
        "row",
        "dva_dataframe",
        "iterrows",
        "dva_dataframe",
        "iloc",
        "index",
        "index",
        "delta_v",
        "append",
        "row",
        "row_above",
        "row_above",
        "row",
        "ser",
        "pd",
        "concat",
        "delta_v",
        "reset_index",
        "drop",
        "pd",
        "concat",
        "dva_dataframe",
        "df",
        "axis",
        "dva_dataframe",
        "set_axis",
        "dva_dataframe",
        "columns",
        "axis",
        "inplace",
        "dva_dataframe",
        "cache",
        "dva_dataframe",
        "pd",
        "Series",
        "name",
        "ser",
        "index",
        "row",
        "dva_dataframe",
        "iterrows",
        "dva_dataframe",
        "iloc",
        "index",
        "v",
        "append",
        "v",
        "row",
        "v",
        "pd",
        "concat",
        "v",
        "reset_index",
        "drop",
        "pd",
        "concat",
        "dva_dataframe",
        "df",
        "axis",
        "dva_dataframe",
        "set_axis",
        "dva_dataframe",
        "columns",
        "axis",
        "inplace",
        "dva_dataframe",
        "cache",
        "dva_dataframe",
        "pd",
        "Series",
        "name",
        "index",
        "row",
        "dva_dataframe",
        "iterrows",
        "dva_dataframe",
        "iloc",
        "index",
        "delta_d",
        "append",
        "row",
        "row_above",
        "row_above",
        "row",
        "ser",
        "pd",
        "concat",
        "delta_d",
        "reset_index",
        "drop",
        "pd",
        "concat",
        "dva_dataframe",
        "df",
        "axis",
        "dva_dataframe",
        "set_axis",
        "dva_dataframe",
        "columns",
        "axis",
        "inplace",
        "dva_dataframe",
        "cache",
        "dva_dataframe",
        "pd",
        "Series",
        "name",
        "ser",
        "index",
        "row",
        "dva_dataframe",
        "iterrows",
        "dva_dataframe",
        "iloc",
        "index",
        "d",
        "append",
        "d",
        "row",
        "d",
        "pd",
        "concat",
        "d",
        "reset_index",
        "drop",
        "pd",
        "concat",
        "dva_dataframe",
        "df",
        "axis",
        "dva_dataframe",
        "set_axis",
        "dva_dataframe",
        "columns",
        "axis",
        "inplace",
        "dva_dataframe",
        "dataframe",
        "dataframe",
        "values",
        "count_t_vals",
        "count_t_vals",
        "dataframe",
        "values",
        "count_d_vals",
        "count_d_vals",
        "diffs_d",
        "diffs_t",
        "np",
        "insert",
        "velocity",
        "dataframe",
        "values",
        "count_v_vals",
        "count_v_vals",
        "np",
        "round",
        "diffs_v",
        "diffs_v",
        "diffs_t",
        "np",
        "append",
        "accel",
        "dataframe"
    ],
    "literals": [
        "\"Total Mass\"",
        "\"CO2 Mass (Mco2)\"",
        "\"Friction Coeffe (u)\"",
        "\"Friction Force (Ff)\"",
        "\"Total Mass\"",
        "\"Friction Coeffe (u)\"",
        "\"Fnet\"",
        "\"Force (N)\"",
        "\"Friction Force (Ff)\"",
        "\"Drag (FD)\"",
        "\"Time (s)\"",
        "\"Total Mass\"",
        "\"Fnet\"",
        "'Fnet'",
        "'Time (s)'",
        "'Time (s)'",
        "'Continuous Time'",
        "'Speed Change (delta v)'",
        "'Acceleration (a)'",
        "'Time (s)'",
        "'Time (s)'",
        "'Acceleration (a)'",
        "'Acceleration (a)'",
        "'Speed Change (delta v)'",
        "'Speed (v)'",
        "'Speed Change (delta v)'",
        "'Speed (v)'",
        "'Distance Change (delta d)'",
        "'Time (s)'",
        "'Time (s)'",
        "'Speed (v)'",
        "'Speed (v)'",
        "'Distance Change (delta d)'",
        "'Distance (d)'",
        "'Distance Change (delta d)'",
        "'Distance (d)'",
        "'time'",
        "'displacement'",
        "'velocity'",
        "'velocity'",
        "'acceleration'"
    ],
    "variables": [
        "Ff",
        "Fnet",
        "dataframe",
        "dataframe",
        "dataframe",
        "dataframe",
        "dva_dataframe",
        "dva_dataframe",
        "dva_dataframe",
        "dva_dataframe",
        "sec",
        "first_row",
        "df",
        "dva_dataframe",
        "dva_dataframe",
        "ser",
        "delta_v",
        "row_above",
        "row_above",
        "delta_v",
        "df",
        "dva_dataframe",
        "dva_dataframe",
        "ser",
        "v",
        "row_above",
        "df",
        "dva_dataframe",
        "dva_dataframe",
        "ser",
        "delta_d",
        "row_above",
        "delta_d",
        "df",
        "dva_dataframe",
        "dva_dataframe",
        "ser",
        "d",
        "row_above",
        "df",
        "dva_dataframe",
        "dva_dataframe",
        "count_t_vals",
        "diffs_t",
        "count_d_vals",
        "diffs_d",
        "velocity",
        "dataframe",
        "count_v_vals",
        "diffs_v",
        "diffs_v",
        "accel",
        "dataframe"
    ],
    "comments": [
        "",
        "^Python standard line length",
        "",
        "Friciton Force (Ff)",
        "---------------------------------------",
        "Friction Coeffe (u)",
        "",
        "Net force (Fnet)",
        "",
        "CO2 Mass [will be added to car mass which is give to us]",
        "",
        "Dataframe to Dva Dataframe",
        "<-- idk why I need to put this do more research",
        "Get Total Mass",
        "Get Friction_u (subject to change cause friction coeffe changes)",
        "Get Friction Force (Ff)",
        "Get Force net (Fnet)",
        "---------------------------------------",
        "dva Calculationsi",
        "Create DataFrame",
        "Replace all negative with 0 (for covinence at this moment)",
        "Find where to start",
        "row_above = dva_dataframe.iloc[[index-1]]",
        "row_above_diff = 0-row_above['Fnet']",
        "row_diff = 0-row['Fnet']",
        "if abs(row_above_diff) < abs(row_diff):",
        "dva_dataframe = dva_dataframe.iloc[index-1:]",
        "break",
        "",
        "Calculate Continuous Time",
        "<- index is not being used which makes it waste memory but if remove index variable row is not created",
        "dva_dataframe = dva_dataframe.iloc[: , 1:]",
        "",
        "Acceleration (a)",
        "---------------------------------------",
        "Speed Change (delta v)  [Calculated using acceleration]",
        "dva_dataframe = dva_dataframe[:-1]",
        "",
        "Speed (v)   [Calculated using delta v]",
        "---------------------------------------",
        "distance change (delta d) [calculated using speed]",
        "",
        "distance (d)  [calculated using delta d]",
        "",
        "d-t, v-t, a-t calculator",
        "get differences for time values",
        "get differences for displacement values",
        "create velocity column and calculte it",
        "calculate difference in velocity",
        "calculate accelertaion",
        ""
    ],
    "docstrings": [
        "\"\"\"Returns a dva_dataframe ready for the dva to be calculated. It takes in all the\n    data from the inputed CSV file and outputs only Time, total mass, and Fnet over time\n    \"\"\"",
        "\"\"\"This function calculates the v-t and a-t using the d-t table\"\"\""
    ],
    "functions": [
        "friction_f",
        "friction_u",
        "force_net",
        "co2_mass",
        "dataframe_to_dva",
        "find_continuous_time",
        "cal_speed_change",
        "cal_speed",
        "cal_distance_change",
        "cal_distance",
        "calculate_dva_t"
    ],
    "classes": []
}