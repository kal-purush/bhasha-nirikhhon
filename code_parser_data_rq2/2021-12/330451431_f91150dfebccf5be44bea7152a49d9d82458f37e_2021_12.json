{
    "identifiers": [
        "typing",
        "Any",
        "utils",
        "globalvars",
        "METADATA_FILE",
        "json",
        "METADATA_FILE",
        "filename",
        "METADATA_FILE",
        "filename",
        "loadFile",
        "open",
        "filename",
        "myfile",
        "myfile",
        "read",
        "json",
        "loads",
        "data",
        "createFile",
        "clear",
        "addDefaults",
        "writeFile",
        "json",
        "dumps",
        "storage",
        "indent",
        "open",
        "filename",
        "outfile",
        "outfile",
        "write",
        "txt",
        "storage",
        "key",
        "Any",
        "storage",
        "key",
        "key",
        "storage",
        "keys",
        "add",
        "add",
        "add",
        "add",
        "add",
        "key",
        "value",
        "Any",
        "storage",
        "value",
        "key",
        "key",
        "storage",
        "storage",
        "pop",
        "key"
    ],
    "literals": [
        "'r'",
        "'w'",
        "\"\"",
        "'antenna'",
        "'unknown'",
        "'antenna-type'",
        "'unknown'",
        "'receiver'",
        "'RTL-SDR v3'",
        "'lna'",
        "'none'",
        "'filter'",
        "'none'"
    ],
    "variables": [
        "filename",
        "storage",
        "filename",
        "data",
        "storage",
        "storage",
        "txt",
        "key"
    ],
    "comments": [
        "Stores the keys"
    ],
    "docstrings": [
        "\"\"\"This class manages metadata, which store hardware (such as lna or receiver type), software\n       (such as recipe used) and run-time parameters (such as frequency or name of the satellite).\n       This metadata is locally stored in a JSON file. Some fields of that JSON file will be\n       overwritten (e.g. frequency and name of the sat being received), but other will be left\n       intact. The overall idea is that the station owner can put any additional information there\n       and it will be uploaded when observations are reported. This flexible approach allows\n       users to specify whatever they feel is important about their station - antenna orientation,\n       type and lenght of the cables, etc.\n\n       The file is stored in ~/.config/svarog/metadata.json. If the file is missing, it is created\n       on the first use.\"\"\"",
        "\"\"\"Creates metadata file, trying to guess as many defaults as possible.\"\"\"",
        "\"\"\"Returns the parameter or empty string if missing\"\"\""
    ],
    "functions": [
        "loadFile",
        "clear",
        "createFile",
        "writeFile",
        "getAll",
        "get",
        "addDefaults",
        "add"
    ],
    "classes": [
        "Metadata"
    ]
}