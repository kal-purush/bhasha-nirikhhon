{
    "identifiers": [
        "t",
        "e",
        "n",
        "t",
        "e",
        "t",
        "e",
        "t",
        "e",
        "n",
        "t",
        "e",
        "t",
        "t",
        "t",
        "t",
        "t",
        "e",
        "t",
        "t",
        "t",
        "n",
        "n",
        "n",
        "t",
        "c",
        "i",
        "n",
        "o",
        "i",
        "e",
        "o",
        "e",
        "c",
        "t",
        "r",
        "a",
        "t",
        "c",
        "n",
        "n",
        "r",
        "a",
        "o",
        "t",
        "e",
        "t",
        "e",
        "t",
        "t",
        "n",
        "t",
        "e",
        "t",
        "i",
        "t",
        "i",
        "t",
        "i",
        "i",
        "t",
        "i",
        "i",
        "n",
        "t",
        "e",
        "t",
        "e",
        "t",
        "e",
        "e",
        "e",
        "t",
        "e",
        "t",
        "e",
        "n",
        "e",
        "n",
        "i",
        "n",
        "t",
        "n",
        "i",
        "t",
        "e",
        "n",
        "e",
        "n",
        "e",
        "n",
        "i",
        "i",
        "i",
        "i",
        "i",
        "t",
        "i",
        "i",
        "t",
        "e",
        "c",
        "t",
        "e",
        "e",
        "t",
        "t",
        "e",
        "n",
        "c",
        "t",
        "e",
        "e",
        "t",
        "n",
        "t",
        "e",
        "e",
        "t",
        "t",
        "e",
        "n",
        "e",
        "t",
        "n",
        "t",
        "e",
        "t",
        "e",
        "e",
        "e",
        "t",
        "e",
        "t",
        "u",
        "t",
        "e",
        "t",
        "e",
        "n",
        "t",
        "e",
        "n",
        "e",
        "e",
        "t",
        "n",
        "e",
        "e",
        "n",
        "t",
        "u",
        "t",
        "e",
        "n",
        "n",
        "t",
        "e",
        "n",
        "e",
        "t",
        "n",
        "e",
        "t",
        "t",
        "t",
        "e",
        "t",
        "e",
        "n",
        "a",
        "g",
        "a",
        "w",
        "a",
        "k",
        "a",
        "b",
        "a",
        "y",
        "a",
        "p",
        "a",
        "m",
        "a",
        "v",
        "o",
        "h",
        "localStorage",
        "o",
        "f",
        "s",
        "f",
        "t",
        "c",
        "n",
        "d",
        "t",
        "t",
        "t",
        "t",
        "e",
        "n",
        "t",
        "i",
        "i",
        "a",
        "t",
        "e",
        "n",
        "t",
        "i",
        "i",
        "a",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "u",
        "e",
        "t",
        "e",
        "l",
        "h",
        "l",
        "h",
        "n",
        "r",
        "p",
        "T",
        "t",
        "s",
        "h",
        "l",
        "h",
        "e",
        "e",
        "t",
        "r",
        "k",
        "A",
        "r",
        "p",
        "T",
        "s",
        "h",
        "l",
        "h",
        "t",
        "t",
        "r",
        "k",
        "A",
        "r",
        "p",
        "T",
        "r",
        "g",
        "I",
        "i",
        "c",
        "u",
        "d",
        "i",
        "c",
        "d",
        "n",
        "localStorage",
        "l",
        "h",
        "t",
        "t",
        "l",
        "h",
        "t",
        "t",
        "e",
        "r",
        "v",
        "x",
        "r",
        "g",
        "I",
        "t",
        "r",
        "m",
        "S",
        "t",
        "t",
        "e",
        "e",
        "r",
        "p",
        "T",
        "t",
        "r",
        "m",
        "S",
        "t",
        "t",
        "r",
        "p",
        "T",
        "t",
        "l",
        "h",
        "t",
        "l",
        "h",
        "t",
        "t",
        "e",
        "e",
        "r",
        "t",
        "m",
        "S",
        "t",
        "e",
        "t",
        "n",
        "e",
        "e",
        "r",
        "t",
        "b",
        "_",
        "t",
        "e",
        "e",
        "E",
        "e",
        "e",
        "t",
        "n",
        "t",
        "n",
        "n",
        "E",
        "e",
        "e",
        "e",
        "r",
        "t",
        "y",
        "L",
        "t",
        "e",
        "l",
        "f",
        "l",
        "h",
        "t",
        "e",
        "t",
        "e",
        "l",
        "h",
        "e",
        "E",
        "e",
        "l",
        "t",
        "f",
        "n",
        "r",
        "w",
        "B",
        "E",
        "d",
        "j",
        "t",
        "t",
        "W",
        "M",
        "M",
        "C",
        "W",
        "W"
    ],
    "literals": [
        "\"use strict\"",
        "\"Cannot call a class as a function\"",
        "\"undefined\"",
        "\"@@iterator\"",
        "\"string\"",
        "\"Object\"",
        "\"Map\"",
        "\"Set\"",
        "\"Arguments\"",
        "\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"",
        "\"value\"",
        "\"Cannot initialize the same private elements twice on an object\"",
        "\"attempted to get private field on non-instance\"",
        "\"get\"",
        "\"attempted to set read only private field\"",
        "\"set\"",
        "\"attempted to \"",
        "\" private field on non-instance\"",
        "\"to-do-list\"",
        "\"Cannot call a class as a function\"",
        "\"tasks\"",
        "\"getActionButtons\"",
        "\".btn-\"",
        "\"unhideDeleteBtn\"",
        "\"hidden\"",
        "\"hidden\"",
        "\"hideDeleteButton\"",
        "\"hidden\"",
        "\"hidden\"",
        "\"generateMarkup\"",
        "'\\n    <li class=\"main-list__item '",
        "\"main-list__item--checked\"",
        "\"\"",
        "'\">\\n      <label class=\"main-list__label\">\\n        <input type=\"checkbox\" data-index=\"'",
        "'\" '",
        "\"checked\"",
        "\"\"",
        "\" class='main-list__checkbox' name=\\\"to-do-\"",
        "'\"/>\\n        <input type=\"text\" class=\"main-list__description\" data-index=\"'",
        "'\" value=\"'",
        "'\">\\n      </label>\\n      <button class=\"btn btn-action btn-'",
        "'\" type=\"button\">\\n        <ion-icon name=\"ellipsis-vertical-outline\"></ion-icon>\\n      </button>\\n      <button class=\"btn btn-action btn-delete hidden\" data-index=\"'",
        "'\" id=\"'",
        "'\" type=\"button\">\\n        <ion-icon name=\"trash-outline\"></ion-icon>\\n      </button>\\n    </li>\\n        '",
        "\"addTask\"",
        "\"deleteTask\"",
        "\"clearCompletedTasks\"",
        "\"init\"",
        "\"tasks\"",
        "\".btn-delete\"",
        "\"click\"",
        "\".main-list__description\"",
        "\"change\"",
        "\"focusin\"",
        "\"focusout\"",
        "\"btn-delete\"",
        "\".main-list__checkbox\"",
        "\"change\"",
        "\"\"",
        "\"beforeend\"",
        "\"add-input\"",
        "\"add-form\"",
        "\"btn-clear\"",
        "\"submit\"",
        "\"\"",
        "\"click\"",
        "\"load\""
    ],
    "variables": [
        "t",
        "n",
        "i",
        "a",
        "o",
        "c",
        "r",
        "i",
        "n",
        "i",
        "n",
        "i",
        "d",
        "h",
        "f",
        "v",
        "m",
        "p",
        "y",
        "b",
        "k",
        "w",
        "g",
        "E",
        "c",
        "u",
        "d",
        "i",
        "a",
        "i",
        "a",
        "n",
        "e",
        "e",
        "t",
        "t",
        "n",
        "n",
        "t",
        "n",
        "W",
        "M",
        "j",
        "C"
    ],
    "comments": [
        "# sourceMappingURL=data:application/json;charset=utf-8;base64,"
    ],
    "docstrings": [],
    "functions": [
        "e",
        "n",
        "i",
        "a",
        "o",
        "c",
        "r",
        "l",
        "s",
        "u",
        "n",
        "x",
        "S",
        "T",
        "L",
        "_",
        "A",
        "B",
        "I"
    ],
    "classes": []
}