{
    "identifiers": [
        "NServiceBus",
        "PersistenceTesting",
        "Sagas",
        "Threading",
        "Tasks",
        "NUnit",
        "Framework",
        "SagaPersisterTests",
        "configuration",
        "PersistenceTestsConfiguration",
        "param",
        "TimeSpan",
        "FromMilliseconds",
        "configuration",
        "Configure",
        "Test",
        "configuration",
        "RequiresPessimisticConcurrencySupport",
        "Guid",
        "NewGuid",
        "ToString",
        "TestSagaData",
        "SomeId",
        "correlationPropertyData",
        "SagaProperty",
        "SaveSaga",
        "saga",
        "TaskCompletionSource",
        "TaskCreationOptions",
        "RunContinuationsAsynchronously",
        "TaskCompletionSource",
        "TaskCreationOptions",
        "RunContinuationsAsynchronously",
        "configuration",
        "SagaStorage",
        "FirstSession",
        "configuration",
        "GetContextBagForSagaStorage",
        "configuration",
        "SynchronizedStorage",
        "OpenSession",
        "firstSessionContext",
        "persister",
        "Get",
        "TestSagaData",
        "saga",
        "Id",
        "firstSaveSession",
        "firstSessionContext",
        "firstSessionGetDone",
        "SetResult",
        "Delay",
        "configuration",
        "SessionTimeout",
        "Value",
        "configuration",
        "SessionTimeout",
        "Value",
        "ConfigureAwait",
        "secondSessionGetDone",
        "ConfigureAwait",
        "record",
        "SagaProperty",
        "persister",
        "Update",
        "record",
        "firstSaveSession",
        "firstSessionContext",
        "firstSaveSession",
        "CompleteAsync",
        "SecondSession",
        "configuration",
        "GetContextBagForSagaStorage",
        "configuration",
        "SynchronizedStorage",
        "OpenSession",
        "secondContext",
        "firstSessionGetDone",
        "ConfigureAwait",
        "persister",
        "Get",
        "TestSagaData",
        "saga",
        "Id",
        "secondSession",
        "secondContext",
        "secondSessionGetDone",
        "SetResult",
        "recordTask",
        "ConfigureAwait",
        "record",
        "SagaProperty",
        "persister",
        "Update",
        "record",
        "secondSession",
        "secondContext",
        "secondSession",
        "CompleteAsync",
        "FirstSession",
        "SecondSession",
        "Assert",
        "DoesNotThrowAsync",
        "firstSessionTask",
        "Assert",
        "CatchAsync",
        "secondSessionTask",
        "GetById",
        "TestSagaData",
        "saga",
        "Id",
        "Assert",
        "That",
        "updatedSaga",
        "SagaProperty",
        "Is",
        "EqualTo",
        "Saga",
        "TestSagaData",
        "IAmStartedByMessages",
        "StartMessage",
        "StartMessage",
        "message",
        "IMessageHandlerContext",
        "context",
        "NotImplementedException",
        "SagaPropertyMapper",
        "TestSagaData",
        "mapper",
        "mapper",
        "ConfigureMapping",
        "StartMessage",
        "msg",
        "SomeId",
        "ToSaga",
        "saga",
        "SomeId",
        "ContainSagaData",
        "TestVariant",
        "param",
        "param"
    ],
    "literals": [
        "\"initial value\"",
        "\"session 1 value\"",
        "\"session 2 value\"",
        "\"session 1 value\""
    ],
    "variables": [
        "correlationPropertyData",
        "saga",
        "firstSessionGetDone",
        "secondSessionGetDone",
        "persister",
        "firstSessionContext",
        "firstSaveSession",
        "record",
        "secondContext",
        "secondSession",
        "recordTask",
        "record",
        "firstSessionTask",
        "secondSessionTask",
        "updatedSaga",
        "SomeId",
        "SagaProperty",
        "SomeId"
    ],
    "comments": [
        "not all persisters guarantee a TimeoutException"
    ],
    "docstrings": [],
    "functions": [
        "OneTimeSetUp",
        "Should_fail_with_timeout",
        "Handle",
        "ConfigureHowToFindSaga",
        "When_concurrent_update_exceed_lock_request_timeout_pessimistic"
    ],
    "classes": [
        "When_concurrent_update_exceed_lock_request_timeout_pessimistic",
        "TestSaga",
        "TestSagaData",
        "StartMessage"
    ]
}