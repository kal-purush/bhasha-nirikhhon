{
    "identifiers": [
        "pandas",
        "pd",
        "surprise",
        "Reader",
        "Dataset",
        "surprise",
        "accuracy",
        "surprise",
        "model_selection",
        "train_test_split",
        "surprise",
        "SVD",
        "pd",
        "read_csv",
        "surprise",
        "dataset",
        "DatasetAutoFolds",
        "Reader",
        "line_format",
        "sep",
        "rating_scale",
        "DatasetAutoFolds",
        "ratings_file",
        "reader",
        "reader",
        "data_folds",
        "build_full_trainset",
        "SVD",
        "n_epochs",
        "n_factors",
        "random_state",
        "algo",
        "fit",
        "trainset",
        "pd",
        "read_csv",
        "ratings",
        "ratings",
        "movieid",
        "movieid",
        "movieid",
        "count"
    ],
    "literals": [
        "\"../dataset/ml-latest-small/ratings.csv\"",
        "'user item rating timestamp'",
        "','",
        "'../dataset/ml-latest-small/ratings_noh.csv'",
        "r\"../dataset/ml-latest-small/movies.csv\"",
        "'userId'",
        "'movieId'",
        "'movieid'"
    ],
    "variables": [
        "ratings",
        "reader",
        "data_folds",
        "trainset",
        "algo",
        "movies",
        "movieid"
    ],
    "comments": [
        "Surprise를 활용한 개인화 추천",
        "'n_epochs': 20, 'n_factors': 50",
        "데이터 분리 과정 없이 전체를 학습 데이터로 사용",
        "오류 발생",
        "reader = Reader(rating_scale = (0.5, 5))",
        "data = Dataset.load_from_file(ratings['userId', 'moviId', 'rating'], reader)",
        "algo = SVD(n_factor=50, random=0)",
        "algo.fit(data)",
        "build_full_trainset() 메서드를 호출",
        "전체 데이터를 학습 데이터로 이용할 수 있다",
        "학습",
        "userId =9 사용자로 지정하여 테스트 진행",
        "movieid==42",
        "if movieid[movieid == 42].count() == 0:",
        "print(\"There is no rating of 42 for user 9\")",
        "",
        "# print(movies[movies['movieId']] == 42)",
        "print(movies['movieId'])",
        "uid = str(9)",
        "iid = str(42)",
        "",
        "pred = algo.predict(uid, iid, verbose=True)"
    ],
    "docstrings": [
        "\"\"\"\nSurprise 패키지로 학습된 추천 알고리즘을 기반으로\n특정 사용자가 아직 평점을 매기지 않은 (관람하지 않은) 영화 중에서\n개인 취향에 가장 적절한 영화를 추천\n\"\"\""
    ],
    "functions": [],
    "classes": []
}