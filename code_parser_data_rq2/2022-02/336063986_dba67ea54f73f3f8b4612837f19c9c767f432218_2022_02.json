{
    "identifiers": [
        "torch",
        "torch",
        "nn",
        "functional",
        "F",
        "torch",
        "optim",
        "optim",
        "argparse",
        "torchquantum",
        "tq",
        "torchquantum",
        "functional",
        "tqf",
        "examples",
        "core",
        "datasets",
        "MNIST",
        "examples",
        "core",
        "schedulers",
        "CosineAnnealingWarmupRestarts",
        "torch",
        "optim",
        "lr_scheduler",
        "CosineAnnealingLR",
        "dst",
        "tq",
        "QuantumModule",
        "tq",
        "QuantumModule",
        "tq",
        "QuantumModuleList",
        "tq",
        "QuantumModuleList",
        "tq",
        "QuantumModuleList",
        "tq",
        "QuantumModuleList",
        "tq",
        "QuantumModuleList",
        "tq",
        "QuantumModuleList",
        "tq",
        "QuantumModuleList",
        "tq",
        "QuantumModuleList",
        "idx",
        "layer1",
        "append",
        "tq",
        "U3",
        "has_params",
        "trainable",
        "layer2",
        "append",
        "tq",
        "U3",
        "has_params",
        "trainable",
        "layer3",
        "append",
        "tq",
        "U3",
        "has_params",
        "trainable",
        "layer4",
        "append",
        "tq",
        "U3",
        "has_params",
        "trainable",
        "clayer1",
        "append",
        "tq",
        "CU3",
        "has_params",
        "trainable",
        "clayer2",
        "append",
        "tq",
        "CU3",
        "has_params",
        "trainable",
        "clayer3",
        "append",
        "tq",
        "CU3",
        "has_params",
        "trainable",
        "clayer4",
        "append",
        "tq",
        "CU3",
        "has_params",
        "trainable",
        "tq",
        "static_support",
        "q_device",
        "tq",
        "QuantumDevice",
        "q_device",
        "idx",
        "layer1",
        "idx",
        "q_device",
        "wires",
        "layer2",
        "idx",
        "q_device",
        "wires",
        "layer3",
        "idx",
        "q_device",
        "wires",
        "layer4",
        "idx",
        "q_device",
        "wires",
        "clayer1",
        "idx",
        "q_device",
        "wires",
        "clayer2",
        "idx",
        "q_device",
        "wires",
        "clayer3",
        "idx",
        "q_device",
        "wires",
        "clayer4",
        "idx",
        "q_device",
        "wires",
        "tq",
        "QuantumDevice",
        "n_wires",
        "n_wires",
        "tq",
        "GeneralEncoder",
        "tq",
        "encoder_op_list_name_dict",
        "QLayer",
        "tq",
        "MeasureAll",
        "tq",
        "PauliZ",
        "x",
        "use_qiskit",
        "x",
        "shape",
        "F",
        "avg_pool2d",
        "x",
        "view",
        "bsz",
        "use_qiskit",
        "qiskit_processor",
        "process_parameterized",
        "q_device",
        "encoder",
        "q_layer",
        "measure",
        "x",
        "encoder",
        "q_device",
        "x",
        "q_layer",
        "q_device",
        "measure",
        "q_device",
        "num_class",
        "x",
        "reshape",
        "bsz",
        "sum",
        "squeeze",
        "F",
        "log_softmax",
        "x",
        "dim",
        "x",
        "dataflow",
        "model",
        "device",
        "optimizer",
        "masker",
        "feed_dict",
        "dataflow",
        "feed_dict",
        "to",
        "device",
        "feed_dict",
        "to",
        "device",
        "model",
        "inputs",
        "F",
        "nll_loss",
        "outputs",
        "targets",
        "optimizer",
        "zero_grad",
        "loss",
        "backward",
        "masker",
        "step",
        "loss",
        "item",
        "end",
        "dataflow",
        "split",
        "model",
        "device",
        "qiskit",
        "torch",
        "no_grad",
        "feed_dict",
        "dataflow",
        "split",
        "feed_dict",
        "to",
        "device",
        "feed_dict",
        "to",
        "device",
        "model",
        "inputs",
        "use_qiskit",
        "qiskit",
        "target_all",
        "append",
        "targets",
        "output_all",
        "append",
        "outputs",
        "torch",
        "cat",
        "target_all",
        "dim",
        "torch",
        "cat",
        "output_all",
        "dim",
        "output_all",
        "topk",
        "dim",
        "indices",
        "eq",
        "target_all",
        "view",
        "expand_as",
        "indices",
        "target_all",
        "shape",
        "masks",
        "sum",
        "item",
        "corrects",
        "size",
        "F",
        "nll_loss",
        "output_all",
        "target_all",
        "item",
        "split",
        "accuracy",
        "split",
        "loss",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "parse_args",
        "args",
        "num_class",
        "MNIST",
        "root",
        "train_valid_split_ratio",
        "center_crop",
        "resize",
        "resize_mode",
        "binarize",
        "digits_of_interest",
        "args",
        "num_class",
        "MNIST",
        "root",
        "train_valid_split_ratio",
        "center_crop",
        "resize",
        "resize_mode",
        "binarize",
        "digits_of_interest",
        "split",
        "dataset",
        "torch",
        "utils",
        "data",
        "RandomSampler",
        "dataset",
        "split",
        "torch",
        "utils",
        "data",
        "DataLoader",
        "dataset",
        "split",
        "batch_size",
        "sampler",
        "sampler",
        "num_workers",
        "pin_memory",
        "torch",
        "cuda",
        "is_available",
        "torch",
        "device",
        "use_cuda",
        "QFCModel",
        "to",
        "device",
        "args",
        "num_class",
        "model",
        "args",
        "epochs",
        "optim",
        "Adam",
        "model",
        "parameters",
        "lr",
        "weight_decay",
        "CosineAnnealingWarmupRestarts",
        "optimizer",
        "first_cycle_steps",
        "n_epochs",
        "max_lr",
        "min_lr",
        "warmup_steps",
        "CosineDecay",
        "args",
        "death_rate",
        "len",
        "dataflow",
        "args",
        "epochs",
        "Masking",
        "optimizer",
        "optimizer",
        "death_rate",
        "args",
        "death_rate",
        "death_rate_decay",
        "decay",
        "death_mode",
        "args",
        "death_mode",
        "growth_mode",
        "args",
        "growth_mode",
        "args",
        "args",
        "decay_schedule",
        "masker",
        "add_module",
        "model",
        "args",
        "density",
        "sparse_init",
        "args",
        "model",
        "q_layer",
        "static_on",
        "wires_per_block",
        "args",
        "wires_per_block",
        "epoch",
        "n_epochs",
        "epoch",
        "train",
        "dataflow",
        "model",
        "device",
        "optimizer",
        "masker",
        "optimizer",
        "param_groups",
        "args",
        "density",
        "epoch",
        "masker",
        "at_end_of_epoch",
        "valid_test",
        "dataflow",
        "model",
        "device",
        "valid_test",
        "dataflow",
        "model",
        "device",
        "qiskit",
        "scheduler",
        "step",
        "main"
    ],
    "literals": [
        "'4x4_ryzxy'",
        "'train'",
        "'image'",
        "'digit'",
        "f\"loss: {loss.item()}\"",
        "'\\r'",
        "'image'",
        "'digit'",
        "f\"{split} set accuracy: {accuracy}\"",
        "f\"{split} set loss: {loss}\"",
        "'--static'",
        "'store_true'",
        "'compute with '",
        "'static mode'",
        "'--wires-per-block'",
        "'wires per block int static mode'",
        "'--epochs'",
        "'number of training epochs'",
        "'--death_rate'",
        "'--death_mode'",
        "'magnitude'",
        "'--growth_mode'",
        "'random'",
        "'--density'",
        "'--num_class'",
        "'./mnist_data'",
        "'bilinear'",
        "'./mnist_data'",
        "'bilinear'",
        "\"cuda\"",
        "\"cpu\"",
        "'train'",
        "'cosine'",
        "'uniform_gate'",
        "f\"Epoch {epoch}:\"",
        "'lr'",
        "'valid'",
        "'test'",
        "'__main__'"
    ],
    "variables": [
        "n_wires",
        "layer1",
        "layer2",
        "layer3",
        "layer4",
        "clayer1",
        "clayer2",
        "clayer3",
        "clayer4",
        "q_device",
        "n_wires",
        "num_class",
        "q_device",
        "encoder",
        "q_layer",
        "measure",
        "bsz",
        "x",
        "x",
        "x",
        "x",
        "x",
        "inputs",
        "targets",
        "outputs",
        "loss",
        "target_all",
        "output_all",
        "inputs",
        "targets",
        "outputs",
        "target_all",
        "output_all",
        "_",
        "indices",
        "masks",
        "size",
        "corrects",
        "accuracy",
        "loss",
        "parser",
        "args",
        "dataset",
        "dataset",
        "dataflow",
        "sampler",
        "dataflow",
        "split",
        "use_cuda",
        "device",
        "model",
        "model",
        "num_class",
        "n_epochs",
        "optimizer",
        "scheduler",
        "decay",
        "masker"
    ],
    "comments": [
        "gates with trainable parameters",
        "scheduler = CosineAnnealingLR(optimizer, T_max=n_epochs)",
        "masker.add_module(model, args.density, sparse_init='uniform_global')",
        "optionally to switch to the static mode, which can bring speedup",
        "on training",
        "train",
        "valid",
        "test",
        "# run on Qiskit simulator and real Quantum Computers",
        "try:",
        "from qiskit import IBMQ",
        "from torchquantum.plugins import QiskitProcessor",
        "# firstly perform simulate",
        "print(f\"\\nTest with Qiskit Simulator\")",
        "processor_simulation = QiskitProcessor(use_real_qc=False)",
        "model.set_qiskit_processor(processor_simulation)",
        "valid_test(dataflow, 'test', model, device, qiskit=True)",
        "# then try to run on REAL QC",
        "backend_name = 'ibmq_quito'",
        "print(f\"\\nTest on Real Quantum Computer {backend_name}\")",
        "processor_real_qc = QiskitProcessor(use_real_qc=True,",
        "backend_name=backend_name)",
        "model.set_qiskit_processor(processor_real_qc)",
        "valid_test(dataflow, 'test', model, device, qiskit=True)",
        "except ImportError:",
        "print(\"Please install qiskit, create an IBM Q Experience Account and \"",
        "\"save the account token according to the instruction at \"",
        "\"'https://github.com/Qiskit/qiskit-ibmq-provider', \"",
        "\"then try again.\")"
    ],
    "docstrings": [],
    "functions": [
        "forward",
        "forward",
        "train",
        "valid_test",
        "main"
    ],
    "classes": [
        "QFCModel",
        "QLayer"
    ]
}