{
    "identifiers": [
        "require",
        "describe",
        "test",
        "addAllNumbers",
        "expect",
        "scenario1",
        "addAllNumbers",
        "expect",
        "scenario2",
        "test",
        "addAllNumbers",
        "expect",
        "scenario",
        "describe",
        "test",
        "doubleAllNumbers",
        "expect",
        "scenario1",
        "doubleAllNumbers",
        "expect",
        "scenario2",
        "doubleAllNumbers",
        "expect",
        "scenario3",
        "test",
        "doubleAllNumbers",
        "expect",
        "scenario",
        "describe",
        "test",
        "getAllEvenNumbers",
        "expect",
        "scenario1",
        "getAllEvenNumbers",
        "expect",
        "scenario2",
        "getAllEvenNumbers",
        "expect",
        "scenario3",
        "test",
        "getAllEvenNumbers",
        "expect",
        "scenario",
        "describe",
        "test",
        "findNumberByValue",
        "expect",
        "scenario1",
        "findNumberByValue",
        "expect",
        "scenario2",
        "test",
        "findNumberByValue",
        "expect",
        "scenario1",
        "findNumberByValue",
        "expect",
        "scenario2",
        "describe",
        "test",
        "allNumbersAreNegative",
        "expect",
        "scenario",
        "test",
        "allNumbersAreNegative",
        "expect",
        "scenario",
        "test",
        "allNumbersAreNegative",
        "expect",
        "scenario1",
        "allNumbersAreNegative",
        "expect",
        "scenario2",
        "test",
        "allNumbersAreNegative",
        "expect",
        "scenario",
        "describe",
        "test",
        "getLargestNumber",
        "expect",
        "scenario1",
        "getLargestNumber",
        "expect",
        "scenario2",
        "getLargestNumber",
        "expect",
        "scenario3",
        "getLargestNumber",
        "expect",
        "scenario4",
        "test",
        "getLargestNumber",
        "expect",
        "scenario"
    ],
    "literals": [
        "\"../src/00-numbers\"",
        "\"addAllNumbers()\"",
        "\"it should add up all the numbers into a single number\"",
        "\"it return `0` if the array is empty\"",
        "\"doubleAllNumbers()\"",
        "\"it should double all of the numbers in the array and return an array\"",
        "\"it should return an empty array if the original array is empty\"",
        "\"getAllEvenNumbers()\"",
        "\"it should return an array of only the even numbers in the original array\"",
        "\"it should return an empty array if the original array is empty\"",
        "\"findNumberByValue()\"",
        "\"it should return the given number if it is in the array\"",
        "\"it should return `null` if the number cannot be found\"",
        "\"allNumbersAreNegative()\"",
        "\"it should return `true` if all of the numbers in the array are negative\"",
        "\"it should return `false` if all of the numbers in the array are negative\"",
        "\"it should ignore `0` in the evaluation of positive or negative numbers\"",
        "\"it should return `false` if the array is empty\"",
        "\"getLargestNumber()\"",
        "\"it should return the largest number in the array\"",
        "\"it should return `null` if the array is empty\""
    ],
    "variables": [
        "scenario1",
        "scenario2",
        "scenario",
        "scenario1",
        "scenario2",
        "scenario3",
        "scenario",
        "scenario1",
        "scenario2",
        "scenario3",
        "scenario",
        "scenario1",
        "scenario2",
        "scenario1",
        "scenario2",
        "scenario",
        "scenario",
        "scenario1",
        "scenario2",
        "scenario",
        "scenario1",
        "scenario2",
        "scenario3",
        "scenario4",
        "scenario"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}