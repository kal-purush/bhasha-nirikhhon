{
    "identifiers": [
        "collections",
        "Counter",
        "itertools",
        "json",
        "random",
        "re",
        "requests",
        "urllib",
        "parse",
        "resource",
        "HOST",
        "PORT",
        "resource",
        "r",
        "d",
        "d",
        "r",
        "json",
        "msg",
        "msg",
        "exit",
        "method",
        "resource",
        "msg",
        "abort",
        "method",
        "resource",
        "msg",
        "found",
        "expected",
        "msg",
        "found",
        "expected",
        "m",
        "msg",
        "m",
        "abort",
        "expected",
        "found",
        "method",
        "resource",
        "method",
        "resource",
        "method",
        "resource",
        "method",
        "resource",
        "method",
        "resource",
        "method",
        "resource",
        "url",
        "check",
        "resource",
        "requests",
        "get",
        "resource",
        "require",
        "r",
        "status_code",
        "require",
        "r",
        "text",
        "strip",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "url",
        "check",
        "resource",
        "requests",
        "post",
        "resource",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "url",
        "check",
        "resource",
        "username",
        "full_name",
        "pwd",
        "USERS",
        "username",
        "full_name",
        "pwd",
        "requests",
        "post",
        "resource",
        "json",
        "payload",
        "require",
        "r",
        "text",
        "strip",
        "username",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "url",
        "check",
        "resource",
        "title",
        "imdb_key",
        "year",
        "MOVIES",
        "imdb_key",
        "title",
        "year",
        "requests",
        "post",
        "resource",
        "json",
        "payload",
        "require",
        "r",
        "text",
        "strip",
        "imdb_key",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "url",
        "check",
        "resource",
        "imdb_key",
        "theater",
        "date",
        "time",
        "PERFORMANCES",
        "imdb_key",
        "theater",
        "date",
        "time",
        "requests",
        "post",
        "resource",
        "json",
        "payload",
        "re",
        "match",
        "r",
        "text",
        "strip",
        "m",
        "abort_on_resource",
        "resource",
        "r",
        "text",
        "strip",
        "m",
        "group",
        "performances",
        "append",
        "performance_id",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "performances",
        "url",
        "check",
        "resource",
        "requests",
        "get",
        "resource",
        "response_to_dicts",
        "r",
        "imdb_key",
        "_",
        "imdb_key",
        "_",
        "MOVIES",
        "movie",
        "movie",
        "movies",
        "require",
        "found",
        "expected",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "title",
        "year",
        "url",
        "urllib",
        "parse",
        "quote",
        "title",
        "year",
        "check",
        "resource",
        "requests",
        "get",
        "resource",
        "response_to_dicts",
        "r",
        "imdb_key",
        "t",
        "imdb_key",
        "y",
        "MOVIES",
        "t",
        "title",
        "y",
        "year",
        "movie",
        "movie",
        "movies",
        "require",
        "found",
        "expected",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "title",
        "imdb_key",
        "year",
        "MOVIES",
        "check_get_movies_with_query",
        "title",
        "year",
        "check_get_movies_with_query",
        "imdb_key",
        "url",
        "imdb_key",
        "check",
        "resource",
        "requests",
        "get",
        "resource",
        "response_to_dicts",
        "r",
        "imdb_key",
        "_",
        "key",
        "_",
        "MOVIES",
        "key",
        "imdb_key",
        "movie",
        "movie",
        "movies",
        "require",
        "found",
        "expected",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "_",
        "imdb_key",
        "_",
        "MOVIES",
        "check_get_movies_with_id",
        "imdb_key",
        "check_get_movies_with_id",
        "actual_performances",
        "url",
        "check",
        "resource",
        "requests",
        "get",
        "resource",
        "response_to_dicts",
        "r",
        "actual_performances",
        "performance",
        "performance",
        "returned_performances",
        "require",
        "found",
        "expected",
        "p",
        "returned_performances",
        "p",
        "p",
        "require",
        "THEATER_SIZES",
        "theater",
        "remaining_seats",
        "ok",
        "resource",
        "e",
        "abort_on_resource",
        "resource",
        "e",
        "reply",
        "re",
        "match",
        "reply",
        "strip",
        "random",
        "choice",
        "USERS",
        "requests",
        "get",
        "url",
        "response_to_dicts",
        "r",
        "p",
        "p",
        "p",
        "found_performances",
        "p_id",
        "count",
        "p_id",
        "count",
        "seats_left",
        "items",
        "itertools",
        "chain",
        "perf_ids",
        "random",
        "shuffle",
        "all_attempts",
        "username",
        "Counter",
        "username",
        "_",
        "_",
        "USERS",
        "url",
        "check",
        "resource",
        "p_id",
        "all_attempts",
        "random_user",
        "username",
        "pwd",
        "p_id",
        "requests",
        "post",
        "resource",
        "json",
        "payload",
        "seats_left",
        "p_id",
        "require",
        "r",
        "status_code",
        "require",
        "valid_ticket",
        "r",
        "text",
        "r",
        "text",
        "strip",
        "seats_left",
        "p_id",
        "users",
        "username",
        "p_id",
        "require",
        "r",
        "status_code",
        "require",
        "r",
        "text",
        "strip",
        "ok",
        "resource",
        "requests",
        "get",
        "url",
        "p",
        "response_to_dicts",
        "r",
        "require",
        "p",
        "ok",
        "url",
        "create_performance_id_lookup",
        "username",
        "counts",
        "users",
        "items",
        "url",
        "username",
        "requests",
        "get",
        "resource",
        "response_to_dicts",
        "r",
        "perf_info",
        "summary",
        "perf_info",
        "perf_info",
        "perf_info",
        "require",
        "perf_info",
        "users",
        "username",
        "perf_id_lookup",
        "theater",
        "date",
        "start_time",
        "ok",
        "resource",
        "requests",
        "get",
        "url",
        "p",
        "response_to_dicts",
        "r",
        "p",
        "p",
        "p",
        "p",
        "theater",
        "date",
        "start_time",
        "perf_id",
        "perf_lookup",
        "check_ping",
        "check_reset",
        "check_post_user",
        "check_post_movie",
        "check_post_performances",
        "check_get_movies",
        "check_get_movies_with_ids",
        "check_get_performances",
        "performances",
        "check_ticket_hoarding",
        "main"
    ],
    "literals": [
        "\"localhost\"",
        "\"alice\"",
        "\"Alice Lidell\"",
        "\"ecila\"",
        "\"bob\"",
        "\"Bob Hund\"",
        "\"bob\"",
        "\"carol\"",
        "\"Carol Christmas\"",
        "\"lorac\"",
        "\"TheDig\"",
        "\"tt3661210\"",
        "\"TheLittleThings\"",
        "\"tt10016180\"",
        "\"Palmer\"",
        "\"tt6857376\"",
        "\"FindingOhana\"",
        "\"tt10332588\"",
        "\"Kino\"",
        "\"Regal\"",
        "\"Skandia\"",
        "\"tt3661210\"",
        "\"Regal\"",
        "\"2021-02-22\"",
        "\"19:00\"",
        "\"tt3661210\"",
        "\"Regal\"",
        "\"2021-02-22\"",
        "\"21:00\"",
        "\"tt10016180\"",
        "\"Skandia\"",
        "\"2021-02-22\"",
        "\"19:00\"",
        "f\"http://{HOST}:{PORT}{resource}\"",
        "'data'",
        "f\"Error: {msg}\"",
        "f\"curl -X {method} {resource} failed: {msg}\"",
        "f\"    {m}\"",
        "f\" expected {expected}, got {found}\"",
        "f\"Checking: {method} {resource}\"",
        "f\"  => OK: {method} {resource}\"",
        "f\"Failed: {method} {resource}\"",
        "\"/ping\"",
        "\"GET\"",
        "'pong'",
        "\"GET\"",
        "\"GET\"",
        "\"does not return pong -- is your server running?\"",
        "\"/reset\"",
        "\"POST\"",
        "\"POST\"",
        "\"POST\"",
        "f\"crashes ({e})\"",
        "\"/users\"",
        "\"POST\"",
        "\"username\"",
        "\"fullName\"",
        "\"pwd\"",
        "f\"/users/{username}\"",
        "\"POST\"",
        "\"POST\"",
        "f\"crashes ({e})\"",
        "\"/movies\"",
        "\"POST\"",
        "\"imdbKey\"",
        "\"title\"",
        "\"year\"",
        "f\"/movies/{imdb_key}\"",
        "\"POST\"",
        "\"POST\"",
        "f\"crashes ({e})\"",
        "\"/performances\"",
        "\"POST\"",
        "\"imdbKey\"",
        "\"theater\"",
        "\"date\"",
        "\"time\"",
        "\"/performances/(.+)\"",
        "\"POST\"",
        "f\"does not return a valid resource ({r.text.strip()})\"",
        "\"POST\"",
        "\"POST\"",
        "f\"crashes ({e})\"",
        "\"/movies\"",
        "\"GET\"",
        "'imdbKey'",
        "\"GET\"",
        "\"GET\"",
        "f\"crashes ({e})\"",
        "f\"/movies?title={urllib.parse.quote(title)}&year={year}\"",
        "\"GET\"",
        "'imdbKey'",
        "\"GET\"",
        "\"GET\"",
        "f\"crashes ({e})\"",
        "\"\"",
        "f\"/movies/{imdb_key}\"",
        "\"GET\"",
        "'imdbKey'",
        "\"GET\"",
        "\"GET\"",
        "f\"crashes ({e})\"",
        "\"not_a_real_imdb_key\"",
        "\"/performances\"",
        "\"GET\"",
        "'performanceId'",
        "\"theater\"",
        "\"remainingSeats\"",
        "\"GET\"",
        "\"GET\"",
        "f\"crashes ({e})\"",
        "\"/tickets/(.+)\"",
        "\"/performances\"",
        "'performanceId'",
        "'remainingSeats'",
        "\"/tickets\"",
        "\"POST\"",
        "\"username\"",
        "\"pwd\"",
        "\"performanceId\"",
        "f\"{r.text.strip()} is not a valid ticket resource\"",
        "\"No tickets left\"",
        "\"POST\"",
        "\"/performances\"",
        "'remainingSeats'",
        "\"after a ticket sales bonanza, there should be no tickets left for the performances\"",
        "\"GET\"",
        "\"/performances\"",
        "f\"/users/{username}/tickets\"",
        "\"date\"",
        "\"startTime\"",
        "\"theater\"",
        "\"nbrOfTickets\"",
        "\"the number of tickets for a user doesn't add up\"",
        "\"GET\"",
        "\"/performances\"",
        "\"performanceId\"",
        "\"date\"",
        "\"startTime\"",
        "\"theater\"",
        "\"==========================================\"",
        "\"           Initial version                \"",
        "\"Your server passes our tests -- well done!\"",
        "\"==========================================\"",
        "'__main__'"
    ],
    "variables": [
        "HOST",
        "PORT",
        "USERS",
        "MOVIES",
        "THEATER_SIZES",
        "PERFORMANCES",
        "resource",
        "r",
        "resource",
        "r",
        "resource",
        "payload",
        "r",
        "resource",
        "payload",
        "r",
        "resource",
        "performances",
        "payload",
        "r",
        "m",
        "performance_id",
        "resource",
        "r",
        "movies",
        "expected",
        "found",
        "resource",
        "r",
        "movies",
        "expected",
        "found",
        "resource",
        "r",
        "movies",
        "expected",
        "found",
        "resource",
        "r",
        "returned_performances",
        "expected",
        "found",
        "theater",
        "remaining_seats",
        "r",
        "found_performances",
        "seats_left",
        "perf_ids",
        "all_attempts",
        "users",
        "resource",
        "username",
        "_",
        "pwd",
        "payload",
        "r",
        "r",
        "perf_id_lookup",
        "resource",
        "r",
        "summary",
        "date",
        "start_time",
        "theater",
        "r",
        "perf_lookup",
        "perf_id",
        "date",
        "start_time",
        "theater",
        "perf_lookup",
        "performances"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Movies taken from \"Most Popular Movies\" on IMDB",
        "(https://www.imdb.com/chart/moviemeter/?ref_=nv_mv_mpm)",
        "The titles were initially \"The Dig\", \"The Little Things\", \"Palmer\",",
        "and \"Finding 'Ohana\", but I've since removed characters in need of",
        "url-encoding",
        "require(r.status_code, 205)",
        "check_get_movies_with_queries()"
    ],
    "docstrings": [],
    "functions": [
        "url",
        "response_to_dicts",
        "abort",
        "abort_on_resource",
        "require",
        "check",
        "ok",
        "fail",
        "check_ping",
        "check_reset",
        "check_post_user",
        "check_post_movie",
        "check_post_performances",
        "check_get_movies",
        "check_get_movies_with_query",
        "check_get_movies_with_queries",
        "check_get_movies_with_id",
        "check_get_movies_with_ids",
        "check_get_performances",
        "valid_ticket",
        "random_user",
        "check_ticket_hoarding",
        "create_performance_id_lookup",
        "main"
    ],
    "classes": []
}