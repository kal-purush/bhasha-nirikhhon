{
    "identifiers": [
        "csv",
        "sys",
        "flask",
        "Flask",
        "render_template",
        "jsonify",
        "request",
        "flask_cors",
        "CORS",
        "cross_origin",
        "random",
        "datetime",
        "json",
        "os",
        "time",
        "Flask",
        "CORS",
        "app",
        "support_credentials",
        "app",
        "route",
        "methods",
        "value",
        "value",
        "processedWords",
        "i",
        "value",
        "i",
        "lettersDict",
        "lettersDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "wordIndex",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "wordIndex",
        "lettersPositionSum",
        "wordIndex",
        "wordIndex",
        "processedWords",
        "append",
        "value",
        "open",
        "filename",
        "csvfile",
        "csv",
        "reader",
        "csvfile",
        "row",
        "datareader",
        "i",
        "len",
        "row",
        "row",
        "row",
        "row",
        "word_type",
        "word_type",
        "word_type",
        "word_type",
        "word_type",
        "processWord",
        "movie_word",
        "word_count",
        "movie_frequency_total_count",
        "movie_word_frequency",
        "movie_frequency",
        "append",
        "movie_word",
        "movie_word_frequency",
        "len",
        "movie_frequency",
        "i",
        "movie_frequency",
        "i",
        "val",
        "movie_frequency_total_count",
        "movie_frequency_probability",
        "append",
        "i",
        "prob",
        "elem",
        "elem",
        "movie_frequency_probability",
        "sort",
        "key",
        "takeSecond",
        "reverse",
        "i",
        "movie_frequency_probability",
        "i",
        "open",
        "word_file",
        "word_file",
        "read",
        "split",
        "valid_words",
        "open",
        "wordlist_file",
        "aline",
        "ccfile",
        "aline",
        "split",
        "processWord",
        "value",
        "word_count",
        "ccfile",
        "close",
        "word_count",
        "lettersDict",
        "lettersPositionDict",
        "dict1",
        "sorted",
        "dict1",
        "values",
        "i",
        "sorted_values",
        "k",
        "dict1",
        "keys",
        "dict1",
        "k",
        "i",
        "dict1",
        "k",
        "sorted_dict",
        "word_count",
        "lettersDict",
        "word_count",
        "i",
        "lettersDict",
        "lettersDict",
        "i",
        "total_letters",
        "sortDict",
        "lettersFrequencyList",
        "lettersFrequencyList",
        "lettersPositionSum",
        "word_count",
        "i",
        "lettersDict",
        "lettersDict",
        "i",
        "total_letters",
        "sortDict",
        "lettersFrequencyList",
        "lettersPositionDict",
        "lettersPositionSum",
        "i",
        "lettersPositionDict",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "first",
        "lettersPositionSum",
        "second",
        "lettersPositionSum",
        "third",
        "lettersPositionSum",
        "fourth",
        "lettersPositionSum",
        "fifth",
        "lettersPositionSum",
        "lettersProbabilityDict",
        "lettersProbabilityDict",
        "lettersPositionDict",
        "lettersDict",
        "i",
        "lettersPositionDict",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersDict",
        "i",
        "first",
        "lettersDict",
        "i",
        "second",
        "lettersDict",
        "i",
        "third",
        "lettersDict",
        "i",
        "fourth",
        "lettersDict",
        "i",
        "fifth",
        "lettersDict",
        "i",
        "lettersProbabilityPerLetterDict",
        "lettersProbabilityPerLetterDict",
        "getLettersProbability",
        "lettersPositionDict",
        "lettersPositionSum",
        "getLettersProbabilityPerLetter",
        "lettersPositionDict",
        "lettersDict",
        "processedWords",
        "lettersProbabilityPerLetterDict",
        "lettersFrequencyList",
        "i",
        "processedWords",
        "sub_list",
        "append",
        "i",
        "lettersProbabilityPerLetterDict",
        "j",
        "i",
        "j",
        "letters_added",
        "adjustedProb",
        "j",
        "adjustedProb",
        "j",
        "word_index",
        "weightedSum",
        "lettersFrequencyList",
        "j",
        "adjustedProb",
        "j",
        "word_index",
        "word_index",
        "letters_added",
        "j",
        "sub_list",
        "append",
        "weightedSum",
        "wordWeightage",
        "append",
        "sub_list",
        "wordWeightage",
        "sort",
        "key",
        "takeSecond",
        "reverse",
        "i",
        "len",
        "wordWeightage",
        "wordWeightage",
        "i",
        "processedWords",
        "lettersProbabilityDict",
        "lettersFrequencyList",
        "i",
        "processedWords",
        "sub_list",
        "append",
        "i",
        "lettersProbabilityDict",
        "j",
        "i",
        "j",
        "letters_added",
        "adjustingProb",
        "j",
        "adjustingProb",
        "j",
        "word_index",
        "weightedSum",
        "lettersFrequencyList",
        "j",
        "adjustingProb",
        "j",
        "word_index",
        "word_index",
        "letters_added",
        "j",
        "sub_list",
        "append",
        "weightedSum",
        "wordWeightage",
        "append",
        "sub_list",
        "wordWeightage",
        "sort",
        "key",
        "takeSecond",
        "reverse",
        "i",
        "len",
        "wordWeightage",
        "wordWeightage",
        "i",
        "processedWords",
        "lettersFrequencyList",
        "i",
        "processedWords",
        "sub_list",
        "append",
        "i",
        "lettersFrequencyList",
        "j",
        "i",
        "j",
        "lettersAdded",
        "adjustedProb",
        "j",
        "weightedSum",
        "adjustedProb",
        "j",
        "word_index",
        "lettersAdded",
        "j",
        "sub_list",
        "append",
        "weightedSum",
        "wordWeightage",
        "append",
        "sub_list",
        "wordWeightage",
        "sort",
        "key",
        "takeSecond",
        "reverse",
        "i",
        "len",
        "wordWeightage",
        "wordWeightage",
        "i",
        "weightedSum1",
        "processedWords",
        "lettersProbabilityPerLetterDict",
        "lettersFrequencyList",
        "weightedSum2",
        "processedWords",
        "lettersProbabilityPerLetterDict",
        "lettersFrequencyList",
        "weightedSum3",
        "processedWords",
        "lettersFrequencyList",
        "count",
        "correct_set",
        "incorrect_set",
        "input",
        "count",
        "len",
        "guess",
        "i",
        "guess",
        "input",
        "i",
        "letter",
        "acceptableInputs",
        "letter",
        "incorrect_set",
        "letter_index",
        "append",
        "i",
        "letter",
        "i",
        "letter_index",
        "i",
        "len",
        "blackSet",
        "blackSet",
        "i",
        "guess",
        "i",
        "letter",
        "correct_set",
        "letter",
        "incorrect_set",
        "yellowSet",
        "greenSet",
        "blackSet",
        "correct_set",
        "incorrect_set",
        "guess",
        "yellowSet",
        "greenSet",
        "blackSet",
        "correct_set",
        "incorrect_set",
        "word",
        "lettersDict",
        "lettersPositionDict",
        "lettersPositionSum",
        "i",
        "word",
        "lettersDict",
        "i",
        "lettersPositionDict",
        "i",
        "lettersPositionDict",
        "i",
        "word_index",
        "lettersPositionSum",
        "word_index",
        "word_index",
        "processedWords",
        "guess",
        "yellowSet",
        "greenSet",
        "blackSet",
        "lettersDict",
        "lettersPositionDict",
        "lettersPositionSum",
        "i",
        "processedWords",
        "j",
        "len",
        "guess",
        "blackSet",
        "j",
        "guess",
        "j",
        "lower",
        "i",
        "greenSet",
        "j",
        "guess",
        "j",
        "lower",
        "i",
        "j",
        "guess",
        "j",
        "lower",
        "i",
        "guess",
        "j",
        "lower",
        "i",
        "j",
        "flag",
        "updateLettersCount",
        "i",
        "lettersDict",
        "lettersPositionDict",
        "lettersPositionSum",
        "newlyProcessedWords",
        "append",
        "i",
        "lettersDict",
        "getLettersFrequencyList",
        "sum",
        "lettersDict",
        "values",
        "lettersDict",
        "lettersFrequencyL",
        "lettersPositionDict",
        "lettersPositionSum",
        "newlyProcessedWords",
        "newlyProcessedWords",
        "lettersDict",
        "lettersPositionDict",
        "lettersPositionSum",
        "lettersFrequencyL",
        "processedWords",
        "lettersFrequencyList",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "weightedSum3",
        "processedWords",
        "lettersFrequencyList",
        "processedWords",
        "lettersProbabilityPerLetterDict",
        "lettersProbabilityDict",
        "correctSet",
        "incorrectSet",
        "lettersFrequencyList",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "calculateWeightage",
        "processedWords",
        "lettersFrequencyList",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "processedWords",
        "lettersProbabilityDict",
        "lettersFrequencyList",
        "weightedSum2",
        "processedWords",
        "lettersProbabilityDict",
        "lettersFrequencyList",
        "guess",
        "processedWords",
        "yellowSet",
        "greenSet",
        "blackSet",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "lettersFrequencyList",
        "lettersPositionDict",
        "correctSet",
        "incorrectSet",
        "lettersDict",
        "lettersPositionSum",
        "filterYGB",
        "processedWords",
        "guess",
        "yellowSet",
        "greenSet",
        "blackSet",
        "lettersDict",
        "lettersPositionDict",
        "lettersPositionSum",
        "retr",
        "retr",
        "retr",
        "retr",
        "retr",
        "len",
        "processedWords",
        "len",
        "processedWords",
        "getLettersProbability",
        "lettersPositionDict",
        "lettersPositionSum",
        "getLettersProbabilityPerLetter",
        "lettersPositionDict",
        "lettersDict",
        "len",
        "processedWords",
        "needMoreLettersRoute",
        "processedWords",
        "lettersProbabilityDict",
        "lettersFrequencyList",
        "filterRoute",
        "processedWords",
        "lettersProbabilityPerLetterDict",
        "lettersProbabilityDict",
        "correctSet",
        "incorrectSet",
        "lettersFrequencyList",
        "processedWords",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "lettersFrequencyList",
        "lettersPositionDict",
        "lettersDict",
        "lettersPositionSum",
        "len",
        "processedWords",
        "count",
        "readInput",
        "count",
        "correct_set",
        "incorrect_set",
        "inputVal",
        "inputVal",
        "inputVal",
        "inputVal",
        "inputVal",
        "inputVal",
        "guessProcess",
        "guess",
        "processedWords",
        "yellowSet",
        "greenSet",
        "blackSet",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "lettersFrequencyList",
        "lettersPositionDict",
        "correct_set",
        "incorrect_set",
        "lettersDict",
        "lettersPositionSum",
        "return_val",
        "return_val",
        "exit",
        "return_val",
        "return_val",
        "return_val",
        "return_val",
        "return_val",
        "return_val",
        "return_val",
        "app",
        "route",
        "methods",
        "cross_origin",
        "request",
        "get_json",
        "request_data"
    ],
    "literals": [
        "'/'",
        "'POST'",
        "'GET'",
        "'OPTIONS'",
        "'Hello! Welcome to the server of Wordle Optimizer!'",
        "''",
        "'movie_popularity.csv'",
        "'r'",
        "'Noun'",
        "'Name'",
        "'Adverb'",
        "'Verb'",
        "'Adjective'",
        "\"5-letter Movie words probability after sorting\"",
        "'words_alpha.txt'",
        "'sgb-words.txt'",
        "\"r\"",
        "'\\n'",
        "\"Total words that are processed:\"",
        "\"Frequency of letters in all words:\"",
        "\"Frequency of letters at each position:\"",
        "\"Letters sorted by frequency of appearance in words:\"",
        "\"Sums of each index\"",
        "\"Letters sorted by frequency of appearance in words:\"",
        "\"Probability of letters at indices (per all words): \"",
        "\"Probability of letters at indices (per specific letter): \"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'YGB'",
        "''",
        "'Sorting word weightage per index per specific letter:'",
        "''",
        "'Sorting word weightage per index per probability:'",
        "''",
        "'Sorting word weightage per probability:'",
        "'YGB'",
        "\"Enter the word for guess number: \"",
        "\"Invalid input\"",
        "\"Is \"",
        "\" Y, G, or B?\"",
        "\"Invalid input.\"",
        "'Y'",
        "'G'",
        "'Value of lettersDict'",
        "\"Value of letters sorted by frequency\"",
        "'Value of letters position Dict'",
        "'Value of sums'",
        "'After word removal, here is the updated probability:'",
        "'Per letter:'",
        "\"Word found! Congratulations!\"",
        "\"The words processed at first:\"",
        "\"The words processed after first removal:\"",
        "'/first-guess'",
        "'POST'",
        "'OPTIONS'"
    ],
    "variables": [
        "app",
        "movie_frequency",
        "movie_frequency_probability",
        "movie_frequency_total_count",
        "movie_word",
        "movie_word_frequency",
        "word_count",
        "lettersDict",
        "processedWords",
        "filename",
        "i",
        "lettersPositionDict",
        "lettersPositionSum",
        "wordIndex",
        "lettersDict",
        "i",
        "wordIndex",
        "lettersDict",
        "i",
        "lettersPositionDict",
        "i",
        "wordIndex",
        "lettersPositionSum",
        "wordIndex",
        "wordIndex",
        "datareader",
        "i",
        "movie_word",
        "movie_word_frequency",
        "word_type",
        "word_count",
        "movie_frequency_total_count",
        "val",
        "prob",
        "valid_words",
        "wordlist_file",
        "ccfile",
        "value",
        "word_count",
        "sorted_values",
        "sorted_dict",
        "sorted_dict",
        "k",
        "lettersFrequencyList",
        "total_letters",
        "lettersFrequencyList",
        "i",
        "lettersFrequencyList",
        "total_letters",
        "lettersFrequencyList",
        "i",
        "lettersProbabilityDict",
        "lettersProbabilityDict",
        "i",
        "first",
        "second",
        "third",
        "fourth",
        "fifth",
        "lettersProbabilityDict",
        "i",
        "lettersProbabilityPerLetterDict",
        "lettersProbabilityPerLetterDict",
        "i",
        "first",
        "second",
        "third",
        "fourth",
        "fifth",
        "lettersProbabilityPerLetterDict",
        "i",
        "firstGuess",
        "secondGuess",
        "thirdGuess",
        "fourthGuess",
        "fifthGuess",
        "sixthGuess",
        "acceptableInputs",
        "yellowSet",
        "greenSet",
        "blackSet",
        "letter_index",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "correct_set",
        "incorrect_set",
        "wordWeightage",
        "sub_list",
        "weightedSum",
        "word_index",
        "letters_added",
        "adjustedProb",
        "word_index",
        "weightedSum",
        "word_index",
        "letters_added",
        "wordWeightage",
        "sub_list",
        "weightedSum",
        "word_index",
        "adjustingProb",
        "letters_added",
        "word_index",
        "weightedSum",
        "word_index",
        "letters_added",
        "wordWeightage",
        "sub_list",
        "weightedSum",
        "word_index",
        "adjustedProb",
        "lettersAdded",
        "adjustedProb",
        "j",
        "weightedSum",
        "word_index",
        "lettersAdded",
        "acceptableInputs",
        "yellowSet",
        "greenSet",
        "blackSet",
        "letter_index",
        "guess",
        "letter",
        "yellowSet",
        "letter_index",
        "greenSet",
        "letter_index",
        "correct_set",
        "letter_index",
        "blackSet",
        "letter_index",
        "letter_index",
        "letter",
        "blackSet",
        "i",
        "word_index",
        "lettersDict",
        "i",
        "word_index",
        "lettersPositionSum",
        "word_index",
        "word_index",
        "newlyProcessedWords",
        "flag",
        "wordIndex",
        "flag",
        "flag",
        "flag",
        "flag",
        "lettersFrequencyL",
        "letterIndex",
        "wordWeightage",
        "wordWeightage",
        "retr",
        "processedWords",
        "lettersDict",
        "lettersPositionDict",
        "lettersPositionSum",
        "lettersFrequencyList",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "inputVal",
        "guess",
        "yellowSet",
        "greenSet",
        "blackSet",
        "correct_set",
        "incorrect_set",
        "return_val",
        "processedWords",
        "lettersProbabilityDict",
        "lettersProbabilityPerLetterDict",
        "lettersFrequencyList",
        "lettersPositionDict",
        "lettersDict",
        "lettersPositionSum",
        "request_data"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "from flaskext.mysql import MySQL",
        "print(word_type)",
        "print('Word '+word_type)",
        "for i in range(0, 5):",
        "print(movie_frequency_probability[i])",
        "print(value)",
        "lettersFrequencyList.append([i, lettersDict[i]/total_letters])",
        "lettersFrequencyList.sort(key=takeSecond, reverse=True)",
        "print(lettersFrequencyList)",
        "print(wordWeightage)",
        "print(wordWeightage)",
        "print(wordWeightage)",
        "print('Not including word '+i)",
        "print('Flag found for word '+i)",
        "weightedSum1(processedWords, lettersProbabilityPerLetterDict, lettersFrequencyList)",
        "weightedSum2(processedWords, lettersProbabilityDict, lettersFrequencyList)",
        "print(wordWeightage)",
        "print(firstProcessedWords)",
        "filterRoute(processedWords, lettersProbabilityPerLetterDict, lettersProbabilityDict, correctSet, incorrectSet, lettersFrequencyList)",
        "yellowSet, greenSet, blackSet, correct_set, incorrect_set",
        "return_val = guessProcess(firstGuess, processedWords, yellowSet, greenSet, blackSet, lettersProbabilityDict, lettersProbabilityPerLetterDict, lettersFrequencyList, lettersPositionDict, correct_set, incorrect_set, lettersDict, lettersPositionSum)"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Thu Feb 17 11:10:15 2022\n\n@author: navneethkrishna\n\"\"\"",
        "'''\nenglish_words = load_words()\nprint('English words length:')\nprint(len(english_words))\nprint(type(english_words))\nx = english_words.pop()\nprint(x)\nprint(len(x))\n\nfor i in english_words:\n    if(len(i) == 5):\n        #print('LM')\n        processWord(i)\n        word_count = word_count+1\n'''",
        "'''\ncorpusfile = 'unigram_freq.csv'\ncorpus_frequency = []\ncorpus_frequency_probability = []\ncorpus_frequency_total_count = 0\ncorpus_word = ''\ncorpus_word_frequency = 0\ni = 0\nwith open(corpusfile, 'r') as csvfile:\n    datareader = csv.reader(csvfile)\n    for row in datareader:\n        if(i==0):\n            i = 1\n            continue\n        if(len(row[0])==5):\n            corpus_word = row[0]\n            corpus_word_frequency = int(row[1])\n            processWord(corpus_word)\n            word_count = word_count+1\n            corpus_frequency_total_count = corpus_frequency_total_count + corpus_word_frequency\n            corpus_frequency.append([corpus_word, corpus_word_frequency])\n\nprint(len(corpus_frequency))\n\nfor i in corpus_frequency:\n    val = i[1]\n    prob = val/corpus_frequency_total_count\n    corpus_frequency_probability.append([i[0], prob])\n\n#for i in range(0, 5):\n    #print(corpus_frequency_probability[i])\n\ndef takeSecond(elem):\n    return elem[1]\ncorpus_frequency_probability.sort(key=takeSecond, reverse=True)\nprint(\"Corpus word probability after sorting\")\nfor i in range(0, 50):\n    print(corpus_frequency_probability[i])\n'''",
        "'''\nfirstGuess = input(\"Enter the first guess:\")\nif(not len(firstGuess) == 5):\n    print(\"Invalid input\")\nelse:\n    for i in firstGuess:\n        letter = input(\"Is \"+i+\" Y, G, or B?\")\n        if(letter not in acceptableInputs):\n            print(\"Invalid input.\")\n        else:\n            if(letter == 'Y'):\n                yellowSet[letter_index] = 1\n                incorrect_set[letter_index].append(i)\n            elif(letter == 'G'):\n                greenSet[letter_index] = 1\n                correct_set[letter_index] = i\n            else:\n                blackSet[letter_index] = 1\n        letter_index = letter_index + 1\nprint(yellowSet)\nprint(greenSet)\nprint(blackSet)\nprint(correct_set)\nprint(incorrect_set)\n'''"
    ],
    "functions": [
        "helloWorld",
        "processWord",
        "takeSecond",
        "load_words",
        "sortDict",
        "getLettersFrequencyList",
        "getLettersProbability",
        "getLettersProbabilityPerLetter",
        "weightedSum1",
        "weightedSum2",
        "weightedSum3",
        "readInput",
        "updateLettersCount",
        "filterYGB",
        "calculateWeightage",
        "filterRoute",
        "needMoreLettersRoute",
        "guessProcess",
        "guessHandling"
    ],
    "classes": []
}