{
    "identifiers": [
        "decycle",
        "replacer",
        "derez",
        "value",
        "path",
        "replacer",
        "value",
        "replacer",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "oldPath",
        "objects",
        "value",
        "oldPath",
        "oldPath",
        "objects",
        "value",
        "path",
        "value",
        "nu",
        "value",
        "element",
        "i",
        "nu",
        "i",
        "derez",
        "element",
        "path",
        "i",
        "nu",
        "value",
        "name",
        "nu",
        "name",
        "derez",
        "value",
        "name",
        "path",
        "name",
        "nu",
        "value",
        "exports",
        "decycle"
    ],
    "literals": [
        "'use strict'",
        "'object'",
        "'['",
        "']'",
        "'['",
        "']'",
        "'$'"
    ],
    "variables": [
        "decycle",
        "objects",
        "oldPath",
        "nu"
    ],
    "comments": [
        "Contentful allows for content that can contain references which will cause cyclic reference errors when supplied to JSON.stringify().\n    More information about this problem can be found here -> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Cyclic_object_value\n\n    Below is a code snippet from the amazing https://github.com/douglascrockford/JSON-js repository. We utilise https://github.com/douglascrockford/JSON-js/blob/master/cycle.js\n    which is Public Domain.\n\n    Snippet has been modified to follow eslint rules and to export as a module function. Currently 'replacer' param is not used, but could be used for something in the future.",
        "Make a deep copy of an object or array, assuring that there is at most",
        "one instance of each object or array in the resulting structure. The",
        "duplicate references (which might be forming cycles) are replaced with",
        "an object of the form",
        "{\"$ref\": PATH}",
        "where the PATH is a JSONPath string that locates the first occurance.",
        "So,",
        "var a = [];",
        "a[0] = a;",
        "return JSON.stringify(JSON.decycle(a));",
        "produces the string '[{\"$ref\":\"$\"}]'.",
        "If a replacer function is provided, then it will be called for each value.",
        "A replacer function receives a value and returns a replacement value.",
        "JSONPath is used to locate the unique object. $ indicates the top level of",
        "the object or array. [NUMBER] or [STRING] indicates a child element or",
        "property.",
        "object to path mappings",
        "The derez function recurses through the object, producing the deep copy.",
        "The path of an earlier occurance of value",
        "The new object or array",
        "If a replacer function was provided, then call it to get a replacement value.",
        "typeof null === \"object\", so go on if this value is really an object but not",
        "one of the weird builtin objects.",
        "If the value is an object or array, look to see if we have already",
        "encountered it. If so, return a {\"$ref\":PATH} object. This uses an",
        "ES6 WeakMap.",
        "Otherwise, accumulate the unique value and its path.",
        "If it is an array, replicate the array.",
        "If it is an object, replicate the object."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}