{
    "identifiers": [
        "typing",
        "Optional",
        "acme",
        "specs",
        "acme",
        "agents",
        "agent",
        "agent_lib",
        "acme",
        "jax",
        "utils",
        "acme",
        "utils",
        "counting",
        "acme",
        "utils",
        "loggers",
        "jax",
        "reverb",
        "magi",
        "agents",
        "mpo",
        "builder",
        "mpo_builder",
        "magi",
        "agents",
        "mpo",
        "config",
        "mpo_config",
        "magi",
        "agents",
        "mpo",
        "networks",
        "mpo_networks",
        "agent_lib",
        "Agent",
        "mpo_builder",
        "MPOBuilder",
        "environment_spec",
        "specs",
        "EnvironmentSpec",
        "networks",
        "config",
        "mpo_config",
        "MPOConfig",
        "seed",
        "device_prefetch",
        "counter",
        "Optional",
        "counting",
        "Counter",
        "logger",
        "Optional",
        "loggers",
        "Logger",
        "config",
        "min_replay_size",
        "min_replay_size",
        "mpo_builder",
        "MPOBuilder",
        "config",
        "logger_fn",
        "logger",
        "jax",
        "random",
        "PRNGKey",
        "seed",
        "jax",
        "random",
        "split",
        "random_key",
        "builder",
        "make_replay_tables",
        "environment_spec",
        "reverb",
        "Server",
        "replay_tables",
        "port",
        "replay_server",
        "_server",
        "port",
        "reverb",
        "Client",
        "address",
        "builder",
        "make_dataset_iterator",
        "replay_client",
        "config",
        "prefetch_size",
        "config",
        "prefetch_size",
        "jax",
        "devices",
        "device_prefetch",
        "utils",
        "prefetch",
        "dataset",
        "config",
        "prefetch_size",
        "device",
        "builder",
        "make_learner",
        "learner_key",
        "networks",
        "dataset",
        "counter",
        "counter",
        "builder",
        "make_adder",
        "replay_client",
        "builder",
        "make_actor",
        "actor_key",
        "mpo_networks",
        "apply_policy_and_sample",
        "networks",
        "environment_spec",
        "actions",
        "eval_mode",
        "adder",
        "adder",
        "variable_source",
        "learner",
        "config",
        "batch_size",
        "actor",
        "learner",
        "min_observations",
        "max",
        "config",
        "min_observations",
        "effective_batch_size",
        "observations_per_step",
        "effective_batch_size",
        "config",
        "samples_per_insert"
    ],
    "literals": [
        "\"inf\"",
        "f\"localhost:{self._server.port}\""
    ],
    "variables": [
        "builder",
        "min_replay_size",
        "config",
        "samples_per_insert_tolerance_rate",
        "config",
        "min_replay_size",
        "config",
        "min_observations",
        "builder",
        "random_key",
        "learner_key",
        "actor_key",
        "replay_tables",
        "replay_server",
        "_server",
        "address",
        "replay_client",
        "dataset",
        "device",
        "dataset",
        "learner",
        "adder",
        "actor",
        "effective_batch_size"
    ],
    "comments": [
        "This prevents reverb from deadlocking in single-process mode.",
        "Local layout (actually agent_lib.Agent) makes sure that we populate the",
        "buffer with min_replay_size initial transitions and that there's no need",
        "for tolerance_rate. In order to avoid deadlocks, we disable rate limiting",
        "that is configured in MPOBuilder.make_replay_tables. This is achieved by",
        "the following two lines.",
        "Setup reverb",
        "The dataset provides an interface to sample from replay."
    ],
    "docstrings": [
        "\"\"\"MPO Agent\"\"\"",
        "\"\"\"MPO agent.\"\"\""
    ],
    "functions": [],
    "classes": [
        "MPO"
    ]
}