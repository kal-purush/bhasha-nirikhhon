{
    "identifiers": [
        "android",
        "app",
        "android",
        "app",
        "ActivityManager",
        "PROCESS_STATE_UNKNOWN",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "ON_CREATE",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "ON_DESTROY",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "ON_PAUSE",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "ON_RESUME",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "ON_START",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "ON_STOP",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "PRE_ON_CREATE",
        "android",
        "content",
        "ContentResolver",
        "DEPRECATE_DATA_COLUMNS",
        "android",
        "content",
        "ContentResolver",
        "DEPRECATE_DATA_PREFIX",
        "android",
        "view",
        "Display",
        "INVALID_DISPLAY",
        "com",
        "android",
        "annotations",
        "VisibleForTesting",
        "Visibility",
        "PACKAGE",
        "android",
        "annotation",
        "NonNull",
        "android",
        "annotation",
        "android",
        "annotation",
        "UnsupportedAppUsage",
        "android",
        "app",
        "assist",
        "AssistContent",
        "android",
        "app",
        "assist",
        "AssistStructure",
        "android",
        "app",
        "backup",
        "BackupAgent",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "android",
        "app",
        "servertransaction",
        "ActivityLifecycleItem",
        "LifecycleState",
        "android",
        "app",
        "servertransaction",
        "ActivityRelaunchItem",
        "android",
        "app",
        "servertransaction",
        "ActivityResultItem",
        "android",
        "app",
        "servertransaction",
        "ClientTransaction",
        "android",
        "app",
        "servertransaction",
        "ClientTransactionItem",
        "android",
        "app",
        "servertransaction",
        "PendingTransactionActions",
        "android",
        "app",
        "servertransaction",
        "PendingTransactionActions",
        "StopInfo",
        "android",
        "app",
        "servertransaction",
        "TransactionExecutor",
        "android",
        "app",
        "servertransaction",
        "TransactionExecutorHelper",
        "android",
        "content",
        "AutofillOptions",
        "android",
        "content",
        "BroadcastReceiver",
        "android",
        "content",
        "ComponentCallbacks2",
        "android",
        "content",
        "ComponentName",
        "android",
        "content",
        "ContentCaptureOptions",
        "android",
        "content",
        "ContentProvider",
        "android",
        "content",
        "ContentResolver",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "IContentProvider",
        "android",
        "content",
        "IIntentReceiver",
        "android",
        "content",
        "Intent",
        "android",
        "content",
        "pm",
        "ActivityInfo",
        "android",
        "content",
        "pm",
        "ApplicationInfo",
        "android",
        "content",
        "pm",
        "IPackageManager",
        "android",
        "content",
        "pm",
        "InstrumentationInfo",
        "android",
        "content",
        "pm",
        "PackageInfo",
        "android",
        "content",
        "pm",
        "PackageManager",
        "android",
        "content",
        "pm",
        "PackageManager",
        "NameNotFoundException",
        "android",
        "content",
        "pm",
        "ParceledListSlice",
        "android",
        "content",
        "pm",
        "ProviderInfo",
        "android",
        "content",
        "pm",
        "ServiceInfo",
        "android",
        "content",
        "res",
        "AssetManager",
        "android",
        "content",
        "res",
        "CompatibilityInfo",
        "android",
        "content",
        "res",
        "Configuration",
        "android",
        "content",
        "res",
        "Resources",
        "android",
        "content",
        "res",
        "Resources",
        "Theme",
        "android",
        "database",
        "sqlite",
        "SQLiteDatabase",
        "android",
        "database",
        "sqlite",
        "SQLiteDebug",
        "android",
        "database",
        "sqlite",
        "SQLiteDebug",
        "DbStats",
        "android",
        "graphics",
        "Bitmap",
        "android",
        "graphics",
        "Canvas",
        "android",
        "graphics",
        "HardwareRenderer",
        "android",
        "graphics",
        "ImageDecoder",
        "android",
        "hardware",
        "display",
        "DisplayManagerGlobal",
        "android",
        "net",
        "ConnectivityManager",
        "android",
        "net",
        "IConnectivityManager",
        "android",
        "net",
        "Proxy",
        "android",
        "net",
        "Uri",
        "android",
        "os",
        "AsyncTask",
        "android",
        "os",
        "Binder",
        "android",
        "os",
        "Build",
        "android",
        "os",
        "Bundle",
        "android",
        "os",
        "CancellationSignal",
        "android",
        "os",
        "Debug",
        "android",
        "os",
        "Environment",
        "android",
        "os",
        "FileUtils",
        "android",
        "os",
        "GraphicsEnvironment",
        "android",
        "os",
        "Handler",
        "android",
        "os",
        "HandlerExecutor",
        "android",
        "os",
        "IBinder",
        "android",
        "os",
        "ICancellationSignal",
        "android",
        "os",
        "LocaleList",
        "android",
        "os",
        "Looper",
        "android",
        "os",
        "Message",
        "android",
        "os",
        "MessageQueue",
        "android",
        "os",
        "Parcel",
        "android",
        "os",
        "ParcelFileDescriptor",
        "android",
        "os",
        "PersistableBundle",
        "android",
        "os",
        "Process",
        "android",
        "os",
        "RemoteCallback",
        "android",
        "os",
        "RemoteException",
        "android",
        "os",
        "ServiceManager",
        "android",
        "os",
        "StrictMode",
        "android",
        "os",
        "SystemClock",
        "android",
        "os",
        "SystemProperties",
        "android",
        "os",
        "Trace",
        "android",
        "os",
        "UserHandle",
        "android",
        "provider",
        "BlockedNumberContract",
        "android",
        "provider",
        "CalendarContract",
        "android",
        "provider",
        "CallLog",
        "android",
        "provider",
        "ContactsContract",
        "android",
        "provider",
        "Downloads",
        "android",
        "provider",
        "FontsContract",
        "android",
        "provider",
        "Settings",
        "android",
        "renderscript",
        "RenderScriptCacheDir",
        "android",
        "security",
        "NetworkSecurityPolicy",
        "android",
        "security",
        "net",
        "config",
        "NetworkSecurityConfigProvider",
        "android",
        "system",
        "ErrnoException",
        "android",
        "system",
        "OsConstants",
        "android",
        "system",
        "StructStat",
        "android",
        "util",
        "AndroidRuntimeException",
        "android",
        "util",
        "ArrayMap",
        "android",
        "util",
        "DisplayMetrics",
        "android",
        "util",
        "EventLog",
        "android",
        "util",
        "Log",
        "android",
        "util",
        "LogPrinter",
        "android",
        "util",
        "MergedConfiguration",
        "android",
        "util",
        "Pair",
        "android",
        "util",
        "PrintWriterPrinter",
        "android",
        "util",
        "Slog",
        "android",
        "util",
        "SparseArray",
        "android",
        "util",
        "SparseIntArray",
        "android",
        "util",
        "SuperNotCalledException",
        "android",
        "util",
        "UtilConfig",
        "android",
        "util",
        "proto",
        "ProtoOutputStream",
        "android",
        "view",
        "Choreographer",
        "android",
        "view",
        "ContextThemeWrapper",
        "android",
        "view",
        "Display",
        "android",
        "view",
        "ThreadedRenderer",
        "android",
        "view",
        "View",
        "android",
        "view",
        "ViewDebug",
        "android",
        "view",
        "ViewManager",
        "android",
        "view",
        "ViewRootImpl",
        "android",
        "view",
        "Window",
        "android",
        "view",
        "WindowManager",
        "android",
        "view",
        "WindowManagerGlobal",
        "android",
        "webkit",
        "WebView",
        "com",
        "android",
        "annotations",
        "GuardedBy",
        "com",
        "android",
        "annotations",
        "VisibleForTesting",
        "com",
        "android",
        "app",
        "IVoiceInteractor",
        "com",
        "android",
        "content",
        "ReferrerIntent",
        "com",
        "android",
        "os",
        "BinderInternal",
        "com",
        "android",
        "os",
        "RuntimeInit",
        "com",
        "android",
        "os",
        "SomeArgs",
        "com",
        "android",
        "util",
        "ArrayUtils",
        "com",
        "android",
        "util",
        "FastPrintWriter",
        "com",
        "android",
        "util",
        "Preconditions",
        "com",
        "android",
        "util",
        "pooled",
        "PooledLambda",
        "com",
        "android",
        "org",
        "conscrypt",
        "OpenSSLSocketImpl",
        "com",
        "android",
        "org",
        "conscrypt",
        "TrustedCertificateStore",
        "com",
        "android",
        "server",
        "am",
        "MemInfoDumpProto",
        "dalvik",
        "system",
        "CloseGuard",
        "dalvik",
        "system",
        "VMDebug",
        "dalvik",
        "system",
        "VMRuntime",
        "libcore",
        "io",
        "ForwardingOs",
        "libcore",
        "io",
        "IoUtils",
        "libcore",
        "io",
        "Os",
        "libcore",
        "net",
        "NetworkEventDispatcher",
        "org",
        "apache",
        "harmony",
        "dalvik",
        "ddmc",
        "DdmVmInternal",
        "java",
        "io",
        "BufferedReader",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileDescriptor",
        "java",
        "io",
        "FileNotFoundException",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "io",
        "FileReader",
        "java",
        "io",
        "java",
        "io",
        "PrintWriter",
        "java",
        "lang",
        "WeakReference",
        "java",
        "lang",
        "reflect",
        "Constructor",
        "java",
        "lang",
        "reflect",
        "Field",
        "java",
        "lang",
        "reflect",
        "InvocationTargetException",
        "java",
        "lang",
        "reflect",
        "Method",
        "java",
        "net",
        "InetAddress",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "text",
        "DateFormat",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "Locale",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "TimeZone",
        "java",
        "util",
        "concurrent",
        "Executor",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicInteger",
        "cn",
        "mik",
        "Fartext",
        "msg",
        "msg",
        "TAG",
        "THUMBNAIL_FORMAT",
        "Bitmap",
        "Config",
        "RGB_565",
        "localLOGV",
        "DEBUG_MESSAGES",
        "DEBUG_BROADCAST",
        "DEBUG_RESULTS",
        "DEBUG_BACKUP",
        "DEBUG_CONFIGURATION",
        "DEBUG_SERVICE",
        "DEBUG_MEMORY_TRIM",
        "DEBUG_PROVIDER",
        "DEBUG_ORDER",
        "MIN_TIME_BETWEEN_GCS",
        "PENDING_TOP_PROCESS_STATE_TIMEOUT",
        "CONTENT_PROVIDER_RETAIN_TIME",
        "SQLITE_MEM_RELEASED_EVENT_LOG_TAG",
        "SERVICE_DONE_EXECUTING_ANON",
        "SERVICE_DONE_EXECUTING_START",
        "SERVICE_DONE_EXECUTING_STOP",
        "REPORT_TO_ACTIVITY",
        "VM_PROCESS_STATE_JANK_PERCEPTIBLE",
        "VM_PROCESS_STATE_JANK_IMPERCEPTIBLE",
        "INVALID_PROC_STATE_SEQ",
        "PROC_START_SEQ_IDENT",
        "mNetworkPolicyLock",
        "GuardedBy",
        "mNetworkBlockSeq",
        "INVALID_PROC_STATE_SEQ",
        "UnsupportedAppUsage",
        "mSystemContext",
        "mSystemUiContext",
        "UnsupportedAppUsage",
        "sPackageManager",
        "UnsupportedAppUsage",
        "mAppThread",
        "UnsupportedAppUsage",
        "mLooper",
        "Looper",
        "myLooper",
        "UnsupportedAppUsage",
        "mH",
        "mExecutor",
        "mH",
        "UnsupportedAppUsage",
        "mActivities",
        "mActivitiesToBeDestroyed",
        "Collections",
        "synchronizedMap",
        "mNewActivities",
        "UnsupportedAppUsage",
        "mNumVisibleActivities",
        "mNumLaunchingActivities",
        "GuardedBy",
        "mLastProcessState",
        "PROCESS_STATE_UNKNOWN",
        "GuardedBy",
        "mPendingProcessState",
        "PROCESS_STATE_UNKNOWN",
        "mLastAssistStructures",
        "mLastSessionId",
        "UnsupportedAppUsage",
        "mServices",
        "UnsupportedAppUsage",
        "mBoundApplication",
        "mProfiler",
        "UnsupportedAppUsage",
        "mCurDefaultDisplayDpi",
        "UnsupportedAppUsage",
        "mDensityCompatMode",
        "UnsupportedAppUsage",
        "mConfiguration",
        "mCompatConfiguration",
        "UnsupportedAppUsage",
        "mInitialApplication",
        "UnsupportedAppUsage",
        "mAllApplications",
        "mBackupAgentsByUser",
        "UnsupportedAppUsage",
        "sCurrentActivityThread",
        "UnsupportedAppUsage",
        "mInstrumentation",
        "mInstrumentationPackageName",
        "UnsupportedAppUsage",
        "mInstrumentationAppDir",
        "mInstrumentationSplitAppDirs",
        "mInstrumentationLibDir",
        "UnsupportedAppUsage",
        "mInstrumentedAppDir",
        "mInstrumentedSplitAppDirs",
        "mInstrumentedLibDir",
        "mSystemThread",
        "mSomeActivitiesChanged",
        "mUpdatingSystemConfig",
        "mHiddenApiWarningShown",
        "GuardedBy",
        "UnsupportedAppUsage",
        "mPackages",
        "GuardedBy",
        "UnsupportedAppUsage",
        "mResourcePackages",
        "GuardedBy",
        "mRelaunchingActivities",
        "GuardedBy",
        "UnsupportedAppUsage",
        "mPendingConfiguration",
        "mTransactionExecutor",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "mResourcesManager",
        "GuardedBy",
        "mRemoteCancellations",
        "authority",
        "userId",
        "authority",
        "userId",
        "authority",
        "authority",
        "userId",
        "userId",
        "Override",
        "o",
        "o",
        "other",
        "o",
        "Objects",
        "equals",
        "authority",
        "other",
        "authority",
        "userId",
        "other",
        "userId",
        "Override",
        "authority",
        "authority",
        "hashCode",
        "userId",
        "UnsupportedAppUsage",
        "mProviderMap",
        "UnsupportedAppUsage",
        "mProviderRefCountMap",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "mLocalProviders",
        "UnsupportedAppUsage",
        "mLocalProvidersByName",
        "GuardedBy",
        "mGetProviderLocks",
        "mOnPauseListeners",
        "mGcIdler",
        "mPurgeIdler",
        "mPurgeIdlerScheduled",
        "mGcIdlerScheduled",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "sMainThreadHandler",
        "mCoreSettings",
        "UnsupportedAppUsage",
        "token",
        "assistToken",
        "ident",
        "UnsupportedAppUsage",
        "intent",
        "referrer",
        "voiceInteractor",
        "state",
        "persistentState",
        "UnsupportedAppUsage",
        "activity",
        "parent",
        "embeddedID",
        "lastNonConfigurationInstances",
        "UnsupportedAppUsage",
        "paused",
        "UnsupportedAppUsage",
        "stopped",
        "hideForNow",
        "newConfig",
        "createdConfig",
        "overrideConfig",
        "GuardedBy",
        "mPendingOverrideConfig",
        "tmpConfig",
        "configCallback",
        "nextIdle",
        "isTopResumedActivity",
        "lastReportedTopResumedState",
        "profilerInfo",
        "UnsupportedAppUsage",
        "activityInfo",
        "UnsupportedAppUsage",
        "compatInfo",
        "UnsupportedAppUsage",
        "packageInfo",
        "pendingResults",
        "pendingIntents",
        "startsNotResumed",
        "isForward",
        "pendingConfigChanges",
        "mPendingRemoveWindow",
        "mPendingRemoveWindowManager",
        "UnsupportedAppUsage",
        "mPreserveWindow",
        "LifecycleState",
        "mLifecycleState",
        "PRE_ON_CREATE",
        "VisibleForTesting",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "isForward",
        "init",
        "token",
        "intent",
        "ident",
        "info",
        "overrideConfig",
        "compatInfo",
        "referrer",
        "voiceInteractor",
        "state",
        "persistentState",
        "pendingResults",
        "pendingNewIntents",
        "isForward",
        "profilerInfo",
        "client",
        "assistToken",
        "token",
        "token",
        "assistToken",
        "assistToken",
        "ident",
        "ident",
        "intent",
        "intent",
        "referrer",
        "referrer",
        "voiceInteractor",
        "voiceInteractor",
        "activityInfo",
        "info",
        "compatInfo",
        "compatInfo",
        "state",
        "state",
        "persistentState",
        "persistentState",
        "pendingResults",
        "pendingResults",
        "pendingIntents",
        "pendingNewIntents",
        "isForward",
        "isForward",
        "profilerInfo",
        "profilerInfo",
        "overrideConfig",
        "overrideConfig",
        "packageInfo",
        "client",
        "getPackageInfoNoCheck",
        "activityInfo",
        "applicationInfo",
        "compatInfo",
        "init",
        "parent",
        "embeddedID",
        "paused",
        "stopped",
        "hideForNow",
        "nextIdle",
        "configCallback",
        "overrideConfig",
        "newDisplayId",
        "activity",
        "activity",
        "mMainThread",
        "handleActivityConfigurationChanged",
        "token",
        "overrideConfig",
        "newDisplayId",
        "mLifecycleState",
        "LifecycleState",
        "newLifecycleState",
        "mLifecycleState",
        "newLifecycleState",
        "mLifecycleState",
        "ON_CREATE",
        "paused",
        "stopped",
        "ON_START",
        "paused",
        "stopped",
        "ON_RESUME",
        "paused",
        "stopped",
        "ON_PAUSE",
        "paused",
        "stopped",
        "ON_STOP",
        "paused",
        "stopped",
        "activity",
        "activity",
        "getApplicationInfo",
        "targetSdkVersion",
        "android",
        "os",
        "Build",
        "VERSION_CODES",
        "HONEYCOMB",
        "activity",
        "activity",
        "getApplicationInfo",
        "targetSdkVersion",
        "android",
        "os",
        "Build",
        "VERSION_CODES",
        "P",
        "activityInfo",
        "persistableMode",
        "ActivityInfo",
        "PERSIST_ACROSS_REBOOTS",
        "activity",
        "activity",
        "mVisibleFromServer",
        "componentName",
        "intent",
        "intent",
        "getComponent",
        "toHexString",
        "identityHashCode",
        "token",
        "componentName",
        "componentName",
        "toShortString",
        "sb",
        "sb",
        "append",
        "sb",
        "append",
        "append",
        "paused",
        "sb",
        "append",
        "append",
        "stopped",
        "sb",
        "append",
        "append",
        "hideForNow",
        "sb",
        "append",
        "append",
        "startsNotResumed",
        "sb",
        "append",
        "append",
        "isForward",
        "sb",
        "append",
        "append",
        "pendingConfigChanges",
        "sb",
        "append",
        "append",
        "mPreserveWindow",
        "activity",
        "sb",
        "append",
        "sb",
        "append",
        "append",
        "activity",
        "mResumed",
        "sb",
        "append",
        "append",
        "activity",
        "mStopped",
        "sb",
        "append",
        "append",
        "activity",
        "isFinishing",
        "sb",
        "append",
        "append",
        "activity",
        "isDestroyed",
        "sb",
        "append",
        "append",
        "activity",
        "mStartedActivity",
        "sb",
        "append",
        "append",
        "activity",
        "mChangingConfigurations",
        "sb",
        "append",
        "sb",
        "append",
        "sb",
        "toString",
        "mNames",
        "UnsupportedAppUsage",
        "mProvider",
        "UnsupportedAppUsage",
        "mLocalProvider",
        "UnsupportedAppUsage",
        "mHolder",
        "names",
        "provider",
        "localProvider",
        "holder",
        "mNames",
        "names",
        "mProvider",
        "provider",
        "mLocalProvider",
        "localProvider",
        "mHolder",
        "holder",
        "intent",
        "resultCode",
        "resultData",
        "resultExtras",
        "ordered",
        "sticky",
        "token",
        "sendingUser",
        "resultCode",
        "resultData",
        "resultExtras",
        "TYPE_COMPONENT",
        "ordered",
        "sticky",
        "token",
        "sendingUser",
        "intent",
        "getFlags",
        "intent",
        "intent",
        "UnsupportedAppUsage",
        "intent",
        "UnsupportedAppUsage",
        "info",
        "UnsupportedAppUsage",
        "compatInfo",
        "intent",
        "info",
        "packageName",
        "getResultCode",
        "getResultData",
        "getResultExtras",
        "appInfo",
        "compatInfo",
        "backupMode",
        "userId",
        "appInfo",
        "appInfo",
        "backupAgentName",
        "backupMode",
        "userId",
        "UnsupportedAppUsage",
        "token",
        "UnsupportedAppUsage",
        "info",
        "UnsupportedAppUsage",
        "compatInfo",
        "UnsupportedAppUsage",
        "intent",
        "token",
        "info",
        "name",
        "info",
        "packageName",
        "intent",
        "UnsupportedAppUsage",
        "token",
        "UnsupportedAppUsage",
        "intent",
        "rebind",
        "token",
        "intent",
        "UnsupportedAppUsage",
        "token",
        "taskRemoved",
        "startId",
        "flags",
        "UnsupportedAppUsage",
        "args",
        "token",
        "startId",
        "args",
        "UnsupportedAppUsage",
        "info",
        "UnsupportedAppUsage",
        "processName",
        "UnsupportedAppUsage",
        "appInfo",
        "UnsupportedAppUsage",
        "providers",
        "instrumentationName",
        "UnsupportedAppUsage",
        "instrumentationArgs",
        "instrumentationWatcher",
        "instrumentationUiAutomationConnection",
        "debugMode",
        "enableBinderTracking",
        "trackAllocation",
        "UnsupportedAppUsage",
        "restrictedBackupMode",
        "UnsupportedAppUsage",
        "persistent",
        "config",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "compatInfo",
        "buildSerial",
        "initProfilerInfo",
        "autofillOptions",
        "contentCaptureOptions",
        "Override",
        "appInfo",
        "profileFile",
        "profileFd",
        "samplingInterval",
        "autoStopProfiler",
        "streamingOutput",
        "profiling",
        "handlingProfiling",
        "profilerInfo",
        "fd",
        "profilerInfo",
        "profileFd",
        "profiling",
        "fd",
        "fd",
        "close",
        "e",
        "profileFd",
        "profileFd",
        "close",
        "e",
        "profileFile",
        "profilerInfo",
        "profileFile",
        "profileFd",
        "fd",
        "samplingInterval",
        "profilerInfo",
        "samplingInterval",
        "autoStopProfiler",
        "profilerInfo",
        "autoStopProfiler",
        "streamingOutput",
        "profilerInfo",
        "streamingOutput",
        "profileFd",
        "profiling",
        "bufferSize",
        "SystemProperties",
        "getInt",
        "VMDebug",
        "startMethodTracing",
        "profileFile",
        "profileFd",
        "getFileDescriptor",
        "bufferSize",
        "samplingInterval",
        "samplingInterval",
        "streamingOutput",
        "profiling",
        "e",
        "Slog",
        "w",
        "TAG",
        "profileFile",
        "e",
        "profileFd",
        "close",
        "profileFd",
        "e2",
        "Slog",
        "w",
        "TAG",
        "e2",
        "profiling",
        "profiling",
        "Debug",
        "stopMethodTracing",
        "profileFd",
        "profileFd",
        "close",
        "e",
        "profileFd",
        "profileFile",
        "fd",
        "token",
        "prefix",
        "args",
        "context",
        "what",
        "who",
        "managed",
        "mallocInfo",
        "runGc",
        "path",
        "fd",
        "finishCallback",
        "pkg",
        "info",
        "activityToken",
        "requestToken",
        "requestType",
        "sessionId",
        "flags",
        "DB_INFO_FORMAT",
        "token",
        "sleeping",
        "sendMessage",
        "H",
        "SLEEPING",
        "token",
        "sleeping",
        "intent",
        "info",
        "compatInfo",
        "resultCode",
        "data",
        "extras",
        "sync",
        "sendingUser",
        "processState",
        "updateProcessState",
        "processState",
        "r",
        "intent",
        "resultCode",
        "data",
        "extras",
        "sync",
        "mAppThread",
        "asBinder",
        "sendingUser",
        "r",
        "info",
        "info",
        "r",
        "compatInfo",
        "compatInfo",
        "sendMessage",
        "H",
        "RECEIVER",
        "r",
        "app",
        "compatInfo",
        "backupMode",
        "userId",
        "d",
        "d",
        "appInfo",
        "app",
        "d",
        "compatInfo",
        "compatInfo",
        "d",
        "backupMode",
        "backupMode",
        "d",
        "userId",
        "userId",
        "sendMessage",
        "H",
        "CREATE_BACKUP_AGENT",
        "d",
        "app",
        "compatInfo",
        "userId",
        "d",
        "d",
        "appInfo",
        "app",
        "d",
        "compatInfo",
        "compatInfo",
        "d",
        "userId",
        "userId",
        "sendMessage",
        "H",
        "DESTROY_BACKUP_AGENT",
        "d",
        "token",
        "info",
        "compatInfo",
        "processState",
        "updateProcessState",
        "processState",
        "s",
        "s",
        "token",
        "token",
        "s",
        "info",
        "info",
        "s",
        "compatInfo",
        "compatInfo",
        "sendMessage",
        "H",
        "CREATE_SERVICE",
        "s",
        "token",
        "intent",
        "rebind",
        "processState",
        "updateProcessState",
        "processState",
        "s",
        "s",
        "token",
        "token",
        "s",
        "intent",
        "intent",
        "s",
        "rebind",
        "rebind",
        "DEBUG_SERVICE",
        "Slog",
        "v",
        "TAG",
        "token",
        "intent",
        "Binder",
        "getCallingUid",
        "Binder",
        "getCallingPid",
        "sendMessage",
        "H",
        "BIND_SERVICE",
        "s",
        "token",
        "intent",
        "s",
        "s",
        "token",
        "token",
        "s",
        "intent",
        "intent",
        "sendMessage",
        "H",
        "UNBIND_SERVICE",
        "s",
        "token",
        "args",
        "args",
        "getList",
        "i",
        "i",
        "size",
        "i",
        "ssa",
        "get",
        "i",
        "s",
        "s",
        "token",
        "token",
        "s",
        "taskRemoved",
        "ssa",
        "taskRemoved",
        "s",
        "startId",
        "ssa",
        "startId",
        "s",
        "flags",
        "ssa",
        "flags",
        "s",
        "args",
        "ssa",
        "args",
        "sendMessage",
        "H",
        "SERVICE_ARGS",
        "s",
        "token",
        "sendMessage",
        "H",
        "STOP_SERVICE",
        "token",
        "processName",
        "appInfo",
        "providers",
        "instrumentationName",
        "profilerInfo",
        "instrumentationArgs",
        "instrumentationWatcher",
        "instrumentationUiConnection",
        "debugMode",
        "enableBinderTracking",
        "trackAllocation",
        "isRestrictedBackupMode",
        "persistent",
        "config",
        "compatInfo",
        "services",
        "coreSettings",
        "buildSerial",
        "autofillOptions",
        "contentCaptureOptions",
        "services",
        "oname",
        "services",
        "keySet",
        "services",
        "get",
        "oname",
        "name",
        "oname",
        "name",
        "Context",
        "WINDOW_SERVICE",
        "ServiceManager",
        "getService",
        "name",
        "Log",
        "wtf",
        "TAG",
        "name",
        "ServiceManager",
        "initServiceCache",
        "services",
        "setCoreSettings",
        "coreSettings",
        "data",
        "data",
        "processName",
        "processName",
        "data",
        "appInfo",
        "appInfo",
        "data",
        "providers",
        "providers",
        "data",
        "instrumentationName",
        "instrumentationName",
        "data",
        "instrumentationArgs",
        "instrumentationArgs",
        "data",
        "instrumentationWatcher",
        "instrumentationWatcher",
        "data",
        "instrumentationUiAutomationConnection",
        "instrumentationUiConnection",
        "data",
        "debugMode",
        "debugMode",
        "data",
        "enableBinderTracking",
        "enableBinderTracking",
        "data",
        "trackAllocation",
        "trackAllocation",
        "data",
        "restrictedBackupMode",
        "isRestrictedBackupMode",
        "data",
        "persistent",
        "persistent",
        "data",
        "config",
        "config",
        "data",
        "compatInfo",
        "compatInfo",
        "data",
        "initProfilerInfo",
        "profilerInfo",
        "data",
        "buildSerial",
        "buildSerial",
        "data",
        "autofillOptions",
        "autofillOptions",
        "data",
        "contentCaptureOptions",
        "contentCaptureOptions",
        "sendMessage",
        "H",
        "BIND_APPLICATION",
        "data",
        "entryPoint",
        "entryPointArgs",
        "args",
        "SomeArgs",
        "obtain",
        "args",
        "arg1",
        "entryPoint",
        "args",
        "arg2",
        "entryPointArgs",
        "sendMessage",
        "H",
        "RUN_ISOLATED_ENTRY_POINT",
        "args",
        "sendMessage",
        "H",
        "EXIT_APPLICATION",
        "sendMessage",
        "H",
        "SUICIDE",
        "ai",
        "mH",
        "removeMessages",
        "H",
        "APPLICATION_INFO_CHANGED",
        "ai",
        "sendMessage",
        "H",
        "APPLICATION_INFO_CHANGED",
        "ai",
        "TimeZone",
        "setDefault",
        "InetAddress",
        "clearDnsCache",
        "NetworkEventDispatcher",
        "getInstance",
        "onNetworkConfigurationChanged",
        "ActivityThread",
        "updateHttpProxy",
        "getApplication",
        "getApplication",
        "getSystemContext",
        "mH",
        "removeMessages",
        "H",
        "GC_WHEN_IDLE",
        "mH",
        "sendMessage",
        "mH",
        "obtainMessage",
        "H",
        "GC_WHEN_IDLE",
        "pfd",
        "servicetoken",
        "args",
        "data",
        "data",
        "fd",
        "pfd",
        "dup",
        "data",
        "token",
        "servicetoken",
        "data",
        "args",
        "args",
        "sendMessage",
        "H",
        "DUMP_SERVICE",
        "data",
        "e",
        "Slog",
        "w",
        "TAG",
        "e",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "receiver",
        "intent",
        "resultCode",
        "dataStr",
        "extras",
        "ordered",
        "sticky",
        "sendingUser",
        "processState",
        "updateProcessState",
        "processState",
        "receiver",
        "performReceive",
        "intent",
        "resultCode",
        "dataStr",
        "extras",
        "ordered",
        "sticky",
        "sendingUser",
        "Override",
        "sendMessage",
        "H",
        "LOW_MEMORY",
        "Override",
        "start",
        "profilerInfo",
        "profileType",
        "sendMessage",
        "H",
        "PROFILER_CONTROL",
        "profilerInfo",
        "start",
        "profileType",
        "Override",
        "managed",
        "mallocInfo",
        "runGc",
        "path",
        "fd",
        "finishCallback",
        "dhd",
        "dhd",
        "managed",
        "managed",
        "dhd",
        "mallocInfo",
        "mallocInfo",
        "dhd",
        "runGc",
        "runGc",
        "dhd",
        "path",
        "path",
        "dhd",
        "fd",
        "fd",
        "dup",
        "e",
        "Slog",
        "e",
        "TAG",
        "e",
        "dhd",
        "finishCallback",
        "finishCallback",
        "sendMessage",
        "H",
        "DUMP_HEAP",
        "dhd",
        "agent",
        "sendMessage",
        "H",
        "ATTACH_AGENT",
        "agent",
        "group",
        "Process",
        "setProcessGroup",
        "Process",
        "myPid",
        "group",
        "e",
        "Slog",
        "w",
        "TAG",
        "group",
        "e",
        "cmd",
        "packages",
        "sendMessage",
        "H",
        "DISPATCH_PACKAGE_BROADCAST",
        "packages",
        "cmd",
        "msg",
        "sendMessage",
        "H",
        "SCHEDULE_CRASH",
        "msg",
        "pfd",
        "activitytoken",
        "prefix",
        "args",
        "data",
        "data",
        "fd",
        "pfd",
        "dup",
        "data",
        "token",
        "activitytoken",
        "data",
        "prefix",
        "prefix",
        "data",
        "args",
        "args",
        "sendMessage",
        "H",
        "DUMP_ACTIVITY",
        "data",
        "e",
        "Slog",
        "w",
        "TAG",
        "e",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "pfd",
        "providertoken",
        "args",
        "data",
        "data",
        "fd",
        "pfd",
        "dup",
        "data",
        "token",
        "providertoken",
        "data",
        "args",
        "args",
        "sendMessage",
        "H",
        "DUMP_PROVIDER",
        "data",
        "e",
        "Slog",
        "w",
        "TAG",
        "e",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "Override",
        "pfd",
        "mem",
        "checkin",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "dumpUnreachable",
        "args",
        "fout",
        "pfd",
        "getFileDescriptor",
        "pw",
        "fout",
        "dumpMemInfo",
        "pw",
        "mem",
        "checkin",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "dumpUnreachable",
        "pw",
        "flush",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "pw",
        "memInfo",
        "checkin",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "dumpUnreachable",
        "nativeMax",
        "Debug",
        "getNativeHeapSize",
        "nativeAllocated",
        "Debug",
        "getNativeHeapAllocatedSize",
        "nativeFree",
        "Debug",
        "getNativeHeapFreeSize",
        "runtime",
        "Runtime",
        "getRuntime",
        "runtime",
        "gc",
        "dalvikMax",
        "runtime",
        "totalMemory",
        "dalvikFree",
        "runtime",
        "freeMemory",
        "dalvikAllocated",
        "dalvikMax",
        "dalvikFree",
        "classesToCount",
        "instanceCounts",
        "VMDebug",
        "countInstancesOfClasses",
        "classesToCount",
        "appContextInstanceCount",
        "instanceCounts",
        "activityInstanceCount",
        "instanceCounts",
        "webviewInstanceCount",
        "instanceCounts",
        "openSslSocketCount",
        "instanceCounts",
        "viewInstanceCount",
        "ViewDebug",
        "getViewInstanceCount",
        "viewRootInstanceCount",
        "ViewDebug",
        "getViewRootImplCount",
        "globalAssetCount",
        "AssetManager",
        "getGlobalAssetCount",
        "globalAssetManagerCount",
        "AssetManager",
        "getGlobalAssetManagerCount",
        "binderLocalObjectCount",
        "Debug",
        "getBinderLocalObjectCount",
        "binderProxyObjectCount",
        "Debug",
        "getBinderProxyObjectCount",
        "binderDeathObjectCount",
        "Debug",
        "getBinderDeathObjectCount",
        "parcelSize",
        "Parcel",
        "getGlobalAllocSize",
        "parcelCount",
        "Parcel",
        "getGlobalAllocCount",
        "stats",
        "SQLiteDebug",
        "getDatabaseInfo",
        "dumpMemInfoTable",
        "pw",
        "memInfo",
        "checkin",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "Process",
        "myPid",
        "mBoundApplication",
        "mBoundApplication",
        "processName",
        "nativeMax",
        "nativeAllocated",
        "nativeFree",
        "dalvikMax",
        "dalvikAllocated",
        "dalvikFree",
        "checkin",
        "pw",
        "viewInstanceCount",
        "pw",
        "pw",
        "viewRootInstanceCount",
        "pw",
        "pw",
        "appContextInstanceCount",
        "pw",
        "pw",
        "activityInstanceCount",
        "pw",
        "pw",
        "globalAssetCount",
        "pw",
        "pw",
        "globalAssetManagerCount",
        "pw",
        "pw",
        "binderLocalObjectCount",
        "pw",
        "pw",
        "binderProxyObjectCount",
        "pw",
        "pw",
        "binderDeathObjectCount",
        "pw",
        "pw",
        "openSslSocketCount",
        "pw",
        "pw",
        "stats",
        "memoryUsed",
        "pw",
        "pw",
        "stats",
        "memoryUsed",
        "pw",
        "pw",
        "stats",
        "pageCacheOverflow",
        "pw",
        "pw",
        "stats",
        "largestMemAlloc",
        "i",
        "i",
        "stats",
        "dbStats",
        "size",
        "i",
        "dbStats",
        "stats",
        "dbStats",
        "get",
        "i",
        "pw",
        "pw",
        "dbStats",
        "dbName",
        "pw",
        "pw",
        "dbStats",
        "pageSize",
        "pw",
        "pw",
        "dbStats",
        "dbSize",
        "pw",
        "pw",
        "dbStats",
        "lookaside",
        "pw",
        "pw",
        "dbStats",
        "cache",
        "pw",
        "pw",
        "dbStats",
        "cache",
        "pw",
        "pw",
        "pw",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "viewInstanceCount",
        "viewRootInstanceCount",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "appContextInstanceCount",
        "activityInstanceCount",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "globalAssetCount",
        "globalAssetManagerCount",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "binderLocalObjectCount",
        "binderProxyObjectCount",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "parcelSize",
        "parcelCount",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "binderDeathObjectCount",
        "openSslSocketCount",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "webviewInstanceCount",
        "pw",
        "pw",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "stats",
        "memoryUsed",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "stats",
        "pageCacheOverflow",
        "stats",
        "largestMemAlloc",
        "pw",
        "N",
        "stats",
        "dbStats",
        "size",
        "N",
        "pw",
        "printRow",
        "pw",
        "DB_INFO_FORMAT",
        "i",
        "i",
        "N",
        "i",
        "dbStats",
        "stats",
        "dbStats",
        "get",
        "i",
        "printRow",
        "pw",
        "DB_INFO_FORMAT",
        "dbStats",
        "pageSize",
        "valueOf",
        "dbStats",
        "pageSize",
        "dbStats",
        "dbSize",
        "valueOf",
        "dbStats",
        "dbSize",
        "dbStats",
        "lookaside",
        "valueOf",
        "dbStats",
        "lookaside",
        "dbStats",
        "cache",
        "dbStats",
        "dbName",
        "assetAlloc",
        "AssetManager",
        "getAssetAllocations",
        "assetAlloc",
        "pw",
        "pw",
        "pw",
        "assetAlloc",
        "dumpUnreachable",
        "showContents",
        "mBoundApplication",
        "mBoundApplication",
        "appInfo",
        "flags",
        "ApplicationInfo",
        "FLAG_DEBUGGABLE",
        "android",
        "os",
        "Build",
        "IS_DEBUGGABLE",
        "pw",
        "pw",
        "pw",
        "Debug",
        "getUnreachableMemory",
        "showContents",
        "Override",
        "pfd",
        "mem",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "dumpUnreachable",
        "args",
        "proto",
        "pfd",
        "getFileDescriptor",
        "dumpMemInfo",
        "proto",
        "mem",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "dumpUnreachable",
        "proto",
        "flush",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "proto",
        "memInfo",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "dumpUnreachable",
        "nativeMax",
        "Debug",
        "getNativeHeapSize",
        "nativeAllocated",
        "Debug",
        "getNativeHeapAllocatedSize",
        "nativeFree",
        "Debug",
        "getNativeHeapFreeSize",
        "runtime",
        "Runtime",
        "getRuntime",
        "runtime",
        "gc",
        "dalvikMax",
        "runtime",
        "totalMemory",
        "dalvikFree",
        "runtime",
        "freeMemory",
        "dalvikAllocated",
        "dalvikMax",
        "dalvikFree",
        "classesToCount",
        "instanceCounts",
        "VMDebug",
        "countInstancesOfClasses",
        "classesToCount",
        "appContextInstanceCount",
        "instanceCounts",
        "activityInstanceCount",
        "instanceCounts",
        "webviewInstanceCount",
        "instanceCounts",
        "openSslSocketCount",
        "instanceCounts",
        "viewInstanceCount",
        "ViewDebug",
        "getViewInstanceCount",
        "viewRootInstanceCount",
        "ViewDebug",
        "getViewRootImplCount",
        "globalAssetCount",
        "AssetManager",
        "getGlobalAssetCount",
        "globalAssetManagerCount",
        "AssetManager",
        "getGlobalAssetManagerCount",
        "binderLocalObjectCount",
        "Debug",
        "getBinderLocalObjectCount",
        "binderProxyObjectCount",
        "Debug",
        "getBinderProxyObjectCount",
        "binderDeathObjectCount",
        "Debug",
        "getBinderDeathObjectCount",
        "parcelSize",
        "Parcel",
        "getGlobalAllocSize",
        "parcelCount",
        "Parcel",
        "getGlobalAllocCount",
        "stats",
        "SQLiteDebug",
        "getDatabaseInfo",
        "mToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "AppData",
        "PROCESS_MEMORY",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "PID",
        "Process",
        "myPid",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "PROCESS_NAME",
        "mBoundApplication",
        "mBoundApplication",
        "processName",
        "dumpMemInfoTable",
        "proto",
        "memInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "nativeMax",
        "nativeAllocated",
        "nativeFree",
        "dalvikMax",
        "dalvikAllocated",
        "dalvikFree",
        "proto",
        "end",
        "mToken",
        "oToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "AppData",
        "OBJECTS",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "VIEW_INSTANCE_COUNT",
        "viewInstanceCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "VIEW_ROOT_INSTANCE_COUNT",
        "viewRootInstanceCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "APP_CONTEXT_INSTANCE_COUNT",
        "appContextInstanceCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "ACTIVITY_INSTANCE_COUNT",
        "activityInstanceCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "GLOBAL_ASSET_COUNT",
        "globalAssetCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "GLOBAL_ASSET_MANAGER_COUNT",
        "globalAssetManagerCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "LOCAL_BINDER_OBJECT_COUNT",
        "binderLocalObjectCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "PROXY_BINDER_OBJECT_COUNT",
        "binderProxyObjectCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "PARCEL_MEMORY_KB",
        "parcelSize",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "PARCEL_COUNT",
        "parcelCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "BINDER_OBJECT_DEATH_COUNT",
        "binderDeathObjectCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "OPEN_SSL_SOCKET_COUNT",
        "openSslSocketCount",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ObjectStats",
        "WEBVIEW_INSTANCE_COUNT",
        "webviewInstanceCount",
        "proto",
        "end",
        "oToken",
        "sToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "AppData",
        "SQL",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "MEMORY_USED_KB",
        "stats",
        "memoryUsed",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "PAGECACHE_OVERFLOW_KB",
        "stats",
        "pageCacheOverflow",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "MALLOC_SIZE_KB",
        "stats",
        "largestMemAlloc",
        "n",
        "stats",
        "dbStats",
        "size",
        "i",
        "i",
        "n",
        "i",
        "dbStats",
        "stats",
        "dbStats",
        "get",
        "i",
        "dToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "DATABASES",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "Database",
        "NAME",
        "dbStats",
        "dbName",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "Database",
        "PAGE_SIZE",
        "dbStats",
        "pageSize",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "Database",
        "DB_SIZE",
        "dbStats",
        "dbSize",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "Database",
        "LOOKASIDE_B",
        "dbStats",
        "lookaside",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "SqlStats",
        "Database",
        "CACHE",
        "dbStats",
        "cache",
        "proto",
        "end",
        "dToken",
        "proto",
        "end",
        "sToken",
        "assetAlloc",
        "AssetManager",
        "getAssetAllocations",
        "assetAlloc",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "ASSET_ALLOCATIONS",
        "assetAlloc",
        "dumpUnreachable",
        "flags",
        "mBoundApplication",
        "mBoundApplication",
        "appInfo",
        "flags",
        "showContents",
        "flags",
        "ApplicationInfo",
        "FLAG_DEBUGGABLE",
        "android",
        "os",
        "Build",
        "IS_DEBUGGABLE",
        "proto",
        "write",
        "MemInfoDumpProto",
        "AppData",
        "UNREACHABLE_MEMORY",
        "Debug",
        "getUnreachableMemory",
        "showContents",
        "Override",
        "pfd",
        "args",
        "nDumpGraphicsInfo",
        "pfd",
        "getFileDescriptor",
        "WindowManagerGlobal",
        "getInstance",
        "dumpGfxInfo",
        "pfd",
        "getFileDescriptor",
        "args",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "context",
        "context",
        "getDatabasePath",
        "getParentFile",
        "pfd",
        "args",
        "isSystem",
        "pw",
        "pfd",
        "getFileDescriptor",
        "printer",
        "pw",
        "SQLiteDebug",
        "dump",
        "printer",
        "args",
        "isSystem",
        "pw",
        "flush",
        "Override",
        "pfd",
        "args",
        "mSystemThread",
        "dup",
        "dup",
        "pfd",
        "dup",
        "e",
        "Log",
        "w",
        "TAG",
        "pfd",
        "getFileDescriptor",
        "getInt$",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "AsyncTask",
        "THREAD_POOL_EXECUTOR",
        "execute",
        "Override",
        "dumpDatabaseInfo",
        "dup",
        "args",
        "IoUtils",
        "closeQuietly",
        "dup",
        "dumpDatabaseInfo",
        "pfd",
        "args",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "Override",
        "provider",
        "sendMessage",
        "H",
        "UNSTABLE_PROVIDER_DIED",
        "provider",
        "Override",
        "activityToken",
        "requestToken",
        "requestType",
        "sessionId",
        "flags",
        "cmd",
        "cmd",
        "activityToken",
        "activityToken",
        "cmd",
        "requestToken",
        "requestToken",
        "cmd",
        "requestType",
        "requestType",
        "cmd",
        "sessionId",
        "sessionId",
        "cmd",
        "flags",
        "flags",
        "sendMessage",
        "H",
        "REQUEST_ASSIST_CONTEXT_EXTRAS",
        "cmd",
        "coreSettings",
        "sendMessage",
        "H",
        "SET_CORE_SETTINGS",
        "coreSettings",
        "pkg",
        "info",
        "ucd",
        "ucd",
        "pkg",
        "pkg",
        "ucd",
        "info",
        "info",
        "sendMessage",
        "H",
        "UPDATE_PACKAGE_COMPATIBILITY_INFO",
        "ucd",
        "level",
        "r",
        "PooledLambda",
        "obtainRunnable",
        "ActivityThread",
        "handleTrimMemory",
        "ActivityThread",
        "level",
        "recycleOnUse",
        "choreographer",
        "Choreographer",
        "getMainThreadInstance",
        "choreographer",
        "choreographer",
        "postCallback",
        "Choreographer",
        "CALLBACK_COMMIT",
        "r",
        "mH",
        "post",
        "r",
        "token",
        "drawComplete",
        "sendMessage",
        "H",
        "TRANSLUCENT_CONVERSION_COMPLETE",
        "token",
        "drawComplete",
        "token",
        "options",
        "sendMessage",
        "H",
        "ON_NEW_ACTIVITY_OPTIONS",
        "token",
        "ActivityOptions",
        "fromBundle",
        "options",
        "state",
        "updateProcessState",
        "state",
        "Override",
        "procStateSeq",
        "mNetworkPolicyLock",
        "mNetworkBlockSeq",
        "procStateSeq",
        "Override",
        "provider",
        "sendMessage",
        "H",
        "INSTALL_PROVIDER",
        "provider",
        "Override",
        "timeFormatPreference",
        "timeFormatPreferenceBool",
        "timeFormatPreference",
        "Intent",
        "EXTRA_TIME_PREF_VALUE_USE_12_HOUR",
        "timeFormatPreferenceBool",
        "FALSE",
        "timeFormatPreference",
        "Intent",
        "EXTRA_TIME_PREF_VALUE_USE_24_HOUR",
        "timeFormatPreferenceBool",
        "TRUE",
        "timeFormatPreferenceBool",
        "DateFormat",
        "set24HourTimePref",
        "timeFormatPreferenceBool",
        "Override",
        "token",
        "sendMessage",
        "H",
        "ENTER_ANIMATION_COMPLETE",
        "token",
        "Override",
        "firstPacket",
        "StrictMode",
        "vmCleartextNetworkEnabled",
        "StrictMode",
        "onCleartextNetworkDetected",
        "firstPacket",
        "Override",
        "sendMessage",
        "H",
        "START_BINDER_TRACKING",
        "Override",
        "pfd",
        "sendMessage",
        "H",
        "STOP_BINDER_TRACKING_AND_DUMP",
        "pfd",
        "dup",
        "e",
        "IoUtils",
        "closeQuietly",
        "pfd",
        "Override",
        "token",
        "voiceInteractor",
        "args",
        "SomeArgs",
        "obtain",
        "args",
        "arg1",
        "token",
        "args",
        "arg2",
        "voiceInteractor",
        "sendMessage",
        "H",
        "LOCAL_VOICE_INTERACTION_STARTED",
        "args",
        "Override",
        "NetworkSecurityPolicy",
        "getInstance",
        "handleTrustStorageUpdate",
        "Override",
        "transaction",
        "ActivityThread",
        "scheduleTransaction",
        "transaction",
        "Override",
        "NonNull",
        "activityToken",
        "NonNull",
        "interactor",
        "cancellationCallback",
        "NonNull",
        "callback",
        "cancellationSignal",
        "cancellationCallback",
        "transport",
        "createSafeCancellationTransport",
        "cancellationSignal",
        "cancellationResult",
        "cancellationResult",
        "putBinder",
        "VoiceInteractor",
        "KEY_CANCELLATION_SIGNAL",
        "transport",
        "asBinder",
        "cancellationCallback",
        "sendResult",
        "cancellationResult",
        "mH",
        "sendMessage",
        "PooledLambda",
        "obtainMessage",
        "ActivityThread",
        "handleRequestDirectActions",
        "ActivityThread",
        "activityToken",
        "interactor",
        "cancellationSignal",
        "callback",
        "Override",
        "NonNull",
        "activityToken",
        "NonNull",
        "actionId",
        "arguments",
        "cancellationCallback",
        "NonNull",
        "resultCallback",
        "cancellationSignal",
        "cancellationCallback",
        "transport",
        "createSafeCancellationTransport",
        "cancellationSignal",
        "cancellationResult",
        "cancellationResult",
        "putBinder",
        "VoiceInteractor",
        "KEY_CANCELLATION_SIGNAL",
        "transport",
        "asBinder",
        "cancellationCallback",
        "sendResult",
        "cancellationResult",
        "mH",
        "sendMessage",
        "PooledLambda",
        "obtainMessage",
        "ActivityThread",
        "handlePerformDirectAction",
        "ActivityThread",
        "activityToken",
        "actionId",
        "arguments",
        "cancellationSignal",
        "resultCallback",
        "NonNull",
        "NonNull",
        "cancellationSignal",
        "ActivityThread",
        "mRemoteCancellations",
        "mRemoteCancellations",
        "transport",
        "cancellationSignal",
        "mRemoteCancellations",
        "put",
        "transport",
        "cancellationSignal",
        "transport",
        "NonNull",
        "NonNull",
        "transport",
        "ActivityThread",
        "cancellation",
        "mRemoteCancellations",
        "remove",
        "transport",
        "mRemoteCancellations",
        "isEmpty",
        "mRemoteCancellations",
        "cancellation",
        "NonNull",
        "mWeakActivityThread",
        "NonNull",
        "activityThread",
        "NonNull",
        "cancellation",
        "mWeakActivityThread",
        "activityThread",
        "Override",
        "activityThread",
        "mWeakActivityThread",
        "get",
        "activityThread",
        "cancellation",
        "activityThread",
        "removeSafeCancellationTransport",
        "cancellation",
        "cancellation",
        "cancel",
        "BIND_APPLICATION",
        "UnsupportedAppUsage",
        "EXIT_APPLICATION",
        "UnsupportedAppUsage",
        "RECEIVER",
        "UnsupportedAppUsage",
        "CREATE_SERVICE",
        "UnsupportedAppUsage",
        "SERVICE_ARGS",
        "UnsupportedAppUsage",
        "STOP_SERVICE",
        "CONFIGURATION_CHANGED",
        "CLEAN_UP_CONTEXT",
        "UnsupportedAppUsage",
        "GC_WHEN_IDLE",
        "UnsupportedAppUsage",
        "BIND_SERVICE",
        "UnsupportedAppUsage",
        "UNBIND_SERVICE",
        "DUMP_SERVICE",
        "LOW_MEMORY",
        "PROFILER_CONTROL",
        "CREATE_BACKUP_AGENT",
        "DESTROY_BACKUP_AGENT",
        "SUICIDE",
        "UnsupportedAppUsage",
        "REMOVE_PROVIDER",
        "DISPATCH_PACKAGE_BROADCAST",
        "UnsupportedAppUsage",
        "SCHEDULE_CRASH",
        "DUMP_HEAP",
        "DUMP_ACTIVITY",
        "SLEEPING",
        "SET_CORE_SETTINGS",
        "UPDATE_PACKAGE_COMPATIBILITY_INFO",
        "UnsupportedAppUsage",
        "DUMP_PROVIDER",
        "UNSTABLE_PROVIDER_DIED",
        "REQUEST_ASSIST_CONTEXT_EXTRAS",
        "TRANSLUCENT_CONVERSION_COMPLETE",
        "UnsupportedAppUsage",
        "INSTALL_PROVIDER",
        "ON_NEW_ACTIVITY_OPTIONS",
        "UnsupportedAppUsage",
        "ENTER_ANIMATION_COMPLETE",
        "START_BINDER_TRACKING",
        "STOP_BINDER_TRACKING_AND_DUMP",
        "LOCAL_VOICE_INTERACTION_STARTED",
        "ATTACH_AGENT",
        "APPLICATION_INFO_CHANGED",
        "RUN_ISOLATED_ENTRY_POINT",
        "EXECUTE_TRANSACTION",
        "RELAUNCH_ACTIVITY",
        "PURGE_RESOURCES",
        "code",
        "DEBUG_MESSAGES",
        "code",
        "BIND_APPLICATION",
        "EXIT_APPLICATION",
        "RECEIVER",
        "CREATE_SERVICE",
        "SERVICE_ARGS",
        "STOP_SERVICE",
        "CONFIGURATION_CHANGED",
        "CLEAN_UP_CONTEXT",
        "GC_WHEN_IDLE",
        "BIND_SERVICE",
        "UNBIND_SERVICE",
        "DUMP_SERVICE",
        "LOW_MEMORY",
        "PROFILER_CONTROL",
        "CREATE_BACKUP_AGENT",
        "DESTROY_BACKUP_AGENT",
        "SUICIDE",
        "REMOVE_PROVIDER",
        "DISPATCH_PACKAGE_BROADCAST",
        "SCHEDULE_CRASH",
        "DUMP_HEAP",
        "DUMP_ACTIVITY",
        "SLEEPING",
        "SET_CORE_SETTINGS",
        "UPDATE_PACKAGE_COMPATIBILITY_INFO",
        "DUMP_PROVIDER",
        "UNSTABLE_PROVIDER_DIED",
        "REQUEST_ASSIST_CONTEXT_EXTRAS",
        "TRANSLUCENT_CONVERSION_COMPLETE",
        "INSTALL_PROVIDER",
        "ON_NEW_ACTIVITY_OPTIONS",
        "ENTER_ANIMATION_COMPLETE",
        "LOCAL_VOICE_INTERACTION_STARTED",
        "ATTACH_AGENT",
        "APPLICATION_INFO_CHANGED",
        "RUN_ISOLATED_ENTRY_POINT",
        "EXECUTE_TRANSACTION",
        "RELAUNCH_ACTIVITY",
        "PURGE_RESOURCES",
        "toString",
        "code",
        "msg",
        "DEBUG_MESSAGES",
        "Slog",
        "v",
        "TAG",
        "codeToString",
        "msg",
        "what",
        "msg",
        "what",
        "BIND_APPLICATION",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "data",
        "msg",
        "obj",
        "handleBindApplication",
        "data",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "EXIT_APPLICATION",
        "mInitialApplication",
        "mInitialApplication",
        "onTerminate",
        "Looper",
        "myLooper",
        "quit",
        "RECEIVER",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleReceiver",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "CREATE_SERVICE",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "valueOf",
        "msg",
        "obj",
        "handleCreateService",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "BIND_SERVICE",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleBindService",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "UNBIND_SERVICE",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleUnbindService",
        "msg",
        "obj",
        "schedulePurgeIdler",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "SERVICE_ARGS",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "valueOf",
        "msg",
        "obj",
        "handleServiceArgs",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "STOP_SERVICE",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleStopService",
        "msg",
        "obj",
        "schedulePurgeIdler",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "CONFIGURATION_CHANGED",
        "handleConfigurationChanged",
        "msg",
        "obj",
        "CLEAN_UP_CONTEXT",
        "cci",
        "msg",
        "obj",
        "cci",
        "context",
        "performFinalCleanup",
        "cci",
        "who",
        "cci",
        "what",
        "GC_WHEN_IDLE",
        "scheduleGcIdler",
        "DUMP_SERVICE",
        "handleDumpService",
        "msg",
        "obj",
        "LOW_MEMORY",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleLowMemory",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "PROFILER_CONTROL",
        "handleProfilerControl",
        "msg",
        "arg1",
        "msg",
        "obj",
        "msg",
        "arg2",
        "CREATE_BACKUP_AGENT",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleCreateBackupAgent",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "DESTROY_BACKUP_AGENT",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleDestroyBackupAgent",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "SUICIDE",
        "Process",
        "killProcess",
        "Process",
        "myPid",
        "REMOVE_PROVIDER",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "completeRemoveProvider",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "DISPATCH_PACKAGE_BROADCAST",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleDispatchPackageBroadcast",
        "msg",
        "arg1",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "SCHEDULE_CRASH",
        "msg",
        "obj",
        "DUMP_HEAP",
        "handleDumpHeap",
        "msg",
        "obj",
        "DUMP_ACTIVITY",
        "handleDumpActivity",
        "msg",
        "obj",
        "DUMP_PROVIDER",
        "handleDumpProvider",
        "msg",
        "obj",
        "SLEEPING",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleSleeping",
        "msg",
        "obj",
        "msg",
        "arg1",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "SET_CORE_SETTINGS",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "handleSetCoreSettings",
        "msg",
        "obj",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "UPDATE_PACKAGE_COMPATIBILITY_INFO",
        "handleUpdatePackageCompatibilityInfo",
        "msg",
        "obj",
        "UNSTABLE_PROVIDER_DIED",
        "handleUnstableProviderDied",
        "msg",
        "obj",
        "REQUEST_ASSIST_CONTEXT_EXTRAS",
        "handleRequestAssistContextExtras",
        "msg",
        "obj",
        "TRANSLUCENT_CONVERSION_COMPLETE",
        "handleTranslucentConversionComplete",
        "msg",
        "obj",
        "msg",
        "arg1",
        "INSTALL_PROVIDER",
        "handleInstallProvider",
        "msg",
        "obj",
        "ON_NEW_ACTIVITY_OPTIONS",
        "pair",
        "msg",
        "obj",
        "onNewActivityOptions",
        "pair",
        "first",
        "pair",
        "second",
        "ENTER_ANIMATION_COMPLETE",
        "handleEnterAnimationComplete",
        "msg",
        "obj",
        "START_BINDER_TRACKING",
        "handleStartBinderTracking",
        "STOP_BINDER_TRACKING_AND_DUMP",
        "handleStopBinderTrackingAndDump",
        "msg",
        "obj",
        "LOCAL_VOICE_INTERACTION_STARTED",
        "handleLocalVoiceInteractionStarted",
        "msg",
        "obj",
        "arg1",
        "msg",
        "obj",
        "arg2",
        "ATTACH_AGENT",
        "app",
        "getApplication",
        "handleAttachAgent",
        "msg",
        "obj",
        "app",
        "app",
        "mLoadedApk",
        "APPLICATION_INFO_CHANGED",
        "mUpdatingSystemConfig",
        "handleApplicationInfoChanged",
        "msg",
        "obj",
        "mUpdatingSystemConfig",
        "RUN_ISOLATED_ENTRY_POINT",
        "handleRunIsolatedEntryPoint",
        "msg",
        "obj",
        "arg1",
        "msg",
        "obj",
        "arg2",
        "EXECUTE_TRANSACTION",
        "transaction",
        "msg",
        "obj",
        "mTransactionExecutor",
        "execute",
        "transaction",
        "isSystem",
        "transaction",
        "recycle",
        "RELAUNCH_ACTIVITY",
        "handleRelaunchActivityLocally",
        "msg",
        "obj",
        "PURGE_RESOURCES",
        "schedulePurgeIdler",
        "obj",
        "msg",
        "obj",
        "obj",
        "obj",
        "recycle",
        "DEBUG_MESSAGES",
        "Slog",
        "v",
        "TAG",
        "codeToString",
        "msg",
        "what",
        "Override",
        "a",
        "mNewActivities",
        "stopProfiling",
        "mBoundApplication",
        "mProfiler",
        "profileFd",
        "mProfiler",
        "autoStopProfiler",
        "stopProfiling",
        "a",
        "mNewActivities",
        "am",
        "ActivityTaskManager",
        "getService",
        "prev",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "a",
        "a",
        "activity",
        "a",
        "activity",
        "mFinished",
        "a",
        "activity",
        "a",
        "activity",
        "mFinished",
        "am",
        "activityIdle",
        "a",
        "token",
        "a",
        "createdConfig",
        "stopProfiling",
        "a",
        "createdConfig",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "prev",
        "a",
        "a",
        "a",
        "nextIdle",
        "prev",
        "nextIdle",
        "a",
        "stopProfiling",
        "mProfiler",
        "stopProfiling",
        "applyPendingProcessState",
        "Override",
        "doGcIfNeeded",
        "purgePendingResources",
        "Override",
        "purgePendingResources",
        "UnsupportedAppUsage",
        "sCurrentActivityThread",
        "sCurrentActivityThread",
        "sCurrentActivityThread",
        "mSystemThread",
        "am",
        "currentActivityThread",
        "am",
        "am",
        "getApplication",
        "am",
        "getApplication",
        "getOpPackageName",
        "UnsupportedAppUsage",
        "am",
        "currentActivityThread",
        "am",
        "am",
        "mBoundApplication",
        "am",
        "mBoundApplication",
        "appInfo",
        "packageName",
        "UnsupportedAppUsage",
        "am",
        "currentActivityThread",
        "am",
        "am",
        "mBoundApplication",
        "am",
        "mBoundApplication",
        "processName",
        "UnsupportedAppUsage",
        "am",
        "currentActivityThread",
        "am",
        "am",
        "mInitialApplication",
        "UnsupportedAppUsage",
        "sPackageManager",
        "sPackageManager",
        "b",
        "ServiceManager",
        "getService",
        "sPackageManager",
        "IPackageManager",
        "Stub",
        "asInterface",
        "b",
        "sPackageManager",
        "mMainThreadConfig",
        "displayDensity",
        "config",
        "compat",
        "config",
        "compat",
        "supportsScreen",
        "mMainThreadConfig",
        "setTo",
        "config",
        "config",
        "mMainThreadConfig",
        "compat",
        "applyToConfiguration",
        "displayDensity",
        "config",
        "config",
        "resDir",
        "splitResDirs",
        "overlayDirs",
        "libDirs",
        "displayId",
        "pkgInfo",
        "mResourcesManager",
        "getResources",
        "resDir",
        "splitResDirs",
        "overlayDirs",
        "libDirs",
        "displayId",
        "pkgInfo",
        "getCompatibilityInfo",
        "pkgInfo",
        "getClassLoader",
        "UnsupportedAppUsage",
        "mH",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "packageName",
        "compatInfo",
        "flags",
        "getPackageInfo",
        "packageName",
        "compatInfo",
        "flags",
        "UserHandle",
        "myUserId",
        "packageName",
        "compatInfo",
        "flags",
        "userId",
        "differentUser",
        "UserHandle",
        "myUserId",
        "userId",
        "ai",
        "ai",
        "getPackageManager",
        "getApplicationInfo",
        "packageName",
        "PackageManager",
        "GET_SHARED_LIBRARY_FILES",
        "PackageManager",
        "MATCH_DEBUG_TRIAGED_MISSING",
        "userId",
        "UserHandle",
        "myUserId",
        "userId",
        "e",
        "e",
        "rethrowFromSystemServer",
        "mResourcesManager",
        "differentUser",
        "flags",
        "Context",
        "CONTEXT_INCLUDE_CODE",
        "mPackages",
        "get",
        "packageName",
        "mResourcePackages",
        "get",
        "packageName",
        "packageInfo",
        "get",
        "ai",
        "packageInfo",
        "isLoadedApkResourceDirsUpToDate",
        "packageInfo",
        "ai",
        "packageInfo",
        "updateApplicationInfo",
        "ai",
        "packageInfo",
        "isSecurityViolation",
        "flags",
        "Context",
        "CONTEXT_IGNORE_SECURITY",
        "packageName",
        "mBoundApplication",
        "processName",
        "mBoundApplication",
        "appInfo",
        "uid",
        "packageInfo",
        "ai",
        "getPackageInfo",
        "ai",
        "compatInfo",
        "flags",
        "UnsupportedAppUsage",
        "ai",
        "compatInfo",
        "flags",
        "includeCode",
        "flags",
        "Context",
        "CONTEXT_INCLUDE_CODE",
        "securityViolation",
        "includeCode",
        "ai",
        "uid",
        "ai",
        "uid",
        "Process",
        "SYSTEM_UID",
        "mBoundApplication",
        "UserHandle",
        "isSameApp",
        "ai",
        "uid",
        "mBoundApplication",
        "appInfo",
        "uid",
        "registerPackage",
        "includeCode",
        "flags",
        "Context",
        "CONTEXT_REGISTER_PACKAGE",
        "flags",
        "Context",
        "CONTEXT_INCLUDE_CODE",
        "Context",
        "CONTEXT_IGNORE_SECURITY",
        "Context",
        "CONTEXT_INCLUDE_CODE",
        "securityViolation",
        "msg",
        "ai",
        "packageName",
        "ai",
        "uid",
        "mBoundApplication",
        "msg",
        "msg",
        "mBoundApplication",
        "processName",
        "mBoundApplication",
        "appInfo",
        "uid",
        "msg",
        "getPackageInfo",
        "ai",
        "compatInfo",
        "securityViolation",
        "includeCode",
        "registerPackage",
        "Override",
        "UnsupportedAppUsage",
        "ai",
        "compatInfo",
        "getPackageInfo",
        "ai",
        "compatInfo",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "packageName",
        "includeCode",
        "mResourcesManager",
        "includeCode",
        "mPackages",
        "get",
        "packageName",
        "mResourcePackages",
        "get",
        "packageName",
        "get",
        "aInfo",
        "compatInfo",
        "baseLoader",
        "securityViolation",
        "includeCode",
        "registerPackage",
        "differentUser",
        "UserHandle",
        "myUserId",
        "UserHandle",
        "getUserId",
        "aInfo",
        "uid",
        "mResourcesManager",
        "differentUser",
        "includeCode",
        "mPackages",
        "get",
        "aInfo",
        "packageName",
        "mResourcePackages",
        "get",
        "aInfo",
        "packageName",
        "packageInfo",
        "get",
        "packageInfo",
        "isLoadedApkResourceDirsUpToDate",
        "packageInfo",
        "aInfo",
        "packageInfo",
        "updateApplicationInfo",
        "aInfo",
        "packageInfo",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "includeCode",
        "aInfo",
        "packageName",
        "mBoundApplication",
        "mBoundApplication",
        "processName",
        "packageInfo",
        "aInfo",
        "compatInfo",
        "baseLoader",
        "securityViolation",
        "includeCode",
        "aInfo",
        "flags",
        "ApplicationInfo",
        "FLAG_HAS_CODE",
        "registerPackage",
        "mSystemThread",
        "equals",
        "aInfo",
        "packageName",
        "packageInfo",
        "installSystemApplicationInfo",
        "aInfo",
        "getSystemContext",
        "mPackageInfo",
        "getClassLoader",
        "differentUser",
        "includeCode",
        "mPackages",
        "put",
        "aInfo",
        "packageName",
        "packageInfo",
        "mResourcePackages",
        "put",
        "aInfo",
        "packageName",
        "packageInfo",
        "packageInfo",
        "loadedApk",
        "appInfo",
        "packageResources",
        "loadedApk",
        "mResources",
        "overlayDirs",
        "ArrayUtils",
        "defeatNullable",
        "loadedApk",
        "getOverlayDirs",
        "resourceDirs",
        "ArrayUtils",
        "defeatNullable",
        "appInfo",
        "resourceDirs",
        "packageResources",
        "packageResources",
        "getAssets",
        "isUpToDate",
        "overlayDirs",
        "length",
        "resourceDirs",
        "length",
        "ArrayUtils",
        "containsAll",
        "overlayDirs",
        "resourceDirs",
        "UnsupportedAppUsage",
        "mResourcesManager",
        "ResourcesManager",
        "getInstance",
        "UnsupportedAppUsage",
        "mAppThread",
        "UnsupportedAppUsage",
        "mInstrumentation",
        "mProfiler",
        "mProfiler",
        "profileFile",
        "mProfiler",
        "profileFd",
        "mProfiler",
        "profileFile",
        "UnsupportedAppUsage",
        "mLooper",
        "mExecutor",
        "UnsupportedAppUsage",
        "mInitialApplication",
        "UnsupportedAppUsage",
        "mBoundApplication",
        "processName",
        "UnsupportedAppUsage",
        "mSystemContext",
        "mSystemContext",
        "ContextImpl",
        "createSystemContext",
        "mSystemContext",
        "mSystemUiContext",
        "mSystemUiContext",
        "ContextImpl",
        "createSystemUiContext",
        "getSystemContext",
        "mSystemUiContext",
        "displayId",
        "ContextImpl",
        "createSystemUiContext",
        "getSystemUiContext",
        "displayId",
        "info",
        "classLoader",
        "getSystemContext",
        "installSystemApplicationInfo",
        "info",
        "classLoader",
        "getSystemUiContext",
        "installSystemApplicationInfo",
        "info",
        "classLoader",
        "mProfiler",
        "UnsupportedAppUsage",
        "mGcIdlerScheduled",
        "mGcIdlerScheduled",
        "Looper",
        "myQueue",
        "addIdleHandler",
        "mGcIdler",
        "mH",
        "removeMessages",
        "H",
        "GC_WHEN_IDLE",
        "mGcIdlerScheduled",
        "mGcIdlerScheduled",
        "Looper",
        "myQueue",
        "removeIdleHandler",
        "mGcIdler",
        "mH",
        "removeMessages",
        "H",
        "GC_WHEN_IDLE",
        "mPurgeIdlerScheduled",
        "mPurgeIdlerScheduled",
        "Looper",
        "myQueue",
        "addIdleHandler",
        "mPurgeIdler",
        "mH",
        "removeMessages",
        "H",
        "PURGE_RESOURCES",
        "mPurgeIdlerScheduled",
        "mPurgeIdlerScheduled",
        "Looper",
        "myQueue",
        "removeIdleHandler",
        "mPurgeIdler",
        "mH",
        "removeMessages",
        "H",
        "PURGE_RESOURCES",
        "doGcIfNeeded",
        "reason",
        "mGcIdlerScheduled",
        "now",
        "SystemClock",
        "uptimeMillis",
        "BinderInternal",
        "getLastGcTime",
        "MIN_TIME_BETWEEN_GCS",
        "now",
        "BinderInternal",
        "forceGc",
        "reason",
        "HEAP_FULL_COLUMN",
        "HEAP_COLUMN",
        "ONE_COUNT_COLUMN",
        "TWO_COUNT_COLUMNS",
        "ONE_COUNT_COLUMN_HEADER",
        "ACTIVITY_THREAD_CHECKIN_VERSION",
        "pw",
        "format",
        "objs",
        "pw",
        "format",
        "format",
        "objs",
        "pw",
        "memInfo",
        "checkin",
        "dumpFullInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "pid",
        "processName",
        "nativeMax",
        "nativeAllocated",
        "nativeFree",
        "dalvikMax",
        "dalvikAllocated",
        "dalvikFree",
        "checkin",
        "pw",
        "ACTIVITY_THREAD_CHECKIN_VERSION",
        "pw",
        "pw",
        "pid",
        "pw",
        "pw",
        "processName",
        "pw",
        "pw",
        "nativeMax",
        "pw",
        "pw",
        "dalvikMax",
        "pw",
        "pw",
        "pw",
        "nativeMax",
        "dalvikMax",
        "pw",
        "pw",
        "nativeAllocated",
        "pw",
        "pw",
        "dalvikAllocated",
        "pw",
        "pw",
        "pw",
        "nativeAllocated",
        "dalvikAllocated",
        "pw",
        "pw",
        "nativeFree",
        "pw",
        "pw",
        "dalvikFree",
        "pw",
        "pw",
        "pw",
        "nativeFree",
        "dalvikFree",
        "pw",
        "pw",
        "memInfo",
        "nativePss",
        "pw",
        "pw",
        "memInfo",
        "dalvikPss",
        "pw",
        "pw",
        "memInfo",
        "otherPss",
        "pw",
        "pw",
        "memInfo",
        "getTotalPss",
        "pw",
        "pw",
        "memInfo",
        "nativeSwappablePss",
        "pw",
        "pw",
        "memInfo",
        "dalvikSwappablePss",
        "pw",
        "pw",
        "memInfo",
        "otherSwappablePss",
        "pw",
        "pw",
        "memInfo",
        "getTotalSwappablePss",
        "pw",
        "pw",
        "memInfo",
        "nativeSharedDirty",
        "pw",
        "pw",
        "memInfo",
        "dalvikSharedDirty",
        "pw",
        "pw",
        "memInfo",
        "otherSharedDirty",
        "pw",
        "pw",
        "memInfo",
        "getTotalSharedDirty",
        "pw",
        "pw",
        "memInfo",
        "nativeSharedClean",
        "pw",
        "pw",
        "memInfo",
        "dalvikSharedClean",
        "pw",
        "pw",
        "memInfo",
        "otherSharedClean",
        "pw",
        "pw",
        "memInfo",
        "getTotalSharedClean",
        "pw",
        "pw",
        "memInfo",
        "nativePrivateDirty",
        "pw",
        "pw",
        "memInfo",
        "dalvikPrivateDirty",
        "pw",
        "pw",
        "memInfo",
        "otherPrivateDirty",
        "pw",
        "pw",
        "memInfo",
        "getTotalPrivateDirty",
        "pw",
        "pw",
        "memInfo",
        "nativePrivateClean",
        "pw",
        "pw",
        "memInfo",
        "dalvikPrivateClean",
        "pw",
        "pw",
        "memInfo",
        "otherPrivateClean",
        "pw",
        "pw",
        "memInfo",
        "getTotalPrivateClean",
        "pw",
        "pw",
        "memInfo",
        "nativeSwappedOut",
        "pw",
        "pw",
        "memInfo",
        "dalvikSwappedOut",
        "pw",
        "pw",
        "memInfo",
        "otherSwappedOut",
        "pw",
        "pw",
        "memInfo",
        "getTotalSwappedOut",
        "pw",
        "memInfo",
        "hasSwappedOutPss",
        "pw",
        "memInfo",
        "nativeSwappedOutPss",
        "pw",
        "pw",
        "memInfo",
        "dalvikSwappedOutPss",
        "pw",
        "pw",
        "memInfo",
        "otherSwappedOutPss",
        "pw",
        "pw",
        "memInfo",
        "getTotalSwappedOutPss",
        "pw",
        "pw",
        "pw",
        "pw",
        "pw",
        "i",
        "i",
        "Debug",
        "MemoryInfo",
        "NUM_OTHER_STATS",
        "i",
        "pw",
        "Debug",
        "MemoryInfo",
        "getOtherLabel",
        "i",
        "pw",
        "pw",
        "memInfo",
        "getOtherPss",
        "i",
        "pw",
        "pw",
        "memInfo",
        "getOtherSwappablePss",
        "i",
        "pw",
        "pw",
        "memInfo",
        "getOtherSharedDirty",
        "i",
        "pw",
        "pw",
        "memInfo",
        "getOtherSharedClean",
        "i",
        "pw",
        "pw",
        "memInfo",
        "getOtherPrivateDirty",
        "i",
        "pw",
        "pw",
        "memInfo",
        "getOtherPrivateClean",
        "i",
        "pw",
        "pw",
        "memInfo",
        "getOtherSwappedOut",
        "i",
        "pw",
        "memInfo",
        "hasSwappedOutPss",
        "pw",
        "memInfo",
        "getOtherSwappedOutPss",
        "i",
        "pw",
        "pw",
        "dumpSummaryOnly",
        "dumpFullInfo",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "memInfo",
        "hasSwappedOutPss",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "memInfo",
        "nativePss",
        "memInfo",
        "nativeSwappablePss",
        "memInfo",
        "nativeSharedDirty",
        "memInfo",
        "nativePrivateDirty",
        "memInfo",
        "nativeSharedClean",
        "memInfo",
        "nativePrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "nativeSwappedOutPss",
        "memInfo",
        "nativeSwappedOut",
        "nativeMax",
        "nativeAllocated",
        "nativeFree",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "memInfo",
        "dalvikPss",
        "memInfo",
        "dalvikSwappablePss",
        "memInfo",
        "dalvikSharedDirty",
        "memInfo",
        "dalvikPrivateDirty",
        "memInfo",
        "dalvikSharedClean",
        "memInfo",
        "dalvikPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "dalvikSwappedOutPss",
        "memInfo",
        "dalvikSwappedOut",
        "dalvikMax",
        "dalvikAllocated",
        "dalvikFree",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "memInfo",
        "hasSwappedOutPss",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "memInfo",
        "nativePss",
        "memInfo",
        "nativePrivateDirty",
        "memInfo",
        "nativePrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "nativeSwappedOutPss",
        "memInfo",
        "nativeSwappedOut",
        "nativeMax",
        "nativeAllocated",
        "nativeFree",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "memInfo",
        "dalvikPss",
        "memInfo",
        "dalvikPrivateDirty",
        "memInfo",
        "dalvikPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "dalvikSwappedOutPss",
        "memInfo",
        "dalvikSwappedOut",
        "dalvikMax",
        "dalvikAllocated",
        "dalvikFree",
        "otherPss",
        "memInfo",
        "otherPss",
        "otherSwappablePss",
        "memInfo",
        "otherSwappablePss",
        "otherSharedDirty",
        "memInfo",
        "otherSharedDirty",
        "otherPrivateDirty",
        "memInfo",
        "otherPrivateDirty",
        "otherSharedClean",
        "memInfo",
        "otherSharedClean",
        "otherPrivateClean",
        "memInfo",
        "otherPrivateClean",
        "otherSwappedOut",
        "memInfo",
        "otherSwappedOut",
        "otherSwappedOutPss",
        "memInfo",
        "otherSwappedOutPss",
        "i",
        "i",
        "Debug",
        "MemoryInfo",
        "NUM_OTHER_STATS",
        "i",
        "myPss",
        "memInfo",
        "getOtherPss",
        "i",
        "mySwappablePss",
        "memInfo",
        "getOtherSwappablePss",
        "i",
        "mySharedDirty",
        "memInfo",
        "getOtherSharedDirty",
        "i",
        "myPrivateDirty",
        "memInfo",
        "getOtherPrivateDirty",
        "i",
        "mySharedClean",
        "memInfo",
        "getOtherSharedClean",
        "i",
        "myPrivateClean",
        "memInfo",
        "getOtherPrivateClean",
        "i",
        "mySwappedOut",
        "memInfo",
        "getOtherSwappedOut",
        "i",
        "mySwappedOutPss",
        "memInfo",
        "getOtherSwappedOutPss",
        "i",
        "myPss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "dumpFullInfo",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "Debug",
        "MemoryInfo",
        "getOtherLabel",
        "i",
        "myPss",
        "mySwappablePss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "Debug",
        "MemoryInfo",
        "getOtherLabel",
        "i",
        "myPss",
        "myPrivateDirty",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "otherPss",
        "myPss",
        "otherSwappablePss",
        "mySwappablePss",
        "otherSharedDirty",
        "mySharedDirty",
        "otherPrivateDirty",
        "myPrivateDirty",
        "otherSharedClean",
        "mySharedClean",
        "otherPrivateClean",
        "myPrivateClean",
        "otherSwappedOut",
        "mySwappedOut",
        "otherSwappedOutPss",
        "mySwappedOutPss",
        "dumpFullInfo",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "otherPss",
        "otherSwappablePss",
        "otherSharedDirty",
        "otherPrivateDirty",
        "otherSharedClean",
        "otherPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "otherSwappedOutPss",
        "otherSwappedOut",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "memInfo",
        "getTotalPss",
        "memInfo",
        "getTotalSwappablePss",
        "memInfo",
        "getTotalSharedDirty",
        "memInfo",
        "getTotalPrivateDirty",
        "memInfo",
        "getTotalSharedClean",
        "memInfo",
        "getTotalPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "getTotalSwappedOutPss",
        "memInfo",
        "getTotalSwappedOut",
        "nativeMax",
        "dalvikMax",
        "nativeAllocated",
        "dalvikAllocated",
        "nativeFree",
        "dalvikFree",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "otherPss",
        "otherPrivateDirty",
        "otherPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "otherSwappedOutPss",
        "otherSwappedOut",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "memInfo",
        "getTotalPss",
        "memInfo",
        "getTotalPrivateDirty",
        "memInfo",
        "getTotalPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "getTotalSwappedOutPss",
        "memInfo",
        "getTotalSwappedOut",
        "nativeMax",
        "dalvikMax",
        "nativeAllocated",
        "dalvikAllocated",
        "nativeFree",
        "dalvikFree",
        "dumpDalvik",
        "pw",
        "pw",
        "i",
        "Debug",
        "MemoryInfo",
        "NUM_OTHER_STATS",
        "i",
        "Debug",
        "MemoryInfo",
        "NUM_OTHER_STATS",
        "Debug",
        "MemoryInfo",
        "NUM_DVK_STATS",
        "i",
        "myPss",
        "memInfo",
        "getOtherPss",
        "i",
        "mySwappablePss",
        "memInfo",
        "getOtherSwappablePss",
        "i",
        "mySharedDirty",
        "memInfo",
        "getOtherSharedDirty",
        "i",
        "myPrivateDirty",
        "memInfo",
        "getOtherPrivateDirty",
        "i",
        "mySharedClean",
        "memInfo",
        "getOtherSharedClean",
        "i",
        "myPrivateClean",
        "memInfo",
        "getOtherPrivateClean",
        "i",
        "mySwappedOut",
        "memInfo",
        "getOtherSwappedOut",
        "i",
        "mySwappedOutPss",
        "memInfo",
        "getOtherSwappedOutPss",
        "i",
        "myPss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "dumpFullInfo",
        "printRow",
        "pw",
        "HEAP_FULL_COLUMN",
        "Debug",
        "MemoryInfo",
        "getOtherLabel",
        "i",
        "myPss",
        "mySwappablePss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "printRow",
        "pw",
        "HEAP_COLUMN",
        "Debug",
        "MemoryInfo",
        "getOtherLabel",
        "i",
        "myPss",
        "myPrivateDirty",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "pw",
        "pw",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN_HEADER",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN_HEADER",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "memInfo",
        "getSummaryJavaHeap",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "memInfo",
        "getSummaryNativeHeap",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "memInfo",
        "getSummaryCode",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "memInfo",
        "getSummaryStack",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "memInfo",
        "getSummaryGraphics",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "memInfo",
        "getSummaryPrivateOther",
        "printRow",
        "pw",
        "ONE_COUNT_COLUMN",
        "memInfo",
        "getSummarySystem",
        "pw",
        "memInfo",
        "hasSwappedOutPss",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "memInfo",
        "getSummaryTotalPss",
        "memInfo",
        "getSummaryTotalSwapPss",
        "printRow",
        "pw",
        "TWO_COUNT_COLUMNS",
        "memInfo",
        "getSummaryTotalPss",
        "memInfo",
        "getSummaryTotalSwap",
        "proto",
        "fieldId",
        "name",
        "pss",
        "cleanPss",
        "sharedDirty",
        "privateDirty",
        "sharedClean",
        "privateClean",
        "hasSwappedOutPss",
        "dirtySwap",
        "dirtySwapPss",
        "token",
        "proto",
        "start",
        "fieldId",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "NAME",
        "name",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "TOTAL_PSS_KB",
        "pss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "CLEAN_PSS_KB",
        "cleanPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "SHARED_DIRTY_KB",
        "sharedDirty",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "PRIVATE_DIRTY_KB",
        "privateDirty",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "SHARED_CLEAN_KB",
        "sharedClean",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "PRIVATE_CLEAN_KB",
        "privateClean",
        "hasSwappedOutPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "DIRTY_SWAP_PSS_KB",
        "dirtySwapPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "MemoryInfo",
        "DIRTY_SWAP_KB",
        "dirtySwap",
        "proto",
        "end",
        "token",
        "proto",
        "memInfo",
        "dumpDalvik",
        "dumpSummaryOnly",
        "nativeMax",
        "nativeAllocated",
        "nativeFree",
        "dalvikMax",
        "dalvikAllocated",
        "dalvikFree",
        "dumpSummaryOnly",
        "nhToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "ProcessMemory",
        "NATIVE_HEAP",
        "dumpMemoryInfo",
        "proto",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "MEM_INFO",
        "memInfo",
        "nativePss",
        "memInfo",
        "nativeSwappablePss",
        "memInfo",
        "nativeSharedDirty",
        "memInfo",
        "nativePrivateDirty",
        "memInfo",
        "nativeSharedClean",
        "memInfo",
        "nativePrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "nativeSwappedOut",
        "memInfo",
        "nativeSwappedOutPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_SIZE_KB",
        "nativeMax",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_ALLOC_KB",
        "nativeAllocated",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_FREE_KB",
        "nativeFree",
        "proto",
        "end",
        "nhToken",
        "dvToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "ProcessMemory",
        "DALVIK_HEAP",
        "dumpMemoryInfo",
        "proto",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "MEM_INFO",
        "memInfo",
        "dalvikPss",
        "memInfo",
        "dalvikSwappablePss",
        "memInfo",
        "dalvikSharedDirty",
        "memInfo",
        "dalvikPrivateDirty",
        "memInfo",
        "dalvikSharedClean",
        "memInfo",
        "dalvikPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "dalvikSwappedOut",
        "memInfo",
        "dalvikSwappedOutPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_SIZE_KB",
        "dalvikMax",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_ALLOC_KB",
        "dalvikAllocated",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_FREE_KB",
        "dalvikFree",
        "proto",
        "end",
        "dvToken",
        "otherPss",
        "memInfo",
        "otherPss",
        "otherSwappablePss",
        "memInfo",
        "otherSwappablePss",
        "otherSharedDirty",
        "memInfo",
        "otherSharedDirty",
        "otherPrivateDirty",
        "memInfo",
        "otherPrivateDirty",
        "otherSharedClean",
        "memInfo",
        "otherSharedClean",
        "otherPrivateClean",
        "memInfo",
        "otherPrivateClean",
        "otherSwappedOut",
        "memInfo",
        "otherSwappedOut",
        "otherSwappedOutPss",
        "memInfo",
        "otherSwappedOutPss",
        "i",
        "i",
        "Debug",
        "MemoryInfo",
        "NUM_OTHER_STATS",
        "i",
        "myPss",
        "memInfo",
        "getOtherPss",
        "i",
        "mySwappablePss",
        "memInfo",
        "getOtherSwappablePss",
        "i",
        "mySharedDirty",
        "memInfo",
        "getOtherSharedDirty",
        "i",
        "myPrivateDirty",
        "memInfo",
        "getOtherPrivateDirty",
        "i",
        "mySharedClean",
        "memInfo",
        "getOtherSharedClean",
        "i",
        "myPrivateClean",
        "memInfo",
        "getOtherPrivateClean",
        "i",
        "mySwappedOut",
        "memInfo",
        "getOtherSwappedOut",
        "i",
        "mySwappedOutPss",
        "memInfo",
        "getOtherSwappedOutPss",
        "i",
        "myPss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "dumpMemoryInfo",
        "proto",
        "MemInfoDumpProto",
        "ProcessMemory",
        "OTHER_HEAPS",
        "Debug",
        "MemoryInfo",
        "getOtherLabel",
        "i",
        "myPss",
        "mySwappablePss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOut",
        "mySwappedOutPss",
        "otherPss",
        "myPss",
        "otherSwappablePss",
        "mySwappablePss",
        "otherSharedDirty",
        "mySharedDirty",
        "otherPrivateDirty",
        "myPrivateDirty",
        "otherSharedClean",
        "mySharedClean",
        "otherPrivateClean",
        "myPrivateClean",
        "otherSwappedOut",
        "mySwappedOut",
        "otherSwappedOutPss",
        "mySwappedOutPss",
        "dumpMemoryInfo",
        "proto",
        "MemInfoDumpProto",
        "ProcessMemory",
        "UNKNOWN_HEAP",
        "otherPss",
        "otherSwappablePss",
        "otherSharedDirty",
        "otherPrivateDirty",
        "otherSharedClean",
        "otherPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "otherSwappedOut",
        "otherSwappedOutPss",
        "tToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "ProcessMemory",
        "TOTAL_HEAP",
        "dumpMemoryInfo",
        "proto",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "MEM_INFO",
        "memInfo",
        "getTotalPss",
        "memInfo",
        "getTotalSwappablePss",
        "memInfo",
        "getTotalSharedDirty",
        "memInfo",
        "getTotalPrivateDirty",
        "memInfo",
        "getTotalSharedClean",
        "memInfo",
        "getTotalPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "memInfo",
        "getTotalSwappedOut",
        "memInfo",
        "getTotalSwappedOutPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_SIZE_KB",
        "nativeMax",
        "dalvikMax",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_ALLOC_KB",
        "nativeAllocated",
        "dalvikAllocated",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "HeapInfo",
        "HEAP_FREE_KB",
        "nativeFree",
        "dalvikFree",
        "proto",
        "end",
        "tToken",
        "dumpDalvik",
        "i",
        "Debug",
        "MemoryInfo",
        "NUM_OTHER_STATS",
        "i",
        "Debug",
        "MemoryInfo",
        "NUM_OTHER_STATS",
        "Debug",
        "MemoryInfo",
        "NUM_DVK_STATS",
        "i",
        "myPss",
        "memInfo",
        "getOtherPss",
        "i",
        "mySwappablePss",
        "memInfo",
        "getOtherSwappablePss",
        "i",
        "mySharedDirty",
        "memInfo",
        "getOtherSharedDirty",
        "i",
        "myPrivateDirty",
        "memInfo",
        "getOtherPrivateDirty",
        "i",
        "mySharedClean",
        "memInfo",
        "getOtherSharedClean",
        "i",
        "myPrivateClean",
        "memInfo",
        "getOtherPrivateClean",
        "i",
        "mySwappedOut",
        "memInfo",
        "getOtherSwappedOut",
        "i",
        "mySwappedOutPss",
        "memInfo",
        "getOtherSwappedOutPss",
        "i",
        "myPss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOutPss",
        "mySwappedOut",
        "dumpMemoryInfo",
        "proto",
        "MemInfoDumpProto",
        "ProcessMemory",
        "DALVIK_DETAILS",
        "Debug",
        "MemoryInfo",
        "getOtherLabel",
        "i",
        "myPss",
        "mySwappablePss",
        "mySharedDirty",
        "myPrivateDirty",
        "mySharedClean",
        "myPrivateClean",
        "memInfo",
        "hasSwappedOutPss",
        "mySwappedOut",
        "mySwappedOutPss",
        "asToken",
        "proto",
        "start",
        "MemInfoDumpProto",
        "ProcessMemory",
        "APP_SUMMARY",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "JAVA_HEAP_PSS_KB",
        "memInfo",
        "getSummaryJavaHeap",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "NATIVE_HEAP_PSS_KB",
        "memInfo",
        "getSummaryNativeHeap",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "CODE_PSS_KB",
        "memInfo",
        "getSummaryCode",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "STACK_PSS_KB",
        "memInfo",
        "getSummaryStack",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "GRAPHICS_PSS_KB",
        "memInfo",
        "getSummaryGraphics",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "PRIVATE_OTHER_PSS_KB",
        "memInfo",
        "getSummaryPrivateOther",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "SYSTEM_PSS_KB",
        "memInfo",
        "getSummarySystem",
        "memInfo",
        "hasSwappedOutPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "TOTAL_SWAP_PSS",
        "memInfo",
        "getSummaryTotalSwapPss",
        "proto",
        "write",
        "MemInfoDumpProto",
        "ProcessMemory",
        "AppSummary",
        "TOTAL_SWAP_PSS",
        "memInfo",
        "getSummaryTotalSwap",
        "proto",
        "end",
        "asToken",
        "UnsupportedAppUsage",
        "activity",
        "listener",
        "mOnPauseListeners",
        "mOnPauseListeners",
        "get",
        "activity",
        "mOnPauseListeners",
        "put",
        "activity",
        "add",
        "listener",
        "UnsupportedAppUsage",
        "activity",
        "listener",
        "mOnPauseListeners",
        "mOnPauseListeners",
        "get",
        "activity",
        "remove",
        "listener",
        "intent",
        "aInfo",
        "intent",
        "resolveActivityInfo",
        "mInitialApplication",
        "getPackageManager",
        "PackageManager",
        "GET_SHARED_LIBRARY_FILES",
        "aInfo",
        "Instrumentation",
        "checkStartActivityResult",
        "ActivityManager",
        "START_CLASS_NOT_FOUND",
        "intent",
        "aInfo",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "parent",
        "id",
        "intent",
        "activityInfo",
        "token",
        "state",
        "lastNonConfigurationInstances",
        "assistToken",
        "r",
        "r",
        "token",
        "token",
        "r",
        "assistToken",
        "assistToken",
        "r",
        "ident",
        "r",
        "intent",
        "intent",
        "r",
        "state",
        "state",
        "r",
        "parent",
        "parent",
        "r",
        "embeddedID",
        "id",
        "r",
        "activityInfo",
        "activityInfo",
        "r",
        "lastNonConfigurationInstances",
        "lastNonConfigurationInstances",
        "localLOGV",
        "compname",
        "intent",
        "getComponent",
        "name",
        "compname",
        "name",
        "compname",
        "toShortString",
        "name",
        "intent",
        "Slog",
        "v",
        "TAG",
        "intent",
        "getAction",
        "name",
        "token",
        "performLaunchActivity",
        "r",
        "UnsupportedAppUsage",
        "token",
        "activityRecord",
        "mActivities",
        "get",
        "token",
        "activityRecord",
        "activityRecord",
        "activity",
        "Override",
        "token",
        "mActivities",
        "get",
        "token",
        "Override",
        "config",
        "mResourcesManager",
        "mPendingConfiguration",
        "mPendingConfiguration",
        "isOtherSeqNewer",
        "config",
        "mPendingConfiguration",
        "config",
        "Override",
        "processState",
        "fromIpc",
        "mAppThread",
        "mLastProcessState",
        "processState",
        "mLastProcessState",
        "processState",
        "processState",
        "ActivityManager",
        "PROCESS_STATE_TOP",
        "mNumLaunchingActivities",
        "get",
        "mPendingProcessState",
        "processState",
        "mH",
        "postDelayed",
        "applyPendingProcessState",
        "PENDING_TOP_PROCESS_STATE_TIMEOUT",
        "mPendingProcessState",
        "PROCESS_STATE_UNKNOWN",
        "updateVmProcessState",
        "processState",
        "localLOGV",
        "Slog",
        "i",
        "TAG",
        "processState",
        "fromIpc",
        "processState",
        "state",
        "processState",
        "ActivityManager",
        "PROCESS_STATE_IMPORTANT_FOREGROUND",
        "VM_PROCESS_STATE_JANK_PERCEPTIBLE",
        "VM_PROCESS_STATE_JANK_IMPERCEPTIBLE",
        "VMRuntime",
        "getRuntime",
        "updateProcessState",
        "state",
        "mAppThread",
        "mPendingProcessState",
        "PROCESS_STATE_UNKNOWN",
        "pendingState",
        "mPendingProcessState",
        "mPendingProcessState",
        "PROCESS_STATE_UNKNOWN",
        "pendingState",
        "mLastProcessState",
        "updateVmProcessState",
        "pendingState",
        "Override",
        "num",
        "mNumLaunchingActivities",
        "getAndAdd",
        "num",
        "UnsupportedAppUsage",
        "token",
        "id",
        "requestCode",
        "resultCode",
        "data",
        "DEBUG_RESULTS",
        "Slog",
        "v",
        "TAG",
        "id",
        "requestCode",
        "resultCode",
        "data",
        "add",
        "id",
        "requestCode",
        "resultCode",
        "data",
        "clientTransaction",
        "ClientTransaction",
        "obtain",
        "mAppThread",
        "token",
        "clientTransaction",
        "addCallback",
        "ActivityResultItem",
        "obtain",
        "mAppThread",
        "scheduleTransaction",
        "clientTransaction",
        "e",
        "Override",
        "mTransactionExecutor",
        "what",
        "obj",
        "sendMessage",
        "what",
        "obj",
        "what",
        "obj",
        "arg1",
        "sendMessage",
        "what",
        "obj",
        "arg1",
        "what",
        "obj",
        "arg1",
        "arg2",
        "sendMessage",
        "what",
        "obj",
        "arg1",
        "arg2",
        "what",
        "obj",
        "arg1",
        "arg2",
        "async",
        "DEBUG_MESSAGES",
        "Slog",
        "v",
        "TAG",
        "what",
        "mH",
        "codeToString",
        "what",
        "arg1",
        "obj",
        "msg",
        "Message",
        "obtain",
        "msg",
        "what",
        "what",
        "msg",
        "obj",
        "obj",
        "msg",
        "arg1",
        "arg1",
        "msg",
        "arg2",
        "arg2",
        "async",
        "msg",
        "setAsynchronous",
        "mH",
        "sendMessage",
        "msg",
        "what",
        "obj",
        "arg1",
        "arg2",
        "seq",
        "DEBUG_MESSAGES",
        "Slog",
        "v",
        "TAG",
        "mH",
        "codeToString",
        "what",
        "arg1",
        "arg2",
        "seq",
        "msg",
        "Message",
        "obtain",
        "msg",
        "what",
        "what",
        "args",
        "SomeArgs",
        "obtain",
        "args",
        "arg1",
        "obj",
        "args",
        "argi1",
        "arg1",
        "args",
        "argi2",
        "arg2",
        "args",
        "argi3",
        "seq",
        "msg",
        "obj",
        "args",
        "mH",
        "sendMessage",
        "msg",
        "context",
        "who",
        "what",
        "cci",
        "cci",
        "context",
        "context",
        "cci",
        "who",
        "who",
        "cci",
        "what",
        "what",
        "sendMessage",
        "H",
        "CLEAN_UP_CONTEXT",
        "cci",
        "r",
        "customIntent",
        "aInfo",
        "r",
        "activityInfo",
        "r",
        "packageInfo",
        "r",
        "packageInfo",
        "getPackageInfo",
        "aInfo",
        "applicationInfo",
        "r",
        "compatInfo",
        "Context",
        "CONTEXT_INCLUDE_CODE",
        "component",
        "r",
        "intent",
        "getComponent",
        "component",
        "component",
        "r",
        "intent",
        "resolveActivity",
        "mInitialApplication",
        "getPackageManager",
        "r",
        "intent",
        "setComponent",
        "component",
        "r",
        "activityInfo",
        "targetActivity",
        "component",
        "r",
        "activityInfo",
        "packageName",
        "r",
        "activityInfo",
        "targetActivity",
        "appContext",
        "createBaseContextForActivity",
        "r",
        "activity",
        "cl",
        "appContext",
        "getClassLoader",
        "activity",
        "mInstrumentation",
        "newActivity",
        "cl",
        "component",
        "getClassName",
        "r",
        "intent",
        "StrictMode",
        "incrementExpectedActivityCount",
        "activity",
        "getClass",
        "r",
        "intent",
        "setExtrasClassLoader",
        "cl",
        "r",
        "intent",
        "prepareToEnterProcess",
        "r",
        "state",
        "r",
        "state",
        "setClassLoader",
        "cl",
        "e",
        "mInstrumentation",
        "onException",
        "activity",
        "e",
        "component",
        "e",
        "toString",
        "e",
        "app",
        "r",
        "packageInfo",
        "makeApplication",
        "mInstrumentation",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "app",
        "app",
        "getPackageName",
        "r",
        "packageInfo",
        "getPackageName",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "r",
        "packageInfo",
        "getAppDir",
        "activity",
        "title",
        "r",
        "activityInfo",
        "loadLabel",
        "appContext",
        "getPackageManager",
        "config",
        "mCompatConfiguration",
        "r",
        "overrideConfig",
        "config",
        "updateFrom",
        "r",
        "overrideConfig",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "r",
        "activityInfo",
        "name",
        "config",
        "r",
        "mPendingRemoveWindow",
        "r",
        "mPreserveWindow",
        "r",
        "mPendingRemoveWindow",
        "r",
        "mPendingRemoveWindow",
        "r",
        "mPendingRemoveWindowManager",
        "appContext",
        "setOuterContext",
        "activity",
        "activity",
        "attach",
        "appContext",
        "getInstrumentation",
        "r",
        "token",
        "r",
        "ident",
        "app",
        "r",
        "intent",
        "r",
        "activityInfo",
        "title",
        "r",
        "parent",
        "r",
        "embeddedID",
        "r",
        "lastNonConfigurationInstances",
        "config",
        "r",
        "referrer",
        "r",
        "voiceInteractor",
        "r",
        "configCallback",
        "r",
        "assistToken",
        "customIntent",
        "activity",
        "mIntent",
        "customIntent",
        "r",
        "lastNonConfigurationInstances",
        "checkAndBlockForNetworkAccess",
        "activity",
        "mStartedActivity",
        "theme",
        "r",
        "activityInfo",
        "getThemeResource",
        "theme",
        "activity",
        "setTheme",
        "theme",
        "activity",
        "mCalled",
        "r",
        "isPersistable",
        "mInstrumentation",
        "callActivityOnCreate",
        "activity",
        "r",
        "state",
        "r",
        "persistentState",
        "mInstrumentation",
        "callActivityOnCreate",
        "activity",
        "r",
        "state",
        "activity",
        "mCalled",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "r",
        "activity",
        "activity",
        "r",
        "setState",
        "ON_CREATE",
        "mResourcesManager",
        "mActivities",
        "put",
        "r",
        "token",
        "r",
        "e",
        "e",
        "e",
        "mInstrumentation",
        "onException",
        "activity",
        "e",
        "component",
        "e",
        "toString",
        "e",
        "activity",
        "Override",
        "r",
        "pendingActions",
        "activity",
        "r",
        "activity",
        "r",
        "activity",
        "r",
        "stopped",
        "r",
        "activity",
        "mFinished",
        "activity",
        "performStart",
        "r",
        "setState",
        "ON_START",
        "pendingActions",
        "pendingActions",
        "shouldRestoreInstanceState",
        "r",
        "isPersistable",
        "r",
        "state",
        "r",
        "persistentState",
        "mInstrumentation",
        "callActivityOnRestoreInstanceState",
        "activity",
        "r",
        "state",
        "r",
        "persistentState",
        "r",
        "state",
        "mInstrumentation",
        "callActivityOnRestoreInstanceState",
        "activity",
        "r",
        "state",
        "pendingActions",
        "shouldCallOnPostCreate",
        "activity",
        "mCalled",
        "r",
        "isPersistable",
        "mInstrumentation",
        "callActivityOnPostCreate",
        "activity",
        "r",
        "state",
        "r",
        "persistentState",
        "mInstrumentation",
        "callActivityOnPostCreate",
        "activity",
        "r",
        "state",
        "activity",
        "mCalled",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "mNetworkPolicyLock",
        "mNetworkBlockSeq",
        "INVALID_PROC_STATE_SEQ",
        "ActivityManager",
        "getService",
        "waitForNetworkStateUpdate",
        "mNetworkBlockSeq",
        "mNetworkBlockSeq",
        "INVALID_PROC_STATE_SEQ",
        "ignored",
        "r",
        "displayId",
        "displayId",
        "ActivityTaskManager",
        "getService",
        "getActivityDisplayId",
        "r",
        "token",
        "e",
        "e",
        "rethrowFromSystemServer",
        "appContext",
        "ContextImpl",
        "createActivityContext",
        "r",
        "packageInfo",
        "r",
        "activityInfo",
        "r",
        "token",
        "displayId",
        "r",
        "overrideConfig",
        "dm",
        "DisplayManagerGlobal",
        "getInstance",
        "pkgName",
        "SystemProperties",
        "get",
        "pkgName",
        "pkgName",
        "isEmpty",
        "r",
        "packageInfo",
        "mPackageName",
        "contains",
        "pkgName",
        "id",
        "dm",
        "getDisplayIds",
        "id",
        "Display",
        "DEFAULT_DISPLAY",
        "display",
        "dm",
        "getCompatibleDisplay",
        "id",
        "appContext",
        "getResources",
        "appContext",
        "appContext",
        "createDisplayContext",
        "display",
        "appContext",
        "Override",
        "r",
        "pendingActions",
        "customIntent",
        "unscheduleGcIdler",
        "mSomeActivitiesChanged",
        "r",
        "profilerInfo",
        "mProfiler",
        "setProfiler",
        "r",
        "profilerInfo",
        "mProfiler",
        "startProfiling",
        "handleConfigurationChanged",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "ThreadedRenderer",
        "sRendererDisabled",
        "r",
        "activityInfo",
        "flags",
        "ActivityInfo",
        "FLAG_HARDWARE_ACCELERATED",
        "HardwareRenderer",
        "preload",
        "WindowManagerGlobal",
        "initialize",
        "GraphicsEnvironment",
        "hintActivityLaunch",
        "a",
        "performLaunchActivity",
        "r",
        "customIntent",
        "a",
        "r",
        "createdConfig",
        "mConfiguration",
        "reportSizeConfigurations",
        "r",
        "r",
        "activity",
        "mFinished",
        "pendingActions",
        "pendingActions",
        "setOldState",
        "r",
        "state",
        "pendingActions",
        "setRestoreInstanceState",
        "pendingActions",
        "setCallOnPostCreate",
        "ActivityTaskManager",
        "getService",
        "finishActivity",
        "r",
        "token",
        "Activity",
        "RESULT_CANCELED",
        "Activity",
        "DONT_FINISH_TASK_WITH_ACTIVITY",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "a",
        "r",
        "mActivitiesToBeDestroyed",
        "containsKey",
        "r",
        "token",
        "configurations",
        "r",
        "activity",
        "getResources",
        "getSizeConfigurations",
        "configurations",
        "horizontal",
        "vertical",
        "smallest",
        "i",
        "configurations",
        "length",
        "i",
        "i",
        "config",
        "configurations",
        "i",
        "config",
        "screenHeightDp",
        "Configuration",
        "SCREEN_HEIGHT_DP_UNDEFINED",
        "vertical",
        "put",
        "config",
        "screenHeightDp",
        "config",
        "screenWidthDp",
        "Configuration",
        "SCREEN_WIDTH_DP_UNDEFINED",
        "horizontal",
        "put",
        "config",
        "screenWidthDp",
        "config",
        "smallestScreenWidthDp",
        "Configuration",
        "SMALLEST_SCREEN_WIDTH_DP_UNDEFINED",
        "smallest",
        "put",
        "config",
        "smallestScreenWidthDp",
        "ActivityTaskManager",
        "getService",
        "reportSizeConfigurations",
        "r",
        "token",
        "horizontal",
        "copyKeys",
        "vertical",
        "copyKeys",
        "smallest",
        "copyKeys",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "r",
        "intents",
        "N",
        "intents",
        "size",
        "i",
        "i",
        "N",
        "i",
        "intent",
        "intents",
        "get",
        "i",
        "intent",
        "setExtrasClassLoader",
        "r",
        "activity",
        "getClassLoader",
        "intent",
        "prepareToEnterProcess",
        "r",
        "activity",
        "mFragments",
        "noteStateNotSaved",
        "mInstrumentation",
        "callActivityOnNewIntent",
        "r",
        "activity",
        "intent",
        "Override",
        "token",
        "intents",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "checkAndBlockForNetworkAccess",
        "deliverNewIntents",
        "r",
        "intents",
        "cmd",
        "forAutofill",
        "cmd",
        "requestType",
        "ActivityManager",
        "ASSIST_CONTEXT_AUTOFILL",
        "mLastSessionId",
        "cmd",
        "sessionId",
        "mLastSessionId",
        "cmd",
        "sessionId",
        "i",
        "mLastAssistStructures",
        "size",
        "i",
        "i",
        "structure",
        "mLastAssistStructures",
        "get",
        "i",
        "get",
        "structure",
        "structure",
        "clearSendChannel",
        "mLastAssistStructures",
        "remove",
        "i",
        "data",
        "structure",
        "content",
        "forAutofill",
        "startTime",
        "SystemClock",
        "uptimeMillis",
        "r",
        "mActivities",
        "get",
        "cmd",
        "activityToken",
        "referrer",
        "r",
        "forAutofill",
        "r",
        "activity",
        "getApplication",
        "dispatchOnProvideAssistData",
        "r",
        "activity",
        "data",
        "r",
        "activity",
        "onProvideAssistData",
        "data",
        "referrer",
        "r",
        "activity",
        "onProvideReferrer",
        "cmd",
        "requestType",
        "ActivityManager",
        "ASSIST_CONTEXT_FULL",
        "forAutofill",
        "structure",
        "r",
        "activity",
        "forAutofill",
        "cmd",
        "flags",
        "activityIntent",
        "r",
        "activity",
        "getIntent",
        "notSecure",
        "r",
        "r",
        "getAttributes",
        "flags",
        "WindowManager",
        "LayoutParams",
        "FLAG_SECURE",
        "activityIntent",
        "notSecure",
        "forAutofill",
        "intent",
        "activityIntent",
        "intent",
        "setFlags",
        "intent",
        "getFlags",
        "Intent",
        "FLAG_GRANT_WRITE_URI_PERMISSION",
        "Intent",
        "FLAG_GRANT_PERSISTABLE_URI_PERMISSION",
        "intent",
        "removeUnsafeExtras",
        "content",
        "setDefaultIntent",
        "intent",
        "forAutofill",
        "content",
        "setDefaultIntent",
        "forAutofill",
        "r",
        "activity",
        "onProvideAssistContent",
        "content",
        "structure",
        "structure",
        "structure",
        "setAcquisitionStartTime",
        "startTime",
        "structure",
        "setAcquisitionEndTime",
        "SystemClock",
        "uptimeMillis",
        "mLastAssistStructures",
        "add",
        "structure",
        "mgr",
        "ActivityTaskManager",
        "getService",
        "mgr",
        "reportAssistContextExtras",
        "cmd",
        "requestToken",
        "data",
        "structure",
        "content",
        "referrer",
        "e",
        "e",
        "rethrowFromSystemServer",
        "NonNull",
        "activityToken",
        "NonNull",
        "interactor",
        "NonNull",
        "cancellationSignal",
        "NonNull",
        "callback",
        "r",
        "mActivities",
        "get",
        "activityToken",
        "r",
        "Log",
        "w",
        "TAG",
        "activityToken",
        "callback",
        "sendResult",
        "lifecycleState",
        "r",
        "getLifecycleState",
        "lifecycleState",
        "ON_START",
        "lifecycleState",
        "ON_STOP",
        "Log",
        "w",
        "TAG",
        "r",
        "lifecycleState",
        "callback",
        "sendResult",
        "r",
        "activity",
        "mVoiceInteractor",
        "r",
        "activity",
        "mVoiceInteractor",
        "mInteractor",
        "asBinder",
        "interactor",
        "asBinder",
        "r",
        "activity",
        "mVoiceInteractor",
        "r",
        "activity",
        "mVoiceInteractor",
        "destroy",
        "r",
        "activity",
        "mVoiceInteractor",
        "interactor",
        "r",
        "activity",
        "r",
        "activity",
        "Looper",
        "myLooper",
        "r",
        "activity",
        "onGetDirectActions",
        "cancellationSignal",
        "actions",
        "Preconditions",
        "checkNotNull",
        "actions",
        "Preconditions",
        "checkCollectionElementsNotNull",
        "actions",
        "actions",
        "isEmpty",
        "actionCount",
        "actions",
        "size",
        "i",
        "i",
        "actionCount",
        "i",
        "action",
        "actions",
        "get",
        "i",
        "action",
        "setSource",
        "r",
        "activity",
        "getTaskId",
        "r",
        "activity",
        "getAssistToken",
        "result",
        "result",
        "putParcelable",
        "DirectAction",
        "KEY_ACTIONS_LIST",
        "actions",
        "callback",
        "sendResult",
        "result",
        "callback",
        "sendResult",
        "NonNull",
        "activityToken",
        "NonNull",
        "actionId",
        "arguments",
        "NonNull",
        "cancellationSignal",
        "NonNull",
        "resultCallback",
        "r",
        "mActivities",
        "get",
        "activityToken",
        "r",
        "lifecycleState",
        "r",
        "getLifecycleState",
        "lifecycleState",
        "ON_START",
        "lifecycleState",
        "ON_STOP",
        "resultCallback",
        "sendResult",
        "nonNullArguments",
        "arguments",
        "arguments",
        "Bundle",
        "EMPTY",
        "r",
        "activity",
        "onPerformDirectAction",
        "actionId",
        "nonNullArguments",
        "cancellationSignal",
        "resultCallback",
        "sendResult",
        "resultCallback",
        "sendResult",
        "token",
        "drawComplete",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "r",
        "activity",
        "onTranslucentConversionComplete",
        "drawComplete",
        "token",
        "options",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "r",
        "activity",
        "onNewActivityOptions",
        "options",
        "info",
        "oldPolicy",
        "StrictMode",
        "allowThreadDiskWrites",
        "installContentProviders",
        "mInitialApplication",
        "Arrays",
        "asList",
        "info",
        "StrictMode",
        "setThreadPolicy",
        "oldPolicy",
        "token",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "r",
        "activity",
        "dispatchEnterAnimationComplete",
        "Binder",
        "enableTracing",
        "fd",
        "Binder",
        "disableTracing",
        "Binder",
        "getTransactionTracker",
        "writeTracesToFile",
        "fd",
        "IoUtils",
        "closeQuietly",
        "fd",
        "Binder",
        "getTransactionTracker",
        "clearTraces",
        "Override",
        "token",
        "isInMultiWindowMode",
        "overrideConfig",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "newConfig",
        "mConfiguration",
        "overrideConfig",
        "newConfig",
        "updateFrom",
        "overrideConfig",
        "r",
        "activity",
        "dispatchMultiWindowModeChanged",
        "isInMultiWindowMode",
        "newConfig",
        "Override",
        "token",
        "isInPipMode",
        "overrideConfig",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "newConfig",
        "mConfiguration",
        "overrideConfig",
        "newConfig",
        "updateFrom",
        "overrideConfig",
        "r",
        "activity",
        "dispatchPictureInPictureModeChanged",
        "isInPipMode",
        "newConfig",
        "token",
        "interactor",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "r",
        "voiceInteractor",
        "interactor",
        "r",
        "activity",
        "setVoiceInteractor",
        "interactor",
        "interactor",
        "r",
        "activity",
        "onLocalVoiceInteractionStopped",
        "r",
        "activity",
        "onLocalVoiceInteractionStarted",
        "agent",
        "classLoader",
        "VMDebug",
        "attachAgent",
        "agent",
        "classLoader",
        "e",
        "Slog",
        "e",
        "TAG",
        "classLoader",
        "agent",
        "agent",
        "loadedApk",
        "classLoader",
        "loadedApk",
        "loadedApk",
        "getClassLoader",
        "attemptAttachAgent",
        "agent",
        "classLoader",
        "classLoader",
        "attemptAttachAgent",
        "agent",
        "sCurrentBroadcastIntent",
        "sCurrentBroadcastIntent",
        "get",
        "UnsupportedAppUsage",
        "maxTargetSdk",
        "Build",
        "VERSION_CODES",
        "P",
        "trackingBug",
        "data",
        "unscheduleGcIdler",
        "component",
        "data",
        "intent",
        "getComponent",
        "getClassName",
        "packageInfo",
        "getPackageInfoNoCheck",
        "data",
        "info",
        "applicationInfo",
        "data",
        "compatInfo",
        "mgr",
        "ActivityManager",
        "getService",
        "app",
        "receiver",
        "context",
        "app",
        "packageInfo",
        "makeApplication",
        "mInstrumentation",
        "context",
        "app",
        "getBaseContext",
        "data",
        "info",
        "splitName",
        "context",
        "context",
        "createContextForSplit",
        "data",
        "info",
        "splitName",
        "cl",
        "context",
        "getClassLoader",
        "data",
        "intent",
        "setExtrasClassLoader",
        "cl",
        "data",
        "intent",
        "prepareToEnterProcess",
        "data",
        "setExtrasClassLoader",
        "cl",
        "receiver",
        "packageInfo",
        "getAppFactory",
        "instantiateReceiver",
        "cl",
        "data",
        "info",
        "name",
        "data",
        "intent",
        "e",
        "DEBUG_BROADCAST",
        "Slog",
        "i",
        "TAG",
        "data",
        "intent",
        "getComponent",
        "data",
        "sendFinished",
        "mgr",
        "component",
        "e",
        "toString",
        "e",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "data",
        "intent",
        "app",
        "app",
        "getPackageName",
        "packageInfo",
        "getPackageName",
        "data",
        "intent",
        "getComponent",
        "toShortString",
        "packageInfo",
        "getAppDir",
        "sCurrentBroadcastIntent",
        "data",
        "intent",
        "receiver",
        "setPendingResult",
        "data",
        "receiver",
        "onReceive",
        "context",
        "getReceiverRestrictedContext",
        "data",
        "intent",
        "e",
        "DEBUG_BROADCAST",
        "Slog",
        "i",
        "TAG",
        "data",
        "intent",
        "getComponent",
        "data",
        "sendFinished",
        "mgr",
        "mInstrumentation",
        "onException",
        "receiver",
        "e",
        "component",
        "e",
        "toString",
        "e",
        "sCurrentBroadcastIntent",
        "receiver",
        "getPendingResult",
        "data",
        "finish",
        "data",
        "DEBUG_BACKUP",
        "Slog",
        "v",
        "TAG",
        "data",
        "requestedPackage",
        "getPackageManager",
        "getPackageInfo",
        "data",
        "appInfo",
        "packageName",
        "UserHandle",
        "myUserId",
        "requestedPackage",
        "applicationInfo",
        "uid",
        "Process",
        "myUid",
        "Slog",
        "w",
        "TAG",
        "data",
        "appInfo",
        "packageName",
        "e",
        "e",
        "rethrowFromSystemServer",
        "unscheduleGcIdler",
        "packageInfo",
        "getPackageInfoNoCheck",
        "data",
        "appInfo",
        "data",
        "compatInfo",
        "packageName",
        "packageInfo",
        "mPackageName",
        "packageName",
        "Slog",
        "d",
        "TAG",
        "classname",
        "data",
        "appInfo",
        "backupAgentName",
        "classname",
        "data",
        "backupMode",
        "ApplicationThreadConstants",
        "BACKUP_MODE_FULL",
        "data",
        "backupMode",
        "ApplicationThreadConstants",
        "BACKUP_MODE_RESTORE_FULL",
        "classname",
        "binder",
        "backupAgents",
        "getBackupAgentsForUser",
        "data",
        "userId",
        "agent",
        "backupAgents",
        "get",
        "packageName",
        "agent",
        "DEBUG_BACKUP",
        "Slog",
        "v",
        "TAG",
        "binder",
        "agent",
        "onBind",
        "DEBUG_BACKUP",
        "Slog",
        "v",
        "TAG",
        "classname",
        "cl",
        "packageInfo",
        "getClassLoader",
        "agent",
        "cl",
        "loadClass",
        "classname",
        "newInstance",
        "context",
        "ContextImpl",
        "createAppContext",
        "packageInfo",
        "context",
        "setOuterContext",
        "agent",
        "agent",
        "attach",
        "context",
        "agent",
        "onCreate",
        "UserHandle",
        "of",
        "data",
        "userId",
        "binder",
        "agent",
        "onBind",
        "backupAgents",
        "put",
        "packageName",
        "agent",
        "e",
        "Slog",
        "e",
        "TAG",
        "e",
        "data",
        "backupMode",
        "ApplicationThreadConstants",
        "BACKUP_MODE_RESTORE",
        "data",
        "backupMode",
        "ApplicationThreadConstants",
        "BACKUP_MODE_RESTORE_FULL",
        "e",
        "ActivityManager",
        "getService",
        "backupAgentCreated",
        "packageName",
        "binder",
        "data",
        "userId",
        "e",
        "e",
        "rethrowFromSystemServer",
        "e",
        "classname",
        "e",
        "toString",
        "e",
        "data",
        "DEBUG_BACKUP",
        "Slog",
        "v",
        "TAG",
        "data",
        "packageInfo",
        "getPackageInfoNoCheck",
        "data",
        "appInfo",
        "data",
        "compatInfo",
        "packageName",
        "packageInfo",
        "mPackageName",
        "backupAgents",
        "getBackupAgentsForUser",
        "data",
        "userId",
        "agent",
        "backupAgents",
        "get",
        "packageName",
        "agent",
        "agent",
        "onDestroy",
        "e",
        "Slog",
        "w",
        "TAG",
        "data",
        "appInfo",
        "e",
        "printStackTrace",
        "backupAgents",
        "remove",
        "packageName",
        "Slog",
        "w",
        "TAG",
        "data",
        "userId",
        "backupAgents",
        "mBackupAgentsByUser",
        "get",
        "userId",
        "backupAgents",
        "backupAgents",
        "mBackupAgentsByUser",
        "put",
        "userId",
        "backupAgents",
        "backupAgents",
        "UnsupportedAppUsage",
        "data",
        "unscheduleGcIdler",
        "packageInfo",
        "getPackageInfoNoCheck",
        "data",
        "info",
        "applicationInfo",
        "data",
        "compatInfo",
        "service",
        "cl",
        "packageInfo",
        "getClassLoader",
        "service",
        "packageInfo",
        "getAppFactory",
        "instantiateService",
        "cl",
        "data",
        "info",
        "name",
        "data",
        "intent",
        "e",
        "mInstrumentation",
        "onException",
        "service",
        "e",
        "data",
        "info",
        "name",
        "e",
        "toString",
        "e",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "data",
        "info",
        "name",
        "context",
        "ContextImpl",
        "createAppContext",
        "packageInfo",
        "context",
        "setOuterContext",
        "service",
        "app",
        "packageInfo",
        "makeApplication",
        "mInstrumentation",
        "service",
        "attach",
        "context",
        "data",
        "info",
        "name",
        "data",
        "token",
        "app",
        "ActivityManager",
        "getService",
        "service",
        "onCreate",
        "mServices",
        "put",
        "data",
        "token",
        "service",
        "ActivityManager",
        "getService",
        "serviceDoneExecuting",
        "data",
        "token",
        "SERVICE_DONE_EXECUTING_ANON",
        "e",
        "e",
        "rethrowFromSystemServer",
        "e",
        "mInstrumentation",
        "onException",
        "service",
        "e",
        "data",
        "info",
        "name",
        "e",
        "toString",
        "e",
        "data",
        "s",
        "mServices",
        "get",
        "data",
        "token",
        "DEBUG_SERVICE",
        "Slog",
        "v",
        "TAG",
        "s",
        "data",
        "rebind",
        "s",
        "data",
        "intent",
        "setExtrasClassLoader",
        "s",
        "getClassLoader",
        "data",
        "intent",
        "prepareToEnterProcess",
        "data",
        "rebind",
        "binder",
        "s",
        "onBind",
        "data",
        "intent",
        "ActivityManager",
        "getService",
        "publishService",
        "data",
        "token",
        "data",
        "intent",
        "binder",
        "s",
        "onRebind",
        "data",
        "intent",
        "ActivityManager",
        "getService",
        "serviceDoneExecuting",
        "data",
        "token",
        "SERVICE_DONE_EXECUTING_ANON",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "e",
        "mInstrumentation",
        "onException",
        "s",
        "e",
        "s",
        "data",
        "intent",
        "e",
        "toString",
        "e",
        "data",
        "s",
        "mServices",
        "get",
        "data",
        "token",
        "s",
        "data",
        "intent",
        "setExtrasClassLoader",
        "s",
        "getClassLoader",
        "data",
        "intent",
        "prepareToEnterProcess",
        "doRebind",
        "s",
        "onUnbind",
        "data",
        "intent",
        "doRebind",
        "ActivityManager",
        "getService",
        "unbindFinished",
        "data",
        "token",
        "data",
        "intent",
        "doRebind",
        "ActivityManager",
        "getService",
        "serviceDoneExecuting",
        "data",
        "token",
        "SERVICE_DONE_EXECUTING_ANON",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "e",
        "mInstrumentation",
        "onException",
        "s",
        "e",
        "s",
        "data",
        "intent",
        "e",
        "toString",
        "e",
        "info",
        "oldPolicy",
        "StrictMode",
        "allowThreadDiskWrites",
        "s",
        "mServices",
        "get",
        "info",
        "token",
        "s",
        "pw",
        "info",
        "fd",
        "getFileDescriptor",
        "s",
        "dump",
        "info",
        "fd",
        "getFileDescriptor",
        "pw",
        "info",
        "args",
        "pw",
        "flush",
        "IoUtils",
        "closeQuietly",
        "info",
        "fd",
        "StrictMode",
        "setThreadPolicy",
        "oldPolicy",
        "info",
        "oldPolicy",
        "StrictMode",
        "allowThreadDiskWrites",
        "r",
        "mActivities",
        "get",
        "info",
        "token",
        "r",
        "r",
        "activity",
        "pw",
        "info",
        "fd",
        "getFileDescriptor",
        "r",
        "activity",
        "dump",
        "info",
        "prefix",
        "info",
        "fd",
        "getFileDescriptor",
        "pw",
        "info",
        "args",
        "pw",
        "flush",
        "IoUtils",
        "closeQuietly",
        "info",
        "fd",
        "StrictMode",
        "setThreadPolicy",
        "oldPolicy",
        "info",
        "oldPolicy",
        "StrictMode",
        "allowThreadDiskWrites",
        "r",
        "mLocalProviders",
        "get",
        "info",
        "token",
        "r",
        "r",
        "mLocalProvider",
        "pw",
        "info",
        "fd",
        "getFileDescriptor",
        "r",
        "mLocalProvider",
        "dump",
        "info",
        "fd",
        "getFileDescriptor",
        "pw",
        "info",
        "args",
        "pw",
        "flush",
        "IoUtils",
        "closeQuietly",
        "info",
        "fd",
        "StrictMode",
        "setThreadPolicy",
        "oldPolicy",
        "data",
        "s",
        "mServices",
        "get",
        "data",
        "token",
        "s",
        "data",
        "args",
        "data",
        "args",
        "setExtrasClassLoader",
        "s",
        "getClassLoader",
        "data",
        "args",
        "prepareToEnterProcess",
        "res",
        "data",
        "taskRemoved",
        "res",
        "s",
        "onStartCommand",
        "data",
        "args",
        "data",
        "flags",
        "data",
        "startId",
        "s",
        "onTaskRemoved",
        "data",
        "args",
        "res",
        "Service",
        "START_TASK_REMOVED_COMPLETE",
        "QueuedWork",
        "waitToFinish",
        "ActivityManager",
        "getService",
        "serviceDoneExecuting",
        "data",
        "token",
        "SERVICE_DONE_EXECUTING_START",
        "data",
        "startId",
        "res",
        "e",
        "e",
        "rethrowFromSystemServer",
        "e",
        "mInstrumentation",
        "onException",
        "s",
        "e",
        "s",
        "data",
        "args",
        "e",
        "toString",
        "e",
        "token",
        "s",
        "mServices",
        "remove",
        "token",
        "s",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "s",
        "s",
        "onDestroy",
        "s",
        "detachAndCleanUp",
        "context",
        "s",
        "getBaseContext",
        "context",
        "who",
        "s",
        "getClassName",
        "context",
        "scheduleFinalCleanup",
        "who",
        "QueuedWork",
        "waitToFinish",
        "ActivityManager",
        "getService",
        "serviceDoneExecuting",
        "token",
        "SERVICE_DONE_EXECUTING_STOP",
        "e",
        "e",
        "rethrowFromSystemServer",
        "e",
        "mInstrumentation",
        "onException",
        "s",
        "e",
        "s",
        "e",
        "toString",
        "e",
        "Slog",
        "i",
        "TAG",
        "token",
        "e",
        "Slog",
        "i",
        "TAG",
        "token",
        "VisibleForTesting",
        "token",
        "finalStateRequest",
        "reason",
        "r",
        "mActivities",
        "get",
        "token",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "r",
        "activity",
        "mFinished",
        "r",
        "r",
        "activity",
        "mFinished",
        "r",
        "getLifecycleState",
        "ON_RESUME",
        "finalStateRequest",
        "e",
        "Slog",
        "e",
        "TAG",
        "e",
        "getMessage",
        "e",
        "Slog",
        "e",
        "TAG",
        "r",
        "getStateString",
        "finalStateRequest",
        "r",
        "hideForNow",
        "r",
        "activity",
        "mStartedActivity",
        "r",
        "activity",
        "onStateNotSaved",
        "r",
        "activity",
        "mFragments",
        "noteStateNotSaved",
        "checkAndBlockForNetworkAccess",
        "r",
        "pendingIntents",
        "deliverNewIntents",
        "r",
        "r",
        "pendingIntents",
        "r",
        "pendingIntents",
        "r",
        "pendingResults",
        "deliverResults",
        "r",
        "r",
        "pendingResults",
        "reason",
        "r",
        "pendingResults",
        "r",
        "activity",
        "performResume",
        "r",
        "startsNotResumed",
        "reason",
        "r",
        "state",
        "r",
        "persistentState",
        "r",
        "setState",
        "ON_RESUME",
        "reportTopResumedActivityChanged",
        "r",
        "r",
        "isTopResumedActivity",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "e",
        "toString",
        "e",
        "r",
        "r",
        "force",
        "r",
        "mPreserveWindow",
        "force",
        "r",
        "mPendingRemoveWindow",
        "r",
        "mPendingRemoveWindowManager",
        "removeViewImmediate",
        "r",
        "mPendingRemoveWindow",
        "getDecorView",
        "wtoken",
        "r",
        "mPendingRemoveWindow",
        "getDecorView",
        "getWindowToken",
        "wtoken",
        "WindowManagerGlobal",
        "getInstance",
        "closeAll",
        "wtoken",
        "r",
        "activity",
        "getClass",
        "getName",
        "r",
        "mPendingRemoveWindow",
        "r",
        "mPendingRemoveWindowManager",
        "Override",
        "token",
        "finalStateRequest",
        "isForward",
        "reason",
        "unscheduleGcIdler",
        "mSomeActivitiesChanged",
        "r",
        "performResumeActivity",
        "token",
        "finalStateRequest",
        "reason",
        "r",
        "mActivitiesToBeDestroyed",
        "containsKey",
        "token",
        "a",
        "r",
        "activity",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "a",
        "mStartedActivity",
        "r",
        "hideForNow",
        "a",
        "mFinished",
        "forwardBit",
        "isForward",
        "WindowManager",
        "LayoutParams",
        "SOFT_INPUT_IS_FORWARD_NAVIGATION",
        "willBeVisible",
        "a",
        "mStartedActivity",
        "willBeVisible",
        "willBeVisible",
        "ActivityTaskManager",
        "getService",
        "willActivityBeVisible",
        "a",
        "getActivityToken",
        "e",
        "e",
        "rethrowFromSystemServer",
        "r",
        "a",
        "mFinished",
        "willBeVisible",
        "r",
        "r",
        "activity",
        "getWindow",
        "decor",
        "r",
        "getDecorView",
        "decor",
        "setVisibility",
        "View",
        "INVISIBLE",
        "wm",
        "a",
        "getWindowManager",
        "l",
        "r",
        "getAttributes",
        "a",
        "mDecor",
        "decor",
        "l",
        "WindowManager",
        "LayoutParams",
        "TYPE_BASE_APPLICATION",
        "l",
        "softInputMode",
        "forwardBit",
        "r",
        "mPreserveWindow",
        "a",
        "mWindowAdded",
        "r",
        "mPreserveWindow",
        "impl",
        "decor",
        "getViewRootImpl",
        "impl",
        "impl",
        "notifyChildRebuilt",
        "a",
        "mVisibleFromClient",
        "a",
        "mWindowAdded",
        "a",
        "mWindowAdded",
        "wm",
        "addView",
        "decor",
        "l",
        "a",
        "onWindowAttributesChanged",
        "l",
        "willBeVisible",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "r",
        "hideForNow",
        "cleanUpPendingRemoveWindows",
        "r",
        "r",
        "activity",
        "mFinished",
        "willBeVisible",
        "r",
        "activity",
        "mDecor",
        "r",
        "hideForNow",
        "r",
        "newConfig",
        "performConfigurationChangedForActivity",
        "r",
        "r",
        "newConfig",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "r",
        "activityInfo",
        "name",
        "r",
        "activity",
        "mCurrentConfig",
        "r",
        "newConfig",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "isForward",
        "l",
        "r",
        "getAttributes",
        "l",
        "softInputMode",
        "WindowManager",
        "LayoutParams",
        "SOFT_INPUT_IS_FORWARD_NAVIGATION",
        "forwardBit",
        "l",
        "softInputMode",
        "l",
        "softInputMode",
        "WindowManager",
        "LayoutParams",
        "SOFT_INPUT_IS_FORWARD_NAVIGATION",
        "forwardBit",
        "r",
        "activity",
        "mVisibleFromClient",
        "wm",
        "a",
        "getWindowManager",
        "decor",
        "r",
        "getDecorView",
        "wm",
        "updateViewLayout",
        "decor",
        "l",
        "r",
        "activity",
        "mVisibleFromServer",
        "mNumVisibleActivities",
        "r",
        "activity",
        "mVisibleFromClient",
        "r",
        "activity",
        "makeVisible",
        "r",
        "nextIdle",
        "mNewActivities",
        "mNewActivities",
        "r",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "Looper",
        "myQueue",
        "addIdleHandler",
        "Override",
        "token",
        "onTop",
        "reason",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "r",
        "activity",
        "Slog",
        "w",
        "TAG",
        "token",
        "DEBUG_ORDER",
        "Slog",
        "d",
        "TAG",
        "onTop",
        "r",
        "r",
        "isTopResumedActivity",
        "onTop",
        "onTop",
        "r",
        "isTopResumedActivity",
        "onTop",
        "r",
        "getLifecycleState",
        "ON_RESUME",
        "reportTopResumedActivityChanged",
        "r",
        "onTop",
        "DEBUG_ORDER",
        "Slog",
        "d",
        "TAG",
        "r",
        "getLifecycleState",
        "r",
        "onTop",
        "reason",
        "r",
        "lastReportedTopResumedState",
        "onTop",
        "r",
        "lastReportedTopResumedState",
        "onTop",
        "r",
        "activity",
        "performTopResumedActivityChanged",
        "onTop",
        "reason",
        "Override",
        "token",
        "finished",
        "userLeaving",
        "configChanges",
        "pendingActions",
        "reason",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "userLeaving",
        "performUserLeavingActivity",
        "r",
        "r",
        "activity",
        "mConfigChangeFlags",
        "configChanges",
        "performPauseActivity",
        "r",
        "finished",
        "reason",
        "pendingActions",
        "r",
        "isPreHoneycomb",
        "QueuedWork",
        "waitToFinish",
        "mSomeActivitiesChanged",
        "r",
        "mInstrumentation",
        "callActivityOnUserLeaving",
        "r",
        "activity",
        "token",
        "finished",
        "reason",
        "pendingActions",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "performPauseActivity",
        "r",
        "finished",
        "reason",
        "pendingActions",
        "r",
        "finished",
        "reason",
        "pendingActions",
        "r",
        "paused",
        "r",
        "activity",
        "mFinished",
        "e",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "Slog",
        "e",
        "TAG",
        "e",
        "getMessage",
        "e",
        "finished",
        "r",
        "activity",
        "mFinished",
        "shouldSaveState",
        "r",
        "activity",
        "mFinished",
        "r",
        "isPreHoneycomb",
        "shouldSaveState",
        "callActivityOnSaveInstanceState",
        "r",
        "performPauseActivityIfNeeded",
        "r",
        "reason",
        "listeners",
        "mOnPauseListeners",
        "listeners",
        "mOnPauseListeners",
        "remove",
        "r",
        "activity",
        "size",
        "listeners",
        "listeners",
        "size",
        "i",
        "i",
        "size",
        "i",
        "listeners",
        "get",
        "i",
        "onPaused",
        "r",
        "activity",
        "oldState",
        "pendingActions",
        "pendingActions",
        "getOldState",
        "oldState",
        "r",
        "isPreHoneycomb",
        "r",
        "state",
        "oldState",
        "shouldSaveState",
        "r",
        "state",
        "r",
        "reason",
        "r",
        "paused",
        "reportTopResumedActivityChanged",
        "r",
        "r",
        "activity",
        "mCalled",
        "mInstrumentation",
        "callActivityOnPause",
        "r",
        "activity",
        "r",
        "activity",
        "mCalled",
        "safeToComponentShortString",
        "r",
        "intent",
        "e",
        "e",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "safeToComponentShortString",
        "r",
        "intent",
        "e",
        "toString",
        "e",
        "r",
        "setState",
        "ON_PAUSE",
        "UnsupportedAppUsage",
        "token",
        "saveState",
        "reason",
        "r",
        "mActivities",
        "get",
        "token",
        "performStopActivityInner",
        "r",
        "saveState",
        "reason",
        "holder",
        "client",
        "stableCount",
        "unstableCount",
        "removePending",
        "inHolder",
        "inClient",
        "sCount",
        "uCount",
        "holder",
        "inHolder",
        "client",
        "inClient",
        "stableCount",
        "sCount",
        "unstableCount",
        "uCount",
        "r",
        "info",
        "keepShown",
        "saveState",
        "finalStateRequest",
        "reason",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "r",
        "keepShown",
        "r",
        "stopped",
        "r",
        "activity",
        "mFinished",
        "finalStateRequest",
        "e",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "Slog",
        "e",
        "TAG",
        "e",
        "getMessage",
        "e",
        "Slog",
        "e",
        "TAG",
        "r",
        "getStateString",
        "performPauseActivityIfNeeded",
        "r",
        "reason",
        "info",
        "info",
        "setDescription",
        "r",
        "activity",
        "onCreateDescription",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "e",
        "toString",
        "e",
        "keepShown",
        "callActivityOnStop",
        "r",
        "saveState",
        "reason",
        "r",
        "saveState",
        "reason",
        "shouldSaveState",
        "saveState",
        "r",
        "activity",
        "mFinished",
        "r",
        "state",
        "r",
        "isPreHoneycomb",
        "isPreP",
        "r",
        "isPreP",
        "shouldSaveState",
        "isPreP",
        "callActivityOnSaveInstanceState",
        "r",
        "r",
        "activity",
        "performStop",
        "r",
        "mPreserveWindow",
        "reason",
        "e",
        "e",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "e",
        "toString",
        "e",
        "r",
        "setState",
        "ON_STOP",
        "shouldSaveState",
        "isPreP",
        "callActivityOnSaveInstanceState",
        "r",
        "r",
        "show",
        "v",
        "r",
        "activity",
        "mDecor",
        "v",
        "show",
        "r",
        "activity",
        "mVisibleFromServer",
        "r",
        "activity",
        "mVisibleFromServer",
        "mNumVisibleActivities",
        "r",
        "activity",
        "mVisibleFromClient",
        "r",
        "activity",
        "makeVisible",
        "r",
        "newConfig",
        "performConfigurationChangedForActivity",
        "r",
        "r",
        "newConfig",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "r",
        "activityInfo",
        "name",
        "r",
        "activity",
        "mCurrentConfig",
        "r",
        "newConfig",
        "r",
        "activity",
        "mVisibleFromServer",
        "r",
        "activity",
        "mVisibleFromServer",
        "mNumVisibleActivities",
        "v",
        "setVisibility",
        "View",
        "INVISIBLE",
        "Override",
        "token",
        "show",
        "configChanges",
        "pendingActions",
        "finalStateRequest",
        "reason",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "activity",
        "mConfigChangeFlags",
        "configChanges",
        "stopInfo",
        "performStopActivityInner",
        "r",
        "stopInfo",
        "show",
        "finalStateRequest",
        "reason",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "show",
        "r",
        "updateVisibility",
        "r",
        "show",
        "r",
        "isPreHoneycomb",
        "QueuedWork",
        "waitToFinish",
        "stopInfo",
        "setActivity",
        "r",
        "stopInfo",
        "setState",
        "r",
        "state",
        "stopInfo",
        "setPersistentState",
        "r",
        "persistentState",
        "pendingActions",
        "setStopInfo",
        "stopInfo",
        "mSomeActivitiesChanged",
        "Override",
        "pendingActions",
        "mH",
        "post",
        "pendingActions",
        "getStopInfo",
        "Override",
        "token",
        "start",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "stopped",
        "r",
        "activity",
        "performRestart",
        "start",
        "start",
        "r",
        "setState",
        "ON_START",
        "Override",
        "token",
        "show",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "Log",
        "w",
        "TAG",
        "token",
        "show",
        "r",
        "stopped",
        "performStopActivityInner",
        "r",
        "show",
        "show",
        "r",
        "getLifecycleState",
        "ON_STOP",
        "unscheduleGcIdler",
        "r",
        "activity",
        "performRestart",
        "r",
        "setState",
        "ON_START",
        "r",
        "activity",
        "mDecor",
        "Slog",
        "v",
        "TAG",
        "r",
        "show",
        "updateVisibility",
        "r",
        "show",
        "mSomeActivitiesChanged",
        "token",
        "sleeping",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "Log",
        "w",
        "TAG",
        "token",
        "sleeping",
        "r",
        "stopped",
        "r",
        "isPreHoneycomb",
        "callActivityOnStop",
        "r",
        "r",
        "isPreHoneycomb",
        "QueuedWork",
        "waitToFinish",
        "ActivityTaskManager",
        "getService",
        "activitySlept",
        "r",
        "token",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "r",
        "stopped",
        "r",
        "activity",
        "mVisibleFromServer",
        "r",
        "activity",
        "performRestart",
        "r",
        "setState",
        "ON_START",
        "coreSettings",
        "mResourcesManager",
        "mCoreSettings",
        "coreSettings",
        "onCoreSettingsChange",
        "updateDebugViewAttributeState",
        "relaunchAllActivities",
        "previousState",
        "View",
        "sDebugViewAttributes",
        "View",
        "sDebugViewAttributesApplicationPackage",
        "mCoreSettings",
        "getString",
        "Settings",
        "Global",
        "DEBUG_VIEW_ATTRIBUTES_APPLICATION_PACKAGE",
        "currentPackage",
        "mBoundApplication",
        "mBoundApplication",
        "appInfo",
        "mBoundApplication",
        "appInfo",
        "packageName",
        "View",
        "sDebugViewAttributes",
        "mCoreSettings",
        "getInt",
        "Settings",
        "Global",
        "DEBUG_VIEW_ATTRIBUTES",
        "View",
        "sDebugViewAttributesApplicationPackage",
        "equals",
        "currentPackage",
        "previousState",
        "View",
        "sDebugViewAttributes",
        "preserveWindows",
        "entry",
        "mActivities",
        "entrySet",
        "r",
        "entry",
        "getValue",
        "r",
        "activity",
        "mFinished",
        "preserveWindows",
        "r",
        "r",
        "mPreserveWindow",
        "scheduleRelaunchActivity",
        "entry",
        "getKey",
        "data",
        "apk",
        "peekPackageInfo",
        "data",
        "pkg",
        "apk",
        "apk",
        "setCompatibilityInfo",
        "data",
        "info",
        "apk",
        "peekPackageInfo",
        "data",
        "pkg",
        "apk",
        "apk",
        "setCompatibilityInfo",
        "data",
        "info",
        "handleConfigurationChanged",
        "mConfiguration",
        "data",
        "info",
        "WindowManagerGlobal",
        "getInstance",
        "reportNewConfiguration",
        "mConfiguration",
        "r",
        "results",
        "reason",
        "N",
        "results",
        "size",
        "i",
        "i",
        "N",
        "i",
        "ri",
        "results",
        "get",
        "i",
        "ri",
        "mData",
        "ri",
        "mData",
        "setExtrasClassLoader",
        "r",
        "activity",
        "getClassLoader",
        "ri",
        "mData",
        "prepareToEnterProcess",
        "DEBUG_RESULTS",
        "Slog",
        "v",
        "TAG",
        "r",
        "ri",
        "r",
        "activity",
        "dispatchActivityResult",
        "ri",
        "mResultWho",
        "ri",
        "mRequestCode",
        "ri",
        "mResultCode",
        "ri",
        "mData",
        "reason",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "ri",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "e",
        "toString",
        "e",
        "Override",
        "token",
        "results",
        "reason",
        "r",
        "mActivities",
        "get",
        "token",
        "DEBUG_RESULTS",
        "Slog",
        "v",
        "TAG",
        "r",
        "r",
        "resumed",
        "r",
        "paused",
        "r",
        "activity",
        "mFinished",
        "r",
        "activity",
        "mDecor",
        "r",
        "hideForNow",
        "resumed",
        "updateVisibility",
        "r",
        "resumed",
        "r",
        "activity",
        "mCalled",
        "mInstrumentation",
        "callActivityOnPause",
        "r",
        "activity",
        "r",
        "activity",
        "mCalled",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "e",
        "e",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "e",
        "toString",
        "e",
        "checkAndBlockForNetworkAccess",
        "deliverResults",
        "r",
        "results",
        "reason",
        "resumed",
        "r",
        "activity",
        "performResume",
        "reason",
        "token",
        "finishing",
        "configChanges",
        "getNonConfigInstance",
        "reason",
        "r",
        "mActivities",
        "get",
        "token",
        "activityClass",
        "localLOGV",
        "Slog",
        "v",
        "TAG",
        "r",
        "r",
        "activityClass",
        "r",
        "activity",
        "getClass",
        "r",
        "activity",
        "mConfigChangeFlags",
        "configChanges",
        "finishing",
        "r",
        "activity",
        "mFinished",
        "performPauseActivityIfNeeded",
        "r",
        "r",
        "stopped",
        "callActivityOnStop",
        "r",
        "getNonConfigInstance",
        "r",
        "lastNonConfigurationInstances",
        "r",
        "activity",
        "retainNonConfigurationInstances",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "r",
        "intent",
        "getComponent",
        "toShortString",
        "e",
        "toString",
        "e",
        "r",
        "activity",
        "mCalled",
        "mInstrumentation",
        "callActivityOnDestroy",
        "r",
        "activity",
        "r",
        "activity",
        "mCalled",
        "safeToComponentShortString",
        "r",
        "intent",
        "r",
        "r",
        "closeAllPanels",
        "e",
        "e",
        "e",
        "mInstrumentation",
        "onException",
        "r",
        "activity",
        "e",
        "safeToComponentShortString",
        "r",
        "intent",
        "e",
        "toString",
        "e",
        "r",
        "setState",
        "ON_DESTROY",
        "schedulePurgeIdler",
        "mResourcesManager",
        "mActivities",
        "remove",
        "token",
        "StrictMode",
        "decrementExpectedActivityCount",
        "activityClass",
        "r",
        "intent",
        "component",
        "intent",
        "getComponent",
        "component",
        "component",
        "toShortString",
        "Override",
        "mActivitiesToBeDestroyed",
        "Override",
        "token",
        "finishing",
        "configChanges",
        "getNonConfigInstance",
        "reason",
        "r",
        "performDestroyActivity",
        "token",
        "finishing",
        "configChanges",
        "getNonConfigInstance",
        "reason",
        "r",
        "cleanUpPendingRemoveWindows",
        "r",
        "finishing",
        "wm",
        "r",
        "activity",
        "getWindowManager",
        "v",
        "r",
        "activity",
        "mDecor",
        "v",
        "r",
        "activity",
        "mVisibleFromServer",
        "mNumVisibleActivities",
        "wtoken",
        "v",
        "getWindowToken",
        "r",
        "activity",
        "mWindowAdded",
        "r",
        "mPreserveWindow",
        "r",
        "mPendingRemoveWindow",
        "r",
        "r",
        "mPendingRemoveWindowManager",
        "wm",
        "r",
        "clearContentView",
        "wm",
        "removeViewImmediate",
        "v",
        "wtoken",
        "r",
        "mPendingRemoveWindow",
        "WindowManagerGlobal",
        "getInstance",
        "closeAll",
        "wtoken",
        "r",
        "activity",
        "getClass",
        "getName",
        "r",
        "mPendingRemoveWindow",
        "WindowManagerGlobal",
        "getInstance",
        "closeAllExceptView",
        "token",
        "v",
        "r",
        "activity",
        "getClass",
        "getName",
        "r",
        "activity",
        "mDecor",
        "r",
        "mPendingRemoveWindow",
        "WindowManagerGlobal",
        "getInstance",
        "closeAll",
        "token",
        "r",
        "activity",
        "getClass",
        "getName",
        "c",
        "r",
        "activity",
        "getBaseContext",
        "c",
        "c",
        "scheduleFinalCleanup",
        "r",
        "activity",
        "getClass",
        "getName",
        "finishing",
        "ActivityTaskManager",
        "getService",
        "activityDestroyed",
        "token",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "mSomeActivitiesChanged",
        "Override",
        "token",
        "pendingResults",
        "pendingNewIntents",
        "configChanges",
        "config",
        "preserveWindow",
        "target",
        "scheduleRelaunch",
        "mResourcesManager",
        "i",
        "i",
        "mRelaunchingActivities",
        "size",
        "i",
        "r",
        "mRelaunchingActivities",
        "get",
        "i",
        "DEBUG_ORDER",
        "Slog",
        "d",
        "TAG",
        "r",
        "r",
        "token",
        "token",
        "target",
        "r",
        "pendingResults",
        "r",
        "pendingResults",
        "r",
        "pendingResults",
        "addAll",
        "pendingResults",
        "r",
        "pendingResults",
        "pendingResults",
        "pendingNewIntents",
        "r",
        "pendingIntents",
        "r",
        "pendingIntents",
        "addAll",
        "pendingNewIntents",
        "r",
        "pendingIntents",
        "pendingNewIntents",
        "target",
        "DEBUG_ORDER",
        "Slog",
        "d",
        "TAG",
        "target",
        "target",
        "token",
        "token",
        "target",
        "pendingResults",
        "pendingResults",
        "target",
        "pendingIntents",
        "pendingNewIntents",
        "target",
        "mPreserveWindow",
        "preserveWindow",
        "mRelaunchingActivities",
        "add",
        "target",
        "scheduleRelaunch",
        "target",
        "createdConfig",
        "config",
        "getGlobalConfiguration",
        "target",
        "overrideConfig",
        "config",
        "getOverrideConfiguration",
        "target",
        "pendingConfigChanges",
        "configChanges",
        "scheduleRelaunch",
        "target",
        "Override",
        "tmp",
        "pendingActions",
        "unscheduleGcIdler",
        "mSomeActivitiesChanged",
        "changedConfig",
        "configChanges",
        "mResourcesManager",
        "N",
        "mRelaunchingActivities",
        "size",
        "token",
        "tmp",
        "token",
        "tmp",
        "i",
        "i",
        "N",
        "i",
        "r",
        "mRelaunchingActivities",
        "get",
        "i",
        "r",
        "token",
        "token",
        "tmp",
        "r",
        "configChanges",
        "tmp",
        "pendingConfigChanges",
        "mRelaunchingActivities",
        "remove",
        "i",
        "i",
        "N",
        "tmp",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "tmp",
        "token",
        "toHexString",
        "configChanges",
        "mPendingConfiguration",
        "changedConfig",
        "mPendingConfiguration",
        "mPendingConfiguration",
        "tmp",
        "createdConfig",
        "mConfiguration",
        "tmp",
        "createdConfig",
        "isOtherSeqNewer",
        "mConfiguration",
        "mConfiguration",
        "diff",
        "tmp",
        "createdConfig",
        "changedConfig",
        "tmp",
        "createdConfig",
        "isOtherSeqNewer",
        "changedConfig",
        "changedConfig",
        "tmp",
        "createdConfig",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "tmp",
        "token",
        "changedConfig",
        "changedConfig",
        "mCurDefaultDisplayDpi",
        "changedConfig",
        "densityDpi",
        "updateDefaultDensity",
        "handleConfigurationChanged",
        "changedConfig",
        "r",
        "mActivities",
        "get",
        "tmp",
        "token",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "r",
        "r",
        "r",
        "activity",
        "mConfigChangeFlags",
        "configChanges",
        "r",
        "mPreserveWindow",
        "tmp",
        "mPreserveWindow",
        "r",
        "activity",
        "mChangingConfigurations",
        "r",
        "mPreserveWindow",
        "WindowManagerGlobal",
        "getWindowSession",
        "prepareToReplaceWindows",
        "r",
        "token",
        "e",
        "e",
        "rethrowFromSystemServer",
        "handleRelaunchActivityInner",
        "r",
        "configChanges",
        "tmp",
        "pendingResults",
        "tmp",
        "pendingIntents",
        "pendingActions",
        "tmp",
        "startsNotResumed",
        "tmp",
        "overrideConfig",
        "pendingActions",
        "pendingActions",
        "setReportRelaunchToWindowManager",
        "token",
        "mH",
        "removeMessages",
        "H",
        "RELAUNCH_ACTIVITY",
        "token",
        "sendMessage",
        "H",
        "RELAUNCH_ACTIVITY",
        "token",
        "token",
        "r",
        "mActivities",
        "get",
        "token",
        "r",
        "Log",
        "w",
        "TAG",
        "prevState",
        "r",
        "getLifecycleState",
        "prevState",
        "ON_RESUME",
        "prevState",
        "ON_STOP",
        "Log",
        "w",
        "TAG",
        "prevState",
        "mergedConfiguration",
        "r",
        "createdConfig",
        "r",
        "createdConfig",
        "mConfiguration",
        "r",
        "overrideConfig",
        "activityRelaunchItem",
        "ActivityRelaunchItem",
        "obtain",
        "mergedConfiguration",
        "r",
        "mPreserveWindow",
        "lifecycleRequest",
        "TransactionExecutorHelper",
        "getLifecycleRequestForCurrentState",
        "r",
        "transaction",
        "ClientTransaction",
        "obtain",
        "mAppThread",
        "r",
        "token",
        "transaction",
        "addCallback",
        "activityRelaunchItem",
        "transaction",
        "setLifecycleStateRequest",
        "lifecycleRequest",
        "executeTransaction",
        "transaction",
        "r",
        "configChanges",
        "pendingResults",
        "pendingIntents",
        "pendingActions",
        "startsNotResumed",
        "overrideConfig",
        "reason",
        "customIntent",
        "r",
        "activity",
        "mIntent",
        "r",
        "paused",
        "performPauseActivity",
        "r",
        "reason",
        "r",
        "stopped",
        "callActivityOnStop",
        "r",
        "reason",
        "handleDestroyActivity",
        "r",
        "token",
        "configChanges",
        "reason",
        "r",
        "activity",
        "r",
        "r",
        "hideForNow",
        "r",
        "nextIdle",
        "pendingResults",
        "r",
        "pendingResults",
        "r",
        "pendingResults",
        "pendingResults",
        "r",
        "pendingResults",
        "addAll",
        "pendingResults",
        "pendingIntents",
        "r",
        "pendingIntents",
        "r",
        "pendingIntents",
        "pendingIntents",
        "r",
        "pendingIntents",
        "addAll",
        "pendingIntents",
        "r",
        "startsNotResumed",
        "startsNotResumed",
        "r",
        "overrideConfig",
        "overrideConfig",
        "handleLaunchActivity",
        "r",
        "pendingActions",
        "customIntent",
        "Override",
        "token",
        "pendingActions",
        "ActivityTaskManager",
        "getService",
        "activityRelaunched",
        "token",
        "r",
        "mActivities",
        "get",
        "token",
        "pendingActions",
        "shouldReportRelaunchToWindowManager",
        "r",
        "r",
        "r",
        "reportActivityRelaunched",
        "e",
        "e",
        "rethrowFromSystemServer",
        "r",
        "r",
        "state",
        "r",
        "state",
        "setAllowFds",
        "r",
        "isPersistable",
        "r",
        "persistentState",
        "mInstrumentation",
        "callActivityOnSaveInstanceState",
        "r",
        "activity",
        "r",
        "state",
        "r",
        "persistentState",
        "mInstrumentation",
        "callActivityOnSaveInstanceState",
        "r",
        "activity",
        "r",
        "state",
        "allActivities",
        "newConfig",
        "callbacks",
        "mResourcesManager",
        "NAPP",
        "mAllApplications",
        "size",
        "i",
        "i",
        "NAPP",
        "i",
        "callbacks",
        "add",
        "mAllApplications",
        "get",
        "i",
        "NACT",
        "mActivities",
        "size",
        "i",
        "i",
        "NACT",
        "i",
        "ar",
        "mActivities",
        "valueAt",
        "i",
        "a",
        "ar",
        "activity",
        "a",
        "thisConfig",
        "applyConfigCompatMainThread",
        "mCurDefaultDisplayDpi",
        "newConfig",
        "ar",
        "packageInfo",
        "getCompatibilityInfo",
        "ar",
        "activity",
        "mFinished",
        "allActivities",
        "ar",
        "paused",
        "callbacks",
        "add",
        "a",
        "thisConfig",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "ar",
        "activityInfo",
        "name",
        "thisConfig",
        "ar",
        "newConfig",
        "thisConfig",
        "NSVC",
        "mServices",
        "size",
        "i",
        "i",
        "NSVC",
        "i",
        "callbacks",
        "add",
        "mServices",
        "valueAt",
        "i",
        "mProviderMap",
        "NPRV",
        "mLocalProviders",
        "size",
        "i",
        "i",
        "NPRV",
        "i",
        "callbacks",
        "add",
        "mLocalProviders",
        "valueAt",
        "i",
        "mLocalProvider",
        "callbacks",
        "r",
        "newBaseConfig",
        "performConfigurationChangedForActivity",
        "r",
        "newBaseConfig",
        "r",
        "activity",
        "getDisplayId",
        "r",
        "newBaseConfig",
        "displayId",
        "movedToDifferentDisplay",
        "r",
        "tmpConfig",
        "setTo",
        "newBaseConfig",
        "r",
        "overrideConfig",
        "r",
        "tmpConfig",
        "updateFrom",
        "r",
        "overrideConfig",
        "reportedConfig",
        "performActivityConfigurationChanged",
        "r",
        "activity",
        "r",
        "tmpConfig",
        "r",
        "overrideConfig",
        "displayId",
        "movedToDifferentDisplay",
        "freeTextLayoutCachesIfNeeded",
        "r",
        "activity",
        "mCurrentConfig",
        "diff",
        "r",
        "tmpConfig",
        "reportedConfig",
        "NonNull",
        "newConfig",
        "newConfig",
        "updateFrom",
        "newConfig",
        "cb",
        "newConfig",
        "REPORT_TO_ACTIVITY",
        "contextThemeWrapperOverrideConfig",
        "cb",
        "contextThemeWrapper",
        "cb",
        "contextThemeWrapperOverrideConfig",
        "contextThemeWrapper",
        "getOverrideConfiguration",
        "configToReport",
        "createNewConfigAndUpdateIfNotNull",
        "newConfig",
        "contextThemeWrapperOverrideConfig",
        "cb",
        "onConfigurationChanged",
        "configToReport",
        "activity",
        "newConfig",
        "amOverrideConfig",
        "displayId",
        "movedToDifferentDisplay",
        "activity",
        "activityToken",
        "activity",
        "getActivityToken",
        "activityToken",
        "shouldChangeConfig",
        "activity",
        "mCurrentConfig",
        "shouldChangeConfig",
        "diff",
        "activity",
        "mCurrentConfig",
        "diffPublicOnly",
        "newConfig",
        "diff",
        "mResourcesManager",
        "isSameResourcesOverrideConfig",
        "activityToken",
        "amOverrideConfig",
        "mUpdatingSystemConfig",
        "activity",
        "mActivityInfo",
        "getRealConfigChanged",
        "diff",
        "REPORT_TO_ACTIVITY",
        "shouldChangeConfig",
        "shouldChangeConfig",
        "movedToDifferentDisplay",
        "contextThemeWrapperOverrideConfig",
        "activity",
        "getOverrideConfiguration",
        "finalOverrideConfig",
        "createNewConfigAndUpdateIfNotNull",
        "amOverrideConfig",
        "contextThemeWrapperOverrideConfig",
        "mResourcesManager",
        "updateResourcesForActivity",
        "activityToken",
        "finalOverrideConfig",
        "displayId",
        "movedToDifferentDisplay",
        "activity",
        "mConfigChangeFlags",
        "activity",
        "mCurrentConfig",
        "newConfig",
        "configToReport",
        "createNewConfigAndUpdateIfNotNull",
        "newConfig",
        "contextThemeWrapperOverrideConfig",
        "REPORT_TO_ACTIVITY",
        "configToReport",
        "movedToDifferentDisplay",
        "activity",
        "dispatchMovedToDisplay",
        "displayId",
        "configToReport",
        "shouldChangeConfig",
        "activity",
        "mCalled",
        "activity",
        "onConfigurationChanged",
        "configToReport",
        "activity",
        "mCalled",
        "activity",
        "getLocalClassName",
        "configToReport",
        "config",
        "mResourcesManager",
        "mResourcesManager",
        "applyConfigurationToResourcesLocked",
        "config",
        "displayDensity",
        "config",
        "mConfiguration",
        "mCompatConfiguration",
        "mCompatConfiguration",
        "mCompatConfiguration",
        "setTo",
        "mConfiguration",
        "mResourcesManager",
        "applyCompatConfigurationLocked",
        "displayDensity",
        "mCompatConfiguration",
        "config",
        "mCompatConfiguration",
        "config",
        "Override",
        "config",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "mCurDefaultDisplayDpi",
        "config",
        "densityDpi",
        "mUpdatingSystemConfig",
        "handleConfigurationChanged",
        "config",
        "mUpdatingSystemConfig",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "config",
        "compat",
        "configDiff",
        "equivalent",
        "systemTheme",
        "getSystemContext",
        "getTheme",
        "systemUiTheme",
        "getSystemUiContext",
        "getTheme",
        "mResourcesManager",
        "mPendingConfiguration",
        "mPendingConfiguration",
        "isOtherSeqNewer",
        "config",
        "config",
        "mPendingConfiguration",
        "mCurDefaultDisplayDpi",
        "config",
        "densityDpi",
        "updateDefaultDensity",
        "mPendingConfiguration",
        "config",
        "equivalent",
        "mConfiguration",
        "mConfiguration",
        "diffPublicOnly",
        "config",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "config",
        "mResourcesManager",
        "applyConfigurationToResourcesLocked",
        "config",
        "compat",
        "updateLocaleListFromAppContext",
        "mInitialApplication",
        "getApplicationContext",
        "mResourcesManager",
        "getConfiguration",
        "getLocales",
        "mConfiguration",
        "mConfiguration",
        "mConfiguration",
        "isOtherSeqNewer",
        "config",
        "compat",
        "configDiff",
        "mConfiguration",
        "updateFrom",
        "config",
        "config",
        "applyCompatConfiguration",
        "mCurDefaultDisplayDpi",
        "systemTheme",
        "getChangingConfigurations",
        "configDiff",
        "systemTheme",
        "rebase",
        "systemUiTheme",
        "getChangingConfigurations",
        "configDiff",
        "systemUiTheme",
        "rebase",
        "callbacks",
        "collectComponentCallbacks",
        "config",
        "freeTextLayoutCachesIfNeeded",
        "configDiff",
        "callbacks",
        "N",
        "callbacks",
        "size",
        "i",
        "i",
        "N",
        "i",
        "cb",
        "callbacks",
        "get",
        "i",
        "cb",
        "a",
        "cb",
        "performConfigurationChangedForActivity",
        "mActivities",
        "get",
        "a",
        "getActivityToken",
        "config",
        "equivalent",
        "performConfigurationChanged",
        "cb",
        "config",
        "NonNull",
        "ai",
        "Preconditions",
        "checkState",
        "mSystemThread",
        "handleApplicationInfoChanged",
        "ai",
        "VisibleForTesting",
        "visibility",
        "PACKAGE",
        "NonNull",
        "ai",
        "apk",
        "resApk",
        "mResourcesManager",
        "mPackages",
        "get",
        "ai",
        "packageName",
        "apk",
        "get",
        "mResourcePackages",
        "get",
        "ai",
        "packageName",
        "resApk",
        "get",
        "oldResDirs",
        "apk",
        "oldResDirs",
        "apk",
        "getResDir",
        "oldPaths",
        "LoadedApk",
        "makePaths",
        "apk",
        "getApplicationInfo",
        "oldPaths",
        "apk",
        "updateApplicationInfo",
        "ai",
        "oldPaths",
        "resApk",
        "oldResDirs",
        "resApk",
        "getResDir",
        "oldPaths",
        "LoadedApk",
        "makePaths",
        "resApk",
        "getApplicationInfo",
        "oldPaths",
        "resApk",
        "updateApplicationInfo",
        "ai",
        "oldPaths",
        "mResourcesManager",
        "mResourcesManager",
        "applyNewResourceDirsLocked",
        "ai",
        "oldResDirs",
        "ApplicationPackageManager",
        "configurationChanged",
        "newConfig",
        "newConfig",
        "assetsSeq",
        "mConfiguration",
        "mConfiguration",
        "assetsSeq",
        "handleConfigurationChanged",
        "newConfig",
        "relaunchAllActivities",
        "configDiff",
        "configDiff",
        "hasLocaleConfigChange",
        "configDiff",
        "ActivityInfo",
        "CONFIG_LOCALE",
        "hasLocaleConfigChange",
        "Canvas",
        "freeTextLayoutCaches",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "Override",
        "activityToken",
        "overrideConfig",
        "r",
        "mResourcesManager",
        "r",
        "mActivities",
        "get",
        "activityToken",
        "r",
        "DEBUG_CONFIGURATION",
        "Slog",
        "w",
        "TAG",
        "r",
        "r",
        "mPendingOverrideConfig",
        "overrideConfig",
        "Override",
        "activityToken",
        "overrideConfig",
        "displayId",
        "r",
        "mActivities",
        "get",
        "activityToken",
        "r",
        "r",
        "activity",
        "DEBUG_CONFIGURATION",
        "Slog",
        "w",
        "TAG",
        "r",
        "movedToDifferentDisplay",
        "displayId",
        "INVALID_DISPLAY",
        "displayId",
        "r",
        "activity",
        "getDisplayId",
        "r",
        "r",
        "mPendingOverrideConfig",
        "r",
        "mPendingOverrideConfig",
        "isOtherSeqNewer",
        "overrideConfig",
        "overrideConfig",
        "r",
        "mPendingOverrideConfig",
        "r",
        "mPendingOverrideConfig",
        "r",
        "overrideConfig",
        "r",
        "overrideConfig",
        "isOtherSeqNewer",
        "overrideConfig",
        "movedToDifferentDisplay",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "overrideConfig",
        "r",
        "overrideConfig",
        "r",
        "overrideConfig",
        "overrideConfig",
        "viewRoot",
        "r",
        "activity",
        "mDecor",
        "r",
        "activity",
        "mDecor",
        "getViewRootImpl",
        "movedToDifferentDisplay",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "r",
        "activityInfo",
        "name",
        "displayId",
        "overrideConfig",
        "reportedConfig",
        "performConfigurationChangedForActivity",
        "r",
        "mCompatConfiguration",
        "displayId",
        "viewRoot",
        "viewRoot",
        "onMovedToDisplay",
        "displayId",
        "reportedConfig",
        "DEBUG_CONFIGURATION",
        "Slog",
        "v",
        "TAG",
        "r",
        "activityInfo",
        "name",
        "overrideConfig",
        "performConfigurationChangedForActivity",
        "r",
        "mCompatConfiguration",
        "viewRoot",
        "viewRoot",
        "updateConfiguration",
        "displayId",
        "mSomeActivitiesChanged",
        "start",
        "profilerInfo",
        "profileType",
        "start",
        "profileType",
        "mProfiler",
        "setProfiler",
        "profilerInfo",
        "mProfiler",
        "startProfiling",
        "e",
        "Slog",
        "w",
        "TAG",
        "profilerInfo",
        "profileFile",
        "profilerInfo",
        "closeFd",
        "profileType",
        "mProfiler",
        "stopProfiling",
        "mProfiler",
        "mProfiler",
        "stopProfiling",
        "dhd",
        "dhd",
        "runGc",
        "gc",
        "runFinalization",
        "gc",
        "fd",
        "dhd",
        "fd",
        "dhd",
        "managed",
        "Debug",
        "dumpHprofData",
        "dhd",
        "path",
        "fd",
        "getFileDescriptor",
        "dhd",
        "mallocInfo",
        "Debug",
        "dumpNativeMallocInfo",
        "fd",
        "getFileDescriptor",
        "Debug",
        "dumpNativeHeap",
        "fd",
        "getFileDescriptor",
        "e",
        "dhd",
        "managed",
        "Slog",
        "w",
        "TAG",
        "dhd",
        "path",
        "e",
        "Slog",
        "w",
        "TAG",
        "e",
        "e",
        "Slog",
        "wtf",
        "TAG",
        "e",
        "ActivityManager",
        "getService",
        "dumpHeapFinished",
        "dhd",
        "path",
        "e",
        "e",
        "rethrowFromSystemServer",
        "dhd",
        "finishCallback",
        "dhd",
        "finishCallback",
        "sendResult",
        "cmd",
        "packages",
        "hasPkgInfo",
        "cmd",
        "ApplicationThreadConstants",
        "PACKAGE_REMOVED",
        "ApplicationThreadConstants",
        "PACKAGE_REMOVED_DONT_KILL",
        "killApp",
        "cmd",
        "ApplicationThreadConstants",
        "PACKAGE_REMOVED",
        "packages",
        "mResourcesManager",
        "i",
        "packages",
        "length",
        "i",
        "i",
        "hasPkgInfo",
        "mPackages",
        "get",
        "packages",
        "i",
        "get",
        "hasPkgInfo",
        "mResourcePackages",
        "get",
        "packages",
        "i",
        "get",
        "hasPkgInfo",
        "killApp",
        "mPackages",
        "remove",
        "packages",
        "i",
        "mResourcePackages",
        "remove",
        "packages",
        "i",
        "ApplicationThreadConstants",
        "PACKAGE_REPLACED",
        "packages",
        "packagesHandled",
        "mResourcesManager",
        "i",
        "packages",
        "length",
        "i",
        "i",
        "packageName",
        "packages",
        "i",
        "mPackages",
        "get",
        "packageName",
        "pkgInfo",
        "get",
        "pkgInfo",
        "hasPkgInfo",
        "mResourcePackages",
        "get",
        "packageName",
        "pkgInfo",
        "get",
        "pkgInfo",
        "hasPkgInfo",
        "pkgInfo",
        "packagesHandled",
        "add",
        "packageName",
        "aInfo",
        "sPackageManager",
        "getApplicationInfo",
        "packageName",
        "PackageManager",
        "GET_SHARED_LIBRARY_FILES",
        "UserHandle",
        "myUserId",
        "mActivities",
        "size",
        "ar",
        "mActivities",
        "values",
        "ar",
        "activityInfo",
        "applicationInfo",
        "packageName",
        "equals",
        "packageName",
        "ar",
        "activityInfo",
        "applicationInfo",
        "aInfo",
        "ar",
        "packageInfo",
        "pkgInfo",
        "oldResDirs",
        "pkgInfo",
        "getResDir",
        "oldPaths",
        "LoadedApk",
        "makePaths",
        "pkgInfo",
        "getApplicationInfo",
        "oldPaths",
        "pkgInfo",
        "updateApplicationInfo",
        "aInfo",
        "oldPaths",
        "mResourcesManager",
        "mResourcesManager",
        "applyNewResourceDirsLocked",
        "aInfo",
        "oldResDirs",
        "e",
        "getPackageManager",
        "notifyPackagesReplacedReceived",
        "packagesHandled",
        "toArray",
        "ignored",
        "ApplicationPackageManager",
        "handlePackageBroadcast",
        "cmd",
        "packages",
        "hasPkgInfo",
        "callbacks",
        "collectComponentCallbacks",
        "N",
        "callbacks",
        "size",
        "i",
        "i",
        "N",
        "i",
        "callbacks",
        "get",
        "i",
        "onLowMemory",
        "Process",
        "myUid",
        "Process",
        "SYSTEM_UID",
        "sqliteReleased",
        "SQLiteDatabase",
        "releaseMemory",
        "EventLog",
        "writeEvent",
        "SQLITE_MEM_RELEASED_EVENT_LOG_TAG",
        "sqliteReleased",
        "Canvas",
        "freeCaches",
        "Canvas",
        "freeTextLayoutCaches",
        "BinderInternal",
        "forceGc",
        "level",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "DEBUG_MEMORY_TRIM",
        "Slog",
        "v",
        "TAG",
        "level",
        "callbacks",
        "collectComponentCallbacks",
        "N",
        "callbacks",
        "size",
        "i",
        "i",
        "N",
        "i",
        "callbacks",
        "get",
        "i",
        "onTrimMemory",
        "level",
        "WindowManagerGlobal",
        "getInstance",
        "trimMemory",
        "level",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "SystemProperties",
        "getInt",
        "MAX_VALUE",
        "level",
        "unscheduleGcIdler",
        "doGcIfNeeded",
        "SystemProperties",
        "getInt",
        "MAX_VALUE",
        "level",
        "unschedulePurgeIdler",
        "purgePendingResources",
        "context",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "equals",
        "context",
        "getPackageName",
        "cacheDir",
        "context",
        "getCacheDir",
        "cacheDir",
        "setProperty",
        "cacheDir",
        "getAbsolutePath",
        "Log",
        "v",
        "TAG",
        "deviceContext",
        "context",
        "createDeviceProtectedStorageContext",
        "codeCacheDir",
        "deviceContext",
        "getCodeCacheDir",
        "codeCacheDir",
        "uid",
        "Process",
        "myUid",
        "packages",
        "getPackageManager",
        "getPackagesForUid",
        "uid",
        "packages",
        "HardwareRenderer",
        "setupDiskCache",
        "codeCacheDir",
        "RenderScriptCacheDir",
        "setupDiskCache",
        "codeCacheDir",
        "e",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "e",
        "rethrowFromSystemServer",
        "Log",
        "w",
        "TAG",
        "GraphicsEnvironment",
        "getInstance",
        "setup",
        "context",
        "mCoreSettings",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "densityDpi",
        "mCurDefaultDisplayDpi",
        "mDensityCompatMode",
        "densityDpi",
        "Configuration",
        "DENSITY_DPI_UNDEFINED",
        "densityDpi",
        "DisplayMetrics",
        "DENSITY_DEVICE",
        "DisplayMetrics",
        "DENSITY_DEVICE",
        "densityDpi",
        "Bitmap",
        "setDefaultDensity",
        "densityDpi",
        "appInfo",
        "insInfo",
        "appInfo",
        "primaryCpuAbi",
        "appInfo",
        "secondaryCpuAbi",
        "appInfo",
        "secondaryCpuAbi",
        "equals",
        "insInfo",
        "secondaryCpuAbi",
        "secondaryIsa",
        "VMRuntime",
        "getInstructionSet",
        "appInfo",
        "secondaryCpuAbi",
        "secondaryDexCodeIsa",
        "SystemProperties",
        "get",
        "secondaryIsa",
        "secondaryIsa",
        "secondaryDexCodeIsa",
        "isEmpty",
        "secondaryIsa",
        "secondaryDexCodeIsa",
        "runtimeIsa",
        "VMRuntime",
        "getRuntime",
        "vmInstructionSet",
        "runtimeIsa",
        "equals",
        "secondaryIsa",
        "insInfo",
        "secondaryNativeLibraryDir",
        "insInfo",
        "nativeLibraryDir",
        "context",
        "newLocaleList",
        "bestLocale",
        "context",
        "getResources",
        "getConfiguration",
        "getLocales",
        "get",
        "newLocaleListSize",
        "newLocaleList",
        "size",
        "i",
        "i",
        "newLocaleListSize",
        "i",
        "bestLocale",
        "equals",
        "newLocaleList",
        "get",
        "i",
        "LocaleList",
        "setDefault",
        "newLocaleList",
        "i",
        "LocaleList",
        "setDefault",
        "bestLocale",
        "newLocaleList",
        "data",
        "VMRuntime",
        "registerSensitiveThread",
        "property",
        "SystemProperties",
        "get",
        "property",
        "length",
        "VMDebug",
        "setAllocTrackerStackDepth",
        "parseInt",
        "property",
        "data",
        "trackAllocation",
        "DdmVmInternal",
        "enableRecentAllocations",
        "Process",
        "setStartTimes",
        "SystemClock",
        "elapsedRealtime",
        "SystemClock",
        "uptimeMillis",
        "mBoundApplication",
        "data",
        "mConfiguration",
        "data",
        "config",
        "mCompatConfiguration",
        "data",
        "config",
        "mProfiler",
        "agent",
        "data",
        "initProfilerInfo",
        "mProfiler",
        "profileFile",
        "data",
        "initProfilerInfo",
        "profileFile",
        "mProfiler",
        "profileFd",
        "data",
        "initProfilerInfo",
        "profileFd",
        "mProfiler",
        "samplingInterval",
        "data",
        "initProfilerInfo",
        "samplingInterval",
        "mProfiler",
        "autoStopProfiler",
        "data",
        "initProfilerInfo",
        "autoStopProfiler",
        "mProfiler",
        "streamingOutput",
        "data",
        "initProfilerInfo",
        "streamingOutput",
        "data",
        "initProfilerInfo",
        "attachAgentDuringBind",
        "agent",
        "data",
        "initProfilerInfo",
        "agent",
        "Process",
        "setArgV0",
        "data",
        "processName",
        "android",
        "ddm",
        "DdmHandleAppName",
        "setAppName",
        "data",
        "processName",
        "UserHandle",
        "myUserId",
        "VMRuntime",
        "setProcessPackageName",
        "data",
        "appInfo",
        "packageName",
        "VMRuntime",
        "setProcessDataDirectory",
        "data",
        "appInfo",
        "dataDir",
        "mProfiler",
        "profileFd",
        "mProfiler",
        "startProfiling",
        "data",
        "appInfo",
        "targetSdkVersion",
        "android",
        "os",
        "Build",
        "VERSION_CODES",
        "HONEYCOMB_MR1",
        "AsyncTask",
        "setDefaultExecutor",
        "AsyncTask",
        "THREAD_POOL_EXECUTOR",
        "UtilConfig",
        "setThrowExceptionForUpperArrayOutOfBounds",
        "data",
        "appInfo",
        "targetSdkVersion",
        "Build",
        "VERSION_CODES",
        "Q",
        "Message",
        "updateCheckRecycle",
        "data",
        "appInfo",
        "targetSdkVersion",
        "ImageDecoder",
        "sApiLevel",
        "data",
        "appInfo",
        "targetSdkVersion",
        "TimeZone",
        "setDefault",
        "LocaleList",
        "setDefault",
        "data",
        "config",
        "getLocales",
        "mResourcesManager",
        "mResourcesManager",
        "applyConfigurationToResourcesLocked",
        "data",
        "config",
        "data",
        "compatInfo",
        "mCurDefaultDisplayDpi",
        "data",
        "config",
        "densityDpi",
        "applyCompatConfiguration",
        "mCurDefaultDisplayDpi",
        "data",
        "info",
        "getPackageInfoNoCheck",
        "data",
        "appInfo",
        "data",
        "compatInfo",
        "agent",
        "handleAttachAgent",
        "agent",
        "data",
        "info",
        "data",
        "appInfo",
        "flags",
        "ApplicationInfo",
        "FLAG_SUPPORTS_SCREEN_DENSITIES",
        "mDensityCompatMode",
        "Bitmap",
        "setDefaultDensity",
        "DisplayMetrics",
        "DENSITY_DEFAULT",
        "updateDefaultDensity",
        "use24HourSetting",
        "mCoreSettings",
        "getString",
        "Settings",
        "TIME_12_24",
        "is24Hr",
        "use24HourSetting",
        "is24Hr",
        "equals",
        "use24HourSetting",
        "TRUE",
        "FALSE",
        "DateFormat",
        "set24HourTimePref",
        "is24Hr",
        "updateDebugViewAttributeState",
        "StrictMode",
        "initThreadDefaults",
        "data",
        "appInfo",
        "StrictMode",
        "initVmDefaults",
        "data",
        "appInfo",
        "data",
        "debugMode",
        "ApplicationThreadConstants",
        "DEBUG_OFF",
        "Debug",
        "changeDebugPort",
        "data",
        "debugMode",
        "ApplicationThreadConstants",
        "DEBUG_WAIT",
        "Slog",
        "w",
        "TAG",
        "data",
        "info",
        "getPackageName",
        "mgr",
        "ActivityManager",
        "getService",
        "mgr",
        "showWaitingForDebugger",
        "mAppThread",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "Debug",
        "waitForDebugger",
        "mgr",
        "showWaitingForDebugger",
        "mAppThread",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "Slog",
        "w",
        "TAG",
        "data",
        "info",
        "getPackageName",
        "isAppProfileable",
        "data",
        "appInfo",
        "isProfileableByShell",
        "Trace",
        "setAppTracingAllowed",
        "isAppProfileable",
        "isAppProfileable",
        "data",
        "enableBinderTracking",
        "Binder",
        "enableTracing",
        "isAppProfileable",
        "Build",
        "IS_DEBUGGABLE",
        "nInitZygoteChildHeapProfiling",
        "isAppDebuggable",
        "data",
        "appInfo",
        "flags",
        "ApplicationInfo",
        "FLAG_DEBUGGABLE",
        "HardwareRenderer",
        "setDebuggingEnabled",
        "isAppDebuggable",
        "Build",
        "IS_DEBUGGABLE",
        "HardwareRenderer",
        "setPackageName",
        "data",
        "appInfo",
        "packageName",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "b",
        "ServiceManager",
        "getService",
        "Context",
        "CONNECTIVITY_SERVICE",
        "b",
        "service",
        "IConnectivityManager",
        "Stub",
        "asInterface",
        "b",
        "Proxy",
        "setHttpProxySystemProperty",
        "service",
        "getProxyForNetwork",
        "e",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "e",
        "rethrowFromSystemServer",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "ii",
        "data",
        "instrumentationName",
        "ii",
        "getPackageManager",
        "getInstrumentationInfo",
        "data",
        "instrumentationName",
        "e",
        "data",
        "instrumentationName",
        "Objects",
        "equals",
        "data",
        "appInfo",
        "primaryCpuAbi",
        "ii",
        "primaryCpuAbi",
        "Objects",
        "equals",
        "data",
        "appInfo",
        "secondaryCpuAbi",
        "ii",
        "secondaryCpuAbi",
        "Slog",
        "w",
        "TAG",
        "data",
        "appInfo",
        "packageName",
        "data",
        "appInfo",
        "primaryCpuAbi",
        "data",
        "appInfo",
        "secondaryCpuAbi",
        "ii",
        "packageName",
        "ii",
        "primaryCpuAbi",
        "ii",
        "secondaryCpuAbi",
        "mInstrumentationPackageName",
        "ii",
        "packageName",
        "mInstrumentationAppDir",
        "ii",
        "sourceDir",
        "mInstrumentationSplitAppDirs",
        "ii",
        "splitSourceDirs",
        "mInstrumentationLibDir",
        "getInstrumentationLibrary",
        "data",
        "appInfo",
        "ii",
        "mInstrumentedAppDir",
        "data",
        "info",
        "getAppDir",
        "mInstrumentedSplitAppDirs",
        "data",
        "info",
        "getSplitAppDirs",
        "mInstrumentedLibDir",
        "data",
        "info",
        "getLibDir",
        "ii",
        "appContext",
        "ContextImpl",
        "createAppContext",
        "data",
        "info",
        "updateLocaleListFromAppContext",
        "appContext",
        "mResourcesManager",
        "getConfiguration",
        "getLocales",
        "Process",
        "isIsolated",
        "oldMask",
        "StrictMode",
        "allowThreadDiskWritesMask",
        "setupGraphicsSupport",
        "appContext",
        "StrictMode",
        "setThreadPolicyMask",
        "oldMask",
        "HardwareRenderer",
        "setIsolatedProcess",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "NetworkSecurityConfigProvider",
        "install",
        "appContext",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "ii",
        "instrApp",
        "instrApp",
        "getPackageManager",
        "getApplicationInfo",
        "ii",
        "packageName",
        "UserHandle",
        "myUserId",
        "e",
        "instrApp",
        "instrApp",
        "instrApp",
        "ii",
        "copyTo",
        "instrApp",
        "instrApp",
        "initForUser",
        "UserHandle",
        "myUserId",
        "pi",
        "getPackageInfo",
        "instrApp",
        "data",
        "compatInfo",
        "appContext",
        "getClassLoader",
        "instrContext",
        "ContextImpl",
        "createAppContext",
        "pi",
        "appContext",
        "getOpPackageName",
        "cl",
        "instrContext",
        "getClassLoader",
        "mInstrumentation",
        "cl",
        "loadClass",
        "data",
        "instrumentationName",
        "getClassName",
        "newInstance",
        "e",
        "data",
        "instrumentationName",
        "e",
        "toString",
        "e",
        "component",
        "ii",
        "packageName",
        "ii",
        "name",
        "mInstrumentation",
        "init",
        "instrContext",
        "appContext",
        "component",
        "data",
        "instrumentationWatcher",
        "data",
        "instrumentationUiAutomationConnection",
        "mProfiler",
        "profileFile",
        "ii",
        "handleProfiling",
        "mProfiler",
        "profileFd",
        "mProfiler",
        "handlingProfiling",
        "file",
        "mProfiler",
        "profileFile",
        "file",
        "getParentFile",
        "mkdirs",
        "Debug",
        "startMethodTracing",
        "file",
        "toString",
        "mInstrumentation",
        "mInstrumentation",
        "basicInit",
        "data",
        "appInfo",
        "flags",
        "ApplicationInfo",
        "FLAG_LARGE_HEAP",
        "dalvik",
        "system",
        "VMRuntime",
        "getRuntime",
        "clearGrowthLimit",
        "dalvik",
        "system",
        "VMRuntime",
        "getRuntime",
        "clampGrowthLimit",
        "app",
        "savedPolicy",
        "StrictMode",
        "allowThreadDiskWrites",
        "writesAllowedPolicy",
        "StrictMode",
        "getThreadPolicy",
        "flags",
        "mBoundApplication",
        "mBoundApplication",
        "appInfo",
        "flags",
        "flags",
        "flags",
        "ApplicationInfo",
        "FLAG_SYSTEM",
        "Fartext",
        "initConfig",
        "Fartext",
        "loadGadget",
        "Fartext",
        "loadConfigSo",
        "app",
        "data",
        "info",
        "makeApplication",
        "data",
        "restrictedBackupMode",
        "app",
        "setAutofillOptions",
        "data",
        "autofillOptions",
        "app",
        "setContentCaptureOptions",
        "data",
        "contentCaptureOptions",
        "mInitialApplication",
        "app",
        "flags",
        "flags",
        "ApplicationInfo",
        "FLAG_SYSTEM",
        "Fartext",
        "loadConfigDex",
        "mInitialApplication",
        "Fartext",
        "fartthread",
        "data",
        "restrictedBackupMode",
        "ArrayUtils",
        "isEmpty",
        "data",
        "providers",
        "installContentProviders",
        "app",
        "data",
        "providers",
        "mInstrumentation",
        "onCreate",
        "data",
        "instrumentationArgs",
        "e",
        "data",
        "instrumentationName",
        "e",
        "toString",
        "e",
        "mInstrumentation",
        "callApplicationOnCreate",
        "app",
        "e",
        "mInstrumentation",
        "onException",
        "app",
        "e",
        "app",
        "getClass",
        "getName",
        "e",
        "toString",
        "e",
        "data",
        "appInfo",
        "targetSdkVersion",
        "Build",
        "VERSION_CODES",
        "O_MR1",
        "StrictMode",
        "getThreadPolicy",
        "equals",
        "writesAllowedPolicy",
        "StrictMode",
        "setThreadPolicy",
        "savedPolicy",
        "FontsContract",
        "setApplicationContextForResources",
        "appContext",
        "Process",
        "isIsolated",
        "info",
        "getPackageManager",
        "getApplicationInfo",
        "data",
        "appInfo",
        "packageName",
        "PackageManager",
        "GET_META_DATA",
        "UserHandle",
        "myUserId",
        "info",
        "metaData",
        "preloadedFontsResource",
        "info",
        "metaData",
        "getInt",
        "ApplicationInfo",
        "METADATA_PRELOADED_FONTS",
        "preloadedFontsResource",
        "data",
        "info",
        "getResources",
        "preloadFonts",
        "preloadedFontsResource",
        "e",
        "e",
        "rethrowFromSystemServer",
        "resultCode",
        "results",
        "am",
        "ActivityManager",
        "getService",
        "mProfiler",
        "profileFile",
        "mProfiler",
        "handlingProfiling",
        "mProfiler",
        "profileFd",
        "Debug",
        "stopMethodTracing",
        "am",
        "finishInstrumentation",
        "mAppThread",
        "resultCode",
        "results",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "UnsupportedAppUsage",
        "context",
        "providers",
        "results",
        "cpi",
        "providers",
        "DEBUG_PROVIDER",
        "buf",
        "buf",
        "append",
        "buf",
        "append",
        "cpi",
        "authority",
        "buf",
        "append",
        "buf",
        "append",
        "cpi",
        "name",
        "Log",
        "i",
        "TAG",
        "buf",
        "toString",
        "cph",
        "installProvider",
        "context",
        "cpi",
        "cph",
        "cph",
        "noReleaseNeeded",
        "results",
        "add",
        "cph",
        "ActivityManager",
        "getService",
        "publishContentProviders",
        "getApplicationThread",
        "results",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "UnsupportedAppUsage",
        "c",
        "auth",
        "userId",
        "stable",
        "provider",
        "acquireExistingProvider",
        "c",
        "auth",
        "userId",
        "stable",
        "provider",
        "provider",
        "holder",
        "getGetProviderLock",
        "auth",
        "userId",
        "holder",
        "ActivityManager",
        "getService",
        "getContentProvider",
        "getApplicationThread",
        "c",
        "getOpPackageName",
        "auth",
        "userId",
        "stable",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "holder",
        "Slog",
        "e",
        "TAG",
        "auth",
        "holder",
        "installProvider",
        "c",
        "holder",
        "holder",
        "info",
        "holder",
        "noReleaseNeeded",
        "stable",
        "holder",
        "provider",
        "auth",
        "userId",
        "key",
        "auth",
        "userId",
        "mGetProviderLocks",
        "mGetProviderLocks",
        "get",
        "key",
        "key",
        "mGetProviderLocks",
        "put",
        "key",
        "prc",
        "stable",
        "stable",
        "prc",
        "stableCount",
        "prc",
        "stableCount",
        "unstableDelta",
        "prc",
        "removePending",
        "unstableDelta",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "removePending",
        "mH",
        "removeMessages",
        "H",
        "REMOVE_PROVIDER",
        "prc",
        "unstableDelta",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "holder",
        "info",
        "name",
        "unstableDelta",
        "ActivityManager",
        "getService",
        "refContentProvider",
        "prc",
        "holder",
        "connection",
        "unstableDelta",
        "e",
        "prc",
        "unstableCount",
        "prc",
        "unstableCount",
        "prc",
        "removePending",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "removePending",
        "mH",
        "removeMessages",
        "H",
        "REMOVE_PROVIDER",
        "prc",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "holder",
        "info",
        "name",
        "ActivityManager",
        "getService",
        "refContentProvider",
        "prc",
        "holder",
        "connection",
        "e",
        "UnsupportedAppUsage",
        "c",
        "auth",
        "userId",
        "stable",
        "mProviderMap",
        "key",
        "auth",
        "userId",
        "pr",
        "mProviderMap",
        "get",
        "key",
        "pr",
        "provider",
        "pr",
        "mProvider",
        "jBinder",
        "provider",
        "asBinder",
        "jBinder",
        "isBinderAlive",
        "Log",
        "i",
        "TAG",
        "auth",
        "userId",
        "handleUnstableProviderDiedLocked",
        "jBinder",
        "prc",
        "mProviderRefCountMap",
        "get",
        "jBinder",
        "prc",
        "incProviderRefLocked",
        "prc",
        "stable",
        "provider",
        "UnsupportedAppUsage",
        "provider",
        "stable",
        "provider",
        "jBinder",
        "provider",
        "asBinder",
        "mProviderMap",
        "prc",
        "mProviderRefCountMap",
        "get",
        "jBinder",
        "prc",
        "lastRef",
        "stable",
        "prc",
        "stableCount",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "stableCount",
        "prc",
        "stableCount",
        "lastRef",
        "prc",
        "unstableCount",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "lastRef",
        "prc",
        "holder",
        "info",
        "name",
        "ActivityManager",
        "getService",
        "refContentProvider",
        "prc",
        "holder",
        "connection",
        "lastRef",
        "e",
        "prc",
        "unstableCount",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "unstableCount",
        "prc",
        "unstableCount",
        "lastRef",
        "prc",
        "stableCount",
        "lastRef",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "holder",
        "info",
        "name",
        "ActivityManager",
        "getService",
        "refContentProvider",
        "prc",
        "holder",
        "connection",
        "e",
        "lastRef",
        "prc",
        "removePending",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "holder",
        "info",
        "name",
        "prc",
        "removePending",
        "msg",
        "mH",
        "obtainMessage",
        "H",
        "REMOVE_PROVIDER",
        "prc",
        "mH",
        "sendMessageDelayed",
        "msg",
        "CONTENT_PROVIDER_RETAIN_TIME",
        "Slog",
        "w",
        "TAG",
        "prc",
        "holder",
        "info",
        "name",
        "prc",
        "mProviderMap",
        "prc",
        "removePending",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "removePending",
        "jBinder",
        "prc",
        "holder",
        "provider",
        "asBinder",
        "existingPrc",
        "mProviderRefCountMap",
        "get",
        "jBinder",
        "existingPrc",
        "prc",
        "mProviderRefCountMap",
        "remove",
        "jBinder",
        "i",
        "mProviderMap",
        "size",
        "i",
        "i",
        "pr",
        "mProviderMap",
        "valueAt",
        "i",
        "myBinder",
        "pr",
        "mProvider",
        "asBinder",
        "myBinder",
        "jBinder",
        "mProviderMap",
        "removeAt",
        "i",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "prc",
        "holder",
        "info",
        "name",
        "ActivityManager",
        "getService",
        "removeContentProvider",
        "prc",
        "holder",
        "connection",
        "e",
        "UnsupportedAppUsage",
        "provider",
        "fromClient",
        "mProviderMap",
        "handleUnstableProviderDiedLocked",
        "provider",
        "fromClient",
        "provider",
        "fromClient",
        "prc",
        "mProviderRefCountMap",
        "get",
        "provider",
        "prc",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "provider",
        "prc",
        "holder",
        "info",
        "name",
        "mProviderRefCountMap",
        "remove",
        "provider",
        "i",
        "mProviderMap",
        "size",
        "i",
        "i",
        "pr",
        "mProviderMap",
        "valueAt",
        "i",
        "pr",
        "pr",
        "mProvider",
        "asBinder",
        "provider",
        "Slog",
        "i",
        "TAG",
        "pr",
        "mProvider",
        "toString",
        "mProviderMap",
        "removeAt",
        "i",
        "fromClient",
        "ActivityManager",
        "getService",
        "unstableProviderDied",
        "prc",
        "holder",
        "connection",
        "e",
        "provider",
        "mProviderMap",
        "prc",
        "mProviderRefCountMap",
        "get",
        "provider",
        "prc",
        "ActivityManager",
        "getService",
        "appNotRespondingViaProvider",
        "prc",
        "holder",
        "connection",
        "e",
        "e",
        "rethrowFromSystemServer",
        "provider",
        "localProvider",
        "holder",
        "auths",
        "holder",
        "info",
        "authority",
        "split",
        "userId",
        "UserHandle",
        "getUserId",
        "holder",
        "info",
        "applicationInfo",
        "uid",
        "provider",
        "auth",
        "auths",
        "auth",
        "ContactsContract",
        "AUTHORITY",
        "CallLog",
        "AUTHORITY",
        "CallLog",
        "SHADOW_AUTHORITY",
        "BlockedNumberContract",
        "AUTHORITY",
        "CalendarContract",
        "AUTHORITY",
        "Downloads",
        "Impl",
        "AUTHORITY",
        "Binder",
        "allowBlocking",
        "provider",
        "asBinder",
        "pcr",
        "auths",
        "provider",
        "localProvider",
        "holder",
        "auth",
        "auths",
        "key",
        "auth",
        "userId",
        "existing",
        "mProviderMap",
        "get",
        "key",
        "existing",
        "Slog",
        "w",
        "TAG",
        "pcr",
        "mHolder",
        "info",
        "name",
        "auth",
        "mProviderMap",
        "put",
        "key",
        "pcr",
        "pcr",
        "UnsupportedAppUsage",
        "context",
        "holder",
        "info",
        "noisy",
        "noReleaseNeeded",
        "stable",
        "localProvider",
        "provider",
        "holder",
        "holder",
        "provider",
        "DEBUG_PROVIDER",
        "noisy",
        "Slog",
        "d",
        "TAG",
        "info",
        "authority",
        "info",
        "name",
        "c",
        "ai",
        "info",
        "applicationInfo",
        "context",
        "getPackageName",
        "equals",
        "ai",
        "packageName",
        "c",
        "context",
        "mInitialApplication",
        "mInitialApplication",
        "getPackageName",
        "equals",
        "ai",
        "packageName",
        "c",
        "mInitialApplication",
        "c",
        "context",
        "createPackageContext",
        "ai",
        "packageName",
        "Context",
        "CONTEXT_INCLUDE_CODE",
        "e",
        "c",
        "Slog",
        "w",
        "TAG",
        "ai",
        "packageName",
        "info",
        "name",
        "info",
        "splitName",
        "c",
        "c",
        "createContextForSplit",
        "info",
        "splitName",
        "e",
        "e",
        "cl",
        "c",
        "getClassLoader",
        "packageInfo",
        "peekPackageInfo",
        "ai",
        "packageName",
        "packageInfo",
        "packageInfo",
        "getSystemContext",
        "mPackageInfo",
        "localProvider",
        "packageInfo",
        "getAppFactory",
        "instantiateProvider",
        "cl",
        "info",
        "name",
        "provider",
        "localProvider",
        "getIContentProvider",
        "provider",
        "Slog",
        "e",
        "TAG",
        "info",
        "name",
        "info",
        "applicationInfo",
        "sourceDir",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "info",
        "name",
        "localProvider",
        "attachInfo",
        "c",
        "info",
        "e",
        "mInstrumentation",
        "onException",
        "e",
        "info",
        "name",
        "e",
        "toString",
        "e",
        "provider",
        "holder",
        "provider",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "info",
        "authority",
        "info",
        "name",
        "retHolder",
        "mProviderMap",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "provider",
        "info",
        "name",
        "jBinder",
        "provider",
        "asBinder",
        "localProvider",
        "cname",
        "info",
        "packageName",
        "info",
        "name",
        "pr",
        "mLocalProvidersByName",
        "get",
        "cname",
        "pr",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "provider",
        "pr",
        "mProvider",
        "holder",
        "info",
        "holder",
        "provider",
        "provider",
        "holder",
        "noReleaseNeeded",
        "pr",
        "installProviderAuthoritiesLocked",
        "provider",
        "localProvider",
        "holder",
        "mLocalProviders",
        "put",
        "jBinder",
        "pr",
        "mLocalProvidersByName",
        "put",
        "cname",
        "pr",
        "retHolder",
        "pr",
        "mHolder",
        "prc",
        "mProviderRefCountMap",
        "get",
        "jBinder",
        "prc",
        "DEBUG_PROVIDER",
        "Slog",
        "v",
        "TAG",
        "noReleaseNeeded",
        "incProviderRefLocked",
        "prc",
        "stable",
        "ActivityManager",
        "getService",
        "removeContentProvider",
        "holder",
        "connection",
        "stable",
        "e",
        "client",
        "installProviderAuthoritiesLocked",
        "provider",
        "localProvider",
        "holder",
        "noReleaseNeeded",
        "prc",
        "holder",
        "client",
        "prc",
        "stable",
        "holder",
        "client",
        "holder",
        "client",
        "mProviderRefCountMap",
        "put",
        "jBinder",
        "prc",
        "retHolder",
        "prc",
        "holder",
        "retHolder",
        "entryPoint",
        "entryPointArgs",
        "main",
        "Class",
        "forName",
        "entryPoint",
        "getMethod",
        "main",
        "invoke",
        "entryPointArgs",
        "e",
        "e",
        "exit",
        "UnsupportedAppUsage",
        "system",
        "startSeq",
        "sCurrentActivityThread",
        "mSystemThread",
        "system",
        "system",
        "android",
        "ddm",
        "DdmHandleAppName",
        "setAppName",
        "UserHandle",
        "myUserId",
        "RuntimeInit",
        "setApplicationObject",
        "mAppThread",
        "asBinder",
        "mgr",
        "ActivityManager",
        "getService",
        "mgr",
        "attachApplication",
        "mAppThread",
        "startSeq",
        "ex",
        "ex",
        "rethrowFromSystemServer",
        "BinderInternal",
        "addGcWatcher",
        "Override",
        "mSomeActivitiesChanged",
        "runtime",
        "Runtime",
        "getRuntime",
        "dalvikMax",
        "runtime",
        "maxMemory",
        "dalvikUsed",
        "runtime",
        "totalMemory",
        "runtime",
        "freeMemory",
        "dalvikUsed",
        "dalvikMax",
        "DEBUG_MEMORY_TRIM",
        "Slog",
        "d",
        "TAG",
        "dalvikMax",
        "runtime",
        "totalMemory",
        "dalvikUsed",
        "mSomeActivitiesChanged",
        "ActivityTaskManager",
        "getService",
        "releaseSomeActivities",
        "mAppThread",
        "e",
        "e",
        "rethrowFromSystemServer",
        "android",
        "ddm",
        "DdmHandleAppName",
        "setAppName",
        "UserHandle",
        "myUserId",
        "mInstrumentation",
        "mInstrumentation",
        "basicInit",
        "context",
        "ContextImpl",
        "createAppContext",
        "getSystemContext",
        "mPackageInfo",
        "mInitialApplication",
        "context",
        "mPackageInfo",
        "makeApplication",
        "mInitialApplication",
        "onCreate",
        "e",
        "e",
        "toString",
        "e",
        "configChangedCallback",
        "globalConfig",
        "mResourcesManager",
        "mResourcesManager",
        "applyConfigurationToResourcesLocked",
        "globalConfig",
        "updateLocaleListFromAppContext",
        "mInitialApplication",
        "getApplicationContext",
        "mResourcesManager",
        "getConfiguration",
        "getLocales",
        "mPendingConfiguration",
        "mPendingConfiguration",
        "isOtherSeqNewer",
        "globalConfig",
        "mPendingConfiguration",
        "globalConfig",
        "sendMessage",
        "H",
        "CONFIGURATION_CHANGED",
        "globalConfig",
        "ViewRootImpl",
        "addConfigCallback",
        "configChangedCallback",
        "UnsupportedAppUsage",
        "ActivityManager",
        "isHighEndGfx",
        "ThreadedRenderer",
        "disable",
        "ThreadedRenderer",
        "enableForegroundTrimming",
        "thread",
        "thread",
        "attach",
        "thread",
        "NonNull",
        "context",
        "cm",
        "ConnectivityManager",
        "context",
        "Proxy",
        "setHttpProxySystemProperty",
        "cm",
        "getDefaultProxy",
        "UnsupportedAppUsage",
        "providers",
        "providers",
        "installContentProviders",
        "mInitialApplication",
        "providers",
        "key",
        "defaultValue",
        "mResourcesManager",
        "mCoreSettings",
        "mCoreSettings",
        "getInt",
        "key",
        "defaultValue",
        "defaultValue",
        "DEPRECATE_DATA_COLUMNS",
        "Os",
        "getDefault",
        "Os",
        "compareAndSetDefault",
        "os",
        "os",
        "path",
        "mode",
        "uri",
        "ContentResolver",
        "translateDeprecatedDataPath",
        "path",
        "Log",
        "v",
        "TAG",
        "path",
        "uri",
        "cr",
        "currentActivityThread",
        "getApplication",
        "getContentResolver",
        "fd",
        "fd",
        "setInt$",
        "cr",
        "openFileDescriptor",
        "uri",
        "FileUtils",
        "translateModePosixToString",
        "mode",
        "detachFd",
        "fd",
        "e",
        "e",
        "getMessage",
        "OsConstants",
        "EACCES",
        "e",
        "e",
        "getMessage",
        "OsConstants",
        "ENOENT",
        "path",
        "uri",
        "ContentResolver",
        "translateDeprecatedDataPath",
        "path",
        "Log",
        "v",
        "TAG",
        "path",
        "uri",
        "cr",
        "currentActivityThread",
        "getApplication",
        "getContentResolver",
        "cr",
        "uri",
        "e",
        "e",
        "getMessage",
        "OsConstants",
        "EACCES",
        "e",
        "e",
        "getMessage",
        "OsConstants",
        "ENOENT",
        "Override",
        "path",
        "mode",
        "path",
        "path",
        "startsWith",
        "DEPRECATE_DATA_PREFIX",
        "IoUtils",
        "closeQuietly",
        "openDeprecatedDataPath",
        "path",
        "FileUtils",
        "translateModeAccessToPosix",
        "mode",
        "access",
        "path",
        "mode",
        "Override",
        "path",
        "flags",
        "mode",
        "path",
        "path",
        "startsWith",
        "DEPRECATE_DATA_PREFIX",
        "openDeprecatedDataPath",
        "path",
        "mode",
        "open",
        "path",
        "flags",
        "mode",
        "Override",
        "path",
        "path",
        "path",
        "startsWith",
        "DEPRECATE_DATA_PREFIX",
        "fd",
        "openDeprecatedDataPath",
        "path",
        "OsConstants",
        "O_RDONLY",
        "android",
        "system",
        "Os",
        "fstat",
        "fd",
        "IoUtils",
        "closeQuietly",
        "fd",
        "stat",
        "path",
        "Override",
        "path",
        "path",
        "path",
        "startsWith",
        "DEPRECATE_DATA_PREFIX",
        "deleteDeprecatedDataPath",
        "path",
        "unlink",
        "path",
        "Override",
        "path",
        "path",
        "path",
        "startsWith",
        "DEPRECATE_DATA_PREFIX",
        "deleteDeprecatedDataPath",
        "path",
        "remove",
        "path",
        "Override",
        "oldPath",
        "newPath",
        "rename",
        "oldPath",
        "newPath",
        "e",
        "e",
        "errno",
        "OsConstants",
        "EXDEV",
        "Log",
        "v",
        "TAG",
        "oldPath",
        "newPath",
        "Files",
        "move",
        "oldPath",
        "toPath",
        "newPath",
        "toPath",
        "e2",
        "e",
        "e",
        "args",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "AndroidOs",
        "install",
        "CloseGuard",
        "setEnabled",
        "Environment",
        "initForCurrentUser",
        "configDir",
        "Environment",
        "getUserConfigDirectory",
        "UserHandle",
        "myUserId",
        "TrustedCertificateStore",
        "setDefaultUserDirectory",
        "configDir",
        "Process",
        "setArgV0",
        "Looper",
        "prepareMainLooper",
        "startSeq",
        "args",
        "i",
        "args",
        "length",
        "i",
        "i",
        "args",
        "i",
        "args",
        "i",
        "startsWith",
        "PROC_START_SEQ_IDENT",
        "startSeq",
        "parseLong",
        "args",
        "i",
        "substring",
        "PROC_START_SEQ_IDENT",
        "length",
        "thread",
        "thread",
        "attach",
        "startSeq",
        "sMainThreadHandler",
        "sMainThreadHandler",
        "thread",
        "getHandler",
        "Looper",
        "myLooper",
        "setMessageLogging",
        "Log",
        "DEBUG",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "Looper",
        "loop",
        "Trace",
        "traceBegin",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "nPurgePendingResources",
        "Trace",
        "traceEnd",
        "Trace",
        "TRACE_TAG_ACTIVITY_MANAGER",
        "fd"
    ],
    "literals": [
        "\"ActivityThread\"",
        "\"seq=\"",
        "\"mNetworkPolicyLock\"",
        "\"mAppThread\"",
        "\"mAppThread\"",
        "\"mResourcesManager\"",
        "\"mResourcesManager\"",
        "\"mResourcesManager\"",
        "\"mResourcesManager\"",
        "\"this\"",
        "\"mGetProviderLocks\"",
        "\"this\"",
        "\"Received config update for non-existing activity\"",
        "\"ActivityRecord{\"",
        "\" token=\"",
        "\" \"",
        "\"no component name\"",
        "\"}\"",
        "\"ActivityClientRecord{\"",
        "\"paused=\"",
        "\", stopped=\"",
        "\", hideForNow=\"",
        "\", startsNotResumed=\"",
        "\", isForward=\"",
        "\", pendingConfigChanges=\"",
        "\", preserveWindow=\"",
        "\", Activity{\"",
        "\"resumed=\"",
        "\", stopped=\"",
        "\", finished=\"",
        "\", destroyed=\"",
        "\", startedActivity=\"",
        "\", changingConfigurations=\"",
        "\"}\"",
        "\"}\"",
        "\"ReceiverData{intent=\"",
        "\" packageName=\"",
        "\" resultCode=\"",
        "\" resultData=\"",
        "\" resultExtras=\"",
        "\"}\"",
        "\"CreateBackupAgentData{appInfo=\"",
        "\" backupAgent=\"",
        "\" mode=\"",
        "\" userId=\"",
        "\"}\"",
        "\"CreateServiceData{token=\"",
        "\" className=\"",
        "\" packageName=\"",
        "\" intent=\"",
        "\"}\"",
        "\"BindServiceData{token=\"",
        "\" intent=\"",
        "\"}\"",
        "\"ServiceArgsData{token=\"",
        "\" startId=\"",
        "\" args=\"",
        "\"}\"",
        "\"AppBindData{appInfo=\"",
        "\"}\"",
        "\"debug.traceview-buffer-size-mb\"",
        "\"Profiling failed on path \"",
        "\"Failure closing profile fd\"",
        "\"  %8s %8s %14s %14s  %s\"",
        "\"scheduleBindService token=\"",
        "\" intent=\"",
        "\" uid=\"",
        "\" pid=\"",
        "\"package\"",
        "\"Service \"",
        "\" should be accessible by this app\"",
        "\"dumpService failed\"",
        "\"Failed to duplicate heap dump file descriptor\"",
        "\"Failed setting process group to \"",
        "\"dumpActivity failed\"",
        "\"dumpProvider failed\"",
        "\"unknown\"",
        "\" \"",
        "\" Objects\"",
        "\"Views:\"",
        "\"ViewRootImpl:\"",
        "\"AppContexts:\"",
        "\"Activities:\"",
        "\"Assets:\"",
        "\"AssetManagers:\"",
        "\"Local Binders:\"",
        "\"Proxy Binders:\"",
        "\"Parcel memory:\"",
        "\"Parcel count:\"",
        "\"Death Recipients:\"",
        "\"OpenSSL Sockets:\"",
        "\"WebViews:\"",
        "\" \"",
        "\" SQL\"",
        "\"MEMORY_USED:\"",
        "\"PAGECACHE_OVERFLOW:\"",
        "\"MALLOC_SIZE:\"",
        "\" \"",
        "\" DATABASES\"",
        "\"pgsz\"",
        "\"dbsz\"",
        "\"Lookaside(b)\"",
        "\"cache\"",
        "\"Dbname\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\" Asset Allocations\"",
        "\" \"",
        "\" Unreachable memory\"",
        "\"unknown\"",
        "\"a\"",
        "\"Could not dup FD \"",
        "\"BIND_APPLICATION\"",
        "\"EXIT_APPLICATION\"",
        "\"RECEIVER\"",
        "\"CREATE_SERVICE\"",
        "\"SERVICE_ARGS\"",
        "\"STOP_SERVICE\"",
        "\"CONFIGURATION_CHANGED\"",
        "\"CLEAN_UP_CONTEXT\"",
        "\"GC_WHEN_IDLE\"",
        "\"BIND_SERVICE\"",
        "\"UNBIND_SERVICE\"",
        "\"DUMP_SERVICE\"",
        "\"LOW_MEMORY\"",
        "\"PROFILER_CONTROL\"",
        "\"CREATE_BACKUP_AGENT\"",
        "\"DESTROY_BACKUP_AGENT\"",
        "\"SUICIDE\"",
        "\"REMOVE_PROVIDER\"",
        "\"DISPATCH_PACKAGE_BROADCAST\"",
        "\"SCHEDULE_CRASH\"",
        "\"DUMP_HEAP\"",
        "\"DUMP_ACTIVITY\"",
        "\"SLEEPING\"",
        "\"SET_CORE_SETTINGS\"",
        "\"UPDATE_PACKAGE_COMPATIBILITY_INFO\"",
        "\"DUMP_PROVIDER\"",
        "\"UNSTABLE_PROVIDER_DIED\"",
        "\"REQUEST_ASSIST_CONTEXT_EXTRAS\"",
        "\"TRANSLUCENT_CONVERSION_COMPLETE\"",
        "\"INSTALL_PROVIDER\"",
        "\"ON_NEW_ACTIVITY_OPTIONS\"",
        "\"ENTER_ANIMATION_COMPLETE\"",
        "\"LOCAL_VOICE_INTERACTION_STARTED\"",
        "\"ATTACH_AGENT\"",
        "\"APPLICATION_INFO_CHANGED\"",
        "\"RUN_ISOLATED_ENTRY_POINT\"",
        "\"EXECUTE_TRANSACTION\"",
        "\"RELAUNCH_ACTIVITY\"",
        "\"PURGE_RESOURCES\"",
        "\">>> handling: \"",
        "\"bindApplication\"",
        "\"broadcastReceiveComp\"",
        "\"serviceCreate: \"",
        "\"serviceBind\"",
        "\"serviceUnbind\"",
        "\"serviceStart: \"",
        "\"serviceStop\"",
        "\"lowMemory\"",
        "\"backupCreateAgent\"",
        "\"backupDestroyAgent\"",
        "\"providerRemove\"",
        "\"broadcastPackage\"",
        "\"sleeping\"",
        "\"setCoreSettings\"",
        "\"<<< done: \"",
        "\"Reporting idle of \"",
        "\" finished=\"",
        "\"package\"",
        "\"Requesting code from \"",
        "\" to be run in process \"",
        "\"/\"",
        "\"Requesting code from \"",
        "\" (with uid \"",
        "\")\"",
        "\" to be run in process \"",
        "\" (with uid \"",
        "\")\"",
        "\"Loading code package \"",
        "\"Loading resource-only package \"",
        "\" (in \"",
        "\")\"",
        "\"android\"",
        "\"bg\"",
        "\"%13s %8s %8s %8s %8s %8s %8s %8s %8s %8s %8s\"",
        "\"%13s %8s %8s %8s %8s %8s %8s %8s\"",
        "\"%21s %8d\"",
        "\"%21s %8d %21s %8d\"",
        "\"%21s %8s\"",
        "\"N/A,\"",
        "\"N/A,\"",
        "\"N/A,\"",
        "\"N/A,\"",
        "\"N/A,\"",
        "\"N/A,\"",
        "\"N/A,\"",
        "\"N/A,\"",
        "\"\"",
        "\"Pss\"",
        "\"Pss\"",
        "\"Shared\"",
        "\"Private\"",
        "\"Shared\"",
        "\"Private\"",
        "\"SwapPss\"",
        "\"Swap\"",
        "\"Heap\"",
        "\"Heap\"",
        "\"Heap\"",
        "\"\"",
        "\"Total\"",
        "\"Clean\"",
        "\"Dirty\"",
        "\"Dirty\"",
        "\"Clean\"",
        "\"Clean\"",
        "\"Dirty\"",
        "\"Size\"",
        "\"Alloc\"",
        "\"Free\"",
        "\"\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"Native Heap\"",
        "\"Dalvik Heap\"",
        "\"\"",
        "\"Pss\"",
        "\"Private\"",
        "\"Private\"",
        "\"SwapPss\"",
        "\"Swap\"",
        "\"Heap\"",
        "\"Heap\"",
        "\"Heap\"",
        "\"\"",
        "\"Total\"",
        "\"Dirty\"",
        "\"Clean\"",
        "\"Dirty\"",
        "\"Size\"",
        "\"Alloc\"",
        "\"Free\"",
        "\"\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"------\"",
        "\"Native Heap\"",
        "\"Dalvik Heap\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"Unknown\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"TOTAL\"",
        "\"Unknown\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"TOTAL\"",
        "\" \"",
        "\" Dalvik Details\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\" \"",
        "\" App Summary\"",
        "\"\"",
        "\"Pss(KB)\"",
        "\"\"",
        "\"------\"",
        "\"Java Heap:\"",
        "\"Native Heap:\"",
        "\"Code:\"",
        "\"Stack:\"",
        "\"Graphics:\"",
        "\"Private Other:\"",
        "\"System:\"",
        "\" \"",
        "\"TOTAL:\"",
        "\"TOTAL SWAP PSS:\"",
        "\"TOTAL:\"",
        "\"TOTAL SWAP (KB):\"",
        "\"Native Heap\"",
        "\"Dalvik Heap\"",
        "\"Unknown\"",
        "\"TOTAL\"",
        "\"(Intent \"",
        "\").getComponent() returned null\"",
        "\"Performing launch: action=\"",
        "\", comp=\"",
        "\", token=\"",
        "\"******************* PROCESS STATE CHANGED TO: \"",
        "\" (from ipc\"",
        "\"\"",
        "\"sendActivityResult: id=\"",
        "\" req=\"",
        "\" res=\"",
        "\" data=\"",
        "\"SCHEDULE \"",
        "\" \"",
        "\": \"",
        "\" / \"",
        "\"SCHEDULE \"",
        "\" arg1=\"",
        "\" arg2=\"",
        "\"seq= \"",
        "\"Unable to instantiate activity \"",
        "\": \"",
        "\"Performing launch of \"",
        "\": app=\"",
        "\", appName=\"",
        "\", pkg=\"",
        "\", comp=\"",
        "\", dir=\"",
        "\"Launching activity \"",
        "\" with config \"",
        "\"Activity \"",
        "\" did not call through to super.onCreate()\"",
        "\"Unable to start activity \"",
        "\": \"",
        "\"Can't start activity that is not stopped.\"",
        "\"handleStartActivity\"",
        "\"Activity \"",
        "\" did not call through to super.onPostCreate()\"",
        "\"debug.second-display.pkg\"",
        "\"Handling launch of \"",
        "\"requestDirectActions(): no activity for \"",
        "\"requestDirectActions(\"",
        "\"): wrong lifecycle: \"",
        "\"actions\"",
        "\"Attaching agent with \"",
        "\" failed: \"",
        "\"Finishing failed broadcast to \"",
        "\"Unable to instantiate receiver \"",
        "\": \"",
        "\"Performing receive of \"",
        "\": app=\"",
        "\", appName=\"",
        "\", pkg=\"",
        "\", comp=\"",
        "\", dir=\"",
        "\"Finishing failed broadcast to \"",
        "\"Unable to start receiver \"",
        "\": \"",
        "\"handleCreateBackupAgent: \"",
        "\"Asked to instantiate non-matching package \"",
        "\"Asked to create backup agent for nonexistent package\"",
        "\"android.app.backup.FullBackupAgent\"",
        "\"Reusing existing agent instance\"",
        "\"Initializing agent class \"",
        "\"Agent threw during creation: \"",
        "\"Unable to create BackupAgent \"",
        "\": \"",
        "\"handleDestroyBackupAgent: \"",
        "\"Exception thrown in onDestroy by backup agent of \"",
        "\"Attempt to destroy unknown backup agent \"",
        "\"Unable to instantiate service \"",
        "\": \"",
        "\"Creating service \"",
        "\"Unable to create service \"",
        "\": \"",
        "\"handleBindService s=\"",
        "\" rebind=\"",
        "\"Unable to bind to service \"",
        "\" with \"",
        "\": \"",
        "\"Unable to unbind to service \"",
        "\" with \"",
        "\": \"",
        "\"Unable to start service \"",
        "\" with \"",
        "\": \"",
        "\"Destroying service \"",
        "\"Service\"",
        "\"Unable to stop service \"",
        "\": \"",
        "\"handleStopService: exception for \"",
        "\"handleStopService: token=\"",
        "\" not found.\"",
        "\"Performing resume of \"",
        "\" finished=\"",
        "\"Trying to resume activity which is already resumed\"",
        "\"topWhenResuming\"",
        "\"Unable to resume activity \"",
        "\": \"",
        "\"Activity\"",
        "\"Resume \"",
        "\" started activity: \"",
        "\", hideForNow: \"",
        "\", finished: \"",
        "\"Launch \"",
        "\" mStartedActivity set\"",
        "\"Resuming activity \"",
        "\" with newConfig \"",
        "\"Resuming \"",
        "\" with isForward=\"",
        "\"Scheduling idle handler for \"",
        "\"Not found target activity to report position change for token: \"",
        "\"Received position change to top: \"",
        "\" for activity: \"",
        "\"Activity top position already set to onTop=\"",
        "\"topStateChangedWhenResumed\"",
        "\"Won't deliver top position change in state=\"",
        "\"Performing pause of activity that is not resumed: \"",
        "\"pausing\"",
        "\"Activity \"",
        "\" did not call through to super.onPause()\"",
        "\"Unable to pause activity \"",
        "\": \"",
        "\"Performing stop of \"",
        "\"Performing stop of activity that is already stopped: \"",
        "\"Unable to save state of activity \"",
        "\": \"",
        "\"Unable to stop activity \"",
        "\": \"",
        "\"Updating activity vis \"",
        "\" with new config \"",
        "\"Finishing stop of \"",
        "\": show=\"",
        "\" win=\"",
        "\"performRestartActivity\"",
        "\"handleWindowVisibility: no activity for token \"",
        "\"handleWindowVisibility\"",
        "\"handleWindowVisibility\"",
        "\"Handle window \"",
        "\" visibility: \"",
        "\"handleSleeping: no activity for token \"",
        "\"sleeping\"",
        "\"handleSleeping\"",
        "\"\"",
        "\"\"",
        "\"Delivering result to activity \"",
        "\" : \"",
        "\"Failure delivering result \"",
        "\" to activity \"",
        "\": \"",
        "\"Handling send result to \"",
        "\"Activity \"",
        "\" did not call through to super.onPause()\"",
        "\"Unable to pause activity \"",
        "\": \"",
        "\"Performing finish of \"",
        "\"destroy\"",
        "\"destroy\"",
        "\"Unable to retain activity \"",
        "\": \"",
        "\"Activity \"",
        "\" did not call through to super.onDestroy()\"",
        "\"Unable to destroy activity \"",
        "\": \"",
        "\"[Unknown]\"",
        "\"Activity\"",
        "\"Activity\"",
        "\"Activity\"",
        "\"Activity\"",
        "\"requestRelaunchActivity: \"",
        "\", trying: \"",
        "\"requestRelaunchActivity: target is null\"",
        "\"Abort, activity not relaunching!\"",
        "\"Relaunching activity \"",
        "\" with configChanges=0x\"",
        "\"Relaunching activity \"",
        "\": changedConfig=\"",
        "\"Handling relaunch of \"",
        "\"handleRelaunchActivity\"",
        "\"Activity to relaunch no longer exists\"",
        "\"Activity state must be in [ON_RESUME..ON_STOP] in order to be relaunched,\"",
        "\"current state is \"",
        "\"Setting activity \"",
        "\" newConfig=\"",
        "\"No activity provided.\"",
        "\"Activity token not set. Is the activity attached?\"",
        "\"Activity \"",
        "\" did not call through to super.onConfigurationChanged()\"",
        "\"configChanged\"",
        "\"Handle configuration changed: \"",
        "\"Must only be called in the system process\"",
        "\"Cleared TextLayout Caches\"",
        "\"Not found target activity to update its pending config.\"",
        "\"Not found target activity to report to: \"",
        "\"Activity already handled newer configuration so drop this\"",
        "\" transaction. overrideConfig=\"",
        "\" r.overrideConfig=\"",
        "\"Handle activity moved to display, activity:\"",
        "\", displayId=\"",
        "\", config=\"",
        "\"Handle activity config changed: \"",
        "\", config=\"",
        "\"Profiling failed on path \"",
        "\" -- can the process access this path?\"",
        "\"Managed heap dump failed on path \"",
        "\" -- can the process access this path?\"",
        "\"Failed to dump heap\"",
        "\"Heap dumper threw a runtime exception\"",
        "\"mem\"",
        "\"trimMemory\"",
        "\"Trimming memory to level: \"",
        "\"debug.am.run_gc_trim_level\"",
        "\"tm\"",
        "\"debug.am.run_mallopt_trim_level\"",
        "\"setupGraphicsSupport\"",
        "\"android\"",
        "\"java.io.tmpdir\"",
        "\"Unable to initialize \\\"java.io.tmpdir\\\" property \"",
        "\"due to missing cache directory\"",
        "\"Unable to use shader/script cache: missing code-cache directory\"",
        "\"ro.dalvik.vm.isa.\"",
        "\"debug.allocTracker.stackDepth\"",
        "\"24\"",
        "\"Application \"",
        "\" is waiting for the debugger on port 8100...\"",
        "\"Application \"",
        "\" can be debugged on port 8100...\"",
        "\"Setup proxies\"",
        "\"Unable to find instrumentation info for: \"",
        "\"Package uses different ABI(s) than its instrumentation: \"",
        "\"package[\"",
        "\"]: \"",
        "\", \"",
        "\" instrumentation[\"",
        "\"]: \"",
        "\", \"",
        "\"NetworkSecurityConfigProvider.install\"",
        "\"Unable to instantiate instrumentation \"",
        "\": \"",
        "\"Exception thrown in onCreate() of \"",
        "\": \"",
        "\"Unable to create application \"",
        "\": \"",
        "\"Pub \"",
        "\": \"",
        "\"Failed to find provider info for \"",
        "\"incProviderRef: stable \"",
        "\"snatched provider from the jaws of death\"",
        "\"incProviderRef Now stable - \"",
        "\": unstableDelta=\"",
        "\"incProviderRef: unstable \"",
        "\"snatched provider from the jaws of death\"",
        "\"incProviderRef: Now unstable - \"",
        "\"Acquiring provider \"",
        "\" for user \"",
        "\": existing object's process dead\"",
        "\"releaseProvider: stable ref count already 0, how?\"",
        "\"releaseProvider: No longer stable w/lastRef=\"",
        "\" - \"",
        "\"releaseProvider: unstable ref count already 0, how?\"",
        "\"releaseProvider: No longer unstable - \"",
        "\"releaseProvider: Enqueueing pending removal - \"",
        "\"Duplicate remove pending of provider \"",
        "\"completeRemoveProvider: lost the race, \"",
        "\"provider still in use\"",
        "\"removeProvider: Invoking ActivityManagerService.\"",
        "\"removeContentProvider(\"",
        "\")\"",
        "\"Cleaning up dead provider \"",
        "\" \"",
        "\"Removing dead content provider:\"",
        "\";\"",
        "\"telephony\"",
        "\"Content provider \"",
        "\" already published as \"",
        "\"Loading provider \"",
        "\": \"",
        "\"Unable to get context for package \"",
        "\" while loading content provider \"",
        "\"Failed to instantiate class \"",
        "\" from sourceDir \"",
        "\"Instantiating local provider \"",
        "\"Unable to get provider \"",
        "\": \"",
        "\"Installing external provider \"",
        "\": \"",
        "\"Checking to add \"",
        "\" / \"",
        "\"installProvider: lost the race, \"",
        "\"using existing local provider\"",
        "\"installProvider: lost the race, updating ref count\"",
        "\"main\"",
        "\"runIsolatedEntryPoint failed\"",
        "\"<pre-initialized>\"",
        "\"Dalvik max=\"",
        "\" total=\"",
        "\" used=\"",
        "\"system_process\"",
        "\"Unable to instantiate Application():\"",
        "\"Redirecting \"",
        "\" to \"",
        "\"Redirecting \"",
        "\" to \"",
        "\"Recovering failed rename \"",
        "\" to \"",
        "\"ActivityThreadMain\"",
        "\"<pre-initialized>\"",
        "\"ActivityThread\"",
        "\"Main thread loop unexpectedly exited\"",
        "\"purgePendingResources\""
    ],
    "variables": [
        "mSystemContext",
        "mSystemUiContext",
        "sPackageManager",
        "mLastSessionId",
        "mBoundApplication",
        "mProfiler",
        "mCurDefaultDisplayDpi",
        "mDensityCompatMode",
        "mConfiguration",
        "mCompatConfiguration",
        "mInitialApplication",
        "sCurrentActivityThread",
        "mInstrumentation",
        "mResourcesManager",
        "mRemoteCancellations",
        "authority",
        "userId",
        "sMainThreadHandler",
        "token",
        "assistToken",
        "ident",
        "intent",
        "referrer",
        "voiceInteractor",
        "state",
        "persistentState",
        "activity",
        "window",
        "parent",
        "embeddedID",
        "lastNonConfigurationInstances",
        "paused",
        "stopped",
        "hideForNow",
        "newConfig",
        "createdConfig",
        "overrideConfig",
        "mPendingOverrideConfig",
        "configCallback",
        "nextIdle",
        "isTopResumedActivity",
        "lastReportedTopResumedState",
        "profilerInfo",
        "activityInfo",
        "compatInfo",
        "packageInfo",
        "pendingResults",
        "pendingIntents",
        "startsNotResumed",
        "isForward",
        "pendingConfigChanges",
        "mPendingRemoveWindow",
        "mPendingRemoveWindowManager",
        "mPreserveWindow",
        "mNames",
        "mProvider",
        "mLocalProvider",
        "mHolder",
        "intent",
        "info",
        "compatInfo",
        "appInfo",
        "compatInfo",
        "backupMode",
        "userId",
        "token",
        "info",
        "compatInfo",
        "intent",
        "token",
        "intent",
        "rebind",
        "token",
        "taskRemoved",
        "startId",
        "flags",
        "args",
        "info",
        "processName",
        "appInfo",
        "providers",
        "instrumentationName",
        "instrumentationArgs",
        "instrumentationWatcher",
        "instrumentationUiAutomationConnection",
        "debugMode",
        "enableBinderTracking",
        "trackAllocation",
        "restrictedBackupMode",
        "persistent",
        "config",
        "compatInfo",
        "buildSerial",
        "initProfilerInfo",
        "autofillOptions",
        "contentCaptureOptions",
        "profileFile",
        "profileFd",
        "samplingInterval",
        "autoStopProfiler",
        "streamingOutput",
        "profiling",
        "handlingProfiling",
        "fd",
        "token",
        "prefix",
        "args",
        "context",
        "what",
        "who",
        "managed",
        "mallocInfo",
        "runGc",
        "path",
        "fd",
        "finishCallback",
        "pkg",
        "info",
        "activityToken",
        "requestToken",
        "requestType",
        "sessionId",
        "flags",
        "dup",
        "timeFormatPreferenceBool",
        "mWeakActivityThread",
        "prev",
        "ai",
        "ref",
        "ref",
        "ref",
        "objs",
        "name",
        "displayId",
        "app",
        "receiver",
        "context",
        "res",
        "listeners",
        "holder",
        "client",
        "stableCount",
        "unstableCount",
        "removePending",
        "configDiff",
        "equivalent",
        "apk",
        "resApk",
        "r",
        "ii",
        "instrApp",
        "app",
        "unstableDelta",
        "provider",
        "retHolder"
    ],
    "comments": [
        "change mikrom",
        "add",
        "add end",
        "Whether to invoke an activity callback after delivering new configuration.",
        "List of new activities (via ActivityRecord.nextIdle) that should",
        "be reported when next we idle.",
        "Number of activities that are currently visible on-screen.",
        "These can be accessed by multiple threads; mResourcesManager is the lock.",
        "XXX For now we keep around information about all packages we have",
        "seen, not removing entries from this map.",
        "NOTE: The activity and window managers need to call in to",
        "ActivityThread to do things like update resource configurations,",
        "which means this lock gets held while the activity and window managers",
        "holds their own lock.  Thus you MUST NEVER call back into the activity manager",
        "or window manager or anything that depends on them while holding this lock.",
        "These LoadedApk are only valid for the userId that we're running as.",
        "An executor that performs multi-step transactions.",
        "Registry of remote cancellation transports pending a reply with reply handles.",
        "The lock of mProviderMap protects the following variables.",
        "Mitigation for b/74523247: Used to serialize calls to AM.getContentProvider().",
        "Note we never removes items from this map but that's okay because there are only so many",
        "users and so many authorities.",
        "TODO Remove it once we move CPR.wait() from AMS to the client side.",
        "set once in main()",
        "TODO(lifecycler): Use mLifecycleState instead.",
        "Used to save the last reported configuration from server side so that activity",
        "configuration transactions can always use the latest configuration.",
        "Used for consolidating configs before sending on to Activity.",
        "Callback used for updating activity override config.",
        "Indicates whether this activity is currently the topmost resumed one in the system.",
        "This holds the last reported value from server.",
        "This holds the value last sent to the activity. This is needed, because an update from",
        "server may come at random time, but we always need to report changes between ON_RESUME",
        "and ON_PAUSE to the app.",
        "Ignore",
        "Ignore",
        "Whether to dump the native or managed heap.",
        "Test code to make sure the app could see the passed-in services.",
        "AM just passed in a null service.",
        "See b/79378449 about the following exemption.",
        "Setup the service cache in the ServiceManager",
        "a non-standard API to get this to libcore",
        "Allow libcore to perform the necessary actions as it sees fit upon a network",
        "configuration change.",
        "This function exists to make sure all receiver dispatching is",
        "correctly ordered, since these are one-way calls and the binder driver",
        "applies transaction ordering per object for such calls.",
        "Since we're going to dump the heap asynchronously, dup the file descriptor before",
        "it's closed on returning from the IPC call.",
        "Note: do this immediately, since going into the foreground",
        "should happen regardless of what pending work we have to do",
        "and the activity manager will wait for us to report back that",
        "we are done before sending us to the background.",
        "Do GC since countInstancesOfClass counts unreachable objects.",
        "NOTE: if you change anything significant below, also consider changing",
        "ACTIVITY_THREAD_CHECKIN_VERSION.",
        "Object counts",
        "SQL",
        "SQLite mem info",
        "Asset details.",
        "Unreachable native memory",
        "Do GC since countInstancesOfClass counts unreachable objects.",
        "SQLite mem info",
        "Asset details.",
        "Unreachable native memory",
        "There's no simple way to get the databases/ path, so do it this way.",
        "Ensure this invocation is asynchronous to prevent writer waiting if buffer cannot",
        "be consumed. But it must duplicate the file descriptor first, since caller might",
        "be closing it.",
        "Schedule trimming memory after drawing the frame to minimize jank-risk.",
        "For convenience we are using the Intent extra values.",
        "timeFormatPreference == Intent.EXTRA_TIME_PREF_VALUE_USE_LOCALE_DEFAULT",
        "(or unknown).",
        "Client transactions inside system process are recycled on the client side",
        "instead of ClientLifecycleManager to avoid being cleared before this",
        "message is handled.",
        "TODO(lifecycler): Recycle locally scheduled transactions.",
        "Slog.v(\"PackageManager\", \"returning cur default = \" + sPackageManager);",
        "Slog.v(\"PackageManager\", \"default service binder = \" + b);",
        "Slog.v(\"PackageManager\", \"default service = \" + sPackageManager);",
        "Caching not supported across users",
        "Caching not supported across users",
        "Caching not supported across users",
        "give ourselves a default profiler",
        "Slog.i(TAG, \"**** WE MIGHT WANT TO GC: then=\" + Binder.getLastGcTime()",
        "+ \"m now=\" + now);",
        "Slog.i(TAG, \"**** WE DO, WE DO WANT TO GC!\");",
        "Formatting for checkin service - update version if row format changes",
        "For checkin, we print one long comma-separated list of values",
        "NOTE: if you change anything significant below, also consider changing",
        "ACTIVITY_THREAD_CHECKIN_VERSION.",
        "Header",
        "Heap info - max",
        "Heap info - allocated",
        "Heap info - free",
        "Heap info - proportional set size",
        "Heap info - swappable set size",
        "Heap info - shared dirty",
        "Heap info - shared clean",
        "Heap info - private Dirty",
        "Heap info - private Clean",
        "Heap info - swapped out",
        "Heap info - swapped out pss",
        "Heap info - other areas",
        "Throw an exception.",
        "TODO(lifecycler): Can't switch to use #handleLaunchActivity() because it will try to",
        "call #reportSizeConfigurations(), but the server might not know anything about the",
        "activity if it was launched from LocalAcvitivyManager.",
        "Defer the top state for VM to avoid aggressive JIT compilation affecting activity",
        "launch time.",
        "TODO: Tune this since things like gmail sync are important background but not jank",
        "perceptible.",
        "Only apply the pending state if the last state doesn't change.",
        "Local scheduling",
        "updatePendingActivityConfiguration() reads from mActivities to update",
        "ActivityClientRecord which runs in a different thread. Protect modifications to",
        "mActivities to avoid race.",
        "TODO(lifecycler): What do we do in this case?",
        "TODO(lifecycler): How can this happen?",
        "Start",
        "No more work to do.",
        "Restore instance state",
        "Call postOnCreate()",
        "For debugging purposes, if the activity's package name contains the value of",
        "the \"debug.use-second-display\" system property as a substring, then show",
        "its content on a secondary display if there is one.",
        "If we are getting ready to gc after going to the background, well",
        "we are back active so skip it.",
        "Make sure we are running with the most recent config.",
        "Initialize before creating the activity",
        "Hint the GraphicsEnvironment that an activity is launching on the process.",
        "If there was an error, for any reason, tell the activity manager to stop us.",
        "Size configurations of a destroyed activity is meaningless.",
        "Filling for autofill has a few differences:",
        "- it does not need an AssistContent",
        "- it does not call onProvideAssistData()",
        "- it needs an IAutoFillCallback",
        "TODO: decide if lastSessionId logic applies to autofill sessions",
        "Clear the existing structures",
        "TODO: decide if lastSessionId logic applies to autofill sessions",
        "If we are getting ready to gc after going to the background, well",
        "we are back active so skip it.",
        "Instantiate a BackupAgent and tell it that it's alive",
        "Sanity check the requested target package's uid against ours",
        "no longer idle; we have backup work to do",
        "instantiate the BackupAgent class named in the manifest",
        "full backup operation but no app-supplied agent?  use the default implementation",
        "reusing the existing instance",
        "set up the agent's context",
        "If this is during restore, fail silently; otherwise go",
        "ahead and let the user see the crash.",
        "falling through with 'binder' still null",
        "tell the OS that we're live now",
        "Tear down a BackupAgent",
        "If we are getting ready to gc after going to the background, well",
        "we are back active so skip it.",
        "Slog.i(TAG, \"Running services: \" + mServices);",
        "TODO(lifecycler): A double resume request is possible when an activity",
        "receives two consequent transactions with relaunch requests and \"resumed\"",
        "final state requests and the second relaunch is omitted. We still try to",
        "handle two resume requests for the final state. For cases other than this",
        "one, we don't expect it to happen.",
        "If we are getting ready to gc after going to the background, well",
        "we are back active so skip it.",
        "TODO Push resumeArgs into the activity for consideration",
        "We didn't actually resume the activity, so skipping any follow-up actions.",
        "Although the activity is resumed, it is going to be destroyed. So the following",
        "UI operations are unnecessary and also prevents exception because its token may",
        "be gone that window manager cannot recognize it. All necessary cleanup actions",
        "performed below will be done while handling destruction.",
        "If the window hasn't yet been added to the window manager,",
        "and this guy didn't finish itself or start another activity,",
        "then go ahead and add the window.",
        "Normally the ViewRoot sets up callbacks with the Activity",
        "in addView->ViewRootImpl#setView. If we are instead reusing",
        "the decor view we have to notify the view root that the",
        "callbacks may have changed.",
        "The activity will get a callback for this {@link LayoutParams} change",
        "earlier. However, at that time the decor will not be set (this is set",
        "in this method), so no action will be taken. This call ensures the",
        "callback occurs with the decor set.",
        "If the window has already been added, but during resume",
        "we started another activity, then don't yet make the",
        "window visible.",
        "Get rid of anything left hanging around.",
        "The window is now visible if it has been added, we are not",
        "simply finishing, and we are not starting another activity.",
        "Make sure any pending writes are now committed.",
        "If we are finishing, we won't call onResume() in certain cases.",
        "So here we likewise don't want to call onPause() if the activity",
        "isn't resumed.",
        "Pre-Honeycomb apps always save their state before pausing",
        "Notify any outstanding on paused listeners",
        "We need to keep around the original state, in case we need to be created again.",
        "But we only do this for pre-Honeycomb apps, which always save their state when",
        "pausing, so we can not have them save their state when restarting from a paused",
        "state. For HC and later, we want to (and can) let the state be saved as the",
        "normal part of stopping the activity.",
        "You are already paused silly...",
        "Always reporting top resumed position loss when pausing an activity. If necessary, it",
        "will be restored in performResumeActivity().",
        "When this is set, the stable and unstable ref counts are 0 and",
        "we have a pending operation scheduled to remove the ref count",
        "from the activity manager.  On the activity manager we are still",
        "holding an unstable ref, though it is not reflected in the counts",
        "here.",
        "If we are finishing, we won't call onResume() in certain",
        "cases.  So here we likewise don't want to call onStop()",
        "if the activity isn't resumed.",
        "One must first be paused before stopped...",
        "First create a thumbnail for the activity...",
        "For now, don't create the thumbnail here; we are",
        "doing that by doing a screen snapshot.",
        "Before P onSaveInstanceState was called before onStop, starting with P it's",
        "called after. Before Honeycomb state was always saved before onPause.",
        "Make sure any pending writes are now committed.",
        "If we are getting ready to gc after going to the background, well",
        "we are back active so skip it.",
        "TODO: This method should be changed to use {@link #performStopActivityInner} to perform to",
        "stop operation on the activity to reduce code duplication and the chance of fixing a bug in",
        "one place and missing the other.",
        "Make sure any pending writes are now committed.",
        "Tell activity manager we slept.",
        "request all activities to relaunch for the changes to take place",
        "We had hidden the activity because it started another",
        "one...  we have gotten a result back and we are not",
        "paused, so make sure our window is visible.",
        "Now we are idle.",
        "updatePendingActivityConfiguration() reads from mActivities to update",
        "ActivityClientRecord which runs in a different thread. Protect modifications to",
        "mActivities to avoid race.",
        "Hold off on removing this until the new activity's",
        "window is being added.",
        "We can only keep the part of the view hierarchy that we control,",
        "everything else must be removed, because it might not be able to",
        "behave properly when activity is relaunching.",
        "We're preserving only one window, others should be closed so app views",
        "will be detached before the final tear down. It should be done now because",
        "some components (e.g. WebView) rely on detach callbacks to perform receiver",
        "unregister and other cleanup.",
        "If we are delaying the removal of the activity window, then",
        "we can't clean up all windows here.  Note that we can't do",
        "so later either, which means any windows that aren't closed",
        "by the app will leak.  Well we try to warning them a lot",
        "about leaking windows, because that is a bug, so if they are",
        "using this recreate facility then they get to live with leaks.",
        "Mocked out contexts won't be participating in the normal",
        "process lifecycle, but if we're running with a proper",
        "ApplicationContext we need to have it tear down things",
        "cleanly.",
        "If we are getting ready to gc after going to the background, well",
        "we are back active so skip it.",
        "First: make sure we have the most recent configuration and most",
        "recent version of the activity, or skip it if some previous call",
        "had taken a more recent version.",
        "If the activity manager is passing us its current config,",
        "assume that is really what we want regardless of what we",
        "may have pending.",
        "If there was a pending configuration change, execute it first.",
        "If we are preserving the main window across relaunches we would also like to preserve",
        "the children. However the client side view system does not support preserving",
        "the child views so we notify the window manager to expect these windows to",
        "be replaced and defer requests to destroy or hide them. This way we can achieve",
        "visual continuity. It's important that we do this here prior to pause and destroy",
        "as that is when we may hide or remove the child views.",
        "",
        "There is another scenario, if we have decided locally to relaunch the app from a",
        "call to recreate, then none of the windows will be prepared for replacement or",
        "preserved by the server, so we want to notify it that we are preparing to replace",
        "everything",
        "Only report a successful relaunch to WindowManager.",
        "Initialize a relaunch request.",
        "Make sure to match the existing lifecycle state in the end of the transaction.",
        "Schedule the transaction.",
        "Preserve last used intent, it may be set from Activity#setIntent().",
        "Need to ensure state is saved.",
        "Merge any pending results and pending intents; don't just replace them",
        "If the activity is currently resumed, its configuration",
        "needs to change right now.",
        "Otherwise, we will tell it about the change",
        "the next time it is resumed or shown.  Note that",
        "the activity manager may, before then, decide the",
        "activity needs to be destroyed to handle its new",
        "configuration.",
        "ContextThemeWrappers may override the configuration for that context. We must check and",
        "apply any overrides defined.",
        "Apply the ContextThemeWrapper override if necessary.",
        "NOTE: Make sure the configurations are not modified, as they are treated as immutable",
        "in many places.",
        "If the new config is the same as the config this Activity is already running with and",
        "the override config also didn't change, then don't bother calling",
        "onConfigurationChanged.",
        "Always send the task-level config changes. For system-level configuration, if",
        "this activity doesn't handle any of the config changes, then don't bother",
        "calling onConfigurationChanged as we're going to destroy it.",
        "Nothing significant, don't proceed with updating and reporting.",
        "Propagate the configuration change to ResourcesManager and Activity.",
        "ContextThemeWrappers may override the configuration for that context. We must check and",
        "apply any overrides defined.",
        "We only update an Activity's configuration if this is not a global configuration change.",
        "This must also be done before the callback, or else we violate the contract that the new",
        "resources are available in ComponentCallbacks2#onConfigurationChanged(Configuration).",
        "Also apply the ContextThemeWrapper override if necessary.",
        "NOTE: Make sure the configurations are not modified, as they are treated as immutable in",
        "many places.",
        "Apply the ContextThemeWrapper override if necessary.",
        "NOTE: Make sure the configurations are not modified, as they are treated as immutable",
        "in many places.",
        "Not configured to report to activity.",
        "This flag tracks whether the new configuration is fundamentally equivalent to the",
        "existing configuration. This is necessary to determine whether non-activity callbacks",
        "should receive notice when the only changes are related to non-public fields.",
        "We do not gate calling {@link #performActivityConfigurationChanged} based on this",
        "flag as that method uses the same check on the activity config override as well.",
        "If callback is an Activity - call corresponding method to consider override",
        "config and avoid onConfigurationChanged if it hasn't changed.",
        "Updates triggered by package installation go through a package update",
        "receiver. Here we try to capture ApplicationInfo changes that are",
        "caused by other sources, such as overlays. That means we want to be as conservative",
        "about code changes as possible. Take the diff of the old ApplicationInfo and the new",
        "to see if anything needs to change.",
        "Update all affected loaded packages with new package information",
        "Update all affected Resources objects to use new ResourcesImpl",
        "Trigger a regular Configuration change event, only with a different assetsSeq number",
        "so that we actually call through to all components.",
        "TODO(adamlesinski): Change this to make use of ActivityManager's upcoming ability to",
        "store configurations per-process.",
        "Preserve windows to avoid black flickers when overlays change.",
        "Ask text layout engine to free its caches if there is a locale change",
        "Check input params.",
        "Perform updates.",
        "Notify the ViewRootImpl instance about configuration changes. It may have initiated this",
        "update to make sure that resources are updated before updating itself.",
        "This should no longer happening now that we're copying the file descriptor.",
        "If the package is being replaced, yet it still has a valid",
        "LoadedApk object, the package was updated with _DONT_KILL.",
        "Adjust it's internal references to the application info and",
        "resources.",
        "Update affected Resources objects to use new ResourcesImpl",
        "Ask SQLite to free up as much memory as it can, mostly from its page caches.",
        "Ask graphics to free up as much as possible (font/image caches)",
        "Ask text layout engine to free also as much as possible",
        "The system package doesn't have real data directories, so don't set up cache paths.",
        "This cache location probably points at credential-encrypted",
        "storage which may not be accessible yet; assign it anyway instead",
        "of pointing at device-encrypted storage.",
        "Provide a usable directory for temporary files",
        "Setup a location to store generated/compiled graphics code.",
        "Get the instruction set supported by the secondary ABI. In the presence",
        "of a native bridge this might be different than the one secondary ABI used.",
        "The app may have overridden the LocaleList with its own Locale",
        "(not present in the available list). Push the chosen Locale",
        "to the front of the list.",
        "Register the UI Thread as a sensitive thread to the runtime.",
        "In the case the stack depth property exists, pass it down to the runtime.",
        "Note when this process has started.",
        "send up app name; do this *before* waiting for debugger",
        "Pass data directory path to ART. This is used for caching information and",
        "should be set before any application code is loaded.",
        "If the app is Honeycomb MR1 or earlier, switch its AsyncTask",
        "implementation to use the pool executor.  Normally, we use the",
        "serialized executor as the default. This has to happen in the",
        "main thread so the main looper is set right.",
        "Let the util.*Array classes maintain \"undefined\" for apps targeting Pie or earlier.",
        "Prior to P, internal calls to decode Bitmaps used BitmapFactory,",
        "which may scale up to account for density. In P, we switched to",
        "ImageDecoder, which skips the upscale to save memory. ImageDecoder",
        "needs to still scale up in older apps, in case they rely on the",
        "size of the Bitmap without considering its density.",
        "This calls mResourcesManager so keep it within the synchronized block.",
        "null : use locale default for 12/24 hour formatting,",
        "false : use 12 hour format,",
        "true : use 24 hour format.",
        "XXX should have option to change the port.",
        "Allow binder tracing, and application-generated systrace messages if we're profileable.",
        "Initialize heap profiling.",
        "Allow renderer debugging features if we're debuggable.",
        "In pre-boot mode (doing initial launch to collect password), not",
        "all system is up.  This includes the connectivity service, so don't",
        "crash if we can't get it.",
        "Instrumentation info affects the class loader, so load it before",
        "setting up the app context.",
        "Warn of potential ABI mismatches.",
        "Install the Network Security Config Provider. This must happen before the application",
        "code is loaded to prevent issues with instances of TLS objects being created before",
        "the provider is installed.",
        "Continue loading instrumentation.",
        "The test context's op package name == the target app's op package name, because",
        "the app ops manager checks the op package name against the real calling UID,",
        "which is what the target package name is associated with.",
        "Small heap, clamp to the current growth limit and let the heap release",
        "pages after the growth limit to the non growth limit capacity. b/18387825",
        "Allow disk access during application and provider setup. This could",
        "block processing ordered broadcasts, but later processing would",
        "probably end up doing the same disk access.",
        "add",
        "add end",
        "If the app is being launched for full backup or restore, bring it up in",
        "a restricted environment with the base application class.",
        "Propagate autofill compat state",
        "Propagate Content Capture options",
        "add",
        "add end",
        "don't bring up providers in restricted mode; they may depend on the",
        "app's custom Application class",
        "Do this after providers, since instrumentation tests generally start their",
        "test thread at this point, and we don't want that racing.",
        "If the app targets < O-MR1, or doesn't change the thread policy",
        "during startup, clobber the policy to maintain behavior of b/36951662",
        "Preload fonts resources",
        "Slog.i(TAG, \"am: \" + ActivityManager.getService()",
        "+ \", app thr: \" + mAppThread);",
        "There is a possible race here.  Another thread may try to acquire",
        "the same provider at the same time.  When this happens, we want to ensure",
        "that the first one wins.",
        "Note that we cannot hold the lock while acquiring and installing the",
        "provider since it might take a long time to run and it could also potentially",
        "be re-entrant in the case where the provider is in the same process.",
        "Install provider will increment the reference count for us, and break",
        "any ties in the race.",
        "We are acquiring a new stable reference on the provider.",
        "We have a pending remove operation, which is holding the",
        "last unstable reference.  At this point we are converting",
        "that unstable reference to our new stable reference.",
        "Cancel the removal of the provider.",
        "There is a race! It fails to remove the message, which",
        "will be handled in completeRemoveProvider().",
        "do nothing content provider object is dead any way",
        "We are acquiring a new unstable reference on the provider.",
        "Oh look, we actually have a remove pending for the",
        "provider, which is still holding the last unstable",
        "reference.  We just need to cancel that to take new",
        "ownership of the reference.",
        "First unstable ref, increment our count in the",
        "activity manager.",
        "do nothing content provider object is dead any way",
        "The hosting process of the provider has died; we can't",
        "use this one.",
        "Only increment the ref count if we have one.  If we don't then the",
        "provider is not reference counted and never needs to be released.",
        "The provider has no ref count, no release is needed.",
        "What we do at this point depends on whether there are",
        "any unstable refs left: if there are, we just tell the",
        "activity manager to decrement its stable count; if there",
        "aren't, we need to enqueue this provider to be removed,",
        "and convert to holding a single unstable ref while",
        "doing so.",
        "do nothing content provider object is dead any way",
        "If this is the last reference, we need to enqueue",
        "this provider to be removed instead of telling the",
        "activity manager to remove it at this point.",
        "do nothing content provider object is dead any way",
        "Schedule the actual remove asynchronously, since we don't know the context",
        "this will be called in.",
        "There was a race!  Some other client managed to acquire",
        "the provider before the removal was completed.",
        "Abort the removal.  We will do it later.",
        "More complicated race!! Some client managed to acquire the",
        "provider and release it before the removal was completed.",
        "Continue the removal, and abort the next remove message.",
        "do nothing content provider object is dead any way",
        "We found out about this due to execution in our client",
        "code.  Tell the activity manager about it now, to ensure",
        "that the next time we go to do anything with the provider",
        "it knows it is dead (so we don't race with its death",
        "notification).",
        "do nothing content provider object is dead any way",
        "If this provider is hosted by the core OS and cannot be upgraded,",
        "then I guess we're okay doing blocking calls to it.",
        "Ignore",
        "System startup case.",
        "XXX Need to create the correct context for this provider.",
        "We need to transfer our new reference to the existing",
        "ref count, releasing the old one...  but only if",
        "release is needed (that is, it is not running in the",
        "system process).",
        "do nothing content provider object is dead any way",
        "The process will be empty after this method returns; exit the VM now.",
        "Watch for getting close to heap limit.",
        "Don't set application object here -- if the system crashes,",
        "we can't display an alert, we just want to die die die.",
        "We need to apply this change to the resources immediately, because upon returning",
        "the view hierarchy will be informed about it.",
        "This actually changed the resources! Tell everyone about it.",
        "The system process on low-memory devices do not get to use hardware",
        "accelerated drawing, since this can add too much overhead to the",
        "process.",
        "If feature is disabled, we don't need to install",
        "Install interception and make sure it sticks!",
        "If we opened it okay, then access check succeeded",
        "Install selective syscall interception",
        "CloseGuard defaults to true and can be quite spammy.  We",
        "disable it here, but selectively enable it later (via",
        "StrictMode) on debug builds, but using DropBox, not logs.",
        "Make sure TrustedCertificateStore looks in the right place for CA certificates",
        "Find the value for {@link #PROC_START_SEQ_IDENT} if provided on the command line.",
        "It will be in the format \"seq=114\"",
        "End of event ActivityThreadMain.",
        "------------------ Regular JNI ------------------------"
    ],
    "docstrings": [
        "* Copyright (C) 2006 The Android Open Source Project\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* This manages the execution of the main thread in an\n * application process, scheduling and executing activities,\n * broadcasts, and other operations on it as the activity\n * manager requests.\n *\n * {@hide}",
        "@hide",
        "@hide",
        "* If the activity doesn't become idle in time, the timeout will ensure to apply the pending top\n     * process state.",
        "* The delay to release the provider when it has no more references. It reduces the number of\n     * transactions for acquiring and releasing provider if the client accesses the provider\n     * frequently in a short time.",
        "Type for IActivityManager.serviceDoneExecuting: anonymous operation",
        "Type for IActivityManager.serviceDoneExecuting: done with an onStart call",
        "Type for IActivityManager.serviceDoneExecuting: done stopping (destroying) service",
        "Use foreground GC policy (less pause time) and higher JIT weight.",
        "Use background GC policy and default JIT threshold.",
        "* Denotes an invalid sequence number corresponding to a process state change.",
        "* Identifier for the sequence no. associated with this process start. It will be provided\n     * as one of the arguments when the process starts.",
        "* Denotes the sequence number of the process state change for which the main thread needs\n     * to block until the network rules are updated for it.\n     *\n     * Value of {@link #INVALID_PROC_STATE_SEQ} indicates there is no need for blocking.",
        "* Maps from activity token to local record of running activities in this process.\n     *\n     * This variable is readable if the code is running in activity thread or holding {@link\n     * #mResourcesManager}. It's only writable if the code is running in activity thread and holding\n     * {@link #mResourcesManager}.",
        "The activities to be truly destroyed (not include relaunch).",
        "* Bookkeeping of instantiated backup agents indexed first by user id, then by package name.\n     * Indexing by user id supports parallel backups across users on system packages as they run in\n     * the same process with the same package name. Indexing by package name supports multiple\n     * distinct applications running in the same process.",
        "Reference to singleton {@link ActivityThread}",
        "package",
        "Activity client record, used for bookkeeping for the real {@link Activity} instance.",
        "Common initializer for all constructors.",
        "Get the current lifecycle state.",
        "Update the current lifecycle state for internal bookkeeping.",
        "Initial values for {@link Profiler}.",
        "* Content capture options for the application - when null, it means ContentCapture is not\n         * enabled for the package.",
        "sync",
        "sync",
        "sync",
        "sync",
        "* Updates {@link #mNetworkBlockSeq}. This is used by ActivityManagerService to inform\n         * the main thread that it needs to wait for the network rules to get updated before\n         * launching an activity.",
        "* Creates the top level resources for the given package. Will return an existing\n     * Resources if one has already been created.",
        "* Create the context instance base on system resources & display information which used for UI.\n     * @param displayId The ID of the display where the UI is shown.\n     * @see ContextImpl#createSystemUiContext(ContextImpl, int)",
        "* Dump heap info to proto.\n     *\n     * @param hasSwappedOutPss determines whether to use dirtySwap or dirtySwapPss",
        "* Dump mem info data to proto.",
        "customIntent",
        "Update VM state based on ActivityManager.PROCESS_STATE_* constants.",
        "Core implementation of activity launch.",
        "* Checks if {@link #mNetworkBlockSeq} is {@link #INVALID_PROC_STATE_SEQ} and if so, returns\n     * immediately. Otherwise, makes a blocking call to ActivityManagerService to wait for the\n     * network rules to get updated.",
        "* Extended implementation of activity launch. Used when server requests a launch or relaunch.",
        "Fetches the user actions for the corresponding activity",
        "Performs an actions in the corresponding activity",
        "* Return the Intent that's currently being handled by a\n     * BroadcastReceiver on this thread, or null if none.\n     * @hide",
        "* Resume the activity.\n     * @param token Target activity token.\n     * @param finalStateRequest Flag indicating if this is part of final state resolution for a\n     *                          transaction.\n     * @param reason Reason for performing the action.\n     *\n     * @return The {@link ActivityClientRecord} that was resumed, {@code null} otherwise.",
        "force",
        "* Call {@link Activity#onTopResumedActivityChanged(boolean)} if its top resumed state changed\n     * since the last report.",
        "* Pause the activity.\n     * @return Saved instance state for pre-Honeycomb apps if it was saved, {@code null} otherwise.",
        "onTop",
        "Called from {@link LocalActivityManager}.",
        "stopInfo",
        "keepShown",
        "finalStateRequest",
        "* Core implementation of stopping an activity.  Note this is a little\n     * tricky because the server's meaning of stop is slightly different\n     * than our client -- for the server, stop means to save state and give\n     * it the result when it is done, but the window may still be visible.\n     * For the client, we want to call onStop()/onStart() to indicate when\n     * the activity's UI visibility changes.\n     * @param r Target activity client record.\n     * @param info Action that will report activity stop to server.\n     * @param keepShown Flag indicating whether the activity is still shown.\n     * @param saveState Flag indicating whether the activity state should be saved.\n     * @param finalStateRequest Flag indicating if this call is handling final lifecycle state\n     *                          request for a transaction.\n     * @param reason Reason for performing this operation.",
        "* Calls {@link Activity#onStop()} and {@link Activity#onSaveInstanceState(Bundle)}, and updates\n     * the client record's state.\n     * All calls to stop an activity must be done through this method to make sure that\n     * {@link Activity#onSaveInstanceState(Bundle)} is also executed in the same call.",
        "saveState",
        "* Schedule the call to tell the activity manager we have stopped.  We don't do this\n     * immediately, because we want to have a chance for any other pending work (in particular\n     * memory trim requests) to complete before you tell the activity manager to proceed and allow\n     * us to go fully into the background.",
        "stopInfo",
        "saveState",
        "finalStateRequest",
        "start",
        "saveState",
        "start",
        "preserveWindows",
        "Core implementation of activity destroy call.",
        "saveState",
        "childrenOnly",
        "* Post a message to relaunch the activity. We do this instead of launching it immediately,\n     * because this will destroy the activity from which it was called and interfere with the\n     * lifecycle changes it was going through before. We need to make sure that we have finished\n     * handling current transaction item before relaunching the activity.",
        "Performs the activity relaunch locally vs. requesting from system-server.",
        "pendingResults",
        "pendingIntents",
        "configChanges",
        "pendingActions",
        "saveState",
        "* Updates the configuration for an Activity. The ActivityClientRecord's\n     * {@link ActivityClientRecord#overrideConfig} is used to compute the final Configuration for\n     * that Activity. {@link ActivityClientRecord#tmpConfig} is used as a temporary for delivering\n     * the updated Configuration.\n     * @param r ActivityClientRecord representing the Activity.\n     * @param newBaseConfig The new configuration to use. This may be augmented with\n     *                      {@link ActivityClientRecord#overrideConfig}.",
        "movedToDifferentDisplay",
        "* Updates the configuration for an Activity. The ActivityClientRecord's\n     * {@link ActivityClientRecord#overrideConfig} is used to compute the final Configuration for\n     * that Activity. {@link ActivityClientRecord#tmpConfig} is used as a temporary for delivering\n     * the updated Configuration.\n     * @param r ActivityClientRecord representing the Activity.\n     * @param newBaseConfig The new configuration to use. This may be augmented with\n     *                      {@link ActivityClientRecord#overrideConfig}.\n     * @param displayId The id of the display where the Activity currently resides.\n     * @param movedToDifferentDisplay Indicates if the activity was moved to different display.\n     * @return {@link Configuration} instance sent to client, null if not sent.",
        "* Creates a new Configuration only if override would modify base. Otherwise returns base.\n     * @param base The base configuration.\n     * @param override The update to apply to the base configuration. Can be null.\n     * @return A Configuration representing base with override applied.",
        "* Decides whether to update a component's configuration and whether to inform it.\n     * @param cb The component callback to notify of configuration change.\n     * @param newConfig The new configuration.",
        "* Decides whether to update an Activity's configuration and whether to inform it.\n     * @param activity The activity to notify of configuration change.\n     * @param newConfig The new configuration.\n     * @param amOverrideConfig The override config that differentiates the Activity's configuration\n     *                         from the base global configuration. This is supplied by\n     *                         ActivityManager.\n     * @param displayId Id of the display where activity currently resides.\n     * @param movedToDifferentDisplay Indicates if the activity was moved to different display.\n     * @return Configuration sent to client, null if no changes and not moved to different display.",
        "compat",
        "* Updates the application info.\n     *\n     * This only works in the system process. Must be called on the main thread.",
        "preserveWindows",
        "* Handle new activity configuration and/or move to a different display.\n     * @param activityToken Target activity token.\n     * @param overrideConfig Activity override config.\n     * @param displayId Id of the display where activity was moved to, -1 if there was no move and\n     *                  value didn't change.",
        "movedToDifferentDisplay",
        "* Public entrypoint to stop profiling. This is required to end profiling when the app crashes,\n     * so that profiler data won't be lost.\n     *\n     * @hide",
        "* Returns the correct library directory for the current ABI.\n     * <p>\n     * If we're dealing with a multi-arch application that has both 32 and 64 bit shared\n     * libraries, we might need to choose the secondary depending on what the current\n     * runtime's instruction set is.",
        "* The LocaleList set for the app's resources may have been shuffled so that the preferred\n     * Locale is at position 0. We must find the index of this preferred Locale in the\n     * original LocaleList.",
        "* Before spawning a new process, reset the time zone to be the system time zone.\n         * This needs to be done because the system time zone could have changed after the\n         * the spawning of this process. Without doing this this process would have the incorrect\n         * system time zone.",
        "* Set the LocaleList. This may change once we create the App Context.",
        "* Update the system configuration since its preloaded and might not\n             * reflect configuration changes. The configuration object passed\n             * in AppBindData can be safely assumed to be up to date",
        "* Switch this process to density compatibility mode if needed.",
        "* Initialize the default http proxy in this process for the reasons we set the time zone.",
        "lags",
        "ackage",
        "oisy",
        "oReleaseNeeded",
        "table",
        "oisy",
        "* Installs the provider.\n     *\n     * Providers that are local to the process or that come from the system server\n     * may be installed permanently which is indicated by setting noReleaseNeeded to true.\n     * Other remote providers are reference counted.  The initial reference count\n     * for all reference counted providers is one.  Providers that are not reference\n     * counted do not have a reference count (at all).\n     *\n     * This method detects when a provider has already been installed.  When this happens,\n     * it increments the reference count of the existing provider (if appropriate)\n     * and returns the existing provider.  This can happen due to concurrent\n     * attempts to acquire the same provider.",
        "compat",
        "* Install selective syscall interception. For example, this is used to\n         * implement special filesystem paths that will be redirected to\n         * {@link ContentResolver#openFileDescriptor(Uri, String)}."
    ],
    "functions": [
        "RemoteServiceException",
        "ProviderKey",
        "equals",
        "hashCode",
        "ActivityClientRecord",
        "ActivityClientRecord",
        "init",
        "getLifecycleState",
        "setState",
        "isPreHoneycomb",
        "isPreP",
        "isPersistable",
        "isVisibleFromServer",
        "toString",
        "getStateString",
        "ProviderClientRecord",
        "ReceiverData",
        "toString",
        "toString",
        "toString",
        "toString",
        "toString",
        "toString",
        "setProfiler",
        "startProfiling",
        "stopProfiling",
        "scheduleSleeping",
        "scheduleReceiver",
        "scheduleCreateBackupAgent",
        "scheduleDestroyBackupAgent",
        "scheduleCreateService",
        "scheduleBindService",
        "scheduleUnbindService",
        "scheduleServiceArgs",
        "scheduleStopService",
        "bindApplication",
        "runIsolatedEntryPoint",
        "scheduleExit",
        "scheduleSuicide",
        "scheduleApplicationInfoChanged",
        "updateTimeZone",
        "clearDnsCache",
        "updateHttpProxy",
        "processInBackground",
        "dumpService",
        "scheduleRegisteredReceiver",
        "scheduleLowMemory",
        "profilerControl",
        "dumpHeap",
        "attachAgent",
        "setSchedulingGroup",
        "dispatchPackageBroadcast",
        "scheduleCrash",
        "dumpActivity",
        "dumpProvider",
        "dumpMemInfo",
        "dumpMemInfo",
        "dumpMemInfoProto",
        "dumpMemInfo",
        "dumpGfxInfo",
        "File",
        "getDatabasesDir",
        "dumpDatabaseInfo",
        "dumpDbInfo",
        "run",
        "unstableProviderDied",
        "requestAssistContextExtras",
        "setCoreSettings",
        "updatePackageCompatibilityInfo",
        "scheduleTrimMemory",
        "scheduleTranslucentConversionComplete",
        "scheduleOnNewActivityOptions",
        "setProcessState",
        "setNetworkBlockSeq",
        "scheduleInstallProvider",
        "updateTimePrefs",
        "scheduleEnterAnimationComplete",
        "notifyCleartextNetwork",
        "startBinderTracking",
        "stopBinderTrackingAndDump",
        "scheduleLocalVoiceInteractionStarted",
        "handleTrustStorageUpdate",
        "scheduleTransaction",
        "requestDirectActions",
        "performDirectAction",
        "SafeCancellationTransport",
        "createSafeCancellationTransport",
        "CancellationSignal",
        "removeSafeCancellationTransport",
        "SafeCancellationTransport",
        "cancel",
        "codeToString",
        "handleMessage",
        "queueIdle",
        "queueIdle",
        "queueIdle",
        "ActivityThread",
        "currentActivityThread",
        "isSystem",
        "currentOpPackageName",
        "currentPackageName",
        "currentProcessName",
        "Application",
        "currentApplication",
        "IPackageManager",
        "getPackageManager",
        "Configuration",
        "applyConfigCompatMainThread",
        "Resources",
        "getTopLevelResources",
        "Handler",
        "getHandler",
        "LoadedApk",
        "getPackageInfo",
        "LoadedApk",
        "getPackageInfo",
        "LoadedApk",
        "getPackageInfo",
        "LoadedApk",
        "getPackageInfoNoCheck",
        "LoadedApk",
        "peekPackageInfo",
        "LoadedApk",
        "getPackageInfo",
        "isLoadedApkResourceDirsUpToDate",
        "ActivityThread",
        "ApplicationThread",
        "getApplicationThread",
        "Instrumentation",
        "getInstrumentation",
        "isProfiling",
        "getProfileFilePath",
        "Looper",
        "getLooper",
        "Executor",
        "getExecutor",
        "Application",
        "getApplication",
        "getProcessName",
        "ContextImpl",
        "getSystemContext",
        "ContextImpl",
        "getSystemUiContext",
        "ContextImpl",
        "createSystemUiContext",
        "installSystemApplicationInfo",
        "scheduleGcIdler",
        "unscheduleGcIdler",
        "schedulePurgeIdler",
        "unschedulePurgeIdler",
        "doGcIfNeeded",
        "doGcIfNeeded",
        "printRow",
        "dumpMemInfoTable",
        "dumpMemoryInfo",
        "dumpMemInfoTable",
        "registerOnActivityPausedListener",
        "unregisterOnActivityPausedListener",
        "ActivityInfo",
        "resolveActivityInfo",
        "Activity",
        "startActivityNow",
        "Activity",
        "getActivity",
        "ActivityClientRecord",
        "getActivityClient",
        "updatePendingConfiguration",
        "updateProcessState",
        "updateVmProcessState",
        "applyPendingProcessState",
        "countLaunchingActivities",
        "sendActivityResult",
        "TransactionExecutor",
        "getTransactionExecutor",
        "sendMessage",
        "sendMessage",
        "sendMessage",
        "sendMessage",
        "sendMessage",
        "scheduleContextCleanup",
        "Activity",
        "performLaunchActivity",
        "handleStartActivity",
        "checkAndBlockForNetworkAccess",
        "ContextImpl",
        "createBaseContextForActivity",
        "Activity",
        "handleLaunchActivity",
        "reportSizeConfigurations",
        "deliverNewIntents",
        "handleNewIntent",
        "handleRequestAssistContextExtras",
        "handleRequestDirectActions",
        "handlePerformDirectAction",
        "handleTranslucentConversionComplete",
        "onNewActivityOptions",
        "handleInstallProvider",
        "handleEnterAnimationComplete",
        "handleStartBinderTracking",
        "handleStopBinderTrackingAndDump",
        "handleMultiWindowModeChanged",
        "handlePictureInPictureModeChanged",
        "handleLocalVoiceInteractionStarted",
        "attemptAttachAgent",
        "handleAttachAgent",
        "Intent",
        "getIntentBeingBroadcast",
        "handleReceiver",
        "handleCreateBackupAgent",
        "handleDestroyBackupAgent",
        "getBackupAgentsForUser",
        "handleCreateService",
        "handleBindService",
        "handleUnbindService",
        "handleDumpService",
        "handleDumpActivity",
        "handleDumpProvider",
        "handleServiceArgs",
        "handleStopService",
        "ActivityClientRecord",
        "performResumeActivity",
        "cleanUpPendingRemoveWindows",
        "handleResumeActivity",
        "handleTopResumedActivityChanged",
        "reportTopResumedActivityChanged",
        "handlePauseActivity",
        "performUserLeavingActivity",
        "Bundle",
        "performPauseActivity",
        "Bundle",
        "performPauseActivity",
        "performPauseActivityIfNeeded",
        "performStopActivity",
        "ProviderRefCount",
        "performStopActivityInner",
        "callActivityOnStop",
        "updateVisibility",
        "handleStopActivity",
        "reportStop",
        "performRestartActivity",
        "handleWindowVisibility",
        "handleSleeping",
        "handleSetCoreSettings",
        "onCoreSettingsChange",
        "updateDebugViewAttributeState",
        "relaunchAllActivities",
        "handleUpdatePackageCompatibilityInfo",
        "deliverResults",
        "handleSendResult",
        "ActivityClientRecord",
        "performDestroyActivity",
        "safeToComponentShortString",
        "getActivitiesToBeDestroyed",
        "handleDestroyActivity",
        "ActivityClientRecord",
        "prepareRelaunchActivity",
        "handleRelaunchActivity",
        "scheduleRelaunchActivity",
        "handleRelaunchActivityLocally",
        "handleRelaunchActivityInner",
        "reportRelaunch",
        "callActivityOnSaveInstanceState",
        "collectComponentCallbacks",
        "performConfigurationChangedForActivity",
        "Configuration",
        "performConfigurationChangedForActivity",
        "Configuration",
        "createNewConfigAndUpdateIfNotNull",
        "performConfigurationChanged",
        "Configuration",
        "performActivityConfigurationChanged",
        "applyConfigurationToResources",
        "Configuration",
        "applyCompatConfiguration",
        "handleConfigurationChanged",
        "handleConfigurationChanged",
        "handleSystemApplicationInfoChanged",
        "handleApplicationInfoChanged",
        "freeTextLayoutCachesIfNeeded",
        "updatePendingActivityConfiguration",
        "handleActivityConfigurationChanged",
        "handleProfilerControl",
        "stopProfiling",
        "handleDumpHeap",
        "handleDispatchPackageBroadcast",
        "handleLowMemory",
        "handleTrimMemory",
        "setupGraphicsSupport",
        "updateDefaultDensity",
        "getInstrumentationLibrary",
        "updateLocaleListFromAppContext",
        "handleBindApplication",
        "finishInstrumentation",
        "installContentProviders",
        "IContentProvider",
        "acquireProvider",
        "getGetProviderLock",
        "incProviderRefLocked",
        "IContentProvider",
        "acquireExistingProvider",
        "releaseProvider",
        "completeRemoveProvider",
        "handleUnstableProviderDied",
        "handleUnstableProviderDiedLocked",
        "appNotRespondingViaProvider",
        "ProviderClientRecord",
        "installProviderAuthoritiesLocked",
        "ContentProviderHolder",
        "installProvider",
        "handleRunIsolatedEntryPoint",
        "attach",
        "run",
        "ActivityThread",
        "systemMain",
        "updateHttpProxy",
        "installSystemProviders",
        "getIntCoreSetting",
        "install",
        "AndroidOs",
        "FileDescriptor",
        "openDeprecatedDataPath",
        "deleteDeprecatedDataPath",
        "access",
        "FileDescriptor",
        "open",
        "StructStat",
        "stat",
        "unlink",
        "remove",
        "rename",
        "main",
        "purgePendingResources",
        "nPurgePendingResources",
        "nDumpGraphicsInfo",
        "nInitZygoteChildHeapProfiling"
    ],
    "classes": [
        "RemoteServiceException",
        "ActivityThread",
        "ProviderKey",
        "ActivityClientRecord",
        "ProviderClientRecord",
        "ReceiverData",
        "CreateBackupAgentData",
        "CreateServiceData",
        "BindServiceData",
        "ServiceArgsData",
        "AppBindData",
        "Profiler",
        "DumpComponentInfo",
        "ContextCleanupInfo",
        "DumpHeapData",
        "UpdateCompatibilityData",
        "RequestAssistContextExtras",
        "ApplicationThread",
        "SafeCancellationTransport",
        "H",
        "Idler",
        "GcIdler",
        "PurgeIdler",
        "ProviderRefCount",
        "AndroidOs"
    ]
}