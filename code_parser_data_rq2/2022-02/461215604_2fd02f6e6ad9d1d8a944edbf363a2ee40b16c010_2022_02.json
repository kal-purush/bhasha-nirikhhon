{
    "identifiers": [
        "numpy",
        "np",
        "sklearn",
        "metrics",
        "accuracy_score",
        "roc_auc_score",
        "f1_score",
        "recall_score",
        "metric",
        "y_test",
        "y_test_hat",
        "metric",
        "accuracy_score",
        "np",
        "argmax",
        "y_test",
        "axis",
        "np",
        "argmax",
        "y_test_hat",
        "axis",
        "metric",
        "roc_auc_score",
        "y_test",
        "y_test_hat",
        "metric",
        "f1_score",
        "np",
        "argmax",
        "y_test",
        "axis",
        "np",
        "argmax",
        "y_test_hat",
        "axis",
        "metric",
        "recall_score",
        "np",
        "argmax",
        "y_test",
        "axis",
        "np",
        "argmax",
        "y_test_hat",
        "axis",
        "result",
        "matrix",
        "matrix",
        "shape",
        "matrix",
        "shape",
        "np",
        "zeros",
        "no",
        "i",
        "dim",
        "np",
        "where",
        "matrix",
        "i",
        "i",
        "vector"
    ],
    "literals": [
        "'acc'",
        "'auc'",
        "'f1'",
        "'rec'"
    ],
    "variables": [
        "result",
        "result",
        "result",
        "result",
        "no",
        "dim",
        "vector",
        "idx",
        "vector",
        "idx"
    ],
    "comments": [
        "Accuracy metric",
        "AUROC metric",
        "F1 metric",
        "Rec",
        "Parameters",
        "Define output",
        "Convert matrix to vector"
    ],
    "docstrings": [
        "\"\"\"Evaluate performance.\n\n    Args:\n      - metric: acc or auc\n      - y_test: ground truth label\n      - y_test_hat: predicted values\n\n    Returns:\n      - performance\n    \"\"\"",
        "\"\"\"Convert two dimensional matrix into one dimensional vector\n\n    Args:\n      - matrix: two dimensional matrix\n\n    Returns:\n      - vector: one dimensional vector\n    \"\"\""
    ],
    "functions": [
        "eval",
        "matrix2vec"
    ],
    "classes": []
}