{
    "identifiers": [
        "riolog",
        "IErrorMessage",
        "MessageType",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "message",
        "Buffer",
        "buffer",
        "count",
        "count",
        "buffer",
        "count",
        "count",
        "buffer",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "buffer",
        "message",
        "count",
        "count",
        "count",
        "buffer",
        "message",
        "count",
        "buffer",
        "count",
        "buffer",
        "count",
        "suite",
        "x",
        "test",
        "x",
        "riolog",
        "riolog",
        "rioconsole",
        "x",
        "x",
        "MessageType",
        "MessageType",
        "rioconsole",
        "m",
        "riolog",
        "checkErrorEqual",
        "message",
        "m",
        "getBufferFromError",
        "message",
        "rioconsoleany",
        "buf",
        "x",
        "test",
        "x",
        "riolog",
        "riolog",
        "rioconsole",
        "x",
        "x",
        "MessageType",
        "MessageType",
        "rioconsole",
        "m",
        "riolog",
        "checkErrorEqual",
        "message",
        "m",
        "getBufferFromError",
        "message",
        "buf",
        "buf",
        "rioconsoleany",
        "bufa",
        "rioconsoleany",
        "bufb",
        "x",
        "test",
        "x",
        "riolog",
        "riolog",
        "rioconsole",
        "x",
        "x",
        "MessageType",
        "MessageType",
        "rioconsole",
        "m",
        "riolog",
        "checkErrorEqual",
        "message",
        "m",
        "getBufferFromError",
        "message",
        "buf",
        "buf",
        "rioconsoleany",
        "bufa",
        "rioconsoleany",
        "bufb",
        "x",
        "test",
        "x",
        "riolog",
        "riolog",
        "rioconsole",
        "x",
        "x",
        "MessageType",
        "MessageType",
        "rioconsole",
        "m",
        "riolog",
        "checkErrorEqual",
        "message",
        "m",
        "getBufferFromError",
        "message",
        "buf",
        "buf",
        "buf",
        "rioconsoleany",
        "bufa",
        "rioconsoleany",
        "bufb",
        "rioconsoleany",
        "bufc",
        "x",
        "test",
        "x",
        "riolog",
        "riolog",
        "rioconsole",
        "x",
        "x",
        "MessageType",
        "MessageType",
        "rioconsole",
        "m",
        "riolog",
        "checkErrorEqual",
        "message",
        "m",
        "count",
        "getBufferFromError",
        "message",
        "Buffer",
        "buf",
        "buf",
        "newBuf",
        "buf",
        "buf",
        "newBuf",
        "buf",
        "buf",
        "newBuf",
        "buf",
        "newBuf",
        "buf",
        "buf",
        "newBuf",
        "buf",
        "rioconsoleany",
        "bufa",
        "rioconsoleany",
        "bufb",
        "count",
        "rioconsoleany",
        "bufc",
        "count"
    ],
    "literals": [
        "'use strict'",
        "'assert'",
        "'../index'",
        "'../message'",
        "'utf8'",
        "'utf8'",
        "'utf8'",
        "'Input Error Buffer Tests'",
        "Single Buffer Full ${x ? 'Error' : 'Warning'}",
        "'Error'",
        "'Warning'",
        "'Test'",
        "'Hello'",
        "'World'",
        "'message'",
        "Split Buffer Full ${x ? 'Error' : 'Warning'}",
        "'Error'",
        "'Warning'",
        "'Test'",
        "'Hello'",
        "'World'",
        "'message'",
        "Split Length Buffer Full ${x ? 'Error' : 'Warning'}",
        "'Error'",
        "'Warning'",
        "'Test'",
        "'Hello'",
        "'World'",
        "'message'",
        "Split Length 2 Buffer Full ${x ? 'Error' : 'Warning'}",
        "'Error'",
        "'Warning'",
        "'Test'",
        "'Hello'",
        "'World'",
        "'message'",
        "Double Split Buffer Full ${x ? 'Error' : 'Warning'}",
        "'Error'",
        "'Warning'",
        "'Test'",
        "'Hello'",
        "'World'",
        "'message'"
    ],
    "variables": [
        "buffer",
        "count",
        "rioconsole",
        "rioconsoleany",
        "message",
        "buf",
        "rioconsole",
        "rioconsoleany",
        "message",
        "buf",
        "bufa",
        "bufb",
        "rioconsole",
        "rioconsoleany",
        "message",
        "buf",
        "bufa",
        "bufb",
        "rioconsole",
        "rioconsoleany",
        "message",
        "buf",
        "bufa",
        "bufb",
        "bufc",
        "rioconsole",
        "rioconsoleany",
        "message",
        "count",
        "buf",
        "newBuf",
        "bufa",
        "bufb",
        "bufc"
    ],
    "comments": [
        "tslint:disable-next-line:no-any",
        "tslint:disable-next-line:no-any",
        "tslint:disable-next-line:no-any",
        "tslint:disable-next-line:no-any",
        "tslint:disable-next-line:no-any"
    ],
    "docstrings": [],
    "functions": [
        "checkErrorEqual",
        "getBufferFromError"
    ],
    "classes": []
}