{
    "identifiers": [
        "execa",
        "semver",
        "inquirer",
        "chalk",
        "parseArgs",
        "replace",
        "deline",
        "resolve",
        "join",
        "parseArgs",
        "process",
        "argv",
        "argv",
        "resolve",
        "__dirname",
        "join",
        "gardenRoot",
        "execa",
        "gardenRoot",
        "_",
        "RELEASE_TYPES",
        "releaseType",
        "releaseType",
        "RELEASE_TYPES",
        "execa",
        "releaseType",
        "gardenServiceRoot",
        "prompt",
        "version",
        "proceed",
        "rollBack",
        "gardenRoot",
        "execa",
        "gardenRoot",
        "execa",
        "gardenRoot",
        "tags",
        "version",
        "force",
        "rollBack",
        "gardenRoot",
        "version",
        "version",
        "branchName",
        "execa",
        "branchName",
        "gardenRoot",
        "stripPrereleaseTags",
        "tags",
        "version",
        "execa",
        "version",
        "version",
        "gardenRoot",
        "execa",
        "gardenRoot",
        "execa",
        "version",
        "gardenRoot",
        "createTag",
        "version",
        "gardenRoot",
        "force",
        "execa",
        "gardenRoot",
        "releaseType",
        "updateExampleLinks",
        "version",
        "execa",
        "gardenRoot",
        "execa",
        "gardenRoot",
        "createTag",
        "version",
        "gardenRoot",
        "deline",
        "chalk",
        "version",
        "chalk",
        "chalk",
        "chalk",
        "version",
        "gardenRoot",
        "force",
        "version",
        "version",
        "force",
        "createTagArgs",
        "execa",
        "createTagArgs",
        "gardenRoot",
        "version",
        "force",
        "pushTagArgs",
        "execa",
        "pushTagArgs",
        "gardenRoot",
        "version",
        "version",
        "replace",
        "options",
        "changes",
        "gardenRoot",
        "execa",
        "gardenRoot",
        "version",
        "deline",
        "chalk",
        "version",
        "inquirer",
        "ans",
        "tags",
        "version",
        "tags",
        "t",
        "semver",
        "t",
        "tag",
        "prereleaseTags",
        "semver",
        "version",
        "semver",
        "version",
        "tag",
        "execa",
        "tag",
        "release",
        "process",
        "err",
        "err",
        "process"
    ],
    "literals": [
        "\"execa\"",
        "\"semver\"",
        "\"inquirer\"",
        "\"chalk\"",
        "\"minimist\"",
        "\"replace-in-file\"",
        "\"deline\"",
        "\"path\"",
        "\"minor\"",
        "\"patch\"",
        "\"preminor\"",
        "\"prepatch\"",
        "\"prerelease\"",
        "\"minor\"",
        "\"patch\"",
        "\"preminor\"",
        "\"prepatch\"",
        "\"prerelease\"",
        "\"..\"",
        "\"garden-service\"",
        "\"git\"",
        "\"diff\"",
        "\"--exit-code\"",
        "\"Current branch has unstaged changes, aborting.\"",
        "Invalid release type ${releaseType}, available types are: ${RELEASE_TYPES.join(\", \")}",
        "\", \"",
        "\"npm\"",
        "\"version\"",
        "\"--no-git-tag-version\"",
        "\"Pulling remote tags...\"",
        "\"git\"",
        "\"fetch\"",
        "\"origin\"",
        "\"--tags\"",
        "\"git\"",
        "\"tag\"",
        "\"\\n\"",
        "Tag ${version} already exists. Use \"--force\" to override.",
        "release-${version}",
        "Checking out to branch ${branchName}...",
        "\"git\"",
        "\"checkout\"",
        "\"-b\"",
        "\"Updating changelog...\"",
        "\"git-chglog\"",
        "\"--next-tag\"",
        "\"--output\"",
        "\"CHANGELOG.md\"",
        "..${version}",
        "\"Committing changes...\"",
        "\"git\"",
        "\"add\"",
        "\"CHANGELOG.md\"",
        "\"garden-service/package.json\"",
        "\"garden-service/package-lock.json\"",
        "\"git\"",
        "\"commit\"",
        "\"-m\"",
        "chore(release): bump version to ${version}",
        "\"Pushing tag...\"",
        "\"git\"",
        "\"fetch\"",
        "\"origin\"",
        "\"--tags\"",
        "\"minor\"",
        "\"Updating links to examples and re-pushing tag...\"",
        "\"git\"",
        "\"add\"",
        "\"README.md\"",
        "\"docs\"",
        "\"git\"",
        "\"commit\"",
        "\"--amend\"",
        "\"--no-edit\"",
        "\\nVersion ${chalk.bold.cyan(version)} has been ${chalk.bold(\"tagged\")}, ${chalk.bold(\"committed\")},\n    and ${chalk.bold(\"pushed\")} to Github! ðŸŽ‰\\n\n\n    A CI job that creates the release artifacts is currently in process: https://circleci.com/gh/garden-io/garden\\n\n\n    Please refer to our contributing docs for the next steps:\n    https://github.com/garden-io/garden/blob/master/CONTRIBUTING.md",
        "\"tagged\"",
        "\"committed\"",
        "\"pushed\"",
        "string",
        "string",
        "\"tag\"",
        "\"-a\"",
        "\"-m\"",
        "chore(release): release ${version}",
        "\"-f\"",
        "\"git\"",
        "\"push\"",
        "\"origin\"",
        "\"--no-verify\"",
        "\"-f\"",
        "\"git\"",
        "string",
        "\"docs/**/*.md\"",
        "\"README.md\"",
        "github.com/garden-io/garden/tree/${version}/examples/",
        "\"Modified files:\"",
        "\", \"",
        "string",
        "\"Undoing changes to package.json and package-lock.json\"",
        "\"git\"",
        "\"checkout\"",
        "\"garden-service/package.json\"",
        "\"garden-service/package-lock.json\"",
        "string",
        "Running this script will create a tag for ${chalk.bold.cyan(version)} and push it to Github.\n    This triggers a CI process that creates the release artifacts.\\n\n\n    Are you sure you want to continue?",
        "\"continue\"",
        "\"y\"",
        "string",
        "string",
        "\"prerelease\"",
        "\"git\"",
        "\"tag\"",
        "\"-d\""
    ],
    "variables": [
        "RELEASE_TYPES",
        "argv",
        "releaseType",
        "force",
        "gardenRoot",
        "gardenServiceRoot",
        "version",
        "proceed",
        "tags",
        "branchName",
        "createTagArgs",
        "pushTagArgs",
        "options",
        "changes",
        "message",
        "ans",
        "prereleaseTags"
    ],
    "comments": [
        "Parse arguments",
        "Check if branch is clean",
        "Bump package.json and package-lock.json version. Returns the version that was set.",
        "Check if user wants to continue",
        "Pull remote tags",
        "Verify tag doesn't exist",
        "Checkout to a release branch",
        "Remove pre-release tags so they don't get included in the changelog",
        "Update changelog",
        "Add and commit changes",
        "Tag the commit and push the tag",
        "Reset local tag state (after stripping release tags)",
        "For minor releases, we update links to examples in the docs so that they point to the relevant tag.",
        "E.g.: \"github.com/garden-io/tree/v0.8.0/example/...\" becomes \"github.com/garden-io/tree/v0.9.0/example/...\"",
        "Note that we do this after pushing the tag originally. This because we check that links are valid in CI",
        "and the check would fail if the tag hasen't been created in the first place.",
        "Add and commit changes to example links",
        "Tag the commit and force push the tag after updating the links (this triggers another CI build)",
        "Tag the commit",
        "Push the tag",
        "Clean up changes to package.json and package-lock.json. This is safe since we know the branch is clean.",
        "If we're not releasing a pre-release, we remove the tag. Or,",
        "if we are releasing a pre-release and the tag is not from the same cycle, we remove it.",
        "E.g., if the current tag is v0.5.0-2 and we're releasing v0.9.0-2, we remove it.",
        "If the current tag is v0.9.0-0 and we're releasing v0.9.0-2, we keep it."
    ],
    "docstrings": [
        "* Performs the following steps to prepare for a release:\n * 1. Check out to a branch named release-${version}\n * 2. Bump the version in garden-service/package.json and garden-service/package-lock.json.\n * 5. Update the changelog.\n * 6. Add and commit CHANGELOG.md, garden-service/package.json and garden-service/package-lock.json\n * 7. Tag the commit.\n * 8. Push the tag. This triggers CircleCI process that creates the release artifacts.\n * 9. If we're making a minor release, update links to examples and re-push the tag.\n *\n * Usage: ./bin/release.ts <minor | patch | preminor | prepatch | prerelease> [--force]",
        "* We don't include pre-release tags in the changelog except for the current release cycle.\n * So if we're releasing, say, v0.9.1-3, we include the v0.9.1-0, v0.9.1-1, and v0.9.1-2 tags.\n *\n * Once we release v0.9.1, we remove the pre-release tags, so the changelog will only show the changes\n * between v0.9.0 and v0.9.1."
    ],
    "functions": [
        "release",
        "createTag",
        "updateExampleLinks",
        "rollBack",
        "prompt",
        "stripPrereleaseTags"
    ],
    "classes": []
}