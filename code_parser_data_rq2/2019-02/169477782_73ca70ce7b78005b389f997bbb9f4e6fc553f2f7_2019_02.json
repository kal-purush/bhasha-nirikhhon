{
    "identifiers": [
        "pygame",
        "sys",
        "time",
        "WHITE",
        "BLACK",
        "BLACK",
        "DEFAULT_BLOCKSIZE",
        "pygame",
        "sprite",
        "Sprite",
        "x_pos",
        "y_pos",
        "pygame",
        "sprite",
        "Sprite",
        "draw_cell",
        "rect",
        "x",
        "rect",
        "y",
        "x_pos",
        "y_pos",
        "zoom",
        "rect",
        "x",
        "rect",
        "y",
        "draw_cell",
        "WIDTH",
        "HEIGHT",
        "zoom",
        "BLOCKSIZE",
        "BLOCKSIZE",
        "x_pos",
        "prev_blocksize",
        "midwidth",
        "prev_blocksize",
        "y_pos",
        "prev_blocksize",
        "midheight",
        "prev_blocksize",
        "rect",
        "midwidth",
        "BLOCKSIZE",
        "x_dist",
        "rect",
        "midheight",
        "BLOCKSIZE",
        "y_dist",
        "pygame",
        "Surface",
        "BLOCKSIZE",
        "BLOCKSIZE",
        "image",
        "fill",
        "SPRITE_COLOUR",
        "image",
        "get_rect",
        "pygame",
        "init",
        "pygame",
        "display",
        "set_caption",
        "pygame",
        "display",
        "set_mode",
        "WIDTH",
        "HEIGHT",
        "pygame",
        "time",
        "Clock",
        "BLOCKSIZE",
        "DEFAULT_BLOCKSIZE",
        "pygame",
        "sprite",
        "Group",
        "pygame",
        "display",
        "update",
        "gameloop",
        "x_pos",
        "y_pos",
        "cell",
        "cell_group",
        "cell",
        "rect",
        "collidepoint",
        "x_pos",
        "y_pos",
        "cell",
        "kill",
        "cell",
        "pos",
        "pos",
        "pos",
        "BLOCKSIZE",
        "pos",
        "pos",
        "BLOCKSIZE",
        "cell_kill",
        "x_pos",
        "y_pos",
        "LiveCell",
        "x_pos",
        "y_pos",
        "cell_group",
        "add",
        "cell",
        "pos",
        "pos",
        "pos",
        "i",
        "BLOCKSIZE",
        "BLOCKSIZE",
        "j",
        "BLOCKSIZE",
        "BLOCKSIZE",
        "neighbours",
        "append",
        "x",
        "i",
        "y",
        "j",
        "neighbours",
        "remove",
        "x",
        "y",
        "neighbours",
        "time",
        "time",
        "IT_LENGTH",
        "time",
        "time",
        "iteration",
        "clock",
        "tick",
        "FPS",
        "events",
        "update",
        "config_stage",
        "iter",
        "cell",
        "cell_group",
        "cell",
        "rect",
        "x",
        "cell",
        "rect",
        "y",
        "key",
        "live_cells",
        "neighbour",
        "get_cell_neighbours",
        "key",
        "neighbour",
        "live_cells",
        "live_cells",
        "neighbour",
        "neighbour",
        "neighbours",
        "neighbours",
        "neighbour",
        "rules",
        "live_cells",
        "neighbours",
        "pygame",
        "get",
        "pygame",
        "QUIT",
        "pygame",
        "quit",
        "sys",
        "exit",
        "config_stage",
        "pygame",
        "MOUSEBUTTONDOWN",
        "button",
        "add_delete_cell",
        "pos",
        "config_stage",
        "pygame",
        "KEYDOWN",
        "key",
        "pygame",
        "K_RETURN",
        "config_stage",
        "pygame",
        "KEYDOWN",
        "key",
        "pygame",
        "K_RETURN",
        "reset",
        "pygame",
        "KEYUP",
        "key",
        "pygame",
        "K_m",
        "key",
        "pygame",
        "K_p",
        "zoom",
        "key",
        "scroll",
        "screen",
        "fill",
        "BACK_COLOUR",
        "draw_grid",
        "cell_group",
        "draw",
        "screen",
        "pygame",
        "display",
        "update",
        "i",
        "WIDTH",
        "BLOCKSIZE",
        "pygame",
        "draw",
        "line",
        "screen",
        "GRID_COLOUR",
        "i",
        "i",
        "HEIGHT",
        "j",
        "HEIGHT",
        "BLOCKSIZE",
        "pygame",
        "draw",
        "line",
        "screen",
        "GRID_COLOUR",
        "j",
        "WIDTH",
        "j",
        "pygame",
        "key",
        "get_pressed",
        "keys",
        "pygame",
        "K_LEFT",
        "BLOCKSIZE",
        "keys",
        "pygame",
        "K_RIGHT",
        "BLOCKSIZE",
        "keys",
        "pygame",
        "K_UP",
        "BLOCKSIZE",
        "keys",
        "pygame",
        "K_DOWN",
        "BLOCKSIZE",
        "cell",
        "cell_group",
        "cell",
        "rect",
        "x",
        "x_vel",
        "cell",
        "rect",
        "y",
        "y_vel",
        "key",
        "BLOCKSIZE",
        "key",
        "pygame",
        "K_m",
        "BLOCKSIZE",
        "BLOCKSIZE",
        "key",
        "pygame",
        "K_p",
        "BLOCKSIZE",
        "BLOCKSIZE",
        "update_cells",
        "cell",
        "cell_group",
        "cell",
        "zoom_redraw",
        "zoom",
        "live_cells",
        "neighbours",
        "key",
        "neighbours",
        "neighbours",
        "key",
        "key",
        "key",
        "LiveCell",
        "x_pos",
        "y_pos",
        "cell_group",
        "add",
        "cell",
        "key",
        "live_cells",
        "live_cells",
        "key",
        "live_cells",
        "key",
        "key",
        "key",
        "cell_kill",
        "x_pos",
        "y_pos",
        "GameOfLife",
        "gol",
        "reset"
    ],
    "literals": [
        "\"Game of Life\"",
        "\"\\n  \\\nWelcome to Game of Life \\n\\n  \\\nLeft-click squares to select cells in your initial configuration  \\n\\n  \\\nUse the keyboard arrows to scroll across the grid \\n\\n  \\\nZoom in or out by pressing 'p' or 'm' \\n\\n  \\\nThe game starts when your press the \\'enter\\' key \\n\\n  \\\nPress \\'enter\\' again at any time to start a new game\""
    ],
    "variables": [
        "WHITE",
        "BLACK",
        "BACK_COLOUR",
        "GRID_COLOUR",
        "SPRITE_COLOUR",
        "WIDTH",
        "HEIGHT",
        "DEFAULT_BLOCKSIZE",
        "BLOCKSIZE",
        "FPS",
        "IT_LENGTH",
        "x_pos",
        "y_pos",
        "midwidth",
        "midheight",
        "prev_blocksize",
        "prev_blocksize",
        "x_dist",
        "y_dist",
        "x",
        "y",
        "image",
        "rect",
        "screen",
        "clock",
        "config_stage",
        "BLOCKSIZE",
        "cell_group",
        "config_stage",
        "x_pos",
        "y_pos",
        "cell",
        "neighbours",
        "x",
        "y",
        "iteration",
        "neighbours",
        "live_cells",
        "live_cells",
        "neighbours",
        "neighbour",
        "config_stage",
        "x_vel",
        "y_vel",
        "keys",
        "x_vel",
        "x_vel",
        "y_vel",
        "y_vel",
        "zoom",
        "update_cells",
        "BLOCKSIZE",
        "update_cells",
        "zoom",
        "BLOCKSIZE",
        "update_cells",
        "zoom",
        "x_pos",
        "y_pos",
        "cell",
        "x_pos",
        "y_pos",
        "gol"
    ],
    "comments": [
        "use pygame library for gui (www.pygame.org)",
        "define colours for pygame in (r, g, b) format",
        "background colour",
        "grid colour",
        "colour of live cells",
        "set width and height of game window (should be multiples of 16)",
        "grid block size (should be 8 or 16)",
        "game frames per second",
        "time period between each game iteration in seconds",
        "sprite for a live cell",
        "need to initialize the sprite",
        "draw cell at current scale",
        "set position",
        "redraw live cells to the correct size when the zoom is changed, maintaining screen centre",
        "get previous position",
        "draw cell at current scale",
        "get positions of grid mid-lines to update sprite positions",
        "need previous blocksize to calculate new position",
        "x and y separations from middle in numbers of blocks",
        "update new positions",
        "draw cell at the current scale",
        "represent live cell by square of specified colour",
        "get rectangular area on screen in which sprite is contained",
        "initialize the game",
        "initialize pygame",
        "set title",
        "create a pygame window",
        "initialize clock to control game speed",
        "start a new game",
        "reset zoom to default",
        "self.screen.fill(BACK_COLOUR)",
        "self.draw_grid()",
        "this group holds all live cell sprites",
        "delete cell at input position",
        "return true if cell deleted and false otherwise",
        "add or delete live cell at clicked position",
        "get top-left coordinates of cell",
        "delete live cell if one exists in clicked position, and if not create one",
        "return list of coordinates of 8 neighbouring cells",
        "initialize list to store neighbours",
        "get own coordinates",
        "loop through neighbours and save coordinates",
        "remove self from neighbours list",
        "main loop of the game",
        "only perform game iteration in periods of IT_LENGTH",
        "run loop at specified speed",
        "check for events",
        "update the screen",
        "perform next game iteration when in the active stage",
        "perform one iteration of game of life",
        "initialize empty dicts to store live cells and their neighbours",
        "store live cells and initialize counts to zero",
        "listen for events in game loop",
        "quit program if a quit event is found",
        "int 1 corresponds to left-click",
        "self.zoom()",
        "draw updates after iterations, scrolling, etc. (only need to update sections within one square of a sprite)",
        "draw grid on current screen",
        "helper function to draw grid",
        "helper function for scrolling using keyboard arrows",
        "initialize x and y scrolling velocities",
        "update velocities based on keyboard input",
        "move all cells to perform scrolling",
        "helper function to zoom in and out using keyboard",
        "only redraw sprites if the zoom has been changed",
        "rules for updating cells"
    ],
    "docstrings": [],
    "functions": [
        "zoom_redraw",
        "draw_cell",
        "reset",
        "cell_kill",
        "add_delete_cell",
        "get_cell_neighbours",
        "gameloop",
        "iter",
        "events",
        "update",
        "draw_grid",
        "scroll",
        "zoom",
        "rules"
    ],
    "classes": [
        "LiveCell",
        "GameOfLife"
    ]
}