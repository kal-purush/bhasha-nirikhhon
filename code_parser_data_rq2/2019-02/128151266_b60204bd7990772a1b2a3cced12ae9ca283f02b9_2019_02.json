{
    "identifiers": [
        "IDatetimeColumn",
        "reconcileNull",
        "IReconciliation",
        "value",
        "value",
        "value",
        "value",
        "stringVal",
        "stringVal",
        "DATETIME_REGEXP",
        "match",
        "match",
        "yStr",
        "yStr",
        "YFIRST",
        "YFIRST",
        "yStr",
        "match",
        "match",
        "match",
        "match",
        "match",
        "m",
        "d",
        "H",
        "M",
        "date",
        "y",
        "date",
        "m",
        "date",
        "d",
        "date",
        "S",
        "ONESEC",
        "value",
        "options",
        "convertToMs",
        "value",
        "value",
        "reconcileNull",
        "value",
        "options",
        "value",
        "options",
        "value",
        "convertToMs",
        "value",
        "value",
        "reconcileNull",
        "value",
        "options"
    ],
    "literals": [
        "'dash-table/components/Table/props'",
        "'./null'",
        "'.'",
        "'number'",
        "'string'",
        "'1'",
        "'string'"
    ],
    "variables": [
        "DATETIME_REGEXP",
        "ONESEC",
        "YFIRST",
        "stringVal",
        "match",
        "yStr",
        "y",
        "m",
        "d",
        "H",
        "M",
        "S",
        "date"
    ],
    "comments": [
        "pattern and convertToMs pulled from plotly.js",
        "(simplified - no international calendars for now)",
        "https://github.com/plotly/plotly.js/blob/master/src/lib/dates.js",
        "Note we allow timezone info but ignore it - at least for now.",
        "for 2-digit years, the first year we map them onto",
        "Also pulled from plotly.js - see discussion there for details",
        "Please don't use 2-digit years!",
        "stringify numbers, in case of a year as a number",
        "js Date objects have months 0-11, not 1-12",
        "includes fractional seconds",
        "javascript takes new Date(0..99,m,d) to mean 1900-1999, so",
        "to support years 0-99 we need to use setFullYear explicitly",
        "Note that 2000 is a leap year.",
        "The regexp catches most faulty dates & times, but invalid month/day",
        "combinations will show up here",
        "TODO: also convert to 4-digit year and 2-digit month & day?"
    ],
    "docstrings": [],
    "functions": [
        "convertToMs",
        "coerce",
        "validate"
    ],
    "classes": []
}