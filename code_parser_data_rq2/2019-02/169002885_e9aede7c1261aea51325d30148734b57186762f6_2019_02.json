{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "torch",
        "nn",
        "optim",
        "torch",
        "autograd",
        "Variable",
        "net",
        "trainloader",
        "nn",
        "MSELoss",
        "optim",
        "Adam",
        "net",
        "parameters",
        "lr",
        "iter",
        "trainloader",
        "dataiter",
        "next",
        "Variable",
        "images",
        "Variable",
        "images",
        "optimizer",
        "zero_grad",
        "net",
        "forward",
        "inputs",
        "criterion",
        "output",
        "targets",
        "loss",
        "backward",
        "optimizer",
        "step",
        "image",
        "ax",
        "title",
        "normalize",
        "ax",
        "plt",
        "subplots",
        "image",
        "numpy",
        "transpose",
        "normalize",
        "np",
        "array",
        "np",
        "array",
        "std",
        "image",
        "mean",
        "np",
        "clip",
        "image",
        "ax",
        "imshow",
        "image",
        "ax",
        "spines",
        "set_visible",
        "ax",
        "spines",
        "set_visible",
        "ax",
        "spines",
        "set_visible",
        "ax",
        "spines",
        "set_visible",
        "ax",
        "tick_params",
        "axis",
        "length",
        "ax",
        "set_xticklabels",
        "ax",
        "set_yticklabels",
        "ax",
        "img",
        "recon",
        "plt",
        "subplots",
        "ncols",
        "sharex",
        "sharey",
        "axes",
        "imshow",
        "img",
        "numpy",
        "squeeze",
        "axes",
        "imshow",
        "recon",
        "data",
        "numpy",
        "squeeze",
        "ax",
        "axes",
        "ax",
        "axis",
        "ax",
        "set_adjustable",
        "img",
        "ps",
        "version",
        "ps",
        "data",
        "numpy",
        "squeeze",
        "ax1",
        "ax2",
        "plt",
        "subplots",
        "figsize",
        "ncols",
        "ax1",
        "imshow",
        "img",
        "resize_",
        "numpy",
        "squeeze",
        "ax1",
        "axis",
        "ax2",
        "barh",
        "np",
        "arange",
        "ps",
        "ax2",
        "set_aspect",
        "ax2",
        "set_yticks",
        "np",
        "arange",
        "version",
        "ax2",
        "set_yticklabels",
        "np",
        "arange",
        "version",
        "ax2",
        "set_yticklabels",
        "size",
        "ax2",
        "set_title",
        "ax2",
        "set_xlim",
        "plt",
        "tight_layout",
        "plt",
        "show"
    ],
    "literals": [
        "'top'",
        "'right'",
        "'left'",
        "'bottom'",
        "'both'",
        "''",
        "''",
        "'off'",
        "'box-forced'",
        "\"MNIST\"",
        "'off'",
        "\"MNIST\"",
        "\"Fashion\"",
        "'T-shirt/top'",
        "'Trouser'",
        "'Pullover'",
        "'Dress'",
        "'Coat'",
        "'Sandal'",
        "'Shirt'",
        "'Sneaker'",
        "'Bag'",
        "'Ankle Boot'",
        "'small'",
        "'Class Probability'"
    ],
    "variables": [
        "criterion",
        "optimizer",
        "dataiter",
        "images",
        "labels",
        "inputs",
        "targets",
        "output",
        "loss",
        "fig",
        "ax",
        "image",
        "mean",
        "std",
        "image",
        "image",
        "fig",
        "axes",
        "ps",
        "fig"
    ],
    "comments": [
        "Create Variables for the inputs and targets",
        "Clear the gradients from all Variables",
        "Forward pass, then backward pass, then update weights"
    ],
    "docstrings": [
        "\"\"\"Imshow for Tensor.\"\"\"",
        "''' Function for displaying an image (as a PyTorch Tensor) and its\n        reconstruction also a PyTorch Tensor\n    '''",
        "''' Function for viewing an image and it's predicted classes.\n    '''"
    ],
    "functions": [
        "test_network",
        "imshow",
        "view_recon",
        "view_classify"
    ],
    "classes": []
}