{
    "identifiers": [
        "re",
        "re",
        "search",
        "regex",
        "test_str",
        "matches",
        "format",
        "start",
        "matches",
        "start",
        "end",
        "matches",
        "end",
        "match",
        "matches",
        "group"
    ],
    "literals": [
        "r\"^(?:(?! *\\d+:).*\\n)*\"",
        "\"\\n\"",
        "\"GammaVision spectrum printed on 08/02/2019 at 10:18:02\\n\"",
        "\">INa MCB 1 Input 1                                                                                                                   \\n\"",
        "\">Fondo cerrado                                                                                                                       \\n\"",
        "\"    0:          0         0         0         4        22       155       445       702      1056      1353      1550      1394\\n\"",
        "\"   12:       1008       694       572       508       490       438       517       488       537       503       524       501\\n\"",
        "\"   24:        499       518       576       526       580       550       609       610       595       586       628       585\\n\"",
        "\"   36:        630       630       596       527       561       569       551       508       508       532       554       549\\n\"",
        "\"   48:        464       480       485       493       513       484       506       492       497       479       499       508\\n\"",
        "\"   60:        497       500       441       506       464       435       478       433       416       419       424       421\\n\"",
        "\"   72:        376       383       359       340       418       359       320       324       364       386       348       355\\n\"",
        "\"   84:        386       415       418       475       502       551       699       701       772       854       982       985\\n\"",
        "\"   96:       1045      1098      1095      1090      1028       966       891       846       749       640       567       501\\n\"",
        "\"  108:        460       396       426       331       328       289       277       298       289       252       252       233\\n\"",
        "\"  120:        212       222       245       230       232       272       227       204       229       170       209       224\\n\"",
        "\"  132:        223       183       210       199       194       176       194       203       172       173       169       173\\n\"",
        "\"  144:        183       173       151       161       171       173       169       149       179       184       164       161\\n\"",
        "\"  156:        186       166       191       169       202       197       240       250       246       281       275       274\\n\"",
        "\"  168:        347       328       282       330       321       287       289       330       264       245       241       249\\n\"",
        "\"  180:        239       241       275       244       233       218       270       244       217       268       237       267\\n\"",
        "\"  192:        250       230       231       242       238       205       208       174       185       186       138       150\\n\"",
        "\"  204:        141       128       118        99       110        93        81        87        87        70        59        60\\n\"",
        "\"  216:         64        48        50        65        52        40        42        41        46        35        35        30\\n\"",
        "\"  228:         30        30        37        33        25        20        38        20        33        21        31        23\\n\"",
        "\"  240:         24        21        23        24        18        27        29        24        20        21        22        23\\n\"",
        "\"  252:         24        12        14        21        13        19        17        18        21        17        15        22\\n\"",
        "\"  264:         15        15        15        12        11        14        20        21        17        12        18        20\\n\"",
        "\"  276:         14        18        11        13        20        16        10        20        18        13        17        13\\n\"",
        "\"  288:         10        17        15        18        14        14        12        12        14        20        24        15\\n\"",
        "\"  300:          7        13        14        15        16        11         9        14        18        14        19         7\\n\"",
        "\"  312:         14         9        13        11        14        16        14        11        12        17        16        10\\n\"",
        "\"  324:         10        10        17        12        13        17         9         5         7        11        10         6\\n\"",
        "\"  336:          8         9         6         6        21         5         6         8         5        13         9        11\\n\"",
        "\"  348:          9        10         7         7        23        10        16        13        15        10         6        11\\n\"",
        "\"  360:         16         8        11         9         5        14         4         7        19        11         7         6\\n\"",
        "\"  372:          9         8         6        13         8         8        12         8         7         6         6         5\\n\"",
        "\"  384:          4         7         2         3         7         6         4         2         5         3         4         3\\n\"",
        "\"  396:          4         1         3         4         0         5         5         1         5         0         1         2\\n\"",
        "\"  408:          2         2         1         2         2         1         1         1         0         2         3         3\\n\"",
        "\"  420:          1         1         3         2         1         0         1         0         2         1         2         4\\n\"",
        "\"  432:          1         1         2         2         1         1         0         3         1         0         0         0\\n\"",
        "\"  444:          0         1         2         1         2         0         2         3         1         1         0         1\\n\"",
        "\"  456:          0         0         4         0         4         0         2         0         0         1         0         1\\n\"",
        "\"  468:          0         3         3         1         0         0         0         0         3         1         0         1\\n\"",
        "\"  480:          1         0         0         2         0         1         2         1         2         3         1         2\\n\"",
        "\"  492:          3         2         1         2         1         1         0         0       131       138       150       126\\n\"",
        "\"  504:        147       150       127       129       144       141       136       124\"",
        "\"Match was found at {start}-{end}: {match}\""
    ],
    "variables": [
        "regex",
        "test_str",
        "matches"
    ],
    "comments": [
        "coding=utf8",
        "the above tag defines encoding for this document and is for Python 2.x compatibility",
        "for groupNum in range(0, len(matches.groups())):",
        "groupNum = groupNum + 1",
        "",
        "print (\"Group {groupNum} found at {start}-{end}: {group}\".format(groupNum = groupNum, start = matches.start(groupNum), end = matches.end(groupNum), group = matches.group(groupNum)))",
        "Note: for Python 2.7 compatibility, use ur\"\" to prefix the regex and u\"\" to prefix the test string and substitution."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}