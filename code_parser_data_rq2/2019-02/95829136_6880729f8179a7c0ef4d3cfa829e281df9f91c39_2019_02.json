{
    "identifiers": [
        "com",
        "brandon3055",
        "projectintelligence",
        "utils",
        "javax",
        "net",
        "ssl",
        "SSLContext",
        "javax",
        "net",
        "ssl",
        "TrustManager",
        "javax",
        "net",
        "ssl",
        "TrustManagerFactory",
        "javax",
        "net",
        "ssl",
        "X509TrustManager",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "security",
        "KeyManagementException",
        "java",
        "security",
        "KeyStore",
        "java",
        "security",
        "KeyStoreException",
        "java",
        "security",
        "NoSuchAlgorithmException",
        "java",
        "security",
        "cert",
        "CertificateException",
        "java",
        "security",
        "cert",
        "X509Certificate",
        "java",
        "util",
        "Arrays",
        "keyStoreInputStream",
        "getResourceAsStream",
        "keyStore",
        "KeyStore",
        "getInstance",
        "KeyStore",
        "getDefaultType",
        "keyStore",
        "load",
        "keyStoreInputStream",
        "toCharArray",
        "trustCertificates",
        "keyStore",
        "e",
        "keyStore",
        "trustManagerFactory",
        "TrustManagerFactory",
        "getInstance",
        "TrustManagerFactory",
        "getDefaultAlgorithm",
        "trustManagerFactory",
        "init",
        "defaultTrustManager",
        "getX509TrustManager",
        "trustManagerFactory",
        "trustManagerFactory",
        "init",
        "keyStore",
        "customTrustManager",
        "getX509TrustManager",
        "trustManagerFactory",
        "wrappingTrustManager",
        "Override",
        "joinArrays",
        "defaultTrustManager",
        "getAcceptedIssuers",
        "customTrustManager",
        "getAcceptedIssuers",
        "Override",
        "chain",
        "authType",
        "customTrustManager",
        "checkServerTrusted",
        "chain",
        "authType",
        "e",
        "defaultTrustManager",
        "checkServerTrusted",
        "chain",
        "authType",
        "Override",
        "chain",
        "authType",
        "customTrustManager",
        "checkClientTrusted",
        "chain",
        "authType",
        "e",
        "defaultTrustManager",
        "checkClientTrusted",
        "chain",
        "authType",
        "sslContext",
        "SSLContext",
        "getInstance",
        "sslContext",
        "init",
        "wrappingTrustManager",
        "SSLContext",
        "setDefault",
        "sslContext",
        "e",
        "e",
        "trustManagerFactory",
        "trustManager",
        "trustManagerFactory",
        "getTrustManagers",
        "trustManager",
        "trustManager",
        "first",
        "second",
        "result",
        "Arrays",
        "copyOf",
        "first",
        "first",
        "length",
        "second",
        "length",
        "arraycopy",
        "second",
        "result",
        "first",
        "length",
        "second",
        "length",
        "result"
    ],
    "literals": [
        "\"/dst_root_ca_x3.jks\"",
        "\"password\"",
        "\"TLS\"",
        "\"Failed to find X509TrustManager\""
    ],
    "variables": [],
    "comments": [
        "Trust the \"IdenTrust DST Root CA X3\" certificate (used by Let's Encrypt, which is used by paste.dimdev.org)",
        "Init TFM with default trust store",
        "Init TMF with new trust store",
        "Create a trust manager that wraps the default one",
        "Replace the default SSL context"
    ],
    "docstrings": [
        "* Created by brandon3055 on 14/02/19.\n *\n * This fix is copied from VanillaFix https://github.com/DimensionalDevelopment/VanillaFix\n * With permission from the vanilla fix dev.\n *",
        "Trusts certificates in a key store on top of the ones currently trusted by wrapping the TrustManager"
    ],
    "functions": [
        "fixSSL",
        "trustCertificates",
        "getAcceptedIssuers",
        "checkServerTrusted",
        "checkClientTrusted",
        "X509TrustManager",
        "getX509TrustManager",
        "joinArrays"
    ],
    "classes": [
        "SSLFix"
    ]
}