{
    "identifiers": [
        "xhrtext",
        "xhrtext",
        "receive",
        "node",
        "index",
        "node",
        "index",
        "node",
        "node",
        "lines",
        "lines",
        "line",
        "line",
        "line",
        "line",
        "line",
        "line",
        "index",
        "length",
        "index",
        "index",
        "Line",
        "node",
        "index",
        "keepcomment",
        "line",
        "line",
        "comment",
        "COMMENT_START",
        "line",
        "lines",
        "comment",
        "comment",
        "lines",
        "line",
        "comment",
        "COMMENT_END",
        "line",
        "Comment",
        "lines",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "newWindow",
        "textincom",
        "newWindow",
        "textincom",
        "location",
        "comment",
        "lineNum",
        "comment",
        "lineNum",
        "comment",
        "comment",
        "comment",
        "comment",
        "line",
        "line",
        "MutationObserver",
        "File",
        "Extension",
        "keepcomment",
        "XMLHttpRequest",
        "FormData",
        "data",
        "input",
        "xhr",
        "API_URL",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "xhr",
        "receiveJson",
        "i",
        "i",
        "i",
        "text",
        "i",
        "text",
        "text",
        "xhr",
        "data"
    ],
    "literals": [
        "'blob-expanded'",
        "''",
        "'none'",
        "'blob-code'",
        "\" newlinecom \"",
        "\"about:blank\"",
        "\"\"",
        "\"_blank\"",
        "'#L'",
        "''",
        "'js-repo-pjax-container'",
        "'http://127.0.0.1:5000/'",
        "'input'",
        "'POST'",
        "\"Hi\"",
        "'comment'",
        "\"LC\"",
        "\"orange\"",
        "\"black\"",
        "\"Hello\""
    ],
    "variables": [
        "COMMENT_START",
        "COMMENT_END",
        "COMMENT_SYNTAX",
        "COMMENT_RE",
        "keepcomment",
        "receive",
        "comment",
        "lines",
        "index",
        "length",
        "node",
        "line",
        "newWindow",
        "lineNum",
        "API_URL",
        "input",
        "xhr",
        "data",
        "receiveJson",
        "i"
    ],
    "comments": [
        "this.show2();"
    ],
    "docstrings": [
        "* @public\n     * @constructs Line\n     * @param {Node} node A single line in a file.\n     * @param {Number} index The index of the line in the file.",
        "* Render line (adds comment style).\n     * @public\n     * @instance\n     * @method render",
        "* Show line.\n     * @public\n     * @instance\n     * @method show",
        "* Hide line.\n     * @public\n     * @instance\n     * @method hide",
        "* Cleanup and destroy line.\n     * @public\n     * @instance\n     * @method destroy",
        "* @public\n     * @instance\n     * @method constructor\n     * @param {Line[]} lines - The lines of the comment.",
        "* Render the comment (creating a toggle).\n     * @public\n     * @instance\n     * @method render",
        "* Show the comment.\n     * @public\n     * @instance\n     * @method show",
        "* Hide the comment.\n     * @public\n     * @instance\n     * @method hide",
        "* Cleanup and destroy comment.\n     * @public\n     * @instance\n     * @method destroy",
        "* @public\n   * @class File",
        "* @public\n     * @instance\n     * @method constructor",
        "* Break down lines of a file into comments.\n     * @public\n     * @instance\n     * @method parse",
        "* Render the files comments.\n     * @public\n     * @instance\n     * @method show",
        "* Show file comments.\n     * @public\n     * @instance\n     * @method hide",
        "* Hide file comments.\n     * @public\n     * @instance\n     * @method hide",
        "* Cleanup and destroy file.\n     * @public\n     * @instance\n     * @method destroy",
        "* @public\n     * @instance\n     * @method constructor",
        "* Creates a MutationObserver that watches for the file viewer to be swapped\n     * out.\n     * @public\n     * @instance\n     * @method observe",
        "* Renders the extension\n     * @public\n     * @instance\n     * @method render",
        "* Cleanup and destroy extension.\n     * @public\n     * @instance\n     * @method destroy",
        "* Kick off extension.\n   * @type {Extension}"
    ],
    "functions": [
        "render",
        "show",
        "hide",
        "destroy",
        "render",
        "show",
        "hide",
        "destroy",
        "parse",
        "render",
        "show",
        "show2",
        "send",
        "hide",
        "destroy",
        "observe",
        "render",
        "destroy"
    ],
    "classes": [
        "Line",
        "Comment",
        "File",
        "Extension"
    ]
}