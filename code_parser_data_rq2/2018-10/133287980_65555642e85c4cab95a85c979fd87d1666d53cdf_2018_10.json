{
    "identifiers": [
        "argparse",
        "os",
        "subprocess",
        "gzip",
        "shutil",
        "datetime",
        "datetime",
        "contextlib",
        "contextlib",
        "contextmanager",
        "cd_path",
        "os",
        "getcwd",
        "os",
        "chdir",
        "cd_path",
        "os",
        "chdir",
        "saved_path",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "STARlong",
        "starcmd",
        "args",
        "threads",
        "args",
        "index",
        "args",
        "annotation_gtf",
        "cmd",
        "args",
        "annotation_gtf",
        "args",
        "sjdbFileChrStartEnd",
        "cmd",
        "cmd",
        "args",
        "outFilterMultimapNmax",
        "args",
        "alignSJoverhangMin",
        "args",
        "alignSJDBoverhangMin",
        "args",
        "outFilterMismatchNmax",
        "args",
        "outFilterMismatchNoverLmax",
        "args",
        "alignIntronMin",
        "args",
        "alignIntronMax",
        "args",
        "alignMatesGapMax",
        "args",
        "outFilterType",
        "args",
        "outFilterScoreMinOverLread",
        "args",
        "outFilterMatchNminOverLread",
        "args",
        "limitSjdbInsertNsj",
        "join",
        "args",
        "fastq",
        "args",
        "fastq",
        "endswith",
        "cmd",
        "cmd",
        "os",
        "path",
        "join",
        "args",
        "output_dir",
        "args",
        "prefix",
        "args",
        "outSAMstrandField",
        "args",
        "outFilterIntronMotifs",
        "args",
        "alignSoftClipAtReferenceEnds",
        "join",
        "args",
        "quantMode",
        "join",
        "args",
        "outSAMtype",
        "args",
        "outSAMunmapped",
        "args",
        "genomeLoad",
        "args",
        "chimSegmentMin",
        "cmd",
        "args",
        "chimSegmentMin",
        "args",
        "chimJunctionOverhangMin",
        "join",
        "args",
        "chimOutType",
        "args",
        "chimMainSegmentMultNmax",
        "cmd",
        "join",
        "args",
        "outSAMattributes",
        "join",
        "args",
        "outSAMattrRGline",
        "args",
        "sjdbFileChrStartEnd",
        "cmd",
        "args",
        "sjdbFileChrStartEnd",
        "os",
        "path",
        "exists",
        "args",
        "output_dir",
        "os",
        "makedirs",
        "args",
        "output_dir",
        "subprocess",
        "check_call",
        "cmd",
        "shell",
        "executable",
        "cd",
        "args",
        "output_dir",
        "r",
        "d",
        "f",
        "os",
        "walk",
        "args",
        "prefix",
        "os",
        "chmod",
        "r",
        "shutil",
        "rmtree",
        "args",
        "prefix",
        "os",
        "path",
        "exists",
        "args",
        "prefix",
        "shutil",
        "rmtree",
        "args",
        "prefix",
        "datetime",
        "now",
        "strftime",
        "flush",
        "args",
        "threads",
        "args",
        "prefix",
        "args",
        "prefix",
        "subprocess",
        "check_call",
        "cmd",
        "shell",
        "executable",
        "os",
        "remove",
        "args",
        "prefix",
        "datetime",
        "now",
        "strftime",
        "flush",
        "datetime",
        "now",
        "strftime",
        "flush",
        "args",
        "prefix",
        "subprocess",
        "check_call",
        "cmd",
        "shell",
        "executable",
        "datetime",
        "now",
        "strftime",
        "flush",
        "args",
        "chimSegmentMin",
        "args",
        "threads",
        "args",
        "prefix",
        "args",
        "prefix",
        "subprocess",
        "check_call",
        "cmd",
        "shell",
        "executable",
        "args",
        "prefix",
        "subprocess",
        "check_call",
        "cmd",
        "shell",
        "executable",
        "os",
        "remove",
        "args",
        "prefix"
    ],
    "literals": [
        "'Run STAR'",
        "'index'",
        "'Path to STAR index'",
        "'fastq'",
        "'+'",
        "'FASTQ input. Format: fastq1 [fastq2], or comma-separated lists for each if multiple FASTQs/mate.'",
        "'prefix'",
        "'Prefix for output file names'",
        "'-o'",
        "'--output_dir'",
        "'./'",
        "'Output directory'",
        "'--annotation_gtf'",
        "'Annotation in GTF format'",
        "'--outFilterMultimapNmax'",
        "'20'",
        "'--alignSJoverhangMin'",
        "'8'",
        "'--alignSJDBoverhangMin'",
        "'1'",
        "'--outFilterMismatchNmax'",
        "'999'",
        "'--outFilterMismatchNoverLmax'",
        "'0.1'",
        "'--alignIntronMin'",
        "'20'",
        "'--alignIntronMax'",
        "'1000000'",
        "'--alignMatesGapMax'",
        "'1000000'",
        "'--outFilterType'",
        "'BySJout'",
        "'--outFilterScoreMinOverLread'",
        "'0.33'",
        "'--outFilterMatchNminOverLread'",
        "'0.33'",
        "'--limitSjdbInsertNsj'",
        "'1200000'",
        "'--outSAMstrandField'",
        "'intronMotif'",
        "'--outFilterIntronMotifs'",
        "'None'",
        "\"Use 'RemoveNoncanonical' for Cufflinks compatibility\"",
        "'--alignSoftClipAtReferenceEnds'",
        "'Yes'",
        "'--quantMode'",
        "'TranscriptomeSAM'",
        "'GeneCounts'",
        "'+'",
        "'Outputs read counts, and a BAM with reads in transcriptome coordinates'",
        "'--outSAMtype'",
        "'BAM'",
        "'Unsorted'",
        "'+'",
        "'--outSAMunmapped'",
        "'Within'",
        "'Keep unmapped reads in output BAM'",
        "'--outSAMattrRGline'",
        "'ID:rg1'",
        "'SM:sm1'",
        "'+'",
        "'Adds read group line to BAM header; required by GATK'",
        "'--outSAMattributes'",
        "'NH'",
        "'HI'",
        "'AS'",
        "'nM'",
        "'NM'",
        "'ch'",
        "'+'",
        "'--chimSegmentMin'",
        "'15'",
        "'Minimum chimeric segment length; switches on detection of chimeric (fusion) alignments'",
        "'--chimJunctionOverhangMin'",
        "'15'",
        "'Minimum overhang for a chimeric junction'",
        "'--chimOutType'",
        "'WithinBAM'",
        "'SoftClip'",
        "'+'",
        "''",
        "'--chimMainSegmentMultNmax'",
        "'1'",
        "''",
        "'--genomeLoad'",
        "'NoSharedMemory'",
        "'--sjdbFileChrStartEnd'",
        "'SJ.out.tab file (e.g., from 1st pass). With this option, only one pass will be run'",
        "'--STARlong'",
        "'store_true'",
        "'Use STARlong instead of STAR'",
        "'-t'",
        "'--threads'",
        "'4'",
        "'Number of threads'",
        "'STARlong'",
        "'STAR'",
        "' --runMode alignReads --runThreadN '",
        "' --genomeDir '",
        "' --sjdbGTFfile '",
        "' --twopassMode Basic'",
        "' --outFilterMultimapNmax '",
        "' --alignSJoverhangMin '",
        "' --alignSJDBoverhangMin '",
        "' --outFilterMismatchNmax '",
        "' --outFilterMismatchNoverLmax '",
        "' --alignIntronMin '",
        "' --alignIntronMax '",
        "' --alignMatesGapMax '",
        "' --outFilterType '",
        "' --outFilterScoreMinOverLread '",
        "' --outFilterMatchNminOverLread '",
        "' --limitSjdbInsertNsj '",
        "' --readFilesIn '",
        "' '",
        "'.gz'",
        "' --readFilesCommand zcat'",
        "' --outFileNamePrefix '",
        "'.'",
        "' --outSAMstrandField '",
        "' --outFilterIntronMotifs '",
        "' --alignSoftClipAtReferenceEnds '",
        "' --quantMode '",
        "' '",
        "' --outSAMtype '",
        "' '",
        "' --outSAMunmapped '",
        "' --genomeLoad '",
        "' --chimSegmentMin '",
        "' --chimJunctionOverhangMin '",
        "' --chimOutType '",
        "' '",
        "' --chimMainSegmentMultNmax '",
        "' --outSAMattributes '",
        "' '",
        "' --outSAMattrRGline '",
        "' '",
        "' --sjdbFileChrStartEnd '",
        "'/bin/bash'",
        "'._STARpass1'",
        "'._STARgenome'",
        "'._STARtmp'",
        "'._STARtmp'",
        "'['",
        "\"%b %d %H:%M:%S\"",
        "'] Sorting BAM'",
        "'samtools sort --threads '",
        "' -o '",
        "'.Aligned.sortedByCoord.out.bam '",
        "'.Aligned.out.bam'",
        "'/bin/bash'",
        "'.Aligned.out.bam'",
        "'['",
        "\"%b %d %H:%M:%S\"",
        "'] Finished sorting BAM'",
        "'['",
        "\"%b %d %H:%M:%S\"",
        "'] Indexing BAM'",
        "'samtools index '",
        "'.Aligned.sortedByCoord.out.bam'",
        "'/bin/bash'",
        "'['",
        "\"%b %d %H:%M:%S\"",
        "'] Finished indexing BAM'",
        "'samtools sort --threads '",
        "' -o '",
        "'.Chimeric.out.sorted.bam '",
        "'.Chimeric.out.sam'",
        "'/bin/bash'",
        "'samtools index '",
        "'.Chimeric.out.sorted.bam'",
        "'/bin/bash'",
        "'.Chimeric.out.sam'"
    ],
    "variables": [
        "saved_path",
        "parser",
        "args",
        "starcmd",
        "starcmd",
        "cmd",
        "cmd",
        "cmd",
        "cmd",
        "cmd"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Author: Francois Aguet",
        "set up command",
        "only needed if genome index was built w/o annotation",
        "run STAR",
        "postprocessing",
        "set permissions",
        "delete unneeded files",
        "sort BAM (use samtools to get around the memory gluttony of STAR)",
        "index BAM",
        "sort and index chimeric BAM"
    ],
    "docstrings": [],
    "functions": [
        "cd"
    ],
    "classes": []
}