{
    "identifiers": [
        "os",
        "datetime",
        "pymongo",
        "MongoClient",
        "MongoClient",
        "os",
        "environ",
        "os",
        "environ",
        "client",
        "os",
        "environ",
        "user",
        "job",
        "db",
        "jobs",
        "find",
        "user",
        "job_list",
        "append",
        "job",
        "job_list",
        "job_id",
        "user",
        "job_type",
        "task_ids",
        "datetime",
        "datetime",
        "now",
        "job_id",
        "user",
        "job_type",
        "task_ids",
        "timestamp",
        "timestamp",
        "db",
        "jobs",
        "insert_one",
        "job",
        "job_id",
        "state",
        "datetime",
        "datetime",
        "now",
        "db",
        "jobs",
        "update_many",
        "job_id",
        "state",
        "timestamp"
    ],
    "literals": [
        "'JOB_DB_URL'",
        "'JOB_DB_PORT'",
        "'JOB_DB_NAME'",
        "\"user\"",
        "'_id'",
        "'job_id'",
        "'user'",
        "'job_type'",
        "'task_ids'",
        "'state'",
        "'new'",
        "'created'",
        "'updated'",
        "\"job_id\"",
        "'$set'",
        "'state'",
        "'updated'"
    ],
    "variables": [
        "client",
        "db",
        "job_list",
        "timestamp",
        "job",
        "timestamp"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n    Find all jobs of the passed user in the job database.\n\n    :param str user: username to find jobs belonging to\n    :return: list of job objects\n    \"\"\"",
        "\"\"\"\n    Add a job to the job database.\n\n    :param str job_id: Cilantro-ID of the job\n    :param str user: username which started the job\n    :param str job_type: type of job, i.e. 'ingest_journal'\n    :param list task_ids: Cilantro-IDs of all tasks belonging to that job\n    :return: None\n    \"\"\"",
        "\"\"\"\n    Update a job to the job database with new state and updated timestamp.\n\n    :param str job_id: Cilantro-ID of the job\n    :param str state: new state of the job\n    :return: None\n    \"\"\""
    ],
    "functions": [
        "get_jobs_for_user",
        "add_job",
        "update_job"
    ],
    "classes": []
}