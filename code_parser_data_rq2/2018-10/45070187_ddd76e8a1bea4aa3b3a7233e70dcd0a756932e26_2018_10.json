{
    "identifiers": [
        "ErrorProne",
        "NET",
        "ExceptionsAnalyzers",
        "NUnit",
        "Framework",
        "RoslynNunitTestRunner",
        "ErrorProne",
        "NET",
        "CoreAnalyzers",
        "Tests",
        "SuspiciousExeptionHandling",
        "TestFixture",
        "CSharpAnalyzerTestFixture",
        "SwallowAllExceptionsAnalyzer",
        "Test",
        "HasDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "HasDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "HasDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "HasDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "HasDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "HasDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "NoDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "NoDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "NoDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId",
        "Test",
        "NoDiagnostic",
        "code",
        "SwallowAllExceptionsAnalyzer",
        "DiagnosticId"
    ],
    "literals": [],
    "variables": [
        "code",
        "code",
        "code",
        "code",
        "code",
        "code",
        "code",
        "code",
        "code",
        "code"
    ],
    "comments": [
        "--------------------------------------------------------------------",
        "",
        "Copyright (c) Microsoft Corporation.  All rights reserved.",
        "",
        "--------------------------------------------------------------------"
    ],
    "docstrings": [],
    "functions": [
        "WarnOnEmptyCatchBlock",
        "WarnOnCatchWithStatementBlock",
        "WarnOnException",
        "WarningOnEmptyCatchBlockWithConditionalReturn",
        "WarningOnConditionalObservation",
        "WarnsOnCatchWithExceptionThatWasNotUsed",
        "NoWarnOnReThrow",
        "NoWarnIfExceptionWasObserved",
        "NoWarnWhenExceptionObservedInInterpolatedString",
        "NoWarnsOnNonSystemException"
    ],
    "classes": [
        "SwallowAllExceptionsAnalyzerTests"
    ]
}