{
    "identifiers": [
        "workspace",
        "commands",
        "ExtensionContext",
        "TextEditor",
        "StatusBarItem",
        "TextEditorEdit",
        "ViewColumn",
        "StatusBarAlignment",
        "context",
        "commands",
        "editor",
        "editor",
        "editor",
        "SpecFileFinder",
        "editor",
        "specFinder",
        "context",
        "disposable",
        "K",
        "editor",
        "editor",
        "editor",
        "message",
        "message",
        "workspace",
        "files",
        "files",
        "workspace",
        "files",
        "files",
        "files",
        "workspace",
        "files",
        "doc",
        "doc",
        "ViewColumn",
        "workspace",
        "config",
        "config",
        "fileName",
        "fileName",
        "parsed",
        "parsed",
        "parsed"
    ],
    "literals": [
        "'use strict'",
        "'vscode'",
        "'Congratulations, your extension \"run-last-command\" is now active!'",
        "'extension.splitSpecFile'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "${this.fileName}${this.globs[this.fileType]}",
        "string",
        "**/${this.specFileName}",
        "**/${this.specFileName}",
        "No file found <${this.specFileName}>",
        "\"specFinder\"",
        "'javascriptGlob'",
        "string",
        "'rubyGlob'",
        "string",
        "string",
        "string",
        "'gi'"
    ],
    "variables": [
        "_statusBarItem",
        "disposable",
        "specFinder",
        "files",
        "config",
        "parsed"
    ],
    "comments": [
        "The module 'vscode' contains the VS Code extensibility API",
        "Import the module and reference it with the alias vscode in your code below",
        "this method is called when your extension is activated",
        "your extension is activated the very first time the command is executed",
        "Use the console to output diagnostic information (console.log) and errors (console.error)",
        "This line of code will only be executed once when your extension is activated",
        "The command has been defined in the package.json file",
        "Now provide the implementation of the command with  registerCommand",
        "The commandId parameter must match the command field in package.json",
        "workspace.getConfiguration('specFinder').get('autoSearchSpec')",
        "window.onDidChangeWindowState(() => {",
        "console.log('onDidChangeWindowState: Called');",
        "});",
        "window.onDidChangeVisibleTextEditors(() => {",
        "console.log('onDidChangeVisibleTextEditors: Called');",
        "});",
        "window.onDidChangeActiveTextEditor((editor: TextEditor | undefined) => {",
        "console.log('onDidChangeActiveTextEditor: Called');",
        "if(!editor) { return; }",
        "new SpecFileFinder(editor).hasSpec().then(hasSpec => {",
        "if(!_statusBarItem){",
        "_statusBarItem = window.createStatusBarItem(StatusBarAlignment.Left);",
        "}",
        "_statusBarItem.text = `Spec: <${hasSpec ? 'Found' : 'Not found'}>`;",
        "_statusBarItem.color = hasSpec ? 'lightgreen' : 'red';",
        "_statusBarItem.show();",
        "});",
        "});",
        "this method is called when your extension is deactivated"
    ],
    "docstrings": [],
    "functions": [
        "activate",
        "deactivate",
        "specFileName",
        "showError",
        "hasSpec",
        "findFiles",
        "_getGlobs",
        "_parseFileName"
    ],
    "classes": [
        "SpecFileFinder"
    ]
}