{
    "identifiers": [
        "numpy",
        "np",
        "pandas",
        "pd",
        "jieba",
        "pandas",
        "Series",
        "DataFrame",
        "gensim",
        "corpora",
        "dictionary",
        "gensim",
        "models",
        "ldamodel",
        "LdaModel",
        "gensim",
        "models",
        "tfidfmodel",
        "TfidfModel",
        "sklearn",
        "neural_network",
        "MLPClassifier",
        "sklearn",
        "naive_bayes",
        "BernoulliNB",
        "MultinomialNB",
        "sklearn",
        "cross_validation",
        "metrics",
        "sklearn",
        "ensemble",
        "VotingClassifier",
        "sklearn",
        "linear_model",
        "LogisticRegression",
        "SGDClassifier",
        "MLPClassifier",
        "hidden_layer_sizes",
        "activation",
        "solver",
        "alpha",
        "batch_size",
        "learning_rate",
        "learning_rate_init",
        "power_t",
        "max_iter",
        "shuffle",
        "random_state",
        "tol",
        "verbose",
        "warm_start",
        "momentum",
        "nesterovs_momentum",
        "validation_fraction",
        "beta_1",
        "beta_2",
        "epsilon",
        "MLPClassifier",
        "hidden_layer_sizes",
        "activation",
        "solver",
        "alpha",
        "batch_size",
        "learning_rate",
        "learning_rate_init",
        "power_t",
        "max_iter",
        "shuffle",
        "random_state",
        "tol",
        "verbose",
        "warm_start",
        "momentum",
        "nesterovs_momentum",
        "validation_fraction",
        "beta_1",
        "beta_2",
        "epsilon",
        "BernoulliNB",
        "BernoulliNB",
        "LogisticRegression",
        "random_state",
        "solver",
        "multi_class",
        "LogisticRegression",
        "random_state",
        "solver",
        "multi_class",
        "VotingClassifier",
        "estimators",
        "MLPforTopic",
        "BNBforTopic",
        "LRCforTopic",
        "voting",
        "VotingClassifier",
        "estimators",
        "MLPforSenti",
        "BNBforSenti",
        "LRCforSenti",
        "voting",
        "pd",
        "read_csv",
        "pd",
        "read_csv",
        "open",
        "term",
        "replace",
        "term",
        "StopWord",
        "index",
        "TrainFile",
        "index",
        "TrainFile",
        "content",
        "index",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "jieba",
        "cut",
        "RawWordInThisLine",
        "word",
        "StopWord",
        "word",
        "WordInThisLine",
        "WordInThisLine",
        "remove",
        "word",
        "Comment",
        "append",
        "WordInThisLine",
        "CommentPlus",
        "append",
        "WordInThisLine",
        "index",
        "TestFile",
        "index",
        "TestFile",
        "content",
        "index",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "replace",
        "jieba",
        "cut",
        "RawWordInThisLine",
        "word",
        "StopWord",
        "word",
        "WordInThisLine",
        "WordInThisLine",
        "remove",
        "word",
        "CommentTest",
        "append",
        "WordInThisLine",
        "CommentPlus",
        "append",
        "WordInThisLine",
        "CommentPlus",
        "common_dictionary",
        "doc2bow",
        "comment",
        "comment",
        "CommentPlus",
        "LdaModel",
        "common_corpus",
        "num_topics",
        "NumOfTopics",
        "iterations",
        "id2word",
        "common_dictionary",
        "passes",
        "Lda",
        "common_dictionary",
        "doc2bow",
        "comment",
        "comment",
        "Comment",
        "TrainFile",
        "subject",
        "TrainFile",
        "sentiment_value",
        "vec",
        "NumOfTopics",
        "tup",
        "vec",
        "tup",
        "tup",
        "X",
        "append",
        "VectorForComment",
        "cross_validation",
        "train_test_split",
        "X",
        "Y",
        "test_size",
        "random_state",
        "cross_validation",
        "train_test_split",
        "X",
        "Ys",
        "test_size",
        "random_state",
        "NeuralNetwork",
        "fit",
        "train_x",
        "train_y",
        "NeuralNetForSenti",
        "fit",
        "train_xs",
        "train_ys",
        "NeuralNetwork",
        "predict",
        "test_x",
        "NeuralNetForSenti",
        "predict",
        "test_xs",
        "NeuralNetwork",
        "predict_proba",
        "test_x",
        "metrics",
        "f1_score",
        "test_y",
        "predict_prob_y",
        "average",
        "metrics",
        "f1_score",
        "test_ys",
        "predict_prob_ys",
        "average",
        "F",
        "Fs",
        "F",
        "Fs",
        "DataFrame",
        "index",
        "TestFile",
        "content_id",
        "columns",
        "Lda",
        "common_dictionary",
        "doc2bow",
        "comment",
        "comment",
        "CommentTest",
        "vec",
        "VectorTest",
        "NumOfTopics",
        "tup",
        "vec",
        "tup",
        "tup",
        "XTest",
        "append",
        "VectorForComment",
        "NeuralNetwork",
        "predict",
        "XTest",
        "NeuralNetForSenti",
        "predict",
        "XTest",
        "Result",
        "to_csv"
    ],
    "literals": [
        "'relu'",
        "'adam'",
        "'auto'",
        "'adaptive'",
        "'relu'",
        "'adam'",
        "'auto'",
        "'adaptive'",
        "'lbfgs'",
        "'multinomial'",
        "'lbfgs'",
        "'multinomial'",
        "'MLP'",
        "'BNB'",
        "'LRC'",
        "'soft'",
        "'MLP'",
        "'BNB'",
        "'LRC'",
        "'soft'",
        "\"./train.csv\"",
        "\"./test_public.csv\"",
        "\"./stopwords.txt\"",
        "'\\n'",
        "''",
        "'，'",
        "''",
        "'。'",
        "''",
        "'！'",
        "''",
        "'\\[a-z]*'",
        "''",
        "'\\[A-Z]*'",
        "''",
        "'\\[0-9]*'",
        "''",
        "'?'",
        "''",
        "' '",
        "''",
        "'？'",
        "''",
        "'('",
        "''",
        "\"\\w\"",
        "''",
        "')'",
        "''",
        "'.'",
        "''",
        "'a'",
        "''",
        "'b'",
        "''",
        "'c'",
        "''",
        "'d'",
        "''",
        "'e'",
        "''",
        "'f'",
        "''",
        "'g'",
        "''",
        "'h'",
        "''",
        "'i'",
        "''",
        "'j'",
        "''",
        "'k'",
        "''",
        "'l'",
        "''",
        "'m'",
        "''",
        "'n'",
        "''",
        "'o'",
        "''",
        "'p'",
        "''",
        "'q'",
        "''",
        "'r'",
        "''",
        "'s'",
        "''",
        "'v'",
        "''",
        "'u'",
        "''",
        "'v'",
        "''",
        "'w'",
        "''",
        "'x'",
        "''",
        "'y'",
        "''",
        "'z'",
        "''",
        "'t'",
        "''",
        "'A'",
        "''",
        "'B'",
        "''",
        "'F'",
        "''",
        "'J'",
        "''",
        "'C'",
        "''",
        "'G'",
        "''",
        "'K'",
        "''",
        "'D'",
        "''",
        "'H'",
        "''",
        "'L'",
        "''",
        "'E'",
        "''",
        "'I'",
        "''",
        "'M'",
        "''",
        "'N'",
        "''",
        "'O'",
        "''",
        "'P'",
        "''",
        "'Q'",
        "''",
        "'R'",
        "''",
        "'S'",
        "''",
        "'T'",
        "''",
        "'U'",
        "''",
        "'V'",
        "''",
        "'W'",
        "''",
        "'X'",
        "''",
        "'Y'",
        "''",
        "'Z'",
        "''",
        "'0'",
        "''",
        "'1'",
        "''",
        "'2'",
        "''",
        "'3'",
        "''",
        "'4'",
        "''",
        "'5'",
        "''",
        "'6'",
        "''",
        "'7'",
        "''",
        "'8'",
        "''",
        "'9'",
        "''",
        "'-'",
        "''",
        "'\\xa0'",
        "''",
        "'·'",
        "''",
        "'（'",
        "''",
        "'）'",
        "''",
        "'，'",
        "''",
        "'。'",
        "''",
        "'！'",
        "''",
        "'\\[a-z]*'",
        "''",
        "'\\[A-Z]*'",
        "''",
        "'\\[0-9]*'",
        "''",
        "'?'",
        "''",
        "' '",
        "''",
        "'？'",
        "''",
        "'('",
        "''",
        "\"\\w\"",
        "''",
        "')'",
        "''",
        "'.'",
        "''",
        "'a'",
        "''",
        "'b'",
        "''",
        "'c'",
        "''",
        "'d'",
        "''",
        "'e'",
        "''",
        "'f'",
        "''",
        "'g'",
        "''",
        "'h'",
        "''",
        "'i'",
        "''",
        "'j'",
        "''",
        "'k'",
        "''",
        "'l'",
        "''",
        "'m'",
        "''",
        "'n'",
        "''",
        "'o'",
        "''",
        "'p'",
        "''",
        "'q'",
        "''",
        "'r'",
        "''",
        "'s'",
        "''",
        "'v'",
        "''",
        "'u'",
        "''",
        "'v'",
        "''",
        "'w'",
        "''",
        "'x'",
        "''",
        "'y'",
        "''",
        "'z'",
        "''",
        "'t'",
        "''",
        "'A'",
        "''",
        "'B'",
        "''",
        "'F'",
        "''",
        "'J'",
        "''",
        "'C'",
        "''",
        "'G'",
        "''",
        "'K'",
        "''",
        "'D'",
        "''",
        "'H'",
        "''",
        "'L'",
        "''",
        "'E'",
        "''",
        "'I'",
        "''",
        "'M'",
        "''",
        "'N'",
        "''",
        "'O'",
        "''",
        "'P'",
        "''",
        "'Q'",
        "''",
        "'R'",
        "''",
        "'S'",
        "''",
        "'T'",
        "''",
        "'U'",
        "''",
        "'V'",
        "''",
        "'W'",
        "''",
        "'X'",
        "''",
        "'Y'",
        "''",
        "'Z'",
        "''",
        "'0'",
        "''",
        "'1'",
        "''",
        "'2'",
        "''",
        "'3'",
        "''",
        "'4'",
        "''",
        "'5'",
        "''",
        "'6'",
        "''",
        "'7'",
        "''",
        "'8'",
        "''",
        "'9'",
        "''",
        "'-'",
        "''",
        "'\\xa0'",
        "''",
        "'·'",
        "''",
        "'（'",
        "''",
        "'）'",
        "''",
        "\"Text Preprocessing Finished......\"",
        "\"LDA finished...\"",
        "'micro'",
        "'micro'",
        "\"F1:\\t\"",
        "\" : \"",
        "\" + \"",
        "\"subject\"",
        "\"sentiment_value\"",
        "\"sentiment_word\"",
        "\"sentiment_word\"",
        "''",
        "\"./result.csv\""
    ],
    "variables": [
        "MLPforTopic",
        "MLPforSenti",
        "BNBforTopic",
        "BNBforSenti",
        "LRCforTopic",
        "LRCforSenti",
        "NeuralNetwork",
        "NeuralNetForSenti",
        "NumOfTopics",
        "TrainFile",
        "TestFile",
        "StopWord",
        "StopWord",
        "Comment",
        "CommentPlus",
        "CommentTest",
        "RawWordInThisLine",
        "WordInThisLine",
        "RawWordInThisLine",
        "WordInThisLine",
        "common_dictionary",
        "common_corpus",
        "Lda",
        "Y",
        "Ys",
        "X",
        "VectorForComment",
        "VectorForComment",
        "train_x",
        "test_x",
        "train_y",
        "test_y",
        "train_xs",
        "test_xs",
        "train_ys",
        "test_ys",
        "predict_prob_y",
        "predict_prob_ys",
        "show",
        "F",
        "Fs",
        "Result",
        "VectorTest",
        "XTest",
        "VectorForComment",
        "VectorForComment",
        "Result",
        "subject",
        "Result",
        "sentiment_value",
        "Result"
    ],
    "comments": [
        "SVMforTopic = SGDClassifier(max_iter=1000)",
        "SVMforSenti = SGDClassifier(max_iter=1000)",
        "MLPforTopic",
        "MLPforSenti",
        "MLBforTopic = MultinomialNB()",
        "MLBforSenti = MultinomialNB()",
        "('MLB', MLBforTopic),\\",
        "('SVM', SVMforTopic),\\",
        "('MLB', MLBforSenti),\\",
        "('SVM', SVMforSenti),\\",
        "tfidf = TfidfModel(common_corpus)",
        "corpus_tfidf = tfidf[common_corpus]"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}