{
    "identifiers": [
        "context",
        "set_params",
        "set_variables",
        "set_backtest",
        "set_option",
        "log",
        "set_level",
        "context",
        "set_slip_fee",
        "context",
        "context",
        "set_slippage",
        "FixedSlippage",
        "context",
        "current_dt",
        "dt",
        "datetime",
        "datetime",
        "set_commission",
        "PerTrade",
        "buy_cost",
        "sell_cost",
        "min_cost",
        "dt",
        "datetime",
        "datetime",
        "set_commission",
        "PerTrade",
        "buy_cost",
        "sell_cost",
        "min_cost",
        "dt",
        "datetime",
        "datetime",
        "set_commission",
        "PerTrade",
        "buy_cost",
        "sell_cost",
        "min_cost",
        "set_commission",
        "PerTrade",
        "buy_cost",
        "sell_cost",
        "min_cost",
        "context",
        "data",
        "context",
        "portfolio",
        "portfolio_value",
        "g",
        "N",
        "signal_stock_sell",
        "context",
        "data",
        "signal_stock_buy",
        "context",
        "data",
        "i",
        "len",
        "g",
        "security",
        "toSell",
        "i",
        "order_target_value",
        "g",
        "security",
        "i",
        "i",
        "len",
        "g",
        "security",
        "toBuy",
        "i",
        "order_target_value",
        "g",
        "security",
        "i",
        "capital_unit",
        "toBuy",
        "toSell",
        "send_message",
        "context",
        "data",
        "len",
        "g",
        "security",
        "i",
        "len",
        "g",
        "security",
        "get_EMA",
        "g",
        "security",
        "i",
        "data",
        "get_EMA",
        "g",
        "security",
        "i",
        "data",
        "ema_short_now",
        "ema_long_now",
        "ema_short_pre",
        "ema_long_pre",
        "context",
        "portfolio",
        "positions",
        "g",
        "security",
        "i",
        "sellable_amount",
        "sell",
        "context",
        "data",
        "len",
        "g",
        "security",
        "i",
        "len",
        "g",
        "security",
        "get_EMA",
        "g",
        "security",
        "i",
        "data",
        "get_EMA",
        "g",
        "security",
        "i",
        "data",
        "ema_short_now",
        "ema_long_now",
        "ema_short_pre",
        "ema_long_pre",
        "context",
        "portfolio",
        "positions",
        "g",
        "security",
        "i",
        "sellable_amount",
        "buy",
        "security_code",
        "days",
        "attribute_history",
        "security_code",
        "days",
        "i",
        "days",
        "sum",
        "a",
        "i",
        "sum",
        "days",
        "security_code",
        "days",
        "data",
        "days",
        "attribute_history",
        "security_code",
        "t",
        "t",
        "dir",
        "g",
        "security_code",
        "days",
        "key",
        "g",
        "EMAs",
        "days",
        "days",
        "g",
        "EMAs",
        "key",
        "EMA_pre",
        "alpha",
        "data",
        "security_code",
        "close",
        "alpha",
        "g",
        "EMAs",
        "EMA_now",
        "EMA_pre",
        "EMA_now",
        "get_MA",
        "security_code",
        "days",
        "isnan",
        "ma",
        "g",
        "EMAs",
        "ma",
        "ma",
        "context"
    ],
    "literals": [
        "\"000001.XSHE\"",
        "\"000002.XSHE\"",
        "\"000006.XSHE\"",
        "\"000007.XSHE\"",
        "\"000009.XSHE\"",
        "'use_real_price'",
        "'order'",
        "'error'",
        "\"今日无操作\"",
        "'1d'",
        "'close'",
        "'close'",
        "'1d'",
        "'close'",
        "'close'",
        "'close'",
        "'EMAs'",
        "\"%s%d\"",
        "\"nan\"",
        "\"nan\"",
        "\"nan\""
    ],
    "variables": [
        "g",
        "tc",
        "g",
        "N",
        "g",
        "security",
        "dt",
        "capital_unit",
        "toSell",
        "toBuy",
        "sell",
        "ema_long_pre",
        "ema_long_now",
        "ema_short_pre",
        "ema_short_now",
        "sell",
        "i",
        "buy",
        "ema_long_pre",
        "ema_long_now",
        "ema_short_pre",
        "ema_short_now",
        "buy",
        "i",
        "a",
        "sum",
        "t",
        "g",
        "EMAs",
        "key",
        "alpha",
        "EMA_pre",
        "EMA_now",
        "key",
        "ma",
        "key"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "-*- coding: utf-8 -*-",
        "https://www.joinquant.com/post/1398?tag=algorithm",
        "【量化课堂】双均线策略",
        "双均线策略",
        "2015-01-01 到 2016-03-08, ￥2000000, 每天",
        "总体回测前要做的事情",
        "1设置策参数",
        "2设置中间变量",
        "3设置回测条件",
        "1",
        "设置策略参数",
        "调仓频率",
        "持仓数目",
        "设置股票池",
        "2",
        "设置中间变量",
        "3",
        "设置回测条件",
        "用真实价格交易",
        "每天开盘前要做的事情",
        "4",
        "根据不同的时间段设置滑点与手续费",
        "将滑点设置为0",
        "根据不同的时间段设置手续费",
        "将总资金等分为g.N份，为每只股票配资",
        "执行卖出操作以腾出资金",
        "执行买入操作",
        "log.info(\"今日无操作\")",
        "5",
        "获得卖出信号",
        "输入：context, data",
        "输出：sell - list",
        "算出今天和昨天的两个指数移动均线的值，我们这里假设长线是60天，短线是1天(前一天的收盘价)",
        "如果短均线从上往下穿越长均线，则为死叉信号，标记卖出",
        "6",
        "获得买入信号",
        "输入：context, data",
        "输出：buy - list",
        "算出今天和昨天的两个指数移动均线的值，我们这里假设长线是60天，短线是1天(前一天的收盘价)",
        "如果短均线从下往上穿越长均线，则为金叉信号，标记买入",
        "7",
        "计算移动平均线数据",
        "输入：股票代码-字符串，移动平均线天数-整数",
        "输出：算术平均值-浮点数",
        "获得前days天的数据，详见API",
        "定义一个局部变量sum，用于求和",
        "对前days天的收盘价进行求和",
        "求和之后除以天数就可以的得到算术平均值啦",
        "8",
        "计算指数移动平均线数据",
        "输入：股票代码-字符串，移动指数平均线天数-整数，data",
        "输出：今天和昨天的移动指数平均数-浮点数",
        "如果只有一天的话,前一天的收盘价就是移动平均",
        "获得前两天的收盘价数据，一个作为上一期的移动平均值，后一个作为当期的移动平均值",
        "如果全局变量g.EMAs不存在的话，创建一个字典类型的变量，用来记录已经计算出来的EMA值",
        "字典的关键字用股票编码和天数连接起来唯一确定，以免不同股票或者不同天数的指数移动平均弄在一起了",
        "如果关键字存在，说明之前已经计算过EMA了，直接迭代即可",
        "计算alpha值",
        "获得前一天的EMA（这个是保存下来的了）",
        "EMA迭代计算",
        "写入新的EMA值",
        "给用户返回昨天和今天的两个EMA值",
        "如果关键字不存在，说明之前没有计算过这个EMA，因此要初始化",
        "获得days天的移动平均",
        "如果滑动平均存在（不返回NaN）的话，那么我们已经有足够数据可以对这个EMA初始化了",
        "因为刚刚初始化，所以前一期的EMA还不存在",
        "移动平均数据不足days天，只好返回NaN值",
        "每日收盘后要做的事情（本策略中不需要）"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Sun Sep  9 21:43:23 2018\n\n@author: zhengjt\n\"\"\"",
        "'''\n================================================================================\n总体回测前\n================================================================================\n'''",
        "'''\n================================================================================\n每天开盘前\n================================================================================\n'''",
        "'''\n================================================================================\n每天交易时\n================================================================================\n'''",
        "'''\n================================================================================\n每天收盘后\n================================================================================\n'''"
    ],
    "functions": [
        "initialize",
        "set_params",
        "set_variables",
        "set_backtest",
        "before_trading_start",
        "set_slip_fee",
        "handle_data",
        "signal_stock_sell",
        "signal_stock_buy",
        "get_MA",
        "get_EMA",
        "after_trading_end"
    ],
    "classes": []
}