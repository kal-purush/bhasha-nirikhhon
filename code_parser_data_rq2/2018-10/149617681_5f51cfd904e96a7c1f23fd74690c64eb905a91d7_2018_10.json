{
    "identifiers": [
        "Component",
        "IonicPage",
        "NavController",
        "NavParams",
        "ToastController",
        "AlertController",
        "LoadingController",
        "Loading",
        "ActionSheetController",
        "Platform",
        "AuthServiceProvider",
        "ResponseMessage",
        "FormControl",
        "FormBuilder",
        "Validators",
        "FormGroup",
        "AbstractControl",
        "FormArray",
        "Geolocation",
        "NativeGeocoder",
        "NativeGeocoderReverseResult",
        "Camera",
        "CameraOptions",
        "FileTransfer",
        "FileUploadOptions",
        "FileTransferObject",
        "FilePath",
        "File",
        "_",
        "IonicPage",
        "Component",
        "navCtrl",
        "dataService",
        "loadingCtrl",
        "platform",
        "toastCtrl",
        "alertCtrl",
        "jsonErrMsg",
        "camera",
        "actionSheetCtrl",
        "transfer",
        "file",
        "filePath",
        "navParams",
        "localStorage",
        "loguserDet",
        "FormGroup",
        "FormControl",
        "Validators",
        "Validators",
        "FormControl",
        "Validators",
        "FormControl",
        "FormControl",
        "FormControl",
        "FormControl",
        "filterUserData",
        "result",
        "result",
        "result",
        "color",
        "_",
        "color",
        "checkInt",
        "checkedVal",
        "color",
        "color",
        "color",
        "checkedVal",
        "err",
        "res",
        "res",
        "grpImg",
        "res",
        "grpImg",
        "res",
        "grpImg",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "err",
        "filterData",
        "result",
        "result",
        "element",
        "element",
        "element",
        "err",
        "ev",
        "ev",
        "val",
        "val",
        "val",
        "val",
        "trimVal",
        "items",
        "sdata",
        "sdata",
        "items",
        "item",
        "property",
        "item",
        "item",
        "property",
        "item",
        "property",
        "toCompare",
        "selectedData",
        "selectedData",
        "text",
        "text",
        "toast",
        "uId",
        "filename",
        "filename",
        "uId",
        "fileTransfer",
        "targetPath",
        "url",
        "options",
        "data",
        "err",
        "img",
        "img",
        "cordova",
        "img",
        "actionSheet",
        "sourceType",
        "sourceType",
        "options",
        "imagePath",
        "sourceType",
        "imagePath",
        "filePath",
        "filePath",
        "filePath",
        "imagePath",
        "imagePath",
        "imagePath",
        "correctPath",
        "currentName",
        "currentName",
        "imagePath",
        "imagePath",
        "imagePath",
        "imagePath",
        "correctPath",
        "currentName",
        "currentName",
        "err",
        "currentName",
        "newFileName",
        "currentName",
        "newFileName",
        "namePath",
        "currentName",
        "newFileName",
        "namePath",
        "currentName",
        "cordova",
        "newFileName",
        "success",
        "newFileName",
        "error",
        "data",
        "data",
        "_",
        "item",
        "item",
        "item",
        "filterIntData",
        "_",
        "filterIntData",
        "data",
        "result",
        "result",
        "lastGrpId",
        "filterIntData",
        "filterIntData",
        "element",
        "element",
        "selectInterestUser",
        "element",
        "selectInterestUser",
        "lastGrpId",
        "selectInterestUser",
        "IntjsonData",
        "res",
        "err",
        "data",
        "IntReportData",
        "res",
        "err",
        "alert",
        "err",
        "err",
        "alert"
    ],
    "literals": [
        "'@angular/core'",
        "'ionic-angular'",
        "'../../providers'",
        "'@angular/forms'",
        "'@ionic-native/geolocation'",
        "'@ionic-native/native-geocoder'",
        "'@ionic-native/camera'",
        "'@ionic-native/file-transfer'",
        "'@ionic-native/file-path'",
        "'@ionic-native/file'",
        "'lodash'",
        "'page-editgroup'",
        "'editgroup.html'",
        "'Location'",
        "string",
        "''",
        "string",
        "'group_id'",
        "'userPrfDet'",
        "''",
        "'[a-zA-Z ]*'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'{\"where\":{\"is_active\":true, \"or\":[{\"is_hidden\":0},{\"is_hidden\":null}]}}'",
        "'interests?filter='",
        "string",
        "string",
        "'Please wait...'",
        "'UserGroups/'",
        "''",
        "'group/'",
        "'./assets/img/default.jpeg'",
        "'name'",
        "'loc_lat'",
        "'loc_long'",
        "'location'",
        "'description'",
        "''",
        "'inputString'",
        "'{\"where\":{\"group_id\":'",
        "'}, \"include\":[\"interest\"], \"order\" : \"id desc\"}'",
        "'GroupInterests?filter='",
        "''",
        "''",
        "''",
        "''",
        "'location'",
        "'loc_lat'",
        "'loc_long'",
        "'top'",
        "'Please wait...'",
        "'UserGroups/uploadimg/'",
        "\"photo\"",
        "\"multipart/form-data\"",
        "'image'",
        "'upload_id'",
        "'Group Image Uploaded Successfully.'",
        "'Error while uploading file.'",
        "''",
        "'Take a picture'",
        "'camera'",
        "'From gallery'",
        "'images'",
        "'android'",
        "'/'",
        "'/'",
        "'?'",
        "'/'",
        "'/'",
        "'Error while selecting image.'",
        "'_'",
        "'Error while storing file.'",
        "'Uploading...'",
        "'UserGroups/'",
        "''",
        "\"group_id\"",
        "\"selectinterest\"",
        "'GroupInterests/insertData'",
        "\"type\"",
        "\"description\"",
        "' has edit the group \"'",
        "'\"'",
        "\"is_delete\"",
        "\"customerId\"",
        "\"notification_pid\"",
        "'reports'",
        "'Group edited successfully.'",
        "'GrouplistPage'",
        "'Error!'",
        "'Something wrong.Please try again.'",
        "'Ok'",
        "'Error!'",
        "'Ok'"
    ],
    "variables": [
        "cordova",
        "loguserDet",
        "filterUserData",
        "checkInt",
        "checkedVal",
        "grpImg",
        "filterData",
        "val",
        "trimVal",
        "toCompare",
        "toast",
        "uId",
        "url",
        "targetPath",
        "filename",
        "options",
        "fileTransfer",
        "actionSheet",
        "options",
        "correctPath",
        "currentName",
        "currentName",
        "correctPath",
        "d",
        "newFileName",
        "filterIntData",
        "lastGrpId",
        "selectInterestUser",
        "IntjsonData",
        "IntReportData",
        "alert",
        "alert"
    ],
    "comments": [
        "console.log(this.groupDetails);",
        "set val to the value of the searchbar",
        "if the value is an empty string don't filter the items",
        "console.log(this.interestNameTest);",
        "@type {?}",
        "@type {?}",
        "console.log(item);",
        "Destination URL",
        "File for Upload",
        "File name only",
        "console.log(filename);",
        "params : {'fileName': filename}",
        "Use the FileTransfer to upload the image",
        "Get the data of an image",
        "Special handling for Android library",
        "n = d.getTime(),",
        "newFileName=n+\".jpg\";",
        "console.log(currentName);",
        "console.log(\"CURRENTFILENAME\",currentName);",
        "console.log(filterIntData);",
        "let filterUserData = _.map(this.activeUser, function(item1) {",
        "if (item1.checked == true) return item1;",
        "});",
        "filterUserData = _.without(filterUserData, undefined);",
        "insert group interest",
        "insert group user",
        "if(filterUserData.length>0){",
        "let selectGrpUser = [];",
        "filterUserData.forEach(element => {",
        "if(element.id!=''){",
        "selectGrpUser.push(element.id);",
        "}",
        "});",
        "if(selectGrpUser.length>0){",
        "let UsrjsonData = {\"group_id\":lastGrpId,\"selectuser\":selectGrpUser};",
        "this.dataService.postData(UsrjsonData,'GroupUsers/insertData').then(res=>{",
        "},err=>{",
        "})",
        "}",
        "}",
        "insert group activity"
    ],
    "docstrings": [
        "* Generated class for the EditgroupPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation."
    ],
    "functions": [
        "ionViewDidLoad",
        "getInterestList",
        "getGroupDetails",
        "getGroupTagList",
        "searchItems",
        "searchPipe",
        "autoCompleteCallback1",
        "presentToast",
        "uploadImage",
        "pathForImage",
        "presentActionSheet",
        "uploadFromCamera",
        "createFileName",
        "copyFileToLocalDir",
        "editDetails"
    ],
    "classes": [
        "EditgroupPage"
    ]
}