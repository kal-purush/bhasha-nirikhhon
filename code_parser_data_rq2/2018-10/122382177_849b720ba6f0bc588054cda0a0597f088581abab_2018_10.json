{
    "identifiers": [
        "argparse",
        "csv",
        "os",
        "webbrowser",
        "datetime",
        "glob",
        "subprocess",
        "datetime",
        "datetime",
        "now",
        "strftime",
        "os",
        "chdir",
        "working_dir",
        "argparse",
        "ArgumentParser",
        "description",
        "desc_str",
        "parser",
        "add_mutually_exclusive_group",
        "group_a",
        "add_argument",
        "help",
        "group_a",
        "add_argument",
        "help",
        "action",
        "group_a",
        "add_argument",
        "help",
        "action",
        "group_a",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_mutually_exclusive_group",
        "group_b",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "l",
        "generate_compute_workflow",
        "quit",
        "args",
        "t",
        "woid_list",
        "ccdg_launcher",
        "args",
        "a",
        "sample_add",
        "args",
        "w",
        "args",
        "f",
        "os",
        "path",
        "exists",
        "args",
        "f",
        "format",
        "args",
        "f",
        "os",
        "path",
        "exists",
        "args",
        "f",
        "fail_files_check",
        "args",
        "w",
        "args",
        "f",
        "args",
        "f",
        "args",
        "w",
        "os",
        "path",
        "exists",
        "args",
        "f",
        "format",
        "args",
        "f",
        "os",
        "path",
        "exists",
        "args",
        "f",
        "woid_list",
        "ccdg_launcher",
        "working_dir",
        "args",
        "f",
        "args_in",
        "in_file",
        "mm_dd_yy",
        "os",
        "getcwd",
        "in_file",
        "args_in",
        "woid_list",
        "args_in",
        "split",
        "open",
        "outfile",
        "outfilecsv",
        "csv",
        "writer",
        "outfilecsv",
        "delimiter",
        "woid",
        "woid_dirs",
        "os",
        "chdir",
        "working_dir",
        "os",
        "path",
        "exists",
        "woid",
        "format",
        "woid",
        "exit",
        "woid",
        "woid",
        "woid",
        "os",
        "chdir",
        "woid",
        "os",
        "path",
        "exists",
        "launch_failed_file",
        "os",
        "path",
        "exists",
        "instrument_pass_status_active_file",
        "os",
        "path",
        "exists",
        "qc_status_file",
        "outfile_writer",
        "writerow",
        "format",
        "woid",
        "outfile_writer",
        "writerow",
        "outfile_writer",
        "writerow",
        "woid",
        "outfile_writer",
        "writerow",
        "open",
        "launch_failed_file",
        "lfcsv",
        "open",
        "instrument_pass_status_active_file",
        "ipsafcsv",
        "csv",
        "DictReader",
        "lfcsv",
        "delimiter",
        "csv",
        "DictReader",
        "ipsafcsv",
        "delimiter",
        "line",
        "lfcsv_reader",
        "line",
        "line",
        "sample_list",
        "append",
        "line",
        "line",
        "ipsafcsv_reader",
        "line",
        "line",
        "sample_list",
        "append",
        "line",
        "compute_workflow_create",
        "infile",
        "woid",
        "sample",
        "sample_list",
        "cw_sample_check",
        "woid_cw_file",
        "sample",
        "len",
        "samples_not_found_in_cw",
        "format",
        "woid_cw_file",
        "sample",
        "samples_not_found_in_cw",
        "sample",
        "quit",
        "os",
        "path",
        "exists",
        "qc_status_file",
        "os",
        "path",
        "exists",
        "woid_cw_file",
        "os",
        "path",
        "exists",
        "launch_failed_file",
        "qc_status_update",
        "woid_cw_file",
        "sample_list",
        "woid",
        "qc_status_file",
        "line",
        "output",
        "outfile_writer",
        "writerow",
        "line",
        "outfile_writer",
        "writerow",
        "subprocess",
        "run",
        "woid",
        "os",
        "chdir",
        "working_dir",
        "quit",
        "input",
        "open_url",
        "input",
        "open_url",
        "webbrowser",
        "get",
        "firefox_path",
        "open",
        "launch_link",
        "format",
        "launch_link",
        "format",
        "mm_dd_yy",
        "ValueError",
        "glob",
        "glob",
        "woid",
        "is_int",
        "woid_dir_unfiltered",
        "woid_dirs",
        "append",
        "woid",
        "woid_dirs",
        "compute_workflow_all_file",
        "woid",
        "os",
        "path",
        "exists",
        "working_dir",
        "woid",
        "os",
        "chdir",
        "woid",
        "woid",
        "mm_dd_yy",
        "open",
        "compute_workflow_all_file",
        "compute_workflow_all_csv",
        "open",
        "outfile",
        "outfilecsv",
        "csv",
        "DictReader",
        "compute_workflow_all_csv",
        "delimiter",
        "cwl_reader",
        "fieldnames",
        "csv",
        "DictWriter",
        "outfilecsv",
        "fieldnames",
        "cwl_fieldnames",
        "delimiter",
        "outfile_writer",
        "writeheader",
        "line",
        "cwl_reader",
        "woid",
        "line",
        "line",
        "outfile_writer",
        "writerow",
        "line",
        "outfile",
        "infile",
        "sample",
        "open",
        "infile",
        "infiletsv",
        "csv",
        "DictReader",
        "infiletsv",
        "delimiter",
        "qc_data",
        "infile_reader",
        "cw_samples",
        "append",
        "qc_data",
        "sample",
        "cw_samples",
        "sample_not_found",
        "append",
        "sample",
        "sample_not_found",
        "infile",
        "sample",
        "woid",
        "sample",
        "sample",
        "open",
        "infile",
        "infiletsv",
        "csv",
        "DictReader",
        "infiletsv",
        "delimiter",
        "qc_data",
        "infile_reader",
        "sample",
        "qc_data",
        "sample",
        "qc_data",
        "qc_data",
        "qc_data",
        "qc_data",
        "qc_data",
        "mm_dd_yy",
        "woid",
        "qc_data",
        "qc_data",
        "qc_data",
        "qc_data",
        "qc_data",
        "qc_data",
        "qc_data",
        "qc_results",
        "pse_ready",
        "pse_fail",
        "pse_fail_ready",
        "pse_fail_fail",
        "ins_pass_stat_actv",
        "len",
        "pse_ready",
        "format",
        "len",
        "pse_ready",
        "output",
        "append",
        "len",
        "pse_ready",
        "sep",
        "output",
        "append",
        "pse",
        "pse_ready",
        "pse",
        "output",
        "append",
        "pse",
        "len",
        "pse_fail",
        "format",
        "len",
        "pse_fail",
        "output",
        "append",
        "len",
        "pse_fail",
        "sep",
        "output",
        "append",
        "pse",
        "pse_fail",
        "pse",
        "output",
        "append",
        "pse",
        "len",
        "pse_fail_ready",
        "format",
        "len",
        "pse_fail_ready",
        "output",
        "append",
        "len",
        "pse_fail_ready",
        "sep",
        "output",
        "append",
        "pse",
        "pse_fail_ready",
        "pse",
        "output",
        "append",
        "pse",
        "len",
        "pse_fail_fail",
        "format",
        "len",
        "pse_fail_fail",
        "output",
        "append",
        "len",
        "pse_fail_fail",
        "pse",
        "pse_fail_fail",
        "pse",
        "output",
        "append",
        "pse",
        "len",
        "ins_pass_stat_actv",
        "format",
        "len",
        "ins_pass_stat_actv",
        "output",
        "append",
        "len",
        "ins_pass_stat_actv",
        "sep",
        "output",
        "append",
        "pse",
        "ins_pass_stat_actv",
        "pse",
        "output",
        "append",
        "pse",
        "output",
        "append",
        "output",
        "append",
        "output",
        "compute_workflow",
        "sample_list",
        "woid",
        "qc_status_file",
        "woid",
        "woid",
        "woid",
        "woid",
        "woid",
        "open",
        "qc_status_file",
        "qcstatuscsv",
        "open",
        "temp_status_file",
        "tempstatuscsv",
        "open",
        "launch_failed_temp",
        "launchtempcsv",
        "open",
        "instrument_pass_status_active_file_tmp",
        "ipsafcsv",
        "csv",
        "DictReader",
        "qcstatuscsv",
        "delimiter",
        "status_file_reader",
        "fieldnames",
        "csv",
        "DictWriter",
        "tempstatuscsv",
        "fieldnames",
        "status_file_header",
        "delimiter",
        "temp_status_writer",
        "writeheader",
        "csv",
        "DictWriter",
        "launchtempcsv",
        "fieldnames",
        "status_file_header",
        "delimiter",
        "temp_launch_fail_writer",
        "writeheader",
        "csv",
        "DictWriter",
        "ipsafcsv",
        "fieldnames",
        "status_file_header",
        "delimiter",
        "instrument_pass_status_active_writer",
        "writeheader",
        "line",
        "status_file_reader",
        "line",
        "line",
        "qc_master_sample_list",
        "append",
        "line",
        "line",
        "line",
        "line",
        "sample_pse_match",
        "compute_workflow",
        "line",
        "woid",
        "line",
        "items",
        "fail_metrics",
        "items",
        "fail_metrics",
        "fail_metrics",
        "temp_status_writer",
        "writerow",
        "fail_qc_update",
        "pse_fail_ready",
        "append",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "temp_status_writer",
        "writerow",
        "fail_qc_update",
        "temp_launch_fail_writer",
        "writerow",
        "fail_qc_update",
        "pse_fail_fail",
        "append",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "temp_status_writer",
        "writerow",
        "fail_qc_update",
        "instrument_pass_status_active_writer",
        "writerow",
        "fail_qc_update",
        "ins_pass_stat_actv",
        "append",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "fail_metrics",
        "line",
        "sample_list",
        "line",
        "line",
        "line",
        "sample_pse_match",
        "compute_workflow",
        "sample",
        "woid",
        "line",
        "items",
        "qc_metrics",
        "items",
        "qc_metrics",
        "qc_metrics",
        "temp_status_writer",
        "writerow",
        "master_qc_update",
        "pse_ready",
        "append",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "temp_status_writer",
        "writerow",
        "master_qc_update",
        "temp_launch_fail_writer",
        "writerow",
        "master_qc_update",
        "pse_fail",
        "append",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "temp_status_writer",
        "writerow",
        "master_qc_update",
        "instrument_pass_status_active_writer",
        "writerow",
        "master_qc_update",
        "ins_pass_stat_actv",
        "append",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "qc_metrics",
        "line",
        "format",
        "line",
        "line",
        "sample_list",
        "format",
        "line",
        "line",
        "line",
        "temp_status_writer",
        "writerow",
        "line",
        "samp",
        "sample_list",
        "samp",
        "samp",
        "samp",
        "qc_master_sample_list",
        "format",
        "samp",
        "qc_status_file",
        "os",
        "rename",
        "temp_status_file",
        "qc_status_file",
        "os",
        "rename",
        "launch_failed_temp",
        "launch_failed_file",
        "os",
        "rename",
        "instrument_pass_status_active_file_tmp",
        "instrument_pass_status_active_file",
        "output_launcher_results",
        "pse_ready",
        "pse_fail",
        "pse_fail_ready",
        "pse_fail_fail",
        "ins_pass_stat_actv",
        "output",
        "topup_samples",
        "woid",
        "open",
        "woid",
        "qcstatuscsv",
        "open",
        "woid",
        "tempstatuscsv",
        "csv",
        "DictReader",
        "qcstatuscsv",
        "delimiter",
        "status_reader",
        "fieldnames",
        "csv",
        "DictWriter",
        "tempstatuscsv",
        "fieldnames",
        "status_fieldnames",
        "delimiter",
        "temp_status_writer",
        "writeheader",
        "line",
        "status_reader",
        "line",
        "topup_samples",
        "line",
        "temp_status_writer",
        "writerow",
        "line",
        "os",
        "rename",
        "woid",
        "woid",
        "input",
        "strip",
        "len",
        "woid",
        "woid",
        "ValueError",
        "woid",
        "woid",
        "os",
        "path",
        "exists",
        "woid",
        "format",
        "woid",
        "os",
        "chdir",
        "woid",
        "format",
        "woid",
        "woid",
        "woid",
        "format",
        "master_sample_link",
        "input",
        "master_sample_line",
        "master_samples",
        "append",
        "master_sample_line",
        "len",
        "master_samples",
        "x",
        "x",
        "master_samples",
        "x",
        "line",
        "master_samples",
        "line",
        "line",
        "split",
        "line",
        "updated_sample_list",
        "append",
        "sample",
        "open",
        "updated_master_outfile",
        "mastercsv",
        "open",
        "qc_status_file",
        "statuscsv",
        "csv",
        "writer",
        "mastercsv",
        "delimiter",
        "updated_master_write",
        "writerows",
        "master_samples",
        "csv",
        "DictReader",
        "statuscsv",
        "delimiter",
        "line",
        "status_reader",
        "status_samples",
        "append",
        "line",
        "format",
        "len",
        "updated_sample_list",
        "qc_status_file",
        "len",
        "status_samples",
        "status_samples",
        "intersection",
        "updated_sample_list",
        "format",
        "qc_status_file",
        "format",
        "qc_status_file",
        "os",
        "chdir",
        "working_dir",
        "len",
        "updated_sample_list",
        "len",
        "status_samples",
        "format",
        "qc_status_file",
        "status_samples",
        "updated_sample_list",
        "samp",
        "sample_diff",
        "samp",
        "sample",
        "updated_sample_dict",
        "sample",
        "status_samples",
        "format",
        "sample",
        "qc_status_file",
        "woid",
        "os",
        "rename",
        "qc_status_file",
        "format",
        "woid",
        "open",
        "qc_status_file",
        "statuscsv",
        "open",
        "updated_master_outfile",
        "mastercsv",
        "open",
        "format",
        "woid",
        "tempcsv",
        "csv",
        "DictReader",
        "mastercsv",
        "delimiter",
        "csv",
        "DictReader",
        "tempcsv",
        "delimiter",
        "tmp_csv_reader",
        "fieldnames",
        "csv",
        "DictWriter",
        "statuscsv",
        "fieldnames",
        "header",
        "delimiter",
        "status_writer",
        "writeheader",
        "line",
        "tmp_csv_reader",
        "status_writer",
        "writerow",
        "line",
        "line",
        "updated_master_reader",
        "sample",
        "line",
        "status_writer",
        "writerow",
        "line",
        "os",
        "remove",
        "format",
        "woid",
        "sample_add_flag",
        "os",
        "chdir",
        "working_dir",
        "infile",
        "input",
        "strip",
        "len",
        "woid",
        "woid",
        "ValueError",
        "woid",
        "woid",
        "woid",
        "os",
        "path",
        "exists",
        "woid",
        "format",
        "woid",
        "input",
        "format",
        "woid",
        "create_woid",
        "os",
        "makedirs",
        "woid",
        "os",
        "chdir",
        "woid",
        "input",
        "format",
        "woid",
        "create_master",
        "woid",
        "woid",
        "format",
        "master_sample_link",
        "input",
        "master_sample_line",
        "master_samples",
        "append",
        "master_sample_line",
        "x",
        "x",
        "master_samples",
        "x",
        "open",
        "master_outfile",
        "mastercsv",
        "open",
        "qc_status_file",
        "statuscsv",
        "csv",
        "writer",
        "mastercsv",
        "delimiter",
        "csv",
        "writer",
        "statuscsv",
        "delimiter",
        "master_write",
        "writerows",
        "master_samples",
        "status_write",
        "writerows",
        "master_samples",
        "open",
        "qc_status_file",
        "qcstempcsv",
        "open",
        "qcstatusfilecsv",
        "open",
        "launch_failed_file",
        "launchfailedcsv",
        "csv",
        "DictReader",
        "qcstempcsv",
        "delimiter",
        "temp_reader",
        "fieldnames",
        "temp_header",
        "qc_fieldnames",
        "csv",
        "DictWriter",
        "qcstatusfilecsv",
        "fieldnames",
        "status_header",
        "delimiter",
        "csv",
        "DictWriter",
        "launchfailedcsv",
        "fieldnames",
        "status_header",
        "delimiter",
        "status_writer",
        "writeheader",
        "launch_fail_writer",
        "writeheader",
        "line",
        "temp_reader",
        "status_writer",
        "writerow",
        "line",
        "os",
        "rename",
        "qc_status_file",
        "os",
        "chdir",
        "working_dir",
        "create_master",
        "create_woid",
        "input",
        "tu_sample_y_n",
        "tu_sample_y_n",
        "input",
        "tu_sample_y_n",
        "input",
        "strip",
        "tu_sample",
        "tu_sample",
        "tu_sample",
        "tu_sample",
        "open",
        "woid",
        "qc_status_file",
        "read",
        "topup_samples",
        "append",
        "tu_sample",
        "tu_sample",
        "open",
        "woid",
        "qc_status_file",
        "read",
        "format",
        "tu_sample",
        "qc_status_file",
        "infile",
        "os",
        "chdir",
        "woid",
        "topup_csv_update",
        "topup_samples",
        "woid",
        "format",
        "woid",
        "sample",
        "topup_samples",
        "sample",
        "quit",
        "input",
        "sample_number",
        "ValueError",
        "input",
        "user_date",
        "sample_number",
        "mm_dd_yy",
        "user_date",
        "input",
        "new_date",
        "ValueError",
        "exit",
        "sample_number",
        "new_date",
        "os",
        "path",
        "exists",
        "woid",
        "sample_outfile",
        "format",
        "sample_outfile",
        "input",
        "sample_line",
        "sample_info",
        "append",
        "sample_line",
        "len",
        "sample_info",
        "sample_info",
        "os",
        "chdir",
        "woid",
        "topup_csv_update",
        "topup_samples",
        "woid",
        "open",
        "sample_outfile",
        "sample_outfilecsv",
        "csv",
        "writer",
        "sample_outfilecsv",
        "delimiter",
        "sample_write",
        "writerows",
        "sample_info",
        "open",
        "sample_outfile",
        "samplecsv",
        "csv",
        "DictReader",
        "samplecsv",
        "delimiter",
        "sample_line",
        "sample_reader",
        "k",
        "replace",
        "v",
        "k",
        "v",
        "sample_line",
        "items",
        "sample_remove_whitespace",
        "sample_name",
        "split",
        "sample_name_split",
        "strip",
        "sample",
        "sample",
        "sample_list",
        "append",
        "sample",
        "compute_workflow_create",
        "infile",
        "woid",
        "sample",
        "sample_list",
        "cw_sample_check",
        "woid_cw_file",
        "sample",
        "len",
        "samples_not_found_in_cw",
        "format",
        "woid_cw_file",
        "sample",
        "samples_not_found_in_cw",
        "sample",
        "quit",
        "os",
        "path",
        "exists",
        "qc_status_file",
        "os",
        "path",
        "exists",
        "woid_cw_file",
        "os",
        "path",
        "exists",
        "launch_failed_file",
        "qc_status_update",
        "woid_cw_file",
        "sample_list",
        "woid",
        "qc_status_file",
        "os",
        "chdir",
        "working_dir",
        "main"
    ],
    "literals": [
        "\"%m%d%y\"",
        "'/Users/ltrani/Desktop/git/qc/ccdg_launcher/topmed_test'",
        "'WOID'",
        "'QC Sample'",
        "'PSE'",
        "'# of Inputs'",
        "'# of Instrument Data'",
        "'LIMS Status'",
        "'Instrument Check'",
        "'Launch Status'",
        "'Launch Date'",
        "'QC Status'",
        "'QC Date'",
        "'QC Failed Metrics'",
        "'COD Collaborator'",
        "'QC Directory'",
        "'Top Up'",
        "\"-f\"",
        "'Input compute workflow file with all samples'",
        "'-l'",
        "'Link to links compute workflow file'",
        "'store_true'",
        "'-t'",
        "'Update status file with topup samples'",
        "'store_true'",
        "'-a'",
        "'add additional samples to status file'",
        "'store_true'",
        "\"-w\"",
        "'check failed samples, enter woids as comma separated list or all for '",
        "'everything'",
        "'args.t'",
        "'{} file not found.'",
        "'{} file not found.'",
        "'/'",
        "'tm.fail.recheck.'",
        "'.tsv'",
        "'/'",
        "'all'",
        "','",
        "'w'",
        "'\\n'",
        "'\\n{} dir does not exist.\\nExiting ccdgl.'",
        "'.qcstatus.tsv'",
        "'.launch.fail.tsv'",
        "'.instrument.pass.status.active.tsv'",
        "'-------------------------------------------'",
        "'-------------------------------------------'",
        "'-------\\n{}\\n-------'",
        "'-------'",
        "'-------'",
        "'r'",
        "'r'",
        "'\\t'",
        "'\\t'",
        "'QC Sample'",
        "'0'",
        "'QC Sample'",
        "'QC Sample'",
        "'QC Sample'",
        "'QC Sample'",
        "'0'",
        "'QC Sample'",
        "'QC Sample'",
        "'QC Sample'",
        "'There are launch samples not found in {}:\\n'",
        "''",
        "\"/gscuser/awagner/bin/python3\"",
        "\"/gscuser/awollam/aw/ccdg_zero_restore.py\"",
        "\"-w\"",
        "'/gapp/ia32linux/bin/firefox %s'",
        "'https://imp-lims.gsc.wustl.edu/entity/compute-workflow?_show_result_set_definition=1&_result_set_'",
        "'name=&cw_id=&creation_event_id=&assay_id=&assay_id=&protocol_id=761&date_scheduled=&sample_full_'",
        "'name=&number_of_input=&number_of_instrument_data='",
        "'Open compute workflow in firefox? (y/n)\\n'",
        "'y'",
        "'n'",
        "'Please enter y or n:\\n'",
        "'y'",
        "'\\nCompute workflow link:\\n{}'",
        "'\\nCreate workflow file:\\ncat > tm.computeworkflow.{}.tsv\\n'",
        "'285*'",
        "'/'",
        "'.compute.workflow.'",
        "'.tsv'",
        "'r'",
        "'w'",
        "'\\t'",
        "'\\t'",
        "'Work Order'",
        "'Aligned Bam To BQSR Cram And VCF'",
        "'Protocol'",
        "'\\t'",
        "'Sample Full Name'",
        "'0'",
        "'\\t'",
        "'Sample Full Name'",
        "'Sample Full Name'",
        "'QC Sample'",
        "'Sample Full Name'",
        "'PSE'",
        "'PSE'",
        "'# of Inputs'",
        "'# of Inputs'",
        "'# of Instrument Data'",
        "'# of Instrument Data'",
        "'Launch Date'",
        "'WOID'",
        "'QC Status'",
        "'NONE'",
        "'QC Date'",
        "'NONE'",
        "'QC Failed Metrics'",
        "'NONE'",
        "'COD Collaborator'",
        "'NONE'",
        "'QC Directory'",
        "'NONE'",
        "'LIMS Status'",
        "'Status'",
        "'# of Inputs'",
        "'# of Instrument Data'",
        "'Status'",
        "'ready'",
        "'Instrument Check'",
        "'PASS'",
        "'Launch Status'",
        "'Launched'",
        "'# of Inputs'",
        "'# of Instrument Data'",
        "'Status'",
        "'active'",
        "'Instrument Check'",
        "'PASS'",
        "'Launch Status'",
        "'MANUAL LAUNCH'",
        "'Launch Date'",
        "'NA'",
        "'Instrument Check'",
        "'FAIL'",
        "'Launch Status'",
        "'DO NOT LAUNCH'",
        "'Launch Date'",
        "'NA'",
        "'\\n{} Samples pass instrument check, status updated to Launched:'",
        "' Samples pass instrument check, status updated to Launched:'",
        "'Sample'",
        "'PSE'",
        "'\\t'",
        "'Sample\\tPSE'",
        "'\\n{} Samples failed instrument check, status is do not launch: '",
        "'Samples failed instrument check, status is do not launch:'",
        "'Sample'",
        "'PSE'",
        "'# of Inputs'",
        "'# of Instrument Data'",
        "\"\\t\"",
        "'Sample\\tPSE\\t# of Inputs\\t# of Instrument Data'",
        "'\\n{} Failed samples, pass instrument check, status updated to Launched:'",
        "' Failed samples, pass instrument check, status updated to Launched:'",
        "'Sample'",
        "'PSE'",
        "'\\t'",
        "'Sample\\tPSE'",
        "'\\n{} Samples failed instrument check again, status is do not launch:'",
        "' Samples failed instrument check again, status is do not launch:'",
        "'\\n{} Samples pass instrument check, protocol status is active:'",
        "' Samples pass instrument check, protocol status is active:'",
        "'Sample'",
        "'PSE'",
        "'# of Inputs'",
        "'# of Instrument Data'",
        "'LIMS Status'",
        "\"\\t\"",
        "'Sample\\tPSE\\t# of Inputs\\t# of Instrument Data\\tLIMS Status'",
        "'Manually launch samples if they have not already been launched (check jira).'",
        "'Manually launch samples if they have not already been launched (check jira).'",
        "'\\nAll processed samples have a launch status.'",
        "'All processed samples have a launch status.'",
        "'.qcstatus.temp.tsv'",
        "'.launch.fail.temp.tsv'",
        "'.launch.fail.tsv'",
        "'.instrument.pass.status.active.tsv'",
        "'.instrument.pass.status.active.temp.tsv'",
        "'r'",
        "'w'",
        "'w'",
        "'w'",
        "'\\t'",
        "'\\t'",
        "'\\t'",
        "'\\t'",
        "'Full Name'",
        "'0'",
        "'Full Name'",
        "'Full Name'",
        "'Full Name'",
        "'Instrument Check'",
        "'FAIL'",
        "'Launch Status'",
        "'MANUAL LAUNCH'",
        "'Top Up'",
        "'NO'",
        "'Full Name'",
        "'Instrument Check'",
        "'PASS'",
        "'Launch Status'",
        "'Launched'",
        "'QC Sample'",
        "'\\t'",
        "'PSE'",
        "'Instrument Check'",
        "'FAIL'",
        "'QC Sample'",
        "\"\\t\"",
        "'PSE'",
        "\"\\t\"",
        "'# of Inputs'",
        "\"\\t\"",
        "'# of Instrument Data'",
        "'Instrument Check'",
        "'PASS'",
        "'Launch Status'",
        "'MANUAL LAUNCH'",
        "'QC Sample'",
        "\"\\t\"",
        "'PSE'",
        "\"\\t\"",
        "'# of Inputs'",
        "\"\\t\"",
        "'# of Instrument Data'",
        "'\\t'",
        "'LIMS Status'",
        "'Full Name'",
        "'Top Up'",
        "'NO'",
        "'QC Sample'",
        "'Full Name'",
        "'Instrument Check'",
        "'PASS'",
        "'Launch Status'",
        "'Launched'",
        "'QC Sample'",
        "'\\t'",
        "'PSE'",
        "'Instrument Check'",
        "'FAIL'",
        "'QC Sample'",
        "\"\\t\"",
        "'PSE'",
        "\"\\t\"",
        "'# of Inputs'",
        "\"\\t\"",
        "'# of Instrument Data'",
        "'Instrument Check'",
        "'PASS'",
        "'Launch Status'",
        "'MANUAL LAUNCH'",
        "'QC Sample'",
        "\"\\t\"",
        "'PSE'",
        "\"\\t\"",
        "'# of Inputs'",
        "\"\\t\"",
        "'# of Instrument Data'",
        "'\\t'",
        "'LIMS Status'",
        "'Top Up'",
        "'YES'",
        "'Skipping topup sample: {}'",
        "'Full Name'",
        "'Full Name'",
        "'Ignoring previously launched sample: {}\\t{}\\t{}'",
        "'Full Name'",
        "'Launch Date'",
        "'Launch Status'",
        "'0'",
        "'{} not found in {}'",
        "'.qcstatus.tsv'",
        "'r'",
        "'.qcstatus.temp.tsv'",
        "'w'",
        "'\\t'",
        "'\\t'",
        "'Full Name'",
        "'Top Up'",
        "'YES'",
        "'Top Up'",
        "'YES'",
        "'Top Up'",
        "'NO'",
        "'.qcstatus.temp.tsv'",
        "'.qcstatus.tsv'",
        "'----------\\nWork order id (enter to exit):\\n'",
        "'Exiting topmed launcher.'",
        "\"\\nwoid must be a number.\"",
        "'.updated.master.samples.tsv'",
        "'.qcstatus.tsv'",
        "'\\n{} dir does not exist.'",
        "'\\nCreate {}.updated.master.samples.tsv file:'",
        "'https://imp-lims.gsc.wustl.edu/entity/setup-work-order/'",
        "'?perspective=Sample&setup_name='",
        "'Master sample link:\\n{}\\nInput samples:'",
        "'No samples inputed.'",
        "'WOI'",
        "'Content'",
        "'\\t'",
        "'w'",
        "'r'",
        "'\\n'",
        "'\\t'",
        "'DNA'",
        "'Updated master file has {} samples, {} has {} samples.'",
        "'{} samples match inputed master samples.'",
        "'{} file samples do not match inputed master file samples. Please check sample input file.'",
        "'Samples in {} file, not in updated master:'",
        "'Adding {} to {} in {}.'",
        "'{}.status.temp.tsv'",
        "'w'",
        "'r'",
        "'{}.status.temp.tsv'",
        "'r'",
        "'\\t'",
        "'\\t'",
        "'\\t'",
        "'DNA'",
        "'{}.status.temp.tsv'",
        "'No samples found to add.'",
        "'----------\\nWork order id (enter to exit):\\n'",
        "'Exiting topmed launcher.'",
        "\"\\nwoid must be a number.\"",
        "'.master.samples.tsv'",
        "'.qcstatus.tsv'",
        "'.launch.fail.tsv'",
        "'\\n{} dir does not exist.'",
        "'Create {} directory? (y or n)\\n'",
        "'y'",
        "'\\nCreate {}.master.samples.tsv file? (y or n)\\n'",
        "'y'",
        "'https://imp-lims.gsc.wustl.edu/entity/setup-work-order/'",
        "'?perspective=Sample&setup_name='",
        "'\\nMaster sample link:\\n{}\\nInput samples:'",
        "'WOI'",
        "'w'",
        "'w'",
        "'\\n'",
        "'\\n'",
        "'r'",
        "'qc.status.temp.tsv'",
        "'w'",
        "'w'",
        "'\\t'",
        "'\\t'",
        "'\\t'",
        "'qc.status.temp.tsv'",
        "'n'",
        "'n'",
        "'\\nTopup samples? (y or n)\\n'",
        "'n'",
        "'y'",
        "'n'",
        "'\\nTopup samples? (y or n)\\n'",
        "'y'",
        "'Sample name: (enter to continue)\\n'",
        "'0'",
        "'/'",
        "'/'",
        "'{} not found in {} file.'",
        "'args.t'",
        "'Samples have been updated as topup in {}.qcstatus.tsv'",
        "'\\nSample number:\\n'",
        "'Sample number must be a number.'",
        "'\\nUse today\\'s date? (y or n)\\n'",
        "'y'",
        "'samples.'",
        "'n'",
        "'Input date (MMDDYY):\\n'",
        "'Date must be a number'",
        "'samples.'",
        "'/'",
        "'{} file already exists.'",
        "'\\nProduction samples (from email):'",
        "'Please include production samples (from email) or add header line.'",
        "'Library'",
        "'Library field not found in header line.'",
        "'w'",
        "'\\n'",
        "'r'",
        "'\\t'",
        "' '",
        "''",
        "'Library'",
        "'-lib'",
        "'0'",
        "'There are launch samples not found in {}:\\n'",
        "'__main__'"
    ],
    "variables": [
        "mm_dd_yy",
        "working_dir",
        "qc_fieldnames",
        "desc_str",
        "parser",
        "group_a",
        "group_b",
        "args",
        "woid_dirs",
        "woid_dirs",
        "woid_dirs",
        "outfile",
        "infile",
        "woid_dirs",
        "woid_dirs",
        "outfile_writer",
        "sample_list",
        "qc_status_file",
        "launch_failed_file",
        "instrument_pass_status_active_file",
        "lfcsv_reader",
        "ipsafcsv_reader",
        "line",
        "line",
        "woid_cw_file",
        "samples_not_found_in_cw",
        "samples_not_found_in_cw",
        "output",
        "firefox_path",
        "launch_link",
        "open_url",
        "open_url",
        "woid_dirs",
        "woid_dir_unfiltered",
        "outfile",
        "cwl_reader",
        "cwl_fieldnames",
        "outfile_writer",
        "sample_not_found",
        "cw_samples",
        "infile_reader",
        "qc_results",
        "sample",
        "infile_reader",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "qc_results",
        "output",
        "qc_master_sample_list",
        "temp_status_file",
        "launch_failed_temp",
        "launch_failed_file",
        "instrument_pass_status_active_file",
        "instrument_pass_status_active_file_tmp",
        "status_file_reader",
        "status_file_header",
        "temp_status_writer",
        "temp_launch_fail_writer",
        "instrument_pass_status_active_writer",
        "pse_ready",
        "pse_fail",
        "pse_fail_ready",
        "pse_fail_fail",
        "ins_pass_stat_actv",
        "line",
        "fail_metrics",
        "fail_qc_update",
        "sample",
        "qc_metrics",
        "master_qc_update",
        "samp",
        "output",
        "status_reader",
        "status_fieldnames",
        "temp_status_writer",
        "line",
        "line",
        "woid",
        "val",
        "updated_master_outfile",
        "qc_status_file",
        "master_sample_link",
        "master_samples",
        "master_sample_line",
        "master_samples",
        "updated_sample_dict",
        "updated_sample_list",
        "sample",
        "updated_sample_dict",
        "sample",
        "status_samples",
        "updated_master_write",
        "status_reader",
        "sample_diff",
        "sample_add_flag",
        "updated_master_reader",
        "tmp_csv_reader",
        "header",
        "status_writer",
        "sample_add_flag",
        "sample_list",
        "woid",
        "val",
        "master_outfile",
        "qc_status_file",
        "launch_failed_file",
        "create_woid",
        "create_master",
        "master_sample_link",
        "master_samples",
        "master_sample_line",
        "master_samples",
        "master_write",
        "status_write",
        "temp_reader",
        "temp_header",
        "status_header",
        "status_writer",
        "launch_fail_writer",
        "topup_samples",
        "tu_sample_y_n",
        "tu_sample_y_n",
        "tu_sample",
        "tu_sample",
        "sample_number",
        "val",
        "user_date",
        "sample_outfile",
        "new_date",
        "val",
        "sample_outfile",
        "sample_info",
        "sample_line",
        "sample_info",
        "sample_info",
        "sample_write",
        "sample_reader",
        "sample_remove_whitespace",
        "sample_name",
        "sample_name_split",
        "sample",
        "sample",
        "woid_cw_file",
        "samples_not_found_in_cw",
        "samples_not_found_in_cw"
    ],
    "comments": [
        "generate date month/day/year string",
        "set working dir to ccdg woid dir when deployed",
        "working_dir = os.getcwd()",
        "working_dir = '/gscmnt/gc2783/qc/topmed_assay'",
        "create compute workflow file",
        "check to see if samples exist in compute workflow file",
        "run qc status updates on samples",
        "print link to download compute workflow from lims and cat command",
        "make list of all woid dirs, filter out anything that isn't a woid",
        "create computeworkflow file in woid directory",
        "Check compute workflow file to see if all samples are there",
        "assing qc fields, check instrument match and sample lims status",
        "print sample status results",
        "process samples update qc files and populate results lists for printing",
        "Declare lists for print statements to terminal",
        "check samples that have already failed",
        "write passed samples to temp file, populate ready list",
        "write failed samples to temp file, populate not ready list",
        "check sample status from sample email sent to be qc'd",
        "write passed samples to temp file",
        "write failed samples to temp file",
        "skip samples already checked to launch",
        "write all other unchecked samples to file",
        "check to see if sample exists in status file",
        "Determine sample topup status",
        "add samples to qcstatus file after they have been reactivated",
        "sample email function, create new woid dir if it doesn't exist and master spreadsheet if it doesn't exist.",
        "write emails to email file",
        "create woid dir if it does not exist",
        "create master file if it does not exist and also qcstatus file",
        "Add header to qc status file and create failed to launch file with the same header.",
        "check for topup samples",
        "create sample email",
        "if there are topup add them to qcstatus file, populate with YES or NO",
        "write samples to email file",
        "from sample file, use Library field to create sample list",
        "create compute workflow file",
        "check to see if samples exist in compute workflow file",
        "run qc status updates on samples"
    ],
    "docstrings": [
        "\"\"\"\n        Program to create sample emails and update sample launch status in tracking spreadsheets.\n    \"\"\""
    ],
    "functions": [
        "main",
        "fail_files_check",
        "generate_compute_workflow",
        "woid_list",
        "is_int",
        "compute_workflow_create",
        "cw_sample_check",
        "sample_pse_match",
        "output_launcher_results",
        "qc_status_update",
        "topup_csv_update",
        "sample_add",
        "ccdg_launcher"
    ],
    "classes": []
}