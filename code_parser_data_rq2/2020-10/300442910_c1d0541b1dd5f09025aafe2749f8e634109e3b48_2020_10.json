{
    "identifiers": [
        "ObjectiveActivity",
        "Statement",
        "Verb",
        "MockDate",
        "Cmi5",
        "Cmi5DefinedVerbs",
        "MockCmi5Helper",
        "DEFAULT_LAUNCH_PARAMETERS",
        "now",
        "MockDate",
        "now",
        "now",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "Cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "verb",
        "additionalProps",
        "cmi5",
        "expect",
        "lps",
        "expect",
        "lps",
        "expect",
        "lps",
        "additionalProps",
        "describe",
        "beforeEach",
        "mockDateFloorSeconds",
        "mockCmi5",
        "MockCmi5Helper",
        "afterEach",
        "mockCmi5",
        "MockDate",
        "describe",
        "it",
        "mockCmi5",
        "Cmi5",
        "expect",
        "cmi5",
        "DEFAULT_LAUNCH_PARAMETERS",
        "describe",
        "it",
        "expect",
        "Cmi5",
        "it",
        "mockCmi5",
        "expect",
        "Cmi5",
        "describe",
        "it",
        "initialize",
        "mockCmi5",
        "expect",
        "cmi5",
        "expect",
        "cmi5",
        "mockCmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "failStatus",
        "it",
        "failStatus",
        "mockCmi5",
        "mockCmi5",
        "failStatus",
        "Cmi5",
        "expect",
        "expect",
        "cmi5",
        "expect",
        "expect",
        "failStatus",
        "expect",
        "mockCmi5",
        "failStatus",
        "it",
        "failStatus",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "failStatus",
        "Cmi5",
        "cmi5",
        "err",
        "exception",
        "err",
        "expect",
        "exception",
        "expect",
        "expect",
        "failStatus",
        "expect",
        "failStatus",
        "it",
        "failStatus",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "failStatus",
        "mockCmi5",
        "Cmi5",
        "cmi5",
        "expect",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "failStatus",
        "it",
        "failStatus",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "mockCmi5",
        "failStatus",
        "Cmi5",
        "cmi5",
        "err",
        "exception",
        "err",
        "expect",
        "exception",
        "expect",
        "expect",
        "failStatus",
        "expect",
        "describe",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "s",
        "s",
        "s",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "mockCmi5",
        "ex",
        "it",
        "ex",
        "ex",
        "initialize",
        "mockCmi5",
        "mockDateFloorSeconds",
        "ex",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "ex",
        "launchMode",
        "it",
        "launchMode",
        "mockCmi5",
        "mockCmi5",
        "launchMode",
        "initialize",
        "mockCmi5",
        "cmi5",
        "err",
        "exception",
        "err",
        "expect",
        "exception",
        "expect",
        "describe",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "it",
        "mockCmi5",
        "mockCmi5",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "expect",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "err",
        "exception",
        "err",
        "expect",
        "exception",
        "expect",
        "launchMode",
        "it",
        "launchMode",
        "mockCmi5",
        "mockCmi5",
        "launchMode",
        "initialize",
        "mockCmi5",
        "cmi5",
        "err",
        "exception",
        "err",
        "expect",
        "exception",
        "expect",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "DEFAULT_OBJECTIVE_ACTIVITY",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "expect",
        "DEFAULT_OBJECTIVE_ACTIVITY",
        "expect",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "DEFAULT_OBJECTIVE_ACTIVITY",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "expect",
        "DEFAULT_OBJECTIVE_ACTIVITY",
        "expect",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "s",
        "s",
        "s",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "ex",
        "it",
        "ex",
        "ex",
        "initialize",
        "mockCmi5",
        "mockDateFloorSeconds",
        "ex",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "ex",
        "describe",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "it",
        "mockCmi5",
        "mockCmi5",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "expect",
        "launchMode",
        "it",
        "launchMode",
        "mockCmi5",
        "mockCmi5",
        "launchMode",
        "initialize",
        "mockCmi5",
        "cmi5",
        "err",
        "exception",
        "err",
        "expect",
        "exception",
        "expect",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "s",
        "s",
        "s",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "ex",
        "it",
        "ex",
        "ex",
        "initialize",
        "mockCmi5",
        "mockDateFloorSeconds",
        "ex",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "ex",
        "describe",
        "it",
        "initialize",
        "mockCmi5",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "ex",
        "it",
        "ex",
        "ex",
        "initialize",
        "mockCmi5",
        "mockDateFloorSeconds",
        "ex",
        "cmi5",
        "expect",
        "mockCmi5",
        "expectActivityStatement",
        "cmi5",
        "Cmi5DefinedVerbs",
        "expect",
        "ex"
    ],
    "literals": [
        "\"@xapi/xapi\"",
        "\"mockdate\"",
        "\"../../src/Cmi5\"",
        "\"../../src/constants\"",
        "\"../helpers\"",
        "\"Activity\"",
        "\"http://example.com/object/12345\"",
        "\"http://adlnet.gov/expapi/activities/objective\"",
        "string",
        "\"Cmi5\"",
        "\"constructor\"",
        "\"parses launch params from window.location.href\"",
        "\"isCmiAvailable\"",
        "\"returns false when any required cmi query params are missing from window.location\"",
        "\"returns true when all required cmi query params set in window.location\"",
        "\"initialize\"",
        "\"authenticates, loads state and profile and posts initialized statement\"",
        "throws on fetch failed with ${failStatus}",
        "throws on getLaunchData failed with ${failStatus}",
        "\"activities/state\"",
        "\"activities/state\"",
        "swallows errors on getLearnerPrefs failed with ${failStatus}",
        "\"activities/profile\"",
        "throws on post INITIALIZED statement fails with ${failStatus}",
        "\"xapi/statements\"",
        "\"xapi/statements\"",
        "\"complete\"",
        "\"posts a COMPLETED statement\"",
        "\"applies optional statement transform when provided\"",
        "\"http://example.com/xapi/content/ext/my-ext\"",
        "\"http://example.com/xapi/content/ext/my-ext\"",
        "\"PT2M5S\"",
        "\"PT31S\"",
        "sends duration as time since initialized (${ex.seconds}=${ex.expectedDuration})",
        "\"Browse\"",
        "\"Review\"",
        "throws exception if COMPLETED invalid for launch mode ${launchMode}",
        "\"Can only send COMPLETED when launchMode is 'Normal'\"",
        "\"passed\"",
        "\"posts a PASSED statement with a result score\"",
        "\"posts a PASSED statement with a result score passed as a number\"",
        "\"posts a PASSED statement with no result score when score not passed\"",
        "\"throws if passed score is beneath masteryScore\"",
        "\"Learner has not met Mastery Score\"",
        "\"Browse\"",
        "\"Review\"",
        "throws exception if PASSED invalid for launch mode ${launchMode}",
        "\"Can only send PASSED when launchMode is 'Normal'\"",
        "\"assigns an ObjectiveActivity when passed as second param\"",
        "\"assigns an ObjectiveActivity when passed as an option\"",
        "\"applies optional statement transform when provided\"",
        "\"http://example.com/xapi/result/ext/some-ext\"",
        "\"some-val\"",
        "\"http://example.com/xapi/result/ext/some-ext\"",
        "\"some-val\"",
        "\"PT1M33S\"",
        "sends duration as time since initialized (${ex.seconds}=${ex.expectedDuration})",
        "\"failed\"",
        "\"posts a FAILED statement with a result score\"",
        "\"posts a FAILED statement with a result score passed as a number\"",
        "\"posts a FAILED statement with no result score when score not passed\"",
        "\"Browse\"",
        "\"Review\"",
        "throws exception if FAILED invalid for launch mode ${launchMode}",
        "\"Can only send FAILED when launchMode is 'Normal'\"",
        "\"applies optional statement transform when provided\"",
        "\"http://example.com/xapi/result/ext/another-ext\"",
        "\"another-val\"",
        "\"http://example.com/xapi/result/ext/another-ext\"",
        "\"another-val\"",
        "\"PT13S\"",
        "sends duration as time since initialized (${ex.seconds}=${ex.expectedDuration})",
        "\"terminate\"",
        "\"posts a TERMINATED statement\"",
        "\"PT1H1M53S\"",
        "sends duration as time since initialized (${ex.seconds}=${ex.expectedDuration})"
    ],
    "variables": [
        "DEFAULT_OBJECTIVE_ACTIVITY",
        "cmi5",
        "lps",
        "mockCmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "exception",
        "cmi5",
        "cmi5",
        "exception",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "exception",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "exception",
        "cmi5",
        "exception",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5",
        "exception",
        "cmi5",
        "cmi5",
        "cmi5",
        "cmi5"
    ],
    "comments": [
        "needs to floor seconds when mocking date for xapi durations",
        "or we'll get tests failing with non-deterministic rounding"
    ],
    "docstrings": [],
    "functions": [
        "mockDateFloorSeconds",
        "initialize",
        "expectActivityStatement"
    ],
    "classes": []
}