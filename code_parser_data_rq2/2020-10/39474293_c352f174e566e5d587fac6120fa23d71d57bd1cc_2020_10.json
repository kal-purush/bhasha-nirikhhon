{
    "identifiers": [
        "Maybe",
        "size",
        "getTypedPointerArray",
        "size",
        "index",
        "value",
        "value",
        "index",
        "value",
        "existingIndex",
        "value",
        "index",
        "newLength",
        "index",
        "existingIndex",
        "index",
        "index",
        "valueIndex",
        "valueIndex",
        "valueIndex",
        "value",
        "index",
        "value",
        "size",
        "size",
        "maxIndex",
        "MAX_8BIT_INT",
        "Uint8Array",
        "size",
        "maxIndex",
        "MAX_16BIT_INT",
        "Uint16Array",
        "size",
        "maxIndex",
        "MAX_32BIT_INT",
        "Uint32Array",
        "size",
        "Float64Array",
        "size"
    ],
    "literals": [
        "'@terascope/types'",
        "'Cannot write to frozen Data instance'",
        "Value in Data not found for index ${index}"
    ],
    "variables": [
        "existingIndex",
        "newLength",
        "valueIndex",
        "value",
        "MAX_8BIT_INT",
        "MAX_16BIT_INT",
        "MAX_32BIT_INT",
        "maxIndex"
    ],
    "comments": [],
    "docstrings": [
        "* A data type agnostic in-memory representation of the data\n * for a Vector and indices/unique values.\n *\n * This should be generated by the Builder and\n * should NOT be mutated once created.\n *\n * @internal",
        "* The index represent the order of the values,\n     * the value is the hash of where to find the index",
        "* The unique values",
        "* Gets the correctly sized TypeArray depending on the length of items"
    ],
    "functions": [
        "get",
        "distinct",
        "getTypedPointerArray"
    ],
    "classes": [
        "Data"
    ]
}