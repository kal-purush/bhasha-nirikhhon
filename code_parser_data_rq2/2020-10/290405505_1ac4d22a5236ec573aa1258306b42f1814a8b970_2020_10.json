{
    "identifiers": [
        "org",
        "apache",
        "camel",
        "component",
        "aws2",
        "s3",
        "localstack",
        "org",
        "apache",
        "camel",
        "EndpointInject",
        "org",
        "apache",
        "camel",
        "Exchange",
        "org",
        "apache",
        "camel",
        "Processor",
        "org",
        "apache",
        "camel",
        "ProducerTemplate",
        "org",
        "apache",
        "camel",
        "builder",
        "RouteBuilder",
        "org",
        "apache",
        "camel",
        "component",
        "aws2",
        "s3",
        "AWS2S3Constants",
        "org",
        "apache",
        "camel",
        "component",
        "mock",
        "MockEndpoint",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertNotNull",
        "EndpointInject",
        "template",
        "EndpointInject",
        "result",
        "Test",
        "result",
        "expectedMessageCount",
        "template",
        "send",
        "Override",
        "exchange",
        "exchange",
        "getIn",
        "setHeader",
        "AWS2S3Constants",
        "KEY",
        "exchange",
        "getIn",
        "setBody",
        "template",
        "send",
        "Override",
        "exchange",
        "exchange",
        "getIn",
        "setHeader",
        "AWS2S3Constants",
        "KEY",
        "exchange",
        "getIn",
        "setBody",
        "template",
        "send",
        "Override",
        "exchange",
        "exchange",
        "getIn",
        "setHeader",
        "AWS2S3Constants",
        "KEY",
        "exchange",
        "getIn",
        "setBody",
        "assertMockEndpointsSatisfied",
        "assertEquals",
        "result",
        "getExchanges",
        "size",
        "assertNotNull",
        "result",
        "getExchanges",
        "get",
        "getMessage",
        "getBody",
        "Override",
        "Override",
        "awsEndpoint",
        "startupOrder",
        "to",
        "awsEndpoint",
        "to",
        "startupOrder",
        "to"
    ],
    "literals": [
        "\"mock:result\"",
        "\"direct:putObject\"",
        "\"test.txt\"",
        "\"Test\"",
        "\"direct:putObject\"",
        "\"test1.txt\"",
        "\"Test1\"",
        "\"direct:putObject\"",
        "\"test2.txt\"",
        "\"Test2\"",
        "\"aws2-s3://mycamel?autoCreateBucket=true\"",
        "\"direct:putObject\"",
        "\"mock:result\"",
        "\"aws2-s3://mycamel?moveAfterRead=true&destinationBucket=camel-kafka-connector&autoCreateBucket=true&destinationBucketPrefix=RAW(movedPrefix)&destinationBucketSuffix=RAW(movedSuffix)&includeBody=false\"",
        "\"mock:result\""
    ],
    "variables": [
        "template",
        "result"
    ],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "sendIn",
        "process",
        "process",
        "process",
        "RouteBuilder",
        "createRouteBuilder",
        "configure"
    ],
    "classes": [
        "S3ConsumerLocalstackIncludeBodyTest"
    ]
}