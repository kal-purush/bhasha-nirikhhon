{
    "identifiers": [
        "arr",
        "_",
        "len",
        "arr",
        "arr",
        "len",
        "arr",
        "build_tree",
        "i",
        "size",
        "tree",
        "fn",
        "tree",
        "i",
        "tree",
        "i",
        "p",
        "v",
        "p",
        "size",
        "tree",
        "v",
        "p",
        "p",
        "tree",
        "fn",
        "tree",
        "p",
        "tree",
        "p",
        "l",
        "r",
        "l",
        "size",
        "r",
        "size",
        "l",
        "r",
        "l",
        "tree",
        "l",
        "res",
        "fn",
        "res",
        "tree",
        "l",
        "r",
        "tree",
        "r",
        "res",
        "fn",
        "res",
        "tree",
        "r",
        "l",
        "r",
        "res"
    ],
    "literals": [],
    "variables": [
        "tree",
        "size",
        "fn",
        "i",
        "p",
        "p",
        "p",
        "l",
        "r",
        "res",
        "res",
        "res",
        "l",
        "r"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nSegmentTree creates a segment tree with a given array and a \"commutative\" function,\nthis non-recursive version uses less memory than the recursive version and include:\n1. range queries in log(N) time\n2. update an element in log(N) time\nthe function should be commutative and takes 2 values and returns the same type value\n\nExamples -\nmytree = SegmentTree([2, 4, 5, 3, 4],max)\nprint(mytree.query(2, 4))\nmytree.update(3, 6)\nprint(mytree.query(0, 3)) ...\n\nmytree = SegmentTree([4, 5, 2, 3, 4, 43, 3], lambda a, b: a + b)\nprint(mytree.query(0, 6))\nmytree.update(2, -10)\nprint(mytree.query(0, 6)) ...\n\nmytree = SegmentTree([(1, 2), (4, 6), (4, 5)], lambda a, b: (a[0] + b[0], a[1] + b[1]))\nprint(mytree.query(0, 2))\nmytree.update(2, (-1, 2))\nprint(mytree.query(0, 2)) ...\n\"\"\""
    ],
    "functions": [
        "build_tree",
        "update",
        "query"
    ],
    "classes": [
        "SegmentTree"
    ]
}