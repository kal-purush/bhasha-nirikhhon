{
    "identifiers": [
        "mwcp",
        "parser",
        "Parser",
        "socket",
        "pefile",
        "yara",
        "Crypto",
        "Cipher",
        "ARC4",
        "c",
        "c",
        "letters",
        "digits",
        "punctuation",
        "c",
        "ord",
        "c",
        "key",
        "data",
        "ARC4",
        "key",
        "cipher",
        "decrypt",
        "data",
        "raw_data",
        "rule_name",
        "yara",
        "compile",
        "source",
        "rule_source",
        "yara_rules",
        "match",
        "data",
        "raw_data",
        "match",
        "matches",
        "match",
        "rule",
        "item",
        "match",
        "strings",
        "item",
        "rule_name",
        "item",
        "item",
        "addresses",
        "pe",
        "section",
        "pe",
        "sections",
        "section",
        "Name",
        "section",
        "get_data",
        "section",
        "VirtualAddress",
        "section",
        "SizeOfRawData",
        "Parser",
        "reporter",
        "Parser",
        "description",
        "author",
        "reporter",
        "reporter",
        "reporter",
        "data",
        "pefile",
        "PE",
        "data",
        "reporter",
        "data",
        "fast_load",
        "pe",
        "OPTIONAL_HEADER",
        "ImageBase",
        "x",
        "strip",
        "x",
        "extract_rdata",
        "pe",
        "split",
        "blob",
        "blobs",
        "len",
        "blob",
        "LEN_BLOB_KEY",
        "decrypt_rc4",
        "blob",
        "LEN_BLOB_KEY",
        "blob",
        "LEN_BLOB_KEY",
        "raw",
        "item",
        "raw",
        "split",
        "join",
        "convert_char",
        "c",
        "c",
        "item",
        "len",
        "data",
        "reporter",
        "add_metadata",
        "data",
        "len",
        "data",
        "data",
        "reporter",
        "add_metadata",
        "data"
    ],
    "literals": [
        "\" \\t\\r\\n\"",
        "\"\\\\x%02x\"",
        "'DoppelPaymer'",
        "'.rdata'",
        "'DoppelPaymer configuration parser.'",
        "'kevoreilly'",
        "\"\\x00\\x00\\x00\\x00\"",
        "\"\\x00\\x00\\x00\\x00\"",
        "\"\\x00\"",
        "\"\"",
        "'other'",
        "'RSA public key'",
        "'\\\\x'",
        "'other'",
        "'strings'"
    ],
    "variables": [
        "rule_source",
        "LEN_BLOB_KEY",
        "cipher",
        "addresses",
        "yara_rules",
        "matches",
        "addresses",
        "filebuf",
        "pe",
        "image_base",
        "blobs",
        "raw",
        "data"
    ],
    "comments": [
        "Copyright (C) 2019 Kevin O'Reilly (kevoreilly@gmail.com)",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see <http://www.gnu.org/licenses/>."
    ],
    "docstrings": [
        "'''\nrule DoppelPaymer\n{\n    meta:\n        author = \"kevoreilly\"\n        description = \"DoppelPaymer Payload\"\n        cape_type = \"DoppelPaymer Payload\"\n\n    strings:\n        $getproc32 = {81 FB ?? ?? ?? ?? 74 2D 8B CB E8 ?? ?? ?? ?? 85 C0 74 0C 8B C8 8B D7 E8 ?? ?? ?? ?? 5B 5F C3}\n        $cmd_string = \"Setup run\\n\" wide\n    condition:\n        uint16(0) == 0x5A4D and all of them\n}\n\n'''"
    ],
    "functions": [
        "convert_char",
        "decrypt_rc4",
        "yara_scan",
        "extract_rdata",
        "run"
    ],
    "classes": [
        "DoppelPaymer"
    ]
}