{
    "identifiers": [
        "paho",
        "mqtt",
        "client",
        "mqtt",
        "pyzabbix",
        "ZabbixAPI",
        "ZabbixMetric",
        "ZabbixSender",
        "ZabbixAPI",
        "user",
        "password",
        "client",
        "userdata",
        "flags",
        "rc",
        "rc",
        "client",
        "subscribe",
        "metric",
        "ZabbixMetric",
        "metric",
        "ZabbixSender",
        "use_config",
        "zabbix_server",
        "send",
        "packet",
        "result",
        "client",
        "userdata",
        "message",
        "message",
        "payload",
        "decode",
        "message",
        "topic",
        "message",
        "qos",
        "message",
        "retain",
        "message",
        "payload",
        "decode",
        "split",
        "payload_list",
        "zapi",
        "history",
        "get",
        "itemids",
        "item_id",
        "output",
        "limit",
        "history",
        "sortfield",
        "sortorder",
        "point",
        "history",
        "point",
        "split",
        "value",
        "value",
        "zbx_value",
        "mqtt_value",
        "zbx_value",
        "mqtt_value",
        "mqtt_value",
        "zbx_set",
        "mqtt_value",
        "zbx_value",
        "corrected_value",
        "zbx_set",
        "corrected_value",
        "client",
        "publish",
        "payload",
        "corrected_value",
        "qos",
        "retain",
        "mqtt",
        "Client",
        "on_connect",
        "on_message",
        "client",
        "connect",
        "broker_address",
        "client",
        "loop_forever"
    ],
    "literals": [
        "\"192.168.0.190\"",
        "'http://zabbix-web-apache-mysql/'",
        "'api'",
        "'api'",
        "'28666'",
        "\"Connected with result code \"",
        "\"nodemcu/litres\"",
        "'Microserver'",
        "'room.water.meter.litres'",
        "'zabbix-server'",
        "\"message received \"",
        "\"utf-8\"",
        "\"message topic=\"",
        "\"message qos=\"",
        "\"message retain flag=\"",
        "\"utf-8\"",
        "\" \"",
        "'extend'",
        "'clock'",
        "'DESC'",
        "'value'",
        "'.'",
        "\"New value: %s\"",
        "\"Corrected value: %s\"",
        "\"nodemcu/litres_corrected\""
    ],
    "variables": [
        "broker_address",
        "zapi",
        "item_id",
        "packet",
        "result",
        "payload_list",
        "mqtt_value",
        "history",
        "value",
        "zbx_value",
        "corrected_value",
        "client",
        "client",
        "on_connect",
        "client",
        "on_message"
    ],
    "comments": [
        "import the client1",
        "The callback for when the client receives a CONNACK response from the server.",
        "Subscribing in on_connect() means that if we lose the connection and",
        "reconnect then subscriptions will be renewed.",
        "print(int(payload_list[1]))",
        "print(int(payload_list[3]))",
        "print(history)",
        "print(\"{0}\".format(point['value']))",
        "value = \"{0}\".format(point['value'])",
        "zbx_set(mqtt_value)",
        "create new instance",
        "connect to broker",
        "client.publish(\"house/main-light\", \"OFF\")  # publish"
    ],
    "docstrings": [],
    "functions": [
        "on_connect",
        "zbx_set",
        "on_message"
    ],
    "classes": []
}