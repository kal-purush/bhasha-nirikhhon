{
    "identifiers": [
        "require",
        "req",
        "res",
        "Calendar",
        "req",
        "count",
        "req",
        "Calendar",
        "req",
        "req",
        "req",
        "all",
        "res",
        "err",
        "res",
        "err",
        "err",
        "err",
        "req",
        "res",
        "Calendar",
        "req",
        "req",
        "req",
        "opp",
        "Calendar",
        "req",
        "req",
        "req",
        "res",
        "res",
        "err",
        "res",
        "err",
        "err",
        "err",
        "req",
        "res",
        "Calendar",
        "req",
        "req",
        "req",
        "res",
        "err",
        "res",
        "err",
        "err",
        "err"
    ],
    "literals": [
        "'../models/Calendar'",
        "\"date\"",
        "\"avail\"",
        "\"room\"",
        "\"date\"",
        "\"avail\"",
        "\"room\"",
        "'error'",
        "'В данный период комната забронированна'",
        "\"date\"",
        "\"room\""
    ],
    "variables": [
        "Calendar",
        "count",
        "allpage",
        "all",
        "opp"
    ],
    "comments": [
        "module.exports.All = async function (req, res) {",
        "//     const count = await Calendar.count()",
        "//     const allpage = Math.ceil(count/req.body.limit)",
        "//     const all = await Calendar.find({room: req.params.id}).limit(req.body.limit).skip((req.body.page-1)*10)",
        "//",
        "//",
        "//     try {",
        "//         if (all) {",
        "//             res.status(200).json({count, allpage, all})",
        "//         }",
        "//     }",
        "//     catch (err) {",
        "//         //обработать ошибку",
        "//         res.status(500).json({",
        "//             success: false,",
        "//             message: err.message ? err.message : err",
        "//         })",
        "//     }",
        "//",
        "// }",
        "обработать ошибку",
        "критерий фильтрации",
        "параметр обновления",
        "если нет возможности забронировать",
        "обработать ошибку",
        "const opp = await Calendar.find({$and:[{\"date\" : {$gte : req.body.datestart, $lte : req.body.dateend}},",
        "{\"avail\": true},",
        "{\"room\": req.params.id}]})",
        "критерий фильтрации",
        "параметр обновления",
        "запрос не выполнился"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}