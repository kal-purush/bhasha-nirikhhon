{
    "identifiers": [
        "os",
        "pandas",
        "pd",
        "numpy",
        "np",
        "sqlalchemy",
        "ext",
        "automap",
        "automap_base",
        "sqlalchemy",
        "orm",
        "Session",
        "sqlalchemy",
        "create_engine",
        "flask",
        "Flask",
        "jsonify",
        "render_template",
        "flask_sqlalchemy",
        "SQLAlchemy",
        "Flask",
        "app",
        "config",
        "SQLAlchemy",
        "app",
        "automap_base",
        "Base",
        "prepare",
        "db",
        "engine",
        "reflect",
        "Base",
        "classes",
        "sample_metadata",
        "Base",
        "classes",
        "samples",
        "app",
        "route",
        "render_template",
        "app",
        "route",
        "db",
        "session",
        "query",
        "Samples",
        "statement",
        "pd",
        "read_sql_query",
        "stmt",
        "db",
        "session",
        "bind",
        "jsonify",
        "df",
        "columns",
        "app",
        "route",
        "sample",
        "Samples_Metadata",
        "sample",
        "Samples_Metadata",
        "ETHNICITY",
        "Samples_Metadata",
        "GENDER",
        "Samples_Metadata",
        "AGE",
        "Samples_Metadata",
        "LOCATION",
        "Samples_Metadata",
        "BBTYPE",
        "Samples_Metadata",
        "WFREQ",
        "db",
        "session",
        "query",
        "sel",
        "Samples_Metadata",
        "sample",
        "sample",
        "all",
        "result",
        "results",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "result",
        "jsonify",
        "sample_metadata",
        "app",
        "route",
        "sample",
        "db",
        "session",
        "query",
        "Samples",
        "statement",
        "pd",
        "read_sql_query",
        "stmt",
        "db",
        "session",
        "bind",
        "df",
        "loc",
        "df",
        "sample",
        "sample",
        "sample_data",
        "sort_values",
        "by",
        "sample",
        "ascending",
        "inplace",
        "sample_data",
        "otu_id",
        "values",
        "tolist",
        "sample_data",
        "sample",
        "values",
        "tolist",
        "sample_data",
        "otu_label",
        "tolist",
        "jsonify",
        "data",
        "app",
        "run"
    ],
    "literals": [
        "\"SQLALCHEMY_DATABASE_URI\"",
        "\"sqlite:///db/bellybutton.sqlite\"",
        "\"/\"",
        "\"index.html\"",
        "\"/names\"",
        "\"/metadata/<sample>\"",
        "\"sample\"",
        "\"ETHNICITY\"",
        "\"GENDER\"",
        "\"AGE\"",
        "\"LOCATION\"",
        "\"BBTYPE\"",
        "\"WFREQ\"",
        "\"/samples/<sample>\"",
        "\"otu_id\"",
        "\"otu_label\"",
        "\"otu_ids\"",
        "\"sample_values\"",
        "\"otu_labels\"",
        "\"__main__\""
    ],
    "variables": [
        "app",
        "db",
        "Base",
        "Samples_Metadata",
        "Samples",
        "stmt",
        "df",
        "sel",
        "results",
        "sample_metadata",
        "sample_metadata",
        "sample_metadata",
        "sample_metadata",
        "sample_metadata",
        "sample_metadata",
        "sample_metadata",
        "sample_metadata",
        "stmt",
        "df",
        "sample_data",
        "data"
    ],
    "comments": [
        "Database Setup",
        "reflect an existing database into new model",
        "reflect  tables",
        "Save references to each table",
        "Use Pandas to perform  sql query",
        "Return a list of  column names (sample names)",
        "Create a dictionary entry for each row of metadata info",
        "Filter  data based on  sample number and",
        "only keep rows with values above 1",
        "Sort by sample",
        "Format  data to send as json"
    ],
    "docstrings": [
        "\"\"\"Return  homepage.\"\"\"",
        "\"\"\"Return list of sample names.\"\"\"",
        "\"\"\"Return  MetaData for given sample.\"\"\"",
        "\"\"\"Return `otu_ids`, `otu_labels`,and `sample_values`.\"\"\""
    ],
    "functions": [
        "index",
        "names",
        "sample_metadata",
        "samples"
    ],
    "classes": []
}