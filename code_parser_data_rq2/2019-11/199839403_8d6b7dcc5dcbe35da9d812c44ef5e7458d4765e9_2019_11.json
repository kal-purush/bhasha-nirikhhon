{
    "identifiers": [
        "com",
        "xiaojihua",
        "test",
        "oracle",
        "jdbc",
        "OracleCallableStatement",
        "oracle",
        "jdbc",
        "OracleTypes",
        "org",
        "junit",
        "After",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "java",
        "sql",
        "driver",
        "url",
        "user",
        "password",
        "connection",
        "statement",
        "rs",
        "cs",
        "Before",
        "Class",
        "forName",
        "driver",
        "connection",
        "DriverManager",
        "getConnection",
        "url",
        "user",
        "password",
        "statement",
        "connection",
        "createStatement",
        "After",
        "rs",
        "rs",
        "close",
        "statement",
        "statement",
        "close",
        "connection",
        "connection",
        "close",
        "Test",
        "rs",
        "statement",
        "executeQuery",
        "rs",
        "next",
        "rs",
        "getString",
        "rs",
        "getString",
        "Test",
        "cs",
        "connection",
        "prepareCall",
        "rs",
        "cs",
        "executeQuery",
        "rs",
        "next",
        "rs",
        "getString",
        "rs",
        "getString",
        "Test",
        "cs",
        "connection",
        "prepareCall",
        "cs",
        "setInt",
        "cs",
        "execute",
        "Test",
        "cs",
        "connection",
        "prepareCall",
        "cs",
        "setInt",
        "cs",
        "registerOutParameter",
        "OracleTypes",
        "CURSOR",
        "cs",
        "execute",
        "rs",
        "cs",
        "getCursor",
        "rs",
        "next",
        "rs",
        "getString",
        "rs",
        "getString",
        "Test",
        "cs",
        "connection",
        "prepareCall",
        "cs",
        "registerOutParameter",
        "OracleTypes",
        "VARCHAR",
        "cs",
        "setInt",
        "cs",
        "execute",
        "dname",
        "cs",
        "getString",
        "dname"
    ],
    "literals": [
        "\"oracle.jdbc.driver.OracleDriver\"",
        "\"jdbc:oracle:thin:@192.168.237.128:1521:orcl\"",
        "\"scott\"",
        "\"tiger\"",
        "\"select * from emp\"",
        "\"员工编号:\"",
        "\",员工姓名:\"",
        "\"ename\"",
        "\"select * from emp\"",
        "\"员工姓名：\"",
        "\",员工编号：\"",
        "\"empno\"",
        "\"{call pro_add_sal(?)}\"",
        "\"{call pro_emp_list(?,?)}\"",
        "\"员工编号：\"",
        "\",员工名称：\"",
        "\"ename\"",
        "\"{? = call fun_emp_dname(?)}\""
    ],
    "variables": [
        "connection",
        "statement",
        "rs",
        "cs"
    ],
    "comments": [
        "1、加载驱动",
        "2、获取链接",
        "3、获取sql执行对象",
        "链接oracle数据库查询员工信息",
        "普通方式",
        "4、执行sql语句，并且获取结果集(只有查询有结果集,其他都是int返回值)",
        "5、处理结果集",
        "6、关闭链接",
        "3、获取prepareCall，并执行sql语句",
        "4、处理结果集",
        "5、关闭链接",
        "没有返回值直接执行一次就行",
        "调用存储函数需要使用{}",
        "注册输出参数，也就是返回值",
        "设置输入参数",
        "获取输出参数"
    ],
    "docstrings": [
        "/1、加载驱动\n        Class.forName(driver);\n        //2、获取链接\n        Connection connection = DriverManager.getConnection(url, user, password);\n        //3、获取sql执行对象\n        Statement statement = connection.createStatement();",
        "s.close();;\n        statement.close();\n        connection.close();",
        "* 通过prepareCall方式，执行sql语句并且处理结果集\n     * prepareCall不仅可以执行普通的sql语句，也可以执行存储过程和函数\n     * @throws ClassNotFoundException\n     * @throws SQLException",
        "/1、加载驱动\n        Class.forName(driver);\n        //2、获取链接\n        Connection connection = DriverManager.getConnection(url,user,password);",
        "s.close();\n        cs.close();\n        connection.close();",
        "* 调用pro_add_sal存储函数",
        "* 调用pro_emp_list存储过程，包含输入和输出函数\n     * @throws SQLException",
        "* 注册输出函数，这里注册的是一个游标类型\n         * 如果是其他的String或者是int可以使用\n         * OracleTypes的其他类型",
        "* 获取输出参数。\n         * 这里需要获取Cursor类型的，需要将CallableStatement强转为OracleCallableStatement\n         * 其他类型的视情况而定，但是都是通过cs.get...的方法来获取输出",
        "* 调用存储方法\n     * @throws SQLException"
    ],
    "functions": [
        "init",
        "closeAll",
        "testConnection",
        "testPrepareCall",
        "testCallProcedureAddSal",
        "testCallProcedureEmpList",
        "testCallFunctionFunEmpDname"
    ],
    "classes": [
        "OracleTest"
    ]
}