{
    "identifiers": [
        "geometry",
        "geometry",
        "image",
        "image",
        "qa",
        "cloudShadowBitMask",
        "qa",
        "cloudsBitMask",
        "image",
        "mask",
        "image",
        "image",
        "image",
        "image",
        "image",
        "image",
        "time_start",
        "image",
        "image",
        "image",
        "image",
        "ee",
        "geometry",
        "ee",
        "rmCloud",
        "scaleImage",
        "NDVI",
        "l8Col",
        "l8Col",
        "geometry",
        "ee",
        "srtm",
        "dem",
        "dem",
        "dem",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "l8Col",
        "NDWI",
        "BSI",
        "Albedo",
        "ESA2015urban",
        "ESA2015urban",
        "geometry",
        "ee",
        "ee",
        "dataset",
        "ee",
        "geometry",
        "l8Col",
        "elevation",
        "slope",
        "aspect",
        "NDWI",
        "FVC",
        "MSAVI",
        "Albedo",
        "BSI",
        "TGSI",
        "LST",
        "bands",
        "geometry",
        "l8ColCart",
        "NDWI",
        "CloudMask",
        "sandPer",
        "geometry",
        "l8ColCart",
        "sandPer",
        "bands",
        "point",
        "ee",
        "totalGeo",
        "trainGeoPoi",
        "ee",
        "PointMesLay",
        "trainGeoPoi",
        "pDataList",
        "pDataList",
        "datas",
        "datas",
        "i",
        "datas",
        "i",
        "dateList",
        "ee",
        "i",
        "indexList",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "ee",
        "datas",
        "i",
        "indexList",
        "ui",
        "ee",
        "indexList",
        "ee",
        "dateList",
        "bandsCSV",
        "chart",
        "trainpoint120",
        "trainpoint120_2015",
        "trainpoint120",
        "ee",
        "trainpoint120",
        "ee",
        "sample_validate",
        "l8ColCart",
        "sample_training",
        "l8ColCart",
        "sample_validate",
        "l8ColCart",
        "l8ColCart",
        "l8ColCart",
        "ee",
        "DTstring",
        "classifier",
        "validation",
        "classifier",
        "validated",
        "TeAccuracy",
        "TeAccuracy",
        "TeAccuracy",
        "TeAccuracy",
        "ee",
        "ee",
        "require",
        "legend",
        "visParamFVC",
        "legend",
        "legendFVC"
    ],
    "literals": [
        "\"SATELLITE\"",
        "\"black\"",
        "'geometry'",
        "\"pixel_qa\"",
        "\"system:time_start\"",
        "\"system:time_start\"",
        "\"B5\"",
        "\"B4\"",
        "\"NDVI\"",
        "\"LANDSAT/LC08/C01/T1_SR\"",
        "\"2015-02-01\"",
        "\"2015-9-30\"",
        "\"CLOUD_COVER\"",
        "\"NDVI\"",
        "\"elevation\"",
        "\"slope\"",
        "\"aspect\"",
        "\"B3\"",
        "\"B5\"",
        "\"NDWI\"",
        "'(NDVI-0.078)/0.922'",
        "'NDVI'",
        "'FVC'",
        "'(2*NIR+1-sqrt((2*NIR+1)*(2*NIR+1)-8*(NIR-RED)))/2'",
        "'B4'",
        "'B5'",
        "'MSAVI'",
        "'0.356*Blue+0.13*Red+0.373*NIR+0.085*SWIR1+0.072*SWIR2-0.0018'",
        "'B2'",
        "'B4'",
        "'B5'",
        "'B6'",
        "'B7'",
        "'Albedo'",
        "'(100 * ((SWIR + Red) - (NIR + Blue))/((SWIR + Red) + (NIR + Blue))) + 100'",
        "'B2'",
        "'B4'",
        "'B5'",
        "'B6'",
        "'BSI'",
        "'(Red-Blue)/(Red+Blue+Green)'",
        "'B1'",
        "'B2'",
        "'B3'",
        "'TGSI'",
        "\"NDVI\"",
        "'MODIS/006/MOD11A2'",
        "'2015-01-01'",
        "'2015-12-31'",
        "'LST_Day_1km'",
        "\"NDVI\"",
        "\"SLOPE\"",
        "\"ELEVATION\"",
        "\"ASPECT\"",
        "\"NDWI\"",
        "\"FVC\"",
        "\"MSAVI\"",
        "\"Albedo\"",
        "\"BSI\"",
        "\"TGSI\"",
        "\"LST\"",
        "\"ELEVATION\"",
        "\"SLOPE\"",
        "\"ASPECT\"",
        "\"NDWI\"",
        "\"FVC\"",
        "\"MSAVI\"",
        "\"Albedo\"",
        "\"BSI\"",
        "'TGSI'",
        "\"LST\"",
        "\"NDVI\"",
        "\"SLOPE\"",
        "\"ELEVATION\"",
        "\"NDWI\"",
        "\"FVC\"",
        "\"MSAVI\"",
        "\"Albedo\"",
        "\"BSI\"",
        "\"sandPer\"",
        "'b0'",
        "\"sandPer\"",
        "\"longitude\"",
        "\"latitude\"",
        "\"NDVI\"",
        "\"SLOPE\"",
        "\"ELEVATION\"",
        "\"NDWI\"",
        "\"FVC\"",
        "\"MSAVI\"",
        "\"Albedo\"",
        "\"BSI\"",
        "\"sandPer\"",
        "\"trainGeoPoi\"",
        "\"pDataList\"",
        "\"datas is\"",
        "\"LineChart\"",
        "\"Indexs List\"",
        "\"Index Value\"",
        "\"Point Index\"",
        "\"chart\"",
        "'random'",
        "\"random\"",
        "\"random\"",
        "\"sample_validate\"",
        "\"type\"",
        "\"type\"",
        "'3.53*NDVI-Albedo'",
        "\"NDVI\"",
        "\"Albedo\"",
        "\"type\"",
        "'1) root 9999 9999 9999'",
        "'2) type<0.618 9999 9999 0 *'",
        "'3) type>=0.618 9999 9999 9999'",
        "'6) type<1.498 9999 9999 1 *'",
        "'7) type>=1.498 9999 9999 9999'",
        "'14) type<2.269 9999 9999 2 *'",
        "'15) type>=2.269 9999 9999 9999'",
        "'30) type<2.986 9999 9999 3 *'",
        "'31) type>=2.986 9999 9999 4 *'",
        "\"\\n\"",
        "\"type\"",
        "\"classification\"",
        "'B5'",
        "'B4'",
        "'B3'",
        "'ff0200'",
        "'ff9900'",
        "'ffff00'",
        "'80d600'",
        "'2cab0b'",
        "\"OpenLandMap/SOL/SOL_SAND-WFRACTION_USDA-3A1A1A_M/v02\"",
        "\"FFFFFF\"",
        "\"CE7E45\"",
        "\"DF923D\"",
        "\"F1B555\"",
        "\"FCD163\"",
        "\"99B718\"",
        "\"74A901\"",
        "\"66A000\"",
        "\"529400\"",
        "\"3E8601\"",
        "\"207401\"",
        "\"056201\"",
        "\"004C00\"",
        "\"023B01\"",
        "\"012E01\"",
        "\"011D01\"",
        "\"011301\"",
        "'users/seibertli602/public:js/legend.js'",
        "'2000 FVC'"
    ],
    "variables": [
        "cloudShadowBitMask",
        "cloudsBitMask",
        "qa",
        "mask",
        "time_start",
        "l8Col",
        "dem",
        "elevation",
        "slope",
        "aspect",
        "NDWI",
        "FVC",
        "MSAVI",
        "Albedo",
        "BSI",
        "TGSI",
        "CloudMask",
        "dataset",
        "LST",
        "bands",
        "l8ColCart",
        "l8ColCart",
        "bands",
        "sandPer",
        "PointMesLay",
        "bandsCSV",
        "totalGeo",
        "trainGeoPoi",
        "pDataList",
        "dateList",
        "indexList",
        "i",
        "chart",
        "sample_training",
        "sample_validate",
        "training",
        "validation",
        "DTstring",
        "classifier",
        "classified",
        "validated",
        "TeAccuracy",
        "visParamsl8Col",
        "visParamclassified",
        "geometry",
        "sandPer",
        "visParamFVC",
        "legend",
        "legendFVC"
    ],
    "comments": [
        "Landsat8 SR数据去云",
        "缩放",
        "NDVI",
        "calculate index value",
        "start===================================================================================================",
        "DEM",
        "NDWI",
        "FVC",
        "calcute FCV, based on 5% confidence interval of ndvi histogram,and expression\n((NDVI-NDVIsoil)/(NDVIveg-NDVIsoil))\nfrom : https://max.book118.com/html/2017/0602/111188929.shtm",
        "draw ndvi histogram",
        "var chart = ui.Chart.image.histogram({",
        "image: l8Col.select(\"NDVI\"),",
        "region: geometry,",
        "scale: 1000",
        "})",
        ".setOptions({",
        "title: \"NDVI Histogram\",",
        "hAxis: {title: \"ndvi\"},",
        "vAxis: {title: \"count\"}",
        "});",
        "print(chart);",
        "//MSAVI",
        "/**",
        "expression:MSAVI=(2*NIR+1-((2*NIR+1)^2-8*(NIR-RED))^1/2)/2",
        "//Albedo",
        "/**",
        "expression:Albedo=0.356*Blue+0.13*Red+0.373*NIR+0.085*SWIR1+0.072*SWIR2-0.0018",
        "//BSI",
        "/**",
        "expression:BSI=(100 * ((SWIR + Red) - (NIR + Blue))/((SWIR + Red) + (NIR + Blue))) + 100",
        "//TGSI",
        "/**",
        "expression:TGSI = (Red-Blue)/(Red+Blue+Green)",
        "//cloud or snow",
        "/**extract cloud layer*/",
        "var CloudMask = FVC.lt(0).or(l8Col.select(\"NDVI\").lte(0.23)).and(BSI.lt(95));",
        "var CloudMask = l8Col.select(\"NDVI\").lte(0.23).and(NDWI.lt(0.1).and(BSI.lt(97)));",
        "(NDWI.lt(0.1).and(BSI.lt(97)))",
        "urban",
        "extract urban",
        "end=====================================================================================================",
        "var bands = [",
        "'B5', 'B4', 'B3',\"NDVI\",\"SLOPE\", \"ELEVATION\",\"ASPECT\",\"NDWI\",",
        "\"FVC\",\"MSAVI\",\"Albedo\",\"BSI\",\"TGSI\",\"LST\"",
        "];",
        "Print train point message",
        "start===================================================================================================",
        "Layer process about Point",
        "extract partial point",
        "var totalGeo = trainpoint120.geometry().coordinates();",
        "print(trainGeoPoi)",
        "getRegion",
        "end=====================================================================================================",
        "classified",
        "start===================================================================================================",
        "print(\"sample_training\", sample_training);",
        "生成监督分类训练使用的样本数据",
        "生成监督分类验证使用的样本数据",
        "print(validation)",
        "//Classifier",
        "//初始化分类器cart",
        "var classifier = ee.Classifier.cart().train({",
        "features: training,",
        "classProperty: \"type\",",
        "inputProperties: bands",
        "});",
        "//Make a Random Forest classifier and train it.",
        "https://geohackweek.github.io/GoogleEarthEngine/05-classify-imagery/",
        "var classifier = ee.Classifier.randomForest().train({",
        "features: training,",
        "classProperty: 'type',",
        "inputProperties: bands",
        "});",
        "SVM",
        "var classifier = ee.Classifier.svm().train({",
        "features: training,",
        "classProperty: 'type',",
        "inputProperties: bands",
        "});",
        "ALbedo-NDVI classification:DDI",
        "var DDItraining = l8ColCart.sample({",
        "region: geometry,",
        "scale: 30,",
        "numPixels: 1000",
        "});",
        "var t = DDItraining.select(['Albedo',\"NDVI\"])",
        "var Albedo = t.reduceColumns(ee.Reducer.toList(), [\"Albedo\"]).get(\"list\")",
        "var NDVI = t.reduceColumns(ee.Reducer.toList(), [\"NDVI\"]).get(\"list\")",
        "var chart = ui.Chart.array.values({",
        "array: Albedo,",
        "axis:0,",
        "xLabels: NDVI",
        "})",
        ".setSeriesNames([\"value\"])",
        ".setOptions({",
        "hAxis: {title: \"NDVI\" },",
        "vAxis: {title: \"Albedo\" },",
        "pointSize: 1,",
        "legend: 'none'",
        "});",
        "print(chart);",
        "var arrList = ee.List(NDVI).zip(ee.List(Albedo));",
        "Export.table.toDrive({",
        "collection:t,",
        "description: \"l8TrainConf\",",
        "folder:\"training02\",",
        "fileFormat: \"CSV\"",
        "});",
        "print(arrList)",
        "var lf = arrList.reduce(ee.Reducer.linearFit());",
        "print(lf);",
        "//DDI",
        "print(\"classifier\",classifier)",
        "影像数据调用classify利用训练数据训练得到分类结果",
        "ecisionTree  classifier",
        "other classifier",
        "var classified = l8ColCart.classify(classifier);",
        "// //训练结果的混淆矩阵",
        "var TrAccuracy = classifier.confusionMatrix();",
        "//导出训练精度结果CSV",
        "Export.table.toDrive({",
        "collection: ee.FeatureCollection([",
        "ee.Feature(null, {",
        "matrix: TrAccuracy.array(),",
        "kappa: TrAccuracy.kappa(),",
        "accuracy: TrAccuracy.accuracy()",
        "}",
        ")]),",
        "description: \"l8TrainConf\",",
        "folder:\"training01\",",
        "fileFormat: \"CSV\"",
        "});",
        "验证数据集合调用classify进行验证分析得到分类验证结果",
        "print(\"validated\",validated)",
        "//验证结果的混淆矩阵",
        "print(testAccuracy)",
        "导出验证精度结果CSV",
        "Export.table.toDrive({",
        "collection: ee.FeatureCollection([",
        "ee.Feature(null, {",
        "matrix: TeAccuracy.array(),",
        "kappa: TeAccuracy.kappa(),",
        "accuracy: TeAccuracy.accuracy()",
        "}",
        ")]),",
        "description: \"2015\",",
        "folder:\"tr\",",
        "fileFormat: \"CSV\"",
        "});",
        "var resultImg = classified.toByte();",
        "resultImg = resultImg.remap([0,1,2,3,4], [1,2,3,4,5]).updateMask(ESA2015urban);",
        "end===================================================================================================",
        "Export",
        "start=================================================================================================",
        "//Raster",
        "Export.image.toAsset({",
        "image: l5_7ImageCart,",
        "description: 'Asset-l8Classifiedmap',",
        "assetId: \"geometry2000img\",",
        "region: geometry,",
        "scale:30,",
        "crs: \"EPSG:4326\",",
        "maxPixels: 1e13",
        "});",
        "Export.image.toDrive({",
        "image: resultImg, // 要下载的影像",
        "description: \"img2015\", // 下载任务描述，也是文件的默认名称",
        "folder: 'geometry', // 选择要下载到云盘的哪个文件夹",
        "region: geometry, // 裁剪区域",
        "scale: 30, // 分辨率，",
        "crs:\"EPSG:4326\",",
        "maxPixels: 1e13 // 下载数据的最大像元数",
        "});",
        "end===================================================================================================",
        "color: #0b4a8b",
        "displayProperties: [\n      {\n        \"type\": \"rectangle\"\n      }\n    ]",
        "Map.addLayer(resultImg, visParamclassified, \"resultImg\");",
        "Map.addLayer(l8ColCart,visParamsl8Col,\"l8col\")",
        "Map.addLayer(CloudMask,{},\"CloudMask\")",
        "Map.addLayer(PointMesLay,{},\"PointMesLay\",false)",
        "var confusionPoint = geometry",
        "Legend",
        "Create a panel to hold title,legend components.\nCreates a color bar thumbnail image for use in legend from the given color"
    ],
    "docstrings": [
        "* Using landsat8 data, extract indexes and study certain geographical phenomena\n * And because of the lack of necessary data, the script cannot run successfully directly\n * \n * Saibo Li\n * Update 20191119\n * \n * ------------------------------\n * 1、It is recommended to refer to the algorithm in the script. \n * The data in the script is test data. \n * It is recommended not to use the direct running results for other purposes.\n * \n * 2、Lack of relevant data(trainpoint* and so on)",
        "*/",
        "*/",
        "*/",
        "*/"
    ],
    "functions": [
        "rmCloud",
        "scaleImage",
        "NDVI"
    ],
    "classes": []
}