{
    "identifiers": [
        "X_train",
        "y_train",
        "sklearn",
        "utils",
        "resample",
        "y",
        "name",
        "pd",
        "concat",
        "X_train",
        "y_train",
        "axis",
        "np",
        "inf",
        "X",
        "target_column_name",
        "value_counts",
        "i",
        "len",
        "values",
        "i",
        "values",
        "index",
        "i",
        "values",
        "values",
        "index",
        "i",
        "values",
        "max",
        "values",
        "min",
        "values",
        "loc",
        "values",
        "highest_value",
        "index",
        "values",
        "loc",
        "values",
        "lowest_value",
        "index",
        "highest_target",
        "highest_value",
        "lowest_target",
        "lowest_value",
        "X",
        "loc",
        "X",
        "target_column_name",
        "highest_target",
        "X",
        "loc",
        "X",
        "target_column_name",
        "lowest_target",
        "resample",
        "minority",
        "replace",
        "n_samples",
        "len",
        "majority",
        "random_state",
        "pd",
        "concat",
        "majority",
        "minority_upsampled",
        "upsampled",
        "target_column_name",
        "upsampled",
        "drop",
        "target_column_name",
        "axis",
        "upsampled",
        "target_column_name",
        "value_counts",
        "values_after",
        "max",
        "values_after",
        "min",
        "values",
        "loc",
        "values",
        "highest_value",
        "index",
        "values",
        "loc",
        "values",
        "lowest_value",
        "index",
        "highest_target_after",
        "highest_value_after",
        "lowest_target_after",
        "lowest_value_after",
        "X_train",
        "y_train"
    ],
    "literals": [
        "'======================================================================================='",
        "'Here is a count of the unique target values in the TRAINING data set BEFORE upsampling.'",
        "'======================================================================================='",
        "'Index      Target | Count'",
        "'        '",
        "'     |'",
        "'==================================================================================='",
        "'Here is the highest and lowest value in the count.'",
        "'==================================================================================='",
        "'           Target | Count'",
        "'Highest:  '",
        "'     |'",
        "'Lowest:   '",
        "'     |'",
        "'======================================================================================'",
        "'Here is a count of the unique target values in the TRAINING data set AFTER upsampling.'",
        "'======================================================================================'",
        "'           Target | Count'",
        "'Highest:  '",
        "'     |'",
        "'Lowest:   '",
        "'     |'"
    ],
    "variables": [
        "target_column_name",
        "X",
        "values_dict",
        "highest_value",
        "lowest_value",
        "values",
        "highest_value",
        "lowest_value",
        "highest_target",
        "lowest_target",
        "majority",
        "minority",
        "minority_upsampled",
        "upsampled",
        "y_train",
        "X_train",
        "values_after",
        "highest_value_after",
        "lowest_value_after",
        "highest_target_after",
        "lowest_target_after"
    ],
    "comments": [
        "Obtain target column name",
        "concatenate our training data back together",
        "Create a dictionary for the target values and the value counts",
        "Set the value for the higher count",
        "Set the value for the lower count",
        "Put the value counts in a series.",
        "Find the highest and lowest values",
        "upsample the training data ONLY......",
        "separate minority and majority classes",
        "upsample minority",
        "sample with replacement",
        "match number in majority class",
        "reproducible results",
        "combine majority and upsampled minority",
        "split the data back into target and feature data",
        "calculate the number of each category in the upsampled amount to print",
        "Put the value counts in a series.",
        "Find the highest and lowest values",
        "check new class counts"
    ],
    "docstrings": [],
    "functions": [
        "upsample_data"
    ],
    "classes": []
}