{
    "identifiers": [
        "defer",
        "Observable",
        "finalize",
        "tap",
        "addImg",
        "svg",
        "defer",
        "elem",
        "elem",
        "elem",
        "svg",
        "elem",
        "elem",
        "animationTime",
        "t",
        "easeLinear",
        "t",
        "easeOutBounce",
        "t",
        "tap",
        "elem",
        "x",
        "elem",
        "y",
        "finalize",
        "elem",
        "duration",
        "Observable",
        "observer",
        "animate",
        "id",
        "requestAnimationFrame",
        "start",
        "diff",
        "duration",
        "observer",
        "diff",
        "duration",
        "observer",
        "observer",
        "animate",
        "animate",
        "id",
        "cancelAnimationFrame",
        "id",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "x",
        "x"
    ],
    "literals": [
        "'rxjs'",
        "'rxjs/operators'",
        "'http://www.w3.org/2000/svg'",
        "'image'",
        "'height'",
        "'150'",
        "'width'",
        "'150'",
        "'http://www.w3.org/1999/xlink'",
        "'href'",
        "'../../../assets/kitten.jpg'",
        "'r'",
        "'20'",
        "'x'",
        "'y'"
    ],
    "variables": [
        "addImg",
        "elem",
        "start",
        "id",
        "animate",
        "diff"
    ],
    "comments": [
        "Event emitted when image is animated",
        "completion time ratio between 0 and 1",
        "x pixel position",
        "y pixel position",
        "Animate the image",
        "const elem = document.createElementNS('http://www.w3.org/2000/svg', 'circle');",
        "elem.style = 'fill: red; stroke: none;';",
        "width of svg canvas (see mapping.component)",
        "height of svg canvas (see mapping.component)",
        "console.log(`x: ${x}, y: ${y}`);",
        "For circles",
        "elem.setAttribute('x', x.toString());",
        "elem.setAttribute('y', (y - 100).toString());",
        "For images"
    ],
    "docstrings": [
        "* Observable of animated image as it drops and bounces\n * @param svg The SVG image to which the animated image will be appended.\n * @returns object with data about the most recent frame of the animation"
    ],
    "functions": [
        "animationTime",
        "easeOutBounce",
        "easeLinear"
    ],
    "classes": []
}