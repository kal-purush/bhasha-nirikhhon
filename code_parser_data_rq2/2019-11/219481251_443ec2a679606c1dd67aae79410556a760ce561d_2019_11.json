{
    "identifiers": [
        "Server",
        "Eventhub",
        "Server",
        "Eventhub",
        "testServer",
        "testServer",
        "ws",
        "wsClient",
        "ws",
        "ws",
        "msg",
        "wsResponseResolve",
        "wsResponseResolve",
        "msg",
        "wsResponseResolve",
        "afterAll",
        "testServer",
        "resolve",
        "reject",
        "wsResponseResolve",
        "resolve",
        "resolve",
        "reject",
        "subscribeCallbackResolve",
        "resolve",
        "test",
        "eventhub",
        "err",
        "fail",
        "err",
        "test",
        "expect",
        "eventhub",
        "msg",
        "subscribeCallbackResolve",
        "waitForWSResponse",
        "expect",
        "resp",
        "test",
        "expect",
        "eventhub",
        "test",
        "wsClient",
        "waitForSubscribeCallback",
        "expect",
        "resp",
        "test",
        "eventhub",
        "waitForWSResponse",
        "expect",
        "resp",
        "test",
        "eventhub",
        "waitForWSResponse",
        "expect",
        "resp",
        "test",
        "expect",
        "eventhub",
        "test",
        "eventhub",
        "waitForWSResponse",
        "expect",
        "resp",
        "test",
        "expect",
        "eventhub",
        "msg",
        "expect",
        "eventhub",
        "msg",
        "expect",
        "eventhub",
        "msg",
        "expect",
        "eventhub",
        "msg",
        "eventhub",
        "expect",
        "eventhub",
        "expect",
        "eventhub",
        "expect",
        "eventhub",
        "expect",
        "eventhub"
    ],
    "literals": [
        "'ws'",
        "'../src/eventhub'",
        "ws://127.0.0.1:${testServer.options.port}",
        "\"\"",
        "'connection'",
        "'message'",
        "'That we can connect'",
        "'Test that subscribe() sends correct RPC request to server'",
        "\"testTopic\"",
        "\"2.0\"",
        "\"subscribe\"",
        "\"testTopic\"",
        "'Test that isSubscribe is true for subscribed topic'",
        "\"testTopic\"",
        "'Expect subscribe callback to be called when we recieve a message'",
        "'{\"id\":1,\"jsonrpc\":\"2.0\",\"result\":{\"id\":\"1573183666822-0\",\"message\":\"Test message\",\"topic\":\"test1/test\"}}'",
        "'Test that publish() sends correct RPC request'",
        "\"testTopic\"",
        "\"Test message\"",
        "\"2.0\"",
        "\"publish\"",
        "\"testTopic\"",
        "\"Test message\"",
        "'Test that unsubscribe() sends correct RPC request'",
        "\"testTopic\"",
        "\"2.0\"",
        "\"unsubscribe\"",
        "\"testTopic\"",
        "'Test that isSubscribe is false after unsubscribe'",
        "\"testTopic\"",
        "'Test that unsubscribeAll() sends correct RPC request'",
        "\"2.0\"",
        "\"unsubscribeAll\"",
        "\"Test that unsubscribeAll unsubscribes all subscribed topics\"",
        "\"testTopic1\"",
        "\"testTopic2\"",
        "\"testTopic3\"",
        "\"testTopic4\"",
        "\"testTopic1\"",
        "\"testTopic2\"",
        "\"testTopic3\"",
        "\"testTopic4\""
    ],
    "variables": [
        "testServer",
        "eventhub",
        "wsResponseResolve",
        "subscribeCallbackResolve",
        "wsClient",
        "resp",
        "resp",
        "resp",
        "resp",
        "resp"
    ],
    "comments": [
        "Wait for a websocket response.",
        "Wait for subscription callback to be called."
    ],
    "docstrings": [],
    "functions": [
        "waitForWSResponse",
        "waitForSubscribeCallback"
    ],
    "classes": []
}