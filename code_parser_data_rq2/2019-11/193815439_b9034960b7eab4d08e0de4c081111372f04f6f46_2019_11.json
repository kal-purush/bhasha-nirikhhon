{
    "identifiers": [
        "kafka",
        "KafkaProducer",
        "bcc",
        "BPF",
        "pyroute2",
        "time",
        "sys",
        "ctypes",
        "KafkaProducer",
        "bootstrap_servers",
        "bootstrap_servers",
        "KafkaProducer",
        "data",
        "format",
        "data",
        "value",
        "zfill",
        "join",
        "data",
        "join",
        "data",
        "join",
        "data",
        "join",
        "data",
        "one",
        "two",
        "three",
        "four",
        "back",
        "hum_address",
        "len",
        "hum_address",
        "i",
        "length",
        "hum_address",
        "i",
        "dot",
        "append",
        "i",
        "i",
        "i",
        "len",
        "dot",
        "i",
        "frag",
        "append",
        "bin",
        "hum_address",
        "dot",
        "frag",
        "append",
        "bin",
        "hum_address",
        "dot",
        "i",
        "dot",
        "i",
        "i",
        "frag",
        "append",
        "bin",
        "hum_address",
        "dot",
        "i",
        "i",
        "len",
        "dot",
        "frag",
        "i",
        "frag",
        "i",
        "zfill",
        "i",
        "frag",
        "reverse",
        "i",
        "len",
        "dot",
        "binary_ver",
        "frag",
        "i",
        "i",
        "binary_ver",
        "output",
        "format",
        "sys",
        "argv",
        "format",
        "sys",
        "argv",
        "exit",
        "len",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "usage",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "len",
        "sys",
        "argv",
        "sys",
        "argv",
        "flags",
        "sys",
        "argv",
        "device",
        "flags",
        "BPF",
        "XDP",
        "mode",
        "BPF",
        "XDP",
        "BPF",
        "src_file",
        "_xdp_file",
        "cflags",
        "ret",
        "ctxtype",
        "maptype",
        "b",
        "load_func",
        "mode",
        "mode",
        "BPF",
        "XDP",
        "b",
        "attach_xdp",
        "device",
        "fn",
        "flags",
        "pyroute2",
        "IPRoute",
        "pyroute2",
        "IPDB",
        "nl",
        "ip",
        "ipdb",
        "interfaces",
        "device",
        "index",
        "ip",
        "tc",
        "idx",
        "ip",
        "tc",
        "idx",
        "fd",
        "fn",
        "fd",
        "name",
        "fn",
        "name",
        "parent",
        "classid",
        "direct_action",
        "b",
        "get_table",
        "b",
        "get_table",
        "k",
        "dropcnt",
        "keys",
        "dropcnt",
        "k",
        "value",
        "maptype",
        "dropcnt",
        "sum",
        "k",
        "value",
        "k",
        "value",
        "convert_ip_to_bin",
        "hash_addr",
        "items",
        "val",
        "val",
        "prev",
        "i",
        "val",
        "ip_addr",
        "delta",
        "contents",
        "producer",
        "send",
        "topicName",
        "contents",
        "time",
        "sleep",
        "mode",
        "BPF",
        "XDP",
        "b",
        "remove_xdp",
        "device",
        "flags",
        "ip",
        "tc",
        "idx",
        "ipdb",
        "release"
    ],
    "literals": [
        "'lcaolhost:9092'",
        "'localhost:9091'",
        "'localhost:9090'",
        "'xdp_kafka_topic'",
        "\"{0:b}\"",
        "''",
        "''",
        "''",
        "''",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "''",
        "\"Usage: {0} [-S] <ifdev>\"",
        "\"       -S: use skb mode\\n\"",
        "\"       -H: use hardware offload mode\\n\"",
        "\"e.g.: {0} eth0\\n\"",
        "\"xdp_dynamic_filtering.c\"",
        "\"percpu_array\"",
        "\"-S\"",
        "\"-H\"",
        "\"array\"",
        "\"XDP_PASS\"",
        "\"xdp_md\"",
        "\"TC_ACT_SHOT\"",
        "\"__sk_buff\"",
        "\"-w\"",
        "\"-DRETURNCODE=%s\"",
        "\"-DCTXTYPE=%s\"",
        "\"-DMAPTYPE=\\\"%s\\\"\"",
        "\"xdp_prog1\"",
        "\"add\"",
        "\"clsact\"",
        "\"add-filter\"",
        "\"bpf\"",
        "\":1\"",
        "\"ffff:fff2\"",
        "\"hash_addr\"",
        "\"dropcnt\"",
        "\"Printing drops per IP protocol-number, hit CTRL+C to stop\"",
        "\"array\"",
        "' '",
        "'\\n'",
        "\"del\"",
        "\"clsact\""
    ],
    "variables": [
        "bootstrap_servers",
        "topicName",
        "producer",
        "producer",
        "data",
        "one",
        "two",
        "three",
        "four",
        "back",
        "length",
        "dot",
        "frag",
        "i",
        "i",
        "i",
        "i",
        "i",
        "frag",
        "i",
        "frag",
        "i",
        "i",
        "i",
        "binary_ver",
        "binary_ver",
        "i",
        "output",
        "flags",
        "offload_device",
        "device",
        "device",
        "_xdp_file",
        "maptype",
        "maptype",
        "offload_device",
        "mode",
        "ret",
        "ctxtype",
        "ret",
        "ctxtype",
        "b",
        "fn",
        "ip",
        "ipdb",
        "idx",
        "hash_addr",
        "dropcnt",
        "prev",
        "val",
        "i",
        "ip_addr",
        "delta",
        "prev",
        "i",
        "contents",
        "ack"
    ],
    "comments": [
        "Licensed under the Apache License, Version 2.0 (the \"License\")",
        "converts machine friendly IP -> human friendly IP",
        "input is a machine friendly IP",
        "data = ''.join(str((int((data[0:4]),2))))",
        "0:4 - 1",
        "4:12 - 1",
        "12:20 - 168",
        "20:28",
        "converts human friendly IP -> machine friendly IP",
        "input is a human friendly IP",
        "save dot positions fo the human readable IP address",
        "save fragmented numbers of humanm readable IP addresses, each separated by a dot",
        "save dot positions",
        "fragment human readable IP address in between dots & switch them into binaries",
        "reverse the order of the frag list",
        "XDP_FLAGS_SKB_MODE",
        "XDP_FLAGS_HW_MODE",
        "mode = BPF.SCHED_CLS",
        "load BPF program",
        "ip_addr = str(convert_ip_to_bin((hash_addr.items()[0][1])))",
        "under while",
        "try:",
        "here",
        "print('\\n')",
        "",
        "time.sleep(1)",
        "except KeyboardInterrupt:",
        "print(\"Removing filter from device\")",
        "break;"
    ],
    "docstrings": [],
    "functions": [
        "convert_ip_to_bin",
        "convert_ip_to_machine",
        "usage"
    ],
    "classes": []
}