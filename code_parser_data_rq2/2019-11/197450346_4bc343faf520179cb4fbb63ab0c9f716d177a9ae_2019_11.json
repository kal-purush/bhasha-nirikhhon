{
    "identifiers": [
        "log",
        "convert",
        "WidgetDescription",
        "Actions",
        "WRITE_PV",
        "key",
        "key",
        "key",
        "inputProps",
        "ouptutProps",
        "bobMacrosToMacroMap",
        "inputProps",
        "outputProps",
        "inputProps",
        "outputProps",
        "inputProps",
        "outputProps",
        "key",
        "value",
        "bobColorsToColor",
        "color",
        "color",
        "color",
        "color",
        "e",
        "log",
        "log",
        "color",
        "bobBackgroundColor",
        "inputProps",
        "outputProps",
        "outputProps",
        "bobColorsToColor",
        "inputProps",
        "bobForegroundColor",
        "inputProps",
        "outputProps",
        "outputProps",
        "bobColorsToColor",
        "inputProps",
        "bobPrecisionToNumber",
        "inputProps",
        "outputProps",
        "outputProps",
        "inputProps",
        "e",
        "log",
        "inputProps",
        "bobVisibleToBoolen",
        "inputProps",
        "outputProps",
        "outputProps",
        "inputProps",
        "e",
        "log",
        "inputProps",
        "bobAvoidStyleProp",
        "inputProps",
        "outputProps",
        "bobActionToAction",
        "bobAction",
        "bobAction",
        "actionsToProcess",
        "bobAction",
        "actionsToProcess",
        "bobAction",
        "key",
        "WRITE_PV",
        "WRITE_PV",
        "actionsToProcess",
        "action",
        "log",
        "action",
        "availableActions",
        "action",
        "WRITE_PV",
        "processedActions",
        "WRITE_PV",
        "action",
        "action",
        "action",
        "processedActions",
        "bobHandleActions",
        "inputProps",
        "outputProps",
        "inputProps",
        "outputProps",
        "bobActionToAction",
        "inputProps",
        "bobChildToWidgetChild",
        "bobChild",
        "functionSubstitutions",
        "keySubstitutions",
        "key",
        "remainingProps",
        "key",
        "remainingProps",
        "functionSubstitutions",
        "functionSubstitutions",
        "key",
        "functionSubstitutions",
        "key",
        "remainingProps",
        "mappedProps",
        "keySubstitutions",
        "keySubstitutions",
        "key",
        "mappedProps",
        "keySubstitutions",
        "key",
        "value",
        "mappedProps",
        "key",
        "value",
        "_attributes",
        "_attributes",
        "x",
        "x",
        "y",
        "y",
        "height",
        "height",
        "width",
        "width",
        "mappedProps",
        "widget",
        "w",
        "bobChildToWidgetChild",
        "w",
        "functionSubstitutions",
        "keySubstitutions",
        "outputWidget",
        "convertBobToWidgetDescription",
        "bobInputString",
        "functionSubstitutions",
        "key",
        "inputProps",
        "ouptutProps",
        "keySubstitutions",
        "key",
        "convert",
        "bobInputString",
        "log",
        "compactJSON",
        "compactJSON",
        "bobChildToWidgetChild",
        "compactJSON",
        "functionSubstitutions",
        "keySubstitutions"
    ],
    "literals": [
        "\"loglevel\"",
        "\"xml-js\"",
        "\"../Positioning/positioning\"",
        "\"../../actions\"",
        "string",
        "string",
        "string",
        "\"_text\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "rgb( ${color._attributes.red},  ${color._attributes.green}, ${color._attributes.blue})",
        "Could not convert color object",
        "\"\"",
        "Could not convert precision of ${inputProps.precision} to a number",
        "Could not convert visible property ${inputProps.visible} to a number",
        "string",
        "string",
        "string",
        "string",
        "\"absolute\"",
        "${(x && x._text) || 0}px",
        "${(y && y._text) || 0}px",
        "${(height && height._text) || 0}px",
        "${(width && width._text) || 0}px",
        "string",
        "string",
        "string",
        "\"display\""
    ],
    "variables": [
        "bobMacrosToMacroMap",
        "key",
        "value",
        "bobColorsToColor",
        "bobBackgroundColor",
        "bobForegroundColor",
        "bobPrecisionToNumber",
        "bobVisibleToBoolen",
        "bobAvoidStyleProp",
        "bobActionToAction",
        "actionsToProcess",
        "availableActions",
        "processedActions",
        "bobHandleActions",
        "bobChildToWidgetChild",
        "bobChild",
        "mappedProps",
        "key",
        "value",
        "outputWidget",
        "convertBobToWidgetDescription",
        "compactJSON"
    ],
    "comments": [
        "File to hold functions which aid the conversion of bob files",
        "into our widget format",
        "Start with blank object",
        "Object of available actions",
        "eslint-disable-line @typescript-eslint/camelcase",
        "Turn into an array of Actions",
        "Convert a non-root widget from the bob file into a widget",
        "It is passed as a JS object now",
        "Extract useful props",
        "Map the remaining props",
        "Checks that there is a substitution map",
        "Use the function substitution",
        "Just substitute the key and extract from _text",
        "Just extract from text",
        "Check that the primary props were defined or use a default value",
        "Provide a raw xml file in the bob format for conversion",
        "Optionally provide a substition map for keys",
        "Convert it to a \"compact format\"",
        "Add display to top of JSON to be processed",
        "Assumes top level widget is always display - valid for XML files"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}