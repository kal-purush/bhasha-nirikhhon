{
    "identifiers": [
        "matplotlib",
        "matplotlib",
        "use",
        "os",
        "numpy",
        "np",
        "numpy",
        "lib",
        "recfunctions",
        "rfn",
        "unittest",
        "healpy",
        "hp",
        "rubin_sim",
        "data",
        "get_data_dir",
        "rubin_sim",
        "maf",
        "slicers",
        "HealpixSubsetSlicer",
        "size",
        "minval",
        "maxval",
        "ramin",
        "ramax",
        "np",
        "pi",
        "decmin",
        "np",
        "pi",
        "decmax",
        "np",
        "pi",
        "random",
        "np",
        "arange",
        "size",
        "dtype",
        "datavalues",
        "maxval",
        "minval",
        "datavalues",
        "max",
        "datavalues",
        "min",
        "datavalues",
        "minval",
        "np",
        "random",
        "RandomState",
        "random",
        "rng",
        "rand",
        "size",
        "np",
        "argsort",
        "randorder",
        "datavalues",
        "randind",
        "np",
        "array",
        "datavalues",
        "dtype",
        "data",
        "append",
        "datavalues",
        "np",
        "arange",
        "size",
        "dtype",
        "ra",
        "ramax",
        "ramin",
        "ra",
        "max",
        "ra",
        "min",
        "rng",
        "rand",
        "size",
        "np",
        "argsort",
        "randorder",
        "ra",
        "randind",
        "np",
        "array",
        "ra",
        "dtype",
        "data",
        "append",
        "ra",
        "np",
        "arange",
        "size",
        "dtype",
        "v",
        "np",
        "cos",
        "decmax",
        "np",
        "pi",
        "np",
        "cos",
        "decmin",
        "np",
        "pi",
        "v",
        "max",
        "v",
        "min",
        "v",
        "np",
        "cos",
        "decmin",
        "np",
        "pi",
        "np",
        "arccos",
        "v",
        "np",
        "pi",
        "rng",
        "rand",
        "size",
        "np",
        "argsort",
        "randorder",
        "dec",
        "randind",
        "np",
        "array",
        "dec",
        "dtype",
        "data",
        "append",
        "dec",
        "rng",
        "rand",
        "len",
        "dec",
        "np",
        "pi",
        "data",
        "append",
        "np",
        "array",
        "rot",
        "dtype",
        "np",
        "arange",
        "len",
        "dec",
        "data",
        "append",
        "np",
        "array",
        "mjd",
        "dtype",
        "rfn",
        "merge_arrays",
        "data",
        "flatten",
        "usemask",
        "data",
        "RA1",
        "Dec1",
        "RA2",
        "Dec2",
        "np",
        "cos",
        "Dec2",
        "np",
        "sin",
        "RA2",
        "RA1",
        "np",
        "cos",
        "Dec1",
        "np",
        "sin",
        "Dec2",
        "np",
        "sin",
        "Dec1",
        "np",
        "cos",
        "Dec2",
        "np",
        "cos",
        "RA2",
        "RA1",
        "np",
        "sqrt",
        "D1",
        "np",
        "sin",
        "Dec1",
        "np",
        "sin",
        "Dec2",
        "np",
        "cos",
        "Dec1",
        "np",
        "cos",
        "Dec2",
        "np",
        "cos",
        "RA2",
        "RA1",
        "np",
        "arctan2",
        "D1",
        "D2",
        "D",
        "unittest",
        "TestCase",
        "os",
        "path",
        "join",
        "get_data_dir",
        "np",
        "arange",
        "hp",
        "nside2npix",
        "nside",
        "idxs",
        "np",
        "where",
        "idxs",
        "idxs",
        "max",
        "HealpixSubsetSlicer",
        "nside",
        "nside",
        "hpid",
        "idxs",
        "verbose",
        "cameraFootprintFile",
        "cameraFootprintFile",
        "assertEqual",
        "testslicer",
        "slicerName",
        "testslicer",
        "__class__",
        "assertEqual",
        "testslicer",
        "slicerName",
        "unittest",
        "TestCase",
        "os",
        "path",
        "join",
        "get_data_dir",
        "HealpixSubsetSlicer",
        "nside",
        "nside",
        "hpid",
        "np",
        "arange",
        "verbose",
        "lonCol",
        "latCol",
        "cameraFootprintFile",
        "cameraFootprintFile",
        "makeDataValues",
        "size",
        "nvalues",
        "minval",
        "maxval",
        "ramin",
        "ramax",
        "np",
        "pi",
        "decmin",
        "np",
        "pi",
        "decmax",
        "random",
        "testslicer",
        "setupSlicer",
        "dv",
        "testslicer",
        "dv",
        "HealpixSubsetSlicer",
        "nside",
        "nside",
        "hpid",
        "np",
        "arange",
        "verbose",
        "lonCol",
        "latCol",
        "cameraFootprintFile",
        "cameraFootprintFile",
        "assertEqual",
        "testslicer",
        "testslicer2",
        "testslicer",
        "testslicer2",
        "HealpixSubsetSlicer",
        "nside",
        "nside",
        "hpid",
        "np",
        "arange",
        "verbose",
        "lonCol",
        "latCol",
        "cameraFootprintFile",
        "cameraFootprintFile",
        "assertNotEqual",
        "testslicer",
        "testslicer2",
        "testslicer",
        "testslicer2",
        "unittest",
        "TestCase",
        "os",
        "path",
        "join",
        "get_data_dir",
        "HealpixSubsetSlicer",
        "nside",
        "nside",
        "hpid",
        "np",
        "arange",
        "verbose",
        "lonCol",
        "latCol",
        "cameraFootprintFile",
        "cameraFootprintFile",
        "makeDataValues",
        "size",
        "nvalues",
        "minval",
        "maxval",
        "ramin",
        "ramax",
        "np",
        "pi",
        "decmin",
        "np",
        "pi",
        "decmax",
        "random",
        "testslicer",
        "setupSlicer",
        "dv",
        "testslicer",
        "hp",
        "nside2npix",
        "nside",
        "i",
        "s",
        "testslicer",
        "assertEqual",
        "i",
        "s",
        "s",
        "s",
        "assertGreaterEqual",
        "ra",
        "assertLessEqual",
        "ra",
        "np",
        "pi",
        "assertGreaterEqual",
        "dec",
        "np",
        "pi",
        "assertLessEqual",
        "dec",
        "np",
        "pi",
        "assertEqual",
        "i",
        "npix",
        "i",
        "s",
        "testslicer",
        "np",
        "testing",
        "assert_equal",
        "testslicer",
        "i",
        "s",
        "unittest",
        "TestCase",
        "os",
        "path",
        "join",
        "get_data_dir",
        "HealpixSubsetSlicer",
        "nside",
        "nside",
        "hpid",
        "np",
        "arange",
        "hp",
        "nside2npix",
        "nside",
        "verbose",
        "lonCol",
        "latCol",
        "latLonDeg",
        "radius",
        "radius",
        "useCamera",
        "makeDataValues",
        "size",
        "nvalues",
        "minval",
        "maxval",
        "ramin",
        "ramax",
        "np",
        "pi",
        "decmin",
        "np",
        "pi",
        "decmax",
        "random",
        "testslicer",
        "assertRaises",
        "NotImplementedError",
        "testslicer",
        "_sliceSimData",
        "testslicer",
        "setupSlicer",
        "dv",
        "s",
        "testslicer",
        "s",
        "s",
        "calcDist_vincenty",
        "ra",
        "dec",
        "dv",
        "dv",
        "np",
        "where",
        "distances",
        "np",
        "radians",
        "radius",
        "s",
        "assertEqual",
        "len",
        "sidxs",
        "len",
        "didxs",
        "len",
        "sidxs",
        "np",
        "sort",
        "didxs",
        "np",
        "sort",
        "sidxs",
        "np",
        "testing",
        "assert_equal",
        "dv",
        "didxs",
        "dv",
        "sidxs",
        "HealpixSubsetSlicer",
        "nside",
        "nside",
        "hpid",
        "np",
        "arange",
        "verbose",
        "lonCol",
        "latCol",
        "latLonDeg",
        "radius",
        "radius",
        "useCamera",
        "testslicer",
        "setupSlicer",
        "dv",
        "testslicer",
        "setupSlicer",
        "dv",
        "s",
        "testslicer",
        "s",
        "len",
        "s",
        "s",
        "assertTrue",
        "len",
        "testslicer",
        "islice",
        "unittest",
        "main"
    ],
    "literals": [
        "\"Agg\"",
        "'float'",
        "'testdata'",
        "'float'",
        "'float'",
        "'ra'",
        "'float'",
        "'float'",
        "'dec'",
        "'float'",
        "'rotSkyPos'",
        "'float'",
        "'observationStartMJD'",
        "'float'",
        "'tests'",
        "'fov_map.npz'",
        "'HealpixSubsetSlicer'",
        "'tests'",
        "'fov_map.npz'",
        "'ra'",
        "'dec'",
        "'ra'",
        "'dec'",
        "'ra'",
        "'dec'",
        "'tests'",
        "'fov_map.npz'",
        "'ra'",
        "'dec'",
        "'slicePoint'",
        "'sid'",
        "'slicePoint'",
        "'ra'",
        "'slicePoint'",
        "'dec'",
        "'tests'",
        "'fov_map.npz'",
        "'ra'",
        "'dec'",
        "'slicePoint'",
        "'ra'",
        "'slicePoint'",
        "'dec'",
        "'ra'",
        "'dec'",
        "'idxs'",
        "'testdata'",
        "'testdata'",
        "'ra'",
        "'dec'",
        "'slicePoint'",
        "'sid'",
        "'idxs'",
        "'slicePoint'",
        "'sid'",
        "'idxs'",
        "\"__main__\""
    ],
    "variables": [
        "data",
        "datavalues",
        "rng",
        "randorder",
        "randind",
        "datavalues",
        "datavalues",
        "ra",
        "randorder",
        "randind",
        "ra",
        "ra",
        "v",
        "dec",
        "randorder",
        "randind",
        "dec",
        "dec",
        "rot",
        "mjd",
        "data",
        "D1",
        "D1",
        "D2",
        "D",
        "cameraFootprintFile",
        "nside",
        "idxs",
        "idxs",
        "testslicer",
        "cameraFootprintFile",
        "nside",
        "testslicer",
        "nvalues",
        "dv",
        "testslicer",
        "testslicer2",
        "testslicer2",
        "cameraFootprintFile",
        "nside",
        "testslicer",
        "nvalues",
        "dv",
        "testslicer",
        "npix",
        "ra",
        "dec",
        "cameraFootprintFile",
        "nside",
        "radius",
        "testslicer",
        "nvalues",
        "dv",
        "testslicer",
        "ra",
        "dec",
        "distances",
        "didxs",
        "sidxs",
        "didxs",
        "sidxs",
        "testslicer",
        "islice"
    ],
    "comments": [
        "Generate data values min - max.",
        "Generate RA/Dec values equally spaces on sphere between ramin/max, decmin/max.",
        "Add in rotation angle",
        "Note that they are judged equal based on nsides (not on data in ra/dec spatial tree).",
        "npix would count starting at 1, while i counts starting at 0 ..",
        "so add one to check end point",
        "Note that this is really testing baseSpatialSlicer, as slicing is done there for healpix grid",
        "Test that slicing fails before setupSlicer",
        "Set up and test actual slicing.",
        "For points which return values when used with the full set of points (self.testslicer)",
        "there will be no data when used with the subset of points"
    ],
    "docstrings": [
        "\"\"\"Generate a simple array of numbers, evenly arranged between min/max,\n    in 1 dimensions (optionally sorted), together with RA/Dec values\n    for each data value.\"\"\"",
        "\"\"\"Calculates distance on a sphere using the Vincenty formula.\n    Give this function RA/Dec values in radians. Returns angular distance(s), in radians.\n    Note that since this is all numpy, you could input arrays of RA/Decs.\"\"\"",
        "\"\"\"Test instantiation of slicer sets slicer type as expected.\"\"\"",
        "\"\"\"Test that slicers are marked equal when appropriate, and unequal when appropriate.\"\"\"",
        "\"\"\"Test iteration goes through expected range and ra/dec are in expected range (radians).\"\"\"",
        "\"\"\"Test getting indexed value.\"\"\"",
        "\"\"\"Test slicing returns (all) data points which are within 'radius' of bin point.\"\"\""
    ],
    "functions": [
        "makeDataValues",
        "calcDist_vincenty",
        "setUp",
        "testSlicertype",
        "setUp",
        "tearDown",
        "testSlicerEquivalence",
        "setUp",
        "tearDown",
        "testIteration",
        "testGetItem",
        "setUp",
        "tearDown",
        "testSlicing",
        "testSubsetSlice"
    ],
    "classes": [
        "TestHealpixSubsetSlicerSetup",
        "TestHealpixSlicerEqual",
        "TestHealpixSlicerIteration",
        "TestHealpixSlicerSlicing"
    ]
}