{
    "identifiers": [
        "torch",
        "torchvision",
        "onnx",
        "onnx",
        "checker",
        "shape_inference",
        "pathlib",
        "Path",
        "fpath",
        "onnx",
        "load",
        "fpath",
        "checker",
        "check_model",
        "model_onnx",
        "shape_inference",
        "infer_shapes",
        "model_onnx",
        "checker",
        "check_model",
        "model_infered",
        "Path",
        "fpath",
        "fpath",
        "parent",
        "joinpath",
        "fpath",
        "stem",
        "fpath",
        "suffix",
        "onnx",
        "save",
        "model_infered",
        "saved_path",
        "torch",
        "randn",
        "torchvision",
        "models",
        "resnet101",
        "pretrained",
        "eval",
        "model",
        "requires_grad_",
        "torch",
        "onnx",
        "model",
        "dummy_input",
        "verbose",
        "opset_version",
        "opset",
        "input_names",
        "input_name",
        "output_names",
        "output_name",
        "input_name",
        "bs_name",
        "output_name",
        "bs_name",
        "torch",
        "onnx",
        "model",
        "dummy_input",
        "verbose",
        "opset_version",
        "opset",
        "input_names",
        "input_name",
        "output_names",
        "output_name",
        "dynamic_axes",
        "dynamic_axes",
        "infer_shape",
        "infer_shape"
    ],
    "literals": [
        "\"_infered\"",
        "\"__main__\"",
        "\"input\"",
        "\"output\"",
        "\"Exporting resnet101 with fixed batch size\"",
        "\"data/resnet101_pt.onnx\"",
        "\"Exporting resnet101 with dynamic batch size\"",
        "\"batch_size\"",
        "\"data/resnet101_dynamic.onnx\"",
        "\"data/resnet101_pt.onnx\"",
        "\"data/resnet101_dynamic.onnx\""
    ],
    "variables": [
        "model_onnx",
        "model_infered",
        "fpath",
        "saved_path",
        "opset",
        "dummy_input",
        "model",
        "input_name",
        "output_name",
        "bs_name",
        "dynamic_axes"
    ],
    "comments": [
        "model = torch.nn.Sequential(",
        "model,",
        "torch.nn.Softmax(dim=1)",
        ").eval()",
        "fixed shape input",
        "dynamic batch"
    ],
    "docstrings": [],
    "functions": [
        "infer_shape"
    ],
    "classes": []
}