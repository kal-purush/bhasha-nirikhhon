{
    "identifiers": [
        "pandas",
        "pd",
        "numpy",
        "np",
        "os",
        "sys",
        "sqlite3",
        "src",
        "helper_functions",
        "f",
        "os",
        "path",
        "join",
        "os",
        "pardir",
        "os",
        "pardir",
        "sys",
        "path",
        "append",
        "gparent",
        "database_name",
        "os",
        "path",
        "join",
        "gparent",
        "sqlite3",
        "connect",
        "data_path",
        "conn",
        "cursor",
        "table_name",
        "table_name",
        "pd",
        "read_sql",
        "q",
        "conn",
        "df",
        "df",
        "f",
        "col_pop",
        "df",
        "f",
        "col_pop",
        "df",
        "df",
        "converts",
        "apply",
        "pd",
        "to_numeric",
        "df",
        "pd",
        "read_sql",
        "q",
        "conn",
        "sql_fixes",
        "df",
        "pd",
        "read_sql",
        "q",
        "conn",
        "sql_fixes",
        "df",
        "pd",
        "read_sql",
        "q",
        "conn",
        "sql_fixes",
        "df",
        "pd",
        "read_sql",
        "q",
        "conn",
        "df",
        "simple_df",
        "df",
        "converts",
        "apply",
        "pd",
        "to_numeric",
        "df",
        "groupby",
        "median",
        "reset_index",
        "name",
        "df",
        "median_score_full",
        "studentvle_full",
        "student_info_assessment_full",
        "df",
        "merge",
        "median_score",
        "on",
        "df",
        "drop",
        "drops",
        "axis",
        "student_vle",
        "drop",
        "drops",
        "axis",
        "df",
        "merge",
        "student_vle",
        "on",
        "sql_fixes",
        "df",
        "df",
        "col_list",
        "df",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "df",
        "df",
        "studied_credits",
        "quantile",
        "df",
        "studied_credits",
        "quantile",
        "Q3",
        "Q1",
        "df",
        "df",
        "studied_credits",
        "Q1",
        "IQR",
        "df",
        "studied_credits",
        "Q3",
        "IQR",
        "copy",
        "df",
        "df",
        "pd",
        "qcut",
        "df",
        "studied_credits",
        "q",
        "labels",
        "duplicates",
        "df",
        "df",
        "col_list",
        "df",
        "drop",
        "col_list",
        "axis",
        "df",
        "df",
        "df",
        "dropna",
        "df",
        "df",
        "pipe",
        "replace_vals",
        "pipe",
        "drop_outliers_sc",
        "pipe",
        "course_load",
        "pipe",
        "drop_cols",
        "col_list",
        "pipe",
        "null_zap",
        "df",
        "cutoff_date",
        "pd",
        "read_sql",
        "q",
        "conn",
        "df",
        "converts",
        "apply",
        "pd",
        "to_numeric",
        "df",
        "df",
        "date_unregistration",
        "isna",
        "df",
        "date_unregistration",
        "cutoff_date",
        "df",
        "df",
        "date_registration",
        "isna",
        "df",
        "cutoff_date",
        "simple_df",
        "df",
        "converts",
        "apply",
        "pd",
        "to_numeric",
        "df",
        "df",
        "date_submitted",
        "cutoff_date",
        "df",
        "groupby",
        "median",
        "reset_index",
        "name",
        "df",
        "cutoff_date",
        "cutoff_date",
        "pd",
        "read_sql",
        "q",
        "conn",
        "df",
        "cutoff_date",
        "cutoff_date",
        "pd",
        "read_sql",
        "q",
        "conn",
        "df",
        "cutoff_date",
        "registration_data_df",
        "cutoff_date",
        "median_score_df",
        "cutoff_date",
        "studentvle_df",
        "cutoff_date",
        "student_info_assessment_df",
        "cutoff_date",
        "df",
        "merge",
        "median_score",
        "on",
        "df",
        "drop",
        "drops",
        "axis",
        "df",
        "merge",
        "student_vle",
        "on",
        "df",
        "merge",
        "reg_data",
        "how",
        "on",
        "sql_fixes",
        "df",
        "df",
        "col_list",
        "df",
        "col_list",
        "df",
        "drop",
        "col_list",
        "axis",
        "df",
        "df",
        "df",
        "dropna",
        "df",
        "df",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "df",
        "df",
        "studied_credits",
        "quantile",
        "df",
        "studied_credits",
        "quantile",
        "Q3",
        "Q1",
        "df",
        "df",
        "studied_credits",
        "Q1",
        "IQR",
        "df",
        "studied_credits",
        "Q3",
        "IQR",
        "copy",
        "df",
        "df",
        "pipe",
        "replace_vals",
        "pipe",
        "null_zap",
        "pipe",
        "drop_outliers_sc",
        "pipe",
        "drop_cols",
        "col_list",
        "df",
        "df",
        "col_list",
        "df",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "df",
        "df",
        "studied_credits",
        "quantile",
        "df",
        "studied_credits",
        "quantile",
        "Q3",
        "Q1",
        "df",
        "df",
        "studied_credits",
        "Q1",
        "IQR",
        "df",
        "studied_credits",
        "Q3",
        "IQR",
        "copy",
        "df",
        "df",
        "pd",
        "qcut",
        "df",
        "studied_credits",
        "q",
        "labels",
        "duplicates",
        "df",
        "df",
        "df",
        "weighted_ave",
        "quantile",
        "df",
        "weighted_ave",
        "quantile",
        "Q3",
        "Q1",
        "df",
        "df",
        "weighted_ave",
        "Q1",
        "IQR",
        "df",
        "weighted_ave",
        "Q3",
        "IQR",
        "copy",
        "df",
        "df",
        "pd",
        "qcut",
        "df",
        "sum_activity",
        "q",
        "labels",
        "duplicates",
        "df",
        "df",
        "df",
        "sum_activity",
        "quantile",
        "df",
        "sum_activity",
        "quantile",
        "Q3",
        "Q1",
        "df",
        "df",
        "sum_activity",
        "Q1",
        "IQR",
        "df",
        "sum_activity",
        "Q3",
        "IQR",
        "copy",
        "df",
        "df",
        "col_list",
        "df",
        "drop",
        "col_list",
        "axis",
        "df",
        "df",
        "df",
        "dropna",
        "df",
        "df",
        "pipe",
        "replace_vals",
        "pipe",
        "drop_outliers_sc",
        "pipe",
        "drop_outliers_wa",
        "pipe",
        "drop_outliers_sa",
        "pipe",
        "activity_level",
        "pipe",
        "course_load",
        "pipe",
        "drop_cols",
        "col_list",
        "pipe",
        "null_zap",
        "df",
        "df",
        "col_list",
        "df",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "replace",
        "df",
        "df",
        "df",
        "studied_credits",
        "quantile",
        "df",
        "studied_credits",
        "quantile",
        "Q3",
        "Q1",
        "df",
        "df",
        "studied_credits",
        "Q1",
        "IQR",
        "df",
        "studied_credits",
        "Q3",
        "IQR",
        "copy",
        "df",
        "df",
        "pd",
        "qcut",
        "df",
        "studied_credits",
        "q",
        "labels",
        "duplicates",
        "df",
        "df",
        "col_list",
        "df",
        "drop",
        "col_list",
        "axis",
        "df",
        "df",
        "df",
        "dropna",
        "df",
        "df",
        "pipe",
        "replace_vals",
        "pipe",
        "drop_outliers_sc",
        "pipe",
        "course_load",
        "pipe",
        "drop_cols",
        "col_list",
        "pipe",
        "null_zap",
        "df"
    ],
    "literals": [
        "'data/processed'",
        "'outcomes.db'",
        "f\"SELECT*FROM {table_name}\"",
        "'target'",
        "'row_id'",
        "'num_of_prev_attempts'",
        "'studied_credits'",
        "f\"\"\"\n        SELECT\n        /*selecting all from student info*/\n        SI.*,\n        /*changing dtype*/\n        CAST(SA.date_submitted AS INTEGER) AS date_sub,\n        /*adding course length*/\n        CAST(C.module_presentation_length AS INTEGER) AS course_length,\n        /* creating the row_id column by concatenation*/\n        SI.code_module || SI.code_presentation || SI.id_student AS row_id,\n        /* creating binarized target column*/\n        IIF(SI.final_result='Pass' OR SI.final_result='Distinction', 0, 1) AS target,\n        /* creating weighted_ave column*/\n        SUM(SA.score*A.weight*.01) AS weighted_ave,\n        /* creating mean_score column*/\n        AVG(SA.score) as mean_score\n        FROM STUDENTASSESSMENT AS SA\n        JOIN\n        ASSESSMENTS AS A\n        ON A.id_assessment = SA.id_assessment\n        JOIN STUDENTINFO AS SI\n        ON SI.id_student = SA.id_student\n        JOIN COURSES AS C\n        ON SI.code_module = C.code_module\n        GROUP BY SA.id_student,\n        SI.code_module,\n        SI.code_presentation;\n        \"\"\"",
        "f\"\"\"\n        SELECT\n        /*selecting all from STUDENTVLE*/\n        SV.*,\n        /* creating the row_id column by concatenation*/\n        SV.code_module || SV.code_presentation || SV.id_student AS row_id,\n        /* creating the sum_activity column*/\n        SUM(SV.sum_click) + COUNT(SV.sum_click) AS sum_activity,\n        CAST(SV.date AS INTEGER) AS max_date\n        FROM\n        STUDENTVLE AS SV\n        GROUP BY \n        SV.code_module,\n        SV.code_presentation,\n        SV.id_student;\n        \"\"\"",
        "'STUDENTASSESSMENT'",
        "'date_submitted'",
        "'score'",
        "'id_student'",
        "'score'",
        "'median_score'",
        "'id_student'",
        "'code_module'",
        "'code_presentation'",
        "'id_student'",
        "'code_module'",
        "'code_presentation'",
        "'id_student'",
        "'row_id'",
        "'imd_band'",
        "'imd_band'",
        "'10-20'",
        "'10-20%'",
        "'disability'",
        "'disability'",
        "'Y'",
        "'N'",
        "'Yes'",
        "'No'",
        "'gender'",
        "'gender'",
        "'M'",
        "'F'",
        "'Male'",
        "'Female'",
        "'course_load'",
        "'Light'",
        "'Medium'",
        "'Heavy'",
        "'drop'",
        "'date_registration'",
        "'date_unregistration'",
        "'STUDENTASSESSMENT'",
        "'date_submitted'",
        "'score'",
        "'id_student'",
        "'score'",
        "'median_score'",
        "f\"\"\"\n        SELECT\n        /*selecting score*/\n        SA.score,\n        /*selecting all from student info*/\n        SI.*,\n        /*changing dtype*/\n        CAST(SA.date_submitted AS INTEGER) AS date_sub,\n        /*adding course length*/\n        CAST(C.module_presentation_length AS INTEGER) AS course_length,\n        /* creating the row_id column by concatenation*/\n        SI.code_module || SI.code_presentation || SI.id_student AS row_id,\n        /* creating binarized target column*/\n        IIF(SI.final_result='Pass' OR SI.final_result='Distinction', 0, 1) AS target,\n        /* creating weighted_ave column*/\n        SUM(SA.score*A.weight*.01) AS weighted_ave,\n        /* creating mean_score column*/\n        AVG(SA.score) as mean_score\n        FROM STUDENTASSESSMENT AS SA\n        JOIN\n        ASSESSMENTS AS A\n        ON A.id_assessment = SA.id_assessment\n        JOIN STUDENTINFO AS SI\n        ON SI.id_student = SA.id_student\n        JOIN COURSES AS C\n        ON SI.code_module = C.code_module\n        WHERE date_sub < {cutoff_date}\n        GROUP BY SA.id_student,\n        SI.code_module,\n        SI.code_presentation;\n        \"\"\"",
        "f\"\"\"\n        SELECT\n        /*selecting all from STUDENTVLE*/\n        SV.*,\n        /* creating the row_id column by concatenation*/\n        SV.code_module || SV.code_presentation || SV.id_student AS row_id,\n        /* creating the sum_activity column*/\n        SUM(SV.sum_click) + COUNT(SV.sum_click) AS sum_activity,\n        CAST(SV.date AS INTEGER) AS max_date\n        FROM\n        STUDENTVLE AS SV\n        WHERE\n        max_date < {cutoff_date}\n        GROUP BY \n        SV.code_module,\n        SV.code_presentation,\n        SV.id_student;\n        \"\"\"",
        "'id_student'",
        "'code_module'",
        "'code_presentation'",
        "'id_student'",
        "'row_id'",
        "'right'",
        "'row_id'",
        "'imd_band'",
        "'imd_band'",
        "'10-20'",
        "'10-20%'",
        "'disability'",
        "'disability'",
        "'Y'",
        "'N'",
        "'Yes'",
        "'No'",
        "'gender'",
        "'gender'",
        "'M'",
        "'F'",
        "'Male'",
        "'Female'",
        "'imd_band'",
        "'imd_band'",
        "'10-20'",
        "'10-20%'",
        "'disability'",
        "'disability'",
        "'Y'",
        "'N'",
        "'Yes'",
        "'No'",
        "'gender'",
        "'gender'",
        "'M'",
        "'F'",
        "'Male'",
        "'Female'",
        "'course_load'",
        "'Light'",
        "'Medium'",
        "'Heavy'",
        "'drop'",
        "'activity_level'",
        "'Very Light'",
        "'Light'",
        "'Medium'",
        "'Heavy'",
        "'drop'",
        "'imd_band'",
        "'imd_band'",
        "'10-20'",
        "'10-20%'",
        "'disability'",
        "'disability'",
        "'Y'",
        "'N'",
        "'Yes'",
        "'No'",
        "'gender'",
        "'gender'",
        "'M'",
        "'F'",
        "'Male'",
        "'Female'",
        "'course_load'",
        "'Light'",
        "'Medium'",
        "'Heavy'",
        "'drop'"
    ],
    "variables": [
        "gparent",
        "data_path",
        "conn",
        "cur",
        "q",
        "df",
        "converts",
        "df",
        "converts",
        "q",
        "df",
        "q",
        "df",
        "q",
        "df",
        "q",
        "df",
        "df",
        "converts",
        "df",
        "converts",
        "df",
        "median_score",
        "student_vle",
        "df",
        "df",
        "drops",
        "df",
        "drops",
        "student_vle",
        "df",
        "df",
        "df",
        "df",
        "Q1",
        "Q3",
        "IQR",
        "df",
        "df",
        "df",
        "df",
        "df",
        "q",
        "df",
        "converts",
        "df",
        "converts",
        "df",
        "df",
        "df",
        "converts",
        "df",
        "converts",
        "df",
        "df",
        "q",
        "df",
        "q",
        "df",
        "reg_data",
        "median_score",
        "student_vle",
        "df",
        "df",
        "drops",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "Q1",
        "Q3",
        "IQR",
        "df",
        "df",
        "df",
        "df",
        "df",
        "Q1",
        "Q3",
        "IQR",
        "df",
        "df",
        "Q1",
        "Q3",
        "IQR",
        "df",
        "df",
        "Q1",
        "Q3",
        "IQR",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "df",
        "Q1",
        "Q3",
        "IQR",
        "df",
        "df",
        "df",
        "df",
        "df"
    ],
    "comments": [
        "setting project path",
        "init method",
        "cleaning methods",
        "moving target & row_id to front of df",
        "converting data type",
        "creating student info df",
        "creating studentvle df",
        "creating registration data df",
        "converting datatypes",
        "creating median_score df",
        "fixing typo",
        "renaming values",
        "dropping studied_credits outliers with IQR fences",
        "binning studied_credits data and creating a course_load column",
        "dropping columns",
        "dropping nulls",
        "applying the cleaning functions",
        "creating registration data df",
        "converting datatypes",
        "filtering out withdrawls before the cutoff_date",
        "filtering row_ids with no registration data",
        "creating registration data df",
        "converting datatypes",
        "filtering out submissions after cutoff_date",
        "creating median_score df",
        "fixing typo",
        "renaming values",
        "fixing typo",
        "renaming values",
        "dropping studied_credits outliers with IQR fences",
        "binning studied_credits data and creating a course_load column",
        "dropping weighted_ave outliers with IQR fences",
        "binning sum_activity data and creating a activity_level column",
        "dropping columns",
        "dropping nulls",
        "applying the cleaning functions",
        "fixing typo",
        "renaming values",
        "dropping studied_credits outliers with IQR fences",
        "binning studied_credits data and creating a course_load column",
        "dropping columns",
        "dropping nulls",
        "applying the cleaning functions"
    ],
    "docstrings": [
        "\"\"\"Creates database, cursor, and connects to database.\"\"\"",
        "\"\"\"Returns data frame made from all entries in table.\"\"\"",
        "\"\"\"Performs various fixes to the dataframe.\"\"\"",
        "\"\"\"Returns a dataframe of STUDENTINFO data.\"\"\"",
        "\"\"\"\n        SELECT*,\n        /*creating row_id col*/\n        code_module || code_presentation || id_student AS row_id,\n        /* creating binarized target column*/\n        IIF(final_result='Pass' OR final_result='Distinction', 0, 1) AS target      \n        FROM STUDENTINFO\"\"\"",
        "\"\"\"Returns a dataframe of STUDENTINFO & STUDENTVLE data.\"\"\"",
        "\"\"\"\n        SELECT SV.*,\n        SI.*,\n        /*creating click sum*/\n        SUM(SV.sum_click) AS click_sum,\n        /*creating num_activities*/\n        COUNT(SV.sum_click) AS num_activities,\n        /*creating row_id*/\n        SV.code_module || SV.code_presentation || SV.id_student AS row_id,\n        /* creating binarized target column*/\n        IIF(final_result='Pass' OR final_result='Distinction', 0, 1) AS target          \n        FROM \n        STUDENTVLE as SV\n        JOIN \n        STUDENTINFO as SI\n        ON SV.code_module = SI.code_module\n        AND SV.code_presentation = SI.code_presentation\n        AND SV.id_student = SI.id_student\n        GROUP BY \n        SV.code_module,\n        SV.code_presentation,\n        SV.id_student;\n        \"\"\"",
        "\"\"\"returns a dataframe of STUDENTINFO & STUDENTASSESSMENT data.\"\"\"",
        "\"\"\"Returns a dataframe of STUDENTVLE data.\"\"\"",
        "\"\"\"Returns a dataframe of median assessment scores.\"\"\"",
        "\"\"\"Returns a data frame created from several tables.\"\"\"",
        "\"\"\"Returns a cleaned dataframe.\"\"\"",
        "\"\"\"Returns a dataframe of data with either no withdrawl date or a date after the cutoff parameter.\"\"\"",
        "\"\"\"\n        SELECT date_registration, date_unregistration,\n        /*creating row_id col*/\n        code_module || code_presentation || id_student AS row_id\n        FROM STUDENTREGISTRATION\"\"\"",
        "\"\"\"Returns a dataframe of data of median assessment scores upto the cutoff parameter.\"\"\"",
        "\"\"\"returns a dataframe of student info & assessment data upto the cutoff_date\"\"\"",
        "\"\"\"Returns a dataframe of STUDENTVLE data upto the cutoff date.\"\"\"",
        "\"\"\"Returns a data frame created from several tables.\"\"\"",
        "\"\"\"Returns a cleaned dataframe.\"\"\"",
        "\"\"\"Returns a cleaned dataframe.\"\"\"",
        "\"\"\"Returns a cleaned dataframe.\"\"\""
    ],
    "functions": [
        "simple_df",
        "sql_fixes",
        "student_info_full",
        "student_info_vle_full",
        "student_info_assessment_full",
        "studentvle_full",
        "median_score_full",
        "data_prep_full",
        "cleaner_studentinfo",
        "replace_vals",
        "drop_outliers_sc",
        "course_load",
        "drop_cols",
        "null_zap",
        "registration_data_df",
        "median_score_df",
        "student_info_assessment_df",
        "studentvle_df",
        "data_prep_half",
        "pipe_cleaner",
        "drop_cols",
        "null_zap",
        "replace_vals",
        "drop_outliers_sc",
        "pipe_cleaner_wa",
        "replace_vals",
        "drop_outliers_sc",
        "course_load",
        "drop_outliers_wa",
        "activity_level",
        "drop_outliers_sa",
        "drop_cols",
        "null_zap",
        "cleaner_studentinfo",
        "replace_vals",
        "drop_outliers_sc",
        "course_load",
        "drop_cols",
        "null_zap"
    ],
    "classes": [
        "Cleaner"
    ]
}