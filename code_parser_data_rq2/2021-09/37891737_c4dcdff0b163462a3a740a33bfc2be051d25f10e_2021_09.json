{
    "identifiers": [
        "os",
        "shutil",
        "socket",
        "tempfile",
        "click",
        "pbench",
        "agent",
        "BaseCommand",
        "pbench",
        "agent",
        "results",
        "MakeResultTb",
        "CopyResultTb",
        "pbench",
        "cli",
        "agent",
        "pass_cli_context",
        "CliContext",
        "pbench",
        "cli",
        "agent",
        "options",
        "common_options",
        "pbench",
        "common",
        "exceptions",
        "BadMDLogFormat",
        "pbench",
        "common",
        "utils",
        "validate_hostname",
        "BaseCommand",
        "context",
        "CliContext",
        "context",
        "single_threaded",
        "tempfile",
        "TemporaryDirectory",
        "dir",
        "config",
        "pbench_tmp",
        "prefix",
        "temp_dir",
        "dirent",
        "config",
        "pbench_run",
        "iterdir",
        "dirent",
        "is_dir",
        "dirent",
        "name",
        "startswith",
        "dirent",
        "name",
        "no_of_tb",
        "dirent",
        "MakeResultTb",
        "result_dir",
        "temp_dir",
        "context",
        "controller",
        "config",
        "logger",
        "MakeResultTb",
        "AlreadyCopied",
        "logger",
        "info",
        "result_dir",
        "MakeResultTb",
        "BenchmarkRunning",
        "logger",
        "warning",
        "result_dir",
        "result_dir",
        "NotADirectoryError",
        "FileNotFoundError",
        "exc",
        "logger",
        "error",
        "exc",
        "failures",
        "mrt",
        "make_result_tb",
        "single_threaded",
        "single_threaded",
        "BadMDLogFormat",
        "exc",
        "logger",
        "warning",
        "exc",
        "failures",
        "FileNotFoundError",
        "exc",
        "logger",
        "error",
        "exc",
        "failures",
        "RuntimeError",
        "exc",
        "logger",
        "warning",
        "exc",
        "failures",
        "exc",
        "logger",
        "error",
        "result_dir",
        "exc",
        "failures",
        "CopyResultTb",
        "context",
        "controller",
        "result_tb_name",
        "result_tb_len",
        "result_tb_md5",
        "config",
        "logger",
        "crt",
        "copy_result_tb",
        "context",
        "token",
        "exc",
        "isinstance",
        "exc",
        "CopyResultTb",
        "FileUploadError",
        "RuntimeError",
        "logger",
        "error",
        "msg",
        "result_tb_name",
        "exc",
        "failures",
        "runs_copied",
        "os",
        "remove",
        "result_tb_name",
        "OSError",
        "exc",
        "logger",
        "error",
        "result_tb_name",
        "exc",
        "shutil",
        "rmtree",
        "result_dir",
        "OSError",
        "logger",
        "error",
        "result_dir",
        "failures",
        "result_dir",
        "parent",
        "result_dir",
        "name",
        "copied",
        "touch",
        "OSError",
        "exc",
        "logger",
        "error",
        "result_dir",
        "exc",
        "failures",
        "click",
        "echo",
        "no_of_tb",
        "action",
        "runs_copied",
        "failures",
        "failures",
        "click",
        "command",
        "name",
        "common_options",
        "click",
        "option",
        "required",
        "envvar",
        "prompt",
        "help",
        "click",
        "option",
        "required",
        "envvar",
        "prompt",
        "help",
        "click",
        "option",
        "show_default",
        "help",
        "click",
        "option",
        "is_flag",
        "help",
        "click",
        "option",
        "help",
        "pass_cli_context",
        "context",
        "CliContext",
        "controller",
        "token",
        "xz_single_threaded",
        "show_server",
        "click",
        "get_current_context",
        "controller",
        "controller",
        "os",
        "environ",
        "get",
        "socket",
        "getfqdn",
        "controller",
        "click",
        "echo",
        "err",
        "clk_ctx",
        "exit",
        "validate_hostname",
        "controller",
        "click",
        "echo",
        "controller",
        "clk_ctx",
        "exit",
        "controller",
        "token",
        "show_server",
        "click",
        "echo",
        "err",
        "MoveResults",
        "context",
        "execute",
        "xz_single_threaded",
        "exc",
        "click",
        "echo",
        "exc",
        "err",
        "clk_ctx",
        "exit",
        "rv"
    ],
    "literals": [
        "\"pbench-results-move.\"",
        "\"tools-\"",
        "\"tmp\"",
        "f\"Already copied {result_dir}\"",
        "f\"Skipping {result_dir}: the benchmark appears to be\"",
        "\" running.  If that's incorrect, remove the\"",
        "f\" {result_dir}/.running directory and try again\"",
        "\"Error encountered making tar ball, '%s'\"",
        "\"Unexpected error occurred making tar ball for '%s', '%s'\"",
        "\"Error uploading file\"",
        "\"Unexpected error occurred copying tar ball remotely\"",
        "\"%s, '%s', %s\"",
        "\"Failed to remove '%s', '%s'\"",
        "\"Failed to remove the %s directory hierarchy\"",
        "f\"{result_dir.name}.copied\"",
        "\"Failed to create '.copied' file marker for '%s', '%s'\"",
        "\"moved\"",
        "\"copied\"",
        "f\"Status: total # of result directories considered {no_of_tb:d},\"",
        "f\" successfully {action} {runs_copied:d}, encountered\"",
        "f\" {failures:d} failures\"",
        "\"pbench-results-move\"",
        "\"--controller\"",
        "\"PBENCH_CONTROLLER\"",
        "\"\"",
        "\"Override the default controller name\"",
        "\"--token\"",
        "\"PBENCH_ACCESS_TOKEN\"",
        "\"pbench server authentication token\"",
        "\"--delete/--no-delete\"",
        "\"Remove local data after successful copy\"",
        "\"--xz-single-threaded\"",
        "\"Use single threaded compression with 'xz'\"",
        "\"--show-server\"",
        "\"Display information about the pbench server where the result(s) will\"",
        "\" be moved (Not implemented)\"",
        "\"_pbench_full_hostname\"",
        "\"Unable to determine the controller name, could not fetch the\"",
        "\" FQDN of the host; to work around this problem consider\"",
        "\" explicitly providing a value for the --controller option\"",
        "f\"Controller, {controller!r}, is not a valid host name\"",
        "\"WARNING -- Option '--show-server' is not implemented\""
    ],
    "variables": [
        "runs_copied",
        "failures",
        "no_of_tb",
        "result_dir",
        "mrt",
        "result_tb_name",
        "result_tb_len",
        "result_tb_md5",
        "crt",
        "msg",
        "msg",
        "copied",
        "action",
        "clk_ctx",
        "context",
        "controller",
        "controller",
        "context",
        "controller",
        "context",
        "token",
        "rv",
        "rv"
    ],
    "comments": [
        "We don't know why this operation failed; regardless,",
        "trying to copy another tar ball remotely does not have",
        "much chance of success.",
        "We always remove the constructed tar ball, regardless of success",
        "or failure, since we keep the result directory below on failure.",
        "If we can't hold up the contract of removing the",
        "local directory tree that was copied, we exit the",
        "loop that is processing result directories.  Not",
        "being able to remove the local directory tree will",
        "usually indicate a serious problem that needs to be",
        "resolved before doing anything else.",
        "If we can't hold up the contract of marking a",
        "directory as copied remotely, we exit the loop that",
        "is processing result directories.  If we can't",
        "create an empty file on the file system where the",
        "result directory lives, it likely indicates bigger",
        "problems.",
        "We check once to avoid having to deal with a bad controller each",
        "time we try to copy the results."
    ],
    "docstrings": [
        "\"\"\"Command implementation for \"pbench results move.\"\n\n    This command replaces the previous (legacy) interface,\n    `pbench-move-results`, and its sibling, `pbench-copy-results`, with no\n    attempt to implement any backwards compatibility with that legacy\n    interface.\n\n    This command is responsible for finding all the existing pbench data\n    directories on the local host (controller), packaging each of them up as a\n    tar ball, and sending it to the remote pbench server.\n    \"\"\"",
        "\"\"\"Move result directories to the configured Pbench server.\"\"\""
    ],
    "functions": [
        "execute",
        "main"
    ],
    "classes": [
        "MoveResults"
    ]
}