{
    "identifiers": [
        "com",
        "foc",
        "web",
        "microservice",
        "entity",
        "com",
        "foc",
        "Globals",
        "com",
        "foc",
        "admin",
        "ActiveUserList",
        "com",
        "foc",
        "admin",
        "FocUser",
        "com",
        "foc",
        "admin",
        "FocUserDesc",
        "com",
        "foc",
        "FocList",
        "com",
        "foc",
        "web",
        "microservice",
        "FocMicroServlet",
        "SessionAndApplication",
        "Override",
        "session",
        "token",
        "result",
        "auth",
        "username",
        "auth",
        "verifyToken",
        "token",
        "username",
        "FocUserDesc",
        "getInstance",
        "getFocList",
        "loadIfNotLoadedFromDB",
        "user",
        "searchByPropertyStringValue",
        "FocUserDesc",
        "FLD_NAME",
        "username",
        "user",
        "Globals",
        "logString",
        "username",
        "reloadFromDB",
        "user",
        "searchByPropertyStringValue",
        "FocUserDesc",
        "FLD_NAME",
        "username",
        "user",
        "user",
        "isSuspended",
        "result",
        "result",
        "setUsername",
        "username",
        "session",
        "getWebSession",
        "setFocUser",
        "user",
        "ActiveUserList",
        "getInstance",
        "serviceSide_updateHeartbeat",
        "user",
        "Globals",
        "logString",
        "username",
        "Globals",
        "logString",
        "username",
        "Globals",
        "logString",
        "result"
    ],
    "literals": [
        "\" = Username: \"",
        "\" not found reloading user list\"",
        "\" = Session opened for username: \"",
        "\" = Username: \"",
        "\" not found, logout()\"",
        "\" = FocUser list null\""
    ],
    "variables": [],
    "comments": [
        "Reload once if we don't find. This is in case a new user was",
        "created"
    ],
    "docstrings": [],
    "functions": [
        "AuthTokenHandler_FocDefault",
        "AuthTokenHandlerResult",
        "decodeToken"
    ],
    "classes": [
        "AuthTokenHandler_FocDefault"
    ]
}