{
    "identifiers": [
        "Collections",
        "Concurrent",
        "Linq",
        "Expressions",
        "MiaPlaza",
        "ExpressionUtils",
        "T",
        "T",
        "Func",
        "T",
        "Expression",
        "Lambda",
        "Func",
        "T",
        "Expression",
        "New",
        "T",
        "Compile",
        "cachedNew",
        "Invoke",
        "T",
        "ConcurrentDictionary",
        "Type",
        "Func",
        "T",
        "ConcurrentDictionary",
        "Type",
        "Func",
        "T",
        "Type",
        "t",
        "Func",
        "T",
        "cachedNew",
        "TryGetValue",
        "t",
        "Expression",
        "Lambda",
        "Func",
        "T",
        "Expression",
        "New",
        "t",
        "Compile",
        "cachedNew",
        "t",
        "Invoke"
    ],
    "literals": [],
    "variables": [
        "cachedNew",
        "cachedNew"
    ],
    "comments": [
        "Provides fast default constructor invocation for code with a <c>T : new()</c> constraint.",
        "</summary>",
        "<remarks>",
        "Surprisingly, default constructor invocation for a type <c>T : new()</c> is very slow.",
        "It is much faster to compile a call to <c>new</c> for the specific type.",
        "https://stackoverflow.com/questions/367577/why-does-the-c-sharp-compiler-emit-activator-createinstance-when-calling-new-in",
        "</remarks>",
        "Create an instance of <typeparamref=\"T\"/>.",
        "This is much faster than calling <c>new T()</c> for a generic type",
        "parameter with a <c>T : new()</c> constraint.",
        "</summary>",
        "Provides fast default constructor invocation for code without a <c>T : new()</c> constraint.",
        "</summary>",
        "<remarks>",
        "<c>Activator.CreateInstance()</c> is very slow. It is much faster to compile a call to <c>new</c> for",
        "the specific type.",
        "https://stackoverflow.com/questions/6582259/fast-creation-of-objects-instead-of-activator-createinstancetype",
        "</remarks>",
        "Creates instances which extend <typeparamref name=\"T\"/>",
        "If your type supports a <c>T : new()</c> constraint, use <c>CompiledActivator&lt;T&gt;</c> instead",
        "which provides improved compile time safety.",
        "</summary>",
        "<remarks>",
        "This static subclass exists to reduce the number of concurrent accesses to the <c>cachedNew</c> dictionary below:",
        "For each <paramref name=\"T\"/> we get a separate dictionary.",
        "</remarks>",
        "Create a <paramref name=\"t\"/> which can be cast to a <typeparamref name=\"T\"/>,",
        "by invoking its default constructor.",
        "This is much faster than <c>(T)Activator.CreateInstance(t)</c>.",
        "</summary>",
        "we do not need to check whether t is really a T, the compilation below will fail if the cast is not possible.",
        "We do not need to lock the dictionary; another thread can only overwrite it with the same value"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "T",
        "Create",
        "T",
        "Create"
    ],
    "classes": [
        "CompiledActivator",
        "CompiledActivator",
        "ForBaseType"
    ]
}