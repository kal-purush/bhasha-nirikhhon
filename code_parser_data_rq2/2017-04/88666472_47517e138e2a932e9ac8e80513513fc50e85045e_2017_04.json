{
    "identifiers": [
        "django",
        "forms",
        "django",
        "forms",
        "ModelForm",
        "Textarea",
        "myblog",
        "models",
        "django",
        "contrib",
        "auth",
        "models",
        "User",
        "django",
        "contrib",
        "auth",
        "forms",
        "PasswordResetForm",
        "forms",
        "Form",
        "forms",
        "CharField",
        "max_length",
        "widget",
        "forms",
        "TextInput",
        "attrs",
        "forms",
        "EmailField",
        "max_length",
        "widget",
        "forms",
        "EmailInput",
        "attrs",
        "forms",
        "EmailField",
        "max_length",
        "widget",
        "forms",
        "EmailInput",
        "attrs",
        "forms",
        "CharField",
        "max_length",
        "widget",
        "forms",
        "PasswordInput",
        "attrs",
        "forms",
        "CharField",
        "max_length",
        "widget",
        "forms",
        "PasswordInput",
        "attrs",
        "RegistrationForm",
        "clean",
        "cleaned_data",
        "get",
        "cleaned_data",
        "get",
        "email1",
        "email2",
        "email1",
        "email2",
        "forms",
        "ValidationError",
        "cleaned_data",
        "get",
        "cleaned_data",
        "get",
        "password1",
        "password2",
        "password1",
        "password2",
        "forms",
        "ValidationError",
        "cleaned_data",
        "cleaned_data",
        "get",
        "User",
        "objects",
        "username__exact",
        "username",
        "forms",
        "ValidationError",
        "username",
        "cleaned_data",
        "get",
        "User",
        "objects",
        "email__exact",
        "email",
        "forms",
        "ValidationError",
        "email",
        "forms",
        "ModelForm",
        "Message",
        "forms",
        "FileInput",
        "forms",
        "ModelForm",
        "Profile",
        "forms",
        "FileInput"
    ],
    "literals": [
        "'placeholder'",
        "'Username'",
        "'placeholder'",
        "'Email'",
        "'placeholder'",
        "'Confirm Email'",
        "'placeholder'",
        "'Password'",
        "'placeholder'",
        "'Confirm Password'",
        "'email1'",
        "'email2'",
        "\"Email did not match.\"",
        "'password1'",
        "'password2'",
        "\"Passwords did not match.\"",
        "'username'",
        "\"Username already exists.\"",
        "'email1'",
        "\"Email already exists.\"",
        "'picture'",
        "'picture'",
        "'owner'",
        "'picture'"
    ],
    "variables": [
        "username",
        "email1",
        "email2",
        "password1",
        "password2",
        "cleaned_data",
        "email1",
        "email2",
        "password1",
        "password2",
        "username",
        "email",
        "model",
        "fields",
        "widgets",
        "model",
        "exclude",
        "widgets"
    ],
    "comments": [
        "Calls our parent (forms.Form) .clean function, gets a dictionary",
        "of cleaned data as a result",
        "Confirms that the two email fields match",
        "Confirms that the two password fields match",
        "Generally return the cleaned data we got from our parent.",
        "Customizes form validation for the username field.",
        "Confirms that the username is not already present in the",
        "User model database.",
        "Generally return the cleaned data we got from the cleaned_data",
        "dictionary",
        "Confirms that the username is not already present in the",
        "User model database.",
        "Generally return the cleaned data we got from the cleaned_data",
        "dictionary"
    ],
    "docstrings": [],
    "functions": [
        "clean",
        "clean_username",
        "clean_email1"
    ],
    "classes": [
        "RegistrationForm",
        "MessageForm",
        "Meta",
        "ProfileForm",
        "Meta"
    ]
}