{
    "identifiers": [
        "com",
        "telefonica",
        "iot",
        "cygnus",
        "backends",
        "mongo",
        "com",
        "telefonica",
        "iot",
        "cygnus",
        "sinks",
        "Enums",
        "DataModel",
        "com",
        "telefonica",
        "iot",
        "cygnus",
        "utils",
        "CommonUtilsForTests",
        "getTestTraceHead",
        "java",
        "util",
        "GregorianCalendar",
        "java",
        "util",
        "TimeZone",
        "org",
        "apache",
        "log4j",
        "Level",
        "org",
        "apache",
        "log4j",
        "LogManager",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Test",
        "LogManager",
        "getRootLogger",
        "setLevel",
        "Level",
        "FATAL",
        "Test",
        "getTestTraceHead",
        "backend",
        "assertEquals",
        "backend",
        "getRange",
        "MongoBackendImpl",
        "Resolution",
        "SECOND",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getRange",
        "MongoBackendImpl",
        "Resolution",
        "MINUTE",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getRange",
        "MongoBackendImpl",
        "Resolution",
        "HOUR",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getRange",
        "MongoBackendImpl",
        "Resolution",
        "DAY",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getRange",
        "MongoBackendImpl",
        "Resolution",
        "MONTH",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "Test",
        "getTestTraceHead",
        "backend",
        "calendar",
        "gc",
        "gc",
        "setTimeZone",
        "TimeZone",
        "getTimeZone",
        "assertEquals",
        "gc",
        "getTime",
        "backend",
        "getOrigin",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "SECOND",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "gc",
        "gc",
        "setTimeZone",
        "TimeZone",
        "getTimeZone",
        "assertEquals",
        "gc",
        "getTime",
        "backend",
        "getOrigin",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "MINUTE",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "gc",
        "gc",
        "setTimeZone",
        "TimeZone",
        "getTimeZone",
        "assertEquals",
        "gc",
        "getTime",
        "backend",
        "getOrigin",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "HOUR",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "gc",
        "gc",
        "setTimeZone",
        "TimeZone",
        "getTimeZone",
        "assertEquals",
        "gc",
        "getTime",
        "backend",
        "getOrigin",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "DAY",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "gc",
        "gc",
        "setTimeZone",
        "TimeZone",
        "getTimeZone",
        "assertEquals",
        "gc",
        "getTime",
        "backend",
        "getOrigin",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "MONTH",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "Test",
        "getTestTraceHead",
        "backend",
        "calendar",
        "assertEquals",
        "backend",
        "getOffset",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "SECOND",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getOffset",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "MINUTE",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getOffset",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "HOUR",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getOffset",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "DAY",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "assertEquals",
        "backend",
        "getOffset",
        "calendar",
        "MongoBackendImpl",
        "Resolution",
        "MONTH",
        "getTestTraceHead",
        "e",
        "getTestTraceHead",
        "e",
        "Test",
        "getTestTraceHead",
        "entityId",
        "entityType",
        "attrName",
        "calendar",
        "backend",
        "DataModel",
        "DMBYSERVICEPATH",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "SECOND",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "MINUTE",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "HOUR",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "DAY",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "MONTH",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "backend",
        "DataModel",
        "DMBYENTITY",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "SECOND",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "MINUTE",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "HOUR",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "DAY",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "queryForInsertAggregated",
        "assertEquals",
        "queryForInsertAggregated",
        "backend",
        "buildQueryForInsertAggregated",
        "calendar",
        "entityId",
        "entityType",
        "attrName",
        "MongoBackendImpl",
        "Resolution",
        "MONTH",
        "toString",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "getTestTraceHead",
        "queryForInsertAggregated",
        "e",
        "Test",
        "getTestTraceHead",
        "attrType",
        "max",
        "min",
        "sum",
        "sum2",
        "numSamples",
        "calendar",
        "backend",
        "updateForUpdate",
        "assertEquals",
        "updateForUpdate",
        "backend",
        "buildUpdateForUpdate",
        "attrType",
        "calendar",
        "max",
        "min",
        "sum",
        "sum2",
        "numSamples",
        "toString",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "Test",
        "getTestTraceHead",
        "attrType",
        "value",
        "count",
        "calendar",
        "backend",
        "updateForUpdate",
        "assertEquals",
        "updateForUpdate",
        "backend",
        "buildUpdateForUpdate",
        "attrType",
        "MongoBackendImpl",
        "Resolution",
        "SECOND",
        "calendar",
        "value",
        "count",
        "toString",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "updateForUpdate",
        "assertEquals",
        "updateForUpdate",
        "backend",
        "buildUpdateForUpdate",
        "attrType",
        "MongoBackendImpl",
        "Resolution",
        "MINUTE",
        "calendar",
        "value",
        "count",
        "toString",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "updateForUpdate",
        "assertEquals",
        "updateForUpdate",
        "backend",
        "buildUpdateForUpdate",
        "attrType",
        "MongoBackendImpl",
        "Resolution",
        "HOUR",
        "calendar",
        "value",
        "count",
        "toString",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "updateForUpdate",
        "assertEquals",
        "updateForUpdate",
        "backend",
        "buildUpdateForUpdate",
        "attrType",
        "MongoBackendImpl",
        "Resolution",
        "DAY",
        "calendar",
        "value",
        "count",
        "toString",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "updateForUpdate",
        "assertEquals",
        "updateForUpdate",
        "backend",
        "buildUpdateForUpdate",
        "attrType",
        "MongoBackendImpl",
        "Resolution",
        "MONTH",
        "calendar",
        "value",
        "count",
        "toString",
        "getTestTraceHead",
        "updateForUpdate",
        "e",
        "getTestTraceHead",
        "updateForUpdate",
        "e"
    ],
    "literals": [
        "\"[MongoBackendImpl.getRange]\"",
        "\"-------- Given a resolution, its related range is correctly returned\"",
        "\"minute\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"-  OK  - The related range for 'SECOND' resolution is 'minute'\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"- FAIL - The related range for 'SECOND' resolution is not 'minute'\"",
        "\"hour\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"-  OK  - The related range for 'MINUTE' resolution is 'hour'\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"- FAIL - The related range for 'MINUTE' resolution is not 'hour'\"",
        "\"day\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"-  OK  - The related range for 'HOUR' resolution is 'day'\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"- FAIL - The related range for 'HOUR' resolution is not 'day'\"",
        "\"month\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"-  OK  - The related range for 'DAY' resolution is 'month'\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"- FAIL - The related range for 'DAY' resolution is not 'month'\"",
        "\"year\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"-  OK  - The related range for 'MONTH' resolution is 'year'\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"- FAIL - The related range for 'MONTH' resolution is not 'year'\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"-------- Given a calendar and a resolution, its related origin is correctly returned\"",
        "\"UTC\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"-  OK  - The related origin for '2017-04-05T11:46:13' and 'SECOND' resolution is \"",
        "\"'2017-04-05T11:46:00'\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"- FAIL - The related origin for '2017-04-05T11:46:13' and 'SECOND' resolution is not \"",
        "\"'2017-04-05T11:46:00'\"",
        "\"UTC\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"-  OK  - The related origin for '2017-04-05T11:46:13' and 'MINUTE' resolution is \"",
        "\"'2017-04-05T11:00:00'\"",
        "\"[MongoBackendImpl.getRange]\"",
        "\"- FAIL - The related origin for '2017-04-05T11:46:13' and 'MINUTE' resolution is not \"",
        "\"'2017-04-05T11:00:00'\"",
        "\"UTC\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"-  OK  - The related origin for '2017-04-05T11:46:13' and 'HOUR' resolution is \"",
        "\"'2017-04-05T00:00:00'\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"- FAIL - The related origin for '2017-04-05T11:46:13' and 'HOUR' resolution is not \"",
        "\"'2017-04-05T00:00:00'\"",
        "\"UTC\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"-  OK  - The related origin for '2017-04-05T11:46:13' and 'DAY' resolution is \"",
        "\"'2017-04-01T00:00:00'\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"- FAIL - The related origin for '2017-04-05T11:46:13' and 'DAY' resolution is not \"",
        "\"'2017-04-01T00:00:00'\"",
        "\"UTC\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"-  OK  - The related origin for '2017-04-05T11:46:13' and 'MONTH' resolution is \"",
        "\"'2017-01-01T00:00:00'\"",
        "\"[MongoBackendImpl.getOrigin]\"",
        "\"- FAIL - The related origin for '2017-04-05T11:46:13' and 'MONTH' resolution is not \"",
        "\"'2017-01-01T00:00:00'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"-------- Given a calendar and a resolution, its related offset is correctly returned\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"-  OK  - The related offset for '2017-04-05T11:46:13' and 'SECOND' resolution is '13'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"- FAIL - The related offset for '2017-04-05T11:46:13' and 'SECOND' resolution is '13'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"-  OK  - The related offset for '2017-04-05T11:46:13' and 'MINUTE' resolution is '46'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"- FAIL - The related offset for '2017-04-05T11:46:13' and 'MINUTE' resolution is '46'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"-  OK  - The related offset for '2017-04-05T11:46:13' and 'HOUR' resolution is '11'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"- FAIL - The related offset for '2017-04-05T11:46:13' and 'HOUR' resolution is '11'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"-  OK  - The related offset for '2017-04-05T11:46:13' and 'DAY' resolution is '5'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"- FAIL - The related offset for '2017-04-05T11:46:13' and 'DAY' resolution is '5'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"-  OK  - The related offset for '2017-04-05T11:46:13' and 'MONTH' resolution is '4'\"",
        "\"[MongoBackendImpl.getOffset]\"",
        "\"- FAIL - The related offset for '2017-04-05T11:46:13' and 'MONTH' resolution is '4'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-------- Given a calendar, a resolution, an entity ID and type and a attribute name, a query \"",
        "\"for insert if built\"",
        "\"someId\"",
        "\"someType\"",
        "\"someName\"",
        "\"{ \\\"_id\\\" : { \\\"entityId\\\" : \\\"someId\\\" , \\\"entityType\\\" : \\\"someType\\\" , \"",
        "\"\\\"attrName\\\" : \\\"someName\\\" , \\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-05T11:46:00.000Z\\\"} , \"",
        "\"\\\"resolution\\\" : \\\"second\\\" , \\\"range\\\" : \\\"minute\\\"} , \\\"points.offset\\\" : 13}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'SECOND' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'SECOND' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"entityId\\\" : \\\"someId\\\" , \\\"entityType\\\" : \\\"someType\\\" , \"",
        "\"\\\"attrName\\\" : \\\"someName\\\" , \\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-05T11:00:00.000Z\\\"} , \"",
        "\"\\\"resolution\\\" : \\\"minute\\\" , \\\"range\\\" : \\\"hour\\\"} , \\\"points.offset\\\" : 46}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MINUTE' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MINUTE' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"entityId\\\" : \\\"someId\\\" , \\\"entityType\\\" : \\\"someType\\\" , \"",
        "\"\\\"attrName\\\" : \\\"someName\\\" , \\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-05T00:00:00.000Z\\\"} , \"",
        "\"\\\"resolution\\\" : \\\"hour\\\" , \\\"range\\\" : \\\"day\\\"} , \\\"points.offset\\\" : 11}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'HOUR' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'HOUR' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"entityId\\\" : \\\"someId\\\" , \\\"entityType\\\" : \\\"someType\\\" , \"",
        "\"\\\"attrName\\\" : \\\"someName\\\" , \\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-01T00:00:00.000Z\\\"} , \"",
        "\"\\\"resolution\\\" : \\\"day\\\" , \\\"range\\\" : \\\"month\\\"} , \\\"points.offset\\\" : 5}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'DAY' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'DAY' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"entityId\\\" : \\\"someId\\\" , \\\"entityType\\\" : \\\"someType\\\" , \"",
        "\"\\\"attrName\\\" : \\\"someName\\\" , \\\"origin\\\" : { \\\"$date\\\" : \\\"2017-01-01T00:00:00.000Z\\\"} , \"",
        "\"\\\"resolution\\\" : \\\"month\\\" , \\\"range\\\" : \\\"year\\\"} , \\\"points.offset\\\" : 4}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MONTH' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MONTH' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"attrName\\\" : \\\"someName\\\" , \"",
        "\"\\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-05T11:46:00.000Z\\\"} , \\\"resolution\\\" : \\\"second\\\" , \"",
        "\"\\\"range\\\" : \\\"minute\\\"} , \\\"points.offset\\\" : 13}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'SECOND' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'SECOND' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"attrName\\\" : \\\"someName\\\" , \"",
        "\"\\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-05T11:00:00.000Z\\\"} , \\\"resolution\\\" : \\\"minute\\\" , \"",
        "\"\\\"range\\\" : \\\"hour\\\"} , \\\"points.offset\\\" : 46}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MINUTE' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MINUTE' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"attrName\\\" : \\\"someName\\\" , \"",
        "\"\\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-05T00:00:00.000Z\\\"} , \\\"resolution\\\" : \\\"hour\\\" , \"",
        "\"\\\"range\\\" : \\\"day\\\"} , \\\"points.offset\\\" : 11}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'HOUR' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'HOUR' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"attrName\\\" : \\\"someName\\\" , \"",
        "\"\\\"origin\\\" : { \\\"$date\\\" : \\\"2017-04-01T00:00:00.000Z\\\"} , \\\"resolution\\\" : \\\"day\\\" , \"",
        "\"\\\"range\\\" : \\\"month\\\"} , \\\"points.offset\\\" : 5}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'DAY' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'DAY' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"{ \\\"_id\\\" : { \\\"attrName\\\" : \\\"someName\\\" , \"",
        "\"\\\"origin\\\" : { \\\"$date\\\" : \\\"2017-01-01T00:00:00.000Z\\\"} , \\\"resolution\\\" : \\\"month\\\" , \"",
        "\"\\\"range\\\" : \\\"year\\\"} , \\\"points.offset\\\" : 4}\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MONTH' resolution and 'DMBYENTITY' \"",
        "\"data mode is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildQueryForInsertAggregated]\"",
        "\"-  OK  - The related query for '2017-04-05T11:46:13', 'MONTH' resolution and 'DMBYENTITY' \"",
        "\"data mode is not '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-------- Given a calendar, an attribute type and pre-aggregated numerical values, an aggregation \"",
        "\"update is create\"",
        "\"someType\"",
        "\"{ \\\"$set\\\" : { \\\"attrType\\\" : \\\"someType\\\"} , \"",
        "\"\\\"$inc\\\" : { \\\"points.$.samples\\\" : 2 , \\\"points.$.sum\\\" : 20.0 , \\\"points.$.sum2\\\" : 200.0} , \"",
        "\"\\\"$min\\\" : { \\\"points.$.min\\\" : 0.0} , \\\"$max\\\" : { \\\"points.$.max\\\" : 10.0}}\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13' and given preaggregation is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13' and given preaggregation is not '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-------- Given a calendar, an attribute type and pre-aggregated string values, an aggregation \"",
        "\"update is create\"",
        "\"someType\"",
        "\"someString\"",
        "\"{ \\\"$set\\\" : { \\\"attrType\\\" : \\\"someType\\\"} , \"",
        "\"\\\"$inc\\\" : { \\\"points.13.samples\\\" : 2 , \\\"points.13.occur.someString\\\" : 2}}\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'SECOND' and given \"",
        "\"preaggregation is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'SECOND' and given \"",
        "\"preaggregation is not '\"",
        "\"'\"",
        "\"{ \\\"$set\\\" : { \\\"attrType\\\" : \\\"someType\\\"} , \"",
        "\"\\\"$inc\\\" : { \\\"points.46.samples\\\" : 2 , \\\"points.46.occur.someString\\\" : 2}}\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'MINUTE' and given \"",
        "\"preaggregation is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'MINUTE' and given \"",
        "\"preaggregation is not '\"",
        "\"'\"",
        "\"{ \\\"$set\\\" : { \\\"attrType\\\" : \\\"someType\\\"} , \"",
        "\"\\\"$inc\\\" : { \\\"points.11.samples\\\" : 2 , \\\"points.11.occur.someString\\\" : 2}}\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'HOUR' and given \"",
        "\"preaggregation is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'HOUR' and given \"",
        "\"preaggregation is not '\"",
        "\"'\"",
        "\"{ \\\"$set\\\" : { \\\"attrType\\\" : \\\"someType\\\"} , \"",
        "\"\\\"$inc\\\" : { \\\"points.4.samples\\\" : 2 , \\\"points.4.occur.someString\\\" : 2}}\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'DAY' and given \"",
        "\"preaggregation is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'DAY' and given \"",
        "\"preaggregation is not '\"",
        "\"'\"",
        "\"{ \\\"$set\\\" : { \\\"attrType\\\" : \\\"someType\\\"} , \"",
        "\"\\\"$inc\\\" : { \\\"points.3.samples\\\" : 2 , \\\"points.3.occur.someString\\\" : 2}}\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'MONTH' and given \"",
        "\"preaggregation is '\"",
        "\"'\"",
        "\"[MongoBackendImpl.buildUpdateForUpdate]\"",
        "\"-  OK  - The related update for '2017-04-05T11:46:13', resolution 'MONTH' and given \"",
        "\"preaggregation is not '\"",
        "\"'\""
    ],
    "variables": [],
    "comments": [
        "MongoBackendImplTest",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "testGetRange",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "The month has to be zero since GregorianCalendar builds dates considering months start by zero",
        "try catch",
        "testGetOrigin",
        "month 3 is April",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "testGetOffset",
        "month 3 is April",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "try catch",
        "testBuildQueryForInsertAggregated",
        "month 3 is April",
        "try catch",
        "testBuildUpdateForUpdateNumerical",
        "month 3 is April",
        "try catch",
        "try catch",
        "try catch",
        "Offsets for days start by 0, this the fifth day is 4",
        "try catch",
        "Offsets for months start by 0, thus April is 3",
        "try catch",
        "testBuildUpdateForUpdateString",
        "MongoBackendImplTest"
    ],
    "docstrings": [
        "* Copyright 2017 Telefonica Investigación y Desarrollo, S.A.U\n *\n * This file is part of fiware-cygnus (FIWARE project).\n *\n * fiware-cygnus is free software: you can redistribute it and/or modify it under the terms of the GNU Affero\n * General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your\n * option) any later version.\n * fiware-cygnus is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the\n * implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License\n * for more details.\n *\n * You should have received a copy of the GNU Affero General Public License along with fiware-cygnus. If not, see\n * http://www.gnu.org/licenses/.\n *\n * For those usages not covered by the GNU Affero General Public License please contact with iot_support at tid dot es",
        "*\n * @author frb",
        "* Constructor.",
        "* [MongoBackendImpl.getRange] -------- Given a resolution, its related range is correctly returned.",
        "* [MongoBackendImpl.getOrigin] -------- Given a calendar and a resolution, its related origin is correctly\n     * returned.",
        "* [MongoBackendImpl.getOffset] -------- Given a calendar and a resolution, its related offset is correctly\n     * returned.",
        "* [MongoBackendImpl.buildQueryForInsertAggregated] -------- Given a calendar, a resolution, an entity ID and type\n     * and a attribute name, a query for insert if built\n     * returned.",
        "* [MongoBackendImpl.buildUpdateForUpdate] -------- Given a calendar, an attribute type and pre-aggregated numerical\n     * values, an aggregation update is created.",
        "* [MongoBackendImpl.buildUpdateForUpdate] -------- Given a calendar, an attribute type and pre-aggregated string\n     * values, an aggregation update is created."
    ],
    "functions": [
        "MongoBackendImplTest",
        "testGetRange",
        "testGetOrigin",
        "testGetOffset",
        "testBuildQueryForInsertAggregated",
        "testBuildUpdateForUpdateNumerical",
        "testBuildUpdateForUpdateString"
    ],
    "classes": [
        "MongoBackendImplTest"
    ]
}