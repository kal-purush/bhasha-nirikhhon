{
    "identifiers": [
        "org",
        "jnetpcap",
        "Pcap",
        "org",
        "jnetpcap",
        "packet",
        "JPacket",
        "org",
        "jnetpcap",
        "packet",
        "JPacketHandler",
        "java",
        "util",
        "regex",
        "Pattern",
        "Override",
        "packet",
        "ids_array",
        "ids",
        "ids_array",
        "ids",
        "handlePacket",
        "packet",
        "args",
        "path",
        "args",
        "errbuf",
        "pcap",
        "Pcap",
        "openOffline",
        "path",
        "errbuf",
        "pcap",
        "err",
        "errbuf",
        "policy",
        "policy",
        "host_port",
        "policy",
        "Policy",
        "SubPolicyType",
        "TO_HOST",
        "policy",
        "regex",
        "Pattern",
        "compile",
        "ids",
        "policy",
        "pcap",
        "loop",
        "Pcap",
        "LOOP_INFINITE",
        "ids",
        "pcap",
        "close"
    ],
    "literals": [
        "\"Now I own your computer\""
    ],
    "variables": [],
    "comments": [
        "// Create a policy for the first part",
        "StatelessPolicy policy = new StatelessPolicy();",
        "policy.host_ip = \"192.168.0.1\";",
        "policy.name = \"Blame Attack 1\";",
        "policy.protocol = StatelessPolicy.Protocol.TCP;",
        "policy.host_port = 110;",
        "",
        "StatelessPolicy.SubPolicy sub_policy = new StatelessPolicy.SubPolicy();",
        "sub_policy.type = Policy.SubPolicyType.FROM_HOST;",
        "sub_policy.pattern = Pattern.compile(\"OK.*\\r\\n\");",
        "policy.sub_policies.add(sub_policy);",
        "",
        "sub_policy = new StatelessPolicy.SubPolicy();",
        "sub_policy.type = Policy.SubPolicyType.TO_HOST;",
        "sub_policy.pattern = Pattern.compile(\"USER .*\\r\\n\");",
        "policy.sub_policies.add(sub_policy);",
        "",
        "sub_policy = new StatelessPolicy.SubPolicy();",
        "sub_policy.type = Policy.SubPolicyType.FROM_HOST;",
        "sub_policy.pattern = Pattern.compile(\"OK.*\\r\\n\");",
        "policy.sub_policies.add(sub_policy);",
        "",
        "sub_policy = new StatelessPolicy.SubPolicy();",
        "sub_policy.type = Policy.SubPolicyType.TO_HOST;",
        "sub_policy.pattern = Pattern.compile(\"PASS.*\\r\\n\");",
        "policy.sub_policies.add(sub_policy);",
        "",
        "sub_policy = new StatelessPolicy.SubPolicy();",
        "sub_policy.type = Policy.SubPolicyType.FROM_HOST;",
        "sub_policy.pattern = Pattern.compile(\"OK.*\\r\\n\");",
        "policy.sub_policies.add(sub_policy);",
        "StatelessPolicy policy = new StatelessPolicy();",
        "policy.host_ip = \"192.168.0.1\";",
        "policy.name = \"TFTP Attacker boot\";",
        "policy.protocol = StatelessPolicy.Protocol.UDP;",
        "policy.attacker_port = 69;",
        "",
        "StatelessPolicy.SubPolicy sub_policy = new StatelessPolicy.SubPolicy();",
        "sub_policy.type = Policy.SubPolicyType.FROM_HOST;",
        "sub_policy.pattern = Pattern.compile(\"vmlinuz\");",
        "policy.sub_policies.add(sub_policy);",
        "",
        "sub_policy = new StatelessPolicy.SubPolicy();",
        "sub_policy.type = Policy.SubPolicyType.TO_HOST;",
        "//sub_policy.pattern = Pattern.compile(\"\\x00\\x03\\x00\\x01\");",
        "policy.sub_policies.add(sub_policy);",
        "Check the policy",
        "Close the file"
    ],
    "docstrings": [
        "* Created by Will on 4/12/2017."
    ],
    "functions": [
        "nextPacket",
        "main"
    ],
    "classes": [
        "Driver",
        "PacketIterator"
    ]
}