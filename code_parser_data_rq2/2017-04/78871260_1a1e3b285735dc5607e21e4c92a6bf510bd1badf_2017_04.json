{
    "identifiers": [
        "Injectable",
        "Http",
        "Response",
        "Headers",
        "RequestOptions",
        "Ride",
        "Observable",
        "Injectable",
        "http",
        "res",
        "res",
        "error",
        "Observable",
        "error",
        "body",
        "body",
        "Headers",
        "RequestOptions",
        "headers",
        "body",
        "options",
        "res",
        "res",
        "error",
        "Observable",
        "error",
        "body",
        "body",
        "Headers",
        "RequestOptions",
        "headers",
        "body",
        "body",
        "options",
        "res",
        "res",
        "error",
        "Observable",
        "error",
        "id",
        "id",
        "res",
        "res",
        "error",
        "Observable",
        "error"
    ],
    "literals": [
        "'@angular/core'",
        "'@angular/http'",
        "'../models/ride'",
        "'rxjs/Rx'",
        "'rxjs/add/operator/map'",
        "'rxjs/add/operator/catch'",
        "'http://my.scoop.com:8080/notes'",
        "'Server error'",
        "'Content-Type'",
        "'application/json'",
        "'Server error'",
        "'Content-Type'",
        "'application/json'",
        "${this.ridesUrl}/${body['id']}",
        "'id'",
        "'Server error'",
        "string",
        "${this.ridesUrl}/${id}",
        "'Server error'"
    ],
    "variables": [
        "bodyString",
        "headers",
        "options",
        "bodyString",
        "headers",
        "options"
    ],
    "comments": [
        "Resolve HTTP using the constructor",
        "private instance variable to hold base url",
        "Fetch all existing rides",
        "...using get request",
        "...and calling .json() on the response to return data",
        "...errors if any",
        "Post a new Ride",
        "Stringify payload",
        ",'Authorization': `Bearer ${token}`",
        "... Set content type to JSON",
        "Create a request option",
        "...using post request",
        "...and calling .json() on the response to return data",
        "...errors if any",
        "Update a Ride",
        "Stringify payload",
        "... Set content type to JSON",
        "Create a request option",
        "...using put request",
        "...and calling .json() on the response to return data",
        "...errors if any",
        "Delete a Ride",
        "...using put request",
        "...and calling .json() on the response to return data",
        "...errors if"
    ],
    "docstrings": [],
    "functions": [
        "getRides",
        "addRide",
        "updateRide",
        "removeRide"
    ],
    "classes": [
        "RideService"
    ]
}