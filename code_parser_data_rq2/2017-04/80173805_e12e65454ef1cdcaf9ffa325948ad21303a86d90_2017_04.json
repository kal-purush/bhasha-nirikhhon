{
    "identifiers": [
        "Diagnostics",
        "Tracing",
        "BrowserEfficiencyTest",
        "EventSource",
        "Name",
        "EventSource",
        "ScenarioEventSourceProvider",
        "EventTask",
        "EventTask",
        "EventTask",
        "EventTask",
        "EventTask",
        "Event",
        "Opcode",
        "EventOpcode",
        "Start",
        "Tasks",
        "WorkloadExecution",
        "Workload",
        "Browser",
        "WprProfile",
        "Iteration",
        "Attempt",
        "WriteEvent",
        "Workload",
        "Browser",
        "WprProfile",
        "Iteration",
        "Attempt",
        "Event",
        "Opcode",
        "EventOpcode",
        "Stop",
        "Tasks",
        "WorkloadExecution",
        "Workload",
        "Browser",
        "WprProfile",
        "Iteration",
        "Attempt",
        "WriteEvent",
        "Workload",
        "Browser",
        "WprProfile",
        "Iteration",
        "Attempt",
        "Event",
        "Opcode",
        "EventOpcode",
        "Start",
        "Tasks",
        "ScenarioExecution",
        "Browser",
        "ScenarioName",
        "WriteEvent",
        "Browser",
        "ScenarioName",
        "Event",
        "Opcode",
        "EventOpcode",
        "Stop",
        "Tasks",
        "ScenarioExecution",
        "Browser",
        "ScenarioName",
        "WriteEvent",
        "Browser",
        "ScenarioName",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "Browser",
        "WriteEvent",
        "Browser",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "Browser",
        "WriteEvent",
        "Browser",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "Url",
        "WriteEvent",
        "Url",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "WriteEvent",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "ElementText",
        "WriteEvent",
        "ElementText",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "StartingTabCount",
        "EndingTabCount",
        "WriteEvent",
        "StartingTabCount",
        "EndingTabCount",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "TabHandle",
        "WriteEvent",
        "TabHandle",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "Browser",
        "WriteEvent",
        "Browser",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "WriteEvent",
        "Event",
        "Opcode",
        "EventOpcode",
        "Start",
        "Tasks",
        "Wait",
        "SecondsToWait",
        "WriteEvent",
        "SecondsToWait",
        "Event",
        "Opcode",
        "EventOpcode",
        "Stop",
        "Tasks",
        "Wait",
        "SecondsToWait",
        "WriteEvent",
        "SecondsToWait",
        "Event",
        "Opcode",
        "EventOpcode",
        "Start",
        "Tasks",
        "TypeIntoField",
        "NumCharacters",
        "WriteEvent",
        "NumCharacters",
        "Event",
        "Opcode",
        "EventOpcode",
        "Stop",
        "Tasks",
        "TypeIntoField",
        "NumCharacters",
        "WriteEvent",
        "NumCharacters",
        "Event",
        "Opcode",
        "EventOpcode",
        "Start",
        "Tasks",
        "SendKeys",
        "NumCharacters",
        "WriteEvent",
        "NumCharacters",
        "Event",
        "Opcode",
        "EventOpcode",
        "Stop",
        "Tasks",
        "SendKeys",
        "NumCharacters",
        "WriteEvent",
        "NumCharacters",
        "Event",
        "Opcode",
        "EventOpcode",
        "Info",
        "WriteEvent"
    ],
    "literals": [
        "\"BrowserEfficiencyTest.ScenarioRunnerEventLog\""
    ],
    "variables": [
        "ScenarioEventSourceProvider",
        "EventLog",
        "EventTask",
        "WorkloadExecution",
        "EventTask",
        "ScenarioExecution",
        "EventTask",
        "Wait",
        "EventTask",
        "SendKeys",
        "EventTask",
        "TypeIntoField"
    ],
    "comments": [
        "--------------------------------------------------------------",
        "",
        "Browser Efficiency Test",
        "Copyright(c) Microsoft Corporation",
        "All rights reserved.",
        "",
        "MIT License",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining",
        "a copy of this software and associated documentation files(the \"\"Software\"\"),",
        "to deal in the Software without restriction, including without limitation the rights",
        "to use, copy, modify, merge, publish, distribute, sublicense, and / or sell copies",
        "of the Software, and to permit persons to whom the Software is furnished to do so,",
        "subject to the following conditions :",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,",
        "INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS",
        "FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS",
        "OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,",
        "WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF",
        "OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "",
        "--------------------------------------------------------------",
        "This is the event provider class for BrowserEfficiencyTest.",
        "These events can be captured using Windows Performance Recorder (WPR).",
        "The Provider name is \"BrowserEfficiencyTest.ScenarioRunnerEventLog\".",
        "</summary>",
        "the Singleton instance of our event provider",
        "By using Tasks along with the start and stop opcodes WPA is able to identify the region between these start and stop",
        "opcodes as being significant or useful and will allow easier highlighting in WPA timelines."
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "WorkloadStart",
        "WorkloadStop",
        "ScenarioExecutionStart",
        "ScenarioExecutionStop",
        "LaunchWebDriver",
        "MaximizeBrowser",
        "NavigateToUrl",
        "PageReadyState",
        "ClickElement",
        "OpenNewTab",
        "SwitchTab",
        "CloseBrowser",
        "ScrollEvent",
        "WaitStart",
        "WaitStop",
        "TypeIntoFieldStart",
        "TypeIntoFieldStop",
        "SendKeysStart",
        "SendKeysStop",
        "NavigateBack"
    ],
    "classes": [
        "ScenarioEventSourceProvider",
        "Tasks"
    ]
}