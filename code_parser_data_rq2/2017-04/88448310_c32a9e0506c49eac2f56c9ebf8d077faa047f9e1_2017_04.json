{
    "identifiers": [
        "datetime",
        "datetime",
        "timedelta",
        "game_events_parser",
        "GameEventsParser",
        "linescore_parser",
        "LinescoreParser",
        "time",
        "json",
        "logging",
        "aiohttp",
        "discord",
        "asyncio",
        "open",
        "SETTINGS_FILE",
        "data",
        "json",
        "load",
        "data",
        "settings",
        "get",
        "DISCORD_CLIENT_ID",
        "settings",
        "get",
        "DISCORD_CLIENT_SECRET",
        "settings",
        "get",
        "DISCORD_TOKEN",
        "settings",
        "get",
        "DISCORD_GAME_THREAD_CHANNEL_ID",
        "settings",
        "get",
        "BOT_TIME_ZONE",
        "settings",
        "get",
        "TEAM_TIME_ZONE",
        "settings",
        "get",
        "TEAM_CODE",
        "datetime",
        "today",
        "strftime",
        "today",
        "atbat",
        "format",
        "atbat",
        "atbat",
        "atbat",
        "atbat",
        "atbat",
        "atbat",
        "atbat",
        "atbat",
        "linescore",
        "format",
        "formatLinescoreForDiscord",
        "atbat",
        "linescore",
        "formatPitchCount",
        "atbat",
        "atbat",
        "atbat",
        "atbat",
        "atbat",
        "linescore",
        "format",
        "atbat",
        "atbat",
        "linescore",
        "linescore",
        "linescore",
        "linescore",
        "formatOuts",
        "atbat",
        "linescore",
        "linescore",
        "linescore",
        "linescore",
        "outs",
        "outs",
        "join",
        "outs",
        "outOrOuts",
        "gameEvent",
        "balls",
        "strikes",
        "gameEvent",
        "format",
        "balls",
        "strikes",
        "gameEvent",
        "topOrBot",
        "result",
        "MetsAreBatting",
        "topOrBot",
        "open",
        "GAME_THREAD_LOG",
        "log",
        "line",
        "log",
        "line",
        "split",
        "splitLine",
        "idsFromLog",
        "append",
        "id",
        "log",
        "close",
        "idsFromLog",
        "atbat",
        "open",
        "GAME_THREAD_LOG",
        "log",
        "atbat",
        "atbat",
        "log",
        "write",
        "format",
        "getTime",
        "id",
        "formatAtBatLineForLog",
        "atbat",
        "log",
        "close",
        "format",
        "getTime",
        "formatAtBatLineForLog",
        "atbat",
        "id",
        "gameStatus",
        "open",
        "GAME_THREAD_LOG",
        "log",
        "log",
        "write",
        "format",
        "getTime",
        "id",
        "gameStatus",
        "log",
        "close",
        "format",
        "getTime",
        "gameStatus",
        "atbat",
        "linescore",
        "formatAtBatForDiscord",
        "atbat",
        "linescore",
        "comment",
        "client",
        "channel",
        "read_settings",
        "error_msg",
        "error_msg",
        "GameEventsParser",
        "LinescoreParser",
        "getEventIdsFromLog",
        "datetime",
        "now",
        "timedelta",
        "hours",
        "url",
        "todaysGame",
        "strftime",
        "todaysGame",
        "strftime",
        "todaysGame",
        "strftime",
        "response",
        "format",
        "getTime",
        "aiohttp",
        "ClientSession",
        "session",
        "session",
        "get",
        "url",
        "resp",
        "resp",
        "status",
        "format",
        "getTime",
        "url",
        "resp",
        "text",
        "response",
        "split",
        "v",
        "html",
        "TEAM_CODE",
        "v",
        "v",
        "v",
        "index",
        "len",
        "v",
        "v",
        "v",
        "index",
        "directories",
        "append",
        "url",
        "v",
        "format",
        "getTime",
        "TEAM_CODE",
        "directories",
        "format",
        "getTime",
        "url",
        "time",
        "sleep",
        "d",
        "directories",
        "join",
        "d",
        "format",
        "getTime",
        "linescore_url",
        "linescoreParser",
        "doesJSONExistYet",
        "linescore_url",
        "format",
        "getTime",
        "linescoreParser",
        "getJSONFromURL",
        "linescore_url",
        "linescoreParser",
        "parseGameDataIntoMap",
        "linescoreJSON",
        "join",
        "d",
        "format",
        "getTime",
        "game_events_url",
        "gameEventsParser",
        "doesJSONExistYet",
        "game_events_url",
        "format",
        "getTime",
        "gameEventsParser",
        "getJSONFromURL",
        "game_events_url",
        "gameEventsParser",
        "gameHasStarted",
        "gameEventsParser",
        "getInnings",
        "gameEventsJSON",
        "format",
        "getTime",
        "gameEventsParser",
        "getListOfGameEvents",
        "gameEventsParser",
        "getInnings",
        "gameEventsJSON",
        "checkIfGameStartedStatus",
        "linescore",
        "idsOfPrevEvents",
        "gameStartedEmbed",
        "client",
        "send_message",
        "channel",
        "embed",
        "gameStartedEmbed",
        "gameEvent",
        "listOfGameEvents",
        "gameEvent",
        "gameEvent",
        "id",
        "idsOfPrevEvents",
        "printToLog",
        "gameEvent",
        "client",
        "send_message",
        "channel",
        "commentOnDiscord",
        "gameEvent",
        "linescore",
        "getEventIdsFromLog",
        "checkIfGameEndedStatus",
        "linescore",
        "idsOfPrevEvents",
        "gameEndedTuple",
        "client",
        "send_message",
        "channel",
        "embed",
        "gameEndedTuple",
        "client",
        "send_message",
        "channel",
        "gameEndedTuple",
        "getEventIdsFromLog",
        "ex",
        "logging",
        "exception",
        "time",
        "sleep",
        "linescore",
        "idsOfPrevEvents",
        "linescore",
        "linescore",
        "gameStatus",
        "id",
        "idsOfPrevEvents",
        "printGameStatusToLog",
        "id",
        "gameStatus",
        "discord",
        "Embed",
        "title",
        "description",
        "em",
        "linescore",
        "idsOfPrevEvents",
        "linescore",
        "linescore",
        "gameStatus",
        "id",
        "idsOfPrevEvents",
        "gameStatus",
        "gameStatus",
        "id",
        "idsOfPrevEvents",
        "id",
        "idsOfPrevEvents",
        "printGameStatusToLog",
        "id",
        "gameStatus",
        "areMetsWinning",
        "linescore",
        "discord",
        "Embed",
        "title",
        "description",
        "discord",
        "Embed",
        "title",
        "description",
        "em",
        "linescore",
        "linescore",
        "linescore",
        "linescore",
        "metsAreHomeTeam",
        "homeTeamRuns",
        "awayTeamRuns",
        "metsAreHomeTeam",
        "homeTeamRuns",
        "awayTeamRuns",
        "BaseballUpdaterBot",
        "baseballUpdaterBot",
        "run"
    ],
    "literals": [
        "r'<Path to game_thread.now>'",
        "'../settings.json'",
        "'DISCORD_CLIENT_ID'",
        "\"Missing DISCORD_CLIENT_ID\"",
        "'DISCORD_CLIENT_SECRET'",
        "\"Missing DISCORD_CLIENT_SECRET\"",
        "'DISCORD_TOKEN'",
        "\"Missing DISCORD_TOKEN\"",
        "'DISCORD_GAME_THREAD_CHANNEL_ID'",
        "\"Missing DISCORD_GAME_THREAD_CHANNEL_ID\"",
        "'BOT_TIME_ZONE'",
        "\"Missing BOT_TIME_ZONE\"",
        "'TEAM_TIME_ZONE'",
        "\"Missing TEAM_TIME_ZONE\"",
        "'TEAM_CODE'",
        "\"Missing TEAM_CODE\"",
        "\"%Y/%m/%d %H:%M:%S\"",
        "\"{} {} | B:{} S:{} O:{}; Result: {}; Description: {}\"",
        "'topOrBot'",
        "'inning'",
        "'balls'",
        "'strikes'",
        "'outs'",
        "'result'",
        "'description'",
        "\"```\"",
        "\"{}\\n\"",
        "\"{}{}\"",
        "\"```\"",
        "'gameEvent'",
        "'balls'",
        "'strikes'",
        "'description'",
        "\"         ┌───┬──┬──┬──┐\\n\"",
        "\"{} {:>2}   │{}│{:>2}│{:>2}│{:>2}│\\n\"",
        "\"         ├───┼──┼──┼──┤\\n\"",
        "\"{}   │{}│{:>2}│{:>2}│{:>2}│\\n\"",
        "\"         └───┴──┴──┴──┘\"",
        "'topOrBot'",
        "'inning'",
        "'away_team_name'",
        "'team_abbrev'",
        "'away_team_stats'",
        "'team_runs'",
        "'away_team_stats'",
        "'team_hits'",
        "'away_team_stats'",
        "'team_errors'",
        "'outs'",
        "'home_team_name'",
        "'team_abbrev'",
        "'home_team_stats'",
        "'team_runs'",
        "'home_team_stats'",
        "'team_hits'",
        "'home_team_stats'",
        "'team_errors'",
        "\" Outs\"",
        "\"1\"",
        "\"  Out\"",
        "\"\"",
        "'atbat'",
        "\"On a {}-{} count, \"",
        "'action'",
        "\"\"",
        "\"gameEvent not recognized\"",
        "\" \"",
        "\"a\"",
        "'id'",
        "'id'",
        "\"NoIdInJSONFile\"",
        "\"[{}] [{}] | {}\\n\"",
        "\"[{}] New atBat: {}\"",
        "\"a\"",
        "\"[{}] [{}] | Game Status: {}\\n\"",
        "\"[{}] Game Status: {}\"",
        "\"http://gd2.mlb.com/components/game/mlb/\"",
        "\"year_\"",
        "\"%Y\"",
        "\"/month_\"",
        "\"%m\"",
        "\"/day_\"",
        "\"%d\"",
        "\"/\"",
        "\"[{}] Searching for day's URL...\"",
        "\"[{}] Found day's URL: {}\"",
        "'\\n'",
        "\"\\\"\"",
        "\"\\\"\"",
        "\"[{}] Found game directory for team {}: {}\"",
        "\"[{}] Couldn't find URL \\\"{}\\\", trying again...\"",
        "\"\"",
        "\"linescore.json\"",
        "\"[{}] Searching the linescore URL for updates: {}\"",
        "\"[{}] Game has not started\"",
        "\"\"",
        "\"game_events.json\"",
        "\"[{}] Searching the game URL for updates: {}\"",
        "\"[{}] Game has not started\"",
        "\"[{}] Game has not started yet\"",
        "'id'",
        "'id'",
        "\"NoIdInJSONFile\"",
        "\"Exception occured\"",
        "\"/*------------- End of Bot.run() -------------*/\"",
        "'status'",
        "'game_status_id'",
        "'status'",
        "'game_status'",
        "\"Warmup\"",
        "'Play ball!'",
        "'Mets game has started.'",
        "'status'",
        "'game_status_id'",
        "'status'",
        "'game_status'",
        "\"Game Over\"",
        "\"Game Over\"",
        "\"Final\"",
        "'Put it in the books!'",
        "'Mets win!'",
        "'https://www.youtube.com/watch?v=mmwic9kFx2c'",
        "'Mets defeated'",
        "'Clearly 100% Terry\\'s fault'",
        "'[Mets W-L record or something'",
        "'home_team_stats'",
        "'team_runs'",
        "'away_team_stats'",
        "'team_runs'",
        "'home_team_name'",
        "'team_abbrev'",
        "\"NYM\"",
        "'__main__'"
    ],
    "variables": [
        "GAME_THREAD_LOG",
        "SETTINGS_FILE",
        "BOT_TIME_ZONE",
        "TEAM_TIME_ZONE",
        "TEAM_CODE",
        "settings",
        "DISCORD_CLIENT_ID",
        "DISCORD_CLIENT_SECRET",
        "DISCORD_TOKEN",
        "DISCORD_GAME_THREAD_CHANNEL_ID",
        "BOT_TIME_ZONE",
        "TEAM_TIME_ZONE",
        "TEAM_CODE",
        "today",
        "outOrOuts",
        "outOrOuts",
        "idsFromLog",
        "splitLine",
        "id",
        "id",
        "comment",
        "error_msg",
        "gameEventsParser",
        "linescoreParser",
        "idsOfPrevEvents",
        "response",
        "directories",
        "todaysGame",
        "url",
        "url",
        "response",
        "html",
        "v",
        "v",
        "linescore_url",
        "linescoreJSON",
        "linescore",
        "game_events_url",
        "gameEventsJSON",
        "listOfGameEvents",
        "gameStartedEmbed",
        "id",
        "idsOfPrevEvents",
        "gameEndedTuple",
        "idsOfPrevEvents",
        "id",
        "gameStatus",
        "em",
        "id",
        "gameStatus",
        "em",
        "em",
        "homeTeamRuns",
        "awayTeamRuns",
        "metsAreHomeTeam",
        "baseballUpdaterBot"
    ],
    "comments": [
        "return \"|!{}|testNYM|!{}|testHits|testErrors|  \\n  |!{} Outs |testPHI|!{}|testHits|testErrors|\\n \\n\" \\",
        "\"Last Play:  On a !{}-!{} count, !{} \\n \\n !{} Use atbat[result] to play around with the result.\" \\",
        "\"If it's a Mets pitcher strikeout, post KKKKK.  If it's a Mets home run, praise Kevin Long. Animal facts, etc...\".format(",
        "atbat['topOrBot'] ,atbat['awayTeamRuns'] ,atbat['outs'] ,atbat['homeTeamRuns'] ,atbat['balls'],",
        "atbat['strikes'], atbat['description'],\"ExtraSpaceAddingThisIn\")",
        "#,self.differentFlairsForDifferentResults(atbat['topOrBot'] ,atbat['result']))",
        "",
        "Check if Mets are batting or pitching",
        "If Homerun, praise Kevin Long",
        "If Strikeout, keep track of strikeouts and put a K tracker",
        "timechecker = timecheck.TimeCheck(time_before)",
        "This list will be what is compared against to see if anything new popped up in the game_events feed",
        "if response.time is not todaysGame, response = None, directories = []",
        "If it returns a 404, try again",
        "Get the gid directory based on team code (NYM is nyn)",
        "d = \"http://gd2.mlb.com/components/game/mlb/year_2017/month_04/day_10/gid_2017_04_10_nynmlb_phimlb_1/\"",
        "get game_events from the game",
        "print \"[{}] !!! Using a hard coded URL right now for testing !!!\".format(self.getTime())",
        "game_events_url = \"http://gd2.mlb.com/components/game/mlb/year_2017/month_04/day_02/gid_2017_04_02_chnmlb_slnmlb_1/game_events.json\"",
        "Check if game started",
        "Check if new game event",
        "Only use embeds if it's a win!",
        "em = discord.Embed(title='My Embed Title', description='My Embed Content.')",
        "em.set_author(name='Someone', icon_url=client.user.default_avatar_url)",
        "Check if game ended",
        "Refresh the eventIds",
        "TCB url 'https://www.youtube.com/watch?v=mmwic9kFx2c'"
    ],
    "docstrings": [
        "'''\n\nBASEBALL GAME THREAD BOT\n\nOriginally written by:\n/u/DetectiveWoofles\n/u/avery_crudeman\n\nEditted for Discord by KimbaWLion\n\nPlease contact us on Reddit or Github if you have any questions.\n\n'''"
    ],
    "functions": [
        "read_settings",
        "getTime",
        "formatAtBatLineForLog",
        "formatAtBatForDiscord",
        "formatLinescoreForDiscord",
        "formatOuts",
        "formatPitchCount",
        "differentFlairsForDifferentResults",
        "getEventIdsFromLog",
        "printToLog",
        "printGameStatusToLog",
        "commentOnDiscord",
        "run",
        "checkIfGameStartedStatus",
        "checkIfGameEndedStatus",
        "areMetsWinning"
    ],
    "classes": [
        "BaseballUpdaterBot"
    ]
}