{
    "identifiers": [
        "cProfile",
        "Profile",
        "cStringIO",
        "StringIO",
        "ImportError",
        "io",
        "StringIO",
        "functools",
        "wraps",
        "pstats",
        "Stats",
        "random",
        "re",
        "fleece",
        "log",
        "log",
        "getLogger",
        "re",
        "compile",
        "re",
        "compile",
        "stream",
        "logger",
        "stream",
        "getvalue",
        "raw_string",
        "split",
        "RE_SUMMARY_LINE",
        "match",
        "lines",
        "match_summary",
        "match_summary",
        "groupdict",
        "line",
        "lines",
        "RE_PROFILE_LINE",
        "match",
        "line",
        "match",
        "profiling_data",
        "append",
        "match",
        "groupdict",
        "logger",
        "info",
        "lambda_event",
        "profiling_data",
        "profiling_data",
        "extra_dict",
        "sample",
        "PROFILE_SAMPLE",
        "stats_filter",
        "stats_limit",
        "DEFAULT_LIMIT",
        "logger",
        "DEFAULT_LOGGER",
        "func",
        "wraps",
        "func",
        "context",
        "args",
        "kwargs",
        "random",
        "random",
        "PROFILE_SAMPLE",
        "stats_filter",
        "DEFAULT_FILTER",
        "print_stats_filter",
        "append",
        "stats_limit",
        "Profile",
        "profile",
        "enable",
        "func",
        "context",
        "args",
        "kwargs",
        "profile",
        "disable",
        "StringIO",
        "Stats",
        "profile",
        "stream",
        "stream",
        "stats",
        "sort_stats",
        "print_stats",
        "print_stats_filter",
        "process_profiling_data",
        "stream",
        "logger",
        "logger",
        "info",
        "func",
        "context",
        "args",
        "kwargs",
        "return_value",
        "wrapper",
        "decorator"
    ],
    "literals": [
        "'profiler'",
        "r'^\\s+(?P<total_calls>\\d+) function calls '",
        "r'\\((?P<primitive_calls>\\d+) primitive calls\\) '",
        "r'in (?P<total_time>\\d+\\.\\d+) seconds$'",
        "r'^\\s+(?P<ncalls>\\d+)\\s+'",
        "r'(?P<tottime>\\d+\\.\\d+)\\s+'",
        "r'(?P<tpercall>\\d+\\.\\d+)\\s+'",
        "r'(?P<cumtime>\\d+\\.\\d+)\\s+'",
        "r'(?P<cpercall>\\d+\\.\\d+)\\s+'",
        "r'(?P<filename>.*):(?P<lineno>\\d+)\\((?P<function>.*)\\)$'",
        "'/var/task/'",
        "'\\n'",
        "'Profiling completed'",
        "'cumulative'",
        "'Skipping profiling'"
    ],
    "variables": [
        "DEFAULT_LOGGER",
        "RE_SUMMARY_LINE",
        "RE_PROFILE_LINE",
        "PROFILE_SAMPLE",
        "DEFAULT_FILTER",
        "DEFAULT_LIMIT",
        "profiling_data",
        "extra_dict",
        "raw_string",
        "lines",
        "match_summary",
        "extra_dict",
        "match",
        "print_stats_filter",
        "profile",
        "return_value",
        "stream",
        "stats",
        "return_value"
    ],
    "comments": [
        "StringIO was moved in Python 3",
        "Percentage of calls that should be profiled",
        "This means that only code that is part of the uploaded Lambda package will",
        "be present in the profiling report. This will include bundled dependencies,",
        "but not the standard library, or packages that are provided by Lambda",
        "(boto*).",
        "First line contains a summary of the profiled data.",
        "In the rest of the data, there might be empty lines, so we have to handle",
        "non-matching lines gracefully."
    ],
    "docstrings": [],
    "functions": [
        "process_profiling_data",
        "profile_handler",
        "decorator",
        "wrapper"
    ],
    "classes": []
}