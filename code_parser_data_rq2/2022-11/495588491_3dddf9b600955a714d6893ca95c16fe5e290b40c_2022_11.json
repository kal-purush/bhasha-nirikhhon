{
    "identifiers": [
        "json",
        "pytest",
        "hab",
        "merge_dict",
        "MergeDict",
        "pytest",
        "mark",
        "parametrize",
        "config_root",
        "filename",
        "platforms",
        "config_root",
        "filename",
        "json_path",
        "open",
        "fle",
        "json",
        "load",
        "fle",
        "test_data",
        "test_data",
        "platforms",
        "platforms",
        "MergeDict",
        "kwargs",
        "merger",
        "apply_platform_wildcards",
        "in_data",
        "result",
        "out_data",
        "pytest",
        "mark",
        "parametrize",
        "config_root",
        "filename",
        "config_root",
        "filename",
        "json_path",
        "open",
        "fle",
        "json",
        "load",
        "fle",
        "test_data",
        "test_data",
        "test_data",
        "MergeDict",
        "merger",
        "apply_platform_wildcards",
        "file_one",
        "merger",
        "apply_platform_wildcards",
        "file_two",
        "output",
        "result",
        "result",
        "out_data"
    ],
    "literals": [
        "\"filename,platforms\"",
        "\"os_agnostic.json\"",
        "\"os_agnostic_platforms.json\"",
        "\"reactos\"",
        "\"os_specific.json\"",
        "\"os_specific_false.json\"",
        "\"os_specific_platforms.json\"",
        "\"reactos\"",
        "\"merge_dict\"",
        "\"in_data\"",
        "\"out_data\"",
        "\"platforms\"",
        "\"filename\"",
        "\"merge_agnostic.json\"",
        "\"merge_specific.json\"",
        "\"merge_dict\"",
        "\"file_one\"",
        "\"file_two\"",
        "\"out_data\""
    ],
    "variables": [
        "json_path",
        "test_data",
        "in_data",
        "out_data",
        "kwargs",
        "kwargs",
        "merger",
        "result",
        "json_path",
        "test_data",
        "file_one",
        "file_two",
        "out_data",
        "merger",
        "result",
        "result"
    ],
    "comments": [
        "if os_specific is not set, add the variables to all platforms",
        "If platform is specified, only the requested platforms are returned",
        "os_specific is set, so merge \"*\" with each platform",
        "if os_specific is set to False, treat it the same as os_agnostic",
        "If platform is specified in an os_specific context, only the requested",
        "platforms are returned",
        "The data to feed the apply_platform_wildcards method",
        "The output from the apply_platform_wildcards method to check against",
        "The data to feed the apply_platform_wildcards method",
        "The output from the apply_platform_wildcards method to check against"
    ],
    "docstrings": [
        "\"\"\"Test merging of \"*\" os specific dicts into platform specific dictionaries\"\"\"",
        "\"\"\"Test that we can merge multiple \"*\" dicts into a single dict.\"\"\""
    ],
    "functions": [
        "test_apply_platform_wildcards",
        "test_merge"
    ],
    "classes": []
}