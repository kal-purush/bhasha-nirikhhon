{
    "identifiers": [
        "aws_cdk",
        "cdk",
        "aws_cdk",
        "aws_cloudwatch",
        "cloudwatch",
        "aws_cdk",
        "aws_servicecatalogappregistry",
        "appregistry",
        "constructs",
        "Construct",
        "constants",
        "backend",
        "api",
        "infrastructure",
        "API",
        "backend",
        "database",
        "infrastructure",
        "Database",
        "Construct",
        "scope",
        "Construct",
        "id_",
        "api",
        "API",
        "database",
        "Database",
        "scope",
        "id_",
        "Metadata",
        "api",
        "api",
        "Monitoring",
        "api",
        "api",
        "database",
        "database",
        "Construct",
        "scope",
        "Construct",
        "id_",
        "api",
        "API",
        "scope",
        "id_",
        "api",
        "api_gateway_http_api",
        "url",
        "api",
        "lambda_function_asset",
        "appregistry",
        "CfnAttributeGroup",
        "attributes",
        "attributes",
        "name",
        "cdk",
        "Names",
        "unique_resource_name",
        "appregistry_attribute_group",
        "appregistry",
        "CfnAttributeGroupAssociation",
        "application",
        "constants",
        "APP_NAME",
        "attribute_group",
        "appregistry_attribute_group",
        "name",
        "appregistry_attribute_group_association",
        "add_depends_on",
        "appregistry_attribute_group",
        "Construct",
        "scope",
        "Construct",
        "id_",
        "api",
        "API",
        "database",
        "Database",
        "scope",
        "id_",
        "cloudwatch",
        "SingleValueWidget",
        "metrics",
        "api",
        "api_gateway_http_api",
        "metric_count",
        "cloudwatch",
        "SingleValueWidget",
        "metrics",
        "database",
        "dynamodb_table",
        "metric_consumed_read_capacity_units",
        "cloudwatch",
        "Dashboard",
        "widgets",
        "widgets"
    ],
    "literals": [
        "\"Metadata\"",
        "\"Monitoring\"",
        "\"api_endpoint\"",
        "\"api_runtime_asset\"",
        "\"AppRegistryAttributeGroup\"",
        "\"PLACEHOLDER\"",
        "\"AppRegistryAttributeGroupAssociation\"",
        "\"CloudWatchDashboard\""
    ],
    "variables": [
        "attributes",
        "appregistry_attribute_group",
        "appregistry_attribute_group",
        "name",
        "appregistry_attribute_group_association",
        "widgets"
    ],
    "comments": [
        "Setting attribute group name to a value that doesn't depend on construct path",
        "will prevent refactoring the construct path down to the attribute group",
        "definition, including its own construct ID. AWS CloudFormation will try",
        "to create a new attribute group with the same name, which will fail.",
        "",
        "To enable the refactoring, I set the attribute group name to a \"PLACEHOLDER\"",
        "value to instantiate the attribute group construct. I later replace the",
        "placeholder value with the attribute group construct unique resource name.",
        "",
        "Now when refactoring the construct path down to the attribute group, the",
        "attribute group name will change. This will allow CloudFormation to perform",
        "the update.",
        "",
        "The trade-off is longer attribute group name, but no risk of failing",
        "CloudFormation deployment due to attribute group name collision.",
        "",
        "Example of attribute group name that would lead to failure:",
        "\"UserManagementBackendSandbox\"",
        "",
        "Example of attribute group name based on construct path that would succeed:",
        "\"UserManagementBackendSandboxOperationsMetadataAppRegistryAttributeGroup5C997743\"",
        "Need explicit dependency because attribute group name is known",
        "at synth time. CloudFormation would deploy the attribute group and the",
        "attribute group association in parallel, and fail. Using attribute group ID",
        "would work, but would not be explicit."
    ],
    "docstrings": [],
    "functions": [],
    "classes": [
        "Operations",
        "Metadata",
        "Monitoring"
    ]
}