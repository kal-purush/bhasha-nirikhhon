{
    "identifiers": [
        "janitor",
        "pathlib",
        "Path",
        "datetime",
        "date",
        "typing",
        "Union",
        "Tuple",
        "numpy",
        "np",
        "pandas",
        "pd",
        "pandas",
        "api",
        "extensions",
        "register_dataframe_accessor",
        "soundscapy",
        "parameters",
        "PAQ_IDS",
        "PAQ_NAMES",
        "soundscapy",
        "database",
        "db",
        "register_dataframe_accessor",
        "pandas_obj",
        "pandas_obj",
        "date",
        "today",
        "isoformat",
        "paq_aliases",
        "PAQ_NAMES",
        "allow_lockdown",
        "allow_paq_na",
        "verbose",
        "val_range",
        "db",
        "validate_dataset",
        "_obj",
        "paq_aliases",
        "paq_aliases",
        "allow_lockdown",
        "allow_lockdown",
        "allow_paq_na",
        "allow_paq_na",
        "verbose",
        "verbose",
        "val_range",
        "val_range",
        "verbose",
        "db",
        "paq_data_quality",
        "_obj",
        "verbose",
        "verbose",
        "group_ids",
        "_obj",
        "sspy",
        "group_ids",
        "location_ids",
        "_obj",
        "sspy",
        "location_ids",
        "session_ids",
        "_obj",
        "sspy",
        "session_ids",
        "record_ids",
        "_obj",
        "sspy",
        "record_ids",
        "is_lockdown",
        "_obj",
        "query",
        "is_lockdown",
        "_obj",
        "query",
        "drop",
        "db",
        "convert_column_to_index",
        "_obj",
        "drop",
        "drop",
        "incl_ids",
        "other_cols",
        "db",
        "return_paqs",
        "_obj",
        "incl_ids",
        "incl_ids",
        "other_cols",
        "other_cols",
        "location",
        "pl_threshold",
        "ev_threshold",
        "filter_location_ids",
        "location_ids",
        "location",
        "len",
        "loc_df",
        "len",
        "loc_df",
        "loc_df",
        "pl_threshold",
        "len",
        "loc_df",
        "loc_df",
        "ev_threshold",
        "len",
        "loc_df",
        "query",
        "len",
        "loc_df",
        "query",
        "len",
        "loc_df",
        "query",
        "len",
        "loc_df",
        "query",
        "count",
        "round",
        "loc_df",
        "mean",
        "round",
        "loc_df",
        "mean",
        "round",
        "pl_count",
        "count",
        "round",
        "ev_count",
        "count",
        "round",
        "vibrant_count",
        "count",
        "round",
        "chaotic_count",
        "count",
        "round",
        "mono_count",
        "count",
        "round",
        "calm_count",
        "count",
        "pl_count",
        "ev_count",
        "vibrant_count",
        "chaotic_count",
        "mono_count",
        "calm_count",
        "res",
        "group_by",
        "location",
        "location_describe",
        "location",
        "location",
        "_df",
        "group_by",
        "unique",
        "pd",
        "DataFrame",
        "from_dict",
        "res",
        "orient",
        "res",
        "version",
        "version",
        "lower",
        "ValueError",
        "version",
        "version",
        "version",
        "version",
        "version",
        "version",
        "pd",
        "read_excel",
        "url",
        "engine",
        "df",
        "pd",
        "DataFrame",
        "group",
        "pd",
        "DataFrame",
        "db",
        "mean_responses_by_group",
        "df",
        "group",
        "group",
        "df",
        "col",
        "drop",
        "db",
        "convert_column_to_index",
        "df",
        "col",
        "col",
        "drop",
        "drop",
        "df",
        "paq_aliases",
        "allow_lockdown",
        "allow_paq_na",
        "verbose",
        "val_range",
        "db",
        "validate_dataset",
        "df",
        "paq_aliases",
        "paq_aliases",
        "allow_lockdown",
        "allow_lockdown",
        "allow_paq_na",
        "allow_paq_na",
        "verbose",
        "verbose",
        "val_range",
        "val_range",
        "root_directory",
        "Path",
        "location_ids",
        "param_list",
        "include_TS",
        "include_spectrum",
        "include_WAV",
        "isinstance",
        "root_directory",
        "Path",
        "root_directory",
        "is_dir",
        "FileNotFoundError",
        "session",
        "session",
        "root_directory",
        "iterdir",
        "session",
        "is_dir",
        "session",
        "session",
        "session_dirs",
        "session",
        "name",
        "session",
        "location",
        "location_ids",
        "location",
        "session",
        "name",
        "session",
        "session_dirs",
        "val",
        "sublist",
        "new_session_dirs",
        "val",
        "sublist",
        "session",
        "session_dirs",
        "child",
        "child",
        "session",
        "iterdir",
        "child",
        "is_dir",
        "child",
        "name",
        "bin_dirs",
        "append",
        "bin_dir",
        "_ts_dirs",
        "bin_dirs",
        "param_list",
        "include_TS",
        "_spectrum_dirs",
        "bin_dirs",
        "include_spectrum",
        "_wav_dirs",
        "bin_dirs",
        "include_WAV",
        "full_ts_list",
        "full_spectrum_list",
        "full_wav_list",
        "bin_dirs",
        "directory",
        "bin_dirs",
        "child",
        "child",
        "directory",
        "iterdir",
        "child",
        "is_dir",
        "child",
        "name",
        "spectrum_dirs",
        "append",
        "spectrum_dir",
        "directory",
        "spectrum_dirs",
        "child",
        "child",
        "directory",
        "iterdir",
        "child",
        "is_dir",
        "full_spectrum_list",
        "append",
        "spectrum_dir",
        "val",
        "sublist",
        "full_spectrum_list",
        "val",
        "sublist",
        "full_spectrum_list",
        "bin_dirs",
        "param_list",
        "directory",
        "bin_dirs",
        "child",
        "child",
        "directory",
        "iterdir",
        "child",
        "is_dir",
        "child",
        "name",
        "ts_dirs",
        "append",
        "ts_dir",
        "directory",
        "ts_dirs",
        "child",
        "child",
        "directory",
        "iterdir",
        "child",
        "is_dir",
        "param_dirs",
        "append",
        "param_dir",
        "val",
        "sublist",
        "param_dirs",
        "val",
        "sublist",
        "directory",
        "param",
        "param_list",
        "param",
        "directory",
        "name",
        "directory",
        "param_dirs",
        "val",
        "sublist",
        "full_ts_list",
        "val",
        "sublist",
        "full_ts_list",
        "bin_dirs",
        "directory",
        "bin_dirs",
        "child",
        "child",
        "directory",
        "iterdir",
        "child",
        "is_dir",
        "child",
        "name",
        "wav_dirs",
        "append",
        "wav_dir",
        "wav_dirs"
    ],
    "literals": [
        "\"isd\"",
        "\"GroupID\"",
        "\"LocationID\"",
        "\"SessionID\"",
        "\"RecordID\"",
        "\"Lockdown == 1\"",
        "\"Lockdown == 0\"",
        "\"Group_ID\"",
        "\"percent\"",
        "\"ISOPleasant\"",
        "\"ISOEventful\"",
        "\"ISOPleasant > @pl_threshold & ISOEventful > @ev_threshold\"",
        "\"ISOPleasant < @pl_threshold & ISOEventful > @ev_threshold\"",
        "\"ISOPleasant < @pl_threshold & ISOEventful < @ev_threshold\"",
        "\"ISOPleasant > @pl_threshold & ISOEventful < @ev_threshold\"",
        "\"count\"",
        "\"ISOPleasant\"",
        "\"ISOPleasant\"",
        "\"ISOEventful\"",
        "\"ISOEventful\"",
        "\"percent\"",
        "\"pleasant\"",
        "\"eventful\"",
        "\"vibrant\"",
        "\"chaotic\"",
        "\"monotonous\"",
        "\"calm\"",
        "\"count\"",
        "\"pleasant\"",
        "\"eventful\"",
        "\"vibrant\"",
        "\"chaotic\"",
        "\"monotonous\"",
        "\"calm\"",
        "\"LocationID\"",
        "\"percent\"",
        "\"index\"",
        "\"latest\"",
        "\"latest\"",
        "\"v0.2.3\"",
        "\"v0.2.2\"",
        "\"v0.2.1\"",
        "\"v0.2.0\"",
        "f\"Version {version} not recognised.\"",
        "\"v0.2.3\"",
        "\"latest\"",
        "\"V0.2.0\"",
        "\"v0.2.0\"",
        "\"V0.2.1\"",
        "\"v0.2.1\"",
        "\"https://zenodo.org/record/5578573/files/SSID%20Lockdown%20Database%20VL0.2.1.xlsx\"",
        "\"V0.2.2\"",
        "\"v0.2.2\"",
        "\"https://zenodo.org/record/5705908/files/SSID%20Lockdown%20Database%20VL0.2.2.xlsx\"",
        "\"v0.2.3\"",
        "\"V0.2.3\"",
        "\"https://zenodo.org/record/5914762/files/SSID%20Lockdown%20Database%20VL0.2.2.xlsx\"",
        "\"openpyxl\"",
        "\"LocationID\"",
        "\"GroupID\"",
        "\"The directory should be provided as a WindowsPath object from pathlib.\"",
        "\"Path does not exist.\"",
        "\"OFF\"",
        "\"BIN\"",
        "\"SpectrumData\"",
        "\"TimeSeries\"",
        "\"_TS\"",
        "\"WAV\""
    ],
    "variables": [
        "_obj",
        "_analysis_data",
        "_metadata",
        "loc_df",
        "count",
        "pl_count",
        "ev_count",
        "vibrant_count",
        "chaotic_count",
        "mono_count",
        "calm_count",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "version",
        "url",
        "url",
        "url",
        "session_dirs",
        "session_dirs",
        "new_session_dirs",
        "session_dirs",
        "bin_dirs",
        "bin_dir",
        "full_ts_list",
        "full_spectrum_list",
        "full_wav_list",
        "spectrum_dirs",
        "spectrum_dir",
        "full_spectrum_list",
        "spectrum_dir",
        "full_spectrum_list",
        "ts_dirs",
        "ts_dir",
        "param_dirs",
        "param_dir",
        "param_dirs",
        "full_ts_list",
        "full_ts_list",
        "wav_dirs",
        "wav_dir"
    ],
    "comments": [
        "Customized functions specifically for the International Soundscape Database",
        "Add soundscapy to the Python path",
        "Constants and Labels",
        "Dealing with Directories!",
        "Input tests",
        "Collect list of session id directories",
        "Remove blank entries",
        "Collect Time Series parameter directories",
        "Collect Wav directories"
    ],
    "docstrings": [
        "\"\"\"Automatically fetch and load the ISD dataset from Zenodo\n\n    Parameters\n    ----------\n    version : str, optional\n        version number of the dataset to fetch, by default \"latest\"\n\n    Returns\n    -------\n    pd.Dataframe\n        ISD data\n    \"\"\"",
        "\"\"\"Calculate the mean responses for each PAQ\n\n    Parameters\n    ----------\n    df : pd.DataFrame\n        Dataframe containing ISD formatted data\n\n    Returns\n    -------\n    pd.Dataframe\n        Dataframe containing the mean responses for each PAQ\n    \"\"\"",
        "\"\"\"Reassign an existing column as the dataframe index.\"\"\"",
        "\"\"\"Validate the ISD dataset.\n\n    Parameters\n    ----------\n    df : pd.DataFrame\n        Dataframe containing ISD formatted data\n    paq_aliases : dict, optional\n        Dictionary of PAQ aliases, by default None\n    allow_lockdown : bool, optional\n        Allow lockdown PAQs?, by default False\n    allow_paq_na : bool, optional\n        Allow missing PAQs?, by default False\n    verbose : int, optional\n        Verbosity level, by default 1\n    val_range : tuple, optional\n        Range of valid values, by default (1,5)\n\n    Returns\n    -------\n    pd.DataFrame\n        Dataframe containing the validation results\n    \"\"\"",
        "\"\"\"Iterate throughout the SSID DB file structure to extract TimeSeries, SpectrumData, WAV directory paths.\n\n    Parameters\n    ----------\n    root_directory : Path\n        The city-level SSID directory\n    location_ids : list\n        A subset of LocationIDs to include in the filepath collection\n    param_list : list\n        A subset of parameters to include in the filepath collection\n    include_TS : bool, optional\n        Collect TimeSeries dirs?, by default True\n    include_spectrum : bool, optional\n        Collect SpectrumData dirs?, by default True\n    include_WAV : bool, optional\n        Collect WAV dirs?, by default True\n\n    Returns\n    -------\n    tuple of lists\n        A tuple containing the full lists of TimeSeries, SpectrumData, and WAV directories.\n        These lists contain WindowsPath objects.\n\n    Examples\n    ________\n    >>> full_ts_list, full_spectrum_list, full_wav_list = collect_all_dirs(TEST_DIR, [\"LocationA\", \"LocationB\"], PARAM_LIST)\n    >>> len(full_ts_list)\n    33\n    >>> len(full_spectrum_list)\n    6\n    >>> len(full_wav_list)\n    3\n    \"\"\""
    ],
    "functions": [
        "validate_dataset",
        "paq_data_quality",
        "filter_group_ids",
        "filter_location_ids",
        "filter_session_ids",
        "filter_record_ids",
        "filter_lockdown",
        "convert_group_ids_to_index",
        "return_paqs",
        "location_describe",
        "soundscapy_describe",
        "load_isd_dataset",
        "mean_responses",
        "convert_column_to_index",
        "validate_isd",
        "collect_all_dirs",
        "_spectrum_dirs",
        "_ts_dirs",
        "_wav_dirs"
    ],
    "classes": [
        "ISDAccessor"
    ]
}