{
    "identifiers": [
        "functools",
        "reduce",
        "numpy",
        "np",
        "scipy",
        "linalg",
        "la",
        "pyscf",
        "lib",
        "t1",
        "isinstance",
        "t1",
        "np",
        "ndarray",
        "t1",
        "ndim",
        "t1",
        "shape",
        "np",
        "zeros",
        "nocc",
        "nvir",
        "nocc",
        "nvir",
        "dtype",
        "t1",
        "dtype",
        "nocc",
        "nvir",
        "t1",
        "nvir",
        "nocc",
        "t1",
        "conj",
        "T",
        "la",
        "expm",
        "amat",
        "len",
        "t1",
        "np",
        "sum",
        "t1",
        "shape",
        "np",
        "zeros",
        "spin",
        "nmo",
        "nmo",
        "dtype",
        "np",
        "result_type",
        "t1",
        "s",
        "spin",
        "t1",
        "s",
        "shape",
        "np",
        "zeros",
        "nmo",
        "nmo",
        "dtype",
        "t1",
        "s",
        "dtype",
        "nocc",
        "nvir",
        "t1",
        "s",
        "nvir",
        "nocc",
        "t1",
        "s",
        "conj",
        "T",
        "la",
        "expm",
        "amat",
        "umat",
        "t1",
        "umat",
        "isinstance",
        "t1",
        "np",
        "ndarray",
        "t1",
        "ndim",
        "t1",
        "shape",
        "umat",
        "nocc",
        "nocc",
        "umat",
        "nocc",
        "nocc",
        "reduce",
        "np",
        "dot",
        "umat_occ",
        "conj",
        "T",
        "t1",
        "umat_vir",
        "len",
        "t1",
        "transform_t1_to_bo",
        "t1",
        "s",
        "umat",
        "s",
        "s",
        "spin",
        "t2",
        "umat",
        "umat_b",
        "isinstance",
        "t2",
        "np",
        "ndarray",
        "t2",
        "ndim",
        "umat",
        "umat_b",
        "umat_a",
        "t2",
        "shape",
        "umat_a",
        "nocc_a",
        "nocc_a",
        "umat_b",
        "nocc_b",
        "nocc_b",
        "umat_a",
        "nocc_a",
        "nocc_a",
        "umat_b",
        "nocc_b",
        "nocc_b",
        "np",
        "einsum",
        "t2",
        "umat_occ_a",
        "umat_occ_b",
        "umat_vir_a",
        "umat_vir_b",
        "optimize",
        "transform_t2_to_bo",
        "t2",
        "umat",
        "transform_t2_to_bo",
        "t2",
        "umat",
        "umat_b",
        "umat",
        "transform_t2_to_bo",
        "t2",
        "umat",
        "t2_bo",
        "transform_t1_to_bo",
        "transform_t2_to_bo",
        "mo1",
        "mo2",
        "ovlp",
        "np",
        "asarray",
        "ovlp",
        "np",
        "asarray",
        "mo1",
        "np",
        "asarray",
        "mo2",
        "mo1",
        "ndim",
        "reduce",
        "np",
        "dot",
        "mo1",
        "conj",
        "T",
        "ovlp",
        "mo2",
        "mo1",
        "shape",
        "mo2",
        "shape",
        "mo1",
        "shape",
        "mo2",
        "shape",
        "np",
        "zeros",
        "spin",
        "nmo1",
        "nmo2",
        "dtype",
        "np",
        "result_type",
        "mo1",
        "mo2",
        "s",
        "spin",
        "reduce",
        "np",
        "dot",
        "mo1",
        "s",
        "conj",
        "T",
        "ovlp",
        "mo2",
        "s",
        "res",
        "mrot",
        "np",
        "iscomplexobj",
        "mrot",
        "la",
        "logm",
        "mrot",
        "mrot",
        "mrot",
        "T",
        "la",
        "eigh",
        "rs",
        "rv",
        "T",
        "mrot",
        "rv",
        "rd",
        "i",
        "len",
        "rd",
        "rdet",
        "rd",
        "i",
        "i",
        "rdet",
        "rd",
        "i",
        "i",
        "rd",
        "i",
        "i",
        "ra",
        "rdet",
        "np",
        "zeros_like",
        "rd",
        "i",
        "len",
        "rd",
        "rd",
        "i",
        "i",
        "rd",
        "i",
        "i",
        "rd",
        "i",
        "i",
        "rd",
        "i",
        "i",
        "np",
        "arctan2",
        "xsin",
        "xcos",
        "i",
        "theta",
        "i",
        "theta",
        "rv",
        "ld",
        "rv",
        "T",
        "mycc",
        "u",
        "conv_tol_normu",
        "max_cycle",
        "diis",
        "verbose",
        "lib",
        "logger",
        "new_logger",
        "mycc",
        "verbose",
        "log",
        "info",
        "mo_coeff",
        "u",
        "np",
        "asarray",
        "mo_coeff",
        "mo_coeff",
        "ndim",
        "np",
        "dot",
        "mo_coeff",
        "u",
        "mo_coeff",
        "shape",
        "np",
        "zeros",
        "spin",
        "nao",
        "nmo",
        "dtype",
        "mo_coeff",
        "dtype",
        "s",
        "spin",
        "np",
        "dot",
        "mo_coeff",
        "s",
        "u",
        "s",
        "res",
        "u",
        "u",
        "ndim",
        "la",
        "det",
        "u",
        "u",
        "logm",
        "u",
        "la",
        "det",
        "u",
        "u",
        "logm",
        "u",
        "la",
        "det",
        "u",
        "u",
        "logm",
        "u",
        "np",
        "asarray",
        "A_a",
        "A_b",
        "A",
        "A",
        "A",
        "ndim",
        "la",
        "expm",
        "A",
        "la",
        "expm",
        "A",
        "la",
        "expm",
        "A",
        "np",
        "asarray",
        "u_a",
        "u_b",
        "u",
        "mycc",
        "_scf",
        "mf",
        "get_ovlp",
        "lib",
        "diis",
        "DIIS",
        "mycc",
        "frozen",
        "mycc",
        "level_shift",
        "mycc",
        "get_frozen_mask",
        "u",
        "get_umat_from_t1",
        "mycc",
        "t1",
        "np",
        "array",
        "mycc",
        "mo_coeff",
        "copy",
        "u",
        "ndim",
        "np",
        "array",
        "mycc",
        "mo_coeff",
        "frozen_mask",
        "copy",
        "np",
        "eye",
        "u",
        "shape",
        "dtype",
        "mo_coeff_ref",
        "dtype",
        "np",
        "array",
        "mycc",
        "mo_coeff",
        "frozen_mask",
        "mycc",
        "mo_coeff",
        "frozen_mask",
        "copy",
        "np",
        "asarray",
        "np",
        "eye",
        "u",
        "shape",
        "np",
        "eye",
        "u",
        "shape",
        "dtype",
        "mo_coeff_ref",
        "dtype",
        "lib",
        "temporary_env",
        "mf",
        "verbose",
        "verbose",
        "mycc",
        "e_tot",
        "i",
        "max_cycle",
        "trans_mo",
        "u_tot",
        "u",
        "diis",
        "u2A",
        "u_tot",
        "u_tot",
        "ndim",
        "adiis",
        "update",
        "A",
        "xerr",
        "mycc",
        "t1",
        "A2u",
        "A",
        "trans_mo",
        "mo_coeff_ref",
        "u_tot",
        "get_mo_ovlp",
        "mf",
        "mo_coeff",
        "frozen_mask",
        "mo_xcore",
        "ovlp",
        "mo_xcore",
        "np",
        "hstack",
        "mycc",
        "t1",
        "ravel",
        "mycc",
        "t1",
        "ravel",
        "adiis",
        "update",
        "A",
        "xerr",
        "t1_ravel",
        "A2u",
        "A",
        "s",
        "trans_mo",
        "mo_coeff_ref",
        "s",
        "u_tot",
        "s",
        "u",
        "append",
        "get_mo_ovlp",
        "mf",
        "mo_coeff",
        "s",
        "frozen_mask",
        "s",
        "mo_xcore",
        "ovlp",
        "mo_coeff_new",
        "s",
        "frozen_mask",
        "s",
        "mo_xcore",
        "np",
        "asarray",
        "u",
        "trans_mo",
        "mo_coeff_ref",
        "u_tot",
        "mo_coeff_new",
        "mf",
        "energy_tot",
        "transform_t1_to_bo",
        "mycc",
        "t1",
        "u",
        "transform_t2_to_bo",
        "mycc",
        "t2",
        "u",
        "mycc",
        "mf",
        "frozen",
        "level_shift",
        "verbose",
        "mycc",
        "kernel",
        "t1",
        "t1",
        "t2",
        "t2",
        "mycc",
        "e_tot",
        "e_tot_last",
        "mycc",
        "e_tot",
        "mycc",
        "converged",
        "log",
        "warn",
        "u_tot",
        "ndim",
        "la",
        "norm",
        "mycc",
        "t1",
        "np",
        "hstack",
        "mycc",
        "t1",
        "ravel",
        "mycc",
        "t1",
        "ravel",
        "la",
        "norm",
        "t1_ravel",
        "log",
        "info",
        "i",
        "mycc",
        "e_tot",
        "dE",
        "t1_norm",
        "t1_norm",
        "conv_tol_normu",
        "get_umat_from_t1",
        "mycc",
        "t1",
        "log",
        "warn",
        "mycc",
        "pyscf",
        "pyscf",
        "cc",
        "np",
        "set_printoptions",
        "linewidth",
        "suppress",
        "pyscf",
        "M",
        "atom",
        "basis",
        "verbose",
        "spin",
        "mol",
        "HF",
        "myhf",
        "kernel",
        "myhf",
        "e_tot",
        "myhf",
        "make_rdm1",
        "cc",
        "CCSD",
        "myhf",
        "frozen",
        "mycc",
        "kernel",
        "bccd_kernel_",
        "mycc",
        "diis",
        "verbose",
        "mycc",
        "e_tot",
        "la",
        "norm",
        "mycc",
        "t1",
        "la",
        "norm",
        "mycc",
        "t1",
        "mol",
        "UHF",
        "myhf",
        "kernel",
        "cc",
        "CCSD",
        "myhf",
        "frozen",
        "myucc",
        "kernel",
        "bccd_kernel_",
        "myucc",
        "mybcc",
        "e_tot",
        "cc",
        "addons",
        "convert_to_gccsd",
        "mycc",
        "bccd_kernel_",
        "mygcc",
        "mybcc",
        "e_tot",
        "abs",
        "e_g",
        "e_r",
        "abs",
        "e_g",
        "e_r"
    ],
    "literals": [
        "\"ijab, iI, jJ, aA, bB -> IJAB\"",
        "\"BCCD loop starts.\"",
        "\"CC not converged\"",
        "\"BCC iter: %4d  E: %20.12f  dE: %12.3e  |t1|: %12.3e\"",
        "\"BCC: not converged, max_cycle reached.\"",
        "\"__main__\"",
        "'H 0 0 0; F 0 0 1.1'",
        "'ccpvdz'"
    ],
    "variables": [
        "nocc",
        "nvir",
        "amat",
        "amat",
        "amat",
        "umat",
        "spin",
        "nmo",
        "umat",
        "nocc",
        "nvir",
        "amat",
        "amat",
        "amat",
        "umat",
        "s",
        "nocc",
        "nvir",
        "umat_occ",
        "umat_vir",
        "spin",
        "umat_a",
        "umat_b",
        "nocc_a",
        "nocc_b",
        "nvir_a",
        "nvir_b",
        "umat_occ_a",
        "umat_occ_b",
        "umat_vir_a",
        "umat_vir_b",
        "t2_bo",
        "t2_bo",
        "t2_bo",
        "t2_bo",
        "t2_bo",
        "transform_l1_to_bo",
        "transform_l2_to_bo",
        "ovlp",
        "mo1",
        "mo2",
        "res",
        "spin",
        "nao",
        "nmo1",
        "nmo2",
        "res",
        "res",
        "s",
        "rs",
        "rl",
        "rv",
        "rd",
        "ra",
        "rdet",
        "ra",
        "rdet",
        "ld",
        "xcos",
        "xsin",
        "theta",
        "ld",
        "i",
        "ld",
        "i",
        "log",
        "mo_coeff",
        "res",
        "spin",
        "nao",
        "nmo",
        "res",
        "res",
        "s",
        "A",
        "A_a",
        "A_b",
        "A",
        "u",
        "u_a",
        "u_b",
        "u",
        "mf",
        "ovlp",
        "adiis",
        "frozen",
        "level_shift",
        "frozen_mask",
        "u",
        "mo_coeff_new",
        "mo_coeff_ref",
        "u_tot",
        "mo_coeff_ref",
        "u_tot",
        "e_tot_last",
        "u_tot",
        "A",
        "A",
        "u_tot",
        "mo_xcore",
        "u",
        "mo_coeff_new",
        "frozen_mask",
        "t1_ravel",
        "A",
        "u_tot",
        "u",
        "mo_xcore",
        "u",
        "mo_coeff_new",
        "mf",
        "mo_coeff",
        "mf",
        "e_tot",
        "t1",
        "t2",
        "mycc",
        "frozen",
        "mycc",
        "level_shift",
        "mycc",
        "verbose",
        "dE",
        "e_tot_last",
        "t1_norm",
        "t1_ravel",
        "t1_norm",
        "u",
        "mol",
        "myhf",
        "E_ref",
        "rdm1_mf",
        "mycc",
        "mycc",
        "conv_tol",
        "mycc",
        "e_r",
        "myhf",
        "myucc",
        "myucc",
        "frozen",
        "mybcc",
        "e_u",
        "mygcc",
        "mybcc",
        "e_g"
    ],
    "comments": [
        "!/usr/bin/env python",
        "Copyright 2014-2018 The PySCF Developers. All Rights Reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "Author: Zhi-Hao Cui <zhcui0408@gmail.com>",
        "",
        "UHF",
        "UHF",
        "UHF"
    ],
    "docstrings": [
        "\"\"\"\nBrueckner coupled-cluster doubles (BCCD).\n\"\"\"",
        "\"\"\"\n    Get rotation matrix from t1.\n    \"\"\"",
        "\"\"\"\n    Transform t1 to brueckner orbital basis.\n    \"\"\"",
        "\"\"\"\n    Transform t2 to brueckner orbital basis.\n    \"\"\"",
        "\"\"\"\n    Get MO overlap, C_1.conj().T ovlp C_2.\n    \"\"\"",
        "\"\"\"\n    Brueckner coupled-cluster wrapper, using an outer-loop algorithm.\n\n    Args:\n        mycc: a converged CCSD object.\n        u: initial transformation matrix.\n        conv_tol_normu: convergence tolerance for u matrix.\n        max_cycle: Maximum number of BCC cycles.\n        diis: whether perform DIIS.\n        verbose: verbose for CCSD inner iterations.\n\n    Returns:\n        mycc: a modified CC object with t1 vanished.\n    \"\"\""
    ],
    "functions": [
        "get_umat_from_t1",
        "transform_t1_to_bo",
        "transform_t2_to_bo",
        "get_mo_ovlp",
        "logm",
        "bccd_kernel_",
        "trans_mo",
        "u2A",
        "A2u"
    ],
    "classes": []
}