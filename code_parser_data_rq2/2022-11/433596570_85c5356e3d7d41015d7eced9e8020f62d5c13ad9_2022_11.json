{
    "identifiers": [
        "argparse",
        "configparser",
        "json",
        "os",
        "sqlite3",
        "sys",
        "time",
        "pathlib",
        "Path",
        "helpers",
        "database",
        "get_next_process_time",
        "set_next_process_time",
        "helpers",
        "logging",
        "Logger",
        "NotificationHandler",
        "helpers",
        "misc",
        "format_pair",
        "populate_pair_lists",
        "remove_excluded_pairs",
        "unix_timestamp_to_string",
        "wait_time_interval",
        "helpers",
        "threecommas",
        "get_threecommas_account_marketcode",
        "get_threecommas_market",
        "init_threecommas_api",
        "load_blacklist",
        "set_threecommas_bot_pairs",
        "configparser",
        "ConfigParser",
        "cfg",
        "read",
        "datadir",
        "program",
        "cfg",
        "open",
        "datadir",
        "program",
        "cfgfile",
        "cfg",
        "write",
        "cfgfile",
        "cfg",
        "cfg",
        "sharedir",
        "shareddbname",
        "sqlite3",
        "connect",
        "shareddbpath",
        "uri",
        "sqlite3",
        "Row",
        "logger",
        "info",
        "sharedir",
        "shareddbname",
        "sqlite3",
        "OperationalError",
        "logger",
        "info",
        "sharedir",
        "shareddbname",
        "shareddbconnection",
        "program",
        "datadir",
        "dbname",
        "sqlite3",
        "connect",
        "dbpath",
        "uri",
        "sqlite3",
        "Row",
        "logger",
        "info",
        "datadir",
        "dbname",
        "sqlite3",
        "OperationalError",
        "sqlite3",
        "connect",
        "datadir",
        "dbname",
        "sqlite3",
        "Row",
        "dbconnection",
        "cursor",
        "logger",
        "info",
        "datadir",
        "dbname",
        "dbcursor",
        "execute",
        "logger",
        "info",
        "dbconnection",
        "section_id",
        "json",
        "loads",
        "config",
        "get",
        "section_id",
        "config",
        "get",
        "section_id",
        "baselist",
        "logger",
        "error",
        "baselist",
        "json",
        "loads",
        "config",
        "get",
        "section_id",
        "json",
        "loads",
        "config",
        "get",
        "section_id",
        "json",
        "loads",
        "config",
        "get",
        "section_id",
        "config",
        "get",
        "section_id",
        "config",
        "get",
        "section_id",
        "config",
        "get",
        "section_id",
        "pricefilter",
        "get_coins_from_market_data",
        "filteroptions",
        "bot",
        "botids",
        "api",
        "request",
        "entity",
        "action",
        "action_id",
        "bot",
        "data",
        "update_bot_pairs",
        "data",
        "coindata",
        "error",
        "error",
        "logger",
        "error",
        "error",
        "logger",
        "error",
        "botsupdated",
        "botdata",
        "coinlist",
        "botdata",
        "split",
        "botdata",
        "logger",
        "info",
        "get_threecommas_account_marketcode",
        "logger",
        "api",
        "botdata",
        "marketcode",
        "get_threecommas_market",
        "logger",
        "api",
        "marketcode",
        "logger",
        "info",
        "exchange",
        "marketcode",
        "coin",
        "coinlist",
        "format_pair",
        "marketcode",
        "coin",
        "populate_pair_lists",
        "pair",
        "blacklist",
        "blackpairs",
        "badpairs",
        "newpairs",
        "tickerlist",
        "KeyError",
        "err",
        "logger",
        "error",
        "err",
        "logger",
        "debug",
        "blackpairs",
        "logger",
        "debug",
        "marketcode",
        "badpairs",
        "sharedir",
        "remove_excluded_pairs",
        "logger",
        "sharedir",
        "botdata",
        "marketcode",
        "newpairs",
        "newpairs",
        "logger",
        "info",
        "exchange",
        "marketcode",
        "set_threecommas_bot_pairs",
        "logger",
        "api",
        "botdata",
        "newpairs",
        "newpairs",
        "botdata",
        "logger",
        "info",
        "botdata",
        "botdata",
        "len",
        "newpairs",
        "newpairs",
        "newpairs",
        "len",
        "blackpairs",
        "len",
        "badpairs",
        "filteroptions",
        "query",
        "query",
        "query",
        "filteroptions",
        "query",
        "filteroptions",
        "filteroptions",
        "filteroptions",
        "query",
        "filteroptions",
        "filteroptions",
        "filteroptions",
        "query",
        "filteroptions",
        "filteroptions",
        "filteroptions",
        "filteroptions",
        "query",
        "filteroptions",
        "filteroptions",
        "query",
        "filteroptions",
        "filteroptions",
        "query",
        "filteroptions",
        "logger",
        "info",
        "query",
        "cursor",
        "execute",
        "query",
        "fetchall",
        "Path",
        "stem",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "args",
        "datadir",
        "args",
        "datadir",
        "os",
        "getcwd",
        "args",
        "sharedir",
        "args",
        "sharedir",
        "sys",
        "exit",
        "args",
        "blacklist",
        "datadir",
        "args",
        "blacklist",
        "load_config",
        "config",
        "Logger",
        "datadir",
        "program",
        "logger",
        "info",
        "datadir",
        "program",
        "sys",
        "exit",
        "hasattr",
        "time",
        "os",
        "environ",
        "config",
        "get",
        "fallback",
        "time",
        "tzset",
        "NotificationHandler",
        "program",
        "config",
        "getboolean",
        "config",
        "get",
        "Logger",
        "datadir",
        "program",
        "notification",
        "config",
        "get",
        "fallback",
        "config",
        "getboolean",
        "config",
        "getboolean",
        "upgrade_config",
        "config",
        "logger",
        "info",
        "datadir",
        "program",
        "init_threecommas_api",
        "config",
        "open_bu_db",
        "db",
        "cursor",
        "open_shared_db",
        "shareddb",
        "cursor",
        "load_config",
        "logger",
        "info",
        "datadir",
        "program",
        "config",
        "get",
        "load_blacklist",
        "logger",
        "api",
        "blacklistfile",
        "time",
        "time",
        "section",
        "config",
        "sections",
        "section",
        "startswith",
        "config",
        "get",
        "section",
        "get_next_process_time",
        "db",
        "section",
        "starttime",
        "nextprocesstime",
        "abs",
        "nextprocesstime",
        "starttime",
        "sectiontimeinterval",
        "process_bu_section",
        "section",
        "starttime",
        "sectiontimeinterval",
        "set_next_process_time",
        "db",
        "section",
        "newtime",
        "logger",
        "debug",
        "section",
        "unix_timestamp_to_string",
        "nextprocesstime",
        "section",
        "logger",
        "warning",
        "section",
        "wait_time_interval",
        "logger",
        "notification",
        "timeint"
    ],
    "literals": [
        "f\"{datadir}/{program}.ini\"",
        "\"settings\"",
        "\"timezone\"",
        "\"Europe/Amsterdam\"",
        "\"timeinterval\"",
        "\"debug\"",
        "\"logrotate\"",
        "\"3c-apikey\"",
        "\"Your 3Commas API Key\"",
        "\"3c-apisecret\"",
        "\"Your 3Commas API Secret\"",
        "\"notifications\"",
        "\"notify-urls\"",
        "\"notify-url1\"",
        "\"bu_default\"",
        "\"botids\"",
        "\"timeinterval\"",
        "\"base\"",
        "\"BTC\"",
        "\"cmc-rank\"",
        "\"altrank\"",
        "\"galaxyscore\"",
        "\"max-percent-change-1h\"",
        "\"max-percent-change-24h\"",
        "\"max-percent-change-7d\"",
        "\"description\"",
        "\"some description\"",
        "f\"{datadir}/{program}.ini\"",
        "\"w\"",
        "\"marketdata.sqlite3\"",
        "f\"file:{sharedir}/{shareddbname}?mode=rw\"",
        "f\"Database '{sharedir}/{shareddbname}' opened successfully\"",
        "f\"Database '{sharedir}/{shareddbname}' couldn't be opened\"",
        "f\"{program}.sqlite3\"",
        "f\"file:{datadir}/{dbname}?mode=rw\"",
        "f\"Database '{datadir}/{dbname}' opened successfully\"",
        "f\"{datadir}/{dbname}\"",
        "f\"Database '{datadir}/{dbname}' created successfully\"",
        "\"CREATE TABLE IF NOT EXISTS sections (\"",
        "\"sectionid STRING Primary Key, \"",
        "\"next_processing_timestamp INT\"",
        "\")\"",
        "\"Database tables created successfully\"",
        "\"botids\"",
        "\"percent-change-compared-to\"",
        "\"BNB\"",
        "\"BTC\"",
        "\"ETH\"",
        "\"EUR\"",
        "\"USD\"",
        "f\"Percent change ('{base}') must be one of the following: \"",
        "f\"{baselist}\"",
        "\"cmcrank\"",
        "\"cmc-rank\"",
        "\"altrank\"",
        "\"altrank\"",
        "\"galaxyscore\"",
        "\"galaxyscore\"",
        "\"change_1h\"",
        "\"max-percent-change-1h\"",
        "\"change_24h\"",
        "\"max-percent-change-24h\"",
        "\"change_7d\"",
        "\"max-percent-change-7d\"",
        "\"change\"",
        "\"bots\"",
        "\"show\"",
        "\"msg\"",
        "\"Error occurred updating bots: %s\"",
        "\"msg\"",
        "\"Error occurred updating bots\"",
        "\"pairs\"",
        "\"_\"",
        "\"account_name\"",
        "\"Bot base currency: %s\"",
        "\"account_id\"",
        "\"Bot exchange: %s (%s)\"",
        "\"Something went wrong while parsing coin data. KeyError for field: %s\"",
        "\"These pairs are blacklisted and were skipped: %s\"",
        "\"These pairs are invalid on '%s' and were skipped: %s\"",
        "'id'",
        "\"None of the by suggested pairs have been found on the %s (%s) exchange!\"",
        "\"pairs\"",
        "f\"Bot '{botdata['name']}' with id '{botdata['id']}' updated with {len(newpairs)} \"",
        "'name'",
        "'id'",
        "f\"pairs ({newpairs[0]} ... {newpairs[-1]}). Excluded coins: {0} (filter), \"",
        "f\"{len(blackpairs)} (blacklist), {len(badpairs)} (not on exchange)\"",
        "\"SELECT pairs.coin FROM pairs \"",
        "\"INNER JOIN rankings ON pairs.coin = rankings.coin \"",
        "\"INNER JOIN prices ON pairs.coin = prices.coin \"",
        "f\"WHERE pairs.base = '{base}' \"",
        "\"cmcrank\"",
        "f\"AND rankings.coinmarketcap BETWEEN {filteroptions['cmcrank'][0]} AND {filteroptions['cmcrank'][-1]} \"",
        "'cmcrank'",
        "'cmcrank'",
        "\"altrank\"",
        "f\"AND rankings.altrank BETWEEN {filteroptions['altrank'][0]} AND {filteroptions['altrank'][-1]} \"",
        "'altrank'",
        "'altrank'",
        "\"galaxyscore\"",
        "f\"AND rankings.galaxyscore BETWEEN {filteroptions['galaxyscore'][0]} AND {filteroptions['galaxyscore'][-1]} \"",
        "'galaxyscore'",
        "'galaxyscore'",
        "\"change\"",
        "\"change\"",
        "\"change_1h\"",
        "f\"AND price.change_1h <= {filteroptions['change']['change_1h']} \"",
        "'change'",
        "'change_1h'",
        "\"change\"",
        "\"change_24h\"",
        "f\"AND price.change_24h <= {filteroptions['change']['change_24h']} \"",
        "'change'",
        "'change_24h'",
        "\"change\"",
        "\"change_7d\"",
        "f\"AND price.change_7d <= {filteroptions['change']['change_7d']} \"",
        "'change'",
        "'change_7d'",
        "f\"Build query for fetch of coins: {query}\"",
        "\"Cyberjunky's 3Commas bot helper.\"",
        "\"-d\"",
        "\"--datadir\"",
        "\"directory to use for config and logs files\"",
        "\"-s\"",
        "\"--sharedir\"",
        "\"directory to use for shared files\"",
        "\"-b\"",
        "\"--blacklist\"",
        "\"local blacklist to use instead of 3Commas's\"",
        "\"This script requires the sharedir to be used (-s option)!\"",
        "f\"{datadir}/{args.blacklist}\"",
        "f\"Created example config file '{datadir}/{program}.ini', edit it and restart the program\"",
        "\"tzset\"",
        "\"TZ\"",
        "\"settings\"",
        "\"timezone\"",
        "\"Europe/Amsterdam\"",
        "\"settings\"",
        "\"notifications\"",
        "\"settings\"",
        "\"notify-urls\"",
        "\"settings\"",
        "\"logrotate\"",
        "\"settings\"",
        "\"debug\"",
        "\"settings\"",
        "\"notifications\"",
        "f\"Loaded configuration from '{datadir}/{program}.ini'\"",
        "f\"Reloaded configuration from '{datadir}/{program}.ini'\"",
        "\"settings\"",
        "\"timeinterval\"",
        "\"bu_\"",
        "\"timeinterval\"",
        "\"sections\"",
        "\"sectionid\"",
        "\"sections\"",
        "\"sectionid\"",
        "f\"Section {section} will be processed after \"",
        "f\"{unix_timestamp_to_string(nextprocesstime, '%Y-%m-%d %H:%M:%S')}.\"",
        "'%Y-%m-%d %H:%M:%S'",
        "\"settings\"",
        "f\"Section '{section}' not processed (prefix 'bu_' missing)!\""
    ],
    "variables": [
        "cfg",
        "cfg",
        "cfg",
        "shareddbname",
        "shareddbpath",
        "shareddbconnection",
        "shareddbconnection",
        "row_factory",
        "dbname",
        "dbpath",
        "dbconnection",
        "dbconnection",
        "row_factory",
        "dbconnection",
        "dbconnection",
        "row_factory",
        "dbcursor",
        "botids",
        "baselist",
        "filteroptions",
        "filteroptions",
        "filteroptions",
        "filteroptions",
        "pricefilter",
        "pricefilter",
        "pricefilter",
        "pricefilter",
        "filteroptions",
        "coindata",
        "botsupdated",
        "error",
        "data",
        "botsupdated",
        "exchange",
        "newpairs",
        "badpairs",
        "blackpairs",
        "marketcode",
        "tickerlist",
        "pair",
        "query",
        "program",
        "parser",
        "args",
        "datadir",
        "datadir",
        "sharedir",
        "blacklistfile",
        "blacklistfile",
        "config",
        "logger",
        "notification",
        "logger",
        "config",
        "api",
        "db",
        "cursor",
        "shareddb",
        "sharedcursor",
        "config",
        "timeint",
        "blacklist",
        "starttime",
        "sectiontimeinterval",
        "nextprocesstime",
        "sectiontimeinterval",
        "newtime"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "Bot configuration for section",
        "Walk through all bots configured",
        "Gather bot settings",
        "Start from scratch",
        "Get marketcode (exchange) from account",
        "Load tickerlist for this exchange",
        "Process list of coins",
        "Construct pair based on bot settings and marketcode",
        "(BTC stays BTC, but USDT can become BUSD)",
        "Populate lists",
        "If sharedir is set, other scripts could provide a file with pairs to exclude",
        "Update the bot with the new pairs",
        "Send our own notification with more data",
        "SELECT pairs.coin, rankings.coinmarketcap, prices.change_1h from pairs INNER JOIN rankings ON pairs.coin = rankings.coin INNER JOIN prices ON pairs.coin = prices.coin WHERE pairs.base = 'BTC' AND rankings.coinmarketcap BETWEEN 1 AND 6",
        "Base query and joining of all tables",
        "Specify the base",
        "Specify cmc-rank",
        "Specify altrank",
        "Specify galaxyscore",
        "Specify percent change",
        "Start application",
        "Parse and interpret options.",
        "pylint: disable-msg=C0103",
        "pylint: disable-msg=C0103",
        "Create or load configuration file",
        "Initialise temp logging",
        "Handle timezone",
        "Init notification handler",
        "Initialise logging",
        "Upgrade config file if needed",
        "Initialize 3Commas API",
        "Initialize or open the database",
        "Open the shared database",
        "Refresh coin pairs in 3C bots based on the market data",
        "Reload config files and refetch data to catch changes",
        "Configuration settings",
        "Update the blacklist",
        "Current time to determine which sections to process",
        "Only process the section if it's time for the next interval, or",
        "time exceeds the check interval (clock has changed somehow)",
        "Update failed somewhere, retry soon",
        "Determine new time to process this section"
    ],
    "docstrings": [
        "\"\"\"Cyberjunky's 3Commas bot helpers.\"\"\"",
        "\"\"\"Create default or load existing config file.\"\"\"",
        "\"\"\"Upgrade config file if needed.\"\"\"",
        "\"\"\"Open shared database\"\"\"",
        "\"\"\"Create or open database to store data.\"\"\"",
        "\"\"\"Process the section from the configuration\"\"\"",
        "\"\"\"Find new pairs and update the bot.\"\"\"",
        "\"\"\"Get pairs based on the specified filtering\"\"\""
    ],
    "functions": [
        "load_config",
        "upgrade_config",
        "open_shared_db",
        "open_bu_db",
        "process_bu_section",
        "update_bot_pairs",
        "get_coins_from_market_data"
    ],
    "classes": []
}