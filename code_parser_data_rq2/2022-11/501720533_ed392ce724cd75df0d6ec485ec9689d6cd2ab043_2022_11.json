{
    "identifiers": [
        "argparse",
        "torch",
        "torch",
        "nn",
        "mhciipresentation",
        "constants",
        "AA_TO_INT",
        "USE_GPU",
        "mhciipresentation",
        "inference",
        "setup_model",
        "mhciipresentation",
        "loaders",
        "load_iedb_data",
        "load_iedb_idx",
        "mhciipresentation",
        "transformer",
        "prepare_iedb_data",
        "mhciipresentation",
        "utils",
        "compute_performance_measures",
        "encode_aa_sequences",
        "make_dir",
        "make_predictions_with_transformer",
        "render_roc_curve",
        "set_pandas_options",
        "set_pandas_options",
        "model",
        "nn",
        "Module",
        "input_dim",
        "device",
        "torch",
        "device",
        "batch_size",
        "prepare_iedb_data",
        "allele_list",
        "DRB1_alleles",
        "HLA_DR_alleles",
        "HLA_DQ_alleles",
        "HLA_DP_alleles",
        "allele",
        "allele_list",
        "all_test_data",
        "all_test_data",
        "Alleles",
        "contains",
        "allele",
        "reset_index",
        "drop",
        "all_y_test",
        "all_test_data",
        "Alleles",
        "contains",
        "allele",
        "len",
        "y_test",
        "allele",
        "i",
        "j",
        "y_test",
        "j",
        "sum",
        "y_test",
        "len",
        "y_test",
        "sum",
        "y_test",
        "allele",
        "FLAGS",
        "model_with_pseudo_path",
        "encode_aa_sequences",
        "test_data",
        "peptide_with_mhcii_pseudosequence",
        "AA_TO_INT",
        "encode_aa_sequences",
        "test_data",
        "AA_TO_INT",
        "make_predictions_with_transformer",
        "X",
        "batch_size",
        "device",
        "model",
        "input_dim",
        "AA_TO_INT",
        "compute_performance_measures",
        "predictions",
        "y_test",
        "allele",
        "len",
        "y_test",
        "performance",
        "torch",
        "device",
        "USE_GPU",
        "FLAGS",
        "model_with_pseudo_path",
        "setup_model",
        "device",
        "FLAGS",
        "model_with_pseudo_path",
        "setup_model",
        "device",
        "FLAGS",
        "model_wo_pseudo_path",
        "max_len",
        "handle_iedb_data_subset",
        "model",
        "input_dim",
        "device",
        "batch_size",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "required",
        "help",
        "choices",
        "FLAGS",
        "parser",
        "parse_args",
        "main"
    ],
    "literals": [
        "\"DRB1_0101\"",
        "\"DRB1_0301\"",
        "\"DRB1_0401\"",
        "\"DRB1_0405\"",
        "\"DRB1_0701\"",
        "\"DRB1_0802\"",
        "\"DRB1_0901\"",
        "\"DRB1_1101\"",
        "\"DRB1_1201\"",
        "\"DRB1_1601\"",
        "\"DRB1_1501\"",
        "\"DRB3_0101\"",
        "\"DRB3_0202\"",
        "\"DRB5_0101\"",
        "\"HLA-DQA10501-DQB10201\"",
        "\"HLA-DQA10501-DQB10301\"",
        "\"HLA-DQA10301-DQB10302\"",
        "\"HLA-DQA10401-DQB10402\"",
        "\"HLA-DQA10101-DQB10501\"",
        "\"HLA-DQA10102-DQB10602\"",
        "'HLA-DPA10103-DPB10201'",
        "'HLA-DPA10103-DPB10401'",
        "'HLA-DPA10103-DPB10601'",
        "'HLA-DPA10201-DPB10501'",
        "'HLA-DPA10201-DPB11401'",
        "'HLA-DPA10301-DPB10402'",
        "\"to few values for allele: %s\"",
        "\"all values for allele: %s are the same\"",
        "\"peptide\"",
        "\"X\"",
        "\"Allele Name: %s\"",
        "\"number datapoints: %i\"",
        "\"AUC: %(auc)s, F1: %(f1)s, MCC; %(matthews_corrcoef)s\"",
        "\"\"",
        "\"cuda\"",
        "\"cpu\"",
        "\"__main__\"",
        "\"--model_with_pseudo_path\"",
        "\"-modp\"",
        "\"Path to the checkpoint of the model to evaluate.\"",
        "\"--model_wo_pseudo_path\"",
        "\"-modwop\"",
        "\"Path to the checkpoint of the model to evaluate.\"",
        "\"--results\"",
        "\"-ress\"",
        "\"Path where the results should be stored.\"",
        "\"--features\"",
        "\"Type of features to use\"",
        "\"seq_only\"",
        "\"seq_mhc\"",
        "\"seq_mhc\""
    ],
    "variables": [
        "_",
        "_",
        "all_test_data",
        "_",
        "_",
        "all_y_test",
        "DRB1_alleles",
        "HLA_DR_alleles",
        "HLA_DQ_alleles",
        "HLA_DP_alleles",
        "test_data",
        "y_test",
        "y_test",
        "i",
        "y_test",
        "i",
        "X",
        "X",
        "predictions",
        "performance",
        "device",
        "model",
        "input_dim",
        "max_len",
        "model",
        "input_dim",
        "max_len",
        "batch_size",
        "parser",
        "FLAGS"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "print(performance)",
        "make_dir(FLAGS.results)",
        "render_roc_curve(",
        "predictions,",
        "y_test,",
        "FLAGS.results,",
        "\"Allele: %s\",",
        "\"nod_test\",",
        ")",
        "",
        "training device"
    ],
    "docstrings": [
        "\"\"\"nod.py\n\nThis script validates our model against datasets from NOD mice\n\"\"\"",
        "\"\"\"Handles validation against part of the public NOD dataset\n\n    Args:\n        model (nn.Module): model used to make predictions\n        input_dim (int): input dimension of the model\n        device (torch.device): device to run the model on.\n        batch_size (int): batch size to use for inference\n    \"\"\""
    ],
    "functions": [
        "handle_iedb_data_subset",
        "main"
    ],
    "classes": []
}