{
    "identifiers": [
        "cslox",
        "Parser",
        "cslox",
        "Scanning",
        "cslox",
        "Interpreter",
        "IVisitor",
        "Expression",
        "expression",
        "Evaluate",
        "expression",
        "WriteLine",
        "Stringify",
        "value",
        "RuntimeError",
        "error",
        "Lox",
        "RuntimeError",
        "error",
        "Binary",
        "expression",
        "Evaluate",
        "expression",
        "Left",
        "Evaluate",
        "expression",
        "Right",
        "expression",
        "Operator",
        "Type",
        "TokenType",
        "GREATER",
        "CheckNumberOperands",
        "expression",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "TokenType",
        "GREATER_EQUAL",
        "CheckNumberOperands",
        "expression",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "TokenType",
        "LESS",
        "CheckNumberOperands",
        "expression",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "TokenType",
        "LESS_EQUAL",
        "CheckNumberOperands",
        "expression",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "TokenType",
        "BANG_EQUAL",
        "IsEqual",
        "left",
        "right",
        "TokenType",
        "EQUAL_EQUAL",
        "IsEqual",
        "left",
        "right",
        "TokenType",
        "MINUS",
        "CheckNumberOperands",
        "expression",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "TokenType",
        "PLUS",
        "left",
        "right",
        "left",
        "right",
        "left",
        "right",
        "left",
        "right",
        "RuntimeError",
        "expression",
        "Operator",
        "TokenType",
        "SLASH",
        "CheckNumberOperands",
        "expression",
        "Operator",
        "left",
        "right",
        "right",
        "RuntimeError",
        "expression",
        "Operator",
        "left",
        "right",
        "TokenType",
        "STAR",
        "CheckNumberOperands",
        "expression",
        "Operator",
        "left",
        "right",
        "left",
        "right",
        "Grouping",
        "expression",
        "Evaluate",
        "expression",
        "Expression",
        "Literal",
        "expression",
        "expression",
        "Value",
        "Unary",
        "expression",
        "Evaluate",
        "expression",
        "Right",
        "expression",
        "Operator",
        "Type",
        "TokenType",
        "BANG",
        "IsTruthy",
        "right",
        "TokenType",
        "MINUS",
        "CheckNumberOperand",
        "expression",
        "Operator",
        "right",
        "right",
        "Expression",
        "expression",
        "expression",
        "Accept",
        "obj",
        "obj",
        "obj",
        "obj",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "Equals",
        "b",
        "Token",
        "@operator",
        "operand",
        "operand",
        "RuntimeError",
        "@operator",
        "Token",
        "@operator",
        "left",
        "right",
        "left",
        "right",
        "RuntimeError",
        "@operator",
        "value",
        "value",
        "value",
        "value",
        "ToString",
        "text",
        "EndsWith",
        "text",
        "text",
        "Substring",
        "text",
        "Length",
        "text",
        "value",
        "ToString",
        "Token",
        "token",
        "message",
        "message",
        "Token",
        "token"
    ],
    "literals": [
        "\"Operands must be two numbers or two strings\"",
        "\"Division by zero\"",
        "\"Operand must be a number.\"",
        "\"Operands must be numbers.\"",
        "\"nil\"",
        "\".0\""
    ],
    "variables": [
        "value",
        "left",
        "right",
        "right",
        "text",
        "Token",
        "Token"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "Interpret",
        "VisitBinaryExpression",
        "VisitGroupingExpression",
        "VisitLiteralExpression",
        "VisitUnaryExpression",
        "Evaluate",
        "IsTruthy",
        "IsEqual",
        "CheckNumberOperand",
        "CheckNumberOperands",
        "Stringify",
        "RuntimeError"
    ],
    "classes": [
        "Interpreter",
        "RuntimeError"
    ]
}