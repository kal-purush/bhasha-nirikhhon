{
    "identifiers": [
        "Lyricist",
        "ViewModel",
        "Lyricist",
        "Model",
        "LyricsAppTest",
        "Fact",
        "Music",
        "Mock1",
        "Artist",
        "Assert",
        "Equal",
        "expected",
        "actual",
        "Fact",
        "Music",
        "Mock1",
        "Genre",
        "Assert",
        "Equal",
        "expected",
        "actual",
        "Fact",
        "Music",
        "Mock1",
        "Title",
        "Assert",
        "Equal",
        "expected",
        "actual"
    ],
    "literals": [
        "\"team\"",
        "\"j. cole\"",
        "\"rap\"",
        "\"Lyrics1\"",
        "\"Artist: j. cole\"",
        "\"team\"",
        "\"j. cole\"",
        "\"rap\"",
        "\"Lyrics1\"",
        "\"Genre: rap\""
    ],
    "variables": [
        "Music",
        "Mock1",
        "expected",
        "actual",
        "Music",
        "Mock1",
        "expected",
        "actual",
        "Music",
        "Mock1",
        "expected",
        "actual"
    ],
    "comments": [
        "arrange",
        "This test is to check if the artist name was successfully concatinated with a string",
        "evn though only the name was entered",
        "act",
        "assert",
        "arrange",
        "This test is to check if the song genre was successfully concatinated with a string",
        "evn though only the genre was entered",
        "act",
        "assert",
        "arrange",
        "This test is to check if an instance of music can be created with just an empty constructor",
        "act",
        "assert"
    ],
    "docstrings": [],
    "functions": [
        "ConcatArtistName",
        "ConcatGenre",
        "TestNewMusicEmptyConstructor"
    ],
    "classes": [
        "UnitTest1"
    ]
}