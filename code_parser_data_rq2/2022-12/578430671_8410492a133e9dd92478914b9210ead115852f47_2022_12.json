{
    "identifiers": [
        "require",
        "require",
        "require",
        "express",
        "app",
        "app",
        "app",
        "app",
        "express",
        "app",
        "morgan",
        "app",
        "req",
        "res",
        "next",
        "next",
        "app",
        "req",
        "res",
        "res",
        "data",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "req",
        "res",
        "app",
        "req",
        "res",
        "req",
        "res",
        "req",
        "app",
        "req",
        "res",
        "res",
        "req",
        "app",
        "express",
        "app",
        "app",
        "app",
        "app"
    ],
    "literals": [
        "'express'",
        "'express'",
        "'morgan'",
        "'appName'",
        "'Testing Express JS'",
        "'port'",
        "'3000'",
        "'view engine'",
        "'ejs'",
        "'dev'",
        "'/user'",
        "'checking'",
        "'/'",
        "'Peter'",
        "'Homer'",
        "\"Will\"",
        "'index.ejs'",
        "'/user'",
        "'Peter'",
        "'Parker'",
        "'18'",
        "'/user/:id'",
        "'PETITION POST RECIVED'",
        "'/user/:id'",
        "User ${req.params.id} updated",
        "'/user/:userId'",
        "User ${req.params.userId} deleted",
        "'public'",
        "'port'",
        "'appName'",
        "'Server on port'",
        "'port'"
    ],
    "variables": [
        "express",
        "morgan",
        "app",
        "data"
    ],
    "comments": [
        "const http =require('http')\n\nconst server = http.createServer((req,res) => {\n\n    res.status = 200;\n    res.setHeader('Content-Type', 'text/plain');\n    res.end('Hi there..!!');\n})\n\nserver.listen(3032, () =>{\nconsole.log('Server on port 3032')\n\n});",
        "The above code is to set a simple Node Js server without express",
        "---------------- NEW CODE WHIT EXPRESS JS ----------------------",
        "- routing documentation http://expressjs.com/en/guide/routing.html",
        "- methods http://expressjs.com/en/4x/api.html",
        "app is the server",
        "A middleware is just a request handler,",
        "which is executed before all other requests and works for all routes",
        "in other words, are used to process data before reaching the other paths",
        "ex.: to validate a user logging.",
        "function logger (req, res, next){",
        "console.log(`Route Received: ${req.protocol}://${req.get('host')}${req.originalUrl}`);",
        "next();",
        "}",
        "------------- Settings ---------------------",
        "app.set to set envaironment variables",
        "------------ Middelwares -------------------",
        "app.use(logger)",
        "This \"app.all\" only works for \"/user/*\" routes",
        "--------------- Routes ---------------------",
        "----------------------------------------------",
        "----------------------------------------------",
        "----------------------------------------------",
        "----------------------------------------------",
        "------------------ end routes ----------------",
        "before app.set port we used this console.log('Server on port 3032');"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}