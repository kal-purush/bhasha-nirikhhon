{
    "identifiers": [
        "argparse",
        "json",
        "os",
        "queue",
        "re",
        "threading",
        "time",
        "typing",
        "Callable",
        "Optional",
        "igdb",
        "wrapper",
        "IGDBWrapper",
        "requests",
        "youtube_dl",
        "dotenv",
        "load_dotenv",
        "load_dotenv",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "client_id",
        "client_secret",
        "Accept",
        "client_id",
        "client_id",
        "client_secret",
        "client_secret",
        "grant_type",
        "requests",
        "post",
        "url",
        "token_url",
        "data",
        "auth_headers",
        "json",
        "authorization",
        "igdb_authorization",
        "client_id",
        "os",
        "environ",
        "client_secret",
        "os",
        "environ",
        "IGDBWrapper",
        "client_id",
        "os",
        "environ",
        "auth_token",
        "auth",
        "url",
        "method",
        "Callable",
        "requests",
        "get",
        "max_tries",
        "requests",
        "Response",
        "count",
        "max_tries",
        "method",
        "url",
        "url",
        "response",
        "status_code",
        "requests",
        "codes",
        "ok",
        "response",
        "requests",
        "exceptions",
        "RequestException",
        "time",
        "sleep",
        "count",
        "count",
        "queue",
        "get",
        "queue_handler",
        "item",
        "item",
        "queue",
        "task_done",
        "item",
        "item",
        "process_igdb_id",
        "game_id",
        "item",
        "item",
        "process_tmdb_id",
        "tmdb_id",
        "item",
        "t",
        "threading",
        "target",
        "process_queue",
        "t",
        "start",
        "RuntimeError",
        "e",
        "e",
        "game_slug",
        "Optional",
        "game_id",
        "Optional",
        "youtube_url",
        "Optional",
        "game_slug",
        "game_slug",
        "game_id",
        "game_id",
        "where_type",
        "where",
        "wrapper",
        "api_request",
        "endpoint",
        "query",
        "join",
        "fields",
        "where_type",
        "where",
        "limit",
        "offset",
        "json",
        "loads",
        "byte_array",
        "json_result",
        "KeyError",
        "IndexError",
        "e",
        "e",
        "json_result",
        "game_id",
        "os",
        "path",
        "join",
        "igdb_dir",
        "game_id",
        "os",
        "path",
        "isfile",
        "igdb_file",
        "open",
        "file",
        "igdb_file",
        "mode",
        "og_f",
        "json",
        "load",
        "fp",
        "og_f",
        "json_data",
        "KeyError",
        "e",
        "e",
        "og_data",
        "update",
        "json_data",
        "youtube_url",
        "youtube_url",
        "destination_filenames",
        "append",
        "os",
        "path",
        "join",
        "og_data",
        "filename",
        "destination_filenames",
        "os",
        "path",
        "join",
        "filename",
        "os",
        "path",
        "dirname",
        "destination_file",
        "os",
        "makedirs",
        "name",
        "destination_dir",
        "exist_ok",
        "open",
        "destination_file",
        "dest_f",
        "dest_f",
        "write",
        "json",
        "dumps",
        "og_data",
        "og_data",
        "tmdb_id",
        "youtube_url",
        "Optional",
        "tmdb_id",
        "os",
        "path",
        "join",
        "tmdb_dir",
        "tmdb_id",
        "os",
        "path",
        "isfile",
        "tmdb_file",
        "open",
        "file",
        "tmdb_file",
        "mode",
        "og_f",
        "json",
        "load",
        "fp",
        "og_f",
        "tmdb_id",
        "os",
        "environ",
        "requests_loop",
        "url",
        "url",
        "method",
        "requests",
        "get",
        "response",
        "status_code",
        "response",
        "status_code",
        "response",
        "json",
        "json_data",
        "KeyError",
        "e",
        "e",
        "og_data",
        "update",
        "json_data",
        "youtube_url",
        "youtube_url",
        "destination_filenames",
        "append",
        "os",
        "path",
        "join",
        "og_data",
        "og_data",
        "destination_filenames",
        "append",
        "os",
        "path",
        "join",
        "og_data",
        "KeyError",
        "e",
        "e",
        "filename",
        "destination_filenames",
        "os",
        "path",
        "join",
        "filename",
        "os",
        "path",
        "dirname",
        "destination_file",
        "os",
        "makedirs",
        "name",
        "destination_dir",
        "exist_ok",
        "open",
        "destination_file",
        "dest_f",
        "dest_f",
        "write",
        "json",
        "dumps",
        "og_data",
        "og_data",
        "process_submission",
        "check_youtube",
        "data",
        "submission",
        "args",
        "add_game",
        "check_igdb",
        "data",
        "submission",
        "youtube_url",
        "youtube_url",
        "args",
        "add_movie",
        "check_themoviedb",
        "data",
        "submission",
        "youtube_url",
        "youtube_url",
        "SystemExit",
        "data",
        "youtube_url",
        "data",
        "strip",
        "url",
        "re",
        "search",
        "url",
        "group",
        "game_slug",
        "process_igdb_id",
        "game_slug",
        "game_slug",
        "youtube_url",
        "youtube_url",
        "data",
        "youtube_url",
        "data",
        "strip",
        "url",
        "re",
        "search",
        "url",
        "group",
        "themoviedb_id",
        "process_tmdb_id",
        "tmdb_id",
        "themoviedb_id",
        "youtube_url",
        "youtube_url",
        "data",
        "data",
        "strip",
        "outmpl",
        "youtube_include_dash_manifest",
        "youtube_dl",
        "YoutubeDL",
        "youtube_dl_params",
        "ydl",
        "ydl",
        "extract_info",
        "url",
        "url",
        "download",
        "result",
        "result",
        "result",
        "video_data",
        "webpage_url",
        "open",
        "file",
        "file",
        "json",
        "load",
        "file",
        "data",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "parse_args",
        "args",
        "issue_update",
        "args",
        "add_game",
        "args",
        "add_movie",
        "args",
        "add_game",
        "args",
        "add_movie",
        "process_issue_update",
        "args",
        "daily_update",
        "os",
        "listdir",
        "path",
        "tmdb_dir",
        "file",
        "all_movies",
        "file",
        "rsplit",
        "queue",
        "put",
        "item_id",
        "os",
        "listdir",
        "path",
        "igdb_dir",
        "file",
        "all_games",
        "file",
        "rsplit",
        "queue",
        "put",
        "item_id",
        "queue",
        "join"
    ],
    "literals": [
        "'database'",
        "'games'",
        "'igdb'",
        "'database'",
        "'movies'",
        "'themoviedb'",
        "'application/json'",
        "'client_credentials'",
        "'https://id.twitch.tv/oauth2/token'",
        "\"TWITCH_CLIENT_ID\"",
        "\"TWITCH_CLIENT_SECRET\"",
        "\"TWITCH_CLIENT_ID\"",
        "'access_token'",
        "'game'",
        "'movie'",
        "f'RuntimeError encountered: {e}'",
        "'slug'",
        "f'\"{game_slug}\"'",
        "'id'",
        "'game_slug or game_id is required'",
        "f'Searching igdb for {where_type}: {where}'",
        "'name'",
        "'slug'",
        "'url'",
        "'games'",
        "f'fields {\", \".join(fields)}; where {where_type} = ({where}); limit {limit}; offset {offset};'",
        "\", \"",
        "'id'",
        "f'Error getting game id: {e}'",
        "f'processing id {game_id}'",
        "f\"{game_id}.json\"",
        "'r'",
        "'id'",
        "f'Error processing game: {e}'",
        "'youtube_theme_url'",
        "'igdb'",
        "f'{og_data[\"id\"]}.json'",
        "\"id\"",
        "'database'",
        "'games'",
        "\"w\"",
        "f'processing id {tmdb_id}'",
        "f\"{tmdb_id}.json\"",
        "'r'",
        "f'https://api.themoviedb.org/3/movie/{tmdb_id}?api_key={os.environ[\"TMDB_API_KEY_V3\"]}'",
        "\"TMDB_API_KEY_V3\"",
        "f'tmdb api returned a non 200 status code of: {response.status_code}'",
        "'id'",
        "f'Error processing movie: {e}'",
        "'youtube_theme_url'",
        "'themoviedb'",
        "f'{og_data[\"id\"]}.json'",
        "\"id\"",
        "\"imdb_id\"",
        "'imdb'",
        "f'{og_data[\"imdb_id\"]}.json'",
        "\"imdb_id\"",
        "f'Error getting imdb_id: {e}'",
        "'database'",
        "'movies'",
        "\"w\"",
        "'item_type not defined. Invalid label?'",
        "'Checking igdb'",
        "'igdb_url'",
        "f'igdb_url: {url}'",
        "r'https://www\\.igdb.com/games/(.+)/*.*'",
        "f'game_slug: {game_slug}'",
        "'Checking themoviedb'",
        "'themoviedb_url'",
        "f'themoviedb_url: {url}'",
        "r'https://www\\.themoviedb.org/movie/(\\d+)-*.*'",
        "f'themoviedb_id: {themoviedb_id}'",
        "'youtube_theme_url'",
        "'%(id)s.%(ext)s'",
        "'entries'",
        "'entries'",
        "'webpage_url'",
        "'submission.json'",
        "'__main__'",
        "\"Add theme song to database.\"",
        "'--daily_update'",
        "'store_true'",
        "'Run in daily update mode.'",
        "'--issue_update'",
        "'store_true'",
        "'Run in issue update mode.'",
        "'--add_game'",
        "'--add-game'",
        "'store_true'",
        "'Add Game theme song.'",
        "'--add_movie'",
        "'--add-movie'",
        "'store_true'",
        "'Add Movie theme song.'",
        "'\"--add_game\" or \"--add_movie\" arg must be passed.'",
        "'\"--add_game\" or \"--add_movie\" arg must be passed, not both.'",
        "'.'",
        "'movie'",
        "'.'",
        "'game'"
    ],
    "variables": [
        "igdb_dir",
        "tmdb_dir",
        "queue",
        "auth_headers",
        "token_url",
        "authorization",
        "auth",
        "wrapper",
        "count",
        "response",
        "item",
        "t",
        "t",
        "daemon",
        "where_type",
        "where",
        "where_type",
        "where",
        "destination_filenames",
        "og_data",
        "fields",
        "limit",
        "offset",
        "byte_array",
        "json_result",
        "game_id",
        "json_data",
        "igdb_file",
        "og_data",
        "og_data",
        "destination_file",
        "destination_dir",
        "destination_filenames",
        "og_data",
        "tmdb_file",
        "og_data",
        "url",
        "response",
        "json_data",
        "og_data",
        "destination_file",
        "destination_dir",
        "submission",
        "youtube_url",
        "url",
        "game_slug",
        "url",
        "themoviedb_id",
        "url",
        "youtube_dl_params",
        "ydl",
        "result",
        "video_data",
        "video_data",
        "webpage_url",
        "data",
        "parser",
        "args",
        "all_movies",
        "item_id",
        "all_games",
        "item_id"
    ],
    "comments": [
        "standard imports",
        "lib imports",
        "load env",
        "default paths",
        "setup queue",
        "setup igdb authorization and wrapper",
        "process the item from the queue",
        "tells the queue that we are done with this item",
        "create multiple threads for processing themes faster",
        "number of threads",
        "for each thread, start it",
        "when we set daemon to true, that thread will end when the main thread ends",
        "start the daemon thread",
        "empty dictionary to handle future cases",
        "this is a list of dictionaries",
        "get currently saved data",
        "update the existing dictionary with new values from json_data",
        "set the item filename",
        "create directory if it doesn't exist",
        "empty dictionary to handle future cases",
        "get currently saved data",
        "get the data from tmdb api",
        "update the existing dictionary with new values from json_data",
        "set the item filename",
        "set the item filename",
        "create directory if it doesn't exist",
        "process submission file",
        "check validity of provided YouTube url and update item dictionary",
        "check validity of IGDB url and update item dictionary",
        "url provided, now process it using youtube_dl",
        "We just want to extract the info",
        "Can be a playlist or a list of videos",
        "Just a video",
        "setup arguments using argparse"
    ],
    "docstrings": [
        "\"\"\"\n    Get the igdb authorization.\n\n    Parameters\n    ----------\n    client_id : str\n        Twitch developer client id.\n    client_secret : str\n        Twitch developer client secret.\n\n    Returns\n    -------\n    dict\n        Dictionary containing access token and expiration.\n    \"\"\"",
        "\"\"\"\n    Add items to the queue.\n    This is an endless loop to add items to the queue.\n    Examples\n    --------\n    >>> threads = threading.Thread(target=process_queue, daemon=True)\n    ...\n    \"\"\""
    ],
    "functions": [
        "igdb_authorization",
        "requests_loop",
        "process_queue",
        "queue_handler",
        "process_igdb_id",
        "process_tmdb_id",
        "process_issue_update",
        "check_igdb",
        "check_themoviedb",
        "check_youtube",
        "process_submission"
    ],
    "classes": []
}