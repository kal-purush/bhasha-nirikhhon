{
    "identifiers": [
        "Collections",
        "Generic",
        "Net",
        "Http",
        "Headers",
        "Text",
        "Xbim",
        "Common",
        "Xbim",
        "Geometry",
        "Abstractions",
        "Extensions",
        "IModel",
        "model",
        "key",
        "value",
        "model",
        "Tag",
        "keyValuePairs",
        "Add",
        "key",
        "value",
        "model",
        "Tag",
        "keyValuePairs",
        "model",
        "Tag",
        "IDictionary",
        "keyValuePairs",
        "keyValuePairs",
        "ContainsKey",
        "key",
        "keyValuePairs",
        "Add",
        "key",
        "value",
        "T",
        "IModel",
        "model",
        "key",
        "T",
        "value",
        "model",
        "Tag",
        "model",
        "Tag",
        "IDictionary",
        "keyValuePairs",
        "keyValuePairs",
        "TryGetValue",
        "key",
        "val",
        "val",
        "T",
        "value",
        "T",
        "val",
        "value",
        "IModel",
        "model",
        "key",
        "model",
        "Tag",
        "model",
        "Tag",
        "IDictionary",
        "keyValuePairs",
        "keyValuePairs",
        "Remove",
        "key"
    ],
    "literals": [],
    "variables": [
        "keyValuePairs"
    ],
    "comments": [
        "Treat the tag property of IModel a dictionary of key value pairs",
        "allowing more than one object to be stored against the dictionary",
        "NB this can be overriden if another user sets the Tag property directly",
        "It is only safe in scenarios where model ownership is well defined",
        "</summary>",
        "<param name=\"model\"></param>",
        "<param name=\"key\"></param>",
        "<param name=\"value\"></param>",
        "<returns>false if another user has set the tage property or the key is already in use</returns>",
        "Sets a value with a key against the tag property",
        "</summary>",
        "<typeparam name=\"T\"></typeparam>",
        "<param name=\"model\"></param>",
        "<param name=\"key\"></param>",
        "<param name=\"value\"></param>",
        "<returns>returnd false if the tag property is not initialised as a KeyValue pair dictionary or the key has not been set with a value</returns>",
        "Removes a keyed value from the Tag property disctionary",
        "</summary>",
        "<param name=\"model\"></param>",
        "<param name=\"key\"></param>",
        "<returns>returns false if the dictionary has not been initialised or the key is not present in the dictionary</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "AddTagValue",
        "GetTagValue",
        "RemoveTagValue"
    ],
    "classes": [
        "IXModelExtensions"
    ]
}