{
    "identifiers": [
        "models",
        "amenity",
        "Amenity",
        "models",
        "storage",
        "api",
        "v1",
        "views",
        "app_views",
        "flask",
        "abort",
        "jsonify",
        "make_response",
        "request",
        "flasgger",
        "utils",
        "swag_from",
        "app_views",
        "route",
        "methods",
        "strict_slashes",
        "swag_from",
        "storage",
        "all",
        "Amenity",
        "values",
        "amenity",
        "all_amenities",
        "list_amenities",
        "append",
        "amenity",
        "to_dict",
        "jsonify",
        "list_amenities",
        "app_views",
        "route",
        "methods",
        "strict_slashes",
        "swag_from",
        "methods",
        "amenity_id",
        "storage",
        "get",
        "Amenity",
        "amenity_id",
        "amenity",
        "abort",
        "jsonify",
        "amenity",
        "to_dict",
        "app_views",
        "route",
        "methods",
        "strict_slashes",
        "swag_from",
        "methods",
        "amenity_id",
        "storage",
        "get",
        "Amenity",
        "amenity_id",
        "amenity",
        "abort",
        "storage",
        "amenity",
        "storage",
        "save",
        "make_response",
        "jsonify",
        "app_views",
        "route",
        "methods",
        "strict_slashes",
        "swag_from",
        "methods",
        "request",
        "get_json",
        "abort",
        "description",
        "request",
        "get_json",
        "abort",
        "description",
        "request",
        "get_json",
        "Amenity",
        "data",
        "instance",
        "save",
        "make_response",
        "jsonify",
        "instance",
        "to_dict",
        "app_views",
        "route",
        "methods",
        "strict_slashes",
        "swag_from",
        "methods",
        "amenity_id",
        "request",
        "get_json",
        "abort",
        "description",
        "storage",
        "get",
        "Amenity",
        "amenity_id",
        "amenity",
        "abort",
        "request",
        "get_json",
        "key",
        "value",
        "data",
        "items",
        "key",
        "ignore",
        "setattr",
        "amenity",
        "key",
        "value",
        "storage",
        "save",
        "make_response",
        "jsonify",
        "amenity",
        "to_dict"
    ],
    "literals": [
        "'/amenities'",
        "'GET'",
        "'documentation/amenity/all_amenities.yml'",
        "'/amenities/<amenity_id>/'",
        "'GET'",
        "'documentation/amenity/get_amenity.yml'",
        "'GET'",
        "'/amenities/<amenity_id>'",
        "'DELETE'",
        "'documentation/amenity/delete_amenity.yml'",
        "'DELETE'",
        "'/amenities'",
        "'POST'",
        "'documentation/amenity/post_amenity.yml'",
        "'POST'",
        "\"Not a JSON\"",
        "'name'",
        "\"Missing name\"",
        "'/amenities/<amenity_id>'",
        "'PUT'",
        "'documentation/amenity/put_amenity.yml'",
        "'PUT'",
        "\"Not a JSON\"",
        "'id'",
        "'created_at'",
        "'updated_at'"
    ],
    "variables": [
        "all_amenities",
        "list_amenities",
        "amenity",
        "amenity",
        "data",
        "instance",
        "ignore",
        "amenity",
        "data"
    ],
    "comments": [
        "!/usr/bin/python3"
    ],
    "docstrings": [
        "\"\"\" objects that handles all default RestFul API actions for Amenities\"\"\"",
        "\"\"\"\n    Retrieves a list of all amenities\n    \"\"\"",
        "\"\"\" Retrieves an amenity \"\"\"",
        "\"\"\"\n    Deletes an amenity  Object\n    \"\"\"",
        "\"\"\"\n    Creates an amenity\n    \"\"\"",
        "\"\"\"\n    Updates an amenity\n    \"\"\""
    ],
    "functions": [
        "get_amenities",
        "get_amenity",
        "delete_amenity",
        "post_amenity",
        "put_amenity"
    ],
    "classes": []
}