{
    "identifiers": [
        "codechicken",
        "nei",
        "util",
        "java",
        "math",
        "RoundingMode",
        "java",
        "text",
        "DecimalFormat",
        "java",
        "text",
        "DecimalFormatSymbols",
        "java",
        "text",
        "Format",
        "ReadableNumberConverter",
        "INSTANCE",
        "DIVISION_BASE",
        "ENCODED_POSTFIXES",
        "toCharArray",
        "format",
        "symbols",
        "symbols",
        "setDecimalSeparator",
        "symbols",
        "setGroupingSeparator",
        "format",
        "format",
        "setDecimalFormatSymbols",
        "symbols",
        "format",
        "setRoundingMode",
        "RoundingMode",
        "DOWN",
        "format",
        "format",
        "number",
        "toReadableFormRestrictedByWidth",
        "number",
        "number",
        "width",
        "number",
        "numberString",
        "toString",
        "number",
        "numberSize",
        "numberString",
        "length",
        "numberSize",
        "width",
        "numberString",
        "number",
        "last",
        "exponent",
        "postFix",
        "numberSize",
        "width",
        "last",
        "DIVISION_BASE",
        "exponent",
        "numberSize",
        "toString",
        "length",
        "postFix",
        "valueOf",
        "ENCODED_POSTFIXES",
        "exponent",
        "withPrecision",
        "format",
        "format",
        "last",
        "DIVISION_BASE",
        "postFix",
        "withoutPrecision",
        "toString",
        "postFix",
        "slimResult",
        "withPrecision",
        "length",
        "width",
        "withPrecision",
        "withoutPrecision",
        "slimResult",
        "length",
        "width",
        "slimResult",
        "number",
        "toReadableFormRestrictedByWidth",
        "number"
    ],
    "literals": [
        "\"KMGTPE\"",
        "\".#;0.#\"",
        "\"\""
    ],
    "variables": [
        "format"
    ],
    "comments": [
        "handles low numbers more efficiently since no format is needed",
        "adds +1 due to the postfix",
        "post condition"
    ],
    "docstrings": [
        "* copy from ae2\n * Converter class to convert a large number into a SI system.\n *\n * @author thatsIch\n * @version rv2\n * @since rv2",
        "* Defines the base for a division, non-si standard could be 1024 for kilobytes",
        "* String representation of the sorted postfixes",
        "* Initializes the specific decimal format with special format for negative and positive numbers",
        "* restricts a string representation of a number to a specific width\n     *\n     * @param number to be formatted number\n     * @param width  width limitation of the resulting number\n     * @return formatted number restricted by the width limitation"
    ],
    "functions": [
        "ReadableNumberConverter",
        "toSlimReadableForm",
        "toReadableFormRestrictedByWidth",
        "toWideReadableForm"
    ],
    "classes": []
}