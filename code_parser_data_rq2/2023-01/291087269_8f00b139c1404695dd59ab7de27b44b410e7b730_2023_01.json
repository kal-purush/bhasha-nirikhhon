{
    "identifiers": [
        "logging",
        "django",
        "conf",
        "settings",
        "django",
        "core",
        "management",
        "BaseCommand",
        "django",
        "db",
        "transaction",
        "django",
        "utils",
        "translation",
        "gettext",
        "_",
        "taxonomy",
        "exceptions",
        "InvalidCommandOptionsError",
        "taxonomy",
        "models",
        "XBlockSkillData",
        "logging",
        "getLogger",
        "BaseCommand",
        "parser",
        "parser",
        "add_argument",
        "help",
        "_",
        "parser",
        "add_argument",
        "help",
        "_",
        "parser",
        "add_argument",
        "help",
        "_",
        "parser",
        "add_argument",
        "help",
        "_",
        "staticmethod",
        "argument",
        "setting_key",
        "options",
        "options",
        "get",
        "argument",
        "getattr",
        "settings",
        "setting_key",
        "value",
        "InvalidCommandOptionsError",
        "setting_key",
        "argument",
        "replace",
        "value",
        "staticmethod",
        "actual_count",
        "total_count",
        "min_votes",
        "ratio_threshold",
        "actual_count",
        "min_votes",
        "actual_count",
        "total_count",
        "count_ratio",
        "ratio_threshold",
        "has_min_votes",
        "crosses_ratio_threshold",
        "args",
        "options",
        "LOGGER",
        "info",
        "_get_and_validate_argument_value",
        "options",
        "_get_and_validate_argument_value",
        "options",
        "_get_and_validate_argument_value",
        "options",
        "_get_and_validate_argument_value",
        "options",
        "transaction",
        "atomic",
        "XBlockSkillData",
        "objects",
        "verified",
        "is_blacklisted",
        "xblock_skill",
        "unverified_skills",
        "xblock_skill",
        "verified_count",
        "xblock_skill",
        "verified_count",
        "xblock_skill",
        "ignored_count",
        "xblock_skill",
        "ignored_count",
        "verified_count",
        "ignored_count",
        "total_count",
        "_is_over_threshold",
        "verified_count",
        "total_count",
        "min_verified_votes",
        "ratio_verified_threshold",
        "xblock_skill",
        "save",
        "LOGGER",
        "info",
        "xblock_skill",
        "skill",
        "name",
        "xblock_skill",
        "xblock",
        "usage_key",
        "_is_over_threshold",
        "ignored_count",
        "total_count",
        "min_ignored_votes",
        "ratio_ignored_threshold",
        "xblock_skill",
        "save",
        "LOGGER",
        "info",
        "xblock_skill",
        "skill",
        "name",
        "xblock_skill",
        "xblock",
        "usage_key",
        "LOGGER",
        "info"
    ],
    "literals": [
        "'Checks the votes on xblockskill tags to verify it'",
        "'--min-verified-votes'",
        "'Minimum number of votes required for verification'",
        "'--ratio-verified-threshold'",
        "'Ratio of min verified_count to total count for verification'",
        "'--min-ignored-votes'",
        "'Minimum number of times the skill must be ignored to be blacklisted'",
        "'--ratio-ignored-threshold'",
        "'Ratio of min ignored_count to total count for blacklisting'",
        "f'Either configure {setting_key} in settings or pass with arg --{argument.replace(\"_\", \"-\")}'",
        "\"_\"",
        "\"-\"",
        "'Starting xblockskill tags verification task'",
        "'min_verified_votes'",
        "\"SKILLS_VERIFICATION_THRESHOLD\"",
        "'ratio_verified_threshold'",
        "\"SKILLS_VERIFICATION_RATIO_THRESHOLD\"",
        "'min_ignored_votes'",
        "\"SKILLS_IGNORED_THRESHOLD\"",
        "'ratio_ignored_threshold'",
        "\"SKILLS_IGNORED_RATIO_THRESHOLD\"",
        "'[%s] skill tag for the xblock [%s] has been verified'",
        "'[%s] skill tag for the xblock [%s] has been blacklisted'",
        "'Xblockskill tags verification task is completed'"
    ],
    "variables": [
        "LOGGER",
        "help",
        "value",
        "has_min_votes",
        "count_ratio",
        "crosses_ratio_threshold",
        "min_verified_votes",
        "ratio_verified_threshold",
        "min_ignored_votes",
        "ratio_ignored_threshold",
        "unverified_skills",
        "verified_count",
        "ignored_count",
        "total_count",
        "xblock_skill",
        "verified",
        "xblock_skill",
        "is_blacklisted"
    ],
    "comments": [
        "-*- coding: utf-8 -*-"
    ],
    "docstrings": [
        "\"\"\"\nManagement command for finalizing the xblockskill tags based on number of votes.\n\"\"\"",
        "\"\"\"\n    Command to check if xblockskill tags are verified based on votes.\n\n    The tags are marked as verified when it's verified count is\n    above the minimum votes, and the ratio of verified count to\n    the total count is above the ratio threshold. Both the\n    minimum votes and ratio threshold values are configurable.\n    Example usage:\n        $ ./manage.py finalize_xblockskill_tags\n    \"\"\"",
        "\"\"\"\n        Add arguments to the command parser\n        \"\"\"",
        "\"\"\"\n        Gets argument value from arguments or settings. Raises error if None.\n        \"\"\"",
        "\"\"\"\n        Checks if count passes min count and ratio test.\n        \"\"\"",
        "\"\"\"\n        Entry point for management command execution.\n        \"\"\""
    ],
    "functions": [
        "add_arguments",
        "_get_and_validate_argument_value",
        "_is_over_threshold",
        "handle"
    ],
    "classes": [
        "Command"
    ]
}