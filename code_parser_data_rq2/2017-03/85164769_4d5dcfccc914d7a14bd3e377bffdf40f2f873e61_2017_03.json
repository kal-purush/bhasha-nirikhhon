{
    "identifiers": [
        "DocumentDB",
        "GetStarted",
        "Linq",
        "Threading",
        "Tasks",
        "Net",
        "Configuration",
        "Microsoft",
        "Azure",
        "Documents",
        "Microsoft",
        "Azure",
        "Documents",
        "Client",
        "Newtonsoft",
        "Json",
        "ConfigurationManager",
        "AppSettings",
        "ConfigurationManager",
        "AppSettings",
        "args",
        "Program",
        "p",
        "GetStartedDemo",
        "Wait",
        "DocumentClientException",
        "de",
        "de",
        "GetBaseException",
        "WriteLine",
        "de",
        "StatusCode",
        "de",
        "Message",
        "baseException",
        "Message",
        "e",
        "e",
        "GetBaseException",
        "WriteLine",
        "e",
        "Message",
        "baseException",
        "Message",
        "WriteLine",
        "ReadKey",
        "client",
        "DocumentClient",
        "Uri",
        "EndpointUri",
        "PrimaryKey",
        "CreateDatabaseIfNotExists",
        "CreateDocumentCollectionIfNotExists",
        "Family",
        "Id",
        "LastName",
        "Parents",
        "Parent",
        "Parent",
        "FirstName",
        "Parent",
        "FirstName",
        "Children",
        "Child",
        "Child",
        "FirstName",
        "Gender",
        "Grade",
        "Pets",
        "Pet",
        "Pet",
        "GivenName",
        "Address",
        "Address",
        "State",
        "County",
        "City",
        "IsRegistered",
        "CreateFamilyDocumentIfNotExists",
        "andersenFamily",
        "Family",
        "Id",
        "LastName",
        "Parents",
        "Parent",
        "Parent",
        "FamilyName",
        "FirstName",
        "Parent",
        "FamilyName",
        "FirstName",
        "Children",
        "Child",
        "Child",
        "FamilyName",
        "FirstName",
        "Gender",
        "Grade",
        "Pets",
        "Pet",
        "Pet",
        "GivenName",
        "Pet",
        "GivenName",
        "Child",
        "FamilyName",
        "FirstName",
        "Gender",
        "Grade",
        "Address",
        "Address",
        "State",
        "County",
        "City",
        "IsRegistered",
        "CreateFamilyDocumentIfNotExists",
        "wakefieldFamily",
        "ExecuteSimpleQuery",
        "andersenFamily",
        "Children",
        "Grade",
        "ReplaceFamilyDocument",
        "andersenFamily",
        "ExecuteSimpleQuery",
        "DeleteFamilyDocument",
        "client",
        "DeleteDatabaseAsync",
        "UriFactory",
        "CreateDatabaseUri",
        "databaseName",
        "client",
        "ReadDatabaseAsync",
        "UriFactory",
        "CreateDatabaseUri",
        "databaseName",
        "WriteToConsoleAndPromptToContinue",
        "databaseName",
        "DocumentClientException",
        "de",
        "de",
        "StatusCode",
        "HttpStatusCode",
        "NotFound",
        "client",
        "CreateDatabaseAsync",
        "Database",
        "Id",
        "databaseName",
        "WriteToConsoleAndPromptToContinue",
        "databaseName",
        "databaseName",
        "collectionName",
        "client",
        "ReadDocumentCollectionAsync",
        "UriFactory",
        "CreateDocumentCollectionUri",
        "databaseName",
        "collectionName",
        "WriteToConsoleAndPromptToContinue",
        "collectionName",
        "DocumentClientException",
        "de",
        "de",
        "StatusCode",
        "HttpStatusCode",
        "NotFound",
        "DocumentCollection",
        "collectionInfo",
        "Id",
        "collectionName",
        "collectionInfo",
        "IndexingPolicy",
        "IndexingPolicy",
        "RangeIndex",
        "DataType",
        "Precision",
        "client",
        "CreateDocumentCollectionAsync",
        "UriFactory",
        "CreateDatabaseUri",
        "databaseName",
        "DocumentCollection",
        "Id",
        "collectionName",
        "RequestOptions",
        "OfferThroughput",
        "WriteToConsoleAndPromptToContinue",
        "collectionName",
        "databaseName",
        "collectionName",
        "Family",
        "family",
        "client",
        "ReadDocumentAsync",
        "UriFactory",
        "CreateDocumentUri",
        "databaseName",
        "collectionName",
        "family",
        "Id",
        "WriteToConsoleAndPromptToContinue",
        "family",
        "Id",
        "DocumentClientException",
        "de",
        "de",
        "StatusCode",
        "HttpStatusCode",
        "NotFound",
        "client",
        "CreateDocumentAsync",
        "UriFactory",
        "CreateDocumentCollectionUri",
        "databaseName",
        "collectionName",
        "family",
        "WriteToConsoleAndPromptToContinue",
        "family",
        "Id",
        "databaseName",
        "collectionName",
        "FeedOptions",
        "MaxItemCount",
        "IQueryable",
        "Family",
        "client",
        "CreateDocumentQuery",
        "Family",
        "UriFactory",
        "CreateDocumentCollectionUri",
        "databaseName",
        "collectionName",
        "queryOptions",
        "Where",
        "f",
        "LastName",
        "WriteLine",
        "Family",
        "family",
        "familyQuery",
        "WriteLine",
        "family",
        "IQueryable",
        "Family",
        "client",
        "CreateDocumentQuery",
        "Family",
        "UriFactory",
        "CreateDocumentCollectionUri",
        "databaseName",
        "collectionName",
        "queryOptions",
        "WriteLine",
        "Family",
        "family",
        "familyQueryInSql",
        "WriteLine",
        "family",
        "WriteLine",
        "ReadKey",
        "databaseName",
        "collectionName",
        "familyName",
        "Family",
        "updatedFamily",
        "client",
        "ReplaceDocumentAsync",
        "UriFactory",
        "CreateDocumentUri",
        "databaseName",
        "collectionName",
        "familyName",
        "updatedFamily",
        "WriteToConsoleAndPromptToContinue",
        "familyName",
        "DocumentClientException",
        "de",
        "de",
        "databaseName",
        "collectionName",
        "documentName",
        "client",
        "DeleteDocumentAsync",
        "UriFactory",
        "CreateDocumentUri",
        "databaseName",
        "collectionName",
        "documentName",
        "WriteLine",
        "documentName",
        "DocumentClientException",
        "de",
        "de",
        "format",
        "args",
        "WriteLine",
        "format",
        "args",
        "WriteLine",
        "ReadKey",
        "JsonProperty",
        "PropertyName",
        "Parent",
        "Child",
        "JsonConvert",
        "SerializeObject",
        "Pet"
    ],
    "literals": [
        "\"EndPointUri\"",
        "\"PrimaryKey\"",
        "\"{0} error occurred: {1}, Message: {2}\"",
        "\"Error: {0}, Message: {1}\"",
        "\"End of demo, press any key to exit.\"",
        "\"FamilyDB_vg\"",
        "\"FamilyDB_vg\"",
        "\"FamilyCollection_vg\"",
        "\"Andersen.1\"",
        "\"Andersen\"",
        "\"Thomas\"",
        "\"Mary Kay\"",
        "\"Henriette Thaulow\"",
        "\"female\"",
        "\"Fluffy\"",
        "\"WA\"",
        "\"King\"",
        "\"Seattle\"",
        "\"FamilyDB_vg\"",
        "\"FamilyCollection_vg\"",
        "\"Wakefield.7\"",
        "\"Wakefield\"",
        "\"Wakefield\"",
        "\"Robin\"",
        "\"Miller\"",
        "\"Ben\"",
        "\"Merriam\"",
        "\"Jesse\"",
        "\"female\"",
        "\"Goofy\"",
        "\"Shadow\"",
        "\"Miller\"",
        "\"Lisa\"",
        "\"female\"",
        "\"NY\"",
        "\"Manhattan\"",
        "\"NY\"",
        "\"FamilyDB_vg\"",
        "\"FamilyCollection_vg\"",
        "\"FamilyDB_vg\"",
        "\"FamilyCollection_vg\"",
        "\"FamilyDB_vg\"",
        "\"FamilyCollection_vg\"",
        "\"Andersen.1\"",
        "\"FamilyDB_vg\"",
        "\"FamilyCollection_vg\"",
        "\"FamilyDB_vg\"",
        "\"FamilyCollection_vg\"",
        "\"Andersen.1\"",
        "\"FamilyDB_vg\"",
        "\"Found {0}\"",
        "\"Created {0}\"",
        "\"Found {0}\"",
        "\"Created {0}\"",
        "\"Found {0}\"",
        "\"Created Family {0}\"",
        "\"Andersen\"",
        "\"Running LINQ query...\"",
        "\"\\tRead {0}\"",
        "\"SELECT * FROM Family WHERE Family.LastName = 'Andersen'\"",
        "\"Running direct SQL query...\"",
        "\"\\tRead {0}\"",
        "\"Press any key to continue ...\"",
        "\"Replaced Family {0}\"",
        "\"Deleted Family {0}\"",
        "\"Press any key to continue ...\"",
        "\"id\""
    ],
    "variables": [
        "EndpointUri",
        "PrimaryKey",
        "DocumentClient",
        "client",
        "Program",
        "p",
        "baseException",
        "baseException",
        "Family",
        "andersenFamily",
        "Family",
        "wakefieldFamily",
        "DocumentCollection",
        "collectionInfo",
        "FeedOptions",
        "queryOptions",
        "familyQuery",
        "familyQueryInSql",
        "Id",
        "LastName",
        "Parents",
        "Children",
        "Address",
        "Address",
        "IsRegistered",
        "FamilyName",
        "FirstName",
        "FamilyName",
        "FirstName",
        "Gender",
        "Grade",
        "Pets",
        "GivenName",
        "State",
        "County",
        "City"
    ],
    "comments": [
        "---------------------------------------------------------------------------------",
        "<copyright file=\"Program.cs\" company=\"Microsoft\">",
        "Microsoft (R)  Azure SDK",
        "Software Development Kit",
        "",
        "Copyright (c) Microsoft Corporation. All rights reserved.",
        "",
        "THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,",
        "EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES",
        "OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.",
        "</copyright>",
        "---------------------------------------------------------------------------------",
        "This get-started sample demonstrates the creation of resources and execution of simple queries.",
        "</summary>",
        "The Azure DocumentDB endpoint for running this GetStarted sample.",
        "</summary>",
        "The primary key for the Azure DocumentDB account.",
        "</summary>",
        "The DocumentDB client instance.",
        "</summary>",
        "The main method for the demo",
        "</summary>",
        "<param name=\"args\">Command line arguments</param>",
        "Run the get started demo for Azure DocumentDB. This creates a database, collection, two documents, executes a simple query",
        "and cleans up.",
        "</summary>",
        "<returns>The Task for asynchronous completion.</returns>",
        "Create a new instance of the DocumentClient",
        "Insert a document, here we create a Family object",
        "Update the Grade of the Andersen Family child",
        "Delete the document",
        "Clean up/delete the database and client",
        "Create a database with the specified name if it doesn't exist.",
        "</summary>",
        "<param name=\"databaseName\">The name/ID of the database.</param>",
        "<returns>The Task for asynchronous execution.</returns>",
        "Check to verify a database with the id=FamilyDB_vg does not exist",
        "If the database does not exist, create a new database",
        "Create a collection with the specified name if it doesn't exist.",
        "</summary>",
        "<param name=\"databaseName\">The name/ID of the database.</param>",
        "<param name=\"collectionName\">The name/ID of the collection.</param>",
        "<returns>The Task for asynchronous execution.</returns>",
        "If the document collection does not exist, create a new collection",
        "Optionally, you can configure the indexing policy of a collection. Here we configure collections for maximum query flexibility",
        "including string range queries.",
        "DocumentDB collections can be reserved with throughput specified in request units/second. 1 RU is a normalized request equivalent to the read",
        "of a 1KB document.  Here we create a collection with 400 RU/s.",
        "Create the Family document in the collection if another by the same ID doesn't already exist.",
        "</summary>",
        "<param name=\"databaseName\">The name/ID of the database.</param>",
        "<param name=\"collectionName\">The name/ID of the collection.</param>",
        "<param name=\"family\">The family document to be created.</param>",
        "<returns>The Task for asynchronous execution.</returns>",
        "Execute a simple query using LINQ and SQL. Here we filter using the \"LastName\" property.",
        "</summary>",
        "<param name=\"databaseName\">The name/ID of the database.</param>",
        "<param name=\"collectionName\">The name/ID of the collection.</param>",
        "Set some common query options",
        "Run a simple query via LINQ. DocumentDB indexes all properties, so queries can be completed efficiently and with low latency.",
        "Here we find the Andersen family via its LastName",
        "The query is executed synchronously here, but can also be executed asynchronously via the IDocumentQuery<T> interface",
        "Now execute the same query via direct SQL",
        "Replace the Family document in the collection.",
        "</summary>",
        "<param name=\"databaseName\">The name/ID of the database.</param>",
        "<param name=\"collectionName\">The name/ID of the collection.</param>",
        "<param name=\"familyName\">The name/ID of the document</param>",
        "<param name=\"updatedFamily\">The family document to be replaced.</param>",
        "<returns>The Task for asynchronous execution.</returns>",
        "Delete the Family document in the collection.",
        "</summary>",
        "<param name=\"databaseName\">The name/ID of the database.</param>",
        "<param name=\"collectionName\">The name/ID of the collection.</param>",
        "<param name=\"documentName\">The name/ID of the document.</param>",
        "<returns>The Task for asynchronous execution.</returns>",
        "Write to the console, and prompt to continue.",
        "</summary>",
        "<param name=\"format\">The string to be displayed.</param>",
        "<param name=\"args\">Optional arguments.</param>",
        "A Family class, e.g. storing census data about families within the United States. We use this data model throughout the",
        "sample to show how you can store objects within your application logic directly as JSON within Azure DocumentDB.",
        "</summary>",
        "A parent class used within Family",
        "</summary>",
        "A child class used within Family",
        "</summary>",
        "A pet class that belongs to a Child",
        "</summary>",
        "An address class containing data attached to a Family.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Main",
        "GetStartedDemo",
        "CreateDatabaseIfNotExists",
        "CreateDocumentCollectionIfNotExists",
        "CreateFamilyDocumentIfNotExists",
        "ExecuteSimpleQuery",
        "ReplaceFamilyDocument",
        "DeleteFamilyDocument",
        "WriteToConsoleAndPromptToContinue",
        "ToString"
    ],
    "classes": [
        "Program",
        "Family",
        "Parent",
        "Child",
        "Pet",
        "Address"
    ]
}