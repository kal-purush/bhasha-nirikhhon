{
    "identifiers": [
        "Solution",
        "postorderTraversal",
        "root",
        "result",
        "root",
        "result",
        "stack",
        "stack",
        "push",
        "root",
        "previous",
        "stack",
        "isEmpty",
        "current",
        "stack",
        "peek",
        "previous",
        "previous",
        "left",
        "current",
        "previous",
        "right",
        "current",
        "current",
        "left",
        "stack",
        "push",
        "current",
        "left",
        "current",
        "right",
        "stack",
        "push",
        "current",
        "right",
        "current",
        "left",
        "previous",
        "current",
        "right",
        "stack",
        "push",
        "current",
        "right",
        "result",
        "add",
        "current",
        "val",
        "stack",
        "pop",
        "previous",
        "current",
        "result",
        "root",
        "root",
        "root",
        "postorderTraversal",
        "root",
        "left",
        "postorderTraversal",
        "root",
        "right",
        "root",
        "data",
        "root",
        "root",
        "arrayList",
        "root",
        "arrayList",
        "add",
        "root",
        "val",
        "arrayList",
        "addAll",
        "preorderTraversal",
        "root",
        "left",
        "arrayList",
        "addAll",
        "preorderTraversal",
        "root",
        "right",
        "arrayList",
        "root",
        "root",
        "root",
        "root",
        "data",
        "preorderTraversal",
        "root",
        "left",
        "preorderTraversal",
        "root",
        "right",
        "root",
        "result",
        "root",
        "result",
        "done",
        "stack",
        "currentNode",
        "root",
        "done",
        "currentNode",
        "stack",
        "push",
        "currentNode",
        "currentNode",
        "currentNode",
        "left",
        "stack",
        "isEmpty",
        "done",
        "currentNode",
        "stack",
        "pop",
        "result",
        "add",
        "currentNode",
        "val",
        "currentNode",
        "currentNode",
        "right",
        "result",
        "root",
        "root",
        "root",
        "inorderTraversal",
        "root",
        "left",
        "root",
        "data",
        "inorderTraversal",
        "root",
        "right"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"\""
    ],
    "variables": [],
    "comments": [
        "Recursive Solution",
        "Preorder traversal",
        "Iterative Solution",
        "Recursive Solution",
        "Inorder inorderTraversal",
        "Iterative Solution",
        "Recursive Solution"
    ],
    "docstrings": [
        "*@author Pranay Sampat",
        "PostOrder traversal\n*   Iterative Solution",
        "* Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }"
    ],
    "functions": [
        "postOrderTraversal",
        "preorderTraversal",
        "preorderTraversal",
        "inorderTraversal",
        "inorderTraversal"
    ],
    "classes": [
        "Solution",
        "Solution"
    ]
}