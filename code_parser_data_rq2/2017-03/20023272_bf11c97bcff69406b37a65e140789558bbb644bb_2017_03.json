{
    "identifiers": [
        "datetime",
        "hashlib",
        "os",
        "sqlite3",
        "tarfile",
        "re",
        "sqlite3",
        "connect",
        "db_file",
        "conn",
        "cursor",
        "drop_tarfile_table",
        "c",
        "execute",
        "sqlite3",
        "OperationalError",
        "c",
        "execute",
        "c",
        "execute",
        "conn",
        "commit",
        "sqlite3",
        "OperationalError",
        "check_bkpdir",
        "root",
        "dir",
        "files",
        "os",
        "walk",
        "backup_directory",
        "file",
        "files",
        "re",
        "sub",
        "files_prefix",
        "root",
        "file",
        "c",
        "execute",
        "sql_filename",
        "len",
        "a",
        "fetchall",
        "hashlib",
        "hash_type",
        "open",
        "root",
        "file",
        "fp",
        "fp",
        "read",
        "chunk_size",
        "data",
        "h",
        "update",
        "data",
        "fp",
        "read",
        "chunk_size",
        "h",
        "hexdigest",
        "c",
        "execute",
        "sql_filename",
        "md5",
        "conn",
        "commit",
        "md5",
        "sql_filename",
        "root",
        "file",
        "check_tarfile",
        "tarfile",
        "open",
        "tar_file",
        "mode",
        "member",
        "tar",
        "member",
        "isfile",
        "c",
        "execute",
        "member",
        "name",
        "len",
        "a",
        "fetchall",
        "tar",
        "extractfile",
        "member",
        "hashlib",
        "hash_type",
        "f",
        "read",
        "chunk_size",
        "data",
        "h",
        "update",
        "data",
        "f",
        "read",
        "chunk_size",
        "h",
        "hexdigest",
        "c",
        "execute",
        "member",
        "name",
        "md5",
        "md5",
        "member",
        "name",
        "conn",
        "commit",
        "member",
        "name",
        "conn",
        "close"
    ],
    "literals": [
        "\"/mnt/data/cam01/data/images/\"",
        "'^/mnt/data/cam01/data/images/'",
        "\"/dev/nsa0\"",
        "'md5'",
        "\"backup_data.db\"",
        "\"DROP TABLE md5_backup\"",
        "\"CREATE TABLE md5_files (filename text, md5 text)\"",
        "\"CREATE TABLE md5_backup (filename text, md5 text)\"",
        "\"\"",
        "\"%s/%s\"",
        "\"select * from md5_files where filename=?\"",
        "\"%s/%s\"",
        "\"r\"",
        "\"insert into md5_files values (?, ?)\"",
        "\"%s    %s\"",
        "\"Skipping file %s/%s\"",
        "\"r|\"",
        "\"select * from md5_backup where filename=?\"",
        "\"insert into md5_backup values (?, ?)\"",
        "\"%s    %s\"",
        "\"Skipping tar file %s\""
    ],
    "variables": [
        "check_bkpdir",
        "check_tarfile",
        "drop_tarfile_table",
        "backup_directory",
        "files_prefix",
        "tar_file",
        "hash_type",
        "db_file",
        "conn",
        "c",
        "chunk_size",
        "sql_filename",
        "a",
        "h",
        "data",
        "data",
        "md5",
        "tar",
        "chunk_size",
        "store_digests",
        "a",
        "f",
        "h",
        "data",
        "data",
        "md5"
    ],
    "comments": [
        "Mark True/False to check each part of backup.",
        "local test",
        "backup_directory = \"/Users/william/Downloads/bacula-7.4.1/\"",
        "files_prefix = '^/Users/william/Downloads/'  # Will remove this prefix from filenames.",
        "tar_file = \"/Users/william/Downloads/bacula-7.4.1.tar.gz\"",
        "STO01 - T80S",
        "Will remove this prefix from filenames.",
        "If db does not exists",
        "If db already exists",
        "tar_checkfile = datetime.datetime.utcnow().strftime(\"%Y%m%d.txt\")",
        "tarcheck_fp = open(tar_checkfile, \"w\")",
        "Backup directory",
        "tarcheck_fp.write(\"%s    %s\\n\" % (md5, sql_filename))",
        "TAR file"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}