{
    "identifiers": [
        "Component",
        "NgZone",
        "Platform",
        "StatusBar",
        "Splashscreen",
        "TabsPage",
        "InfoModalPage",
        "AuthData",
        "LoadingController",
        "firebase",
        "LoginPage",
        "SignupPage",
        "HomePage",
        "ResetPasswordPage",
        "FriendsPage",
        "CommentsPage",
        "FindFriendsPage",
        "AboutPage",
        "Component",
        "platform",
        "firebase",
        "NgZone",
        "firebase",
        "user",
        "user",
        "LoginPage",
        "unsubscribe",
        "TabsPage",
        "unsubscribe",
        "platform",
        "StatusBar",
        "Splashscreen"
    ],
    "literals": [
        "'@angular/core'",
        "'ionic-angular'",
        "'ionic-native'",
        "'../pages/tabs/tabs'",
        "'../pages/info-modal/info-modal'",
        "'../providers/auth-data'",
        "'ionic-angular'",
        "'firebase'",
        "'../pages/login/login'",
        "'../pages/signup/signup'",
        "'../pages/home/home'",
        "'../pages/reset-password/reset-password'",
        "'../pages/friends/friends'",
        "'../pages/comments/comments'",
        "'../pages/fiend-friends/fiend-friends'",
        "'../pages/about/about'",
        "'app.html'",
        "\"AIzaSyAseZYIB_FzpV-GuKD3TaL2Ykca9BM8ME8\"",
        "\"post-map-f2fbc.firebaseapp.com\"",
        "\"https://post-map-f2fbc.firebaseio.com\"",
        "\"post-map-f2fbc.appspot.com\"",
        "\"791954812338\""
    ],
    "variables": [
        "unsubscribe"
    ],
    "comments": [
        "this one for the auth components",
        "this one is for showing loding ... message",
        "import { firebaseConfig } from './firebase.config';",
        "import { FindFriendsPage } from '../fiend-friends/fiend-friends';",
        "@Component({",
        "templateUrl: 'app.html'",
        "})",
        "export class MyApp {",
        "// by defult it will be the log in page unless he is logged in",
        "rootPage: any = LoginPage;",
        "loader: any;",
        "// we will inject the component",
        "constructor(public auth: Auth,   public loadingCtrl: LoadingController )  {",
        "this.presentLoading();",
        "// we will cheak if the user is auth or not",
        "this.auth.login().then((isLogedin) => {",
        "// if it auth render the tabs page",
        "if(isLogedin){",
        "this.rootPage = TabsPage;",
        "}else {",
        "//if not let him sign in first",
        "this.rootPage = LoginPage;",
        "}",
        "this.loader.dismiss();",
        "});",
        "}",
        "presentLoading() {",
        "this.loader = this.loadingCtrl.create({",
        "content: \"Please wait...\",",
        "});",
        "this.loader.present();",
        "}",
        "}",
        "Okay, so the platform is ready and our plugins are available.",
        "Here you can do any higher level native things you might need."
    ],
    "docstrings": [],
    "functions": [],
    "classes": [
        "MyApp"
    ]
}