{
    "identifiers": [
        "vscode",
        "cp",
        "path",
        "byteOffsetAt",
        "getBinPath",
        "canonicalizeGOPATHPrefix",
        "getFileArchive",
        "killTree",
        "promptForMissingTool",
        "promptForUpdatingTool",
        "getToolsEnvVars",
        "vscode",
        "vscode",
        "position",
        "vscode",
        "token",
        "vscode",
        "vscode",
        "vscode",
        "vscode",
        "resolve",
        "reject",
        "getBinPath",
        "path",
        "goGuru",
        "promptForMissingTool",
        "reject",
        "canonicalizeGOPATHPrefix",
        "byteOffsetAt",
        "position",
        "getToolsEnvVars",
        "vscode",
        "buildTags",
        "buildTags",
        "args",
        "filename",
        "offset",
        "cp",
        "goGuru",
        "args",
        "err",
        "stdout",
        "stderr",
        "err",
        "err",
        "promptForMissingTool",
        "resolve",
        "err",
        "reject",
        "err",
        "stdout",
        "vscode",
        "guruOutput",
        "guruOutput",
        "guruOutput",
        "guruOutput",
        "promptForUpdatingTool",
        "resolve",
        "guruOutput",
        "match",
        "vscode",
        "file",
        "vscode",
        "parseInt",
        "line",
        "parseInt",
        "col",
        "results",
        "vscode",
        "referenceResource",
        "pos",
        "resolve",
        "results",
        "e",
        "reject",
        "e",
        "process",
        "process",
        "getFileArchive",
        "token",
        "killTree",
        "process"
    ],
    "literals": [
        "'use strict'",
        "'vscode'",
        "'child_process'",
        "'path'",
        "'./util'",
        "'./goInstallTools'",
        "'./util'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'guru'",
        "'guru'",
        "'Cannot find tool \"guru\" to find type definitions.'",
        "'go'",
        "'buildTags'",
        "'-tags'",
        "'-json'",
        "'-modified'",
        "'describe'",
        "${filename}:#${offset.toString()}",
        "'ENOENT'",
        "'guru'",
        "'guru'"
    ],
    "variables": [
        "goGuru",
        "filename",
        "offset",
        "env",
        "buildTags",
        "args",
        "process",
        "guruOutput",
        "results",
        "match",
        "_",
        "file",
        "line",
        "col",
        "match",
        "referenceResource",
        "pos"
    ],
    "comments": [
        "---------------------------------------------------------\n * Copyright (C) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------"
    ],
    "docstrings": [],
    "functions": [
        "provideTypeDefinition"
    ],
    "classes": [
        "GoTypeDefinitionProvider"
    ]
}