{
    "identifiers": [
        "com",
        "github",
        "fhuss",
        "kafka",
        "influxdb",
        "kafka",
        "utils",
        "VerifiableProperties",
        "org",
        "asynchttpclient",
        "BoundRequestBuilder",
        "org",
        "asynchttpclient",
        "ListenableFuture",
        "org",
        "asynchttpclient",
        "Request",
        "org",
        "junit",
        "Test",
        "com",
        "github",
        "fhuss",
        "kafka",
        "influxdb",
        "InfluxDBClient",
        "ClientConfig",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "java",
        "util",
        "Properties",
        "java",
        "util",
        "concurrent",
        "CompletableFuture",
        "java",
        "util",
        "concurrent",
        "ExecutionException",
        "java",
        "util",
        "concurrent",
        "Executor",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "util",
        "concurrent",
        "TimeoutException",
        "com",
        "github",
        "fhuss",
        "kafka",
        "influxdb",
        "InfluxDBMetricsConfig",
        "KAFKA_INFLUX_METRICS_CONNECT_CONFIG",
        "java",
        "util",
        "Arrays",
        "stream",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "org",
        "junit",
        "Assert",
        "assertThat",
        "org",
        "junit",
        "Assert",
        "assertTrue",
        "org",
        "mockito",
        "Matchers",
        "org",
        "mockito",
        "Mockito",
        "doAnswer",
        "org",
        "mockito",
        "Mockito",
        "spy",
        "org",
        "hamcrest",
        "Matchers",
        "containsString",
        "org",
        "hamcrest",
        "Matchers",
        "props",
        "requests",
        "config",
        "props",
        "client",
        "spy",
        "config",
        "doAnswer",
        "invocation",
        "requests",
        "add",
        "invocation",
        "getArgumentAt",
        "HAPPY_FUTURE",
        "when",
        "client",
        "executeRequest",
        "client",
        "init",
        "targets",
        "client",
        "getTargets",
        "assertThat",
        "requests",
        "size",
        "targets",
        "size",
        "i",
        "i",
        "targets",
        "size",
        "i",
        "target",
        "targets",
        "get",
        "i",
        "dbTargetConfig",
        "req",
        "requests",
        "get",
        "i",
        "build",
        "assertThat",
        "req",
        "getUrl",
        "containsString",
        "target",
        "getConnectString",
        "assertThat",
        "req",
        "getUri",
        "getQuery",
        "containsString",
        "requests",
        "clear",
        "client",
        "Test",
        "props",
        "props",
        "put",
        "KAFKA_INFLUX_METRICS_CONNECT_CONFIG",
        "requests",
        "client",
        "setup",
        "props",
        "requests",
        "targets",
        "client",
        "getTargets",
        "assertThat",
        "targets",
        "size",
        "point",
        "currentTimeMillis",
        "verifyMeasurement",
        "client",
        "requests",
        "point",
        "Test",
        "props",
        "props",
        "put",
        "KAFKA_INFLUX_METRICS_CONNECT_CONFIG",
        "props",
        "put",
        "KAFKA_INFLUX_METRICS_CONNECT_CONFIG",
        "requests",
        "client",
        "setup",
        "props",
        "requests",
        "targets",
        "client",
        "getTargets",
        "assertThat",
        "targets",
        "size",
        "point",
        "currentTimeMillis",
        "verifyMeasurement",
        "client",
        "requests",
        "point",
        "Test",
        "props",
        "props",
        "put",
        "KAFKA_INFLUX_METRICS_CONNECT_CONFIG",
        "props",
        "put",
        "KAFKA_INFLUX_METRICS_CONNECT_CONFIG",
        "requests",
        "client",
        "setup",
        "props",
        "requests",
        "verifyMeasurement",
        "client",
        "requests",
        "client",
        "requests",
        "points",
        "targets",
        "client",
        "getTargets",
        "client",
        "write",
        "Arrays",
        "asList",
        "points",
        "assertEquals",
        "targets",
        "size",
        "requests",
        "size",
        "i",
        "i",
        "targets",
        "size",
        "i",
        "target",
        "targets",
        "get",
        "i",
        "dbTargetConfig",
        "req",
        "requests",
        "get",
        "i",
        "build",
        "assertThat",
        "req",
        "getUrl",
        "containsString",
        "target",
        "getConnectString",
        "assertTrue",
        "req",
        "getHeaders",
        "contains",
        "targets",
        "get",
        "dbTargetConfig",
        "getBasicAuthCredentials",
        "stream",
        "points",
        "forEach",
        "point",
        "assertThat",
        "point",
        "asLineProtocol",
        "req",
        "getStringData",
        "containsString",
        "point",
        "asLineProtocol",
        "HAPPY_FUTURE",
        "Override",
        "Override",
        "throwable",
        "Override",
        "Override",
        "runnable",
        "executor",
        "Override",
        "Override",
        "mayInterruptIfRunning",
        "Override",
        "Override",
        "Override",
        "Override",
        "timeout",
        "unit",
        "get"
    ],
    "literals": [
        "\"expect db create\"",
        "\"CREATE%20DATABASE\"",
        "\"http://localhost:1\"",
        "\"measurement\"",
        "\".1\"",
        "\"http://localhost:1\"",
        "\".2\"",
        "\"http://localhost:2\"",
        "\"measurement\"",
        "\".1\"",
        "\"http://localhost:1\"",
        "\".2\"",
        "\"http://localhost:2\"",
        "\"one\"",
        "\"two\"",
        "\"three\"",
        "\"four\"",
        "\"five\"",
        "\"Authorization\"",
        "\"Basic \"",
        "\"verify \"",
        "\" is present\""
    ],
    "variables": [
        "points"
    ],
    "comments": [
        "can't really do this as an @Before, because we want to set it up with different config",
        "init will have done a \"create database\" at startup",
        "verify the targets in parallel with the requests",
        "let's see what it looks like",
        "make sure the queue of requests sent out is cleared ready for the test itself",
        "ensure there are as many requests sent as we'd expect for the number of targets",
        "the loop will ensure its one each",
        "verify *all& targets in parallel with the requests",
        "Explicit \"done\"",
        "\"Happy\""
    ],
    "docstrings": [],
    "functions": [
        "InfluxDBClient",
        "setup",
        "testSimpleReport",
        "testMultipleClients",
        "testMultiplePoints",
        "verifyMeasurement",
        "done",
        "abort",
        "touch",
        "addListener",
        "toCompletableFuture",
        "cancel",
        "isCancelled",
        "isDone",
        "get",
        "get"
    ],
    "classes": [
        "InfluxDBClientTest"
    ]
}