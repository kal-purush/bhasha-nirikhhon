{
    "identifiers": [
        "flatten",
        "jest",
        "jest",
        "express",
        "Request",
        "Response",
        "jest",
        "jest",
        "express",
        "router",
        "jest",
        "jest",
        "passport",
        "passport",
        "authenticateObject",
        "require",
        "httpMethod",
        "router",
        "httpMethod",
        "httpMethodCalls",
        "acc",
        "call",
        "acc",
        "route",
        "handler",
        "acc",
        "describe",
        "getRouterRoutes",
        "it",
        "expect",
        "userRouter",
        "express",
        "describe",
        "flatten",
        "router",
        "describe",
        "it",
        "expect",
        "passport",
        "expect",
        "middlewares",
        "authenticateObject",
        "it",
        "expect",
        "passport",
        "describe",
        "middlewares",
        "it",
        "Request",
        "req",
        "jest",
        "mw",
        "req",
        "res",
        "next",
        "expect",
        "next",
        "it",
        "Request",
        "Response",
        "jest",
        "mw",
        "req",
        "res",
        "next",
        "expect",
        "next",
        "expect",
        "res",
        "describe",
        "it",
        "expect",
        "routeMap",
        "expect",
        "it",
        "routeMap",
        "Request",
        "req",
        "jest",
        "apiObject",
        "Response",
        "rootHandler",
        "req",
        "res",
        "expect",
        "res",
        "expect",
        "res",
        "expect",
        "res",
        "expect",
        "res",
        "apiObject"
    ],
    "literals": [
        "'lodash'",
        "'express'",
        "'express'",
        "'jest-express'",
        "'passport'",
        "'passport'",
        "'@/routes/api/user'",
        "'User api route'",
        "'get'",
        "'returns Router'",
        "'auth middlewares'",
        "'first middleware'",
        "'is passport jwt authenticate middleware'",
        "'has been called with \"jwt\" strategy, with session disabled'",
        "'jwt'",
        "'second middleware'",
        "'calls next if req.user exists (user is authenticated)'",
        "'/'",
        "'calls res.sendStatus() with 401 if req.user not exists (user not authenticated)'",
        "'/'",
        "'GET /'",
        "'exists'",
        "'/'",
        "'calls res.status(200).json() with the value of req.user.toApiObject()'",
        "'/'",
        "'/'"
    ],
    "variables": [
        "router",
        "authenticateObject",
        "userRouter",
        "httpMethodCalls",
        "route",
        "handler",
        "call",
        "routeMap",
        "middlewares",
        "mw",
        "req",
        "res",
        "next",
        "req",
        "res",
        "next",
        "rootHandler",
        "apiObject",
        "req",
        "res"
    ],
    "comments": [
        "setup express & express.Router mock",
        "setup passport mock",
        "use require to ensure synchronity"
    ],
    "docstrings": [],
    "functions": [
        "getRouterRoutes"
    ],
    "classes": []
}