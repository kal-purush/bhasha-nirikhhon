{
    "identifiers": [
        "csv",
        "pickle",
        "numpy",
        "np",
        "pandas",
        "pd",
        "math",
        "nltk",
        "ngrams",
        "random",
        "os",
        "sys",
        "collections",
        "Counter",
        "time",
        "x",
        "n",
        "len",
        "x",
        "i",
        "len",
        "x",
        "i",
        "i",
        "Counter",
        "ngrams",
        "x",
        "i",
        "split",
        "n",
        "list_grams",
        "append",
        "counter",
        "list_grams",
        "x",
        "len",
        "x",
        "i",
        "d",
        "each",
        "x",
        "i",
        "idf",
        "get",
        "each",
        "key",
        "value",
        "idf",
        "items",
        "math",
        "log10",
        "d",
        "value",
        "idf",
        "list_counter_in",
        "y",
        "idf",
        "tfidf",
        "tfidf",
        "i",
        "len",
        "list_counter_in",
        "key",
        "list_counter_in",
        "i",
        "list_counter_in",
        "i",
        "key",
        "idf",
        "key",
        "list_counter",
        "append",
        "list_counter_in",
        "len",
        "y",
        "n",
        "random",
        "shuffle",
        "seq",
        "i",
        "seq",
        "c",
        "c",
        "format",
        "c",
        "len",
        "w_t",
        "sum",
        "list_counter",
        "i",
        "gram",
        "w_t",
        "get",
        "gram",
        "gram",
        "list_counter",
        "i",
        "y",
        "i",
        "dotprod",
        "gram",
        "value",
        "list_counter",
        "i",
        "items",
        "w_t",
        "get",
        "gram",
        "y",
        "i",
        "value",
        "unique",
        "add",
        "gram",
        "format",
        "len",
        "w_t",
        "items",
        "format",
        "len",
        "unique",
        "gram",
        "value",
        "w_t",
        "items",
        "w_avg",
        "get",
        "gram",
        "value",
        "random",
        "shuffle",
        "seq",
        "i",
        "seq",
        "c",
        "c",
        "format",
        "c",
        "n",
        "sum",
        "list_counter",
        "i",
        "gram",
        "w_t",
        "get",
        "gram",
        "gram",
        "list_counter",
        "i",
        "y",
        "i",
        "dotprod",
        "gram",
        "value",
        "list_counter",
        "i",
        "items",
        "w_t",
        "get",
        "gram",
        "y",
        "i",
        "value",
        "gram",
        "changes",
        "changes",
        "gram",
        "append",
        "y",
        "i",
        "value",
        "gram",
        "changes_i",
        "changes_i",
        "gram",
        "append",
        "c",
        "time",
        "time",
        "gram",
        "changei",
        "changes_i",
        "items",
        "gram",
        "w_avg",
        "w_avg",
        "gram",
        "w_avg",
        "gram",
        "changei",
        "i",
        "len",
        "changei",
        "w_avg",
        "gram",
        "changei",
        "i",
        "changei",
        "i",
        "changes",
        "gram",
        "i",
        "x",
        "x",
        "changes",
        "gram",
        "i",
        "i",
        "len",
        "changei",
        "w_avg",
        "gram",
        "n",
        "changei",
        "i",
        "changes",
        "gram",
        "i",
        "x",
        "time",
        "time",
        "end_time",
        "start_time",
        "w_avg",
        "tf",
        "labels",
        "w",
        "idf",
        "tfidf",
        "len",
        "labels",
        "i",
        "n",
        "gram",
        "value",
        "tf",
        "i",
        "items",
        "tfidf",
        "gram",
        "idf",
        "gram",
        "w",
        "w",
        "gram",
        "tfidf",
        "dotprod",
        "value",
        "idf",
        "gram",
        "w_i",
        "dotprod",
        "value",
        "w_i",
        "labels",
        "i",
        "dotprod",
        "error",
        "format",
        "error",
        "error",
        "n",
        "test_x",
        "tf",
        "labels",
        "w",
        "len",
        "labels",
        "error",
        "random",
        "randint",
        "n",
        "sum",
        "tf",
        "i",
        "gram",
        "w",
        "get",
        "gram",
        "gram",
        "tf",
        "i",
        "labels",
        "i",
        "dotprod",
        "error",
        "format",
        "test_x",
        "i",
        "tf",
        "i",
        "pd",
        "read_csv",
        "sep",
        "np",
        "array",
        "df",
        "values",
        "pd",
        "read_csv",
        "sep",
        "np",
        "array",
        "df",
        "values",
        "training",
        "training",
        "test",
        "training",
        "test",
        "training",
        "training",
        "test",
        "training",
        "test",
        "train_y",
        "test_y",
        "get_ngrams",
        "train_x",
        "get_ngrams",
        "test_x",
        "online_perceptron",
        "tr_unigram_repr",
        "train_y",
        "sorted",
        "w_1",
        "items",
        "key",
        "kv",
        "kv",
        "w1_sorted",
        "w1_sorted",
        "each",
        "lowest_weights",
        "each",
        "each",
        "highest_weights",
        "each",
        "get_error",
        "tr_unigram_repr",
        "train_y",
        "w_1",
        "unigram_training_error",
        "time",
        "time",
        "open",
        "file",
        "pickle",
        "load",
        "file",
        "time",
        "time",
        "end_time",
        "start_time",
        "get_ngrams",
        "test_x",
        "get_error",
        "te_unigram_repr",
        "test_y",
        "w_1",
        "unigram_test_error",
        "get_2_misclassified",
        "test_x",
        "te_unigram_repr",
        "test_y",
        "w_1",
        "count_idf",
        "tr_unigram_repr",
        "online_perceptron",
        "tr_unigram_repr",
        "train_y",
        "idf",
        "tfidf",
        "get_error",
        "tr_unigram_repr",
        "train_y",
        "w_tfidf",
        "idf",
        "tfidf",
        "tfidf_training_error",
        "count_idf",
        "te_unigram_repr",
        "get_error",
        "te_unigram_repr",
        "test_y",
        "w_tfidf",
        "idf_test",
        "tfidf",
        "tfidf_test_error",
        "get_ngrams",
        "train_x",
        "i",
        "len",
        "tr_bigram_repr",
        "i",
        "i",
        "tr_unigram_repr",
        "i",
        "tr_bigram_repr",
        "i",
        "get_ngrams",
        "test_x",
        "i",
        "len",
        "te_bigram_repr",
        "i",
        "i",
        "te_unigram_repr",
        "i",
        "te_bigram_repr",
        "i",
        "online_perceptron",
        "tr_bigram_repr",
        "train_y",
        "get_error",
        "tr_bigram_repr",
        "train_y",
        "w_2",
        "bigram_training_error",
        "get_error",
        "te_bigram_repr",
        "test_y",
        "w_2",
        "bigram_test_error",
        "get_ngrams",
        "train_x",
        "i",
        "len",
        "tr_trigram_repr",
        "i",
        "i",
        "tr_bigram_repr",
        "i",
        "tr_trigram_repr",
        "i",
        "get_ngrams",
        "test_x",
        "i",
        "len",
        "te_trigram_repr",
        "i",
        "i",
        "te_bigram_repr",
        "i",
        "te_trigram_repr",
        "i",
        "online_perceptron",
        "tr_trigram_repr",
        "train_y",
        "get_error",
        "tr_trigram_repr",
        "train_y",
        "w_3",
        "trigram_training_error",
        "get_error",
        "te_trigram_repr",
        "test_y",
        "w_3",
        "trigram_test_error"
    ],
    "literals": [
        "\" \"",
        "'affine_expansion_constant_ml4771'",
        "'first cycle'",
        "\"i:{}, dimensions:{}\"",
        "'dimensions: {}'",
        "'unique: {}'",
        "'second cycle'",
        "\"{} out of {}\"",
        "'calculating average w:'",
        "\"total error is: {}\"",
        "'misclassified text: {}'",
        "'__main__'",
        "'loading original training data...'",
        "'reviews_tr.csv'",
        "','",
        "'loading original test data...'",
        "'reviews_te.csv'",
        "','",
        "'text'",
        "'rating'",
        "'get training unigrams'",
        "'get test unigrams'",
        "'training online perceptron'",
        "'lowest words:'",
        "'highest words:'",
        "'calculating training error - unigrams'",
        "'loading test unigrams..'",
        "'te_unigram_repr.pickle'",
        "'rb'",
        "'get test unigrams'",
        "'calculating test error - unigrams'",
        "'computing tfidf'",
        "'training online perceptron - tfidf'",
        "'calculating training error - tfidf'",
        "'computing test-tfidf'",
        "'calculating test error = tfidf'",
        "'get training bigrams'",
        "'adding tr_unigram to bigrams'",
        "'get test bigrams'",
        "'adding te_unigrams to bigrams'",
        "'training online perceptron - bigrams'",
        "'calculating training error - bigrams'",
        "'calculating test error - bigrams'",
        "'get training trigrams'",
        "'adding tr_bigrams to trigrams'",
        "'get test trigrams'",
        "'adding te_bigrams to trigrams'",
        "'training online perceptron - trigrams'",
        "'calculating training error - trigrams'",
        "'calculating test error - trigrams'"
    ],
    "variables": [
        "list_grams",
        "counter",
        "counter",
        "d",
        "idf",
        "idf",
        "each",
        "idf",
        "key",
        "list_counter",
        "key",
        "list_counter",
        "n",
        "seq",
        "unique",
        "w_t",
        "c",
        "dotprod",
        "w_t",
        "gram",
        "w_avg",
        "w_avg",
        "gram",
        "changes",
        "changes_i",
        "c",
        "dotprod",
        "w_t",
        "gram",
        "changes",
        "gram",
        "changes_i",
        "gram",
        "start_time",
        "w_avg",
        "gram",
        "x",
        "w_avg",
        "gram",
        "end_time",
        "n",
        "error",
        "dotprod",
        "w_i",
        "w_i",
        "n",
        "error",
        "i",
        "dotprod",
        "df",
        "training",
        "df",
        "test",
        "train_x",
        "test_x",
        "train_x",
        "test_x",
        "train_y",
        "test_y",
        "train_y",
        "test_y",
        "train_y",
        "test_y",
        "tr_unigram_repr",
        "te_unigram_repr",
        "w_1",
        "w1_sorted",
        "lowest_weights",
        "highest_weights",
        "unigram_training_error",
        "start_time",
        "te_unigram_repr",
        "end_time",
        "te_unigram_repr",
        "unigram_test_error",
        "idf",
        "w_tfidf",
        "tfidf_training_error",
        "idf_test",
        "tfidf_test_error",
        "tr_bigram_repr",
        "tr_bigram_repr",
        "i",
        "te_bigram_repr",
        "te_bigram_repr",
        "i",
        "w_2",
        "bigram_training_error",
        "bigram_test_error",
        "tr_trigram_repr",
        "tr_trigram_repr",
        "i",
        "te_trigram_repr",
        "te_trigram_repr",
        "i",
        "w_3",
        "trigram_training_error",
        "trigram_test_error"
    ],
    "comments": [
        "start_time = time.time()",
        "end_time = time.time()",
        "print('time to calculate dotproduct: {}'.format(end_time-start_time))",
        "start_time = time.time()",
        "end_time = time.time()",
        "print('time to update weights: {}'.format(end_time-start_time))",
        "w_avg[gram] = w_avg[gram] / (n + 1)",
        "print('{}: {}'.format(gram, w_avg[gram]))",
        "print('{}: {}'.format(gram, w_avg[gram]))",
        "print('{}: {}'.format(gram, w_avg[gram]))",
        "with open('train_x.pickle', 'wb') as file:",
        "pickle.dump(train_x, file, protocol=pickle.HIGHEST_PROTOCOL)",
        "with open('train_y.pickle', 'wb') as file:",
        "pickle.dump(train_y, file, protocol=pickle.HIGHEST_PROTOCOL)",
        "with open('test_x.pickle', 'wb') as file:",
        "pickle.dump(test_x, file, protocol=pickle.HIGHEST_PROTOCOL)",
        "with open('test_y.pickle', 'wb') as file:",
        "pickle.dump(test_y, file, protocol=pickle.HIGHEST_PROTOCOL)",
        "",
        "print('finish saving pickle files')",
        "",
        "print('loading files..')",
        "with open('train_x.pickle', 'rb') as file:",
        "train_x = pickle.load(file)",
        "with open('train_y.pickle', 'rb') as file:",
        "train_y = pickle.load(file)",
        "with open('test_x.pickle', 'rb') as file:",
        "test_x = pickle.load(file)",
        "with open('test_y.pickle', 'rb') as file:",
        "test_y = pickle.load(file)",
        "print('saving training_unigram')",
        "with open('tr_unigram_repr.pickle', 'wb') as file:",
        "pickle.dump(tr_unigram_repr, file, protocol=pickle.HIGHEST_PROTOCOL)",
        "print('saving test')",
        "with open('te_unigram_repr.pickle', 'wb') as file:",
        "pickle.dump(te_unigram_repr, file, protocol=pickle.HIGHEST_PROTOCOL)",
        "",
        "print('loading training unigrams..')",
        "start_time = time.time()",
        "with open('tr_unigram_repr.pickle', 'rb') as file:",
        "tr_unigram_repr = pickle.load(file)",
        "end_time = time.time()",
        "print(end_time-start_time)"
    ],
    "docstrings": [
        "'''\n    IDF\n    '''",
        "\"\"\"\n    BIGRAMS\n    \"\"\"",
        "'''\n    TRIGRAMS\n    '''"
    ],
    "functions": [
        "get_ngrams",
        "count_idf",
        "online_perceptron",
        "get_error",
        "get_2_misclassified"
    ],
    "classes": []
}