{
    "identifiers": [
        "torch",
        "nn",
        "nn",
        "math",
        "torch",
        "utils",
        "model_zoo",
        "model_zoo",
        "in_planes",
        "out_planes",
        "stride",
        "nn",
        "Conv2d",
        "in_planes",
        "out_planes",
        "kernel_size",
        "stride",
        "stride",
        "padding",
        "bias",
        "nn",
        "Module",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "BasicBlock",
        "conv3x3",
        "inplanes",
        "planes",
        "stride",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "conv3x3",
        "planes",
        "planes",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "downsample",
        "stride",
        "x",
        "x",
        "conv1",
        "x",
        "bn1",
        "relu1",
        "conv2",
        "bn2",
        "downsample",
        "downsample",
        "x",
        "residual",
        "relu2",
        "nn",
        "Module",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "Bottleneck",
        "nn",
        "Conv2d",
        "inplanes",
        "planes",
        "kernel_size",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "Conv2d",
        "planes",
        "planes",
        "kernel_size",
        "stride",
        "stride",
        "padding",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "Conv2d",
        "planes",
        "planes",
        "kernel_size",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "nn",
        "ReLU",
        "inplace",
        "downsample",
        "stride",
        "x",
        "x",
        "conv1",
        "x",
        "bn1",
        "relu1",
        "conv2",
        "bn2",
        "relu2",
        "conv3",
        "bn3",
        "downsample",
        "downsample",
        "x",
        "residual",
        "relu3",
        "nn",
        "Module",
        "block",
        "layers",
        "num_classes",
        "ResNet",
        "nn",
        "Conv2d",
        "kernel_size",
        "stride",
        "padding",
        "bias",
        "nn",
        "BatchNorm2d",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "MaxPool2d",
        "kernel_size",
        "stride",
        "padding",
        "_make_layer",
        "block",
        "layers",
        "_make_layer",
        "block",
        "layers",
        "stride",
        "_make_layer",
        "block",
        "layers",
        "stride",
        "_make_layer",
        "block",
        "layers",
        "stride",
        "nn",
        "AvgPool2d",
        "stride",
        "nn",
        "Linear",
        "block",
        "expansion",
        "num_classes",
        "m",
        "modules",
        "isinstance",
        "m",
        "nn",
        "Conv2d",
        "m",
        "kernel_size",
        "m",
        "kernel_size",
        "m",
        "out_channels",
        "m",
        "weight",
        "data",
        "normal_",
        "math",
        "sqrt",
        "n",
        "isinstance",
        "m",
        "nn",
        "BatchNorm2d",
        "m",
        "weight",
        "data",
        "fill_",
        "m",
        "bias",
        "data",
        "zero_",
        "block",
        "planes",
        "blocks",
        "stride",
        "stride",
        "inplanes",
        "planes",
        "block",
        "expansion",
        "nn",
        "Sequential",
        "nn",
        "Conv2d",
        "inplanes",
        "planes",
        "block",
        "expansion",
        "kernel_size",
        "stride",
        "stride",
        "bias",
        "nn",
        "BatchNorm2d",
        "planes",
        "block",
        "expansion",
        "layers",
        "append",
        "block",
        "inplanes",
        "planes",
        "stride",
        "downsample",
        "planes",
        "block",
        "expansion",
        "i",
        "blocks",
        "layers",
        "append",
        "block",
        "inplanes",
        "planes",
        "nn",
        "Sequential",
        "layers",
        "x",
        "conv1",
        "x",
        "bn1",
        "x",
        "relu",
        "x",
        "maxpool",
        "x",
        "layer1",
        "x",
        "layer2",
        "x",
        "layer3",
        "x",
        "layer4",
        "x",
        "avgpool",
        "x",
        "x",
        "view",
        "x",
        "size",
        "fc",
        "x",
        "x",
        "pretrained",
        "kwargs",
        "ResNet",
        "BasicBlock",
        "kwargs",
        "pretrained",
        "model",
        "load_state_dict",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "BasicBlock",
        "kwargs",
        "pretrained",
        "model",
        "load_state_dict",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "Bottleneck",
        "kwargs",
        "pretrained",
        "model",
        "load_state_dict",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "Bottleneck",
        "kwargs",
        "pretrained",
        "model",
        "load_state_dict",
        "model_zoo",
        "load_url",
        "model_urls",
        "model",
        "pretrained",
        "kwargs",
        "ResNet",
        "Bottleneck",
        "kwargs",
        "pretrained",
        "model",
        "load_state_dict",
        "model_zoo",
        "load_url",
        "model_urls",
        "model"
    ],
    "literals": [
        "'ResNet'",
        "'resnet18'",
        "'resnet34'",
        "'resnet50'",
        "'resnet101'",
        "'resnet152'",
        "'resnet18'",
        "'https://download.pytorch.org/models/resnet18-5c106cde.pth'",
        "'resnet34'",
        "'https://download.pytorch.org/models/resnet34-333f7ec4.pth'",
        "'resnet50'",
        "'https://download.pytorch.org/models/resnet50-19c8e357.pth'",
        "'resnet101'",
        "'https://download.pytorch.org/models/resnet101-5d3b4d8f.pth'",
        "'resnet152'",
        "'https://download.pytorch.org/models/resnet152-b121ed2d.pth'",
        "'resnet18'",
        "'resnet34'",
        "'resnet50'",
        "'resnet101'",
        "'resnet152'"
    ],
    "variables": [
        "__all__",
        "model_urls",
        "expansion",
        "conv1",
        "bn1",
        "relu1",
        "conv2",
        "bn2",
        "relu2",
        "downsample",
        "stride",
        "residual",
        "residual",
        "expansion",
        "conv1",
        "bn1",
        "relu1",
        "conv2",
        "bn2",
        "relu2",
        "conv3",
        "bn3",
        "relu3",
        "downsample",
        "stride",
        "residual",
        "residual",
        "inplanes",
        "conv1",
        "bn1",
        "relu",
        "maxpool",
        "layer1",
        "layer2",
        "layer3",
        "layer4",
        "avgpool",
        "fc",
        "n",
        "downsample",
        "downsample",
        "layers",
        "inplanes",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "model",
        "model",
        "model",
        "model",
        "model"
    ],
    "comments": [
        "",
        "Copyright (c) 2018 Intel Corporation",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "This is the same code as in https://github.com/pytorch/vision/blob/master/torchvision/models/resnet.py",
        "However, it contains one type of change: whenever a ReLU module is used, we make sure to use a different",
        "instance.  This is necessary when we want to collect activation statistics."
    ],
    "docstrings": [
        "\"\"\"3x3 convolution with padding\"\"\"",
        "\"\"\"Constructs a ResNet-18 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-34 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-50 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-101 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\"",
        "\"\"\"Constructs a ResNet-152 model.\n\n    Args:\n        pretrained (bool): If True, returns a model pre-trained on ImageNet\n    \"\"\""
    ],
    "functions": [
        "conv3x3",
        "forward",
        "forward",
        "_make_layer",
        "forward",
        "resnet18",
        "resnet34",
        "resnet50",
        "resnet101",
        "resnet152"
    ],
    "classes": [
        "BasicBlock",
        "Bottleneck",
        "ResNet"
    ]
}