{
    "identifiers": [
        "copy",
        "datetime",
        "random",
        "numpy",
        "np",
        "simulations",
        "num_weeks",
        "week",
        "playoff_slots",
        "teams",
        "matchups",
        "simulations",
        "num_weeks",
        "week",
        "playoff_slots",
        "teams",
        "matchups",
        "chosen_week",
        "week",
        "chosen_week",
        "datetime",
        "datetime",
        "now",
        "num_weeks",
        "num_weeks",
        "playoff_slots",
        "sim_count",
        "simulations",
        "copy",
        "deepcopy",
        "teams",
        "week",
        "matchups",
        "matchups",
        "items",
        "matchup",
        "matchups",
        "random",
        "getrandbits",
        "result",
        "temp_teams",
        "matchup",
        "add_win",
        "temp_teams",
        "matchup",
        "add_win",
        "sorted",
        "temp_teams",
        "values",
        "key",
        "x",
        "x",
        "get_wins_with_points",
        "reverse",
        "num_wins_that_made_playoffs",
        "round",
        "sorted_teams",
        "playoff_slots",
        "get_wins_with_points",
        "num_wins_that_missed_playoffs",
        "round",
        "sorted_teams",
        "playoff_slots",
        "get_wins_with_points",
        "playoff_count",
        "playoff_slots",
        "teams",
        "sorted_teams",
        "playoff_count",
        "get_id",
        "add_playoff_tally",
        "avg_wins",
        "playoff_count",
        "round",
        "sorted_teams",
        "playoff_count",
        "get_wins_with_points",
        "teams",
        "sorted_teams",
        "playoff_count",
        "get_id",
        "add_playoff_stats",
        "playoff_count",
        "playoff_count",
        "sim_count",
        "team",
        "teams",
        "values",
        "round",
        "avg_wins",
        "playoff_slots",
        "simulations",
        "playoff_min_wins",
        "team",
        "get_wins",
        "np",
        "rint",
        "playoff_min_wins",
        "team",
        "get_wins",
        "team",
        "get_id",
        "team",
        "get_name",
        "team",
        "get_playoff_tally",
        "team",
        "get_playoff_stats",
        "needed_wins",
        "datetime",
        "datetime",
        "now",
        "begin",
        "format",
        "simulations",
        "delta",
        "team_data",
        "team_id",
        "name",
        "manager",
        "record",
        "points_for",
        "playoff_slots",
        "simulations",
        "team_id",
        "name",
        "manager",
        "record",
        "points_for",
        "record",
        "get_wins",
        "points_for",
        "playoff_slots",
        "simulations",
        "__dict__",
        "__dict__",
        "wins_with_points",
        "playoff_tally",
        "place",
        "playoff_stats",
        "place",
        "team_id",
        "name",
        "manager",
        "record",
        "get_wins",
        "record",
        "get_losses",
        "record",
        "get_ties",
        "points_for",
        "wins_with_points",
        "round",
        "playoff_tally",
        "simulations",
        "round",
        "stat",
        "simulations",
        "stat",
        "playoff_stats",
        "wins",
        "losses",
        "ties",
        "percentage",
        "wins",
        "losses",
        "ties",
        "percentage",
        "__dict__",
        "__dict__",
        "wins",
        "losses",
        "ties",
        "percentage"
    ],
    "literals": [
        "\"Ran %s playoff simulations in %s\\n\"",
        "\"{0:,}\""
    ],
    "variables": [
        "simulations",
        "num_weeks",
        "week",
        "playoff_slots",
        "teams",
        "matchups",
        "begin",
        "team_data",
        "num_wins_that_made_playoffs",
        "num_wins_that_missed_playoffs",
        "avg_wins",
        "sim_count",
        "temp_teams",
        "result",
        "sorted_teams",
        "playoff_count",
        "playoff_min_wins",
        "needed_wins",
        "needed_wins",
        "team_data",
        "delta",
        "team_id",
        "name",
        "manager",
        "record",
        "points_for",
        "wins_with_points",
        "playoff_tally",
        "playoff_stats",
        "simulations",
        "wins",
        "losses",
        "ties",
        "percentage"
    ],
    "comments": [
        "code based on https://github.com/cdtdev/ff_monte_carlo (originally written by https://github.com/cdtdev)",
        "create random binary results representing the rest of the matchups and add them to the existing wins",
        "sort the teams",
        "pick the teams making the playoffs",
        "print(",
        "team.get_name() + \"\\t\" +",
        "str(team.get_playoff_tally()) + \"\\t\" +",
        "\"\\t\".join([str(stat) for stat in team.get_playoff_stats()])",
        ")",
        "print()",
        "print(\"Average # of wins for playoff spot\")",
        "playoff_count = 1",
        "while playoff_count <= self.playoff_slots:",
        "print(str(playoff_count) + '\\t' + str(round((avg_wins[playoff_count - 1]) / self.simulations, 2)))",
        "playoff_count += 1",
        "print()",
        "print(\"Histogram of wins required for final playoff spot\")",
        "playoffs_made_count = 1",
        "while playoffs_made_count <= len(num_wins_that_made_playoffs):",
        "print(",
        "str(playoffs_made_count) + \"\\t\" +",
        "str(round(((num_wins_that_made_playoffs[playoffs_made_count - 1]) /",
        "(self.simulations * 1.0)) * 100, 3)) + \"\\t\" +",
        "str(round(((num_wins_that_missed_playoffs[playoffs_made_count - 1]) /",
        "(self.simulations * 1.0)) * 100, 3))",
        ")",
        "playoffs_made_count += 1",
        "",
        "if __name__ == '__main__':",
        "",
        "sim = 1000",
        "number_weeks = 13",
        "current_week = 9",
        "play_slots = 6",
        "",
        "all_teams = {",
        "1: Team(1, 'Kingsland Tough Bruddas', \"joe\", Record(3, 5, 0, .5), 715.3, play_slots, sim),",
        "2: Team(2, 'Schroedingers Cats', \"joe\", Record(6, 2, 0, .5), 834.4, play_slots, sim),",
        "3: Team(3, 'The Killer Brees', \"joe\", Record(5, 3, 0, .5), 767.3, play_slots, sim),",
        "4: Team(4, 'Deez Nuts 4 Prez', \"joe\", Record(2, 6, 0, .5), 687.0, play_slots, sim),",
        "5: Team(5, 'Oakeridge Overlords', \"joe\", Record(3, 5, 0, .5), 651.2, play_slots, sim),",
        "6: Team(6, 'College Hillbilly', \"joe\", Record(4, 4, 0, .5), 710.9, play_slots, sim),",
        "7: Team(7, 'Norwood Knuckles', \"joe\", Record(6, 2, 0, .5), 702.0, play_slots, sim),",
        "8: Team(8, 'West City Possums', \"joe\", Record(4, 4, 0, .5), 722.2, play_slots, sim),",
        "9: Team(9, 'Crazy Monkeys', \"joe\", Record(3, 5, 0, .5), 708.2, play_slots, sim),",
        "10: Team(10, 'Mount Thunderbolts', \"joe\", Record(4, 4, 0, .5), 700.3, play_slots, sim),",
        "11: Team(11, 'Southeast Bulls', \"joe\", Record(4, 4, 0, .5), 753.9, play_slots, sim),",
        "12: Team(12, 'Te Puke Thunder', \"joe\", Record(4, 4, 0, .5), 740.5, play_slots, sim)",
        "}",
        "",
        "all_matchups = {",
        "9: [",
        "(3, 5),",
        "(4, 12),",
        "(6, 1),",
        "(8, 11),",
        "(9, 2),",
        "(10, 7)",
        "],",
        "10: [",
        "(1, 8),",
        "(2, 10),",
        "(5, 9),",
        "(7, 6),",
        "(11, 4),",
        "(12, 3)",
        "],",
        "11: [",
        "(3, 11),",
        "(4, 1),",
        "(6, 2),",
        "(8, 7),",
        "(9, 12),",
        "(10, 5)",
        "],",
        "12: [",
        "(3, 1),",
        "(4, 7),",
        "(6, 5),",
        "(8, 2),",
        "(9, 11),",
        "(10, 12)",
        "],",
        "13: [",
        "(1, 9),",
        "(2, 4),",
        "(5, 8),",
        "(7, 3),",
        "(11, 10),",
        "(12, 6)",
        "],",
        "}",
        "",
        "pp = PlayoffProbabilities(sim, number_weeks, current_week, play_slots, all_teams, all_matchups)",
        "pp.calculate()"
    ],
    "docstrings": [],
    "functions": [
        "calculate",
        "__str__",
        "__repr__",
        "add_win",
        "add_playoff_tally",
        "add_playoff_stats",
        "get_id",
        "get_name",
        "get_manager",
        "get_wins",
        "get_losses",
        "get_ties",
        "get_points",
        "get_wins_with_points",
        "get_playoff_tally",
        "get_playoff_stats",
        "__str__",
        "__repr__",
        "get_wins",
        "get_losses",
        "get_ties",
        "get_percentage"
    ],
    "classes": [
        "PlayoffProbabilities",
        "Team"
    ]
}