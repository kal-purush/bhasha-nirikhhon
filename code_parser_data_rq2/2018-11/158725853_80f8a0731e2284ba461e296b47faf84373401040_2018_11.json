{
    "identifiers": [
        "json",
        "os",
        "subprocess",
        "constants",
        "report",
        "subm_report",
        "subm_report",
        "SubmissionReport",
        "root_dir",
        "verify_root_dir",
        "root_dir",
        "verify_code_dir",
        "root_dir",
        "verify_results_dir",
        "root_dir",
        "verify_submission_metadata",
        "verify_result_entry_metadata",
        "path",
        "is_dir",
        "os",
        "path",
        "isdir",
        "is_dir",
        "os",
        "path",
        "isfile",
        "exists_fn",
        "path",
        "report",
        "add_passed_check",
        "format",
        "path",
        "report",
        "add_failed_check",
        "format",
        "path",
        "path",
        "ref_list",
        "os",
        "path",
        "basename",
        "path",
        "basename",
        "ref_list",
        "report",
        "add_passed_check",
        "format",
        "path",
        "ref_list",
        "report",
        "add_failed_check",
        "format",
        "path",
        "ref_list",
        "keys",
        "ref_keys",
        "context",
        "keys",
        "difference",
        "ref_keys",
        "different_keys",
        "report",
        "add_failed_check",
        "format",
        "context",
        "format",
        "different_keys",
        "report",
        "add_passed_check",
        "format",
        "context",
        "root_dir",
        "os",
        "path",
        "join",
        "root_dir",
        "os",
        "path",
        "join",
        "root_dir",
        "os",
        "path",
        "join",
        "root_dir",
        "exists",
        "result_dir",
        "is_dir",
        "exists",
        "code_dir",
        "is_dir",
        "exists",
        "submission_meta_file",
        "is_dir",
        "open",
        "submission_meta_file",
        "f",
        "json",
        "load",
        "f",
        "e",
        "report",
        "add_error",
        "format",
        "e",
        "root_dir",
        "os",
        "path",
        "join",
        "root_dir",
        "code_name",
        "os",
        "listdir",
        "code_root_dir",
        "os",
        "path",
        "join",
        "code_root_dir",
        "code_name",
        "os",
        "path",
        "isdir",
        "code_dir",
        "name_in",
        "code_dir",
        "BENCHMARK_NAMES",
        "code_name",
        "BENCHMARK_NAMES",
        "exists",
        "os",
        "path",
        "join",
        "code_dir",
        "exists",
        "os",
        "path",
        "join",
        "code_dir",
        "e",
        "report",
        "add_error",
        "format",
        "e",
        "root_dir",
        "os",
        "path",
        "join",
        "root_dir",
        "os",
        "path",
        "join",
        "root_dir",
        "entry_name",
        "os",
        "listdir",
        "result_root_dir",
        "os",
        "path",
        "join",
        "result_root_dir",
        "entry_name",
        "os",
        "path",
        "isdir",
        "entry_dir",
        "os",
        "path",
        "join",
        "entry_dir",
        "open",
        "entry_meta_file",
        "f",
        "result_entry_meta",
        "json",
        "load",
        "f",
        "e",
        "report",
        "add_error",
        "format",
        "e",
        "exists",
        "entry_meta_file",
        "result_name",
        "os",
        "listdir",
        "entry_dir",
        "os",
        "path",
        "join",
        "entry_dir",
        "result_name",
        "os",
        "path",
        "isdir",
        "result_dir",
        "name_in",
        "result_dir",
        "BENCHMARK_NAMES",
        "exists",
        "os",
        "path",
        "join",
        "code_root_dir",
        "result_name",
        "entry_name",
        "exists",
        "os",
        "path",
        "join",
        "code_root_dir",
        "result_name",
        "entry_name",
        "REQUIRED_RESULT_NUM",
        "get",
        "result_name",
        "i",
        "result_num",
        "i",
        "exists",
        "os",
        "path",
        "join",
        "result_dir",
        "log_file_name",
        "result_meta",
        "setdefault",
        "entry_name",
        "result_meta",
        "entry_name",
        "setdefault",
        "result_name",
        "j",
        "result_num",
        "result_entry_meta",
        "entry_name",
        "get",
        "result_meta",
        "entry_name",
        "result_name",
        "verify_and_extract_time",
        "os",
        "path",
        "join",
        "result_dir",
        "log_file_name",
        "division",
        "e",
        "report",
        "add_error",
        "format",
        "e",
        "submission_meta",
        "keys",
        "subm_meta_keys",
        "difference",
        "SUBM_META_PROPS",
        "different_keys",
        "report",
        "add_failed_check",
        "format",
        "different_keys",
        "report",
        "add_passed_check",
        "entry_name",
        "result_entry_meta",
        "result_entry_meta",
        "entry_name",
        "entry_meta",
        "keys",
        "keys_match",
        "entry_meta_keys",
        "ENTRY_META_PROPS",
        "context",
        "format",
        "entry_name",
        "node_meta",
        "entry_meta",
        "node_meta",
        "keys",
        "keys_match",
        "node_meta_keys",
        "NODE_META_PROPS",
        "context",
        "format",
        "entry_name",
        "e",
        "report",
        "add_error",
        "format",
        "entry_name",
        "e",
        "entry_name",
        "result_meta",
        "results",
        "setdefault",
        "entry_name",
        "key",
        "RESULT_SUBM_META_COLUMNS",
        "results",
        "entry_name",
        "submission_meta",
        "key",
        "key",
        "RESULT_ENTRY_META_COLUMNS",
        "results",
        "entry_name",
        "result_entry_meta",
        "entry_name",
        "key",
        "benchmark_name",
        "BENCHMARK_NAMES",
        "result_meta",
        "entry_name",
        "get",
        "benchmark_name",
        "benchmark_results",
        "results",
        "entry_name",
        "all",
        "benchmark_results",
        "report",
        "add_error",
        "format",
        "entry_name",
        "benchmark_name",
        "results",
        "entry_name",
        "benchmark_name",
        "benchmark_results",
        "pr",
        "possible_results",
        "pr",
        "benchmark_results",
        "append",
        "pr",
        "len",
        "benchmark_results",
        "sorted",
        "benchmark_results",
        "benchmark_results",
        "benchmark_results",
        "sum",
        "benchmark_results",
        "len",
        "benchmark_results",
        "REFERENCE_RESULTS",
        "benchmark_name",
        "results",
        "entry_name",
        "result_val",
        "report",
        "set_results",
        "results",
        "log_file",
        "division",
        "DIVISION_COMPLIANCE_CHECK_LEVEL",
        "get",
        "division",
        "level",
        "format",
        "division",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "subprocess",
        "check_output",
        "mlp_compliance_script",
        "level",
        "log_file",
        "line",
        "output_str",
        "split",
        "line",
        "startswith",
        "line",
        "startswith",
        "line",
        "lstrip",
        "strip",
        "success_flag",
        "result_time",
        "result_time",
        "format",
        "log_file"
    ],
    "literals": [
        "\"Path exists: {}\"",
        "\"Path not found: {}\"",
        "\"{} name is in {}.\"",
        "\"{} name not in {}.\"",
        "\"\"",
        "\"Keys in {} do not match expected: \"",
        "\"unmatched keys: {}\"",
        "\"Keys in {} match expected.\"",
        "\"results\"",
        "\"code\"",
        "\"submission.json\"",
        "\"Unable to parse submission meatadata: {}\"",
        "\"code\"",
        "\"shared\"",
        "\"README.md\"",
        "\"preproc_dataset.sh\"",
        "\"Unable to verify code dir: {}\"",
        "\"code\"",
        "\"results\"",
        "\"entry.json\"",
        "\"Unable to parse result entry metadata: {}\"",
        "\"setup_\"",
        "\".sh\"",
        "\"run_and_time_\"",
        "\".sh\"",
        "\"result_\"",
        "\".txt\"",
        "\"division\"",
        "\"Unable to verify results dir: {}\"",
        "\"Keys in submission metadata do not match expected: \"",
        "\"unmatched keys: {}\"",
        "\"Keys in submission metadata match expected.\"",
        "\"entry {} metadata\"",
        "\"nodes\"",
        "\"entry {} node metadata\"",
        "\"Unable to verify node metadata for entry {}: {}\"",
        "\"Benchmark results contain None values. \"",
        "\"entry: {}, benchmark name: {}\"",
        "\"ncf\"",
        "\"Unknown division: {}\"",
        "\"mlp_compliance/mlp_compliance.py\"",
        "\"python\"",
        "\"--level\"",
        "\"\\n\"",
        "\"SUCCESS\"",
        "\"Measured time:\"",
        "\"Measured time:\"",
        "\"Result verification failed: {}\""
    ],
    "variables": [
        "report",
        "submission_meta",
        "result_meta",
        "result_entry_meta",
        "exists_fn",
        "basename",
        "different_keys",
        "result_dir",
        "code_dir",
        "submission_meta_file",
        "submission_meta",
        "code_root_dir",
        "code_dir",
        "code_root_dir",
        "result_root_dir",
        "entry_dir",
        "entry_meta_file",
        "entry_name",
        "result_dir",
        "result_num",
        "log_file_name",
        "division",
        "i",
        "subm_meta_keys",
        "different_keys",
        "entry_meta",
        "entry_meta_keys",
        "node_meta_keys",
        "results",
        "key",
        "key",
        "benchmark_results",
        "benchmark_name",
        "benchmark_name",
        "possible_results",
        "benchmark_results",
        "benchmark_results",
        "result_val",
        "benchmark_name",
        "level",
        "mlp_compliance_script",
        "output_str",
        "success_flag",
        "result_time",
        "success_flag",
        "result_time"
    ],
    "comments": [
        "verify_metadata must be called after verify_dirs_and_files()",
        "special treatment for the NCF results",
        "use submodule mlp_compliance (https://github.com/bitfort/mlp_compliance)"
    ],
    "docstrings": [],
    "functions": [
        "verify_dirs_and_files",
        "verify_metadata",
        "exists",
        "name_in",
        "keys_match",
        "verify_root_dir",
        "verify_code_dir",
        "verify_results_dir",
        "verify_submission_metadata",
        "verify_result_entry_metadata",
        "compile_results",
        "verify_and_extract_time"
    ],
    "classes": [
        "SubmissionChecks"
    ]
}