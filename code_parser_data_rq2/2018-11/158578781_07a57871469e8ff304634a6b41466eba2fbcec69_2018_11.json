{
    "identifiers": [
        "Alexa",
        "NET",
        "Request",
        "Microsoft",
        "AspNetCore",
        "Http",
        "Microsoft",
        "Azure",
        "WebJobs",
        "Extensions",
        "Http",
        "Microsoft",
        "Extensions",
        "Logging",
        "Threading",
        "Tasks",
        "AlexaSkill",
        "Extensions",
        "SkillRequest",
        "skillRequest",
        "HttpRequest",
        "request",
        "ILogger",
        "log",
        "request",
        "Headers",
        "TryGetValue",
        "signatureChainUrl",
        "IsNullOrWhiteSpace",
        "signatureChainUrl",
        "log",
        "LogError",
        "certUrl",
        "Uri",
        "signatureChainUrl",
        "log",
        "LogError",
        "signatureChainUrl",
        "request",
        "Headers",
        "TryGetValue",
        "signature",
        "IsNullOrWhiteSpace",
        "signature",
        "log",
        "LogError",
        "request",
        "Body",
        "Position",
        "request",
        "ReadAsStringAsync",
        "request",
        "Body",
        "Position",
        "IsNullOrWhiteSpace",
        "body",
        "log",
        "LogError",
        "RequestVerification",
        "RequestTimestampWithinTolerance",
        "skillRequest",
        "RequestVerification",
        "Verify",
        "signature",
        "certUrl",
        "body",
        "isValid",
        "isTimestampValid",
        "log",
        "LogError",
        "isValid"
    ],
    "literals": [
        "\"SignatureCertChainUrl\"",
        "\"Validation failed. Empty SignatureCertChainUrl header\"",
        "\"Signature\"",
        "\"Validation failed - Empty Signature header\"",
        "\"Validation failed - the JSON is empty\"",
        "\"Validation failed - RequestVerification failed\""
    ],
    "variables": [
        "Uri",
        "certUrl",
        "body",
        "isTimestampValid",
        "isValid"
    ],
    "comments": [
        "Verifies that the request is indeed coming from Alexa."
    ],
    "docstrings": [],
    "functions": [
        "ValidateRequest"
    ],
    "classes": [
        "ValidateRequestExtension"
    ]
}