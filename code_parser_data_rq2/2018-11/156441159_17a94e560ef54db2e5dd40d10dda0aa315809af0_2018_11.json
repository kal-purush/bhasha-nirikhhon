{
    "identifiers": [
        "urlOrArr",
        "urlOrArr",
        "urlOrArr",
        "url",
        "_load",
        "url",
        "_load",
        "urlOrArr",
        "url",
        "resourceCache",
        "url",
        "resourceCache",
        "url",
        "Image",
        "img",
        "resourceCache",
        "url",
        "img",
        "isReady",
        "readyCallbacks",
        "func",
        "func",
        "resourceCache",
        "url",
        "img",
        "url",
        "url",
        "resourceCache",
        "url",
        "k",
        "resourceCache",
        "resourceCache",
        "k",
        "resourceCache",
        "k",
        "ready",
        "ready",
        "func",
        "readyCallbacks",
        "func",
        "load",
        "get",
        "onReady",
        "isReady"
    ],
    "literals": [],
    "variables": [
        "resourceCache",
        "loading",
        "readyCallbacks",
        "img",
        "ready"
    ],
    "comments": [
        "Resources.js\n * This is simply an image loading utility. It eases the process of loading\n * image files so that they can be used within your game. It also includes\n * a simple \"caching\" layer so it will reuse cached images if you attempt\n * to load the same image multiple times.",
        "This is the publicly accessible image loading function. It accepts\n     * an array of strings pointing to image files or a string for a single\n     * image. It will then call our private image loading function accordingly.",
        "If the developer passed in an array of images\n             * loop through each value and call our image\n             * loader on that image file",
        "The developer did not pass an array to this function,\n             * assume the value is a string and call our image loader\n             * directly.",
        "This is our private image loader function, it is\n     * called by the public image loader function.",
        "If this URL has been previously loaded it will exist within\n             * our resourceCache array. Just return that image rather\n             * re-loading the image.",
        "This URL has not been previously loaded and is not present\n             * within our cache; we'll need to load this image.",
        "Once our image has properly loaded, add it to our cache\n                 * so that we can simply return this image if the developer\n                 * attempts to load this file in the future.",
        "Once the image is actually loaded and properly cached,\n                 * call all of the onReady() callbacks we have defined.",
        "Set the initial cache value to false, this will change when\n             * the image's onload event handler is called. Finally, point\n             * the image's src attribute to the passed in URL.",
        "This is used by developers to grab references to images they know\n     * have been previously loaded. If an image is cached, this functions\n     * the same as calling load() on that URL.",
        "This function determines if all of the images that have been requested\n     * for loading have in fact been properly loaded.",
        "This function will add a function to the callback stack that is called\n     * when all requested images are properly loaded.",
        "This object defines the publicly accessible functions available to\n     * developers by creating a global Resources object."
    ],
    "docstrings": [],
    "functions": [
        "load",
        "_load",
        "get",
        "isReady",
        "onReady"
    ],
    "classes": []
}