{
    "identifiers": [
        "loaded",
        "Live",
        "Live",
        "setTimeout",
        "Live",
        "interval",
        "url",
        "loc",
        "loc",
        "url",
        "reg",
        "i",
        "scripts",
        "i",
        "scripts",
        "i",
        "script",
        "src",
        "isLocal",
        "src",
        "uris",
        "src",
        "src",
        "src",
        "active",
        "active",
        "src",
        "src",
        "alert",
        "active",
        "uris",
        "active",
        "uris",
        "i",
        "links",
        "active",
        "i",
        "links",
        "i",
        "link",
        "link",
        "href",
        "rel",
        "rel",
        "isLocal",
        "href",
        "uris",
        "href",
        "currentLinkElements",
        "href",
        "link",
        "i",
        "uris",
        "i",
        "uris",
        "i",
        "Live",
        "url",
        "url",
        "info",
        "resources",
        "url",
        "info",
        "css",
        "rule",
        "rule",
        "rule",
        "rule",
        "style",
        "head",
        "style",
        "style",
        "style",
        "css",
        "style",
        "css",
        "loaded",
        "url",
        "resources",
        "pendingRequests",
        "url",
        "Live",
        "url",
        "url",
        "newInfo",
        "resources",
        "url",
        "resources",
        "url",
        "newInfo",
        "header",
        "oldInfo",
        "oldInfo",
        "header",
        "newInfo",
        "header",
        "newInfo",
        "header",
        "newValue",
        "hasChanged",
        "oldValue",
        "newValue",
        "hasChanged",
        "Live",
        "url",
        "contentType",
        "url",
        "currentLinkElements",
        "url",
        "link",
        "link",
        "html",
        "html",
        "newLink",
        "newLink",
        "newLink",
        "url",
        "next",
        "head",
        "newLink",
        "next",
        "head",
        "newLink",
        "currentLinkElements",
        "url",
        "newLink",
        "oldLinkElements",
        "url",
        "link",
        "Live",
        "url",
        "url",
        "oldLinkElements",
        "currentLinkElements",
        "url",
        "oldLinkElements",
        "url",
        "link",
        "link",
        "sheet",
        "sheet",
        "rules",
        "oldLink",
        "oldLink",
        "oldLinkElements",
        "url",
        "setTimeout",
        "html",
        "html",
        "e",
        "pending",
        "pending",
        "setTimeout",
        "Live",
        "url",
        "callback",
        "pendingRequests",
        "url",
        "XMLHttpRequest",
        "ActiveXObject",
        "xhr",
        "url",
        "xhr",
        "pendingRequests",
        "url",
        "xhr",
        "xhr",
        "xhr",
        "h",
        "headers",
        "xhr",
        "h",
        "h",
        "value",
        "value",
        "value",
        "h",
        "value",
        "value",
        "value",
        "info",
        "h",
        "value",
        "callback",
        "url",
        "info",
        "xhr",
        "Live"
    ],
    "literals": [
        "\"Etag\"",
        "\"Last-Modified\"",
        "\"Content-Length\"",
        "\"Content-Type\"",
        "\"html\"",
        "\"css\"",
        "\"js\"",
        "\"^\\\\.|^\\/(?!\\/)|^[\\\\w]((?!://).)*$|\"",
        "\"//\"",
        "\"script\"",
        "\"link\"",
        "\"src\"",
        "\"[#,|]\"",
        "\"notify\"",
        "\"Live.js is loaded.\"",
        "\"rel\"",
        "\"href\"",
        "\"stylesheet\"",
        "\"i\"",
        "\"head\"",
        "\"style\"",
        "\"transition: all .3s ease-out;\"",
        "\".livejs-loading * { \"",
        "\" -webkit-\"",
        "\"-moz-\"",
        "\"-o-\"",
        "\"}\"",
        "''",
        "\"type\"",
        "\"text/css\"",
        "\"Content-Type\"",
        "\"etag\"",
        "\"text/css\"",
        "\"link\"",
        "''",
        "' livejs-loading'",
        "\"type\"",
        "\"text/css\"",
        "\"rel\"",
        "\"stylesheet\"",
        "\"href\"",
        "\"?now=\"",
        "\"text/html\"",
        "\"text/javascript\"",
        "\"application/javascript\"",
        "\"application/x-javascript\"",
        "''",
        "\"Microsoft.XmlHttp\"",
        "\"HEAD\"",
        "\"etag\"",
        "''",
        "\"content-type\"",
        "\"$1\"",
        "\"file:\"",
        "\"Live.js doesn't support the file protocol. It needs http.\""
    ],
    "variables": [
        "headers",
        "resources",
        "pendingRequests",
        "currentLinkElements",
        "oldLinkElements",
        "interval",
        "loaded",
        "active",
        "Live",
        "loc",
        "reg",
        "scripts",
        "links",
        "uris",
        "i",
        "script",
        "src",
        "i",
        "link",
        "rel",
        "href",
        "i",
        "url",
        "head",
        "style",
        "rule",
        "oldInfo",
        "hasChanged",
        "oldValue",
        "newValue",
        "contentType",
        "link",
        "html",
        "head",
        "next",
        "newLink",
        "pending",
        "link",
        "oldLink",
        "html",
        "sheet",
        "rules",
        "xhr",
        "info",
        "value"
    ],
    "comments": [
        "Live.js - One script closer to Designing in the Browser\n  Written for Handcraft.com by Martin Kool (@mrtnkl).\n\n  Version 4.\n  Recent change: Made stylesheet and mimetype checks case insensitive.\n\n  http://livejs.com\n  http://livejs.com/license (MIT)  \n  @livejs\n\n  Include live.js#css to monitor css changes only.\n  Include live.js#js to monitor js changes only.\n  Include live.js#html to monitor html changes only.\n  Mix and match to monitor a preferred combination such as live.js#html,css  \n\n  By default, just include live.js to monitor all css, js and html changes.\n  \n  Live.js can also be loaded as a bookmarklet. It is best to only use it for CSS then,\n  as a page reload due to a change in html or css would not re-include the bookmarklet.\n  To monitor CSS and be notified that it has loaded, include it as: live.js#css,notify",
        "performs a cycle per interval",
        "make sure all resources are loaded on first activation",
        "loads all local css and js resources upon first activation",
        "helper method to assert if a given url is local",
        "gather all resources",
        "track local js urls",
        "track local css urls",
        "initialize the resources info",
        "add rule for morphing between old and new css files",
        "yep",
        "check all tracking resources for changes",
        "do verification based on the header type",
        "fall through to default",
        "if changed, act",
        "act upon a changed url of certain content type",
        "css files can be reloaded dynamically by replacing the link element",
        "schedule removal of the old link",
        "check if an html resource is our current url, then reload",
        "local javascript changes cause a reload as well",
        "removes the old stylesheet rules only once the new one has finished loading",
        "if this sheet has any cssRules, delete the old link",
        "performs a HEAD request and passes the header info to the given callback",
        "adjust the simple Etag variant to match on its significant part",
        "start listening"
    ],
    "docstrings": [],
    "functions": [
        "isLocal"
    ],
    "classes": []
}