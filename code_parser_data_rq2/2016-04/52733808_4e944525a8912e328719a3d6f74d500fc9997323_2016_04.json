{
    "identifiers": [
        "note",
        "tones",
        "note",
        "element",
        "delay",
        "i",
        "element",
        "element",
        "element",
        "setTimeout",
        "element",
        "element",
        "delay",
        "setTimeout",
        "play",
        "delay",
        "i",
        "delay",
        "i",
        "elements",
        "i",
        "playOne",
        "elements",
        "i",
        "delay",
        "i",
        "playAll",
        "setInterval",
        "playAll",
        "delay",
        "elements",
        "setTimeout",
        "i",
        "nextTimeout",
        "i",
        "clearTimeout",
        "i",
        "i",
        "elements",
        "i",
        "elements",
        "i",
        "elements",
        "i",
        "clearAllTimeouts",
        "resetClassNames",
        "e",
        "e",
        "autoPlayAll",
        "e",
        "stopAutoPlayback",
        "tones",
        "tones",
        "tones"
    ],
    "literals": [
        "\" auto-playing\"",
        "\" auto-playing\"",
        "\"\"",
        "'div'",
        "'.auto-playing'",
        "\"\"",
        "\"keydown\"",
        "\"Space\"",
        "\"Escape\"",
        "\"sine\""
    ],
    "variables": [
        "elements",
        "i",
        "nextTimeout",
        "i",
        "elements",
        "i"
    ],
    "comments": [
        "The “type” determines the shape of the sound wave.",
        "The available types are: \"sine\", \"square\", \"sawtooth\", \"triangle\"",
        "The “attack” determines how intensely the sound starts.",
        "Try other numbers to see how it smooths out the tone.",
        "The “release” determines how quickly the sound fades out.",
        "Try other numbers to see how it creates clipped or echoey sounds."
    ],
    "docstrings": [
        "* To cancel a timeout, you execute the `clearTimeout` function with the\n * id (which is a number) of the timeout.\n * When you create a timeout (including intervals, which are a special\n * kind of timeout), it returns its id, which is always one number higher\n * than the previous one, starting with the number 1.\n * Therefore, if you want to clear all timeouts, you can create a new\n * timeout, capture its id, and then clear all the timeouts starting from\n * 1 up to and including the timeout you created. This will also “clear”\n * timeouts that are already over, which is does not throw an error."
    ],
    "functions": [
        "playTone",
        "playOne",
        "play",
        "autoPlayAll",
        "playAll",
        "clearAllTimeouts",
        "resetClassNames",
        "stopAutoPlayback"
    ],
    "classes": []
}