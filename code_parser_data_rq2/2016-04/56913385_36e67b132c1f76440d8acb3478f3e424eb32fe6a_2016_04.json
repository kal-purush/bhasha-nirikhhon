{
    "identifiers": [
        "angular",
        "$mmaModWiki",
        "mmaModWikiComponent",
        "$mmSite",
        "$mmFilepool",
        "$q",
        "$mmGroups",
        "$mmCourseHelper",
        "$mmCourse",
        "mmaModWikiComponent",
        "courseId",
        "siteId",
        "siteId",
        "siteId",
        "$mmSite",
        "promises",
        "courseId",
        "siteId",
        "files",
        "angular",
        "files",
        "file",
        "file",
        "size",
        "size",
        "file",
        "size",
        "promises",
        "getAllPages",
        "courseId",
        "siteId",
        "pages",
        "angular",
        "pages",
        "page",
        "page",
        "size",
        "size",
        "page",
        "size",
        "$q",
        "promises",
        "sizes",
        "sizes",
        "a",
        "b",
        "a",
        "b",
        "courseId",
        "siteId",
        "siteId",
        "siteId",
        "$mmSite",
        "$mmaModWiki",
        "courseId",
        "siteId",
        "wiki",
        "$mmaModWiki",
        "wiki",
        "siteId",
        "courseId",
        "siteId",
        "siteId",
        "siteId",
        "$mmSite",
        "$mmaModWiki",
        "courseId",
        "siteId",
        "wiki",
        "$mmaModWiki",
        "wiki",
        "siteId",
        "courseId",
        "siteId",
        "siteId",
        "siteId",
        "$mmSite",
        "promises",
        "courseId",
        "siteId",
        "files",
        "$mmFilepool",
        "files",
        "promises",
        "getAllPages",
        "courseId",
        "siteId",
        "pages",
        "getTimemodifiedFromPages",
        "pages",
        "$q",
        "promises",
        "lastmodifiedTimes",
        "lastmodifiedTimes",
        "pages",
        "angular",
        "pages",
        "page",
        "page",
        "lastmodified",
        "lastmodified",
        "page",
        "lastmodified",
        "$mmaModWiki",
        "$mmSite",
        "courseId",
        "$mmSite",
        "userid",
        "$mmSite",
        "$mmFilepool",
        "siteId",
        "mmaModWikiComponent",
        "packageModified",
        "getAllPages",
        "courseId",
        "siteId",
        "pages",
        "angular",
        "pages",
        "page",
        "page",
        "packageModified",
        "promises",
        "$mmaModWiki",
        "page",
        "siteId",
        "$mmaModWiki",
        "page",
        "siteId",
        "promises",
        "$mmGroups",
        "siteId",
        "groupmode",
        "groupmode",
        "$mmGroups",
        "groupmode",
        "$mmGroups",
        "$mmGroups",
        "userid",
        "siteId",
        "$q",
        "promises",
        "$mmaModWiki",
        "courseId",
        "siteId",
        "wiki",
        "$mmCourseHelper",
        "wiki",
        "siteId",
        "promises",
        "$mmCourse",
        "siteId",
        "promises",
        "courseId",
        "siteId",
        "files",
        "$mmFilepool",
        "files",
        "getTimemodifiedFromPages",
        "pages",
        "$mmFilepool",
        "files",
        "pagesTimemodified",
        "filesTimemodified",
        "$mmFilepool",
        "siteId",
        "files",
        "mmaModWikiComponent",
        "revision",
        "timemodified",
        "$q",
        "promises"
    ],
    "literals": [
        "'mm.addons.mod_wiki'",
        "'$mmaModWikiPrefetchHandler'",
        "'coursemodule'",
        "'coursemodule'",
        "'mod_wiki_get_subwiki_files'",
        "'coursemodule'",
        "'wiki'"
    ],
    "variables": [
        "promises",
        "size",
        "size",
        "promises",
        "lastmodified",
        "siteId",
        "userid",
        "promises",
        "revision",
        "pagesTimemodified",
        "filesTimemodified",
        "timemodified"
    ],
    "comments": [
        "(C) Copyright 2015 Martin Dougiamas",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Sum values in the array.",
        "Wiki not found, return empty list.",
        "Wiki not found, return empty list.",
        "Get the maximum value in the array.",
        "Get Package timemodified in order to retrieve only updated pages.",
        "Get Page list to be retrieved. getWiki and getSubwikis done in getAllPages.",
        "Check if page has to be fetched, and invalidate it first.",
        "Fetch group data.",
        "Get the groups available for the user.",
        "Fetch info to provide wiki links.",
        "Get related page files and fetch them.",
        "Download related files and update package info."
    ],
    "docstrings": [
        "* Mod wiki prefetch handler.\n *\n * @module mm.addons.mod_wiki\n * @ngdoc service\n * @name $mmaModWikiPrefetchHandler",
        "* Get the download size of a module.\n     *\n     * @module mm.addons.mod_wiki\n     * @ngdoc method\n     * @name $mmaModWikiPrefetchHandler#getDownloadSize\n     * @param {Object} module Module to get the size.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @param  {String} [siteId] Site ID. If not defined, current site.\n     * @return {Promise}       Size.",
        "* Get the list of downloadable files.\n     *\n     * @module mm.addons.mod_wiki\n     * @ngdoc method\n     * @name $mmaModWikiPrefetchHandler#getFiles\n     * @param {Object} module   Module to get the files.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @param  {String} [siteId] Site ID. If not defined, current site.\n     * @return {Promise}         List of files.",
        "* Returns a list of pages that can be downloaded.\n     *\n     * @param {Object} module The module object returned by WS.\n     * @param {Number} courseId The course ID.\n     * @param  {String} [siteId] Site ID. If not defined, current site.\n     * @return {Promise}     List of pages.",
        "* Get timemodified of a Wiki.\n     *\n     * @module mm.addons.mod_wiki\n     * @ngdoc method\n     * @name $mmaModWikiPrefetchHandler#getTimemodified\n     * @param {Object} module   Module to get the timemodified.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @param  {String} [siteId] Site ID. If not defined, current site.\n     * @return {Promise}         Timemodified.",
        "* Get timemodified from a pages list.\n     *\n     * @param {Object[]} pages   Pages to get the latest timemodified.\n     * @return {Number}         Timemodified.",
        "* Whether or not the module is enabled for the site.\n     *\n     * @module mm.addons.mod_wiki\n     * @ngdoc method\n     * @name $mmaModWikiPrefetchHandler#isEnabled\n     * @return {Boolean}",
        "* Prefetch the module.\n     *\n     * @module mm.addons.mod_wiki\n     * @ngdoc method\n     * @name $mmaModWikiPrefetchHandler#prefetch\n     * @param {Object} module The module object returned by WS.\n     * @param {Number} courseId Course ID the module belongs to.\n     * @return {Promise}      Promise resolved when all files have been downloaded. Data returned is not reliable."
    ],
    "functions": [
        "getAllPages",
        "getTimemodifiedFromPages"
    ],
    "classes": []
}