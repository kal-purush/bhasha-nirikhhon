{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "express",
        "app",
        "bodyParser",
        "app",
        "bodyParser",
        "process",
        "express",
        "router",
        "req",
        "res",
        "next",
        "next",
        "router",
        "req",
        "res",
        "res",
        "router",
        "req",
        "res",
        "url",
        "request",
        "url",
        "error",
        "response",
        "html",
        "error",
        "cheerio",
        "html",
        "$",
        "i",
        "elem",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "webItems",
        "i",
        "bicID",
        "bicDescription",
        "imgSrc",
        "longdesc",
        "res",
        "webItems",
        "app",
        "router",
        "app",
        "port",
        "port",
        "exports",
        "app"
    ],
    "literals": [
        "'express'",
        "'fs'",
        "'request'",
        "'cheerio'",
        "'body-parser'",
        "'Something is happening.'",
        "'/'",
        "'hooray! welcome to our api!'",
        "'/scrape'",
        "\"\"",
        "'http://www.blocket.se/malmo?q=cykel&cg=0&w=1&st=s&c=&ca=23_11&is=1&l=0&md=th'",
        "\"\"",
        "'.item_row'",
        "'id'",
        "'.media-body'",
        "'.h5'",
        "'img'",
        "'longdesc'",
        "'img'",
        "'src'",
        "'bicID:'",
        "'bicDescription'",
        "'imgSrc'",
        "'longdesc'",
        "'/api'",
        "'Magic happens on port '"
    ],
    "variables": [
        "express",
        "fs",
        "request",
        "cheerio",
        "bodyParser",
        "app",
        "port",
        "router",
        "data",
        "data",
        "webItems",
        "$",
        "bicID",
        "bicDescription",
        "longdesc",
        "imgSrc"
    ],
    "comments": [
        "set our port",
        "create our router",
        "middleware to use for all requests",
        "do logging",
        "test route to make sure everything is working (accessed at GET http://localhost:8080/api)",
        "First we'll check to make sure no errors occurred when making the request",
        "initializse where I keep the items",
        "alternative",
        "console.log(\"long:\", longdesc, \" img:\", imgSrc);",
        "Finally, we'll define the variables we're going to capture",
        "res.json({ message: 'hooray! welcome to our scrape route!', bdata:data });",
        "REGISTER OUR ROUTES -------------------------------",
        "START THE SERVER",
        "============================================================================="
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}