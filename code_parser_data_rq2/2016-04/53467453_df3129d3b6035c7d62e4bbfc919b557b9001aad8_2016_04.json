{
    "identifiers": [
        "django_filters",
        "api",
        "models",
        "Property",
        "Feature",
        "rest_framework",
        "filters",
        "filters",
        "FilterSet",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "NumberFilter",
        "name",
        "lookup_type",
        "django_filters",
        "CharFilter",
        "name",
        "lookup_type",
        "Property"
    ],
    "literals": [
        "\"price\"",
        "\"gte\"",
        "\"price\"",
        "\"lte\"",
        "\"bedrooms\"",
        "\"gte\"",
        "\"bedrooms\"",
        "\"lte\"",
        "\"bathrooms\"",
        "\"gte\"",
        "\"bathrooms\"",
        "\"lte\"",
        "\"car_spaces\"",
        "\"gte\"",
        "\"car_spaces\"",
        "\"lte\"",
        "\"geocoded_address\"",
        "\"contains\"",
        "\"min_price\"",
        "\"max_price\"",
        "\"min_bedrooms\"",
        "\"max_bedrooms\"",
        "\"min_bathrooms\"",
        "\"max_bathrooms\"",
        "\"min_car_spaces\"",
        "\"max_car_spaces\"",
        "\"features\"",
        "\"address_contains\""
    ],
    "variables": [
        "min_price",
        "max_price",
        "min_bedrooms",
        "max_bedrooms",
        "min_bathrooms",
        "max_bathrooms",
        "min_car_spaces",
        "max_car_spaces",
        "address_contains",
        "model",
        "fields"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"Filters used for the Property model.\n\n    Filters are added to a request as query parameters. For example the follwoing\n    request will filter based on the minimum hosue price.\n\n    `/api/property?min_price=100000`\n\n    while not an explicit attribute of this class the `features` property can\n    also be filtered on by suppluing a list of the feature ids. For example:\n\n    `/api/property?features=1`\n    \n\n    Attributes:\n        min_price: Supplying this filter returns only properties with a price\n            greater than or equal to the supplied value.\n\n        max_price: Supplying this filter returns only properties with a price\n            less than or equal to the supplied value.\n        \n        min_bedrooms: Supplying this filter returns only properties which have\n            a number of bedrooms greater than or equal to the supplied value.\n        \n        max_bedrooms: Supplying this filter returns only properties which have\n            a number of bedrooms less than or equal to the supplied value.\n        \n        min_bathrooms: Supplying this filter returns only properties which have\n            a number of bathrooms greater than or equal to the supplied value.\n        \n        max_bathrooms: Supplying this filter returns only properties which have\n            a number of bathrooms less than or equal to the supplied value.\n        \n        min_car_spaces: Supplying this filter returns only properties which have\n            a number of car spaces greater than or equal to the supplied value.\n        \n        max_car_spaces: Supplying this filter returns only properties which have\n            a number of car_spaces less than or equal to the supplied value.\n        \n        address_contains: Supplying this filter will return only properties which\n            contain the supplied text in their geocded address.\n        \n    \"\"\""
    ],
    "functions": [],
    "classes": [
        "PropertyFilter",
        "Meta"
    ]
}