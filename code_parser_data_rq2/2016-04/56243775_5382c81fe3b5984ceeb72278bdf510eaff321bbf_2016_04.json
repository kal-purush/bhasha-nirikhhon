{
    "identifiers": [
        "ladies",
        "javax",
        "swing",
        "JPanel",
        "java",
        "awt",
        "Color",
        "java",
        "awt",
        "GridLayout",
        "java",
        "awt",
        "ActionEvent",
        "java",
        "awt",
        "ActionListener",
        "javax",
        "swing",
        "ImageIcon",
        "javax",
        "swing",
        "JButton",
        "BOARDWIDTH",
        "MAX_BUTTONS",
        "EMPTY",
        "BLANCAS",
        "NEGRAS",
        "arrayButtons",
        "taulell",
        "num",
        "b",
        "n",
        "turno",
        "BLANCAS",
        "origen",
        "moveDone",
        "origen",
        "setLayout",
        "arrayButtons",
        "MAX_BUTTONS",
        "taulell",
        "BOARDWIDTH",
        "BOARDWIDTH",
        "b",
        "n",
        "i",
        "i",
        "BOARDWIDTH",
        "i",
        "j",
        "j",
        "BOARDWIDTH",
        "j",
        "taulell",
        "i",
        "j",
        "num",
        "i",
        "j",
        "arrayButtons",
        "num",
        "taulell",
        "i",
        "j",
        "num",
        "i",
        "j",
        "taulell",
        "i",
        "j",
        "setBackground",
        "Color",
        "white",
        "taulell",
        "i",
        "j",
        "addActionListener",
        "taulell",
        "i",
        "j",
        "setBackground",
        "Color",
        "black",
        "i",
        "taulell",
        "i",
        "j",
        "setEstado",
        "NEGRAS",
        "taulell",
        "i",
        "j",
        "setIcon",
        "n",
        "i",
        "taulell",
        "i",
        "j",
        "setEstado",
        "BLANCAS",
        "taulell",
        "i",
        "j",
        "setIcon",
        "b",
        "taulell",
        "i",
        "j",
        "setEstado",
        "EMPTY",
        "j",
        "taulell",
        "i",
        "j",
        "setBackground",
        "Color",
        "white",
        "taulell",
        "i",
        "j",
        "addActionListener",
        "taulell",
        "i",
        "j",
        "setBackground",
        "Color",
        "black",
        "i",
        "taulell",
        "i",
        "j",
        "setEstado",
        "NEGRAS",
        "taulell",
        "i",
        "j",
        "setIcon",
        "n",
        "i",
        "taulell",
        "i",
        "j",
        "setEstado",
        "BLANCAS",
        "taulell",
        "i",
        "j",
        "setIcon",
        "b",
        "taulell",
        "i",
        "j",
        "setEstado",
        "EMPTY",
        "add",
        "taulell",
        "i",
        "j",
        "Override",
        "e",
        "button",
        "e",
        "getSource",
        "botonSelectedId",
        "button",
        "getId",
        "estado",
        "button",
        "getEstado",
        "estado",
        "turno",
        "botonSelectedId",
        "estado",
        "origen",
        "button",
        "setBackground",
        "Color",
        "BLUE",
        "origen",
        "arrayButtons",
        "origen",
        "setBackground",
        "Color",
        "BLACK",
        "botonSelectedId",
        "origen",
        "moveDone",
        "button",
        "setBackground",
        "Color",
        "BLACK",
        "turno",
        "BLANCAS",
        "turno",
        "NEGRAS",
        "turno",
        "BLANCAS",
        "origen",
        "moveDone",
        "origen",
        "botonSelectedId",
        "estado",
        "PaneGameTable",
        "EMPTY",
        "origen",
        "arrayButtons",
        "origen",
        "setEstado",
        "EMPTY",
        "arrayButtons",
        "origen",
        "setIcon",
        "arrayButtons",
        "origen",
        "setBackground",
        "Color",
        "BLACK",
        "turno",
        "BLANCAS",
        "button",
        "setEstado",
        "BLANCAS",
        "button",
        "setIcon",
        "b",
        "button",
        "setEstado",
        "NEGRAS",
        "button",
        "setIcon",
        "n",
        "button",
        "setBackground",
        "Color",
        "BLUE",
        "origen",
        "botonSelectedId",
        "moveDone",
        "estado",
        "origen"
    ],
    "literals": [
        "\"img/b.png\"",
        "\"img/n.png\"",
        "\"Id: \"",
        "\"Estado: \"",
        "\"Origen: \"",
        "\"Movimiento\"",
        "\"Estado: \"",
        "\"Origen: \""
    ],
    "variables": [
        "arrayButtons",
        "taulell",
        "b",
        "n",
        "origen"
    ],
    "comments": [],
    "docstrings": [
        "* //Comprovoar si estas obligado a matar\n\t\t\t * if(obligadoAMatar&&laFichaSeleccionadaNoEsLaCorrecta){origen=0;}\n\t\t\t * else{ cambiar imagen boton a seleccionado deseleccionar otros }",
        "* movimiento=comprovarMovimeiento(origen, botonSelected); //0 si se\n\t\t * puede mover, 1 no se puede mover, else el ID que mata\n\t\t * if(movimiento==0){ //moverse sin matar\n\t\t * arrayButtons[origen].setEstado(0);\n\t\t * arrayButtons[botonSelected].setEstado(turno); } else\n\t\t * if(movimiento==-1){} //no te puedes mover else{ //el valor movimiento\n\t\t * es el ID de la ficha que se elimina\n\t\t * arrayButtons[origen].setEstado(0);\n\t\t * arrayButtons[movimiento].setEstado(0);\n\t\t * arrayButtons[botonSelected].setEstado(turno); } origen=0; }\n\t\t * \n\t\t * comprovarMovimiento(int origen, int botonSelected){ int direccion;\n\t\t * if(turno==1){ direccion=-1; } else{ direccion=1; }\n\t\t * \n\t\t * if(origen%8==0){ if(botonSelected-origen==7*direccion){return 0;}\n\t\t * if(botonSelected-origen==14*direccion){ return\n\t\t * comprovarEliminacion(origen,destino); } } else\n\t\t * if(origen%8==1||origen=1){\n\t\t * if(botonSelected-origen==9*direccion){return 0;}\n\t\t * if(botonSelected-origen==18*direccion){ return\n\t\t * comprovarEliminacion(origen,destino); } } else{\n\t\t * if(botonSelected-origen==7*direccion||botonSelected-origen==9*\n\t\t * direccion){return 0;}\n\t\t * if(botonSelected-origen==14*direccion||botonSelected-origen==18*\n\t\t * direccion){ return comprovarEliminacion(origen,destino); } } }\n\t\t * \n\t\t * comprovarEliminacion(int origen, int destino){ int\n\t\t * eliminada=origen+((destino-origen)/2);\n\t\t * if(arrayButtons[eliminada].getEstado()!turno&&estado!=0){ return\n\t\t * eliminada; } return -1; }\n\t\t * \n\t\t *"
    ],
    "functions": [
        "PaneGameTable",
        "actionPerformed"
    ],
    "classes": [
        "PaneGameTable"
    ]
}