{
    "identifiers": [
        "jenkins",
        "plugins",
        "git",
        "edu",
        "umd",
        "cs",
        "findbugs",
        "annotations",
        "NonNull",
        "hudson",
        "plugins",
        "git",
        "BranchSpec",
        "hudson",
        "plugins",
        "git",
        "GitSCM",
        "hudson",
        "plugins",
        "git",
        "UserRemoteConfig",
        "java",
        "util",
        "java",
        "util",
        "jenkins",
        "scm",
        "api",
        "SCMHead",
        "jenkins",
        "scm",
        "api",
        "SCMRevision",
        "org",
        "eclipse",
        "jgit",
        "transport",
        "RefSpec",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Before",
        "gitSCMSource",
        "expectedCredentialsId",
        "expectedIncludes",
        "expectedExcludes",
        "expectedRemote",
        "expectedRefSpec",
        "expectedRefSpecs",
        "Before",
        "expectedRefSpecs",
        "isEmpty",
        "expectedRefSpecs",
        "add",
        "expectedRefSpec",
        "gitSCMSource",
        "Test",
        "assertEquals",
        "expectedCredentialsId",
        "gitSCMSource",
        "getCredentialsId",
        "Test",
        "assertEquals",
        "expectedRemote",
        "gitSCMSource",
        "getRemote",
        "Test",
        "assertEquals",
        "expectedIncludes",
        "gitSCMSource",
        "getIncludes",
        "Test",
        "assertEquals",
        "expectedExcludes",
        "gitSCMSource",
        "getExcludes",
        "Test",
        "assertEquals",
        "expectedRemote",
        "gitSCMSource",
        "getRemoteName",
        "Test",
        "assertEquals",
        "expectedRefSpecs",
        "gitSCMSource",
        "getRefSpecs",
        "Test",
        "assertFalse",
        "gitSCMSource",
        "isExcluded",
        "assertFalse",
        "gitSCMSource",
        "isExcluded",
        "assertFalse",
        "gitSCMSource",
        "isExcluded",
        "assertFalse",
        "gitSCMSource",
        "isExcluded",
        "assertFalse",
        "gitSCMSource",
        "isExcluded",
        "assertFalse",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "assertTrue",
        "gitSCMSource",
        "isExcluded",
        "Test",
        "remoteConfigs",
        "gitSCMSource",
        "getRemoteConfigs",
        "assertEquals",
        "expectedRemote",
        "remoteConfigs",
        "get",
        "getName",
        "assertEquals",
        "expectedRefSpec",
        "remoteConfigs",
        "get",
        "getRefspec",
        "assertEquals",
        "remoteConfigs",
        "size",
        "Test",
        "expectedBranchName",
        "head",
        "expectedBranchName",
        "revision",
        "head",
        "gitSCM",
        "gitSCMSource",
        "build",
        "head",
        "revision",
        "remoteConfigs",
        "gitSCM",
        "getUserRemoteConfigs",
        "assertEquals",
        "expectedRemote",
        "remoteConfigs",
        "get",
        "getName",
        "assertEquals",
        "expectedRefSpec",
        "remoteConfigs",
        "get",
        "getRefspec",
        "assertEquals",
        "remoteConfigs",
        "size",
        "branches",
        "gitSCM",
        "getBranches",
        "assertEquals",
        "expectedBranchName",
        "branches",
        "get",
        "getName",
        "assertEquals",
        "branches",
        "size",
        "expectedCredentialsId",
        "expectedRemote",
        "expectedIncludes",
        "expectedExcludes",
        "expectedRefSpecs",
        "NonNull",
        "scmh",
        "scmh",
        "Override",
        "o",
        "Override"
    ],
    "literals": [
        "\"expected-credentials-id\"",
        "\"*master release* fe?ture substring\"",
        "\"release bugfix*\"",
        "\"origin\"",
        "\"+refs/heads/*:refs/remotes/origin/*\"",
        "\"master\"",
        "\"remote/master\"",
        "\"release/X.Y\"",
        "\"releaseX.Y\"",
        "\"fe?ture\"",
        "\"substring\"",
        "\"feature\"",
        "\"test\"",
        "\"foo/substring\"",
        "\"substring/end\"",
        "\"substring1\"",
        "\"remote/substring2\"",
        "\"origin/substring\"",
        "\"release\"",
        "\"bugfix\"",
        "\"bugfix/test\"",
        "\"Wrong number of entries in remoteConfigs\"",
        "\"origin/master\"",
        "\"Wrong number of entries in remoteConfigs\"",
        "\"Wrong number of branches\"",
        "\"AbstractGitSCMSourceImpl-id\"",
        "\"Intentionally unimplemented\"",
        "\"Intentionally unimplemented\""
    ],
    "variables": [],
    "comments": [
        "Excluded because they don't match the inclusion strings",
        "'?' is not a wildcard",
        "Excluded because they match an exclusion string"
    ],
    "docstrings": [],
    "functions": [
        "setUp",
        "testGetCredentialsId",
        "testGetRemote",
        "testGetIncludes",
        "testGetExcludes",
        "testGetRemoteName",
        "testGetRefSpecs",
        "testIsExcluded",
        "testGetRemoteConfigs",
        "testBuild",
        "AbstractGitSCMSourceImpl",
        "getCredentialsId",
        "getRemote",
        "getIncludes",
        "getExcludes",
        "getRefSpecs",
        "SCMRevisionImpl",
        "equals",
        "hashCode"
    ],
    "classes": [
        "AbstractGitSCMSourceTrivialTest",
        "AbstractGitSCMSourceImpl",
        "SCMRevisionImpl"
    ]
}