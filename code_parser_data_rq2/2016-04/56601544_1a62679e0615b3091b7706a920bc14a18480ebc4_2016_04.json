{
    "identifiers": [
        "numpy",
        "scipy",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "delay",
        "target",
        "_register_in_projection",
        "source",
        "_register_out_projection",
        "NotImplementedError",
        "Projection",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "connection_kernel",
        "Projection",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "connection_kernel",
        "numpy",
        "sum",
        "numpy",
        "abs",
        "connection_kernel",
        "source",
        "radius",
        "target",
        "radius",
        "size_diff",
        "numpy",
        "shape",
        "connection_kernel",
        "numpy",
        "shape",
        "connection_kernel",
        "target",
        "radius",
        "source",
        "radius",
        "connection_kernel",
        "copy",
        "max",
        "rad",
        "size_diff",
        "j",
        "rad",
        "max",
        "size_diff",
        "j",
        "rad",
        "source_dim",
        "max",
        "rad",
        "size_diff",
        "i",
        "rad",
        "max",
        "size_diff",
        "i",
        "rad",
        "source_dim",
        "i",
        "xrange",
        "target_dim",
        "j",
        "xrange",
        "target_dim",
        "numpy",
        "array",
        "numpy",
        "sum",
        "numpy",
        "abs",
        "b",
        "b",
        "a",
        "a",
        "cfs",
        "source",
        "radius",
        "target",
        "radius",
        "scipy",
        "signal",
        "fftconvolve",
        "source",
        "get_activity",
        "delay",
        "connection_kernel",
        "mode",
        "size_diff",
        "resp",
        "size_diff",
        "size_diff",
        "size_diff",
        "size_diff",
        "numpy",
        "shape",
        "resp",
        "target",
        "radius",
        "target",
        "radius",
        "numpy",
        "shape",
        "resp",
        "target",
        "radius",
        "target",
        "radius",
        "numpy",
        "multiply",
        "resp",
        "corr_factors",
        "strength",
        "Projection",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "initial_connection_kernel",
        "Projection",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "numpy",
        "all",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "target",
        "radius",
        "target",
        "radius",
        "source",
        "radius",
        "target",
        "radius",
        "size_diff",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "source",
        "radius",
        "target",
        "radius",
        "initial_connection_kernel",
        "numpy",
        "sum",
        "numpy",
        "abs",
        "initial_connection_kernel",
        "initial_connection_kernel",
        "copy",
        "max",
        "rad",
        "size_diff",
        "j",
        "rad",
        "max",
        "size_diff",
        "j",
        "rad",
        "source_dim",
        "max",
        "rad",
        "size_diff",
        "i",
        "rad",
        "max",
        "size_diff",
        "i",
        "rad",
        "source_dim",
        "i",
        "xrange",
        "target_dim",
        "j",
        "xrange",
        "target_dim",
        "i",
        "xrange",
        "target",
        "radius",
        "j",
        "xrange",
        "target",
        "radius",
        "numpy",
        "all",
        "numpy",
        "shape",
        "cfs",
        "i",
        "j",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "numpy",
        "all",
        "numpy",
        "shape",
        "cfs",
        "i",
        "j",
        "rad",
        "rad",
        "i",
        "j",
        "numpy",
        "shape",
        "cfs",
        "i",
        "j",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "cfs",
        "i",
        "cfs",
        "i",
        "j",
        "flatten",
        "numpy",
        "sum",
        "numpy",
        "abs",
        "cfs",
        "i",
        "j",
        "numpy",
        "zeros",
        "target_dim",
        "target_dim",
        "source",
        "get_activity",
        "delay",
        "source",
        "radius",
        "target",
        "radius",
        "i",
        "xrange",
        "target",
        "radius",
        "j",
        "xrange",
        "target",
        "radius",
        "activity",
        "i",
        "cfs",
        "i",
        "j",
        "dot",
        "sa",
        "max",
        "size_diff",
        "i",
        "rad",
        "size_diff",
        "i",
        "rad",
        "max",
        "size_diff",
        "j",
        "rad",
        "size_diff",
        "j",
        "rad",
        "ravel",
        "activity",
        "strength",
        "posx",
        "posy",
        "cfs",
        "posx",
        "posy",
        "Projection",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "initial_connection_kernel",
        "Projection",
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "numpy",
        "all",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "source",
        "radius",
        "source",
        "radius",
        "numpy",
        "sum",
        "numpy",
        "abs",
        "initial_connection_kernel",
        "source",
        "radius",
        "target",
        "radius",
        "size_diff",
        "numpy",
        "shape",
        "initial_connection_kernel",
        "source",
        "radius",
        "target",
        "radius",
        "numpy",
        "zeros",
        "target_dim",
        "target_dim",
        "source_dim",
        "source_dim",
        "max",
        "rad",
        "size_diff",
        "numpy",
        "zeros",
        "source_dim",
        "padding",
        "source_dim",
        "padding",
        "size_diff",
        "padding",
        "i",
        "xrange",
        "target_dim",
        "j",
        "xrange",
        "target_dim",
        "tmp",
        "i",
        "offset",
        "rad",
        "i",
        "offset",
        "rad",
        "j",
        "offset",
        "rad",
        "j",
        "offset",
        "rad",
        "initial_connection_kernel",
        "cfs",
        "i",
        "target_dim",
        "j",
        "tmp",
        "padding",
        "source_dim",
        "padding",
        "padding",
        "source_dim",
        "padding",
        "copy",
        "flatten",
        "numpy",
        "sum",
        "numpy",
        "abs",
        "tmp",
        "padding",
        "source_dim",
        "padding",
        "padding",
        "source_dim",
        "padding",
        "numpy",
        "zeros",
        "target_dim",
        "target_dim",
        "source",
        "get_activity",
        "delay",
        "ravel",
        "source",
        "radius",
        "target",
        "radius",
        "strength",
        "numpy",
        "reshape",
        "numpy",
        "dot",
        "cfs",
        "sa",
        "target",
        "radius",
        "target",
        "radius",
        "posx",
        "posy",
        "source",
        "radius",
        "target",
        "radius",
        "numpy",
        "reshape",
        "cfs",
        "posx",
        "target",
        "radius",
        "posy",
        "source",
        "radius",
        "source",
        "radius"
    ],
    "literals": [
        "\"ERROR: zero delay projections are not allowed\"",
        "\"ERROR: The radius of source sheet of ConvolutionalProjection has to be larger than target\"",
        "\"ERROR: initial kernel for ConvolutionalProjection has to have odd radius\"",
        "'same'",
        "\"ERROR: The size of calculated projection respone is \"",
        "\"units, while the size of target sheet is \"",
        "\" units\"",
        "\"ERROR: initial kernel for ConnetionFieldProjection has to have odd radius\"",
        "\"ERROR: The radius of source sheet of ConvolutionalProjection has to be larger than target\"",
        "\"ERROR: Connection field created at location \"",
        "\",\"",
        "\" that has size: \"",
        "\" while template size is:\"",
        "\"ERROR: initial kernel for FastConnetcionFieldProjection has to have odd radius\"",
        "\"ERROR: initial kernel for FastConnetcionFieldProjection has to have non zero L1 norm\"",
        "\"ERROR: The radius of source sheet of ConvolutionalProjection has to be larger than target\""
    ],
    "variables": [
        "name",
        "source",
        "target",
        "strength",
        "delay",
        "activity",
        "connection_kernel",
        "size_diff",
        "rad",
        "target_dim",
        "source_dim",
        "cfs",
        "corr_factors",
        "size_diff",
        "resp",
        "resp",
        "activity",
        "size_diff",
        "rad",
        "source_dim",
        "target_dim",
        "initial_connection_kernel",
        "cfs",
        "j",
        "activity",
        "sa",
        "size_diff",
        "j",
        "size_diff",
        "rad",
        "source_dim",
        "target_dim",
        "cfs",
        "padding",
        "tmp",
        "offset",
        "tmp",
        "activity",
        "sa",
        "size_diff",
        "activity",
        "size_diff"
    ],
    "comments": [
        "lets calculate edge correction factors:",
        "make sure we created correct sizes",
        "flatten and normalize",
        "[posx+size_diff-self.rad,posx+size_diff+self.rad+1][posy+size_diff-self.rad,posy+size_diff+self.rad+1]"
    ],
    "docstrings": [
        "\"\"\"\n    A set of connections from one sheet to another. This is an abstract class.\n    \"\"\"",
        "\"\"\"\n        Each Projection has a source sheet and target sheet.\n        \n        Parameters\n        ----------\n        source : Sheet\n                 The sheet from which projection passes rates.\n\n        target : Sheet\n                 The sheet to which projection passes rates.\n                 \n        strength : float\n                The strength of the projection.\n        \n        delay : float\n                The delay of the projection\n        \"\"\"",
        "\"\"\"\n        This returns a matrix of the same size as the target sheet, which corresponds to the contributions from this projections to the individual neurons.\n        \"\"\"",
        "\"\"\"\n    A projection which has only one set of connections (connection kernel) which are assumed to be the same for all target neurons, except being centered on their position.\n    This means that the output of ConvolutionalProjection is the spatial convolution of this connection kernel with the activities of the source Sheet.\n    \n    Note that the connection_kernel will be normalized so that the sum of it's absolute values is 1.\n    \"\"\"",
        "\"\"\"\n        Each Projection has a source sheet and target sheet.\n        \n        Parameters\n        ----------\n        source : Sheet\n                 The sheet from which projection passes rates.\n\n        target : Sheet\n                 The sheet to which projection passes rates.\n                 \n        strength : float\n                 The strength of the projection.\n        \"\"\"",
        "\"\"\"\n        This returns a matrix of the same size as the target sheet, which corresponds to the contributions from this projections to the individual neurons.\n        \"\"\"",
        "\"\"\"\n    A projection which has can have different connection field for each target neuron, which are assumed to be centered on the target's neuron position.\n    This means that the output of ConvolutionalProjection is the spatial convolution of this connection kernel with the activities of the source Sheet.\n    \n    Note that all connection fields, including the border ones, will be normalized so that the sum of their absolute values is 1.    \n    \"\"\"",
        "\"\"\"\n        Each Projection has a source sheet and target sheet.\n        \n        Parameters\n        ----------\n        source : Sheet\n                 The sheet from which projection passes rates.\n\n        target : Sheet\n                 The sheet to which projection passes rates.\n                 \n        strength : float\n                 The strength of the projection.\n        \"\"\"",
        "\"\"\"\n        This returns a matrix of the same size as the target sheet, which corresponds to the contributions from this projections to the individual neurons.\n        \"\"\"",
        "\"\"\"\n    A projection which has can have different connection field for each target neuron, which are assumed to be centered on the target's neuron position.\n    This means that the output of ConvolutionalProjection is the spatial convolution of this connection kernel with the activities of the source Sheet.\n    \n    Note that all connection fields, including the border ones, will be normalized so that the sum of their absolute values is 1.    \n    \"\"\"",
        "\"\"\"\n        Each Projection has a source sheet and target sheet.\n        \n        Parameters\n        ----------\n        source : Sheet\n                 The sheet from which projection passes rates.\n\n        target : Sheet\n                 The sheet to which projection passes rates.\n                 \n        strength : float\n                 The strength of the projection.\n                 \n        inititial_connection_kernel: ndarray\n                 The initial connection kernel. \n        \"\"\"",
        "\"\"\"\n        This returns a matrix of the same size as the target sheet, which corresponds to the contributions from this projections to the individual neurons.\n        \"\"\""
    ],
    "functions": [
        "activate",
        "activate",
        "activate",
        "get_cf",
        "activate",
        "get_cf"
    ],
    "classes": [
        "Projection",
        "ConvolutionalProjection",
        "ConnetcionFieldProjection",
        "FastConnetcionFieldProjection"
    ]
}