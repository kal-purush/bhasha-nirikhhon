{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "six",
        "moves",
        "input",
        "six",
        "warnings",
        "metacls",
        "classname",
        "bases",
        "class_dict",
        "bases",
        "parent_class",
        "__doc__",
        "class_dict",
        "get",
        "parent_class",
        "args",
        "kwargs",
        "repr",
        "depr_warnstring",
        "warnings",
        "warn",
        "depr_warnstring",
        "_target_parent_class",
        "args",
        "kwargs",
        "parent_class",
        "__doc__",
        "initfn",
        "ClassDeprecationWrapper",
        "metacls",
        "__new__",
        "metacls",
        "classname",
        "bases",
        "class_dict"
    ],
    "literals": [
        "'__doc__'",
        "'_DEPRECATION_WARNING'",
        "'_target_parent_class'",
        "'__init__'",
        "'__init__'"
    ],
    "variables": [
        "parent_class",
        "class_dict",
        "depr_warnstring",
        "class_dict",
        "initfn",
        "func_name",
        "initfn",
        "__doc__",
        "class_dict"
    ],
    "comments": [
        "(C) British Crown Copyright 2010 - 2016, Met Office",
        "",
        "This file is part of Iris.",
        "",
        "Iris is free software: you can redistribute it and/or modify it under",
        "the terms of the GNU Lesser General Public License as published by the",
        "Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "Iris is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU Lesser General Public License for more details.",
        "",
        "You should have received a copy of the GNU Lesser General Public License",
        "along with Iris.  If not, see <http://www.gnu.org/licenses/>.",
        "noqa",
        "A Mixin for a wrapper class that mimics the underlying original, but also",
        "emits deprecation warnings when it is instantiated.",
        "Patch the subclass to duplicate docstrings from the parent class, and",
        "provide an __init__ that issues a deprecation warning and then calls",
        "the parent constructor.",
        "Copy the original class docstring.",
        "Get a warning message from the underlying class.",
        "Save the parent class *on* the wrapper class, so we can chain to its",
        "__init__ call.",
        "Create a wrapper init function which issues the deprecation.",
        "Set this as the init for the wrapper class.",
        "Also copy the original docstring.",
        "Return the result."
    ],
    "docstrings": [
        "\"\"\"\nUtilities for producing runtime deprecation messages.\n\n\"\"\""
    ],
    "functions": [
        "__new__",
        "initfn"
    ],
    "classes": [
        "ClassDeprecationWrapper"
    ]
}