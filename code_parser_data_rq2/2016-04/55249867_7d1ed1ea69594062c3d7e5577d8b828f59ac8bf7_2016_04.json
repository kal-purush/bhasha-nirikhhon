{
    "identifiers": [
        "json",
        "urllib2",
        "csv",
        "time",
        "time",
        "sleep",
        "logging",
        "key_file",
        "open",
        "key_file",
        "f",
        "readline",
        "logging",
        "info",
        "time",
        "api_key",
        "api_key",
        "getAPIKey",
        "key",
        "outputfolder",
        "outputdoc",
        "logging",
        "basicConfig",
        "filename",
        "level",
        "logging",
        "WARNING",
        "contract",
        "contract",
        "urllib2",
        "urlopen",
        "url",
        "read",
        "url",
        "response",
        "api_key",
        "contract",
        "logging",
        "debug",
        "time",
        "url",
        "contract",
        "api_key",
        "urllib2",
        "urlopen",
        "url",
        "read",
        "urllib2",
        "HTTPError",
        "e",
        "logging",
        "error",
        "time",
        "e",
        "urllib2",
        "URLError",
        "e",
        "logging",
        "debug",
        "time",
        "logging",
        "debug",
        "time",
        "e",
        "logging",
        "error",
        "time",
        "e",
        "urllib2",
        "HTTPException",
        "e",
        "logging",
        "error",
        "time",
        "logging",
        "error",
        "time",
        "url",
        "response",
        "api_key",
        "contract",
        "station_num",
        "logging",
        "debug",
        "time",
        "station_num",
        "station_num",
        "url",
        "contract",
        "api_key",
        "urllib2",
        "urlopen",
        "url",
        "read",
        "url",
        "response",
        "str_data",
        "args",
        "json",
        "loads",
        "str_data",
        "obj_data",
        "obj_data",
        "obj_data",
        "a",
        "args",
        "obj_data",
        "a",
        "return_data",
        "str_data",
        "args",
        "json",
        "loads",
        "str_data",
        "o",
        "obj_data",
        "return_data",
        "i",
        "o",
        "return_data",
        "i",
        "o",
        "return_data",
        "i",
        "o",
        "a",
        "args",
        "return_data",
        "i",
        "o",
        "a",
        "i",
        "return_data",
        "str_data",
        "args",
        "json",
        "loads",
        "str_data",
        "a",
        "args",
        "a",
        "obj_data",
        "a",
        "return_data",
        "str_data",
        "print_data",
        "json",
        "loads",
        "str_data",
        "print_data",
        "o",
        "obj_data",
        "o",
        "getAllStationsData",
        "key",
        "contract",
        "logging",
        "debug",
        "time",
        "parseAllStationData",
        "get_data",
        "logging",
        "debug",
        "time",
        "d",
        "clean_data",
        "clean_data",
        "d",
        "time",
        "open",
        "outputfile",
        "csvfile",
        "csv",
        "DictWriter",
        "csvfile",
        "fieldnames",
        "fields",
        "writer",
        "writerow",
        "clean_data",
        "d",
        "open",
        "outputfile",
        "f",
        "close",
        "open",
        "outputfile",
        "join",
        "fields",
        "f",
        "write",
        "outputstr",
        "f",
        "close",
        "logging",
        "info",
        "time",
        "attempts",
        "max_attempts",
        "poll_data",
        "sleep",
        "delay",
        "logging",
        "error",
        "time",
        "attempts",
        "sleep",
        "errdelay",
        "errdelay",
        "logging",
        "debug",
        "time",
        "errdelay",
        "attempts",
        "logging",
        "error",
        "time"
    ],
    "literals": [
        "\"api_key\"",
        "'r'",
        "\" API Key \"",
        "\"Dublin\"",
        "\"/home/pi/Python/Bikes/\"",
        "\"data.csv\"",
        "'errors.log'",
        "\"https://developer.jcdecaux.com/rest/vls/stations/\"",
        "\".json\"",
        "\"Error in getSaticData opening \"",
        "\"In getallstationdata\"",
        "\"https://api.jcdecaux.com/vls/v1/stations?contract=\"",
        "\"&apiKey=\"",
        "\" HTTP Error -\"",
        "\"in url error\"",
        "\" URL Error -\"",
        "\" HTTP Exception \"",
        "\" Error in getAllStationsData opening \"",
        "\"In getstationdata\"",
        "\"https://api.jcdecaux.com/vls/v1/stations/\"",
        "\"?contract=\"",
        "\"&apiKey=\"",
        "\"Error in getStationData opening \"",
        "'number'",
        "'number'",
        "'contract_name'",
        "'contract_name'",
        "'last_update'",
        "'last_update'",
        "'number'",
        "'number'",
        "'contract_name'",
        "'contract_name'",
        "'last_update'",
        "'last_update'",
        "\"@POLL_DATA - post getAllStationsData\"",
        "'available_bikes'",
        "'available_bike_stands'",
        "\"@POLL_DATA - after parsing Data\"",
        "'local_timestamp'",
        "'a'",
        "\"Running \"",
        "'number'",
        "'contract_name'",
        "'last_update'",
        "'available_bikes'",
        "'available_bike_stands'",
        "'local_timestamp'",
        "'r'",
        "\"Creating CSV file\"",
        "'w'",
        "','",
        "\"Starting \"",
        "\"Error in poll_data - error count \"",
        "\"Delay is \"",
        "\"Quitting \""
    ],
    "variables": [
        "f",
        "api_key",
        "key",
        "contract",
        "outputfolder",
        "outputdoc",
        "outputfile",
        "delay",
        "errdelay",
        "max_attempts",
        "url",
        "response",
        "url",
        "url",
        "response",
        "station_num",
        "url",
        "url",
        "response",
        "obj_data",
        "return_data",
        "return_data",
        "return_data",
        "return_data",
        "return_data",
        "a",
        "obj_data",
        "return_data",
        "i",
        "return_data",
        "i",
        "a",
        "i",
        "obj_data",
        "return_data",
        "return_data",
        "a",
        "obj_data",
        "get_data",
        "clean_data",
        "writer",
        "fields",
        "f",
        "f",
        "outputstr",
        "attempts",
        "attempts",
        "errdelay",
        "attempts"
    ],
    "comments": [
        "",
        "import libraries",
        "",
        "webservices and apis",
        "generic libs",
        "",
        "now setup config options",
        "",
        "how many seconds do you want to wait before polling again",
        "how many seconds to wait to repoll after error",
        "max consecutive attempts before quit",
        "https://docs.python.org/2/howto/logging.html",
        "WARNING",
        "",
        "define functions",
        "",
        "get static data - may want to use this for iterating or as a reference table",
        "test is input an int - to dev - if not int then lookup the station number by name",
        "convert to string. should also check this and trim it?",
        "print url",
        "function to create the result object",
        "by default this will just get station number, contract and timestamp",
        "additional arguments are passed by args",
        "get optional arguments",
        "print a",
        "add a test here",
        "not working... need to fix the iteration***",
        "more efficient to work with this than iterating over list of stations",
        "function to create the result object",
        "by default this will just get station number, contract and timestamp",
        "additional arguments are passed by args",
        "get optional arguments",
        "print a",
        "add a test here",
        "add a test here",
        "function to list all available parameters, optionally printing these to screen",
        "need some way of handling recursion if this is to be really useable",
        "main function to poll data for contract and write to file",
        "now write data - could separate this out. Write to SQL, AWS etc..",
        "print d",
        "",
        "Check output file",
        "",
        "does the output file exists. If not then create csv",
        "try to open the file",
        "if it will not open then create it using template list above",
        "if it doesnt open then create it",
        "",
        "Run data through",
        "",
        "TO DO",
        "Make file handling a little bit less hard coded. eg  list of fields in config separated into all bonus",
        "Pass arguments from cmd",
        "Make it object oriented",
        "Write out to multiple file formats SQL,AWS etc..",
        "Some sort of status check - maybe an ec2 instance?",
        "Assocaite city and api file with input params",
        "DONE",
        "Setup error logging",
        "Setup timer to query at intervals ; query error intervals as well",
        "Bring main running into a function",
        "Import API so it is not on GIT",
        "CANCEL",
        "Maybe join the parse and query functions? No, worth distinguishing these"
    ],
    "docstrings": [],
    "functions": [
        "getAPIKey",
        "getStaticData",
        "getAllStationsData",
        "getStationData",
        "parseStationData",
        "parseAllStationData",
        "parseStaticData",
        "listAllParams",
        "poll_data"
    ],
    "classes": []
}