{
    "identifiers": [
        "Diagnostics",
        "Globalization",
        "IO",
        "Text",
        "Encodings",
        "Web",
        "Microsoft",
        "AspNetCore",
        "Html",
        "DebuggerDisplay",
        "IHtmlContent",
        "format",
        "args",
        "formatProvider",
        "format",
        "format",
        "args",
        "args",
        "IFormatProvider",
        "formatProvider",
        "format",
        "args",
        "format",
        "ArgumentNullException",
        "nameof",
        "format",
        "args",
        "ArgumentNullException",
        "nameof",
        "args",
        "_formatProvider",
        "formatProvider",
        "CultureInfo",
        "CurrentCulture",
        "_format",
        "format",
        "_args",
        "args",
        "TextWriter",
        "writer",
        "HtmlEncoder",
        "encoder",
        "writer",
        "ArgumentNullException",
        "nameof",
        "writer",
        "encoder",
        "ArgumentNullException",
        "nameof",
        "encoder",
        "EncodingFormatProvider",
        "_formatProvider",
        "encoder",
        "writer",
        "Write",
        "Format",
        "formatProvider",
        "_format",
        "_args",
        "StringWriter",
        "WriteTo",
        "writer",
        "HtmlEncoder",
        "Default",
        "writer",
        "ToString",
        "IFormatProvider",
        "ICustomFormatter",
        "IFormatProvider",
        "formatProvider",
        "HtmlEncoder",
        "encoder",
        "Debug",
        "Assert",
        "formatProvider",
        "Debug",
        "Assert",
        "encoder",
        "_formatProvider",
        "formatProvider",
        "_encoder",
        "encoder",
        "format",
        "arg",
        "IFormatProvider",
        "formatProvider",
        "arg",
        "HtmlEncodedString",
        "htmlString",
        "htmlString",
        "ToString",
        "arg",
        "IHtmlContent",
        "htmlContent",
        "_writer",
        "_writer",
        "StringWriter",
        "htmlContent",
        "WriteTo",
        "_writer",
        "_encoder",
        "_writer",
        "ToString",
        "_writer",
        "GetStringBuilder",
        "Clear",
        "result",
        "ICustomFormatter",
        "_formatProvider",
        "GetFormat",
        "ICustomFormatter",
        "customFormatter",
        "customFormatter",
        "Format",
        "format",
        "arg",
        "_formatProvider",
        "result",
        "_encoder",
        "Encode",
        "result",
        "arg",
        "IFormattable",
        "formattable",
        "formattable",
        "ToString",
        "format",
        "_formatProvider",
        "result",
        "_encoder",
        "Encode",
        "result",
        "arg",
        "arg",
        "ToString",
        "result",
        "_encoder",
        "Encode",
        "result",
        "Empty",
        "Type",
        "formatType",
        "formatType",
        "ICustomFormatter"
    ],
    "literals": [
        "\"{DebuggerToString()}\""
    ],
    "variables": [
        "IFormatProvider",
        "_formatProvider",
        "_format",
        "_args",
        "formatProvider",
        "writer",
        "HtmlEncoder",
        "_encoder",
        "IFormatProvider",
        "_formatProvider",
        "StringWriter",
        "_writer",
        "htmlString",
        "htmlContent",
        "result",
        "customFormatter",
        "result",
        "formattable",
        "result",
        "result"
    ],
    "comments": [
        "Copyright (c) .NET Foundation. All rights reserved.",
        "Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.",
        "An <see cref=\"IHtmlContent\"/> implementation of composite string formatting",
        "(see https://msdn.microsoft.com/en-us/library/txafckwd(v=vs.110).aspx) which HTML encodes",
        "formatted arguments.",
        "</summary>",
        "Creates a new <see cref=\"HtmlFormattableString\"/> with the given <paramref name=\"format\"/> and",
        "<paramref name=\"args\"/>.",
        "</summary>",
        "<param name=\"format\">A composite format string.</param>",
        "<param name=\"args\">An array that contains objects to format.</param>",
        "Creates a new <see cref=\"HtmlFormattableString\"/> with the given <paramref name=\"formatProvider\"/>,",
        "<paramref name=\"format\"/> and <paramref name=\"args\"/>.",
        "</summary>",
        "<param name=\"formatProvider\">An object that provides culture-specific formatting information.</param>",
        "<param name=\"format\">A composite format string.</param>",
        "<param name=\"args\">An array that contains objects to format.</param>",
        "<inheritdoc />",
        "This class implements Html encoding via an ICustomFormatter. Passing an instance of this",
        "class into a string.Format method or anything similar will evaluate arguments implementing",
        "IHtmlContent without HTML encoding them, and will give other arguments the standard",
        "composite format string treatment, and then HTML encode the result.",
        "",
        "Plenty of examples of ICustomFormatter and the interactions with string.Format here:",
        "https://msdn.microsoft.com/en-us/library/system.string.format(v=vs.110).aspx#Format6_Example",
        "These are the cases we need to special case. We trust the HtmlEncodedString or IHtmlContent instance",
        "to do the right thing with encoding.",
        "If we get here then 'arg' is not an IHtmlContent, and we want to handle it the way a normal",
        "string.Format would work, but then HTML encode the result.",
        "",
        "First check for an ICustomFormatter - if the IFormatProvider is a CultureInfo, then it's likely",
        "that ICustomFormatter will be null.",
        "Next check if 'arg' is an IFormattable (DateTime is an example).",
        "",
        "An IFormattable will likely call back into the IFormatterProvider and ask for more information",
        "about how to format itself. This is the typical case when IFormatterProvider is a CultureInfo.",
        "If we get here then there's nothing really smart left to try."
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "HtmlFormattableString",
        "HtmlFormattableString",
        "WriteTo",
        "DebuggerToString",
        "EncodingFormatProvider",
        "Format",
        "GetFormat"
    ],
    "classes": [
        "HtmlFormattableString",
        "EncodingFormatProvider"
    ]
}