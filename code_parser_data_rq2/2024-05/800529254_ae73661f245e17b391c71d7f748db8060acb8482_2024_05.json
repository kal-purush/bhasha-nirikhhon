{
    "identifiers": [
        "connectApi",
        "fetch",
        "response",
        "pintarCocktail",
        "data",
        "error",
        "error",
        "pintarCocktail",
        "data",
        "data",
        "imageRandom",
        "princ",
        "imageRandom",
        "princ",
        "nameRandom",
        "princ",
        "instRandom",
        "princ",
        "glassRandom",
        "princ",
        "catRandom",
        "princ",
        "i",
        "i",
        "princ",
        "i",
        "princ",
        "i",
        "measure",
        "ingredient",
        "ingrRandom",
        "measure",
        "ingredient",
        "connectApi",
        "btnRandom",
        "connectApi",
        "btnPrep",
        "modal",
        "closeModal",
        "modal"
    ],
    "literals": [
        "\"#btnRandom\"",
        "\".btnPrep\"",
        "\".modal\"",
        "\".closeModal\"",
        "\".imageRandom\"",
        "\".nameRandom\"",
        "\".ingrRandom\"",
        "\".instRandom\"",
        "\".glassRandom\"",
        "\".catRandom\"",
        "\"https://www.thecocktaildb.com/api/json/v1/1/random.php\"",
        "\"Error ====> \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"strMeasure\"",
        "\"strIngredient\"",
        "${measure || \"\"} ${ingredient || \"\"} -",
        "\"\"",
        "\"\"",
        "\"DOMContentLoaded\"",
        "\"click\"",
        "\"click\"",
        "\"openModal\"",
        "\"click\"",
        "\"openModal\""
    ],
    "variables": [
        "btnRandom",
        "btnPrep",
        "modal",
        "closeModal",
        "imageRandom",
        "nameRandom",
        "ingrRandom",
        "instRandom",
        "glassRandom",
        "catRandom",
        "connectApi",
        "response",
        "data",
        "pintarCocktail",
        "princ",
        "i",
        "measure",
        "ingredient"
    ],
    "comments": [
        "const tailRandom = document.querySelector(\"#tailRandom\");",
        "const template = document.querySelector(\"#template\").content;",
        "const fragment = document.createDocumentFragment();",
        "check(data);",
        "const check = (data) => {",
        "const princ = data.drinks[0];",
        "Object.values(princ).forEach((item) => console.log(item));",
        "};",
        "const pintarCocktail = (data) => {",
        "console.log(data.drinks[0]);",
        "const clone = template.cloneNode(true);",
        "clone.querySelector(\".imageRandom\").src = data.drinks[0].strDrinkThumb;",
        "clone.querySelector(\".imageRandom\").alt = data.drinks[0].strDrink;",
        "clone.querySelector(\".nameRandom\").textContent = data.drinks[0].strDrink;",
        "clone.querySelector(\".instRandom\").textContent = data.drinks[0].strInstructions;",
        "clone.querySelector(",
        "\".ingrRandom\"",
        ").textContent = `${data.drinks[0].strMeasure1} ${data.drinks[0].strIngredient1} - ${data.drinks[0].strMeasure2} ${data.drinks[0].strIngredient2} - ${data.drinks[0].strMeasure3} ${data.drinks[0].strIngredient3} - ${data.drinks[0].strMeasure4} ${data.drinks[0].strIngredient4} - ${data.drinks[0].strMeasure5} ${data.drinks[0].strIngredient5} - ${data.drinks[0].strIngredient6}`;",
        "clone.querySelector(\".glassRandom\").textContent = data.drinks[0].strGlass;",
        "clone.querySelector(\".catRandom\").textContent = data.drinks[0].strCategory;",
        "fragment.appendChild(clone);",
        "tailRandom.appendChild(fragment);",
        "};"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}