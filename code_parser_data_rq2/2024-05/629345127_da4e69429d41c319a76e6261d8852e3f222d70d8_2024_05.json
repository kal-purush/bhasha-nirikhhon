{
    "identifiers": [
        "AElf",
        "Contracts",
        "MultiToken",
        "AElfIndexer",
        "Client",
        "AElfIndexer",
        "Client",
        "Handlers",
        "AElfIndexer",
        "Grains",
        "State",
        "Client",
        "Microsoft",
        "Extensions",
        "Logging",
        "Microsoft",
        "Extensions",
        "Options",
        "Portkey",
        "Indexer",
        "CA",
        "Entities",
        "Volo",
        "Abp",
        "ObjectMapping",
        "Portkey",
        "Indexer",
        "CA",
        "Processors",
        "CAHolderTransactionProcessorBase",
        "UnApproved",
        "IAElfIndexerClientEntityRepository",
        "CAHolderTokenApprovedIndex",
        "TransactionInfo",
        "ILogger",
        "TokenUnApprovedProcessor",
        "logger",
        "IAElfIndexerClientEntityRepository",
        "CAHolderIndex",
        "TransactionInfo",
        "caHolderIndexRepository",
        "IAElfIndexerClientEntityRepository",
        "CAHolderManagerIndex",
        "TransactionInfo",
        "caHolderManagerIndexRepository",
        "IAElfIndexerClientEntityRepository",
        "CAHolderTransactionIndex",
        "TransactionInfo",
        "caHolderTransactionIndexRepository",
        "IAElfIndexerClientEntityRepository",
        "TokenInfoIndex",
        "TransactionInfo",
        "tokenInfoIndexRepository",
        "IAElfIndexerClientEntityRepository",
        "NFTInfoIndex",
        "TransactionInfo",
        "nftInfoIndexRepository",
        "IAElfIndexerClientEntityRepository",
        "CAHolderTransactionAddressIndex",
        "TransactionInfo",
        "caHolderTransactionAddressIndexRepository",
        "IOptionsSnapshot",
        "ContractInfoOptions",
        "contractInfoOptions",
        "IOptionsSnapshot",
        "CAHolderTransactionInfoOptions",
        "caHolderTransactionInfoOptions",
        "IAElfIndexerClientEntityRepository",
        "CAHolderTokenApprovedIndex",
        "TransactionInfo",
        "batchApprovedIndexRepository",
        "IObjectMapper",
        "objectMapper",
        "logger",
        "caHolderIndexRepository",
        "caHolderManagerIndexRepository",
        "caHolderTransactionIndexRepository",
        "tokenInfoIndexRepository",
        "nftInfoIndexRepository",
        "caHolderTransactionAddressIndexRepository",
        "contractInfoOptions",
        "caHolderTransactionInfoOptions",
        "objectMapper",
        "_batchApprovedIndexRepository",
        "batchApprovedIndexRepository",
        "chainId",
        "ContractInfoOptions",
        "ContractInfos",
        "First",
        "c",
        "ChainId",
        "chainId",
        "TokenContractAddress",
        "UnApproved",
        "eventValue",
        "LogEventContext",
        "context",
        "eventValue",
        "Equals",
        "CommonConstant",
        "BatchApprovedSymbol",
        "CAHolderIndexRepository",
        "GetFromBlockStateSetAsync",
        "IdGenerateHelper",
        "GetId",
        "context",
        "ChainId",
        "eventValue",
        "Owner",
        "ToBase58",
        "context",
        "ChainId",
        "holder",
        "IdGenerateHelper",
        "GetId",
        "context",
        "ChainId",
        "eventValue",
        "Owner",
        "ToBase58",
        "_batchApprovedIndexRepository",
        "GetFromBlockStateSetAsync",
        "batchApprovedIndexId",
        "context",
        "ChainId",
        "batchApprovedIndex",
        "batchApprovedIndex",
        "BatchApprovedAmount",
        "ObjectMapper",
        "context",
        "batchApprovedIndex",
        "_batchApprovedIndexRepository",
        "AddOrUpdateAsync",
        "batchApprovedIndex"
    ],
    "literals": [],
    "variables": [
        "_batchApprovedIndexRepository",
        "holder",
        "batchApprovedIndexId",
        "batchApprovedIndex"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "TokenUnApprovedProcessor",
        "GetContractAddress",
        "HandleEventAsync"
    ],
    "classes": [
        "TokenUnApprovedProcessor"
    ]
}