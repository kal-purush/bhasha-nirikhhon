{
    "identifiers": [
        "fetch",
        "RequestInit",
        "COPILOT_UNAVAILABLE",
        "ITelemetry",
        "sendTelemetryEvent",
        "CopilotArtemisFailureEvent",
        "CopilotArtemisSuccessEvent",
        "BAPServiceStamp",
        "BAPAPIEndpointStamp",
        "IArtemisAPIOrgResponse",
        "IArtemisServiceEndpointInformation",
        "IIntelligenceAPIEndpointInformation",
        "isCopilotDisabledInGeo",
        "isCopilotSupportedInGeo",
        "BAPService",
        "orgId",
        "telemetry",
        "sessionID",
        "environmentId",
        "ArtemisService",
        "orgId",
        "telemetry",
        "sessionID",
        "artemisResponses",
        "artemisResponses",
        "artemisResponses",
        "artemisResponse",
        "artemisResponse",
        "sendTelemetryEvent",
        "telemetry",
        "CopilotArtemisSuccessEvent",
        "sessionID",
        "geoName",
        "orgId",
        "BAPService",
        "artemisResponse",
        "telemetry",
        "environmentId",
        "isCopilotDisabledInGeo",
        "geoName",
        "COPILOT_UNAVAILABLE",
        "geoName",
        "crossGeoDataMovementEnabledPPACFlag",
        "crossGeoDataMovementEnabledPPACFlag",
        "isCopilotSupportedInGeo",
        "geoName",
        "COPILOT_UNAVAILABLE",
        "geoName",
        "crossGeoDataMovementEnabledPPACFlag",
        "geoName",
        "clusterNumber",
        "environment",
        "orgId",
        "intelligenceEndpoint",
        "geoName",
        "orgId",
        "telemetry",
        "sessionID",
        "ArtemisService",
        "orgId",
        "ArtemisService",
        "endpointDetails",
        "telemetry",
        "sessionID",
        "artemisResponse",
        "endpointDetails",
        "telemetry",
        "sessionID",
        "endpointDetails",
        "endpointDetail",
        "fetch",
        "endpointDetail",
        "requestInit",
        "response",
        "endpointDetail",
        "response",
        "error",
        "promises",
        "results",
        "result",
        "result",
        "result",
        "successfulResponses",
        "error",
        "sendTelemetryEvent",
        "telemetry",
        "CopilotArtemisFailureEvent",
        "sessionID",
        "error",
        "orgId",
        "orgId",
        "updatedOrgId",
        "updatedOrgId",
        "updatedOrgId",
        "updatedOrgId",
        "domain",
        "nonProdSegment",
        "domain",
        "nonProdSegment",
        "domainProd",
        "prodSegment",
        "domain",
        "nonProdSegment",
        "domain",
        "nonProdSegment",
        "domain",
        "nonProdSegment",
        "domain",
        "nonProdSegment",
        "BAPAPIEndpointStamp",
        "tstUrl",
        "BAPAPIEndpointStamp",
        "preprodUrl",
        "BAPAPIEndpointStamp",
        "prodUrl",
        "BAPAPIEndpointStamp",
        "gccUrl",
        "BAPAPIEndpointStamp",
        "highUrl",
        "BAPAPIEndpointStamp",
        "mooncakeUrl",
        "BAPAPIEndpointStamp",
        "dodUrl"
    ],
    "literals": [
        "\"node-fetch\"",
        "\"../copilot/constants\"",
        "\"../../client/telemetry/ITelemetry\"",
        "\"../copilot/telemetry/copilotTelemetry\"",
        "\"../copilot/telemetry/telemetryConstants\"",
        "\"./Constants\"",
        "\"./Interfaces\"",
        "\"../copilot/utils/copilotUtil\"",
        "\"./BAPService\"",
        "string",
        "string",
        "string",
        "https://aibuildertextapiservice.${geoName}-${'il' + clusterNumber}.gateway.${environment}.island.powerapps.com/v1.0/${orgId}/appintelligence/chat",
        "'il'",
        "string",
        "''",
        "string",
        "'GET'",
        "'follow'",
        "'Request failed'",
        "string",
        "\"\"",
        "https://${domain}.${nonProdSegment}.organization.api.test.powerplatform.com/gateway/cluster?api-version=1",
        "https://${domain}.${nonProdSegment}.organization.api.preprod.powerplatform.com/gateway/cluster?api-version=1",
        "https://${domainProd}.${prodSegment}.organization.api.powerplatform.com/gateway/cluster?api-version=1",
        "https://${domain}.${nonProdSegment}.organization.api.gov.powerplatform.microsoft.us/gateway/cluster?api-version=1",
        "https://${domain}.${nonProdSegment}.organization.api.high.powerplatform.microsoft.us/gateway/cluster?api-version=1",
        "https://${domain}.${nonProdSegment}.organization.api.powerplatform.partner.microsoftonline.cn/gateway/cluster?app-version=1",
        "https://${domain}.${nonProdSegment}.organization.api.appsplatform.us/gateway/cluster?app-version=1"
    ],
    "variables": [
        "artemisResponses",
        "artemisResponse",
        "crossGeoDataMovementEnabledPPACFlag",
        "intelligenceEndpoint",
        "endpointDetails",
        "artemisResponse",
        "requestInit",
        "promises",
        "response",
        "results",
        "successfulResponses",
        "updatedOrgId",
        "domain",
        "domainProd",
        "nonProdSegment",
        "prodSegment",
        "tstUrl",
        "preprodUrl",
        "prodUrl",
        "gccUrl",
        "highUrl",
        "mooncakeUrl",
        "dodUrl"
    ],
    "comments": [
        "Do nothing - we can make this call cross geo",
        "Function to fetch Artemis response"
    ],
    "docstrings": [
        "* Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.",
        "* @param orgId\n     * @returns urls\n     * ex. orgId: c7809087-d9b8-4a00-a78a-a4b901caa23f\n     * TST (note single character zone):  https://c7809087d9b84a00a78aa4b901caa23.f.organization.api.test.powerplatform.com/artemis\n     * PreProd (note single character zone):  https://c7809087d9b84a00a78aa4b901caa23.f.organization.api.preprod.powerplatform.com/artemis\n     * Prod: https:// c7809087d9b84a00a78aa4b901caa2.3f.organization.api.powerplatform.com/artemis"
    ],
    "functions": [
        "getIntelligenceEndpoint",
        "fetchArtemisResponse",
        "fetchIslandInfo",
        "convertGuidToUrls"
    ],
    "classes": [
        "ArtemisService"
    ]
}