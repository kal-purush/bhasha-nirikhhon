{
    "identifiers": [
        "exports",
        "__assign",
        "__assign",
        "t",
        "arguments",
        "i",
        "n",
        "i",
        "s",
        "arguments",
        "i",
        "p",
        "s",
        "s",
        "p",
        "t",
        "p",
        "s",
        "p",
        "t",
        "__assign",
        "arguments",
        "thisArg",
        "_arguments",
        "P",
        "generator",
        "value",
        "value",
        "P",
        "value",
        "P",
        "resolve",
        "resolve",
        "value",
        "P",
        "P",
        "resolve",
        "reject",
        "value",
        "step",
        "generator",
        "value",
        "e",
        "reject",
        "e",
        "value",
        "step",
        "generator",
        "value",
        "e",
        "reject",
        "e",
        "result",
        "result",
        "resolve",
        "result",
        "adopt",
        "result",
        "fulfilled",
        "rejected",
        "step",
        "generator",
        "generator",
        "thisArg",
        "_arguments",
        "thisArg",
        "body",
        "t",
        "t",
        "t",
        "g",
        "verb",
        "verb",
        "verb",
        "g",
        "g",
        "n",
        "v",
        "step",
        "n",
        "v",
        "op",
        "f",
        "g",
        "g",
        "op",
        "_",
        "_",
        "f",
        "y",
        "t",
        "op",
        "y",
        "op",
        "y",
        "t",
        "y",
        "t",
        "y",
        "y",
        "t",
        "t",
        "y",
        "op",
        "t",
        "y",
        "t",
        "op",
        "op",
        "t",
        "op",
        "t",
        "op",
        "_",
        "op",
        "_",
        "y",
        "op",
        "op",
        "op",
        "_",
        "_",
        "t",
        "_",
        "t",
        "t",
        "t",
        "t",
        "op",
        "op",
        "_",
        "op",
        "t",
        "op",
        "t",
        "op",
        "t",
        "_",
        "op",
        "op",
        "_",
        "t",
        "_",
        "t",
        "t",
        "op",
        "t",
        "_",
        "t",
        "_",
        "t",
        "_",
        "op",
        "t",
        "_",
        "_",
        "op",
        "body",
        "thisArg",
        "_",
        "e",
        "op",
        "e",
        "y",
        "f",
        "t",
        "op",
        "op",
        "op",
        "op",
        "to",
        "pack",
        "pack",
        "arguments",
        "i",
        "l",
        "i",
        "ar",
        "i",
        "ar",
        "ar",
        "i",
        "ar",
        "i",
        "i",
        "to",
        "ar",
        "durationMs",
        "resolveWith",
        "resolve",
        "setTimeout",
        "resolve",
        "durationMs",
        "resolveWith",
        "wait",
        "fallbackTimeout",
        "deadlineTimeout",
        "deadlineTimeout",
        "deadlineTimeout",
        "Infinity",
        "requestIdleCallback",
        "resolve",
        "requestIdleCallback",
        "resolve",
        "deadlineTimeout",
        "wait",
        "fallbackTimeout",
        "deadlineTimeout",
        "value",
        "value",
        "value",
        "action",
        "callback",
        "action",
        "isPromise",
        "returnedValue",
        "returnedValue",
        "result",
        "callback",
        "result",
        "error",
        "callback",
        "error",
        "callback",
        "returnedValue",
        "error",
        "callback",
        "error",
        "items",
        "callback",
        "loopReleaseInterval",
        "loopReleaseInterval",
        "loopReleaseInterval",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "results",
        "items",
        "lastLoopReleaseTime",
        "i",
        "_a",
        "i",
        "items",
        "results",
        "i",
        "callback",
        "items",
        "i",
        "i",
        "now",
        "now",
        "lastLoopReleaseTime",
        "loopReleaseInterval",
        "lastLoopReleaseTime",
        "now",
        "wait",
        "_a",
        "_a",
        "i",
        "results",
        "promise",
        "promise",
        "haystack",
        "needle",
        "haystack",
        "i",
        "l",
        "i",
        "haystack",
        "i",
        "needle",
        "haystack",
        "needle",
        "includes",
        "haystack",
        "needle",
        "value",
        "parseInt",
        "value",
        "value",
        "parseFloat",
        "value",
        "value",
        "replacement",
        "value",
        "isNaN",
        "value",
        "replacement",
        "value",
        "values",
        "values",
        "sum",
        "value",
        "sum",
        "value",
        "value",
        "value",
        "value",
        "counterBase",
        "counterBase",
        "selector",
        "selector",
        "selector",
        "tagMatch",
        "name",
        "value",
        "attributes",
        "name",
        "attributes",
        "name",
        "attributes",
        "name",
        "value",
        "partsRegex",
        "tagMatch",
        "match",
        "match",
        "part",
        "addAttribute",
        "part",
        "addAttribute",
        "part",
        "part",
        "attributeMatch",
        "addAttribute",
        "attributeMatch",
        "_b",
        "_a",
        "attributeMatch",
        "_a",
        "_a",
        "attributeMatch",
        "_b",
        "_b",
        "errorMessage",
        "errorMessage",
        "tag",
        "attributes",
        "input",
        "Uint8Array",
        "input",
        "i",
        "input",
        "i",
        "input",
        "i",
        "charCode",
        "TextEncoder",
        "input",
        "result",
        "i",
        "charCode",
        "result",
        "m",
        "n",
        "m",
        "m",
        "m",
        "m",
        "n",
        "n",
        "n",
        "n",
        "o3",
        "m3",
        "n3",
        "o2",
        "o3",
        "o3",
        "o2",
        "m2",
        "n2",
        "o1",
        "o2",
        "o2",
        "o1",
        "m1",
        "n1",
        "o0",
        "o1",
        "o1",
        "o0",
        "m0",
        "n0",
        "o0",
        "m",
        "o0",
        "o1",
        "m",
        "o2",
        "o3",
        "m",
        "n",
        "m",
        "m",
        "m",
        "m",
        "n",
        "n",
        "n",
        "n",
        "o3",
        "m3",
        "n3",
        "o2",
        "o3",
        "o3",
        "o2",
        "m2",
        "n3",
        "o1",
        "o2",
        "o2",
        "o2",
        "m3",
        "n2",
        "o1",
        "o2",
        "o2",
        "o1",
        "m1",
        "n3",
        "o0",
        "o1",
        "o1",
        "o1",
        "m2",
        "n2",
        "o0",
        "o1",
        "o1",
        "o1",
        "m3",
        "n1",
        "o0",
        "o1",
        "o1",
        "o0",
        "m0",
        "n3",
        "m1",
        "n2",
        "m2",
        "n1",
        "m3",
        "n0",
        "o0",
        "m",
        "o0",
        "o1",
        "m",
        "o2",
        "o3",
        "m",
        "bits",
        "m",
        "bits",
        "bits",
        "m",
        "m",
        "m",
        "m0",
        "bits",
        "m",
        "m0",
        "bits",
        "m",
        "bits",
        "m",
        "m",
        "bits",
        "m0",
        "bits",
        "bits",
        "m",
        "m",
        "bits",
        "m0",
        "bits",
        "m",
        "m0",
        "bits",
        "m",
        "bits",
        "m",
        "bits",
        "bits",
        "bits",
        "bits",
        "m",
        "m",
        "bits",
        "m",
        "m",
        "bits",
        "m",
        "m",
        "bits",
        "m",
        "m",
        "n",
        "m",
        "n",
        "m",
        "n",
        "h",
        "h",
        "x64Xor",
        "h",
        "shifted",
        "x64Multiply",
        "h",
        "F1",
        "shifted",
        "h",
        "x64Xor",
        "h",
        "shifted",
        "x64Multiply",
        "h",
        "F2",
        "shifted",
        "h",
        "x64Xor",
        "h",
        "shifted",
        "input",
        "seed",
        "getUTF8Bytes",
        "input",
        "seed",
        "seed",
        "key",
        "length",
        "length",
        "remainder",
        "seed",
        "seed",
        "i",
        "i",
        "i",
        "i",
        "k1",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "k1",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "k2",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "k2",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "key",
        "i",
        "x64Multiply",
        "k1",
        "C1",
        "x64Rotl",
        "k1",
        "x64Multiply",
        "k1",
        "C2",
        "x64Xor",
        "h1",
        "k1",
        "x64Rotl",
        "h1",
        "x64Add",
        "h1",
        "h2",
        "x64Multiply",
        "h1",
        "M$1",
        "x64Add",
        "h1",
        "N1",
        "x64Multiply",
        "k2",
        "C2",
        "x64Rotl",
        "k2",
        "x64Multiply",
        "k2",
        "C1",
        "x64Xor",
        "h2",
        "k2",
        "x64Rotl",
        "h2",
        "x64Add",
        "h2",
        "h1",
        "x64Multiply",
        "h2",
        "M$1",
        "x64Add",
        "h2",
        "N2",
        "k1",
        "k1",
        "k2",
        "k2",
        "remainder",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k2",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k2",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k2",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k2",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k2",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k2",
        "val",
        "val",
        "key",
        "i",
        "x64Xor",
        "k2",
        "val",
        "x64Multiply",
        "k2",
        "C2",
        "x64Rotl",
        "k2",
        "x64Multiply",
        "k2",
        "C1",
        "x64Xor",
        "h2",
        "k2",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k1",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k1",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k1",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k1",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k1",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k1",
        "val",
        "val",
        "key",
        "i",
        "x64LeftShift",
        "val",
        "x64Xor",
        "k1",
        "val",
        "val",
        "key",
        "i",
        "x64Xor",
        "k1",
        "val",
        "x64Multiply",
        "k1",
        "C1",
        "x64Rotl",
        "k1",
        "x64Multiply",
        "k1",
        "C2",
        "x64Xor",
        "h1",
        "k1",
        "x64Xor",
        "h1",
        "length",
        "x64Xor",
        "h2",
        "length",
        "x64Add",
        "h1",
        "h2",
        "x64Add",
        "h2",
        "h1",
        "x64Fmix",
        "h1",
        "x64Fmix",
        "h2",
        "x64Add",
        "h1",
        "h2",
        "x64Add",
        "h2",
        "h1",
        "h1",
        "h1",
        "h2",
        "h2",
        "error",
        "__assign",
        "error",
        "error",
        "_a",
        "error",
        "_a",
        "_a",
        "error",
        "func",
        "func",
        "loadResult",
        "loadResult",
        "_sourceKey",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "sourceKey",
        "source",
        "sourceOptions",
        "resolveLoad",
        "awaitIfAsync",
        "source",
        "sourceOptions",
        "_i",
        "arguments",
        "_i",
        "loadArgs",
        "_i",
        "arguments",
        "_i",
        "loadStartTime",
        "loadArgs",
        "resolveLoad",
        "loadArgs",
        "loadDuration",
        "loadArgs",
        "isFinalResultLoaded",
        "loadResult",
        "resolveLoad",
        "loadResult",
        "loadDuration",
        "valueToResult",
        "sourceKey",
        "loadResult",
        "resolveLoad",
        "resolveGet",
        "awaitIfAsync",
        "loadResult",
        "_i",
        "arguments",
        "_i",
        "getArgs",
        "_i",
        "arguments",
        "_i",
        "loadDuration",
        "getStartTime",
        "getArgs",
        "resolveGet",
        "getArgs",
        "duration",
        "resolveGet",
        "getArgs",
        "duration",
        "valueToResult",
        "sourceKey",
        "getArgs",
        "suppressUnhandledRejectionWarning",
        "sourceLoadPromise",
        "getComponent",
        "sourceLoadPromise",
        "finalizeSource",
        "finalizeSource",
        "sources",
        "sourceOptions",
        "excludeSources",
        "sources",
        "sourceKey",
        "excludes",
        "excludeSources",
        "sourceKey",
        "mapWithBreaks",
        "includedSources",
        "sourceKey",
        "loadSource",
        "sourceKey",
        "sources",
        "sourceKey",
        "sourceOptions",
        "suppressUnhandledRejectionWarning",
        "sourceGettersPromise",
        "getComponents",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "sourceGettersPromise",
        "sourceGetters",
        "_a",
        "mapWithBreaks",
        "sourceGetters",
        "sourceGetter",
        "sourceGetter",
        "suppressUnhandledRejectionWarning",
        "componentPromise",
        "componentPromise",
        "componentPromises",
        "_a",
        "componentPromises",
        "componentArray",
        "_a",
        "components",
        "index",
        "index",
        "includedSources",
        "index",
        "components",
        "includedSources",
        "index",
        "componentArray",
        "index",
        "components",
        "source",
        "transformValue",
        "loadResult",
        "isFinalResultLoaded",
        "loadResult",
        "transformValue",
        "loadResult",
        "loadResult",
        "isPromise",
        "getResult",
        "getResult",
        "transformValue",
        "transformValue",
        "getResult",
        "options",
        "source",
        "options",
        "isPromise",
        "loadResult",
        "loadResult",
        "transformLoadResult",
        "transformLoadResult",
        "loadResult",
        "countTruthy",
        "w",
        "w",
        "w",
        "n",
        "n",
        "countTruthy",
        "w",
        "w",
        "n",
        "n",
        "isTrident",
        "countTruthy",
        "n",
        "n",
        "n",
        "w",
        "w",
        "w",
        "w",
        "countTruthy",
        "w",
        "w",
        "w",
        "n",
        "n",
        "w",
        "w",
        "w",
        "countTruthy",
        "w",
        "w",
        "w",
        "w",
        "HTMLElement",
        "HTMLElement",
        "Document",
        "Document",
        "isFunctionNative",
        "w",
        "countTruthy",
        "w",
        "w",
        "countTruthy",
        "navigator",
        "_b",
        "_a",
        "_a",
        "_a",
        "_b",
        "_b",
        "w",
        "w",
        "w",
        "w",
        "countTruthy",
        "w",
        "w",
        "w",
        "w",
        "countTruthy",
        "w",
        "w",
        "w",
        "w",
        "w",
        "w",
        "countTruthy",
        "n",
        "HTMLButtonElement",
        "HTMLButtonElement",
        "w",
        "CSS",
        "CSS",
        "navigator",
        "s",
        "s",
        "countTruthy",
        "Element",
        "screenRatio",
        "screenRatio",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "isChromium",
        "isGecko",
        "isItChromium",
        "countTruthy",
        "w",
        "n",
        "c",
        "n",
        "c",
        "isItGecko",
        "countTruthy",
        "w",
        "w",
        "navigator",
        "action",
        "initialHtml",
        "domPollInterval",
        "domPollInterval",
        "domPollInterval",
        "__awaiter",
        "__generator",
        "_d",
        "_d",
        "d",
        "_d",
        "d",
        "wait",
        "domPollInterval",
        "_d",
        "iframe",
        "d",
        "_d",
        "_d",
        "_resolve",
        "_reject",
        "isComplete",
        "_resolve",
        "error",
        "isComplete",
        "_reject",
        "error",
        "iframe",
        "resolve",
        "iframe",
        "reject",
        "iframe",
        "style",
        "style",
        "style",
        "style",
        "style",
        "initialHtml",
        "iframe",
        "iframe",
        "initialHtml",
        "iframe",
        "d",
        "iframe",
        "isComplete",
        "_b",
        "_a",
        "iframe",
        "_a",
        "_a",
        "_b",
        "_b",
        "resolve",
        "setTimeout",
        "checkReadyState",
        "checkReadyState",
        "_d",
        "_d",
        "_b",
        "_a",
        "iframe",
        "_a",
        "_a",
        "_b",
        "_b",
        "wait",
        "domPollInterval",
        "_d",
        "action",
        "iframe",
        "iframe",
        "_d",
        "_c",
        "iframe",
        "_c",
        "_c",
        "iframe",
        "selector",
        "parseSimpleCssSelector",
        "selector",
        "_a",
        "_a",
        "tag",
        "tag",
        "tag",
        "attributes",
        "_i",
        "_b",
        "_i",
        "_b",
        "_i",
        "attributes",
        "name_1",
        "name_1",
        "addStyleString",
        "element",
        "value",
        "element",
        "name_1",
        "value",
        "element",
        "style",
        "source",
        "source",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "property",
        "match",
        "match",
        "match",
        "match",
        "style",
        "name_2",
        "value",
        "priority",
        "resolve",
        "d",
        "d",
        "eventName",
        "handleVisibilityChange",
        "resolve",
        "d",
        "eventName",
        "handleVisibilityChange",
        "handleVisibilityChange",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "getUnstableAudioFingerprint",
        "finish",
        "_a",
        "finish",
        "stabilize",
        "rawFingerprint",
        "stabilizationPrecision",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "timeoutPromise",
        "whenDocumentVisible",
        "wait",
        "fingerprintPromise",
        "getBaseAudioFingerprint",
        "result",
        "fingerprintResult",
        "result",
        "error",
        "fingerprintResult",
        "error",
        "timeoutPromise",
        "fingerprintPromise",
        "_a",
        "fingerprintResult",
        "fingerprintResult",
        "fingerprintResult",
        "fingerprintResult",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "w",
        "AudioContext",
        "w",
        "w",
        "AudioContext",
        "doesBrowserSuspendAudioContext",
        "getBaseSignal",
        "AudioContext",
        "baseSignal",
        "_a",
        "baseSignal",
        "context",
        "AudioContext",
        "baseSignal",
        "cloneCount",
        "sampleRate",
        "sourceNode",
        "context",
        "sourceNode",
        "baseSignal",
        "sourceNode",
        "sourceNode",
        "baseSignal",
        "sampleRate",
        "sourceNode",
        "baseSignal",
        "sampleRate",
        "sourceNode",
        "context",
        "sourceNode",
        "renderAudio",
        "context",
        "clonedSignal",
        "_a",
        "clonedSignal",
        "fingerprint",
        "extractFingerprint",
        "baseSignal",
        "clonedSignal",
        "baseSignal",
        "fingerprint",
        "isWebKit",
        "isDesktopWebKit",
        "isWebKit606OrNewer",
        "AudioContext",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "targetSampleIndex",
        "context",
        "AudioContext",
        "targetSampleIndex",
        "sampleRate",
        "oscillator",
        "context",
        "oscillator",
        "oscillator",
        "compressor",
        "context",
        "compressor",
        "compressor",
        "compressor",
        "compressor",
        "compressor",
        "context",
        "oscillator",
        "compressor",
        "compressor",
        "context",
        "oscillator",
        "renderAudio",
        "context",
        "_a",
        "context",
        "resolve",
        "reject",
        "context",
        "resolve",
        "context",
        "isPromise",
        "renderingPromise",
        "suppressUnhandledRejectionWarning",
        "renderingPromise",
        "context",
        "attemptsLeft",
        "attemptsLeft",
        "setTimeout",
        "tryRender",
        "retryDelay",
        "resolve",
        "error",
        "reject",
        "error",
        "tryRender",
        "baseSignal",
        "clonedSample",
        "i",
        "clonedSample",
        "i",
        "clonedSample",
        "clonedSample",
        "i",
        "fingerprint",
        "fingerprint",
        "clonedSample",
        "i",
        "fingerprint",
        "clonedSample",
        "i",
        "needsDenoising",
        "fingerprint",
        "fingerprint",
        "baseSignal",
        "baseSignal",
        "needsDenoising",
        "fingerprint",
        "getMiddle",
        "clonedSample",
        "fingerprint",
        "signal",
        "Infinity",
        "i",
        "signal",
        "i",
        "signal",
        "i",
        "value",
        "value",
        "min",
        "min",
        "value",
        "value",
        "max",
        "max",
        "value",
        "min",
        "max",
        "value",
        "precision",
        "value",
        "value",
        "value",
        "power",
        "precision",
        "precisionPower",
        "precision",
        "value",
        "precisionBase",
        "precisionBase",
        "withIframe",
        "_",
        "_a",
        "_a",
        "__awaiter",
        "_this",
        "__generator",
        "_b",
        "_b",
        "holder",
        "holder",
        "textSize",
        "spansContainer",
        "spansContainer",
        "defaultWidth",
        "defaultHeight",
        "createSpan",
        "fontFamily",
        "span",
        "style",
        "style",
        "style",
        "style",
        "fontFamily",
        "span",
        "testString",
        "spansContainer",
        "span",
        "span",
        "createSpanWithFonts",
        "fontToDetect",
        "baseFont",
        "createSpan",
        "fontToDetect",
        "baseFont",
        "initializeBaseFontsSpans",
        "baseFonts",
        "createSpan",
        "initializeFontsSpans",
        "font",
        "spans",
        "font",
        "baseFonts",
        "baseFont",
        "createSpanWithFonts",
        "font",
        "baseFont",
        "_i",
        "fontList_1",
        "_i",
        "fontList_1",
        "_i",
        "_loop_1",
        "font",
        "spans",
        "isFontAvailable",
        "fontSpans",
        "baseFonts",
        "baseFont",
        "baseFontIndex",
        "fontSpans",
        "baseFontIndex",
        "defaultWidth",
        "baseFont",
        "fontSpans",
        "baseFontIndex",
        "defaultHeight",
        "baseFont",
        "baseFontsSpans",
        "initializeBaseFontsSpans",
        "fontsSpans",
        "initializeFontsSpans",
        "holder",
        "spansContainer",
        "releaseEventLoop",
        "_b",
        "index",
        "index",
        "baseFonts",
        "index",
        "defaultWidth",
        "baseFonts",
        "index",
        "baseFontsSpans",
        "index",
        "defaultHeight",
        "baseFonts",
        "index",
        "baseFontsSpans",
        "index",
        "fontList",
        "font",
        "isFontAvailable",
        "fontsSpans",
        "font",
        "navigator",
        "rawPlugins",
        "i",
        "rawPlugins",
        "i",
        "rawPlugins",
        "i",
        "plugin",
        "j",
        "plugin",
        "j",
        "plugin",
        "j",
        "mimeTypes",
        "mimeType",
        "mimeType",
        "plugins",
        "plugin",
        "plugin",
        "mimeTypes",
        "plugins",
        "getUnstableCanvasFingerprint",
        "doesBrowserPerformAntifingerprinting",
        "skipImages",
        "__awaiter",
        "__generator",
        "_c",
        "_c",
        "winding",
        "_a",
        "makeCanvasContext",
        "canvas",
        "_a",
        "context",
        "_a",
        "isSupported",
        "canvas",
        "context",
        "geometry",
        "text",
        "winding",
        "doesSupportWinding",
        "context",
        "skipImages",
        "geometry",
        "text",
        "renderImages",
        "canvas",
        "context",
        "_b",
        "_c",
        "geometry",
        "_b",
        "text",
        "_b",
        "_c",
        "winding",
        "geometry",
        "text",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "canvas",
        "context",
        "context",
        "canvas",
        "context",
        "context",
        "context",
        "context",
        "canvas",
        "context",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "renderTextImage",
        "canvas",
        "context",
        "releaseEventLoop",
        "_a",
        "textImage1",
        "canvasToString",
        "canvas",
        "textImage2",
        "canvasToString",
        "canvas",
        "textImage1",
        "textImage2",
        "renderGeometryImage",
        "canvas",
        "context",
        "releaseEventLoop",
        "_a",
        "geometryImage",
        "canvasToString",
        "canvas",
        "geometryImage",
        "textImage1",
        "canvas",
        "context",
        "canvas",
        "canvas",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "printedText",
        "context",
        "context",
        "context",
        "printedText",
        "canvas",
        "context",
        "canvas",
        "canvas",
        "context",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "_b",
        "_b",
        "_b",
        "context",
        "color",
        "context",
        "context",
        "x",
        "y",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "canvas",
        "canvas",
        "isWebKit",
        "isWebKit616OrNewer",
        "isSafariWebKit",
        "n",
        "maxTouchPoints",
        "toInt",
        "n",
        "n",
        "maxTouchPoints",
        "n",
        "touchEvent",
        "_a",
        "touchEvent",
        "maxTouchPoints",
        "touchEvent",
        "touchStart",
        "navigator",
        "n",
        "n",
        "n",
        "n",
        "language",
        "result",
        "language",
        "n",
        "isChromium",
        "isChromium86OrNewer",
        "result",
        "n",
        "n",
        "n",
        "languages",
        "result",
        "languages",
        "result",
        "replaceNaN",
        "toFloat",
        "navigator",
        "isWebKit",
        "isWebKit616OrNewer",
        "isSafariWebKit",
        "getUnstableScreenResolution",
        "value",
        "replaceNaN",
        "toInt",
        "value",
        "parseDimension",
        "s",
        "parseDimension",
        "s",
        "dimensions",
        "dimensions",
        "screenFrameSizeTimeoutId",
        "getCurrentScreenFrame",
        "isFrameSizeNull",
        "frameSize",
        "screenFrameSizeTimeoutId",
        "setTimeout",
        "checkScreenFrame",
        "screenFrameCheckInterval",
        "screenFrameBackup",
        "frameSize",
        "screenFrameSizeTimeoutId",
        "checkScreenFrame",
        "watchScreenFrame",
        "__awaiter",
        "_this",
        "__generator",
        "_a",
        "_a",
        "frameSize",
        "getCurrentScreenFrame",
        "isFrameSizeNull",
        "frameSize",
        "screenFrameBackup",
        "__spreadArray",
        "screenFrameBackup",
        "getFullscreenElement",
        "exitFullscreen",
        "_a",
        "frameSize",
        "getCurrentScreenFrame",
        "_a",
        "isFrameSizeNull",
        "frameSize",
        "screenFrameBackup",
        "frameSize",
        "frameSize",
        "isWebKit",
        "isWebKit616OrNewer",
        "isSafariWebKit",
        "getUnstableScreenFrame",
        "__awaiter",
        "_this",
        "__generator",
        "_a",
        "_a",
        "screenFrameGetter",
        "frameSize",
        "_a",
        "processSize",
        "sideSize",
        "sideSize",
        "round",
        "sideSize",
        "roundingPrecision",
        "processSize",
        "frameSize",
        "processSize",
        "frameSize",
        "processSize",
        "frameSize",
        "processSize",
        "frameSize",
        "replaceNaN",
        "toFloat",
        "s",
        "replaceNaN",
        "toFloat",
        "s",
        "toFloat",
        "s",
        "replaceNaN",
        "toFloat",
        "s",
        "replaceNaN",
        "toFloat",
        "s",
        "toFloat",
        "s",
        "replaceNaN",
        "toFloat",
        "s",
        "replaceNaN",
        "toFloat",
        "s",
        "frameSize",
        "i",
        "i",
        "frameSize",
        "i",
        "replaceNaN",
        "toInt",
        "navigator",
        "_a",
        "_a",
        "_a",
        "DateTimeFormat",
        "DateTimeFormat",
        "timezone",
        "timezone",
        "getTimezoneOffset",
        "offset",
        "offset",
        "toFloat",
        "currentYear",
        "toFloat",
        "currentYear",
        "error",
        "e",
        "isTrident",
        "isEdgeHTML",
        "e",
        "navigator",
        "navigator",
        "platform",
        "isWebKit",
        "isDesktopWebKit",
        "isIPad",
        "platform",
        "localStorage",
        "token",
        "token",
        "localStorage",
        "visitorID",
        "getCookie",
        "visitorID",
        "name",
        "name",
        "matches",
        "decodeURIComponent",
        "matches",
        "navigator",
        "localStorage",
        "location",
        "navigator",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "key",
        "value",
        "value",
        "flavors",
        "key",
        "flavors",
        "d",
        "d",
        "d",
        "result",
        "e",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "fromB64",
        "_a",
        "_a",
        "_a",
        "_b",
        "__awaiter",
        "__generator",
        "_d",
        "_d",
        "isApplicable",
        "filters",
        "getFilters",
        "filterNames",
        "filters",
        "allSelectors",
        "_c",
        "_c",
        "filterNames",
        "filterName",
        "filters",
        "filterName",
        "getBlockedSelectors",
        "allSelectors",
        "blockedSelectors",
        "_d",
        "debug",
        "printDebug",
        "filters",
        "blockedSelectors",
        "activeBlockers",
        "filterNames",
        "filterName",
        "filters",
        "filterName",
        "countTruthy",
        "selectors",
        "selector",
        "blockedSelectors",
        "selector",
        "blockedCount",
        "selectors",
        "activeBlockers",
        "activeBlockers",
        "isWebKit",
        "isAndroid",
        "selectors",
        "__awaiter",
        "__generator",
        "_b",
        "_b",
        "d",
        "root",
        "d",
        "elements",
        "selectors",
        "blockedSelectors",
        "forceShow",
        "root",
        "i",
        "i",
        "selectors",
        "i",
        "element",
        "selectorToElement",
        "selectors",
        "i",
        "element",
        "element",
        "holder",
        "d",
        "forceShow",
        "holder",
        "holder",
        "element",
        "root",
        "holder",
        "elements",
        "i",
        "element",
        "_b",
        "d",
        "wait",
        "_b",
        "d",
        "root",
        "releaseEventLoop",
        "_b",
        "i",
        "i",
        "selectors",
        "i",
        "elements",
        "i",
        "blockedSelectors",
        "selectors",
        "i",
        "_a",
        "root",
        "_a",
        "_a",
        "root",
        "blockedSelectors",
        "element",
        "element",
        "element",
        "filters",
        "blockedSelectors",
        "filters",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "message",
        "filterName",
        "filters",
        "filterName",
        "_b",
        "_c",
        "_b",
        "_c",
        "_b",
        "message",
        "blockedSelectors",
        "selector",
        "selector",
        "message",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "matchMedia",
        "gamut",
        "gamut",
        "doesMatch$5",
        "doesMatch$5",
        "value",
        "matchMedia",
        "value",
        "doesMatch$4",
        "doesMatch$4",
        "value",
        "matchMedia",
        "value",
        "matchMedia",
        "i",
        "maxValueToCheck",
        "i",
        "matchMedia",
        "i",
        "i",
        "doesMatch$3",
        "doesMatch$3",
        "doesMatch$3",
        "doesMatch$3",
        "doesMatch$3",
        "doesMatch$3",
        "value",
        "matchMedia",
        "value",
        "doesMatch$2",
        "doesMatch$2",
        "value",
        "matchMedia",
        "value",
        "doesMatch$1",
        "doesMatch$1",
        "value",
        "matchMedia",
        "value",
        "doesMatch",
        "doesMatch",
        "value",
        "matchMedia",
        "value",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "M",
        "fallbackFn",
        "value",
        "M",
        "M",
        "value",
        "value",
        "M",
        "value",
        "M",
        "value",
        "value",
        "value",
        "M",
        "value",
        "M",
        "value",
        "value",
        "value",
        "M",
        "value",
        "value",
        "value",
        "M",
        "value",
        "M",
        "value",
        "value",
        "M",
        "value",
        "M",
        "value",
        "value",
        "M",
        "value",
        "value",
        "M",
        "value",
        "M",
        "value",
        "value",
        "M",
        "value",
        "acos",
        "acosh",
        "acoshPf",
        "asin",
        "asinh",
        "asinhPf",
        "atanh",
        "atanhPf",
        "atan",
        "sin",
        "sinh",
        "sinhPf",
        "cos",
        "cosh",
        "coshPf",
        "tan",
        "tanh",
        "tanhPf",
        "exp",
        "expm1",
        "expm1Pf",
        "log1p",
        "log1pPf",
        "powPI",
        "withNaturalFonts",
        "container",
        "presets",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "presets",
        "key",
        "_b",
        "_c",
        "_c",
        "_b",
        "_d",
        "defaultText",
        "_d",
        "element",
        "text",
        "element",
        "style",
        "_e",
        "_f",
        "_e",
        "_f",
        "_e",
        "style",
        "name_1",
        "value",
        "element",
        "name_1",
        "value",
        "elements",
        "key",
        "element",
        "container",
        "element",
        "presets",
        "_g",
        "_h",
        "_g",
        "_h",
        "_g",
        "sizes",
        "key",
        "elements",
        "key",
        "sizes",
        "action",
        "containerWidthPx",
        "containerWidthPx",
        "containerWidthPx",
        "withIframe",
        "_",
        "iframeWindow",
        "iframeWindow",
        "iframeDocument",
        "iframeBody",
        "bodyStyle",
        "containerWidthPx",
        "bodyStyle",
        "bodyStyle",
        "isChromium",
        "iframeBody",
        "iframeWindow",
        "isWebKit",
        "iframeBody",
        "iframeDocument",
        "linesOfText",
        "__spreadArray",
        "containerWidthPx",
        "iframeBody",
        "linesOfText",
        "action",
        "iframeDocument",
        "iframeBody",
        "navigator",
        "Float32Array",
        "Uint8Array",
        "f",
        "f",
        "Infinity",
        "f",
        "f",
        "f",
        "u8",
        "ApplePaySession",
        "ApplePaySession",
        "ApplePaySession",
        "ApplePaySession",
        "error",
        "getStateFromError",
        "error",
        "error",
        "error",
        "error",
        "error",
        "error",
        "error",
        "error",
        "error",
        "_a",
        "link",
        "_a",
        "_a",
        "link",
        "sourceId",
        "sourceId",
        "_a",
        "_a",
        "getWebGLContext",
        "cache",
        "gl",
        "STATUS_NO_GL_CONTEXT",
        "isValidParameterGetter",
        "gl",
        "STATUS_GET_PARAMETER_NOT_A_FUNCTION",
        "shouldAvoidDebugRendererInfo",
        "gl",
        "rendererInfoExtensionName",
        "_b",
        "gl",
        "gl",
        "_b",
        "_b",
        "_c",
        "gl",
        "gl",
        "_c",
        "_c",
        "debugExtension",
        "_d",
        "gl",
        "debugExtension",
        "_d",
        "_d",
        "_e",
        "gl",
        "gl",
        "_e",
        "_e",
        "debugExtension",
        "_f",
        "gl",
        "debugExtension",
        "_f",
        "_f",
        "_g",
        "gl",
        "gl",
        "_g",
        "_g",
        "_a",
        "_a",
        "getWebGLContext",
        "cache",
        "gl",
        "STATUS_NO_GL_CONTEXT",
        "isValidParameterGetter",
        "gl",
        "STATUS_GET_PARAMETER_NOT_A_FUNCTION",
        "gl",
        "gl",
        "contextAttributes",
        "contextAttributes",
        "_i",
        "_b",
        "_i",
        "_b",
        "_i",
        "attributes",
        "attributeName",
        "contextAttributes",
        "attributeName",
        "getConstantsFromPrototype",
        "gl",
        "_c",
        "constants_1",
        "_c",
        "constants_1",
        "_c",
        "gl",
        "constant",
        "parameters",
        "constant",
        "code",
        "validContextParameters",
        "code",
        "gl",
        "code",
        "extensions",
        "_d",
        "extensions_1",
        "_d",
        "extensions_1",
        "_d",
        "name_1",
        "rendererInfoExtensionName",
        "shouldAvoidDebugRendererInfo",
        "name_1",
        "polygonModeExtensionName",
        "shouldAvoidPolygonModeExtensions",
        "gl",
        "name_1",
        "extension",
        "getConstantsFromPrototype",
        "extension",
        "_e",
        "_f",
        "_e",
        "_f",
        "_e",
        "extension",
        "constant",
        "extensionParameters",
        "constant",
        "code",
        "validExtensionParams",
        "code",
        "gl",
        "code",
        "_g",
        "shaderTypes_1",
        "_g",
        "shaderTypes_1",
        "_g",
        "_h",
        "precisionTypes_1",
        "_h",
        "precisionTypes_1",
        "_h",
        "getShaderPrecision",
        "gl",
        "shaderType",
        "precisionType",
        "shaderPrecisions",
        "shaderType",
        "precisionType",
        "shaderPrecision",
        "extensionParameters",
        "parameters",
        "attributes",
        "parameters",
        "shaderPrecisions",
        "extensions",
        "extensionParameters",
        "cache",
        "cache",
        "cache",
        "canvas",
        "context",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "context",
        "canvas",
        "_b",
        "context",
        "cache",
        "context",
        "context",
        "gl",
        "shaderType",
        "precisionType",
        "gl",
        "gl",
        "shaderType",
        "gl",
        "precisionType",
        "shaderPrecision",
        "shaderPrecision",
        "shaderPrecision",
        "shaderPrecision",
        "obj",
        "obj",
        "keys",
        "isConstantLike",
        "key",
        "key",
        "key",
        "isGecko",
        "isChromium",
        "isWebKit",
        "gl",
        "gl",
        "resolve",
        "ip",
        "ip",
        "privateIp",
        "ip",
        "ip",
        "publicIp",
        "ip",
        "publicIp",
        "ip",
        "RTCPeerConnection",
        "servers",
        "candidate",
        "candidate",
        "ip_regex",
        "candidate",
        "ip_addrs",
        "foundIp",
        "ip_addrs",
        "privateIp",
        "publicIp",
        "resolve",
        "publicIp",
        "privateIp",
        "pc",
        "ice",
        "ice",
        "ice",
        "handleCandidate",
        "ice",
        "pc",
        "pc",
        "result",
        "result",
        "pc",
        "result",
        "setTimeout",
        "pc",
        "pc",
        "lines",
        "lines",
        "line",
        "line",
        "handleCandidate",
        "line",
        "resolve",
        "publicIp",
        "privateIp",
        "getFonts",
        "getDomBlockers",
        "getFontPreferences",
        "getAudioFingerprint",
        "getScreenFrame",
        "getCanvasFingerprint",
        "getOsCpu",
        "getLanguages",
        "getColorDepth",
        "getDeviceMemory",
        "getScreenResolution",
        "getHardwareConcurrency",
        "getTimezone",
        "getSessionStorage",
        "getLocalStorage",
        "getIndexedDB",
        "getOpenDatabase",
        "getCpuClass",
        "getPlatform",
        "getToken",
        "getVisitorID",
        "getUserAgent",
        "getReferer",
        "getPlugins",
        "getTouchSupport",
        "getVendor",
        "getVendorFlavors",
        "areCookiesEnabled",
        "getColorGamut",
        "areColorsInverted",
        "areColorsForced",
        "getMonochromeDepth",
        "getContrastPreference",
        "isMotionReduced",
        "isTransparencyReduced",
        "isHDR",
        "getMathFingerprint",
        "isPdfViewerEnabled",
        "getArchitecture",
        "getApplePayState",
        "getPrivateClickMeasurement",
        "getWebGlBasics",
        "getWebGlExtensions",
        "getWebRTC",
        "options",
        "loadSources",
        "sources",
        "options",
        "components",
        "getOpenConfidenceScore",
        "components",
        "deriveProConfidenceScore",
        "openConfidenceScore",
        "openConfidenceScore",
        "commentTemplate",
        "proConfidenceScore",
        "components",
        "isAndroid",
        "isWebKit",
        "isDesktopWebKit",
        "isWebKit616OrNewer",
        "isSafariWebKit",
        "components",
        "components",
        "platform",
        "platform",
        "openConfidenceScore",
        "round",
        "openConfidenceScore",
        "components",
        "components",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "components",
        "componentKey",
        "component",
        "component",
        "result",
        "result",
        "componentKey",
        "value",
        "result",
        "components",
        "components",
        "_key",
        "value",
        "value",
        "errorToObject",
        "value",
        "value",
        "components",
        "x64hash128",
        "componentsToCanonicalString",
        "components",
        "components",
        "getConfidence",
        "components",
        "visitorIdCache",
        "visitorIdCache",
        "hashComponents",
        "visitorIdCache",
        "visitorId",
        "visitorIdCache",
        "visitorId",
        "confidence",
        "components",
        "version",
        "components",
        "components",
        "_i",
        "_a",
        "_i",
        "_a",
        "_i",
        "components",
        "componentKey",
        "jsonData",
        "componentKey",
        "component",
        "jsonData",
        "components",
        "componentsToJson",
        "components",
        "jsonData",
        "delayFallback",
        "delayFallback",
        "delayFallback",
        "requestIdleCallbackIfAvailable",
        "delayFallback",
        "delayFallback",
        "getComponents",
        "debug",
        "options",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "startTime",
        "getComponents",
        "components",
        "_a",
        "result",
        "makeLazyGetResult",
        "components",
        "debug",
        "options",
        "options",
        "options",
        "result",
        "navigator",
        "startTime",
        "creationTime",
        "result",
        "componentsToDebugString",
        "components",
        "result",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "getComponents",
        "components",
        "_a",
        "makeLazyRetrieveResult",
        "components",
        "options",
        "options",
        "options",
        "__awaiter",
        "__generator",
        "_a",
        "_a",
        "delayFallback",
        "options",
        "debug",
        "options",
        "prepareForSources",
        "delayFallback",
        "_a",
        "getComponents",
        "loadBuiltinSources",
        "debug",
        "makeAgent",
        "getComponents",
        "debug",
        "load",
        "hashComponents",
        "componentsToDebugString",
        "URLSearchParams",
        "urlParams",
        "token",
        "localStorage",
        "token",
        "urlParams",
        "referer",
        "localStorage",
        "referer",
        "load",
        "fp",
        "fp",
        "exports",
        "componentsToDebugString",
        "exports",
        "index",
        "exports",
        "doesBrowserSuspendAudioContext",
        "exports",
        "getFullscreenElement",
        "exports",
        "getUnstableAudioFingerprint",
        "exports",
        "getUnstableCanvasFingerprint",
        "exports",
        "getUnstableScreenFrame",
        "exports",
        "getUnstableScreenResolution",
        "exports",
        "getWebGLContext",
        "exports",
        "getStateFromError",
        "exports",
        "hashComponents",
        "exports",
        "isAndroid",
        "exports",
        "isChromium",
        "exports",
        "isDesktopWebKit",
        "exports",
        "isEdgeHTML",
        "exports",
        "isGecko",
        "exports",
        "isTrident",
        "exports",
        "isWebKit",
        "exports",
        "load",
        "exports",
        "loadSources",
        "exports",
        "murmurX64Hash128",
        "exports",
        "prepareForSources",
        "exports",
        "renderAudio",
        "exports",
        "sources",
        "exports",
        "transformSource",
        "exports",
        "withIframe",
        "exports",
        "exports"
    ],
    "literals": [
        "'use strict'",
        "\"throw\"",
        "\"throw\"",
        "\"return\"",
        "\"function\"",
        "\"Generator is already executing.\"",
        "\"return\"",
        "\"throw\"",
        "\"return\"",
        "\"4.3.0\"",
        "'function'",
        "'number'",
        "\"Unexpected syntax '\"",
        "\"'\"",
        "'.'",
        "'class'",
        "'#'",
        "'id'",
        "'['",
        "''",
        "'00000000'",
        "'00000000'",
        "'00000000'",
        "'00000000'",
        "'\\n'",
        "'function'",
        "'string'",
        "'number'",
        "'boolean'",
        "'error'",
        "'error'",
        "'MSCSSMatrix'",
        "'msSetImmediate'",
        "'msIndexedDB'",
        "'msMaxTouchPoints'",
        "'msPointerEnabled'",
        "'msWriteProfilerMark'",
        "'MSStream'",
        "'msLaunchUri'",
        "'msSaveBlob'",
        "'webkitPersistentStorage'",
        "'webkitTemporaryStorage'",
        "'Google'",
        "'webkitResolveLocalFileSystemURL'",
        "'BatteryManager'",
        "'webkitMediaStream'",
        "'webkitSpeechGrammar'",
        "'ApplePayError'",
        "'CSSPrimitiveValue'",
        "'Counter'",
        "'Apple'",
        "'getStorageUpdates'",
        "'WebKitMediaKeys'",
        "'safari'",
        "'ongestureend'",
        "'TouchEvent'",
        "'orientation'",
        "'autocapitalize'",
        "'pointerLockElement'",
        "'[object WebPageNamespace]'",
        "'MicrodataExtractor'",
        "'buildID'",
        "'MozAppearance'",
        "'onmozfullscreenchange'",
        "'mozInnerScreenX'",
        "'CSSMozDocumentRule'",
        "'CanvasCaptureMediaStream'",
        "'MediaSettingsRange'",
        "'RTCEncodedAudioFrame'",
        "''",
        "'[object Intl]'",
        "''",
        "'[object Reflect]'",
        "'DOMRectList'",
        "'RTCPeerConnectionIceEvent'",
        "'SVGGeometryElement'",
        "'ontransitioncancel'",
        "'getStorageUpdates'",
        "'popover'",
        "'CSSCounterStyleRule'",
        "'font-size-adjust: ex-height 0.5'",
        "'text-transform: full-width'",
        "'iPad'",
        "'MediaSource'",
        "'connection'",
        "'SharedWorker'",
        "'ontypechange'",
        "'sinkId'",
        "'onorientationchange'",
        "'orientation'",
        "'iframe'",
        "'display'",
        "'block'",
        "'important'",
        "'absolute'",
        "'0'",
        "'0'",
        "'hidden'",
        "'srcdoc'",
        "'about:blank'",
        "'complete'",
        "'div'",
        "' '",
        "'style'",
        "';'",
        "''",
        "'visibilitychange'",
        "'square'",
        "'allpass'",
        "'suspended'",
        "'mmMwWLliI0O&1'",
        "'48px'",
        "'monospace'",
        "'sans-serif'",
        "'serif'",
        "'sans-serif-thin'",
        "'ARNO PRO'",
        "'Agency FB'",
        "'Arabic Typesetting'",
        "'Arial Unicode MS'",
        "'AvantGarde Bk BT'",
        "'BankGothic Md BT'",
        "'Batang'",
        "'Bitstream Vera Sans Mono'",
        "'Calibri'",
        "'Century'",
        "'Century Gothic'",
        "'Clarendon'",
        "'EUROSTILE'",
        "'Franklin Gothic'",
        "'Futura Bk BT'",
        "'Futura Md BT'",
        "'GOTHAM'",
        "'Gill Sans'",
        "'HELV'",
        "'Haettenschweiler'",
        "'Helvetica Neue'",
        "'Humanst521 BT'",
        "'Leelawadee'",
        "'Letter Gothic'",
        "'Levenim MT'",
        "'Lucida Bright'",
        "'Lucida Sans'",
        "'Menlo'",
        "'MS Mincho'",
        "'MS Outlook'",
        "'MS Reference Specialty'",
        "'MS UI Gothic'",
        "'MT Extra'",
        "'MYRIAD PRO'",
        "'Marlett'",
        "'Meiryo UI'",
        "'Microsoft Uighur'",
        "'Minion Pro'",
        "'Monotype Corsiva'",
        "'PMingLiU'",
        "'Pristina'",
        "'SCRIPTINA'",
        "'Segoe UI Light'",
        "'Serifa'",
        "'SimHei'",
        "'Small Fonts'",
        "'Staccato222 BT'",
        "'TRAJAN PRO'",
        "'Univers CE 55 Medium'",
        "'Vrinda'",
        "'ZWAdobeF'",
        "'div'",
        "'visibility'",
        "'hidden'",
        "'important'",
        "'span'",
        "'absolute'",
        "'0'",
        "'0'",
        "\"'\"",
        "\"',\"",
        "\"unsupported\"",
        "\"skipped\"",
        "'canvas'",
        "'2d'",
        "'evenodd'",
        "\"unstable\"",
        "\"unstable\"",
        "'alphabetic'",
        "'#f60'",
        "'#069'",
        "'11pt \"Times New Roman\"'",
        "\"Cwm fjordbank gly \"",
        "'rgba(102, 204, 0, 0.2)'",
        "'18pt Arial'",
        "'multiply'",
        "'#f2f'",
        "'#2ff'",
        "'#ff2'",
        "'#f9c'",
        "'evenodd'",
        "'TouchEvent'",
        "'ontouchstart'",
        "','",
        "'string'",
        "\"UTC\"",
        "'+'",
        "''",
        "'MacIntel'",
        "'iPad'",
        "'iPhone'",
        "'token'",
        "''",
        "'visitorID'",
        "'_fpjsvid'",
        "'(?:^|; )'",
        "'\\\\$1'",
        "'=([^;]*)'",
        "''",
        "'referer'",
        "''",
        "'chrome'",
        "'safari'",
        "'__crWeb'",
        "'__gCrWeb'",
        "'yandex'",
        "'__yb'",
        "'__ybro'",
        "'__firefox__'",
        "'__edgeTrackingPreventionStatistics'",
        "'webkit'",
        "'oprt'",
        "'samsungAr'",
        "'ucweb'",
        "'UCShellJava'",
        "'puffinDevice'",
        "'object'",
        "'cookietest=1; SameSite=Strict;'",
        "'cookietest='",
        "'cookietest=1; SameSite=Strict; expires=Thu, 01-Jan-1970 00:00:01 GMT'",
        "'#Iklan-Melayang'",
        "'#Kolom-Iklan-728'",
        "'#SidebarIklan-wrapper'",
        "'[title=\"ALIENBOLA\" i]'",
        "'I0JveC1CYW5uZXItYWRz'",
        "'.quangcao'",
        "'#mobileCatfish'",
        "'LmNsb3NlLWFkcw=='",
        "'[id^=\"bn_bottom_fixed_\"]'",
        "'#pmadv'",
        "'.mainostila'",
        "'LnNwb25zb3JpdA=='",
        "'.ylamainos'",
        "'YVtocmVmKj0iL2NsaWNrdGhyZ2guYXNwPyJd'",
        "'YVtocmVmXj0iaHR0cHM6Ly9hcHAucmVhZHBlYWsuY29tL2FkcyJd'",
        "'#navbar_notice_50'",
        "'.kadr'",
        "'TABLE[width=\"140px\"]'",
        "'#divAgahi'",
        "'YVtocmVmXj0iaHR0cDovL2cxLnYuZndtcm0ubmV0L2FkLyJd'",
        "'#adblock-honeypot'",
        "'.adblocker-root'",
        "'.wp_adblock_detect'",
        "'LmhlYWRlci1ibG9ja2VkLWFk'",
        "'I2FkX2Jsb2NrZXI='",
        "'.hs-sosyal'",
        "'#cookieconsentdiv'",
        "'div[class^=\"app_gdpr\"]'",
        "'.as-oil'",
        "'[data-cypress=\"soft-push-notification-modal\"]'",
        "'.BetterJsPopOverlay'",
        "'I2FkXzMwMFgyNTA='",
        "'I2Jhbm5lcmZsb2F0MjI='",
        "'I2NhbXBhaWduLWJhbm5lcg=='",
        "'I0FkLUNvbnRlbnQ='",
        "'LlppX2FkX2FfSA=='",
        "'YVtocmVmKj0iLmh0aGJldDM0LmNvbSJd'",
        "'#widget-quan'",
        "'YVtocmVmKj0iLzg0OTkyMDIwLnh5eiJd'",
        "'YVtocmVmKj0iLjE5NTZobC5jb20vIl0='",
        "'#pavePub'",
        "'LmFkLWRlc2t0b3AtcmVjdGFuZ2xl'",
        "'.mobile_adhesion'",
        "'.widgetadv'",
        "'LmFkc19iYW4='",
        "'aside[data-portal-id=\"leaderboard\"]'",
        "'#kauli_yad_1'",
        "'YVtocmVmXj0iaHR0cDovL2FkMi50cmFmZmljZ2F0ZS5uZXQvIl0='",
        "'Ll9wb3BJbl9pbmZpbml0ZV9hZA=='",
        "'LmFkZ29vZ2xl'",
        "'Ll9faXNib29zdFJldHVybkFk'",
        "'YW1wLWF1dG8tYWRz'",
        "'LmFtcF9hZA=='",
        "'amp-embed[type=\"24smi\"]'",
        "'#mgid_iframe1'",
        "'I2FkX2ludmlld19hcmVh'",
        "'YVtocmVmXj0iaHR0cHM6Ly9hZC5sZXRtZWFkcy5jb20vIl0='",
        "'LnJlY2xhbWE='",
        "'div[id^=\"smi2adblock\"]'",
        "'ZGl2W2lkXj0iQWRGb3hfYmFubmVyXyJd'",
        "'#psyduckpockeball'",
        "'YVtocmVmXj0iLy93d3cuc3R1bWJsZXVwb24uY29tL3N1Ym1pdD91cmw9Il0='",
        "'YVtocmVmXj0iLy90ZWxlZ3JhbS5tZS9zaGFyZS91cmw/Il0='",
        "'.etsy-tweet'",
        "'#inlineShare'",
        "'.popup-social'",
        "'#barraPublicidade'",
        "'#Publicidade'",
        "'#publiEspecial'",
        "'#queTooltip'",
        "'.cnt-publi'",
        "'#qoo-counter'",
        "'YVtocmVmXj0iaHR0cDovL2NsaWNrLmhvdGxvZy5ydS8iXQ=='",
        "'YVtocmVmXj0iaHR0cDovL2hpdGNvdW50ZXIucnUvdG9wL3N0YXQucGhwIl0='",
        "'YVtocmVmXj0iaHR0cDovL3RvcC5tYWlsLnJ1L2p1bXAiXQ=='",
        "'#top100counter'",
        "'#backkapat'",
        "'I3Jla2xhbWk='",
        "'YVtocmVmXj0iaHR0cDovL2Fkc2Vydi5vbnRlay5jb20udHIvIl0='",
        "'YVtocmVmXj0iaHR0cDovL2l6bGVuemkuY29tL2NhbXBhaWduLyJd'",
        "'YVtocmVmXj0iaHR0cDovL3d3dy5pbnN0YWxsYWRzLm5ldC8iXQ=='",
        "'dGQjZnJlZW5ldF90YWJsZV9hZHM='",
        "'#ea_intext_div'",
        "'.lapni-pop-over'",
        "'#xenium_hot_offers'",
        "'.yb-floorad'",
        "'LndpZGdldF9wb19hZHNfd2lkZ2V0'",
        "'LnRyYWZmaWNqdW5reS1hZA=='",
        "'.textad_headline'",
        "'LnNwb25zb3JlZC10ZXh0LWxpbmtz'",
        "'LmFwcGd1aWRlLXdyYXBbb25jbGljayo9ImJjZWJvcy5jb20iXQ=='",
        "'LmZyb250cGFnZUFkdk0='",
        "'#taotaole'",
        "'#aafoot.top_box'",
        "'.cfa_popup'",
        "'.ezmob-footer'",
        "'.cc-CookieWarning'",
        "'[data-cookie-number]'",
        "'LmF3LWNvb2tpZS1iYW5uZXI='",
        "'.sygnal24-gdpr-modal-wrap'",
        "'#onlajny-stickers'",
        "'I3Jla2xhbW5pLWJveA=='",
        "'LnJla2xhbWEtbWVnYWJvYXJk'",
        "'.sklik'",
        "'W2lkXj0ic2tsaWtSZWtsYW1hIl0='",
        "'I2FkdmVydGVudGll'",
        "'I3ZpcEFkbWFya3RCYW5uZXJCbG9jaw=='",
        "'.adstekst'",
        "'YVtocmVmXj0iaHR0cHM6Ly94bHR1YmUubmwvY2xpY2svIl0='",
        "'#semilo-lrectangle'",
        "'#SSpotIMPopSlider'",
        "'LnNwb25zb3JsaW5rZ3J1ZW4='",
        "'I3dlcmJ1bmdza3k='",
        "'I3Jla2xhbWUtcmVjaHRzLW1pdHRl'",
        "'YVtocmVmXj0iaHR0cHM6Ly9iZDc0Mi5jb20vIl0='",
        "'LmJveF9hZHZfYW5udW5jaQ=='",
        "'.sb-box-pubbliredazionale'",
        "'YVtocmVmXj0iaHR0cDovL2FmZmlsaWF6aW9uaWFkcy5zbmFpLml0LyJd'",
        "'YVtocmVmXj0iaHR0cHM6Ly9hZHNlcnZlci5odG1sLml0LyJd'",
        "'YVtocmVmXj0iaHR0cHM6Ly9hZmZpbGlhemlvbmlhZHMuc25haS5pdC8iXQ=='",
        "'LnJla2xhbW9zX3RhcnBhcw=='",
        "'LnJla2xhbW9zX251b3JvZG9z'",
        "'aW1nW2FsdD0iUmVrbGFtaW5pcyBza3lkZWxpcyJd'",
        "'aW1nW2FsdD0iRGVkaWt1b3RpLmx0IHNlcnZlcmlhaSJd'",
        "'aW1nW2FsdD0iSG9zdGluZ2FzIFNlcnZlcmlhaS5sdCJd'",
        "'QVtocmVmKj0iaHR0cDovL3BheTRyZXN1bHRzMjQuZXUiXQ=='",
        "'#ac-lre-player'",
        "'.navigate-to-top'",
        "'#subscribe_popup'",
        "'.newsletter_holder'",
        "'#back-top'",
        "'.util-bar-module-firefly-visible'",
        "'.open.pushModal'",
        "'#issuem-leaky-paywall-articles-zero-remaining-nag'",
        "'#sovrn_container'",
        "'div[class$=\"-hide\"][zoompage-fontsize][style=\"display: block;\"]'",
        "'.BlockNag__Card'",
        "'#FollowUs'",
        "'#meteored_share'",
        "'#social_follow'",
        "'.article-sharer'",
        "'.community__social-desc'",
        "'YVtocmVmKj0iY2FzaW5vcHJvLnNlIl1bdGFyZ2V0PSJfYmxhbmsiXQ=='",
        "'YVtocmVmKj0iZG9rdG9yLXNlLm9uZWxpbmsubWUiXQ=='",
        "'article.category-samarbete'",
        "'ZGl2LmhvbGlkQWRz'",
        "'ul.adsmodern'",
        "'QVtocmVmKj0iYWRtYW4ub3RlbmV0LmdyL2NsaWNrPyJd'",
        "'QVtocmVmKj0iaHR0cDovL2F4aWFiYW5uZXJzLmV4b2R1cy5nci8iXQ=='",
        "'QVtocmVmKj0iaHR0cDovL2ludGVyYWN0aXZlLmZvcnRobmV0LmdyL2NsaWNrPyJd'",
        "'DIV.agores300'",
        "'TABLE.advright'",
        "'#cemp_doboz'",
        "'.optimonk-iframe-container'",
        "'LmFkX19tYWlu'",
        "'W2NsYXNzKj0iR29vZ2xlQWRzIl0='",
        "'#hirdetesek_box'",
        "'.alert-info[data-block-track*=\"CookieNotice\"]'",
        "'.ModuleTemplateCookieIndicator'",
        "'.o--cookies--container'",
        "'#cookies-policy-sticky'",
        "'#stickyCookieBar'",
        "'QVtocmVmXj0iL2ZyYW1ld29yay9yZXNvdXJjZXMvZm9ybXMvYWRzLmFzcHgiXQ=='",
        "'YVtocmVmPSJodHRwOi8vd3d3LnNhbGlkemluaS5sdi8iXVtzdHlsZT0iZGlzcGxheTogYmxvY2s7IHdpZHRoOiAxMjBweDsgaGVpZ2h0O'",
        "'iA0MHB4OyBvdmVyZmxvdzogaGlkZGVuOyBwb3NpdGlvbjogcmVsYXRpdmU7Il0='",
        "'YVtocmVmPSJodHRwOi8vd3d3LnNhbGlkemluaS5sdi8iXVtzdHlsZT0iZGlzcGxheTogYmxvY2s7IHdpZHRoOiA4OHB4OyBoZWlnaHQ6I'",
        "'DMxcHg7IG92ZXJmbG93OiBoaWRkZW47IHBvc2l0aW9uOiByZWxhdGl2ZTsiXQ=='",
        "'YVtocmVmKj0iLy9hZC5wbGFuYnBsdXMuY28ua3IvIl0='",
        "'I2xpdmVyZUFkV3JhcHBlcg=='",
        "'YVtocmVmKj0iLy9hZHYuaW1hZHJlcC5jby5rci8iXQ=='",
        "'aW5zLmZhc3R2aWV3LWFk'",
        "'.revenue_unit_item.dable'",
        "'LmdlbWluaUxCMUFk'",
        "'.right-and-left-sponsers'",
        "'YVtocmVmKj0iLmFmbGFtLmluZm8iXQ=='",
        "'YVtocmVmKj0iYm9vcmFxLm9yZyJd'",
        "'YVtocmVmKj0iZHViaXp6bGUuY29tL2FyLz91dG1fc291cmNlPSJd'",
        "'YVtocmVmXj0iaHR0cDovL3Byb21vLnZhZG9yLmNvbS8iXQ=='",
        "'I2FkY29udGFpbmVyX3JlY2hlcmNoZQ=='",
        "'YVtocmVmKj0id2Vib3JhbWEuZnIvZmNnaS1iaW4vIl0='",
        "'.site-pub-interstitiel'",
        "'div[id^=\"crt-\"][data-criteo-id]'",
        "'#ceneo-placeholder-ceneo-12'",
        "'W2hyZWZePSJodHRwczovL2FmZi5zZW5kaHViLnBsLyJd'",
        "'YVtocmVmXj0iaHR0cDovL2Fkdm1hbmFnZXIudGVjaGZ1bi5wbC9yZWRpcmVjdC8iXQ=='",
        "'YVtocmVmXj0iaHR0cDovL3d3dy50cml6ZXIucGwvP3V0bV9zb3VyY2UiXQ=='",
        "'ZGl2I3NrYXBpZWNfYWQ='",
        "'YVtocmVmXj0iLy9hZmZ0cmsuYWx0ZXgucm8vQ291bnRlci9DbGljayJd'",
        "'YVtocmVmXj0iaHR0cHM6Ly9ibGFja2ZyaWRheXNhbGVzLnJvL3Ryay9zaG9wLyJd'",
        "'YVtocmVmXj0iaHR0cHM6Ly9ldmVudC4ycGVyZm9ybWFudC5jb20vZXZlbnRzL2NsaWNrIl0='",
        "'YVtocmVmXj0iaHR0cHM6Ly9sLnByb2ZpdHNoYXJlLnJvLyJd'",
        "'a[href^=\"/url/\"]'",
        "'YVtocmVmKj0iLy9mZWJyYXJlLnJ1LyJd'",
        "'YVtocmVmKj0iLy91dGltZy5ydS8iXQ=='",
        "'YVtocmVmKj0iOi8vY2hpa2lkaWtpLnJ1Il0='",
        "'#pgeldiz'",
        "'.yandex-rtb-block'",
        "'a[href*=macau-uta-popup]'",
        "'I2Fkcy1nb29nbGUtbWlkZGxlX3JlY3RhbmdsZS1ncm91cA=='",
        "'LmFkczMwMHM='",
        "'.bumq'",
        "'.img-kosana'",
        "'#mod-social-share-2'",
        "'#social-tools'",
        "'LmN0cGwtZnVsbGJhbm5lcg=='",
        "'.zergnet-recommend'",
        "'.yt.btn-link.btn-md.btn'",
        "'div'",
        "'DIALOG'",
        "'div'",
        "'visibility'",
        "'hidden'",
        "'important'",
        "'display'",
        "'block'",
        "'important'",
        "'DOM blockers debug:\\n```'",
        "\"\\n\"",
        "\":\"",
        "\"\\n  \"",
        "'🚫'",
        "'➡️'",
        "\" \"",
        "\"\"",
        "\"\\n```\"",
        "'rec2020'",
        "'p3'",
        "'srgb'",
        "\"(color-gamut: \"",
        "\")\"",
        "'inverted'",
        "'none'",
        "\"(inverted-colors: \"",
        "\")\"",
        "'active'",
        "'none'",
        "\"(forced-colors: \"",
        "\")\"",
        "'(min-monochrome: 0)'",
        "\"(max-monochrome: \"",
        "\")\"",
        "'Too high value'",
        "'no-preference'",
        "'high'",
        "'more'",
        "'low'",
        "'less'",
        "'forced'",
        "\"(prefers-contrast: \"",
        "\")\"",
        "'reduce'",
        "'no-preference'",
        "\"(prefers-reduced-motion: \"",
        "\")\"",
        "'reduce'",
        "'no-preference'",
        "\"(prefers-reduced-transparency: \"",
        "\")\"",
        "'high'",
        "'standard'",
        "\"(dynamic-range: \"",
        "\")\"",
        "'mmMwWLliI0fiflO&1'",
        "'-apple-system-body'",
        "'serif'",
        "'sans-serif'",
        "'monospace'",
        "'1px'",
        "'system-ui'",
        "'span'",
        "'nowrap'",
        "'br'",
        "\"\"",
        "\"px\"",
        "'none'",
        "\"\"",
        "'reset'",
        "'div'",
        "'word'",
        "' '",
        "'<!doctype html><html><head><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">'",
        "'function'",
        "'InvalidAccessError'",
        "'SecurityError'",
        "'a'",
        "'FRAGMENT_SHADER'",
        "'VERTEX_SHADER'",
        "'LOW_FLOAT'",
        "'MEDIUM_FLOAT'",
        "'HIGH_FLOAT'",
        "'LOW_INT'",
        "'MEDIUM_INT'",
        "'HIGH_INT'",
        "'WEBGL_debug_renderer_info'",
        "'WEBGL_polygon_mode'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "\"\"",
        "\"=\"",
        "\"\"",
        "\"=\"",
        "\"=\"",
        "''",
        "\"\"",
        "\"=\"",
        "\"=\"",
        "''",
        "\"\"",
        "\".\"",
        "\"=\"",
        "','",
        "'canvas'",
        "'webglCreateContextError'",
        "'webgl'",
        "'experimental-webgl'",
        "'string'",
        "'function'",
        "''",
        "''",
        "'stun:stun.l.google.com:19302'",
        "''",
        "''",
        "''",
        "'\\n'",
        "'a=candidate:'",
        "'$ if upgrade to Pro: https://fpjs.dev/pro'",
        "\"\"",
        "'value'",
        "''",
        "''",
        "'error'",
        "'error'",
        "\"\"",
        "'|'",
        "''",
        "'\\\\$1'",
        "\":\"",
        "\"Copy the text below to get the debug data:\\n\\n```\\nversion: \"",
        "\"\\nuserAgent: \"",
        "\"\\ntimeBetweenLoadAndGet: \"",
        "\"\\nvisitorId: \"",
        "\"\\ncomponents: \"",
        "\"\\n```\"",
        "'token'",
        "'token'",
        "'referer'",
        "'referer'",
        "'__esModule'"
    ],
    "variables": [
        "FingerprintJS",
        "__assign",
        "s",
        "i",
        "n",
        "_",
        "f",
        "y",
        "t",
        "g",
        "i",
        "l",
        "ar",
        "version",
        "requestIdleCallback",
        "returnedValue",
        "results",
        "lastLoopReleaseTime",
        "i",
        "now",
        "i",
        "l",
        "counterBase",
        "_a",
        "_b",
        "errorMessage",
        "tagMatch",
        "tag",
        "attributes",
        "partsRegex",
        "addAttribute",
        "match",
        "part",
        "attributeMatch",
        "result",
        "i",
        "charCode",
        "m0",
        "m1",
        "m2",
        "m3",
        "n0",
        "n1",
        "n2",
        "n3",
        "o0",
        "o1",
        "o2",
        "o3",
        "m0",
        "m1",
        "m2",
        "m3",
        "n0",
        "n1",
        "n2",
        "n3",
        "o0",
        "o1",
        "o2",
        "o3",
        "m0",
        "F1",
        "F2",
        "shifted",
        "C1",
        "C2",
        "M$1",
        "N1",
        "N2",
        "key",
        "length",
        "remainder",
        "h1",
        "h2",
        "k1",
        "k2",
        "i",
        "val",
        "_a",
        "sourceLoadPromise",
        "loadStartTime",
        "loadArgs",
        "_i",
        "loadDuration",
        "loadResult",
        "getStartTime",
        "getArgs",
        "_i",
        "duration",
        "includedSources",
        "sourceGettersPromise",
        "sourceGetters",
        "componentPromises",
        "componentArray",
        "components",
        "index",
        "componentPromise",
        "transformLoadResult",
        "getResult",
        "loadResult",
        "w",
        "n",
        "navigator",
        "w",
        "n",
        "navigator",
        "w",
        "n",
        "navigator",
        "w",
        "n",
        "navigator",
        "w",
        "HTMLElement",
        "Document",
        "w",
        "_a",
        "_b",
        "w",
        "w",
        "w",
        "w",
        "n",
        "navigator",
        "CSS",
        "HTMLButtonElement",
        "s",
        "screen",
        "screenRatio",
        "d",
        "d",
        "isItChromium",
        "isItGecko",
        "w",
        "n",
        "navigator",
        "c",
        "_a",
        "_b",
        "_c",
        "d",
        "iframe",
        "isComplete",
        "resolve",
        "reject",
        "style",
        "checkReadyState",
        "_a",
        "_b",
        "_a",
        "tag",
        "attributes",
        "element",
        "_i",
        "_b",
        "name_1",
        "value",
        "_i",
        "_a",
        "property",
        "match",
        "name_2",
        "value",
        "priority",
        "d",
        "eventName",
        "handleVisibilityChange",
        "sampleRate",
        "cloneCount",
        "stabilizationPrecision",
        "finish",
        "rawFingerprint",
        "fingerprintResult",
        "timeoutPromise",
        "fingerprintPromise",
        "w",
        "AudioContext",
        "baseSignal",
        "context",
        "sourceNode",
        "clonedSignal",
        "fingerprint",
        "targetSampleIndex",
        "context",
        "oscillator",
        "compressor",
        "retryDelay",
        "attemptsLeft",
        "tryRender",
        "renderingPromise",
        "fingerprint",
        "needsDenoising",
        "i",
        "min",
        "Infinity",
        "max",
        "i",
        "value",
        "power",
        "precisionPower",
        "precisionBase",
        "testString",
        "textSize",
        "baseFonts",
        "fontList",
        "_this",
        "holder",
        "spansContainer",
        "defaultWidth",
        "defaultHeight",
        "createSpan",
        "createSpanWithFonts",
        "initializeBaseFontsSpans",
        "initializeFontsSpans",
        "isFontAvailable",
        "baseFontsSpans",
        "fontsSpans",
        "index",
        "span",
        "style",
        "spans",
        "_loop_1",
        "_i",
        "fontList_1",
        "fontList",
        "font",
        "rawPlugins",
        "plugins",
        "i",
        "plugin",
        "mimeTypes",
        "j",
        "mimeType",
        "winding",
        "geometry",
        "text",
        "_a",
        "canvas",
        "context",
        "_b",
        "canvas",
        "textImage1",
        "textImage2",
        "geometryImage",
        "printedText",
        "_i",
        "_a",
        "_b",
        "color",
        "x",
        "y",
        "n",
        "navigator",
        "maxTouchPoints",
        "touchEvent",
        "touchStart",
        "n",
        "navigator",
        "result",
        "language",
        "languages",
        "s",
        "screen",
        "parseDimension",
        "dimensions",
        "screenFrameCheckInterval",
        "roundingPrecision",
        "screenFrameBackup",
        "screenFrameSizeTimeoutId",
        "checkScreenFrame",
        "frameSize",
        "_this",
        "frameSize",
        "_this",
        "screenFrameGetter",
        "frameSize",
        "processSize",
        "s",
        "screen",
        "i",
        "_a",
        "DateTimeFormat",
        "timezone",
        "offset",
        "currentYear",
        "platform",
        "token",
        "visitorID",
        "matches",
        "flavors",
        "_i",
        "_a",
        "key",
        "value",
        "d",
        "result",
        "fromB64",
        "atob",
        "_b",
        "debug",
        "filters",
        "filterNames",
        "allSelectors",
        "blockedSelectors",
        "activeBlockers",
        "_c",
        "selectors",
        "blockedCount",
        "_a",
        "d",
        "root",
        "elements",
        "blockedSelectors",
        "i",
        "element",
        "holder",
        "i",
        "message",
        "_i",
        "_a",
        "filterName",
        "_b",
        "_c",
        "selector",
        "_i",
        "_a",
        "gamut",
        "maxValueToCheck",
        "i",
        "M",
        "fallbackFn",
        "acos",
        "acosh",
        "asin",
        "asinh",
        "atanh",
        "atan",
        "sin",
        "sinh",
        "cos",
        "cosh",
        "tan",
        "tanh",
        "exp",
        "expm1",
        "log1p",
        "powPI",
        "acoshPf",
        "asinhPf",
        "atanhPf",
        "sinhPf",
        "coshPf",
        "expm1Pf",
        "tanhPf",
        "log1pPf",
        "defaultText",
        "presets",
        "elements",
        "sizes",
        "_i",
        "_a",
        "key",
        "_b",
        "_c",
        "style",
        "_d",
        "text",
        "element",
        "_e",
        "_f",
        "name_1",
        "value",
        "_g",
        "_h",
        "key",
        "iframeDocument",
        "iframeBody",
        "bodyStyle",
        "linesOfText",
        "f",
        "u8",
        "ApplePaySession",
        "_a",
        "link",
        "sourceId",
        "STATUS_NO_GL_CONTEXT",
        "STATUS_GET_PARAMETER_NOT_A_FUNCTION",
        "validContextParameters",
        "validExtensionParams",
        "shaderTypes",
        "precisionTypes",
        "rendererInfoExtensionName",
        "polygonModeExtensionName",
        "_b",
        "_c",
        "_d",
        "_e",
        "_f",
        "_g",
        "cache",
        "gl",
        "debugExtension",
        "cache",
        "gl",
        "extensions",
        "contextAttributes",
        "attributes",
        "parameters",
        "extensionParameters",
        "shaderPrecisions",
        "_i",
        "_b",
        "attributeName",
        "constants",
        "_c",
        "constants_1",
        "constants",
        "constant",
        "code",
        "_d",
        "extensions_1",
        "extensions",
        "name_1",
        "extension",
        "_e",
        "_f",
        "constant",
        "code",
        "_g",
        "shaderTypes_1",
        "shaderTypes",
        "shaderType",
        "_h",
        "precisionTypes_1",
        "precisionTypes",
        "precisionType",
        "shaderPrecision",
        "canvas",
        "context",
        "_i",
        "_a",
        "shaderPrecision",
        "keys",
        "publicIp",
        "privateIp",
        "RTCPeerConnection",
        "servers",
        "pc",
        "ip_regex",
        "ip_addrs",
        "lines",
        "sources",
        "commentTemplate",
        "openConfidenceScore",
        "proConfidenceScore",
        "platform",
        "result",
        "_i",
        "_a",
        "componentKey",
        "component",
        "value",
        "visitorIdCache",
        "confidence",
        "jsonData",
        "_i",
        "_a",
        "componentKey",
        "component",
        "jsonData",
        "creationTime",
        "startTime",
        "components",
        "result",
        "components",
        "delayFallback",
        "debug",
        "getComponents",
        "index",
        "murmurX64Hash128",
        "x64hash128",
        "urlParams",
        "token",
        "referer"
    ],
    "comments": [
        "global Reflect, Promise",
        "The function `requestIdleCallback` loses the binding to `window` here.",
        "`globalThis` isn't always equal `window` (see https://github.com/fingerprintjs/fingerprintjs/issues/683).",
        "Therefore, an error can occur. `call(window,` prevents the error.",
        "break",
        "break",
        "Allows asynchronous actions and microtasks to happen",
        "yield",
        "Allows asynchronous actions and microtasks to happen",
        "break",
        "return",
        "Sometimes when a number is multiplied by a small number, precision is lost,",
        "for example 1234 * 0.0001 === 0.12340000000000001, and it's more precise divide: 1234 / (1 / 0.0001) === 0.1234.",
        "Benchmark: https://jsbench.me/b6klaaxgwq/1",
        "If you want to just count bytes, see solutions at https://jsbench.me/ehklab415e/1",
        "`charCode` is faster than encoding, so we prefer that when it's possible",
        "In case of non-ASCII symbols we use proper encoding",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "fallthrough",
        "`awaitIfAsync` is used instead of just `await` in order to measure the duration of synchronous sources",
        "correctly (other microtasks won't affect the duration).",
        "Source loading failed",
        "Source loaded with the final result",
        "Source loaded with \"get\" stage",
        "Source getting failed",
        "Source getting succeeded",
        "Using `mapWithBreaks` allows asynchronous sources to complete between synchronous sources",
        "and measure the duration correctly",
        "yield",
        "yield",
        "yield",
        "Keeping the component keys order the same as the source keys order",
        "return",
        "The properties are checked to be in IE 10, IE 11 and not to be in other browsers in October 2020",
        "Based on research in October 2020",
        "Based on research in October 2020. Tested to detect Chromium 42-86.",
        "Based on research in September 2020",
        "Checked in Safari and DuckDuckGo",
        "Checked in Safari, Chrome, Firefox, Yandex, UC Browser, Opera, Edge and DuckDuckGo.",
        "iOS Safari and Chrome were checked on iOS 11-17. DuckDuckGo was checked on iOS 17 and macOS 14.",
        "Desktop Safari versions 12-17 were checked.",
        "The other browsers were checked on iOS 17; there was no chance to check them on the other OS versions.",
        "Chrome, Firefox, Yandex, DuckDuckGo macOS, Edge",
        "Incorrect in Safari <= 14 (iOS and macOS)",
        "Incorrect in desktop Safari and iOS Safari <= 15",
        "Based on research in September 2020",
        "Checked in Chrome 85 vs Chrome 86 both on desktop and Android",
        "Checked in Safari 9–17",
        "Checked on:",
        "Safari on iPadOS (both mobile and desktop modes): 8, 11-17",
        "Chrome on iPadOS (both mobile and desktop modes): 11-17",
        "Safari on iOS (both mobile and desktop modes): 9-17",
        "Chrome on iOS (both mobile and desktop modes): 9-17",
        "Before iOS 13. Safari tampers the value in \"request desktop site\" mode since iOS 13.",
        "iPhone 4S that runs iOS 9 matches this, but it is not supported",
        "`call` is required because the function throws an error without a proper \"this\" context",
        "Chrome removes all words \"Android\" from `navigator` when desktop version is requested",
        "Firefox keeps \"Android\" in `navigator.appVersion` when desktop version is requested",
        "`typechange` is deprecated, but it's still present on Android (tested on Chrome Mobile 117)",
        "Removal proposal https://bugs.chromium.org/p/chromium/issues/detail?id=699892",
        "Note: this expression returns true on ChromeOS, so additional detectors are required to avoid false-positives",
        "Only 2 browser engines are presented on Android.",
        "Actually, there is also Android 4.1 browser, but it's not worth detecting it at the moment.",
        "break",
        "yield",
        "break",
        "yield",
        "Required for browsers to calculate the layout",
        "WebKit in WeChat doesn't fire the iframe's `onload` for some reason.",
        "This code checks for the loading state manually.",
        "See https://github.com/fingerprintjs/fingerprintjs/issues/645",
        "The ready state may never become 'complete' in Firefox despite the 'load' event being fired.",
        "So an infinite setTimeout loop can happen without this check.",
        "See https://github.com/fingerprintjs/fingerprintjs/pull/716#issuecomment-986898796",
        "Make sure iframe.contentWindow and iframe.contentWindow.document are both loaded",
        "The contentWindow.document can miss in JSDOM (https://github.com/jsdom/jsdom).",
        "break",
        "yield",
        "break",
        "yield",
        "return",
        "endfinally",
        "return",
        "Changing the `style` attribute can cause a CSP error, therefore we change the `style.cssText` property.",
        "https://github.com/fingerprintjs/fingerprintjs/issues/733",
        "We don't use `style.cssText` because browsers must block it when no `unsafe-eval` CSP is presented: https://csplite.com/csp145/#w3c_note",
        "Even though the browsers ignore this standard, we don't use `cssText` just in case.",
        "The last argument can't be undefined in IE11",
        "yield",
        "return",
        "yield",
        "return",
        "SpecialFingerprint.Timeout",
        "return",
        "SpecialFingerprint.NotSupported",
        "In some browsers, audio context always stays suspended unless the context is started in response to a user action",
        "(e.g. a click or a tap). It prevents audio fingerprint from being taken at an arbitrary moment of time.",
        "Such browsers are old and unpopular, so the audio fingerprinting is just skipped in them.",
        "See a similar case explanation at https://stackoverflow.com/questions/46363048/onaudioprocess-not-called-on-ios11#46534088",
        "return",
        "SpecialFingerprint.KnownForSuspending",
        "yield",
        "return",
        "SpecialFingerprint.Timeout",
        "yield",
        "return",
        "SpecialFingerprint.Timeout",
        "return",
        "The fingerprint is made positive to avoid confusion with the special fingerprints",
        "Mobile Safari 11 and older",
        "yield",
        "return",
        "`context.startRendering` has two APIs: Promise and callback, we check that it's really a promise just in case",
        "Suppresses all unhandled rejections in case of scheduled redundant retries after successful rendering",
        "Sometimes the audio context doesn't start after calling `startRendering` (in addition to the cases where",
        "audio context doesn't start at all). A known case is starting an audio context when the browser tab is in",
        "background on iPhone. Retries usually help in this case.",
        "The audio context can reject starting until the tab is in foreground. Long fingerprint duration",
        "in background isn't a problem, therefore the retry attempts don't count in background. It can lead to",
        "a situation when a fingerprint takes very long time and finishes successfully. FYI, the audio context",
        "can be suspended when `document.hidden === false` and start running after a retry.",
        "The looped buffer source works incorrectly in old Safari versions (>14 desktop, >15 mobile).",
        "The looped signal contains only 0s. To fix it, the loop start should be `baseSignal.length - 1.00000000001` and",
        "the loop end should be `baseSignal.length + 0.00000000001` (there can be 10 or 11 0s after the point). But this",
        "solution breaks the looped signal in other browsers. Instead of checking the browser version, we check that the",
        "looped signals comprises only 0s, and if it does, we return the last value of the base signal, because old Safari",
        "versions don't add noise that we want to cancel.",
        "In very rare cases the signal is 0 on a short range for some reason. Ignoring such samples.",
        "We use m or w because these two characters take up the maximum width.",
        "And we use a LLi so that the same matching fonts can get separated.",
        "We test using 48px font size, we may use any size. I guess larger the better.",
        "A font will be compared against all the three default fonts.",
        "And if for any default fonts it doesn't match, then that font is available.",
        "This is android-specific font from \"Roboto\" family",
        "kudos to http://www.lalit.org/lab/javascript-css-font-detect/",
        "Running the script in an iframe makes it not affect the page look and not be affected by the page CSS. See:",
        "https://github.com/fingerprintjs/fingerprintjs/issues/592",
        "https://github.com/fingerprintjs/fingerprintjs/issues/628",
        "Stores {fontName : [spans for that font]}",
        "add all the spans to the DOM",
        "yield",
        "get the default width for the three base fonts",
        "get the default width for the three base fonts",
        "width for the default font",
        "height for the default font",
        "check available fonts",
        "return",
        "Safari 10 doesn't support iterating navigator.plugins with for...of",
        "break",
        "ImageStatus.Unsupported",
        "break",
        "break",
        "ImageStatus.Skipped",
        "break",
        "yield",
        "return",
        "https://web.archive.org/web/20170825024655/http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/",
        "https://github.com/Modernizr/Modernizr/blob/master/feature-detects/canvas/winding.js",
        "yield",
        "It's slightly faster to double-encode the text image",
        "Some browsers add a noise to the canvas: https://github.com/fingerprintjs/fingerprintjs/issues/791",
        "The canvas is excluded from the fingerprint in this case",
        "return",
        "ImageStatus.Unstable",
        "ImageStatus.Unstable",
        "Text is unstable:",
        "https://github.com/fingerprintjs/fingerprintjs/issues/583",
        "https://github.com/fingerprintjs/fingerprintjs/issues/103",
        "Therefore it's extracted into a separate image.",
        "yield",
        "return",
        "Resizing the canvas cleans it",
        "It's important to use explicit built-in fonts in order to exclude the affect of font preferences",
        "(there is a separate entropy source for them).",
        "The choice of emojis has a gigantic impact on rendering performance (especially in FF).",
        "Some newer emojis cause it to slow down 50-200 times.",
        "There must be no text to the right of the emoji, see https://github.com/fingerprintjs/fingerprintjs/issues/574",
        "A bare emoji shouldn't be used because the canvas will change depending on the script encoding:",
        "https://github.com/fingerprintjs/fingerprintjs/issues/66",
        "Escape sequence shouldn't be used too because Terser will turn it into a bare unicode.",
        "😃",
        "Resizing the canvas cleans it",
        "Canvas blending",
        "https://web.archive.org/web/20170826194121/http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/",
        "http://jsfiddle.net/NDYV8/16/",
        "Canvas winding",
        "https://web.archive.org/web/20130913061632/http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/",
        "http://jsfiddle.net/NDYV8/19/",
        "Safari 17",
        "Starting from Chromium 86, there is only a single value in `navigator.language` in Incognito mode:",
        "the value of `navigator.language`. Therefore the value is ignored in this browser.",
        "`navigator.deviceMemory` is a string containing a number in some unidentified cases",
        "Some browsers return screen resolution as strings, e.g. \"1200\", instead of a number, e.g. 1200.",
        "I suspect it's done by certain plugins that randomize browser properties to prevent fingerprinting.",
        "Some browsers even return  screen resolution as not numbers.",
        "The type is readonly to protect from unwanted mutations",
        "break",
        "return",
        "break",
        "Some browsers set the screen frame to zero when programmatic fullscreen is on.",
        "There is a chance of getting a non-zero frame after exiting the fullscreen.",
        "See more on this at https://github.com/fingerprintjs/fingerprintjs/issues/568",
        "yield",
        "Some browsers set the screen frame to zero when programmatic fullscreen is on.",
        "There is a chance of getting a non-zero frame after exiting the fullscreen.",
        "See more on this at https://github.com/fingerprintjs/fingerprintjs/issues/568",
        "return",
        "yield",
        "It might look like I don't know about `for` and `map`.",
        "In fact, such code is used to avoid TypeScript issues without using `as`.",
        "return",
        "Some browsers return screen resolution as strings, e.g. \"1200\", instead of a number, e.g. 1200.",
        "I suspect it's done by certain plugins that randomize browser properties to prevent fingerprinting.",
        "",
        "Some browsers (IE, Edge ≤18) don't provide `screen.availLeft` and `screen.availTop`. The property values are",
        "replaced with 0 in such cases to not lose the entropy from `screen.availWidth` and `screen.availHeight`.",
        "sometimes hardware concurrency is a string",
        "For browsers that don't support timezone names",
        "The minus is intentional because the JS offset is opposite to the real offset",
        "The timezone offset may change over time due to daylight saving time (DST) shifts.",
        "The non-DST timezone offset is used as the result timezone offset.",
        "Since the DST season differs in the northern and the southern hemispheres,",
        "both January and July timezones offsets are considered.",
        "`getTimezoneOffset` returns a number as a string in some unidentified cases",
        "SecurityError when referencing it means it exists",
        "https://bugzilla.mozilla.org/show_bug.cgi?id=781447",
        "SecurityError when referencing it means it exists",
        "IE and Edge don't allow accessing indexedDB in private mode, therefore IE and Edge will have different",
        "visitor identifier in normal and private modes.",
        "SecurityError when referencing it means it exists",
        "Android Chrome 86 and 87 and Android Firefox 80 and 84 don't mock the platform value when desktop mode is requested",
        "iOS mocks the platform value when desktop version is requested: https://github.com/fingerprintjs/fingerprintjs/issues/514",
        "iPad uses desktop mode by default since iOS 13",
        "The value is 'MacIntel' on M1 Macs",
        "The value is 'iPhone' on iPod Touch",
        "Blink and some browsers on iOS",
        "Safari on macOS",
        "Chrome on iOS (checked in 85 on 13 and 87 on 14)",
        "Yandex Browser on iOS, macOS and Android (checked in 21.2 on iOS 14, macOS and Android)",
        "Yandex Browser on iOS (checked in 21.2 on 14)",
        "Firefox on iOS (checked in 32 on 14)",
        "Edge on iOS (checked in 46 on 14)",
        "Opera Touch on iOS (checked in 2.6 on 14)",
        "Samsung Internet on Android (checked in 11.1)",
        "UC Browser on Android (checked in 12.10 and 13.0)",
        "Puffin on Android (checked in 9.0)",
        "UC on iOS and Opera on Android have no specific global variables",
        "Edge for Android isn't checked",
        "Taken from here: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cookies.js",
        "navigator.cookieEnabled cannot detect custom or nuanced cookie blocking configurations. For example, when blocking",
        "cookies via the Advanced Privacy Settings in IE9, it always returns true. And there have been issues in the past",
        "with site-specific exceptions. Don't rely on it.",
        "try..catch because some in situations `document.cookie` is exposed but throws a",
        "SecurityError if you try to access it; e.g. documents created from data URIs",
        "or in sandboxed iframes (depending on flags/context)",
        "Create cookie",
        "Delete cookie",
        "Just for better minification",
        "return",
        "yield",
        "return",
        "Safari (desktop and mobile) and all Android browsers keep content blockers in both regular and private mode",
        "Set() isn't used just in case somebody need older browser support",
        "First create all elements that can be blocked. If the DOM steps below are done in a single cycle,",
        "browser will alternate tree modification and layout reading, that is very slow.",
        "Protects from unwanted effects of `+` and `~` selectors of filters",
        "break",
        "yield",
        "break",
        "yield",
        "Then check which of the elements are blocked",
        "Then remove the elements",
        "return",
        "console.log is ok here because it's under a debug clause",
        "eslint-disable-next-line no-console",
        "rec2020 includes p3 and p3 includes srgb",
        "The media feature isn't supported by the browser",
        "A variation of binary search algorithm can be used here.",
        "But since expected values are very small (≤10), there is no sense in adding the complexity.",
        "ContrastPreference.None",
        "The sources contradict on the keywords. Probably 'high' and 'low' will never be implemented.",
        "Need to check it when all browsers implement the feature.",
        "ContrastPreference.More",
        "ContrastPreference.Less",
        "ContrastPreference.ForcedColors",
        "To reduce the minified code size",
        "Native operations",
        "Operation polyfills",
        "Note: constant values are empirical",
        "OS font on macOS. User can change its size and weight. Applies after Safari restart.",
        "User can change it in desktop Chrome and desktop Firefox.",
        "User can change it in desktop Chrome and desktop Firefox.",
        "User can change it in desktop Chrome and desktop Firefox.",
        "Tells one OS from another in desktop Chrome.",
        "First create all elements to measure. If the DOM steps below are done in a single cycle,",
        "browser will alternate tree modification and layout reading, that is very slow.",
        "Then measure the created elements",
        "See the big comment above",
        "See the big comment above",
        "ApplePayState.NoAPI",
        "ApplePayState.Enabled",
        "ApplePayState.Disabled",
        "See full expected error messages in the test",
        "ApplePayState.NotAvailableInInsecureContext",
        "ApplePayState.NotAvailableInFrame",
        "ApplePayState.NotAvailableInFrame",
        "WebGl context is not available",
        "WebGL context `getParameter` method is not a function",
        "SAMPLE_ALPHA_TO_COVERAGE (32926) and SAMPLE_COVERAGE (32928) are excluded because they trigger a console warning",
        "in IE, Chrome ≤ 59 and Safari ≤ 13 and give no entropy.",
        "MAX_VIEWS_OVR",
        "Features",
        "Context attributes",
        "Context parameters",
        "Extension parameters",
        "Shader precision",
        "Postprocess",
        "Ok, continue",
        "eslint-disable-next-line @typescript-eslint/no-explicit-any",
        "local IPs",
        "compatibility for firefox and chrome",
        "|| window.mozRTCPeerConnection || window.webkitRTCPeerConnection",
        "bypass naive webrtc blocking using an iframe",
        "if (!RTCPeerConnection) {",
        "const webRTCIFrame = document.getElementById('webRTCIFrame') as HTMLIFrameElement",
        "if (webRTCIFrame != null) {",
        "const win = webRTCIFrame.contentWindow",
        "if (win != null) {",
        "RTCPeerConnection = win.RTCPeerConnection || win.mozRTCPeerConnection || win.webkitRTCPeerConnection",
        "}",
        "}",
        "}",
        "minimal requirements for data connection",
        "const mediaConstraints = { optional: [{ RtpDataChannels: true }] }",
        "construct a new RTCPeerConnection",
        ", mediaConstraints)",
        "match just the IP address",
        "listen for candidate events",
        "skip non-candidate events",
        "create a bogus data channel",
        "create an offer sdp",
        "trigger the stun server request",
        "wait for a while to let everything done",
        "read candidate info from local description",
        "READ FIRST:",
        "See https://github.com/fingerprintjs/fingerprintjs/blob/master/contributing.md#how-to-make-an-entropy-source",
        "to learn how entropy source works and how to make your own.",
        "The sources run in this exact order.",
        "The asynchronous sources are at the start to run in parallel with other sources.",
        "Some sources can affect other sources (e.g. WebGL can affect canvas), so it's important to run these sources",
        "after other sources.",
        "In order to calculate the true probability of the visitor identifier being correct, we need to know the number of",
        "website visitors (the higher the number, the less the probability because the fingerprint entropy is limited).",
        "JS agent doesn't know the number of visitors, so we can only do an approximate assessment.",
        "Safari (mobile and desktop)",
        "Windows",
        "The score is greater than on macOS because of the higher variety of devices running Windows.",
        "Chrome provides more entropy than Firefox according too",
        "https://netmarketshare.com/browser-market-share.aspx?options=%7B%22filter%22%3A%7B%22%24and%22%3A%5B%7B%22platform%22%3A%7B%22%24in%22%3A%5B%22Windows%22%5D%7D%7D%5D%7D%2C%22dateLabel%22%3A%22Trend%22%2C%22attributes%22%3A%22share%22%2C%22group%22%3A%22browser%22%2C%22sort%22%3A%7B%22share%22%3A-1%7D%2C%22id%22%3A%22browsersDesktop%22%2C%22dateInterval%22%3A%22Monthly%22%2C%22dateStart%22%3A%222019-11%22%2C%22dateEnd%22%3A%222020-10%22%2C%22segments%22%3A%22-1000%22%7D",
        "So we assign the same score to them.",
        "macOS",
        "Chrome provides more entropy than Safari and Safari provides more entropy than Firefox.",
        "Chrome is more popular than Safari and Safari is more popular than Firefox according to",
        "https://netmarketshare.com/browser-market-share.aspx?options=%7B%22filter%22%3A%7B%22%24and%22%3A%5B%7B%22platform%22%3A%7B%22%24in%22%3A%5B%22Mac%20OS%22%5D%7D%7D%5D%7D%2C%22dateLabel%22%3A%22Trend%22%2C%22attributes%22%3A%22share%22%2C%22group%22%3A%22browser%22%2C%22sort%22%3A%7B%22share%22%3A-1%7D%2C%22id%22%3A%22browsersDesktop%22%2C%22dateInterval%22%3A%22Monthly%22%2C%22dateStart%22%3A%222019-11%22%2C%22dateEnd%22%3A%222020-10%22%2C%22segments%22%3A%22-1000%22%7D",
        "So we assign the same score to them.",
        "Another platform, e.g. a desktop Linux. It's rare, so it should be pretty unique.",
        "This function runs very fast, so there is no need to make it lazy",
        "A plain class isn't used because its getters and setters aren't enumerable.",
        "const jsonStr = JSON.stringify(jsonData)",
        "const url = 'https://---serverDomain---/api/fpjs/retrieve'",
        "fetch(url, {",
        "method: 'POST',",
        "body: jsonStr,",
        "headers: new Headers({",
        "'Content-Type': 'application/text',",
        "}),",
        "})",
        ".then((resp) => {",
        "if (resp.ok) {",
        "resp.text().then((text) => {",
        "localStorage.setItem('visitorID', text)",
        "const expires = new Date(Date.now() + 24 * 365 * 60 * 60 * 1000)",
        "const cookiestr =",
        "'_fpjsvid=' +",
        "text +",
        "';expires=' +",
        "expires.toUTCString() +",
        "';domain=' +",
        "location.host +",
        "';path=/;SameSite=Lax'",
        "document.cookie = cookiestr",
        "const ref = localStorage.getItem(\"referer\")",
        "if (ref != null) {",
        "const refUrl = new URL(ref)",
        "parent.postMessage(\"fpjsDone\", refUrl.origin)",
        "}",
        "})",
        "}",
        "})",
        ".catch((error) => {",
        "console.log(error)",
        "parent.postMessage(\"fpjsDone\", location.href)",
        "})",
        "A proper deadline is unknown. Let it be twice the fallback timeout so that both cases have the same average time.",
        "yield",
        "console.log is ok here because it's under a debug clause",
        "eslint-disable-next-line no-console",
        "return",
        "yield",
        "return",
        "yield",
        "return",
        "The default export is a syntax sugar (`import * as FP from '...' → import FP from '...'`).",
        "It should contain all the public exported values.",
        "The exports below are for private usage. They may change unexpectedly. Use them at your own risk.",
        "Not documented, out of Semantic Versioning, usage is at your own risk"
    ],
    "docstrings": [
        "* FingerprintJS v4.3.0 - Copyright (c) FingerprintJS, Inc, 2024 (https://fingerprint.com)\n *\n * Licensed under Business Source License 1.1 https://mariadb.com/bsl11/\n * Licensor: FingerprintJS, Inc.\n * Licensed Work: FingerprintJS browser fingerprinting library\n * Additional Use Grant: None\n * Change Date: Four years from first release for the specific version.\n * Change License: MIT, text at https://opensource.org/license/mit/ with the following copyright notice:\n * Copyright 2015-present FingerprintJS, Inc.",
        "****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    *****************************************************************************",
        "* Allows asynchronous actions and microtasks to happen.",
        "* Calls a maybe asynchronous function without creating microtasks when the function is synchronous.\n     * Catches errors in both cases.\n     *\n     * If just you run a code like this:\n     * ```\n     * console.time('Action duration')\n     * await action()\n     * console.timeEnd('Action duration')\n     * ```\n     * The synchronous function time can be measured incorrectly because another microtask may run before the `await`\n     * returns the control back to the code.",
        "* If you run many synchronous tasks without using this function, the JS main loop will be busy and asynchronous tasks\n     * (e.g. completing a network request, rendering the page) won't be able to happen.\n     * This function allows running many synchronous tasks such way that asynchronous tasks can run too in background.",
        "* Makes the given promise never emit an unhandled promise rejection console warning.\n     * The promise will still pass errors to the next promises.\n     *\n     * Otherwise, promise emits a console warning unless it has a `catch` listener.",
        "* This file contains functions to work with pure data only (no browser features, DOM, side effects, etc).",
        "* Does the same as Array.prototype.includes but has better typing",
        "* Like `!includes()` but with proper typing",
        "* Be careful, NaN can return",
        "* Be careful, NaN can return",
        "* Parses a CSS selector into tag name with HTML attributes.\n     * Only single element selector are supported (without operators like space, +, >, etc).\n     *\n     * Multiple values can be returned for each attribute. You decide how to handle them.",
        "* Converts a string to UTF8 bytes",
        "* Based on https://github.com/karanlyons/murmurHash3.js/blob/a33d0723127e2e5415056c455f8aed2451ace208/murmurHash3.js",
        "* Adds two 64-bit values (provided as tuples of 32-bit values)\n     * and updates (mutates) first value to write the result",
        "* Multiplies two 64-bit values (provided as tuples of 32-bit values)\n     * and updates (mutates) first value to write the result",
        "* Provides left rotation of the given int64 value (provided as tuple of two int32)\n     * by given number of bits. Result is written back to the value",
        "* Provides a left shift of the given int32 value (provided as tuple of [0, int32])\n     * by given number of bits. Result is written back to the value",
        "* Provides a XOR of the given int64 values(provided as tuple of two int32).\n     * Result is written back to the first value",
        "* Calculates murmurHash3's final x64 mix of that block and writes result back to the input value.\n     * (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n     * only place where we need to right shift 64bit ints.)",
        "* Given a string and an optional seed as an int, returns a 128 bit\n     * hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n     * All internal functions mutates passed value to achieve minimal memory allocations and GC load\n     *\n     * Benchmark https://jsbench.me/p4lkpaoabi/1",
        "* Converts an error object to a plain object that can be used with `JSON.stringify`.\n     * If you just run `JSON.stringify(error)`, you'll get `'{}'`.",
        "* Loads the given entropy source. Returns a function that gets an entropy component from the source.\n     *\n     * The result is returned synchronously to prevent `loadSources` from\n     * waiting for one source to load before getting the components from the other sources.",
        "* Loads the given entropy sources. Returns a function that collects the entropy components.\n     *\n     * The result is returned synchronously in order to allow start getting the components\n     * before the sources are loaded completely.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Modifies an entropy source by transforming its returned value with the given function.\n     * Keeps the source properties: sync/async, 1/2 stages.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Functions to help with features that vary through browsers",
        "* Checks whether the browser is based on Trident (the Internet Explorer engine) without using user-agent.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether the browser is based on EdgeHTML (the pre-Chromium Edge engine) without using user-agent.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether the browser is based on Chromium without using user-agent.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether the browser is based on mobile or desktop Safari without using user-agent.\n     * All iOS browsers use WebKit (the Safari engine).\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether this WebKit browser is a desktop browser.\n     * It doesn't check that the browser is based on WebKit, there is a separate function for this.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether this WebKit browser is Safari.\n     * It doesn't check that the browser is based on WebKit, there is a separate function for this.\n     *\n     * Warning! The function works properly only for Safari version 15 and newer.",
        "* Checks whether the browser is based on Gecko (Firefox engine) without using user-agent.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether the browser is based on Chromium version ≥86 without using user-agent.\n     * It doesn't check that the browser is based on Chromium, there is a separate function for this.",
        "* Checks whether the browser is based on WebKit version ≥606 (Safari ≥12) without using user-agent.\n     * It doesn't check that the browser is based on WebKit, there is a separate function for this.\n     *\n     * @see https://en.wikipedia.org/wiki/Safari_version_history#Release_history Safari-WebKit versions map",
        "* Checks whether the browser is based on WebKit version ≥616 (Safari ≥17) without using user-agent.\n     * It doesn't check that the browser is based on WebKit, there is a separate function for this.\n     *\n     * @see https://developer.apple.com/documentation/safari-release-notes/safari-17-release-notes Safari 17 release notes\n     * @see https://tauri.app/v1/references/webview-versions/#webkit-versions-in-safari Safari-WebKit versions map",
        "* Checks whether the device is an iPad.\n     * It doesn't check that the engine is WebKit and that the WebKit isn't desktop.",
        "* Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether the device runs on Android without using user-agent.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Creates and keeps an invisible iframe while the given function runs.\n     * The given function is called when the iframe is loaded and has a body.\n     * The iframe allows to measure DOM sizes inside itself.\n     *\n     * Notice: passing an initial HTML code doesn't work in IE.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Creates a DOM element that matches the given selector.\n     * Only single element selector are supported (without operators like space, +, >, etc).",
        "* Adds CSS styles from a string in such a way that doesn't trigger a CSP warning (unsafe-inline or unsafe-eval)",
        "* The returned promise resolves when the tab becomes visible (in foreground).\n     * If the tab is already visible, resolves immediately.",
        "* A version of the entropy source with stabilization to make it suitable for static fingerprinting.\n     * Audio signal is noised in private mode of Safari 17.",
        "* A version of the entropy source without stabilization.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks if the current browser is known for always suspending audio context.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Produces an arbitrary audio signal",
        "* Renders the given audio context with configured nodes.\n     * Returns `null` when the rendering runs out of attempts.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Calculates the middle between the minimum and the maximum array item",
        "* Truncates some digits of the number to make it stable.\n     * `precision` is the number of significant digits to keep. The number may be not integer:\n     *  - If it ends with `.2`, the last digit is rounded to the nearest multiple of 5;\n     *  - If it ends with `.5`, the last digit is rounded to the nearest even number;",
        "* @see https://www.browserleaks.com/canvas#how-does-it-work\n     *\n     * A version of the entropy source with stabilization to make it suitable for static fingerprinting.\n     * Canvas image is noised in private mode of Safari 17, so image rendering is skipped in Safari 17.",
        "* A version of the entropy source without stabilization.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks if the current browser is known for applying anti-fingerprinting measures in all or some critical modes",
        "* This is a crude and primitive touch screen detection. It's not possible to currently reliably detect the availability\n     * of a touch screen with a JS, without actually subscribing to a touch event.\n     *\n     * @see http://www.stucox.com/blog/you-cant-detect-a-touchscreen/\n     * @see https://github.com/Modernizr/Modernizr/issues/548",
        "* A version of the entropy source with stabilization to make it suitable for static fingerprinting.\n     * The window resolution is always the document size in private mode of Safari 17,\n     * so the window resolution is not used in Safari 17.",
        "* A version of the entropy source without stabilization.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Starts watching the screen frame size. When a non-zero size appears, the size is saved and the watch is stopped.\n     * Later, when `getScreenFrame` runs, it will return the saved non-zero size if the current size is null.\n     *\n     * This trick is required to mitigate the fact that the screen frame turns null in some cases.\n     * See more on this at https://github.com/fingerprintjs/fingerprintjs/issues/568",
        "* A version of the entropy source without stabilization.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* A version of the entropy source with stabilization to make it suitable for static fingerprinting.\n     *\n     * Sometimes the available screen resolution changes a bit, e.g. 1900x1440 → 1900x1439. A possible reason: macOS Dock\n     * shrinks to fit more icons when there is too little space. The rounding is used to mitigate the difference.\n     *\n     * The frame width is always 0 in private mode of Safari 17, so the frame is not used in Safari 17.",
        "* Checks for browser-specific (not engine specific) global variables to tell browsers with the same engine apart.\n     * Only somewhat popular browsers are considered.",
        "* navigator.cookieEnabled cannot detect custom or nuanced cookie blocking configurations. For example, when blocking\n     * cookies via the Advanced Privacy Settings in IE9, it always returns true. And there have been issues in the past with\n     * site-specific exceptions. Don't rely on it.\n     *\n     * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cookies.js Taken from here",
        "* Only single element selector are supported (no operators like space, +, >, etc).\n     * `embed` and `position: fixed;` will be considered as blocked anyway because it always has no offsetParent.\n     * Avoid `iframe` and anything with `[src=]` because they produce excess HTTP requests.\n     *\n     * The \"inappropriate\" selectors are obfuscated. See https://github.com/fingerprintjs/fingerprintjs/issues/734.\n     * A function is used instead of a plain object to help tree-shaking.\n     *\n     * The function code is generated automatically. See docs/content_blockers.md to learn how to make the list.",
        "* The order of the returned array means nothing (it's always sorted alphabetically).\n     *\n     * Notice that the source is slightly unstable.\n     * Safari provides a 2-taps way to disable all content blockers on a page temporarily.\n     * Also content blockers can be disabled permanently for a domain, but it requires 4 taps.\n     * So empty array shouldn't be treated as \"no blockers\", it should be treated as \"no signal\".\n     * If you are a website owner, don't make your visitors want to disable content blockers.",
        "* @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/color-gamut",
        "* @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/inverted-colors",
        "* @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors",
        "* If the display is monochrome (e.g. black&white), the value will be ≥0 and will mean the number of bits per pixel.\n     * If the display is not monochrome, the returned value will be 0.\n     * If the browser doesn't support this feature, the returned value will be undefined.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/monochrome",
        "* @see https://www.w3.org/TR/mediaqueries-5/#prefers-contrast\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast",
        "* @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion",
        "* @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-transparency",
        "* @see https://www.w3.org/TR/mediaqueries-5/#dynamic-range",
        "* @see https://gitlab.torproject.org/legacy/trac/-/issues/13018\n     * @see https://bugzilla.mozilla.org/show_bug.cgi?id=531915",
        "* We use m or w because these two characters take up the maximum width.\n     * Also there are a couple of ligatures.",
        "* Settings of text blocks to measure. The keys are random but persistent words.",
        "* The default font. User can change it in desktop Chrome, desktop Firefox, IE 11,\n         * Android Chrome (but only when the size is ≥ than the default) and Android Firefox.",
        "* Check the smallest allowed font size. User can change it in desktop Chrome, desktop Firefox and desktop Safari.\n         * The height can be 0 in Chrome on a retina display.",
        "* The result is a dictionary of the width of the text samples.\n     * Heights aren't included because they give no extra entropy and are unstable.\n     *\n     * The result is very stable in IE 11, Edge 18 and Safari 14.\n     * The result changes when the OS pixel density changes in Chromium 87. The real pixel density is required to solve,\n     * but seems like it's impossible: https://stackoverflow.com/q/1713771/1118709.\n     * The \"min\" and the \"mono\" (only on Windows) value may change when the page is zoomed in Firefox 87.",
        "* Creates a DOM environment that provides the most natural font available, including Android OS font.\n     * Measurements of the elements are zoom-independent.\n     * Don't put a content to measure inside an absolutely positioned element.",
        "* Requirements for Android Chrome to apply the system font size to a text inside an iframe:\n         * - The iframe mustn't have a `display: none;` style;\n         * - The text mustn't be positioned absolutely;\n         * - The text block must be wide enough.\n         *   2560px on some devices in portrait orientation for the biggest font size option (32px);\n         * - There must be much enough text to form a few lines (I don't know the exact numbers);\n         * - The text must have the `text-size-adjust: none` style. Otherwise the text will scale in \"Desktop site\" mode;\n         *\n         * Requirements for Android Firefox to apply the system font size to a text inside an iframe:\n         * - The iframe document must have a header: `<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />`.\n         *   The only way to set it is to use the `srcdoc` attribute of the iframe;\n         * - The iframe content must get loaded before adding extra content with JavaScript;\n         *\n         * https://example.com as the iframe target always inherits Android font settings so it can be used as a reference.\n         *\n         * Observations on how page zoom affects the measurements:\n         * - macOS Safari 11.1, 12.1, 13.1, 14.0: zoom reset + offsetWidth = 100% reliable;\n         * - macOS Safari 11.1, 12.1, 13.1, 14.0: zoom reset + getBoundingClientRect = 100% reliable;\n         * - macOS Safari 14.0: offsetWidth = 5% fluctuation;\n         * - macOS Safari 14.0: getBoundingClientRect = 5% fluctuation;\n         * - iOS Safari 9, 10, 11.0, 12.0: haven't found a way to zoom a page (pinch doesn't change layout);\n         * - iOS Safari 13.1, 14.0: zoom reset + offsetWidth = 100% reliable;\n         * - iOS Safari 13.1, 14.0: zoom reset + getBoundingClientRect = 100% reliable;\n         * - iOS Safari 14.0: offsetWidth = 100% reliable;\n         * - iOS Safari 14.0: getBoundingClientRect = 100% reliable;\n         * - Chrome 42, 65, 80, 87: zoom 1/devicePixelRatio + offsetWidth = 1px fluctuation;\n         * - Chrome 42, 65, 80, 87: zoom 1/devicePixelRatio + getBoundingClientRect = 100% reliable;\n         * - Chrome 87: offsetWidth = 1px fluctuation;\n         * - Chrome 87: getBoundingClientRect = 0.7px fluctuation;\n         * - Firefox 48, 51: offsetWidth = 10% fluctuation;\n         * - Firefox 48, 51: getBoundingClientRect = 10% fluctuation;\n         * - Firefox 52, 53, 57, 62, 66, 67, 68, 71, 75, 80, 84: offsetWidth = width 100% reliable, height 10% fluctuation;\n         * - Firefox 52, 53, 57, 62, 66, 67, 68, 71, 75, 80, 84: getBoundingClientRect = width 100% reliable, height 10%\n         *   fluctuation;\n         * - Android Chrome 86: haven't found a way to zoom a page (pinch doesn't change layout);\n         * - Android Firefox 84: font size in accessibility settings changes all the CSS sizes, but offsetWidth and\n         *   getBoundingClientRect keep measuring with regular units, so the size reflects the font size setting and doesn't\n         *   fluctuate;\n         * - IE 11, Edge 18: zoom 1/devicePixelRatio + offsetWidth = 100% reliable;\n         * - IE 11, Edge 18: zoom 1/devicePixelRatio + getBoundingClientRect = reflects the zoom level;\n         * - IE 11, Edge 18: offsetWidth = 100% reliable;\n         * - IE 11, Edge 18: getBoundingClientRect = 100% reliable;",
        "* Unlike most other architectures, on x86/x86-64 when floating-point instructions\n     * have no NaN arguments, but produce NaN output, the output NaN has sign bit set.\n     * We use it to distinguish x86/x86-64 from other architectures, by doing subtraction\n     * of two infinities (must produce NaN per IEEE 754 standard).\n     *\n     * See https://codebrowser.bddppq.com/pytorch/pytorch/third_party/XNNPACK/src/init.c.html#79",
        "* The return type is a union instead of the enum, because it's too challenging to embed the const enum into another\n     * project. Turning it into a union is a simple and an elegant solution.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* Checks whether the Safari's Privacy Preserving Ad Measurement setting is on.\n     * The setting is on when the value is not undefined.\n     * A.k.a. private click measurement, privacy-preserving ad attribution.\n     *\n     * Unfortunately, it doesn't work in mobile Safari.\n     * Probably, it will start working in mobile Safari or stop working in desktop Safari later.\n     * We've found no way to detect the setting state in mobile Safari. Help wanted.\n     *\n     * @see https://webkit.org/blog/11529/introducing-private-click-measurement-pcm/\n     * @see https://developer.apple.com/videos/play/wwdc2021/10033",
        "* Gets the basic and simple WebGL parameters",
        "* Gets the advanced and massive WebGL parameters and extensions",
        "* This function usually takes the most time to execute in all the sources, therefore we cache its result.\n     *\n     * Warning for package users:\n     * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.",
        "* https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat\n     * https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat\n     * https://www.khronos.org/registry/webgl/specs/latest/1.0/#5.12",
        "* Some browsers print a console warning when the WEBGL_debug_renderer_info extension is requested.\n     * JS Agent aims to avoid printing messages to console, so we avoid this extension in that browsers.",
        "* Some browsers print a console warning when the WEBGL_polygon_mode extension is requested.\n     * JS Agent aims to avoid printing messages to console, so we avoid this extension in that browsers.",
        "* Some unknown browsers have no `getParameter` method",
        "* @see https://www.browserleaks.com/canvas#how-does-it-work\n     *\n     * A version of the entropy source with stabilization to make it suitable for static fingerprinting.\n     * Canvas image is noised in private mode of Safari 17, so image rendering is skipped in Safari 17.",
        "* The list of entropy sources used to make visitor identifiers.\n     *\n     * This value isn't restricted by Semantic Versioning, i.e. it may be changed without bumping minor or major version of\n     * this package.\n     *\n     * Note: Rollup and Webpack are smart enough to remove unused properties of this object during tree-shaking, so there is\n     * no need to export the sources individually.",
        "* Loads the built-in entropy sources.\n     * Returns a function that collects the entropy components to make the visitor identifier.",
        "* Makes a GetResult implementation that calculates the visitor id hash on demand.\n     * Designed for optimisation.",
        "* Makes a GetResult implementation that calculates the visitor id hash on demand.\n     * Designed for optimisation.",
        "* A delay is required to ensure consistent entropy components.\n     * See https://github.com/fingerprintjs/fingerprintjs/issues/254\n     * and https://github.com/fingerprintjs/fingerprintjs/issues/307\n     * and https://github.com/fingerprintjs/fingerprintjs/commit/945633e7c5f67ae38eb0fea37349712f0e669b18",
        "* The function isn't exported from the index file to not allow to call it without `load()`.\n     * The hiding gives more freedom for future non-breaking updates.\n     *\n     * A factory function is used instead of a class to shorten the attribute names in the minified code.\n     * Native private class fields could've been used, but TypeScript doesn't allow them with `\"target\": \"es5\"`.",
        "* Builds an instance of Agent and waits a delay required for a proper operation."
    ],
    "functions": [
        "__awaiter",
        "adopt",
        "fulfilled",
        "rejected",
        "step",
        "__generator",
        "verb",
        "step",
        "__spreadArray",
        "wait",
        "releaseEventLoop",
        "requestIdleCallbackIfAvailable",
        "isPromise",
        "awaitIfAsync",
        "mapWithBreaks",
        "suppressUnhandledRejectionWarning",
        "includes",
        "excludes",
        "toInt",
        "toFloat",
        "replaceNaN",
        "countTruthy",
        "round",
        "parseSimpleCssSelector",
        "getUTF8Bytes",
        "x64Add",
        "x64Multiply",
        "x64Rotl",
        "x64LeftShift",
        "x64Xor",
        "x64Fmix",
        "x64hash128",
        "errorToObject",
        "isFunctionNative",
        "isFinalResultLoaded",
        "valueToResult",
        "loadSource",
        "loadSources",
        "transformSource",
        "isTrident",
        "isEdgeHTML",
        "isChromium",
        "isWebKit",
        "isDesktopWebKit",
        "isSafariWebKit",
        "isGecko",
        "isChromium86OrNewer",
        "isWebKit606OrNewer",
        "isWebKit616OrNewer",
        "isIPad",
        "getFullscreenElement",
        "exitFullscreen",
        "isAndroid",
        "withIframe",
        "selectorToElement",
        "addStyleString",
        "whenDocumentVisible",
        "getAudioFingerprint",
        "getUnstableAudioFingerprint",
        "getBaseAudioFingerprint",
        "doesBrowserSuspendAudioContext",
        "getBaseSignal",
        "renderAudio",
        "extractFingerprint",
        "getMiddle",
        "stabilize",
        "getFonts",
        "getPlugins",
        "getCanvasFingerprint",
        "getUnstableCanvasFingerprint",
        "makeCanvasContext",
        "isSupported",
        "doesSupportWinding",
        "renderImages",
        "renderTextImage",
        "renderGeometryImage",
        "canvasToString",
        "doesBrowserPerformAntifingerprinting",
        "getTouchSupport",
        "getOsCpu",
        "getLanguages",
        "getColorDepth",
        "getDeviceMemory",
        "getScreenResolution",
        "getUnstableScreenResolution",
        "watchScreenFrame",
        "getUnstableScreenFrame",
        "getScreenFrame",
        "getCurrentScreenFrame",
        "isFrameSizeNull",
        "getHardwareConcurrency",
        "getTimezone",
        "getTimezoneOffset",
        "getSessionStorage",
        "getLocalStorage",
        "getIndexedDB",
        "getOpenDatabase",
        "getCpuClass",
        "getPlatform",
        "getToken",
        "getVisitorID",
        "getCookie",
        "getUserAgent",
        "getReferer",
        "getVendor",
        "getVendorFlavors",
        "areCookiesEnabled",
        "getFilters",
        "getDomBlockers",
        "isApplicable",
        "getBlockedSelectors",
        "forceShow",
        "printDebug",
        "getColorGamut",
        "areColorsInverted",
        "doesMatch$5",
        "areColorsForced",
        "doesMatch$4",
        "getMonochromeDepth",
        "getContrastPreference",
        "doesMatch$3",
        "isMotionReduced",
        "doesMatch$2",
        "isTransparencyReduced",
        "doesMatch$1",
        "isHDR",
        "doesMatch",
        "getMathFingerprint",
        "getFontPreferences",
        "withNaturalFonts",
        "isPdfViewerEnabled",
        "getArchitecture",
        "getApplePayState",
        "getStateFromError",
        "getPrivateClickMeasurement",
        "getWebGlBasics",
        "getWebGlExtensions",
        "getWebGLContext",
        "getShaderPrecision",
        "getConstantsFromPrototype",
        "isConstantLike",
        "shouldAvoidDebugRendererInfo",
        "shouldAvoidPolygonModeExtensions",
        "isValidParameterGetter",
        "getWebRTC",
        "foundIp",
        "handleCandidate",
        "loadBuiltinSources",
        "getConfidence",
        "getOpenConfidenceScore",
        "deriveProConfidenceScore",
        "componentsToCanonicalString",
        "componentsToDebugString",
        "hashComponents",
        "makeLazyGetResult",
        "visitorId",
        "visitorId",
        "componentsToJson",
        "makeLazyRetrieveResult",
        "prepareForSources",
        "makeAgent",
        "load"
    ],
    "classes": []
}