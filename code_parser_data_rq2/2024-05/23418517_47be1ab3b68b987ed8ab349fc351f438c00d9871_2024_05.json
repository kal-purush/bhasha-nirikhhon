{
    "identifiers": [
        "org",
        "apache",
        "hadoop",
        "fs",
        "java",
        "io",
        "Closeable",
        "java",
        "io",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "hadoop",
        "classification",
        "InterfaceAudience",
        "org",
        "apache",
        "hadoop",
        "classification",
        "InterfaceStability",
        "org",
        "apache",
        "hadoop",
        "fs",
        "statistics",
        "IOStatisticsSource",
        "java",
        "util",
        "Objects",
        "requireNonNull",
        "InterfaceAudience",
        "Public",
        "InterfaceStability",
        "Unstable",
        "BulkDelete",
        "paths"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* API for bulk deletion of objects/files,\n * <i>but not directories</i>.\n * After use, call {@code close()} to release any resources and\n * to guarantee store IOStatistics are updated.\n * <p>\n * Callers MUST have no expectation that parent directories will exist after the\n * operation completes; if an object store needs to explicitly look for and create\n * directory markers, that step will be omitted.\n * <p>\n * Be aware that on some stores (AWS S3) each object listed in a bulk delete counts\n * against the write IOPS limit; large page sizes are counterproductive here, as\n * are attempts at parallel submissions across multiple threads.\n * @see <a href=\"https://issues.apache.org/jira/browse/HADOOP-16823\">HADOOP-16823.\n *  Large DeleteObject requests are their own Thundering Herd</a>",
        "* The maximum number of objects/files to delete in a single request.\n   * @return a number greater than zero.",
        "* Base path of a bulk delete operation.\n   * All paths submitted in {@link #bulkDelete(Collection)} must be under this path.\n   * @return base path of a bulk delete operation.",
        "* Delete a list of files/objects.\n   * <ul>\n   *   <li>Files must be under the path provided in {@link #basePath()}.</li>\n   *   <li>The size of the list must be equal to or less than the page size\n   *       declared in {@link #pageSize()}.</li>\n   *   <li>Directories are not supported; the outcome of attempting to delete\n   *       directories is undefined (ignored; undetected, listed as failures...).</li>\n   *   <li>The operation is not atomic.</li>\n   *   <li>The operation is treated as idempotent: network failures may\n   *        trigger resubmission of the request -any new objects created under a\n   *        path in the list may then be deleted.</li>\n   *    <li>There is no guarantee that any parent directories exist after this call.\n   *    </li>\n   * </ul>\n   * @param paths list of paths which must be absolute and under the base path.\n   * provided in {@link #basePath()}.\n   * @return a list of paths which failed to delete, with the exception message.\n   * @throws IOException IO problems including networking, authentication and more.\n   * @throws IllegalArgumentException if a path argument is invalid."
    ],
    "functions": [
        "pageSize",
        "Path",
        "basePath",
        "bulkDelete"
    ],
    "classes": []
}