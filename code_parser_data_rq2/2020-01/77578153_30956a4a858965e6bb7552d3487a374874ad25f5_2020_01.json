{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Net",
        "Threading",
        "Threading",
        "Tasks",
        "ShopifySharp",
        "Filters",
        "Xunit",
        "ShopifySharp",
        "Tests",
        "Trait",
        "IClassFixture",
        "Refund_Tests_Fixture",
        "Refund_Tests_Fixture",
        "fixture",
        "Fixture",
        "fixture",
        "Fact",
        "Fixture",
        "OrderService",
        "GetAsync",
        "Fixture",
        "Created",
        "First",
        "Id",
        "Value",
        "PrepareCalculate",
        "order",
        "Fixture",
        "Service",
        "CalculateAsync",
        "order",
        "Id",
        "Value",
        "requestedRefund",
        "Assert",
        "calculateResponse",
        "Transactions",
        "Count",
        "Transaction",
        "PrepareRefund",
        "calculateResponse",
        "Fixture",
        "Service",
        "RefundAsync",
        "order",
        "Id",
        "Value",
        "fullRefundForAnOrder",
        "Assert",
        "refundResponse",
        "ProcessedAt",
        "HasValue",
        "refundResponse",
        "ProcessedAt",
        "UtcNow",
        "AddDays",
        "Fixture",
        "Service",
        "ListForOrderAsync",
        "order",
        "Id",
        "Value",
        "Assert",
        "getRefundsForOrder",
        "First",
        "Id",
        "HasValue",
        "Fixture",
        "Service",
        "GetAsync",
        "order",
        "Id",
        "Value",
        "getRefundsForOrder",
        "First",
        "Id",
        "Value",
        "Assert",
        "getSpecificRefund",
        "Id",
        "HasValue",
        "Order",
        "order",
        "Refund",
        "Currency",
        "Shipping",
        "Shipping",
        "FullRefund",
        "RefundLineItems",
        "ShopifySharp",
        "RefundLineItem",
        "RefundLineItem",
        "li",
        "order",
        "LineItems",
        "ShopifySharp",
        "RefundLineItem",
        "LineItemId",
        "li",
        "Id",
        "Quantity",
        "li",
        "Quantity",
        "RestockType",
        "liList",
        "Add",
        "newLi",
        "RequestedRefund",
        "RefundLineItems",
        "liList",
        "RequestedRefund",
        "Refund",
        "calculateRefundResponse",
        "Refund",
        "Currency",
        "Notify",
        "Note",
        "Shipping",
        "Shipping",
        "FullRefund",
        "RefundLineItems",
        "ShopifySharp",
        "RefundLineItem",
        "Transactions",
        "ShopifySharp",
        "Transaction",
        "RefundLineItem",
        "orderLi",
        "calculateRefundResponse",
        "RefundLineItems",
        "ShopifySharp",
        "RefundLineItem",
        "LineItemId",
        "orderLi",
        "LineItemId",
        "Quantity",
        "orderLi",
        "Quantity",
        "RestockType",
        "orderLi",
        "RestockType",
        "liList",
        "Add",
        "lineItem",
        "fullRefundForAnOrder",
        "RefundLineItems",
        "liList",
        "Transaction",
        "shopifyTransaction",
        "calculateRefundResponse",
        "Transactions",
        "ShopifySharp",
        "Transaction",
        "ParentId",
        "shopifyTransaction",
        "ParentId",
        "Amount",
        "shopifyTransaction",
        "Amount",
        "Kind",
        "Gateway",
        "transactionList",
        "Add",
        "transactionLi",
        "fullRefundForAnOrder",
        "Transactions",
        "transactionList",
        "fullRefundForAnOrder",
        "IAsyncLifetime",
        "Service",
        "SetExecutionPolicy",
        "SmartRetryExecutionPolicy",
        "OrderService",
        "Utils",
        "MyShopifyUrl",
        "Utils",
        "AccessToken",
        "RefundService",
        "Utils",
        "MyShopifyUrl",
        "Utils",
        "AccessToken",
        "Order",
        "Order",
        "OrderId",
        "HasValue",
        "Retrieve",
        "OrderId",
        "Value",
        "obj",
        "Created",
        "OrderService",
        "DeleteAsync",
        "obj",
        "Id",
        "Value",
        "ShopifyException",
        "ex",
        "ex",
        "HttpStatusCode",
        "HttpStatusCode",
        "NotFound",
        "WriteLine",
        "obj",
        "Id",
        "Value",
        "ex",
        "Message",
        "Order",
        "orderId",
        "skipAddToCreateList",
        "OrderService",
        "GetAsync",
        "orderId",
        "skipAddToCreateList",
        "Created",
        "Add",
        "obj",
        "obj"
    ],
    "literals": [
        "\"Category\"",
        "\"Refund\"",
        "\"No transactions for order!\"",
        "\"Refund was not processed\"",
        "\"No refunds received!\"",
        "\"No refund received!\"",
        "\"USD\"",
        "\"no_restock\"",
        "\"USD\"",
        "\"Shopify Sharp Test\"",
        "\"refund\"",
        "\"ShopifySharp Test\"",
        "\"This order was created while testing ShopifySharp!\""
    ],
    "variables": [
        "Refund_Tests_Fixture",
        "Fixture",
        "order",
        "requestedRefund",
        "calculateResponse",
        "fullRefundForAnOrder",
        "refundResponse",
        "getRefundsForOrder",
        "getSpecificRefund",
        "RequestedRefund",
        "liList",
        "newLi",
        "fullRefundForAnOrder",
        "liList",
        "lineItem",
        "transactionList",
        "transactionLi",
        "OrderId",
        "OrderService",
        "OrderService",
        "RefundService",
        "Service",
        "Note",
        "Created",
        "obj"
    ],
    "comments": [
        "A test designed to validate the ShopifySharp Refund Methods.",
        "Please note: An <see cref=\"OrderId\"/> tied to a manually created, active order is required to be able to use this test.",
        "This is because it seems API refunds cannot be applied against orders created via the API.",
        "These four method tests are consolidated into one because they are reliant upon each other:",
        "</summary>",
        "CalculateAsync",
        "Perhaps something is unexpected with the order, or call/response was malformed.\"",
        "RefundAsync",
        "Order was not processed, thus was not successfully refunded\"",
        "ListForOrderAsync",
        "Likely the creation of a refund or the retrieval of refunds weren't successful\"",
        "GetAsync",
        "Either refund wasn't successful or Refund Id may be incorrect.\"",
        "A helper function designed to construct a refund object that will be accepted by Shopify Refund \"/orders/#{order_id}/refunds/calculate.json\" endpoint",
        "</summary>",
        "A helper function designed to construct a refund object that will be accepted by Shopify Refund \"/orders/#{order_id}/refunds.json\" endpoint",
        "</summary>",
        "An id tied to an order.",
        "Requires that the order be manually created and set before testing.",
        "</summary>",
        "original",
        "Create an order for count, list, get, etc. orders.",
        "Convenience function for running tests. Retrieves an object and automatically adds it to the queue for deleting after tests finish.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "*GetAsync & ListForOrderAsync: To be able to list a refund, a refund must be created (via PrepareRefund).",
        "*PrepareRefund: In order to create a Refund, a transaction Id must have been retrieved (via CalculateAsync).",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Refund_Tests",
        "Get_Refund_And_List",
        "Refund",
        "Prepare_Calculate",
        "Refund",
        "Prepare_Refund",
        "Refund_Tests_Fixture",
        "InitializeAsync",
        "DisposeAsync",
        "Retrieve"
    ],
    "classes": [
        "Refund_Tests",
        "Refund_Tests_Fixture"
    ]
}