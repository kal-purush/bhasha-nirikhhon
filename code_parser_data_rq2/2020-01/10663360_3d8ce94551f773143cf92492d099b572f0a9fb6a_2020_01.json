{
    "identifiers": [
        "com",
        "mycelium",
        "wapi",
        "wallet",
        "erc20",
        "java",
        "math",
        "BigInteger",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "org",
        "web3j",
        "abi",
        "EventEncoder",
        "org",
        "web3j",
        "abi",
        "TypeReference",
        "org",
        "web3j",
        "abi",
        "datatypes",
        "Address",
        "org",
        "web3j",
        "abi",
        "datatypes",
        "Event",
        "org",
        "web3j",
        "abi",
        "datatypes",
        "org",
        "web3j",
        "abi",
        "datatypes",
        "Type",
        "org",
        "web3j",
        "abi",
        "datatypes",
        "generated",
        "Uint256",
        "org",
        "web3j",
        "crypto",
        "Credentials",
        "org",
        "web3j",
        "protocol",
        "Web3j",
        "org",
        "web3j",
        "protocol",
        "core",
        "DefaultBlockParameter",
        "org",
        "web3j",
        "protocol",
        "core",
        "RemoteCall",
        "org",
        "web3j",
        "protocol",
        "core",
        "methods",
        "request",
        "EthFilter",
        "org",
        "web3j",
        "protocol",
        "core",
        "methods",
        "response",
        "Log",
        "org",
        "web3j",
        "protocol",
        "core",
        "methods",
        "response",
        "TransactionReceipt",
        "org",
        "web3j",
        "tx",
        "Contract",
        "org",
        "web3j",
        "tx",
        "TransactionManager",
        "io",
        "reactivex",
        "Observable",
        "BINARY",
        "_addresses",
        "_addresses",
        "contractAddress",
        "web3j",
        "credentials",
        "gasPrice",
        "gasLimit",
        "BINARY",
        "contractAddress",
        "web3j",
        "credentials",
        "gasPrice",
        "gasLimit",
        "contractAddress",
        "web3j",
        "transactionManager",
        "gasPrice",
        "gasLimit",
        "BINARY",
        "contractAddress",
        "web3j",
        "transactionManager",
        "gasPrice",
        "gasLimit",
        "Arrays",
        "asList",
        "Arrays",
        "asList",
        "executeRemoteCallSingleValueReturn",
        "_owner",
        "Arrays",
        "asList",
        "_owner",
        "Arrays",
        "asList",
        "executeRemoteCallSingleValueReturn",
        "_to",
        "_value",
        "Arrays",
        "asList",
        "_to",
        "_value",
        "Collections",
        "emptyList",
        "executeRemoteCallTransaction",
        "_from",
        "_to",
        "_value",
        "Arrays",
        "asList",
        "_from",
        "_to",
        "_value",
        "Collections",
        "emptyList",
        "executeRemoteCallTransaction",
        "_spender",
        "_value",
        "Arrays",
        "asList",
        "_spender",
        "_value",
        "Collections",
        "emptyList",
        "executeRemoteCallTransaction",
        "_owner",
        "_spender",
        "Arrays",
        "asList",
        "_owner",
        "_spender",
        "Arrays",
        "asList",
        "executeRemoteCallSingleValueReturn",
        "_spender",
        "_addedValue",
        "Arrays",
        "asList",
        "_spender",
        "_addedValue",
        "Collections",
        "emptyList",
        "executeRemoteCallTransaction",
        "_spender",
        "_subtractedValue",
        "Arrays",
        "asList",
        "_spender",
        "_subtractedValue",
        "Collections",
        "emptyList",
        "executeRemoteCallTransaction",
        "web3j",
        "credentials",
        "gasPrice",
        "gasLimit",
        "deployRemoteCall",
        "web3j",
        "credentials",
        "gasPrice",
        "gasLimit",
        "BINARY",
        "web3j",
        "transactionManager",
        "gasPrice",
        "gasLimit",
        "deployRemoteCall",
        "web3j",
        "transactionManager",
        "gasPrice",
        "gasLimit",
        "BINARY",
        "contractAddress",
        "web3j",
        "credentials",
        "gasPrice",
        "gasLimit",
        "contractAddress",
        "web3j",
        "credentials",
        "gasPrice",
        "gasLimit",
        "contractAddress",
        "web3j",
        "transactionManager",
        "gasPrice",
        "gasLimit",
        "contractAddress",
        "web3j",
        "transactionManager",
        "gasPrice",
        "gasLimit",
        "networkId",
        "_addresses",
        "get",
        "networkId",
        "networkId",
        "_addresses",
        "get",
        "networkId",
        "log",
        "owner",
        "spender",
        "value",
        "log",
        "to",
        "value"
    ],
    "literals": [
        "\"0x608060405234801561001057600080fd5b50611039806100206000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063095ea7b31461009357806318160ddd146100f857806323b872dd1461012357806366188463146101a857806370a082311461020d578063a9059cbb14610264578063d73dd623146102c9578063dd62ed3e1461032e575b600080fd5b34801561009f57600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506103a5565b604051808215151515815260200191505060405180910390f35b34801561010457600080fd5b5061010d610497565b6040518082815260200191505060405180910390f35b34801561012f57600080fd5b5061018e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506104a1565b604051808215151515815260200191505060405180910390f35b3480156101b457600080fd5b506101f3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061085b565b604051808215151515815260200191505060405180910390f35b34801561021957600080fd5b5061024e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aec565b6040518082815260200191505060405180910390f35b34801561027057600080fd5b506102af600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b34565b604051808215151515815260200191505060405180910390f35b3480156102d557600080fd5b50610314600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610d53565b604051808215151515815260200191505060405180910390f35b34801561033a57600080fd5b5061038f600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f4f565b6040518082815260200191505060405180910390f35b600081600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000600154905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156104de57600080fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054821115151561052b57600080fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111515156105b657600080fd5b610607826000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061069a826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061076b82600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b600080600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508083111561096c576000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a00565b61097f8382610fd690919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515610b7157600080fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548211151515610bbe57600080fd5b610c0f826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fd690919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ca2826000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a36001905092915050565b6000610de482600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610fef90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000828211151515610fe457fe5b818303905092915050565b600080828401905083811015151561100357fe5b80915050929150505600a165627a7a72305820c9ca23881d96d515646168025d1e4d2760a6fd41900819e64bd0db2e5843964e0029\"",
        "\"totalSupply\"",
        "\"balanceOf\"",
        "\"transfer\"",
        "\"transferFrom\"",
        "\"approve\"",
        "\"allowance\"",
        "\"increaseApproval\"",
        "\"decreaseApproval\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "_addresses",
        "log",
        "owner",
        "spender",
        "value",
        "log",
        "from",
        "to",
        "value"
    ],
    "comments": [],
    "docstrings": [
        "* <p>Auto generated code.\n * <p><strong>Do not modify!</strong>\n * <p>Please use the <a href=\"https://docs.web3j.io/command_line.html\">web3j command line tools</a>,\n * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the\n * <a href=\"https://github.com/web3j/web3j/tree/master/codegen\">codegen module</a> to update.\n *\n * <p>Generated with web3j version 3.3.1.",
        "public List<ApprovalEventResponse> getApprovalEvents(TransactionReceipt transactionReceipt) {\n        final Event event = new Event(\"Approval\",\n                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}),\n                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));\n        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(event, transactionReceipt);\n        ArrayList<ApprovalEventResponse> responses = new ArrayList<ApprovalEventResponse>(valueList.size());\n        for (Contract.EventValuesWithLog eventValues : valueList) {\n            ApprovalEventResponse typedResponse = new ApprovalEventResponse();\n            typedResponse.log = eventValues.getLog();\n            typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();\n            typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();\n            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n            responses.add(typedResponse);\n        }\n        return responses;\n    }\n\n    public Observable<ApprovalEventResponse> approvalEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n        final Event event = new Event(\"Approval\",\n                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));\n        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());\n        filter.addSingleTopic(EventEncoder.encode(event));\n        return web3j.ethLogObservable(filter).map(new Func1<Log, ApprovalEventResponse>() {\n            @Override\n            public ApprovalEventResponse call(Log log) {\n                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(event, log);\n                ApprovalEventResponse typedResponse = new ApprovalEventResponse();\n                typedResponse.log = log;\n                typedResponse.owner = (String) eventValues.getIndexedValues().get(0).getValue();\n                typedResponse.spender = (String) eventValues.getIndexedValues().get(1).getValue();\n                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n                return typedResponse;\n            }\n        });\n    }\n\n    public List<TransferEventResponse> getTransferEvents(TransactionReceipt transactionReceipt) {\n        final Event event = new Event(\"Transfer\",\n                Arrays.asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));\n        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(event, transactionReceipt);\n        ArrayList<TransferEventResponse> responses = new ArrayList<TransferEventResponse>(valueList.size());\n        for (Contract.EventValuesWithLog eventValues : valueList) {\n            TransferEventResponse typedResponse = new TransferEventResponse();\n            typedResponse.log = eventValues.getLog();\n            typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();\n            typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();\n            typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n            responses.add(typedResponse);\n        }\n        return responses;\n    }\n\n    public Observable<TransferEventResponse> transferEventObservable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {\n        final Event event = new Event(\"Transfer\",\n                Arrays.asList(new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));\n        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());\n        filter.addSingleTopic(EventEncoder.encode(event));\n        return web3j.ethLogObservable(filter).map(new Func1<Log, TransferEventResponse>() {\n            @Override\n            public TransferEventResponse call(Log log) {\n                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(event, log);\n                TransferEventResponse typedResponse = new TransferEventResponse();\n                typedResponse.log = log;\n                typedResponse.from = (String) eventValues.getIndexedValues().get(0).getValue();\n                typedResponse.to = (String) eventValues.getIndexedValues().get(1).getValue();\n                typedResponse.value = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();\n                return typedResponse;\n            }\n        });\n    }"
    ],
    "functions": [
        "StandardToken",
        "StandardToken",
        "totalSupply",
        "balanceOf",
        "transfer",
        "transferFrom",
        "approve",
        "allowance",
        "increaseApproval",
        "decreaseApproval",
        "deploy",
        "deploy",
        "StandardToken",
        "load",
        "StandardToken",
        "load",
        "getStaticDeployedAddress",
        "getPreviouslyDeployedAddress"
    ],
    "classes": [
        "StandardToken",
        "ApprovalEventResponse",
        "TransferEventResponse"
    ]
}