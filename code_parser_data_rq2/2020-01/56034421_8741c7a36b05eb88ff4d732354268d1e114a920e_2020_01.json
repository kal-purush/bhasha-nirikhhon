{
    "identifiers": [
        "rally_ovs",
        "plugins",
        "ovs",
        "scenarios",
        "ovn",
        "rally",
        "task",
        "atomic",
        "rally",
        "task",
        "scenario",
        "time",
        "ovn",
        "OvnScenario",
        "context",
        "OvnFakeMultinode",
        "context",
        "_init_sandboxes",
        "context",
        "context",
        "sb",
        "sb",
        "sb",
        "context",
        "sb_name",
        "_sandboxes",
        "sb_name",
        "sb_name",
        "sb",
        "sb",
        "farm_clients",
        "farm",
        "ssh",
        "set_sandbox",
        "sb_name",
        "install_method",
        "ssh",
        "enable_batch_mode",
        "ssh",
        "atomic",
        "action_timer",
        "ssh_conn",
        "node_net",
        "node_net_len",
        "node_ip",
        "ovn_fake_path",
        "format",
        "ovn_fake_path",
        "node_net",
        "node_net_len",
        "node_ip",
        "ssh_conn",
        "run",
        "cmd",
        "atomic",
        "action_timer",
        "ssh_conn",
        "node_net",
        "node_net_len",
        "node_ip",
        "node_name",
        "ovn_fake_path",
        "format",
        "ovn_fake_path",
        "node_net",
        "node_net_len",
        "node_ip",
        "node_name",
        "invalid_remote",
        "ssh_conn",
        "run",
        "cmd",
        "atomic",
        "action_timer",
        "ssh_conn",
        "node_name",
        "central_ip",
        "ovn_fake_path",
        "format",
        "ovn_fake_path",
        "node_name",
        "central_ip",
        "ssh_conn",
        "run",
        "cmd",
        "atomic",
        "action_timer",
        "sbctl_conn",
        "chassis_name",
        "max_timeout_s",
        "i",
        "max_timeout_s",
        "sbctl_conn",
        "chassis_bound",
        "chassis_name",
        "time",
        "sleep",
        "atomic",
        "action_timer",
        "ssh_conn",
        "node_name",
        "ovn_fake_path",
        "format",
        "ovn_fake_path",
        "node_name",
        "ssh_conn",
        "run",
        "cmd",
        "atomic",
        "action_timer",
        "ssh_conn",
        "ovn_fake_path",
        "format",
        "ovn_fake_path",
        "ssh_conn",
        "run",
        "cmd",
        "scenario",
        "configure",
        "context",
        "fake_multinode_args",
        "controller_client",
        "ssh",
        "set_sandbox",
        "install_method",
        "ssh",
        "enable_batch_mode",
        "fake_multinode_args",
        "get",
        "fake_multinode_args",
        "get",
        "fake_multinode_args",
        "get",
        "fake_multinode_args",
        "get",
        "_add_central",
        "ssh",
        "node_net",
        "node_net_len",
        "node_ip",
        "ovn_fake_path",
        "scenario",
        "configure",
        "context",
        "fake_multinode_args",
        "fake_multinode_args",
        "get",
        "_get_sandbox",
        "farm",
        "_get_sandbox_conn",
        "sb",
        "sb",
        "fake_multinode_args",
        "get",
        "fake_multinode_args",
        "get",
        "fake_multinode_args",
        "get",
        "sb",
        "fake_multinode_args",
        "get",
        "_add_chassis",
        "ssh",
        "node_net",
        "node_net_len",
        "node_ip",
        "node_name",
        "ovn_fake_path",
        "scenario",
        "configure",
        "context",
        "fake_multinode_args",
        "fake_multinode_args",
        "get",
        "_get_sandbox",
        "farm",
        "_get_sandbox_conn",
        "sb",
        "sb",
        "fake_multinode_args",
        "get",
        "sb",
        "fake_multinode_args",
        "get",
        "_connect_chassis",
        "ssh",
        "node_name",
        "central_ip",
        "ovn_fake_path",
        "scenario",
        "configure",
        "context",
        "fake_multinode_args",
        "fake_multinode_args",
        "get",
        "fake_multinode_args",
        "get",
        "_get_sandbox",
        "farm",
        "sb",
        "controller_client",
        "ovn_sbctl",
        "set_sandbox",
        "install_method",
        "context",
        "ovn_sbctl",
        "enable_batch_mode",
        "_wait_chassis",
        "ovn_sbctl",
        "node_name",
        "max_timeout_s",
        "scenario",
        "configure",
        "context",
        "fake_multinode_args",
        "fake_multinode_args",
        "get",
        "_get_sandbox",
        "farm",
        "_get_sandbox_conn",
        "sb",
        "sb",
        "sb",
        "fake_multinode_args",
        "get",
        "_del_chassis",
        "ssh",
        "node_name",
        "ovn_fake_path",
        "scenario",
        "configure",
        "context",
        "fake_multinode_args",
        "controller_client",
        "ssh",
        "set_sandbox",
        "install_method",
        "ssh",
        "enable_batch_mode",
        "fake_multinode_args",
        "get",
        "_del_central",
        "ssh",
        "ovn_fake_path"
    ],
    "literals": [
        "\"farm\"",
        "\"sandboxes\"",
        "\"farm\"",
        "\"ovs-ssh\"",
        "\"OvnFakeMultinode.add_central_node\"",
        "\"cd {} && CHASSIS_COUNT=0 GW_COUNT=0 IP_HOST={} IP_CIDR={} IP_START={} ./ovn_cluster.sh start || true\"",
        "\"OvnFakeMultinode.add_chassis_node\"",
        "\"tcp:0.0.0.1:6642\"",
        "\"cd {} && IP_HOST={} IP_CIDR={} IP_START={} ./ovn_cluster.sh add-chassis {} {} || true\"",
        "\"OvnFakeMultinode.connect_chassis_node\"",
        "\"cd {} && ./ovn_cluster.sh set-chassis-ovn-remote {} tcp:{}:6642 || true\"",
        "\"ovnFakeMultinode.wait_chassis_node\"",
        "\"OvnFakeMultinode.del_chassis_node\"",
        "\"cd {} && ./ovn_cluster.sh stop-chassis {} || true\"",
        "\"OvnFakeMultinode.del_central_node\"",
        "\"cd {} && CHASSIS_COUNT=0 GW_COUNT=0 ./ovn_cluster.sh stop || true\"",
        "\"ovs-ssh\"",
        "\"controller-sandbox\"",
        "\"node_net\"",
        "\"node_net_len\"",
        "\"node_ip\"",
        "\"cluster_cmd_path\"",
        "\"farm\"",
        "\"name\"",
        "\"node_net\"",
        "\"node_net_len\"",
        "\"node_ip\"",
        "\"host_container\"",
        "\"cluster_cmd_path\"",
        "\"farm\"",
        "\"name\"",
        "\"central_ip\"",
        "\"host_container\"",
        "\"cluster_cmd_path\"",
        "\"farm\"",
        "\"max_timeout_s\"",
        "\"host_container\"",
        "\"ovn-sbctl\"",
        "\"controller-sandbox\"",
        "'controller'",
        "'host_container'",
        "\"farm\"",
        "\"name\"",
        "\"host_container\"",
        "\"cluster_cmd_path\"",
        "\"ovs-ssh\"",
        "\"controller-sandbox\"",
        "\"cluster_cmd_path\""
    ],
    "variables": [
        "_sandboxes",
        "farm",
        "ssh",
        "cmd",
        "invalid_remote",
        "cmd",
        "cmd",
        "cmd",
        "cmd",
        "ssh",
        "node_net",
        "node_net_len",
        "node_ip",
        "ovn_fake_path",
        "farm",
        "sb",
        "ssh",
        "node_net",
        "node_net_len",
        "node_ip",
        "node_name",
        "ovn_fake_path",
        "farm",
        "sb",
        "ssh",
        "central_ip",
        "node_name",
        "ovn_fake_path",
        "farm",
        "max_timeout_s",
        "sb",
        "node_name",
        "ovn_sbctl",
        "farm",
        "sb",
        "ssh",
        "node_name",
        "ovn_fake_path",
        "ssh",
        "ovn_fake_path"
    ],
    "comments": [
        "Copyright (c) 2020, Red Hat, Inc.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\"); you may",
        "not use this file except in compliance with the License. You may obtain",
        "a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT",
        "WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the",
        "License for the specific language governing permissions and limitations",
        "under the License."
    ],
    "docstrings": [
        "\"\"\"Scenario to dynamically add/delete ovn nodes running in containers.\n\nThis scenario is applicable for clusters deployed using:\nhttps://github.com/ovn-org/ovn-fake-multinode\n\"\"\""
    ],
    "functions": [
        "_init_sandboxes",
        "_get_sandbox",
        "_get_sandbox_conn",
        "_add_central",
        "_add_chassis",
        "_connect_chassis",
        "_wait_chassis",
        "_del_chassis",
        "_del_central",
        "add_central_node",
        "add_chassis_node",
        "connect_chassis_node",
        "wait_chassis_node",
        "del_chassis_node",
        "del_central_node"
    ],
    "classes": [
        "OvnFakeMultinode"
    ]
}