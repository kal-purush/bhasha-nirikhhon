{
    "identifiers": [
        "require",
        "exports",
        "req",
        "res",
        "req",
        "res",
        "Category",
        "req",
        "req",
        "category",
        "data",
        "res",
        "data",
        "err",
        "res",
        "err",
        "exports",
        "req",
        "res",
        "Category",
        "categories",
        "res",
        "categories",
        "err",
        "res",
        "err",
        "exports",
        "req",
        "res",
        "Category",
        "req",
        "category",
        "category",
        "res",
        "req",
        "res",
        "category",
        "err",
        "res",
        "req",
        "exports",
        "req",
        "res",
        "req",
        "res",
        "Category",
        "req",
        "req",
        "req",
        "category",
        "category",
        "res",
        "req",
        "res",
        "category",
        "err",
        "res",
        "req",
        "exports",
        "req",
        "res",
        "Category",
        "req",
        "category",
        "category",
        "res",
        "req",
        "res",
        "err",
        "res",
        "req"
    ],
    "literals": [
        "'../models/categories.model.js'",
        "\"Fields can not be empty\"",
        "\"Something went wrong.\"",
        "\"Something went wrong.\"",
        "\"Category not found with id \"",
        "\"Error retrieving category with id \"",
        "\"Fields can not be empty\"",
        "\"Category not found with id \"",
        "\"Error updating category with id \"",
        "\"Category not found with id \"",
        "\"Category deleted successfully!\"",
        "\"Could not delete category with id \""
    ],
    "variables": [
        "Category",
        "category"
    ],
    "comments": [
        "Create and Save a new Category",
        "Create a Category",
        "Save Category in the database",
        "Retrieve and return all categories from the database.",
        "Find a single category with a id",
        "Update a category identified by the id in the request",
        "Find category and update it with the request body",
        "Delete a category with the specified id in the request"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}