{
    "identifiers": [
        "collections",
        "json",
        "logging",
        "time",
        "typing",
        "weakref",
        "Enum",
        "threading",
        "typing",
        "Dict",
        "Optional",
        "Tuple",
        "Union",
        "credentials",
        "CertificateCredentials",
        "Credentials",
        "errors",
        "ConnectionFailed",
        "exception_class_for_reason",
        "payload",
        "Payload",
        "Enum",
        "Enum",
        "collections",
        "namedtuple",
        "collections",
        "namedtuple",
        "NotificationPriority",
        "Immediate",
        "logging",
        "getLogger",
        "credentials",
        "Union",
        "Credentials",
        "use_sandbox",
        "use_alternative_port",
        "proto",
        "Optional",
        "json_encoder",
        "Optional",
        "password",
        "Optional",
        "proxy_host",
        "Optional",
        "proxy_port",
        "Optional",
        "heartbeat_period",
        "Optional",
        "isinstance",
        "credentials",
        "CertificateCredentials",
        "credentials",
        "password",
        "credentials",
        "_init_connection",
        "use_sandbox",
        "use_alternative_port",
        "proto",
        "proxy_host",
        "proxy_port",
        "heartbeat_period",
        "_start_heartbeat",
        "heartbeat_period",
        "json_encoder",
        "use_sandbox",
        "use_alternative_port",
        "proto",
        "Optional",
        "proxy_host",
        "Optional",
        "proxy_port",
        "Optional",
        "SANDBOX_SERVER",
        "use_sandbox",
        "LIVE_SERVER",
        "ALTERNATIVE_PORT",
        "use_alternative_port",
        "DEFAULT_PORT",
        "__credentials",
        "create_connection",
        "server",
        "port",
        "proto",
        "proxy_host",
        "proxy_port",
        "heartbeat_period",
        "weakref",
        "_connection",
        "conn_ref",
        "conn",
        "conn",
        "ping",
        "time",
        "sleep",
        "heartbeat_period",
        "target",
        "watchdog",
        "thread",
        "setDaemon",
        "thread",
        "start",
        "token_hex",
        "notification",
        "Payload",
        "topic",
        "Optional",
        "priority",
        "NotificationPriority",
        "NotificationPriority",
        "Immediate",
        "expiration",
        "Optional",
        "collapse_id",
        "Optional",
        "send_notification_async",
        "token_hex",
        "notification",
        "topic",
        "priority",
        "expiration",
        "collapse_id",
        "get_notification_result",
        "stream_id",
        "result",
        "isinstance",
        "result",
        "result",
        "exception_class_for_reason",
        "reason",
        "info",
        "exception_class_for_reason",
        "result",
        "token_hex",
        "notification",
        "Payload",
        "topic",
        "Optional",
        "priority",
        "NotificationPriority",
        "NotificationPriority",
        "Immediate",
        "expiration",
        "Optional",
        "collapse_id",
        "Optional",
        "push_type",
        "Optional",
        "NotificationType",
        "json",
        "dumps",
        "notification",
        "cls",
        "__json_encoder",
        "ensure_ascii",
        "separators",
        "json_str",
        "encode",
        "topic",
        "topic",
        "topic",
        "endswith",
        "NotificationType",
        "VoIP",
        "value",
        "topic",
        "endswith",
        "NotificationType",
        "Complication",
        "value",
        "topic",
        "endswith",
        "NotificationType",
        "FileProvider",
        "value",
        "notification",
        "alert",
        "notification",
        "badge",
        "notification",
        "sound",
        "NotificationType",
        "Alert",
        "value",
        "NotificationType",
        "Background",
        "value",
        "push_type",
        "push_type",
        "value",
        "inferred_push_type",
        "inferred_push_type",
        "priority",
        "DEFAULT_APNS_PRIORITY",
        "priority",
        "value",
        "expiration",
        "expiration",
        "__credentials",
        "get_authorization_header",
        "topic",
        "auth_header",
        "auth_header",
        "collapse_id",
        "collapse_id",
        "format",
        "token_hex",
        "_connection",
        "request",
        "url",
        "json_payload",
        "headers",
        "stream_id",
        "stream_id",
        "Union",
        "Tuple",
        "_connection",
        "get_response",
        "stream_id",
        "response",
        "response",
        "status",
        "response",
        "read",
        "decode",
        "json",
        "loads",
        "raw_data",
        "response",
        "status",
        "data",
        "data",
        "data",
        "notifications",
        "Notification",
        "topic",
        "Optional",
        "priority",
        "NotificationPriority",
        "NotificationPriority",
        "Immediate",
        "expiration",
        "Optional",
        "collapse_id",
        "Optional",
        "push_type",
        "Optional",
        "NotificationType",
        "Dict",
        "Union",
        "Tuple",
        "iter",
        "notifications",
        "next",
        "notification_iterator",
        "connect",
        "collections",
        "deque",
        "len",
        "open_streams",
        "next_notification",
        "update_max_concurrent_streams",
        "next_notification",
        "len",
        "open_streams",
        "__max_concurrent_streams",
        "logger",
        "info",
        "next_notification",
        "token",
        "send_notification_async",
        "next_notification",
        "token",
        "next_notification",
        "payload",
        "topic",
        "priority",
        "expiration",
        "collapse_id",
        "push_type",
        "open_streams",
        "append",
        "RequestStream",
        "stream_id",
        "next_notification",
        "token",
        "next",
        "notification_iterator",
        "next_notification",
        "logger",
        "info",
        "open_streams",
        "popleft",
        "get_notification_result",
        "pending_stream",
        "stream_id",
        "logger",
        "info",
        "pending_stream",
        "token",
        "result",
        "pending_stream",
        "token",
        "result",
        "results",
        "_connection",
        "_conn",
        "connection",
        "connection",
        "remote_settings",
        "max_concurrent_streams",
        "max_concurrent_streams",
        "__previous_server_max_concurrent_streams",
        "max_concurrent_streams",
        "max_concurrent_streams",
        "CONCURRENT_STREAMS_SAFETY_MAXIMUM",
        "logger",
        "warning",
        "max_concurrent_streams",
        "CONCURRENT_STREAMS_SAFETY_MAXIMUM",
        "CONCURRENT_STREAMS_SAFETY_MAXIMUM",
        "max_concurrent_streams",
        "logger",
        "warning",
        "max_concurrent_streams",
        "logger",
        "info",
        "max_concurrent_streams",
        "max_concurrent_streams",
        "retries",
        "MAX_CONNECTION_RETRIES",
        "_connection",
        "connect",
        "logger",
        "info",
        "_connection",
        "close",
        "retries",
        "logger",
        "exception",
        "retries",
        "MAX_CONNECTION_RETRIES",
        "ConnectionFailed"
    ],
    "literals": [
        "'10'",
        "'5'",
        "'alert'",
        "'background'",
        "'voip'",
        "'complication'",
        "'fileprovider'",
        "'mdm'",
        "'RequestStream'",
        "'stream_id'",
        "'token'",
        "'Notification'",
        "'token'",
        "'payload'",
        "'api.sandbox.push.apple.com'",
        "'api.push.apple.com'",
        "'-'",
        "'Success'",
        "','",
        "':'",
        "'utf-8'",
        "'apns-topic'",
        "'.voip'",
        "'.complication'",
        "'.pushkit.fileprovider'",
        "'apns-push-type'",
        "'apns-priority'",
        "'apns-expiration'",
        "'%d'",
        "'authorization'",
        "'apns-collapse-id'",
        "'/3/device/{}'",
        "'POST'",
        "'Success'",
        "'utf-8'",
        "'reason'",
        "'timestamp'",
        "'reason'",
        "'Sending to token %s'",
        "'Finished sending all tokens, waiting for pending requests.'",
        "'Got response for %s: %s'",
        "'APNs max_concurrent_streams too high (%s), resorting to default maximum (%s)'",
        "'APNs reported max_concurrent_streams less than 1 (%s), using value of 1'",
        "'APNs set max_concurrent_streams to %s'",
        "'Connected to APNs'",
        "'Failed connecting to APNs (attempt %s of %s)'"
    ],
    "variables": [
        "Immediate",
        "Delayed",
        "Alert",
        "Background",
        "VoIP",
        "Complication",
        "FileProvider",
        "MDM",
        "RequestStream",
        "Notification",
        "DEFAULT_APNS_PRIORITY",
        "CONCURRENT_STREAMS_SAFETY_MAXIMUM",
        "MAX_CONNECTION_RETRIES",
        "logger",
        "SANDBOX_SERVER",
        "LIVE_SERVER",
        "DEFAULT_PORT",
        "ALTERNATIVE_PORT",
        "__credentials",
        "__credentials",
        "__json_encoder",
        "__max_concurrent_streams",
        "__previous_server_max_concurrent_streams",
        "server",
        "port",
        "_connection",
        "conn_ref",
        "conn",
        "thread",
        "stream_id",
        "result",
        "reason",
        "info",
        "json_str",
        "json_payload",
        "headers",
        "inferred_push_type",
        "headers",
        "inferred_push_type",
        "inferred_push_type",
        "inferred_push_type",
        "inferred_push_type",
        "inferred_push_type",
        "inferred_push_type",
        "headers",
        "headers",
        "headers",
        "auth_header",
        "headers",
        "headers",
        "url",
        "stream_id",
        "raw_data",
        "data",
        "notification_iterator",
        "next_notification",
        "results",
        "open_streams",
        "stream_id",
        "next_notification",
        "pending_stream",
        "result",
        "results",
        "max_concurrent_streams",
        "__previous_server_max_concurrent_streams",
        "__max_concurrent_streams",
        "__max_concurrent_streams",
        "__max_concurrent_streams",
        "retries"
    ],
    "comments": [
        "We don't generally need to know about the Credentials subclasses except to",
        "keep the old API, where APNsClient took a cert_file",
        "type: Credentials",
        "type: Optional[str]",
        "type: int",
        "type: Dict[str, str]",
        "Make sure we're connected to APNs, so that we receive and process the server's SETTINGS",
        "frame before starting to send notifications.",
        "type: typing.Deque[RequestStream]",
        "Loop on the tokens, sending as many requests as possible concurrently to APNs.",
        "When reaching the maximum concurrent streams limit, wait for a response before sending",
        "another request.",
        "Update the max_concurrent_streams on every iteration since a SETTINGS frame can be",
        "sent by the server at any time.",
        "No tokens remaining. Proceed to get results for pending requests.",
        "We have at least one request waiting for response (otherwise we would have either",
        "sent new requests or exited the while loop.) Wait for the first outstanding stream",
        "to return a response.",
        "Get the max_concurrent_streams setting returned by the server.",
        "The max_concurrent_streams value is saved in the H2Connection instance that must be",
        "accessed using a with statement in order to acquire a lock.",
        "pylint: disable=protected-access",
        "The server hasn't issued an updated SETTINGS frame.",
        "Handle and log unexpected values sent by APNs, just in case.",
        "noinspection PyBroadException",
        "pylint: disable=broad-except",
        "close the connnection, otherwise next connect() call would do nothing"
    ],
    "docstrings": [
        "\"\"\"\n        Get result for specified stream\n        The function returns: 'Success' or 'failure reason' or ('Unregistered', timestamp)\n        \"\"\"",
        "\"\"\"\n        Send a notification to a list of tokens in batch. Instead of sending a synchronous request\n        for each token, send multiple requests concurrently. This is done on the same connection,\n        using HTTP/2 streams (one request per stream).\n\n        APNs allows many streams simultaneously, but the number of streams can vary depending on\n        server load. This method reads the SETTINGS frame sent by the server to figure out the\n        maximum number of concurrent streams. Typically, APNs reports a maximum of 500.\n\n        The function returns a dictionary mapping each token to its result. The result is \"Success\"\n        if the token was sent successfully, or the string returned by APNs in the 'reason' field of\n        the response, if the token generated an error.\n        \"\"\"",
        "\"\"\"\n        Establish a connection to APNs. If already connected, the function does nothing. If the\n        connection fails, the function retries up to MAX_CONNECTION_RETRIES times.\n        \"\"\""
    ],
    "functions": [
        "_init_connection",
        "_start_heartbeat",
        "watchdog",
        "send_notification",
        "send_notification_async",
        "get_notification_result",
        "send_notification_batch",
        "update_max_concurrent_streams",
        "connect"
    ],
    "classes": [
        "NotificationPriority",
        "NotificationType",
        "APNsClient"
    ]
}