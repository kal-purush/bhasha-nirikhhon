{
    "identifiers": [
        "tech",
        "beshu",
        "ror",
        "es",
        "ssl",
        "io",
        "netty",
        "buffer",
        "ByteBufAllocator",
        "io",
        "netty",
        "channel",
        "Channel",
        "io",
        "netty",
        "channel",
        "ChannelHandler",
        "io",
        "netty",
        "handler",
        "ssl",
        "ClientAuth",
        "io",
        "netty",
        "handler",
        "ssl",
        "NotSslRecordException",
        "io",
        "netty",
        "handler",
        "ssl",
        "SslContext",
        "io",
        "netty",
        "handler",
        "ssl",
        "SslContextBuilder",
        "org",
        "apache",
        "logging",
        "log4j",
        "LogManager",
        "org",
        "apache",
        "logging",
        "log4j",
        "Logger",
        "org",
        "elasticsearch",
        "common",
        "network",
        "NetworkService",
        "org",
        "elasticsearch",
        "common",
        "settings",
        "Settings",
        "org",
        "elasticsearch",
        "common",
        "util",
        "BigArrays",
        "org",
        "elasticsearch",
        "common",
        "xcontent",
        "NamedXContentRegistry",
        "org",
        "elasticsearch",
        "http",
        "HttpChannel",
        "org",
        "elasticsearch",
        "http",
        "netty4",
        "Netty4HttpServerTransport",
        "org",
        "elasticsearch",
        "threadpool",
        "ThreadPool",
        "scala",
        "collection",
        "JavaConverters$",
        "tech",
        "beshu",
        "ror",
        "utils",
        "SSLCertParser",
        "tech",
        "beshu",
        "ror",
        "configuration",
        "SslConfiguration",
        "tech",
        "beshu",
        "ror",
        "configuration",
        "SslConfiguration",
        "ExternalSslConfiguration",
        "java",
        "io",
        "ByteArrayInputStream",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "security",
        "AccessController",
        "java",
        "security",
        "PrivilegedAction",
        "java",
        "util",
        "Optional",
        "java",
        "util",
        "stream",
        "Collectors",
        "logger",
        "LogManager",
        "getLogger",
        "getClass",
        "ssl",
        "settings",
        "networkService",
        "bigArrays",
        "threadPool",
        "xContentRegistry",
        "dispatcher",
        "ssl",
        "settings",
        "networkService",
        "bigArrays",
        "threadPool",
        "xContentRegistry",
        "dispatcher",
        "ssl",
        "ssl",
        "Override",
        "channel",
        "cause",
        "lifecycle",
        "started",
        "cause",
        "getCause",
        "logger",
        "warn",
        "cause",
        "getMessage",
        "channel",
        "getRemoteAddress",
        "onException",
        "channel",
        "cause",
        "channel",
        "close",
        "context",
        "Optional",
        "empty",
        "transport",
        "transport",
        "handlingSettings",
        "AccessController",
        "doPrivileged",
        "SSLCertParser",
        "run",
        "ssl",
        "ch",
        "initChannel",
        "ch",
        "context",
        "ifPresent",
        "sslCtx",
        "ch",
        "pipeline",
        "addFirst",
        "sslCtx",
        "newHandler",
        "ch",
        "alloc",
        "Override",
        "certChain",
        "privateKey",
        "sslCtxBuilder",
        "SslContextBuilder",
        "forServer",
        "certChain",
        "getBytes",
        "StandardCharsets",
        "UTF_8",
        "privateKey",
        "getBytes",
        "StandardCharsets",
        "UTF_8",
        "logger",
        "info",
        "SslContext",
        "defaultServerProvider",
        "name",
        "SSLCertParser",
        "validateProtocolAndCiphers",
        "sslCtxBuilder",
        "build",
        "newEngine",
        "ByteBufAllocator",
        "DEFAULT",
        "ssl",
        "ssl",
        "allowedCiphers",
        "size",
        "sslCtxBuilder",
        "ciphers",
        "JavaConverters$",
        "MODULE$",
        "setAsJavaSet",
        "ssl",
        "allowedCiphers",
        "stream",
        "SslConfiguration",
        "Cipher",
        "value",
        "collect",
        "Collectors",
        "toList",
        "ssl",
        "clientAuthenticationEnabled",
        "sslCtxBuilder",
        "clientAuth",
        "ClientAuth",
        "REQUIRE",
        "ssl",
        "allowedProtocols",
        "size",
        "sslCtxBuilder",
        "protocols",
        "JavaConverters$",
        "MODULE$",
        "setAsJavaSet",
        "ssl",
        "allowedProtocols",
        "stream",
        "SslConfiguration",
        "Protocol",
        "value",
        "toArray",
        "context",
        "Optional",
        "of",
        "sslCtxBuilder",
        "build",
        "e",
        "context",
        "Optional",
        "empty",
        "logger",
        "error",
        "e",
        "getClass",
        "getSimpleName",
        "e",
        "getMessage",
        "e"
    ],
    "literals": [
        "\" connecting from: \"",
        "\"ssl_netty4_handler\"",
        "\"ROR SSL HTTP: Using SSL provider: \"",
        "\"Failed to load SSL HTTP CertChain & private key from Keystore! \"",
        "\": \""
    ],
    "variables": [
        "ssl"
    ],
    "comments": [
        "#TODO expose configuration of sslPrivKeyPem password? Letsencrypt never sets one.."
    ],
    "docstrings": [
        "*    This file is part of ReadonlyREST.\n *\n *    ReadonlyREST is free software: you can redistribute it and/or modify\n *    it under the terms of the GNU General Public License as published by\n *    the Free Software Foundation, either version 3 of the License, or\n *    (at your option) any later version.\n *\n *    ReadonlyREST is distributed in the hope that it will be useful,\n *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *    GNU General Public License for more details.\n *\n *    You should have received a copy of the GNU General Public License\n *    along with ReadonlyREST.  If not, see http://www.gnu.org/licenses/",
        "* Created by sscarduzio on 28/11/2016."
    ],
    "functions": [
        "SSLNetty4HttpServerTransport",
        "onException",
        "ChannelHandler",
        "configureServerChannelHandler",
        "SSLHandler",
        "initChannel",
        "mkSSLContext"
    ],
    "classes": [
        "SSLNetty4HttpServerTransport",
        "SSLHandler",
        "SSLContextCreatorImpl"
    ]
}