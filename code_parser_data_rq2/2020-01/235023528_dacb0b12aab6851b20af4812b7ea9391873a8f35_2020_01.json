{
    "identifiers": [
        "torch",
        "syft",
        "syft",
        "generic",
        "frameworks",
        "hook",
        "hook_args",
        "syft",
        "generic",
        "tensor",
        "AbstractTensor",
        "syft",
        "workers",
        "AbstractWorker",
        "AbstractTensor",
        "owner",
        "id",
        "tags",
        "description",
        "id",
        "id",
        "owner",
        "owner",
        "tags",
        "tags",
        "description",
        "description",
        "tensor",
        "hasattr",
        "tensor",
        "tensor",
        "is_wrapper",
        "tensor",
        "child",
        "tensor",
        "child",
        "tensor",
        "join",
        "tags",
        "tags",
        "hasattr",
        "child",
        "child",
        "__str__",
        "PlaceHolder",
        "tags",
        "tags",
        "child",
        "placeholder",
        "staticmethod",
        "worker",
        "AbstractWorker",
        "tensor",
        "syft",
        "serde",
        "msgpack",
        "serde",
        "_simplify",
        "worker",
        "tensor",
        "id",
        "syft",
        "serde",
        "msgpack",
        "serde",
        "_simplify",
        "worker",
        "tensor",
        "tags",
        "syft",
        "serde",
        "msgpack",
        "serde",
        "_simplify",
        "worker",
        "tensor",
        "description",
        "staticmethod",
        "worker",
        "AbstractWorker",
        "tensor_tuple",
        "tensor_tuple",
        "syft",
        "serde",
        "msgpack",
        "serde",
        "_detail",
        "worker",
        "tensor_id",
        "syft",
        "serde",
        "msgpack",
        "serde",
        "_detail",
        "worker",
        "tags",
        "syft",
        "serde",
        "msgpack",
        "serde",
        "_detail",
        "worker",
        "description",
        "hasattr",
        "worker",
        "tensor_id",
        "worker",
        "_tmp_placeholders",
        "PlaceHolder",
        "owner",
        "worker",
        "id",
        "tensor_id",
        "tags",
        "tags",
        "description",
        "description",
        "worker",
        "_tmp_placeholders",
        "tensor",
        "worker",
        "_tmp_placeholders",
        "tensor_id",
        "hook_args",
        "default_register_tensor",
        "PlaceHolder"
    ],
    "literals": [
        "\"child\"",
        "\" \"",
        "f\"{type(self).__name__ }[Tags:{tags}]\"",
        "\"child\"",
        "f\">{self.child}\"",
        "\"PlaceHolder\"",
        "\"PlaceHolder\"",
        "\"_tmp_placeholders\""
    ],
    "variables": [
        "child",
        "child",
        "child",
        "tags",
        "__repr__",
        "placeholder",
        "placeholder",
        "child",
        "tensor_id",
        "tags",
        "description",
        "tensor_id",
        "tags",
        "description",
        "worker",
        "_tmp_placeholders",
        "tensor",
        "tensor_id"
    ],
    "comments": [
        "Register the tensor with hook_args.py ###"
    ],
    "docstrings": [
        "\"\"\"A PlaceHolder acts as a tensor but does nothing special. It can get\n        \"instantiated\" when a real tensor is appended as a child attribute. It\n        will send forward all the commands it receives to its child tensor.\n\n        When you send a PlaceHolder, you don't sent the instantiated tensors.\n\n        Args:\n            owner: An optional BaseWorker object to specify the worker on which\n                the tensor is located.\n            id: An optional string or integer id of the PlaceHolder.\n        \"\"\"",
        "\"\"\"\n        Add a tensor as a child attribute. All operations on the placeholder will be also\n        executed on this child tensor.\n\n        We remove wrappers is there are any.\n        \"\"\"",
        "\"\"\"\n        Compact representation of a Placeholder, including tags and optional child\n        \"\"\"",
        "\"\"\"\n        Copying a placeholder doesn't duplicate the child attribute, because all\n        copy operations happen locally where we want to keep reference to the same\n        instantiated object. As the child doesn't get sent, this is not an issue.\n        \"\"\"",
        "\"\"\"Takes the attributes of a PlaceHolder and saves them in a tuple.\n\n        Args:\n            worker: the worker doing the serialization\n            tensor: a PlaceHolder.\n\n        Returns:\n            tuple: a tuple holding the unique attributes of the PlaceHolder.\n        \"\"\"",
        "\"\"\"\n            This function reconstructs a PlaceHolder given it's attributes in form of a tuple.\n            Args:\n                worker: the worker doing the deserialization\n                tensor_tuple: a tuple holding the attributes of the PlaceHolder\n            Returns:\n                PlaceHolder: a PlaceHolder\n            \"\"\""
    ],
    "functions": [
        "instantiate",
        "__str__",
        "copy",
        "simplify",
        "detail"
    ],
    "classes": [
        "PlaceHolder"
    ]
}