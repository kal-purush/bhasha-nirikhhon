{
    "identifiers": [
        "Component",
        "NavController",
        "NavParams",
        "MissionDetailInterface",
        "ImageHelper",
        "MissionListServiceProvider",
        "LoadingServiceProvider",
        "Component",
        "navCtrl",
        "navParams",
        "missionListService",
        "loadingService",
        "navParams",
        "navParams",
        "item",
        "item",
        "planetId",
        "planetDetails",
        "planetDetails",
        "err",
        "err",
        "id",
        "id",
        "item",
        "item",
        "ImageHelper",
        "ImageHelper",
        "item",
        "id",
        "id",
        "item",
        "item",
        "item",
        "item",
        "homeWorld",
        "homeWorld",
        "err",
        "err",
        "err"
    ],
    "literals": [
        "'@angular/core'",
        "'ionic-angular'",
        "'../mission-list/mission-list'",
        "'../../providers/mission-list-service/mission-list-service'",
        "'../../providers/loading-service/loading-service'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'page-mission-details'",
        "'mission-details.html'",
        "'item'",
        "'id'",
        "'-big.png'",
        "'/'"
    ],
    "variables": [
        "planetId",
        "homeWorld"
    ],
    "comments": [
        "Selected Mission Object",
        "Planet details object",
        "Id of the mission",
        "Flag to check if the mission id is correct",
        "If we navigated to this page, we will have an item available as a nav param.",
        "Flag to determine if the id of the page is valid.",
        "Should be logged to the logging service ideally."
    ],
    "docstrings": [
        "* @interface - Structure of the planet  object.\n * @param {string} name - Name of the planet.\n * @param {string} rotation_period - Rotation period of the planet.\n * @param {string} orbital_period - Orbital period of the planet.\n * @param {string} diameter - Diameter of the planet.\n * @param {string} climate - Climate of the planet.\n * @param {string} gravity - Gravity of the planet.\n * @param {string} terrain - Terrain of the planet.\n * @param {string} surface_water - Surface Water of the planet.\n * @param {string} population - Population of the planet.",
        "* Class Managing the Details page view.",
        "* @constructor\n   * @param {NavController} navCtrl\n   * @param {NavParams} navParams\n   * @param {MissionListServiceProvider} missionListService - Service to help retireve missions by id.\n   * @param {LoadingServiceProvider} loadingService - Displays and hides loading screen.\n   * @param {MissionListPage} listPage - List page component.",
        "* Invoked when the view is fully loaded.\n   * Initiates an API request to load the mission by Id.\n   * API request will be fired only if the user reaching this page directly by typing URL.\n   * Once the mission is got, fires another request to get planet details.",
        "* Gets the mission by id.\n   * @param {number} id - Id to which the mission is to be retrieved.\n   * @return {Promise} returns a promise which resolves to mission object.",
        "* Gets the planet by id.\n   * @param {number} id - Id of the planet to be retrieved.\n   * @return {Promise} returns a promise which resolves to planet object.",
        "* Gets the planet by id from Mission object.\n   * @param {MissionDetailInterface} item - Mission object.\n   * @return {number} Returns the id of the planet.",
        "* Handles errors from API request\n   * @param {object} err - Error object.\n   * @return {Promise} Returns a promise which resolves to err object;"
    ],
    "functions": [
        "ionViewDidLoad",
        "getMissionById",
        "getPlanetById",
        "getPlanetIdFromMission",
        "handleError"
    ],
    "classes": [
        "MissionDetailsPage"
    ]
}