{
    "identifiers": [
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "ViewComponents",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "ViewEngines",
        "Microsoft",
        "Extensions",
        "DiagnosticAdapter",
        "StackExchange",
        "Profiling",
        "Internal",
        "IMiniProfilerDiagnosticListener",
        "DiagnosticName",
        "IView",
        "view",
        "MiniProfiler",
        "Current",
        "Step",
        "view",
        "Path",
        "DiagnosticName",
        "MiniProfiler",
        "Current",
        "Head",
        "Stop",
        "DiagnosticName",
        "ViewComponentContext",
        "context",
        "MiniProfiler",
        "Current",
        "Step",
        "context",
        "ViewComponentDescriptor",
        "DisplayName",
        "DiagnosticName",
        "MiniProfiler",
        "Current",
        "Head",
        "Stop",
        "DiagnosticName",
        "ViewComponentContext",
        "context",
        "MiniProfiler",
        "Current",
        "Step",
        "context",
        "ViewComponentDescriptor",
        "DisplayName",
        "DiagnosticName",
        "MiniProfiler",
        "Current",
        "Head",
        "Stop"
    ],
    "literals": [
        "\"Microsoft.AspNetCore\"",
        "\"Microsoft.AspNetCore.Mvc.BeforeView\"",
        "\"Render: \"",
        "\"Microsoft.AspNetCore.Mvc.AfterView\"",
        "\"Microsoft.AspNetCore.Mvc.BeforeViewComponent\"",
        "\"View Component: \"",
        "\"Microsoft.AspNetCore.Mvc.AfterViewComponent\"",
        "\"Microsoft.AspNetCore.Mvc.ViewComponentBeforeViewExecute\"",
        "\"View Component: \"",
        "\"Microsoft.AspNetCore.Mvc.ViewComponentAfterViewExecute\""
    ],
    "variables": [
        "ListenerName"
    ],
    "comments": [
        "Diagnostic listener for Microsoft.AspNetCore.Mvc.* events",
        "</summary>",
        "Diagnostic Listener name to handle",
        "</summary>",
        "Handles BeforeView events. Fired before a view renders.",
        "</summary>",
        "<param name=\"view\">The view being rendered.</param>",
        "Available: IView view, ViewContext viewContext",
        "Handles AfterView events. Fired after a view renders.",
        "</summary>",
        "Available: IView view, ViewContext viewContext",
        "Handles BeforeViewComponent events. Fired before a ViewComponent runs.",
        "</summary>",
        "Available: ActionDescriptor actionDescriptor, ViewComponentContext context, object viewComponent",
        "Handles AfterViewComponent events. Fired after a ViewComponent runs.",
        "</summary>",
        "Available: ActionDescriptor actionDescriptor, ViewComponentContext context, IViewComponentResult result, object viewComponent",
        "Handles ViewComponentBeforeViewExecute events. Fired before a ViewComponent's view executes.",
        "</summary>",
        "Available: ActionDescriptor actionDescriptor, ViewComponentContext context, IView view",
        "Handles ViewComponentAfterViewExecute events. Fired after a ViewComponent's view executes.",
        "</summary>",
        "Available: ActionDescriptor actionDescriptor, ViewComponentContext context, IView view"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "* There's no start event for these...maybe used for exceptions later in the NotFound case.\n         * \n        /// <summary>\n        /// Handles ViewFound events.\n        /// </summary>\n        [DiagnosticName(\"Microsoft.AspNetCore.Mvc.ViewFound\")]\n        public void OnViewFound()\n        {\n            // Available: ActionContext actionContext, bool isMainPage, PartialViewResult viewResult, string viewName, IView view\n        }\n\n        /// <summary>\n        /// Handles ViewNotFound events.\n        /// </summary>\n        [DiagnosticName(\"Microsoft.AspNetCore.Mvc.ViewNotFound\")]\n        public void OnViewNotFound()\n        {\n            // Available: ActionContext actionContext, bool isMainPage, PartialViewResult viewResult, string viewName, IEnumerable<string> searchedLocations\n        }"
    ],
    "functions": [
        "OnBeforeView",
        "OnAfterView",
        "OnBeforeViewComponent",
        "OnAfterViewComponent",
        "OnViewComponentBeforeViewExecute",
        "OnViewComponentAfterViewExecute"
    ],
    "classes": [
        "MvcViewDiagnosticListener"
    ]
}