{
    "identifiers": [
        "TValue",
        "TValue",
        "value",
        "hasValue",
        "Value",
        "value",
        "HasValue",
        "hasValue",
        "Maybe",
        "TResult",
        "TResult",
        "Func",
        "TValue",
        "TResult",
        "mapperExpression",
        "HasValue",
        "MaybeFactory",
        "Some",
        "mapperExpression",
        "Value",
        "MaybeFactory",
        "TResult",
        "Maybe",
        "TResult",
        "TIntermediate",
        "TResult",
        "Func",
        "TValue",
        "Maybe",
        "TIntermediate",
        "mapper",
        "Func",
        "TValue",
        "TIntermediate",
        "TResult",
        "getResult",
        "HasValue",
        "mapper",
        "Value",
        "intermediate",
        "HasValue",
        "MaybeFactory",
        "Some",
        "getResult",
        "Value",
        "intermediate",
        "Value",
        "MaybeFactory",
        "TResult",
        "Maybe",
        "T",
        "T",
        "T",
        "value",
        "Maybe",
        "T",
        "value",
        "Maybe",
        "T",
        "T",
        "Maybe",
        "T",
        "T"
    ],
    "literals": [],
    "variables": [
        "TValue",
        "Value",
        "HasValue",
        "intermediate"
    ],
    "comments": [
        "LINQ query expression pattern.",
        "Takes a function which transforms the value contained by Maybe to another type.",
        "</summary>",
        "<returns>",
        "An instance of Maybe containing an instance of the result type.",
        "</returns>",
        "LINQ query expression pattern.",
        "Analog to \"bind\" or Scala's \"flatMap\".",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Maybe",
        "Select",
        "SelectMany",
        "Some"
    ],
    "classes": [
        "Maybe",
        "MaybeFactory"
    ]
}