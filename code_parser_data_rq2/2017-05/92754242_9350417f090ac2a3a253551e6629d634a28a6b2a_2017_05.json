{
    "identifiers": [
        "imports",
        "imports",
        "imports",
        "Lang",
        "arguments",
        "args",
        "label",
        "label",
        "label",
        "label",
        "label",
        "i",
        "arguments",
        "i",
        "label",
        "arguments",
        "i",
        "label",
        "label",
        "i",
        "label",
        "i",
        "label",
        "i",
        "label",
        "item",
        "item",
        "Lang",
        "BasicHandler",
        "item",
        "item",
        "item",
        "item",
        "callback",
        "id",
        "item",
        "item",
        "item",
        "Lang",
        "BasicHandler",
        "item",
        "item",
        "item",
        "item",
        "name",
        "name",
        "injectedFunction",
        "name",
        "injectedFunction",
        "original",
        "item",
        "item",
        "item",
        "item",
        "name",
        "original",
        "settings",
        "settings",
        "Clutter",
        "Clutter",
        "position",
        "St",
        "position",
        "St",
        "position",
        "St",
        "position",
        "St",
        "position"
    ],
    "literals": [
        "'DashToDock.BasicHandler'",
        "'generic'",
        "'no implementation of _create in '",
        "'no implementation of _remove in '",
        "'DashToDock.GlobalSignalHandler'",
        "'DashToDock.InjectionsHandler'",
        "'dock-position'"
    ],
    "variables": [
        "Clutter",
        "Lang",
        "St",
        "BasicHandler",
        "args",
        "i",
        "i",
        "GlobalSignalsHandler",
        "callback",
        "id",
        "InjectionsHandler",
        "name",
        "injectedFunction",
        "original",
        "name",
        "original",
        "position"
    ],
    "comments": [
        "unlimited 3-long array arguments",
        "Convert arguments object to array, concatenate with generic",
        "Call addWithLabel with ags as if they were passed arguments",
        "plus unlimited 3-long array arguments",
        "Skip first element of the arguments",
        "Virtual methods to be implemented by subclass"
    ],
    "docstrings": [
        "* Simplify global signals and function injections handling\n * abstract class",
        "* Create single element to be stored in the storage structure",
        "* Correctly delete single element",
        "* Manage global signals",
        "* Manage function injection: both instances and prototype can be overridden\n * and restored",
        "* Return the actual position reverseing left and right in rtl"
    ],
    "functions": [
        "getPosition"
    ],
    "classes": []
}