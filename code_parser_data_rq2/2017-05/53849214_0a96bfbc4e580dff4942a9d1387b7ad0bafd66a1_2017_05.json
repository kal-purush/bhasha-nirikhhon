{
    "identifiers": [
        "numpy",
        "np",
        "pygem",
        "filehandler",
        "fh",
        "fh",
        "FileHandler",
        "KHandler",
        "filename",
        "_check_filename_type",
        "filename",
        "_check_extension",
        "filename",
        "filename",
        "open",
        "infile",
        "input_file",
        "num",
        "line",
        "input_file",
        "line",
        "startswith",
        "num",
        "num",
        "index",
        "line",
        "startswith",
        "num",
        "line",
        "startswith",
        "l",
        "append",
        "line",
        "l",
        "append",
        "line",
        "l",
        "append",
        "line",
        "mesh_points",
        "append",
        "l",
        "num",
        "np",
        "array",
        "mesh_points",
        "mesh_points",
        "mesh_points",
        "filename",
        "_check_filename_type",
        "filename",
        "_check_extension",
        "filename",
        "_check_infile_instantiation",
        "filename",
        "open",
        "outfile",
        "output_file",
        "open",
        "infile",
        "input_file",
        "num",
        "line",
        "input_file",
        "line",
        "startswith",
        "num",
        "num",
        "index",
        "line",
        "startswith",
        "num",
        "line",
        "startswith",
        "j",
        "line",
        "j",
        "format",
        "mesh_points",
        "i",
        "j",
        "line",
        "j",
        "i",
        "num",
        "output_file",
        "write",
        "line"
    ],
    "literals": [
        "'.k'",
        "'r'",
        "'*NODE'",
        "'$'",
        "'*'",
        "'w'",
        "'r'",
        "'*NODE'",
        "'$'",
        "'*'",
        "'{:16.10f}'"
    ],
    "variables": [
        "extensions",
        "infile",
        "index",
        "mesh_points",
        "index",
        "index",
        "index",
        "l",
        "index",
        "mesh_points",
        "outfile",
        "index",
        "i",
        "index",
        "index",
        "index",
        "line",
        "index"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nDerived module from filehandler.py to handle LS-DYNA keyword (.k) files.\n\"\"\"",
        "\"\"\"\n    LS-Dyna keyword file handler class\n\n    :cvar string infile: name of the input file to be processed.\n    :cvar string outfile: name of the output file where to write in.\n    :cvar list extensions: extensions of the input/output files. It is equal\n            to '.k'.\n    \"\"\"",
        "\"\"\"\n        Method to parse the file `filename`. It returns a matrix with all the\n        coordinates. It reads only the section *NODE of the k files.\n\n        :param string filename: name of the input file.\n\n        :return: mesh_points: it is a `n_points`-by-3 matrix containing the\n                coordinates of the points of the mesh.\n        :rtype: numpy.ndarray\n        \"\"\"",
        "\"\"\"\n        Writes a .k file, called filename, copying all the lines from\n        self.filename but the coordinates. mesh_points is a matrix that\n        contains the new coordinates to write in the .k file.\n\n        :param numpy.ndarray mesh_points: it is a `n_points`-by-3 matrix\n                          containing the coordinates of the points of the mesh\n        :param string filename: name of the output file.\n        \"\"\""
    ],
    "functions": [
        "parse",
        "write"
    ],
    "classes": [
        "KHandler"
    ]
}