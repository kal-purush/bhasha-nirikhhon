{
    "identifiers": [
        "Umbraco",
        "Core",
        "Umbraco",
        "Web",
        "Routing",
        "Articulate",
        "ContentFinderByNiceUrl",
        "PublishedContentRequest",
        "contentRequest",
        "contentRequest",
        "HasDomain",
        "route",
        "contentRequest",
        "Domain",
        "RootNodeId",
        "ToString",
        "DomainHelper",
        "PathRelativeToDomain",
        "contentRequest",
        "DomainUri",
        "contentRequest",
        "Uri",
        "GetAbsolutePathDecoded",
        "route",
        "contentRequest",
        "Uri",
        "GetAbsolutePathDecoded",
        "contentRequest",
        "Uri",
        "Segments",
        "Length",
        "segmentLength",
        "Empty",
        "i",
        "segmentLength",
        "i",
        "i",
        "segmentLength",
        "i",
        "segmentLength",
        "newRoute",
        "contentRequest",
        "Uri",
        "Segments",
        "i",
        "FindContent",
        "contentRequest",
        "newRoute",
        "node",
        "node",
        "DocumentTypeAlias",
        "node",
        "DocumentTypeAlias",
        "contentRequest",
        "PublishedContent",
        "node"
    ],
    "literals": [
        "\"ArticulateRichText\"",
        "\"ArticulateMarkdown\""
    ],
    "variables": [
        "route",
        "segmentLength",
        "newRoute",
        "i",
        "node"
    ],
    "comments": [
        "This simple logic should do the trick: basically if I find an url with more than 4 segments (the 3 date parts and the slug)",
        "I leave the last segment (the slug), remove the 3 date parts, and keep all the rest.",
        "To be 100% sure of getting the right path in case of two blog roots or similar url structure in other parts",
        "of the content tree we should probably retrieve all blog root nodes and match the url against them, but since",
        "potentially one could put articulate nodes very deep inside the tree, it would be very expensive to look for them all.",
        "If by chance something matches the format pattern I check again if there is sucn a node and if it's an articulate post"
    ],
    "docstrings": [],
    "functions": [
        "TryFindContent"
    ],
    "classes": [
        "DateFormattedPostContentFinder"
    ]
}