{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "express",
        "require",
        "process",
        "alexa",
        "alexaApp",
        "app",
        "app",
        "alexaApp",
        "request",
        "response",
        "response",
        "alexaApp",
        "alexaApp",
        "request",
        "response",
        "request",
        "_",
        "serviceName",
        "response",
        "prompt",
        "reprompt",
        "require",
        "serviceName",
        "spawn",
        "response",
        "serviceName",
        "spawn",
        "response",
        "response",
        "alexaApp",
        "request",
        "response",
        "alexaApp",
        "request",
        "response",
        "response",
        "app",
        "PORT",
        "PORT",
        "PORT",
        "https",
        "fs",
        "__dirname",
        "fs",
        "__dirname",
        "app",
        "httpsPort",
        "httpsPort",
        "httpsPort"
    ],
    "literals": [
        "\"express\"",
        "\"alexa-app\"",
        "\"fs\"",
        "\"https\"",
        "'lodash'",
        "\"test\"",
        "\"view engine\"",
        "\"ejs\"",
        "\"You launched the app!\"",
        "\"names\"",
        "\"matt\"",
        "\"joe\"",
        "\"bob\"",
        "\"bill\"",
        "\"mary\"",
        "\"jane\"",
        "\"dawn\"",
        "\"services\"",
        "\"timer\"",
        "\"google\"",
        "\"openSthIntent\"",
        "\"slots\"",
        "\"SERVICE\"",
        "\"LITERAL\"",
        "\"utterances\"",
        "\"start {a|} {services|SERVICE}\"",
        "\"launch {a|} {services|SERVICE}\"",
        "\"open {a|} {services|SERVICE}\"",
        "\"in openSthIntent\"",
        "'SERVICE'",
        "\"I didn't hear any file or service.\"",
        "\"in empty\"",
        "\"Tell me the name of file or service\"",
        "\"in non empty\"",
        "'child_process'",
        "'google'",
        "\"in goolgle\"",
        "'open'",
        "'http://www.google.com'",
        "\"Your service loaded\"",
        "\"Anything else I can help?\"",
        "\"timer\"",
        "\"in timer\"",
        "'open'",
        "'file:///Users/Victor/Google%20Drive/OCBC/IT%20Tools/Web/TCCTimer/TccTimer.aspx.html'",
        "\"Your service loaded\"",
        "\"Anthing else I can help?\"",
        "\"in else\"",
        "\"I'm sorry I can't handle your request\"",
        "\"Try another one\"",
        "\"AMAZON.StopIntent\"",
        "\"Stop\"",
        "\"version\"",
        "\"1.0\"",
        "\"session\"",
        "\"new\"",
        "\"sessionId\"",
        "\"amzn1.echo-api.session.abeee1a7-aee0-41e6-8192-e6faaed9f5ef\"",
        "\"attributes\"",
        "\"application\"",
        "\"applicationId\"",
        "\"amzn1.echo-sdk-ams.app.000000-d0ed-0000-ad00-000000d00ebe\"",
        "\"user\"",
        "\"userId\"",
        "\"amzn1.account.AM3B227HF3FAM1B261HK7FFM3A2\"",
        "\"request\"",
        "\"type\"",
        "\"IntentRequest\"",
        "\"requestId\"",
        "\"amzn1.echo-api.request.6919844a-733e-4e89-893a-fdcb77e2ef0d\"",
        "\"intent\"",
        "\"name\"",
        "\"launchTimerIntent\"",
        "\"nameIntent\"",
        "\"slots\"",
        "\"NAME\"",
        "\"LITERAL\"",
        "\"utterances\"",
        "\"my {name is|name's} {names|NAME}\"",
        "\"set my name to {names|NAME}\"",
        "\"in nameIntent\"",
        "\"Success!\"",
        "\"Listening on port \"",
        "\", try http://localhost:\"",
        "\"/test\"",
        "\"/../cert/server.key\"",
        "\"/../cert/server.crt\"",
        "\"Listening on port \"",
        "\", try https://localhost:\"",
        "\"/test\""
    ],
    "variables": [
        "express",
        "alexa",
        "fs",
        "https",
        "app",
        "_",
        "PORT",
        "alexaApp",
        "serviceName",
        "reprompt",
        "prompt",
        "spawn",
        "intentStr",
        "httpsPort"
    ],
    "comments": [
        "ALWAYS setup the alexa app and attach it to express before anything else.",
        "This is the URI to post, eg: localhost:8081/test",
        "verifies requests come from amazon alexa. Must be enabled for production.",
        "You can disable this if you're running a dev environment and want to POST",
        "things to test behavior. enabled by default.",
        "sets up a GET route when set to true. This is handy for testing in",
        "development, but not recommended for production. disabled by default",
        "now POST calls to /test in express will be handled by the app.request() function",
        "from here on you can setup any other express routes or middlewares as normal",
        "A sampel of building utterances",
        "get the service name by read the slot 'SERVICE'",
        "alexaApp.request(intentStr)\n  .then(function(response) {\n    console.log(JSON.stringify(response, null, 3));\n  });",
        "When Alexa calls the web service, port 443 for https must be used.",
        "If the program needs to bind port 443, need to run with root in mac.",
        "key: fs.readFileSync(__dirname + \"/self_cert/private-key.pem\"),",
        "cert: fs.readFileSync(__dirname + \"/self_cert/certificate.pem\")"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}