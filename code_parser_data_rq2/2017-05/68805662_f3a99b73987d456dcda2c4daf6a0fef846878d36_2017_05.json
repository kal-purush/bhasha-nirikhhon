{
    "identifiers": [
        "path",
        "url",
        "FileSystemUpdater",
        "Logger",
        "NoopLogger",
        "InMemoryFileSystem",
        "packageName",
        "packageName",
        "packageName",
        "packageName",
        "updater",
        "inMemoryFileSystem",
        "logger",
        "NoopLogger",
        "span",
        "uri",
        "url",
        "uri",
        "parts",
        "parts",
        "parts",
        "packageJsons",
        "uri",
        "parts",
        "level",
        "rootPackageJsonLevel",
        "rootPackageJsonUri",
        "uri",
        "rootPackageJsonLevel",
        "level",
        "rootPackageJsonUri",
        "packageJsons",
        "rootPackageJsonUri",
        "uri",
        "packageJsons",
        "uri",
        "span",
        "span",
        "span",
        "uri",
        "span",
        "span",
        "uri",
        "packageJsonUri",
        "packageJsonUri",
        "span",
        "packageJsonUri",
        "uri",
        "url",
        "uri",
        "parts",
        "url",
        "parts",
        "path",
        "parts",
        "packageJsonUri",
        "packageJsonUri",
        "parts",
        "parts",
        "path",
        "parts"
    ],
    "literals": [
        "'opentracing'",
        "'path'",
        "'url'",
        "'./fs'",
        "'./logging'",
        "'./memfs'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'/package.json'",
        "'/node_modules/'",
        "'/'",
        "Found ${packageJsons.size} package.json in workspace",
        "Root package.json: ${rootPackageJsonUri}",
        "string",
        "string",
        "string",
        "'package.json'",
        "'/'"
    ],
    "variables": [
        "packageJsons",
        "rootPackageJsonUri",
        "rootPackageJsonLevel",
        "Infinity",
        "parts",
        "level",
        "packageJsonUri",
        "parts",
        "packageJsonUri"
    ],
    "comments": [
        "Find locations of package.json and node_modules folders",
        "Search for package.json files _not_ inside node_modules",
        "If the current root package.json is further nested than this one, replace it"
    ],
    "docstrings": [
        "* Schema of a package.json file",
        "* True if the workspace was scanned for package.json files, they were fetched and parsed",
        "* Set of package.json URIs _defined_ in the workspace.\n\t * This does not include package.jsons of dependencies and also not package.jsons that node_modules are vendored for",
        "* The URI of the root package.json, if any",
        "* Returns an Iterable for all package.jsons in the workspace",
        "* Scans the workspace to find all packages _defined_ in the workspace, saves the content in `packages`\n\t * For each found package, installation is started in the background and tracked in `installations`\n\t *\n\t * @param span OpenTracing span for tracing",
        "* Ensures all package.json have been detected, loaded and installations kicked off\n\t *\n\t * @param span OpenTracing span for tracing",
        "* Gets the content of the closest package.json known to to the DependencyManager in the ancestors of a URI",
        "* Walks the parent directories of a given URI to find the first package.json that is known to the InMemoryFileSystem\n\t *\n\t * @param uri URI of a file or directory in the workspace\n\t * @return The found package.json or undefined if none found"
    ],
    "functions": [
        "packageJsonUris",
        "scan",
        "ensureScanned",
        "getClosestPackageJson",
        "getClosestPackageJsonUri"
    ],
    "classes": [
        "PackageManager"
    ]
}