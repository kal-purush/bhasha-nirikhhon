{
    "identifiers": [
        "os",
        "platform",
        "sys",
        "PIL",
        "Image",
        "pandas",
        "pd",
        "numpy",
        "np",
        "multiprocessing",
        "mp",
        "os",
        "popen",
        "read",
        "split",
        "columns",
        "rows",
        "rows",
        "columns",
        "platform",
        "python_version",
        "platform",
        "architecture",
        "platform",
        "node",
        "platform",
        "version",
        "platform",
        "platform",
        "platform",
        "processor",
        "platform",
        "python_compiler",
        "platform",
        "uname",
        "platform",
        "system",
        "returnornot",
        "platform_system",
        "returnornot",
        "sysstr",
        "os",
        "popen",
        "read",
        "split",
        "columns",
        "rows",
        "platform",
        "system",
        "os",
        "popen",
        "read",
        "split",
        "columns",
        "rows",
        "platform",
        "system",
        "img_name",
        "Image",
        "open",
        "img_name",
        "img",
        "size",
        "width",
        "height",
        "img",
        "resize",
        "w",
        "h",
        "img",
        "character_image",
        "character_image",
        "load",
        "np",
        "zeros",
        "character_image",
        "size",
        "character_image",
        "size",
        "scan_rep",
        "pix",
        "character_image",
        "pd",
        "DataFrame",
        "data",
        "dataset",
        "dataset",
        "pix",
        "character_image",
        "symboldataset",
        "i",
        "xrange",
        "character_image",
        "size",
        "j",
        "xrange",
        "character_image",
        "size",
        "pix",
        "i",
        "j",
        "data",
        "pic_str",
        "width",
        "height",
        "x",
        "xrange",
        "h",
        "sys",
        "stdout",
        "write",
        "length",
        "sys",
        "stdout",
        "flush",
        "bmp_img_name",
        "os",
        "path",
        "splitext",
        "bmp_img_name",
        "ext",
        "lower",
        "bmp_img_name",
        "name",
        "ext",
        "lower",
        "ext",
        "bmp_img_name",
        "testandbmp2png",
        "bmp_img_name",
        "ext",
        "ext",
        "p",
        "p",
        "p",
        "p",
        "p",
        "os",
        "listdir",
        "p",
        "x",
        "x",
        "a",
        "os",
        "path",
        "isdir",
        "p",
        "x",
        "b",
        "rdir",
        "os",
        "walk",
        "rdir",
        "root",
        "subfolder",
        "files_a",
        "fo",
        "file_a",
        "files_a",
        "root",
        "file_a",
        "f",
        "append",
        "full_path_for_each_bmp",
        "f",
        "f",
        "f",
        "f",
        "path",
        "name",
        "os",
        "path",
        "splitext",
        "f_bmp",
        "f_ext",
        "path",
        "name",
        "os",
        "path",
        "splitext",
        "f_bmp_png",
        "f_png_name",
        "Image",
        "open",
        "f_bmp",
        "save",
        "f",
        "Image",
        "open",
        "img_name",
        "pic2symboltext",
        "pandalizationfortest",
        "img",
        "scan_all_pic_file_process",
        "test",
        "mp",
        "Pool",
        "pool",
        "bmp2png",
        "ff",
        "saving_path",
        "filename",
        "ext",
        "lower",
        "saving_path",
        "filename",
        "Image",
        "open",
        "bmp_img_name",
        "save",
        "target"
    ],
    "literals": [
        "'stty size'",
        "'r'",
        "'show_bound_process'",
        "'stty size'",
        "'r'",
        "'pic2text process'",
        "'stty size'",
        "'r'",
        "'resize picture process'",
        "'*'",
        "''",
        "''",
        "''",
        "''",
        "'.bmp'",
        "'.bmp'",
        "'.png'",
        "'changed'",
        "'unchanged'",
        "\"\"",
        "\"/\"",
        "\"/\"",
        "'/'",
        "'.bmp'",
        "'_png/'",
        "'.png'",
        "'__main__'",
        "'/Users/admin/Documents/python/personal_terminal_demo/demo/test/0052.bmp'",
        "'/Users/admin/Documents/python/personal_terminal_demo/demo/video2picture/Capture'",
        "'.bmp'"
    ],
    "variables": [
        "rows",
        "columns",
        "width",
        "height",
        "python_version",
        "platform_architecture",
        "node",
        "platform_version",
        "platform_name_version",
        "processor",
        "python_compiler",
        "otherinfo",
        "platform_system",
        "sysstr",
        "name",
        "rows",
        "columns",
        "width",
        "height",
        "system",
        "name",
        "rows",
        "columns",
        "width",
        "height",
        "system",
        "symboldataset",
        "img",
        "img_w",
        "img_h",
        "windows_w",
        "windows_h",
        "img",
        "pix",
        "symboldataset",
        "data",
        "dataset",
        "symboldataset",
        "data",
        "data",
        "j",
        "i",
        "length",
        "h",
        "n",
        "name",
        "ext",
        "status",
        "name",
        "ext",
        "n",
        "name",
        "ext",
        "status",
        "status",
        "p",
        "p",
        "a",
        "b",
        "fo",
        "f",
        "full_path_for_each_bmp",
        "path",
        "name",
        "f_bmp",
        "f_name",
        "f_ext",
        "f_bmp_png",
        "f_png_name",
        "f_png_ext",
        "f",
        "img_name",
        "img",
        "s",
        "test",
        "ff",
        "pool",
        "target"
    ],
    "comments": [
        "coding=utf-8",
        "Python version",
        "programme structure('32bit', 'WindowsPE')",
        "name",
        "capture operator system's core version",
        "capture operator system,Windows-7-6.1.7601-SP1",
        "computer processor info,'Intel64 Family 6 Model 42 Stepping 7, GenuineIntel'",
        "",
        "other",
        "system",
        "if(sysstr ==\"Windows\"):",
        "return (\"Call Windows tasks\")",
        "elif(sysstr == \"Linux\"):",
        "print (\"Call Linux tasks\")",
        "elif(sysstr == \"Darwin\"):",
        "print (\"Call Darwin or Mac tasks\")",
        "else:",
        "print (\"Other System tasks\")",
        "print",
        "print platform.system_alias()",
        "print",
        "return (rows,columns)",
        "def get_terminal_width_resize():",
        "c = commands.getoutput('resize').split('\\n')",
        "c = [x for x in c if x.startswith('COLUMNS=')]",
        "if c:",
        "c = c[0]",
        "dummy, c = c.split('=', 1)",
        "if c[-1] == ';':",
        "c = c[:-1]",
        "if c:",
        "return int(c)",
        "else:",
        "return None",
        "def get_terminal_height():",
        "c = commands.getoutput('resize').split('\\n')",
        "c = [x for x in c if x.startswith('LINES=')]",
        "if c:",
        "c = c[0]",
        "dummy, c = c.split('=', 1)",
        "if c[-1] == ';':",
        "c = c[:-1]",
        "if c:",
        "return int(c)",
        "else:",
        "return None",
        "self.width = 20",
        "self.height = 50",
        "system",
        "system",
        "img_m = max(img.size)",
        "img = img.convert('L')",
        "print datas",
        "data[0][1]=1",
        "if data[i][j]<10:",
        "data[i][j]=0",
        "else:",
        "data[i][j]=1",
        "def create_symbol_text(img):",
        "pix = img.load()",
        "pic_str = ''",
        "width, height = img.size",
        "pandalizationfortest(img",
        "pic_str += color[int(pix[w,h]) * 14 /255]",
        "pic_str += '\\n'",
        "p = p.replace( \"/\",\"/\")",
        "print root",
        "num=root.lstrip(rdir)",
        "print num,type(num)",
        "def multi_scan(img):",
        "pool = mp.Pool()",
        "for rdir in rdirs:",
        "yv=pool.map",
        "ff=[]",
        "ff.append(fff[199])",
        "ff.append(fff[100])",
        "print len(ff),ff[0][0]+'/'+ff[0][1]",
        "for rdir in rdirs:",
        "a=TestPlatform()",
        "print a.platform_system",
        "v.printdash()",
        "print g.height"
    ],
    "docstrings": [],
    "functions": [
        "get_terminal_bound",
        "UsePlatform",
        "preprocess",
        "pandalizationfortest",
        "scan_rep",
        "printdash",
        "testbmp",
        "bmp2png",
        "getDirList",
        "scan_all_pic_file_process",
        "bmp2png",
        "bmptopng"
    ],
    "classes": [
        "TestPlatform",
        "show_terminal_bound",
        "pic2symboltext",
        "checkbmp2png"
    ]
}