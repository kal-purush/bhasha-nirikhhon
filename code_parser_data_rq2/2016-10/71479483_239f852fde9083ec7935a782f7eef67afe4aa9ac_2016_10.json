{
    "identifiers": [
        "prop",
        "memory",
        "prop",
        "prop",
        "prop",
        "prop",
        "prefixes",
        "ucProp",
        "ucProp",
        "memory",
        "prop",
        "i",
        "props",
        "style",
        "props",
        "i",
        "memory",
        "prop",
        "props",
        "i",
        "memory",
        "prop",
        "a",
        "a",
        "el",
        "props",
        "key",
        "props",
        "props",
        "key",
        "pkey",
        "pfx",
        "key",
        "pkey",
        "el",
        "pkey",
        "props",
        "key",
        "el",
        "numeric",
        "fallback",
        "isNaN",
        "numeric",
        "fallback",
        "numeric",
        "id",
        "id",
        "selector",
        "context",
        "context",
        "context",
        "context",
        "selector",
        "selector",
        "context",
        "context",
        "context",
        "arrayify",
        "context",
        "selector",
        "el",
        "eventName",
        "detail",
        "eventName",
        "detail",
        "el",
        "t",
        "t",
        "t",
        "t",
        "r",
        "revert",
        "r",
        "r",
        "r",
        "revert",
        "rZ",
        "rY",
        "rX",
        "rX",
        "rY",
        "rZ",
        "s",
        "s",
        "p",
        "p",
        "byId",
        "config",
        "config",
        "config",
        "hScale",
        "wScale",
        "wScale",
        "hScale",
        "config",
        "scale",
        "config",
        "scale",
        "config",
        "config",
        "scale",
        "config",
        "scale",
        "config",
        "scale",
        "navigator",
        "pfx",
        "body",
        "body",
        "ua",
        "impressSupported",
        "body",
        "body",
        "body",
        "rootId",
        "impressSupported",
        "empty",
        "empty",
        "empty",
        "empty",
        "rootId",
        "rootId",
        "roots",
        "rootId",
        "roots",
        "rootId",
        "byId",
        "rootId",
        "step",
        "lastEntered",
        "step",
        "triggerEvent",
        "step",
        "lastEntered",
        "step",
        "step",
        "lastEntered",
        "step",
        "triggerEvent",
        "step",
        "lastEntered",
        "el",
        "idx",
        "el",
        "toNumber",
        "data",
        "toNumber",
        "data",
        "toNumber",
        "data",
        "toNumber",
        "data",
        "toNumber",
        "data",
        "toNumber",
        "data",
        "data",
        "toNumber",
        "data",
        "el",
        "el",
        "el",
        "idx",
        "stepsData",
        "el",
        "step",
        "css",
        "el",
        "translate",
        "step",
        "rotate",
        "step",
        "scale",
        "step",
        "initialized",
        "$",
        "meta",
        "meta",
        "meta",
        "meta",
        "root",
        "config",
        "toNumber",
        "rootData",
        "defaults",
        "toNumber",
        "rootData",
        "defaults",
        "toNumber",
        "rootData",
        "defaults",
        "toNumber",
        "rootData",
        "defaults",
        "toNumber",
        "rootData",
        "defaults",
        "toNumber",
        "rootData",
        "defaults",
        "windowScale",
        "computeWindowScale",
        "config",
        "arrayify",
        "root",
        "el",
        "canvas",
        "el",
        "root",
        "canvas",
        "css",
        "body",
        "css",
        "root",
        "rootStyles",
        "css",
        "root",
        "perspective",
        "config",
        "windowScale",
        "scale",
        "windowScale",
        "css",
        "canvas",
        "rootStyles",
        "body",
        "body",
        "steps",
        "$$",
        "root",
        "steps",
        "initStep",
        "currentState",
        "initialized",
        "triggerEvent",
        "root",
        "roots",
        "rootId",
        "step",
        "step",
        "step",
        "step",
        "steps",
        "steps",
        "step",
        "steps",
        "step",
        "step",
        "step",
        "byId",
        "step",
        "step",
        "step",
        "stepsData",
        "step",
        "step",
        "el",
        "duration",
        "initialized",
        "el",
        "getStep",
        "el",
        "stepsData",
        "el",
        "activeStep",
        "activeStep",
        "body",
        "activeStep",
        "el",
        "body",
        "el",
        "step",
        "step",
        "step",
        "step",
        "step",
        "step",
        "step",
        "target",
        "currentState",
        "duration",
        "toNumber",
        "duration",
        "config",
        "duration",
        "el",
        "activeStep",
        "windowScale",
        "computeWindowScale",
        "config",
        "target",
        "windowScale",
        "activeStep",
        "activeStep",
        "el",
        "onStepLeave",
        "activeStep",
        "css",
        "root",
        "perspective",
        "config",
        "targetScale",
        "scale",
        "targetScale",
        "duration",
        "zoomin",
        "delay",
        "css",
        "canvas",
        "rotate",
        "target",
        "translate",
        "target",
        "duration",
        "zoomin",
        "delay",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "currentState",
        "target",
        "delay",
        "currentState",
        "target",
        "activeStep",
        "el",
        "stepEnterTimeout",
        "stepEnterTimeout",
        "onStepEnter",
        "activeStep",
        "duration",
        "delay",
        "el",
        "steps",
        "activeStep",
        "prev",
        "prev",
        "steps",
        "prev",
        "steps",
        "steps",
        "prev",
        "steps",
        "activeStep",
        "next",
        "next",
        "steps",
        "steps",
        "next",
        "steps",
        "next",
        "root",
        "steps",
        "step",
        "step",
        "root",
        "root",
        "root",
        "root",
        "lastHash",
        "lastHash",
        "getElementFromHash",
        "getElementFromHash",
        "steps",
        "body",
        "roots",
        "rootId",
        "init",
        "next",
        "prev",
        "impress",
        "impressSupported",
        "fn",
        "delay",
        "clearTimeout",
        "timer",
        "timer",
        "setTimeout",
        "fn",
        "context",
        "args",
        "delay",
        "api",
        "api",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "href",
        "href",
        "target",
        "href",
        "api",
        "target",
        "target",
        "target",
        "target",
        "target",
        "target",
        "api",
        "target",
        "x",
        "width",
        "result",
        "api",
        "x",
        "width",
        "result",
        "api",
        "result",
        "throttle",
        "api"
    ],
    "literals": [
        "\"use strict\"",
        "\"dummy\"",
        "\"Webkit Moz O ms Khtml\"",
        "\" \"",
        "\"undefined\"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"CustomEvent\"",
        "\" translate3d(\"",
        "\"px,\"",
        "\"px,\"",
        "\"px) \"",
        "\" rotateX(\"",
        "\"deg) \"",
        "\" rotateY(\"",
        "\"deg) \"",
        "\" rotateZ(\"",
        "\"deg) \"",
        "\" scale(\"",
        "\") \"",
        "\" perspective(\"",
        "\"px) \"",
        "\"\"",
        "\"perspective\"",
        "\" impress-not-supported \"",
        "\"impress-not-supported\"",
        "\"impress-supported\"",
        "\"impress\"",
        "\"impress-root-\"",
        "\"impress-root-\"",
        "\"div\"",
        "\"impress:stepenter\"",
        "\"impress:stepleave\"",
        "\"step-\"",
        "\"impress-\"",
        "\"absolute\"",
        "\"translate(-50%,-50%)\"",
        "\"preserve-3d\"",
        "\"meta[name='viewport']\"",
        "\"meta\"",
        "\"width=device-width, minimum-scale=1, maximum-scale=1, user-scalable=no\"",
        "\"viewport\"",
        "\"100%\"",
        "\"100%\"",
        "\"hidden\"",
        "\"absolute\"",
        "\"top left\"",
        "\"all 0s ease-in-out\"",
        "\"preserve-3d\"",
        "\"50%\"",
        "\"50%\"",
        "\"impress-disabled\"",
        "\"impress-enabled\"",
        "\".step\"",
        "\"impress:init\"",
        "\"impress-root-\"",
        "\"number\"",
        "\"string\"",
        "\"impress-\"",
        "\"impress-\"",
        "\"active\"",
        "\"impress-on-\"",
        "\"active\"",
        "\"impress-on-\"",
        "\"ms\"",
        "\"ms\"",
        "\"ms\"",
        "\"ms\"",
        "\"impress:init\"",
        "\"future\"",
        "\"impress:stepenter\"",
        "\"past\"",
        "\"future\"",
        "\"present\"",
        "\"impress:stepleave\"",
        "\"present\"",
        "\"past\"",
        "\"impress:init\"",
        "\"\"",
        "\"impress:stepenter\"",
        "\"#/\"",
        "\"hashchange\"",
        "\"impress-disabled\"",
        "\"impress-root-\"",
        "\"use strict\"",
        "\"impress:init\"",
        "\"keydown\"",
        "\"keyup\"",
        "\"click\"",
        "\"A\"",
        "\"A\"",
        "\"href\"",
        "\"#\"",
        "\"click\"",
        "\"step\"",
        "\"active\"",
        "\"touchstart\"",
        "\"resize\"",
        "\".step.active\""
    ],
    "variables": [
        "pfx",
        "style",
        "prefixes",
        "memory",
        "ucProp",
        "props",
        "arrayify",
        "css",
        "key",
        "pkey",
        "toNumber",
        "byId",
        "$",
        "$$",
        "triggerEvent",
        "translate",
        "rotate",
        "rX",
        "rY",
        "rZ",
        "scale",
        "perspective",
        "getElementFromHash",
        "computeWindowScale",
        "hScale",
        "wScale",
        "scale",
        "body",
        "ua",
        "impressSupported",
        "roots",
        "defaults",
        "empty",
        "impress",
        "stepsData",
        "activeStep",
        "currentState",
        "steps",
        "config",
        "windowScale",
        "root",
        "canvas",
        "initialized",
        "lastEntered",
        "onStepEnter",
        "onStepLeave",
        "initStep",
        "data",
        "step",
        "init",
        "meta",
        "rootData",
        "rootStyles",
        "getStep",
        "stepEnterTimeout",
        "step",
        "target",
        "zoomin",
        "delay",
        "targetScale",
        "prev",
        "prev",
        "next",
        "next",
        "lastHash",
        "throttle",
        "timer",
        "context",
        "args",
        "arguments",
        "api",
        "target",
        "href",
        "target",
        "x",
        "width",
        "result"
    ],
    "comments": [
        "jshint bitwise:true, curly:true, eqeqeq:true, forin:true, latedef:true, newcap:true,\n         noarg:true, noempty:true, undef:true, strict:true, browser:true",
        "You are one of those who like to know how things work inside?",
        "Let me show you the cogs that make impress.js run...",
        "HELPER FUNCTIONS",
        "`pfx` is a function that takes a standard CSS property name as a parameter",
        "and returns it's prefixed version valid for current browser it runs in.",
        "The code is heavily inspired by Modernizr http://www.modernizr.com/",
        "`arraify` takes an array-like object and turns it into real Array",
        "to make all the Array.prototype goodness available.",
        "`css` function applies the styles given in `props` object to the element",
        "given as `el`. It runs all property names through `pfx` function to make",
        "sure proper prefixed version of the property is used.",
        "`toNumber` takes a value given as `numeric` parameter and tries to turn",
        "it into a number. If it is not possible it returns 0 (or other value",
        "given as `fallback`).",
        "`byId` returns element with given `id` - you probably have guessed that ;)",
        "`$` returns first element for given CSS `selector` in the `context` of",
        "the given element or whole document.",
        "`$$` return an array of elements for given CSS `selector` in the `context` of",
        "the given element or whole document.",
        "`triggerEvent` builds a custom DOM event with given `eventName` and `detail` data",
        "and triggers it on element given as `el`.",
        "`translate` builds a translate transform string for given data.",
        "`rotate` builds a rotate transform string for given data.",
        "By default the rotations are in X Y Z order that can be reverted by passing `true`",
        "as second parameter.",
        "`scale` builds a scale transform string for given data.",
        "`perspective` builds a perspective transform string for given data.",
        "`getElementFromHash` returns an element located by id from hash part of",
        "window location.",
        "Get id from url # by removing `#` or `#/` from the beginning,",
        "so both \"fallback\" `#slide-id` and \"enhanced\" `#/slide-id` will work",
        "`computeWindowScale` counts the scale factor between window size and size",
        "defined for the presentation in the config.",
        "CHECK SUPPORT",
        "Browser should support CSS 3D transtorms",
        "Browser should support `classList` and `dataset` APIs",
        "But some mobile devices need to be blacklisted,",
        "because their CSS 3D support or hardware is not",
        "good enough to run impress.js properly, sorry...",
        "We can't be sure that `classList` is supported",
        "GLOBALS AND DEFAULTS",
        "This is where the root elements of all impress.js instances will be kept.",
        "Yes, this means you can have more than one instance on a page, but I'm not",
        "sure if it makes any sense in practice ;)",
        "Some default config values.",
        "It's just an empty function ... and a useless comment.",
        "IMPRESS.JS API",
        "And that's where interesting things will start to happen.",
        "It's the core `impress` function that returns the impress.js API",
        "for a presentation based on the element with given id ('impress'",
        "by default).",
        "If impress.js is not supported by the browser return a dummy API",
        "it may not be a perfect solution but we return early and avoid",
        "running code that may use features not implemented in the browser.",
        "If given root is already initialized just return the API",
        "Data of all presentation steps",
        "Element of currently active step",
        "Current state (position, rotation and scale) of the presentation",
        "Array of step elements",
        "Configuration options",
        "Scale factor of the browser window",
        "Root presentation elements",
        "STEP EVENTS",
        "",
        "There are currently two step events triggered by impress.js",
        "`impress:stepenter` is triggered when the step is shown on the",
        "screen (the transition from the previous one is finished) and",
        "`impress:stepleave` is triggered when the step is left (the",
        "transition to next step just starts).",
        "Reference to last entered step",
        "`onStepEnter` is called whenever the step element is entered",
        "but the event is triggered only if the step is different than",
        "last entered step.",
        "`onStepLeave` is called whenever the step element is left",
        "but the event is triggered only if the step is the same as",
        "last entered step.",
        "`initStep` initializes given step element by reading data from its",
        "data attributes and setting correct styles.",
        "`init` API function that initializes (and runs) the presentation.",
        "First we set up the viewport for mobile devices.",
        "For some reason iPad goes nuts when it is not done properly.",
        "Initialize configuration object",
        "Wrap steps with \"canvas\" element",
        "Set initial styles",
        "Get and init steps",
        "Set a default initial state of the canvas",
        "`getStep` is a helper function that returns a step element defined by parameter.",
        "If a number is given, step with index given by the number is returned, if a string",
        "is given step element with such id is returned, if DOM element is given it is returned",
        "if it is a correct step element.",
        "Used to reset timeout for `impress:stepenter` event",
        "`goto` API function that moves to step given with `el` parameter",
        "(by index, id or element), with a transition `duration` optionally",
        "given as second parameter.",
        "Presentation not initialized or given element is not a step",
        "Sometimes it's possible to trigger focus on first link with some keyboard action.",
        "Browser in such a case tries to scroll the page to make this element visible",
        "(even that body overflow is set to hidden) and it breaks our careful positioning.",
        "",
        "So, as a lousy (and lazy) workaround we will make the page scroll back to the top",
        "whenever slide is selected",
        "",
        "If you are reading this and know any better way to handle it, I'll be glad to hear",
        "about it!",
        "Compute target state of the canvas based on given step",
        "Check if the transition is zooming in or not.",
        "",
        "This information is used to alter the transition style:",
        "when we are zooming in - we start with move and rotate transition",
        "and the scaling is delayed, but when we are zooming out we start",
        "with scaling down and move and rotation are delayed.",
        "If the same step is re-selected, force computing window scaling,",
        "because it is likely to be caused by window resize",
        "Trigger leave of currently active element (if it's not the same step again)",
        "Now we alter transforms of `root` and `canvas` to trigger transitions.",
        "",
        "And here is why there are two elements: `root` and `canvas` - they are",
        "being animated separately:",
        "`root` is used for scaling and `canvas` for translate and rotations.",
        "Transitions on them are triggered with different delays (to make",
        "visually nice and 'natural' looking transitions), so we need to know",
        "that both of them are finished.",
        "To keep the perspective look similar for different scales",
        "we need to 'scale' the perspective, too",
        "Here is a tricky part...",
        "",
        "If there is no change in scale or no change in rotation and translation, it means",
        "there was actually no delay - because there was no transition on `root` or `canvas`",
        "elements. We want to trigger `impress:stepenter` event in the correct moment, so",
        "here we compare the current and target values to check if delay should be taken into",
        "account.",
        "",
        "I know that this `if` statement looks scary, but it's pretty simple when you know",
        "what is going on",
        "- it's simply comparing all the values.",
        "Store current state",
        "And here is where we trigger `impress:stepenter` event.",
        "We simply set up a timeout to fire it taking transition duration",
        "(and possible delay) into account.",
        "",
        "I really wanted to make it in more elegant way. The `transitionend` event seemed to",
        "be the best way to do it, but the fact that I'm using transitions on two separate",
        "elements and that the `transitionend` event is only triggered when there was a",
        "transition (change in the values) caused some bugs and made the code really",
        "complicated, cause I had to handle all the conditions separately. And it still",
        "needed a `setTimeout` fallback for the situations when there is no transition at",
        "all.",
        "So I decided that I'd rather make the code simpler than use shiny new",
        "`transitionend`.",
        "",
        "If you want learn something interesting and see how it was done with `transitionend`",
        "go back to",
        "version 0.5.2 of impress.js:",
        "http://github.com/bartaz/impress.js/blob/0.5.2/js/impress.js",
        "`prev` API function goes to previous step (in document order)",
        "`next` API function goes to next step (in document order)",
        "Adding some useful classes to step elements.",
        "",
        "All the steps that have not been shown yet are given `future` class.",
        "When the step is entered the `future` class is removed and the `present`",
        "class is given. When the step is left `present` class is replaced with",
        "`past` class.",
        "",
        "So every step element is always in one of three possible states:",
        "`future`, `present` and `past`.",
        "",
        "There classes can be used in CSS to style different types of steps.",
        "For example the `present` class can be used to trigger some custom",
        "animations when step is shown.",
        "STEP CLASSES",
        "Adding hash change support.",
        "Last hash detected",
        "`#/step-id` is used instead of `#step-id` to prevent default browser",
        "scrolling to element in hash.",
        "",
        "And it has to be set after animation finishes, because in Chrome it",
        "makes transtion laggy.",
        "BUG: http://code.google.com/p/chromium/issues/detail?id=62820",
        "When the step is entered hash in the location is updated",
        "(just few lines above from here), so the hash change is",
        "triggered and we would call `goto` again on the same element.",
        "",
        "To avoid this we store last entered hash and compare.",
        "START",
        "by selecting step defined in url or first step of the presentation",
        "Store and return API for given impress.js root element",
        "Flag that can be used in JS to check if browser have passed the support test",
        "NAVIGATION EVENTS",
        "As you can see this part is separate from the impress.js core code.",
        "It's because these navigation actions only need what impress.js provides with",
        "its simple API.",
        "",
        "In future I think about moving it to make them optional, move to separate files",
        "and treat more like a 'plugins'.",
        "Throttling function calls, by Remy Sharp",
        "http://remysharp.com/2010/07/21/throttling-function-calls/",
        "Wait for impress.js to be initialized",
        "Getting API from event data.",
        "So you don't event need to know what is the id of the root element",
        "or anything. `impress:init` event data gives you everything you",
        "need to control the presentation that was just initialized.",
        "KEYBOARD NAVIGATION HANDLERS",
        "Prevent default keydown action when one of supported key is pressed.",
        "Trigger impress action (next or prev) on keyup.",
        "Supported keys are:",
        "[space] - quite common in presentation software to move forward",
        "[up] [right] / [down] [left] - again common and natural addition,",
        "[pgdown] / [pgup] - often triggered by remote controllers,",
        "[tab] - this one is quite controversial, but the reason it ended up on",
        "this list is quite an interesting story... Remember that strange part",
        "in the impress.js code where window is scrolled to 0,0 on every presentation",
        "step, because sometimes browser scrolls viewport because of the focused element?",
        "Well, the [tab] key by default navigates around focusable elements, so clicking",
        "it very often caused scrolling to focused element and breaking impress.js",
        "positioning. I didn't want to just prevent this default action, so I used [tab]",
        "as another way to moving to next step... And yes, I know that for the sake of",
        "consistency I should add [shift+tab] as opposite action...",
        "Page up",
        "Left",
        "Up",
        "Tab",
        "Space",
        "Page down",
        "Right",
        "Down",
        "Delegated handler for clicking on the links to presentation steps",
        "Event delegation with \"bubbling\"",
        "Check if event target (or any of its parents is a link)",
        "If it's a link to presentation step, target this step",
        "Delegated handler for clicking on step elements",
        "Find closest step element that is not active",
        "Touch handler to detect taps on the left and right side of the screen",
        "based on awesome work of @hakimel: https://github.com/hakimel/reveal.js",
        "Rescale presentation when window is resized",
        "Force going to active step again, to trigger rescaling",
        "THAT'S ALL FOLKS!",
        "",
        "Thanks for reading it all.",
        "Or thanks for scrolling down and reading the last part.",
        "",
        "I've learnt a lot when building impress.js and I hope this code and comments",
        "will help somebody learn at least some part of it."
    ],
    "docstrings": [
        "* impress.js\n *\n * impress.js is a presentation tool based on the power of CSS3 transforms and transitions\n * in modern browsers and inspired by the idea behind prezi.com.\n *\n *\n * Copyright 2011-2012 Bartek Szopka (@bartaz)\n *\n * Released under the MIT and GPL Licenses.\n *\n * ------------------------------------------------\n *  author:  Bartek Szopka\n *  version: 0.5.3\n *  url:     http://bartaz.github.com/impress.js/\n *  source:  http://github.com/bartaz/impress.js/"
    ],
    "functions": [],
    "classes": []
}