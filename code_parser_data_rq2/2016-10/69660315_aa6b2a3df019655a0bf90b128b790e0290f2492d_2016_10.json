{
    "identifiers": [
        "assign",
        "keys",
        "find",
        "ReactChild",
        "ReactElement",
        "isValidElement",
        "jasmine",
        "name",
        "expected",
        "actual",
        "strict",
        "expected",
        "actual",
        "actual",
        "expected",
        "find",
        "expected",
        "e",
        "i",
        "findDifference",
        "e",
        "actual",
        "i",
        "strict",
        "diff",
        "diff",
        "toString",
        "expected",
        "toString",
        "actual",
        "isJasmineAny",
        "expected",
        "expected",
        "actual",
        "toString",
        "expected",
        "toString",
        "actual",
        "expected",
        "actual",
        "expected",
        "actual",
        "actual",
        "expected",
        "toString",
        "expected",
        "toString",
        "actual",
        "expected",
        "actual",
        "toString",
        "actualJson",
        "expectedJson",
        "actualJson",
        "msgPrefix",
        "expectedJson",
        "prop",
        "expectedJson",
        "compareProp",
        "prop",
        "difference",
        "difference",
        "strict",
        "keys",
        "actualJson",
        "prop",
        "prop",
        "expectedJson",
        "unexpectedProps",
        "msgPrefix",
        "keys",
        "expectedJson",
        "unexpectedProps",
        "strict",
        "strictCompareChildren",
        "compareChildren",
        "prop",
        "expectedJson",
        "prop",
        "prop",
        "actualJson",
        "msgPrefix",
        "prop",
        "actualJson",
        "prop",
        "isJasmineAny",
        "expectedVal",
        "expectedVal",
        "actualVal",
        "msgPrefix",
        "prop",
        "expectedVal",
        "jasmine",
        "actualVal",
        "prop",
        "compareClasses",
        "expectedVal",
        "actualVal",
        "difference",
        "difference",
        "jasmine",
        "expectedVal",
        "actualVal",
        "msgPrefix",
        "prop",
        "jasmine",
        "expectedVal",
        "jasmine",
        "actualVal",
        "expectedClassName",
        "actualClassName",
        "expectedClassName",
        "actualClassName",
        "expectedClasses",
        "c",
        "actualClasses",
        "c",
        "missingClasses",
        "msgPrefix",
        "missingClasses",
        "i",
        "expectedJson",
        "i",
        "findDifference",
        "expectedJson",
        "i",
        "actualJson",
        "i",
        "childDiff",
        "actualJson",
        "expectedJson",
        "msgPrefix",
        "toString",
        "expectedJson",
        "i",
        "actualJson",
        "toString",
        "childDiff",
        "actualJson",
        "expectedJson",
        "msgPrefix",
        "expectedJson",
        "actualJson",
        "toString",
        "actualJson",
        "expectedJson",
        "expectedIndex",
        "expectedJson",
        "expectedIndex",
        "expectedJson",
        "expectedIndex",
        "actualIndex",
        "actualJson",
        "actualIndex",
        "findDifference",
        "expectedChild",
        "actualJson",
        "actualIndex",
        "actualIndex",
        "actualJson",
        "msgPrefix",
        "toString",
        "expectedChild",
        "actualJson",
        "toString",
        "structure",
        "isJasmineAny",
        "structure",
        "structure",
        "structure",
        "structure",
        "structure",
        "structure",
        "structure",
        "toString",
        "structure",
        "json",
        "json",
        "json",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "n",
        "toElementStructure",
        "n",
        "node",
        "HTMLElement",
        "domToStructure",
        "node",
        "reactToStructure",
        "node",
        "jasmine",
        "domNode",
        "domNode",
        "domNode",
        "name",
        "domNode",
        "attr",
        "attr",
        "attr",
        "props",
        "attr",
        "attr",
        "props",
        "props",
        "props",
        "props",
        "domNode",
        "child",
        "child",
        "domToStructure",
        "child",
        "jasmine",
        "child",
        "child",
        "child",
        "child",
        "child",
        "isJasmineAny",
        "child",
        "child",
        "isValidElement",
        "child",
        "elemToStructure",
        "child",
        "jasmine",
        "child",
        "reactNode",
        "reactNode",
        "reactNode",
        "reactNode",
        "assign",
        "reactNode",
        "props",
        "props",
        "props",
        "props",
        "props",
        "propName",
        "props",
        "props",
        "propName",
        "propValue",
        "propValue",
        "propValue",
        "props",
        "propName",
        "propValue",
        "propValue",
        "isValidElement",
        "propValue",
        "props",
        "propName",
        "elemToStructure",
        "propValue",
        "propValue",
        "props",
        "propName",
        "children",
        "c",
        "c",
        "reactToStructure",
        "obj",
        "obj",
        "jasmine",
        "obj",
        "obj"
    ],
    "literals": [
        "\"core-js/fn/object/assign\"",
        "\"core-js/fn/object/keys\"",
        "\"core-js/fn/array/from\"",
        "\"core-js/fn/array/find\"",
        "\"react\"",
        "string",
        "string",
        "string",
        "string",
        "Expected ${toString(expected)}, but got ${toString(actual)}",
        "Expected something matching ${toString(expected)}, but got ${toString(actual)}",
        "\"string\"",
        "\"string\"",
        "Expected ${toString(expected)}, but got ${toString(actual)}",
        "Expected ${toString(actualJson)} to have",
        "${msgPrefix} type '${expectedJson.type}'",
        "${msgPrefix} properties ${keys(expectedJson.props).join(\", \")}",
        "\", \"",
        "but it also has ${unexpectedProps.join(\", \")}",
        "\", \"",
        "string",
        "${msgPrefix} property ${prop}",
        "${msgPrefix} property ${prop} to match ${expectedVal.jasmineToString()}",
        "but it was '${jasmine.pp(actualVal)}'",
        "\"className\"",
        "${msgPrefix} property ${prop} to equal '${jasmine.pp(expectedVal)}'",
        "but it was '${jasmine.pp(actualVal)}'",
        "string",
        "string",
        "\"\"",
        "\"\"",
        "${msgPrefix} classes ${missingClasses.join(\", \")}",
        "\", \"",
        "${msgPrefix} child ${toString(expectedJson.children[i])}, but it has only ${actualJson.children.map(toString)}",
        "${msgPrefix} exactly ${expectedJson.children.length} children,",
        "but it has ${actualJson.children.length}. The first extra child is:\\n",
        "${msgPrefix} a child like ${toString(expectedChild)}",
        "but it is missing in ${actualJson.children.map(toString).join(\", \")}",
        "\", \"",
        "string",
        "\"string\"",
        "text '${structure}'",
        "\"[\"",
        "\", \"",
        "\"]\"",
        "\"element \"",
        "\"className\"",
        "\".\"",
        "\"className\"",
        "\".\"",
        "\"\"",
        "\"object\"",
        "\"nodes\"",
        "\"#text\"",
        "string",
        "string",
        "\"data-react\"",
        "\"class\"",
        "\"className\"",
        "\"class\"",
        "\"class\"",
        "\"#comment\"",
        "\"string\"",
        "\"number\"",
        "\"boolean\"",
        "Cannot convert ${jasmine.pp(child)} to element structure.\\n",
        "Correct usage is: expect(mount(...)).toBeElement($(\"div\")) or expect(shallow(...)).toBeElement($(\"div\"))",
        "\"function\"",
        "\"object\"",
        "\"_model\"",
        "\"Element \"",
        "\" (\"",
        "\")\"",
        "\"function\""
    ],
    "variables": [
        "expectedJson",
        "actualJson",
        "msgPrefix",
        "difference",
        "unexpectedProps",
        "expectedVal",
        "actualVal",
        "difference",
        "expectedClasses",
        "actualClasses",
        "missingClasses",
        "i",
        "childDiff",
        "actualIndex",
        "expectedIndex",
        "expectedChild",
        "json",
        "props",
        "children",
        "props",
        "children",
        "propValue"
    ],
    "comments": [
        "todo: disallow Any inside createElement"
    ],
    "docstrings": [],
    "functions": [
        "findDifference",
        "compareProp",
        "compareClasses",
        "strictCompareChildren",
        "compareChildren",
        "toString",
        "toElementStructure",
        "domToStructure",
        "reactToStructure",
        "elemToStructure",
        "isJasmineAny"
    ],
    "classes": []
}