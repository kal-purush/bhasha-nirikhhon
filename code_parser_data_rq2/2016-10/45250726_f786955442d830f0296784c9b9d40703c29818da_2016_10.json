{
    "identifiers": [
        "Injectable",
        "Renderer",
        "ComponentRef",
        "Type",
        "Injector",
        "Inject",
        "ComponentFactoryResolver",
        "Injectable",
        "content",
        "componentSelector",
        "COMPONENT_REGEXP",
        "componentSelector",
        "regexp",
        "content",
        "componentSelector",
        "componentSelector",
        "resolver",
        "Inject",
        "COMPONENT_PARSER_ALLOWED",
        "allowedComponents",
        "allowedComponents",
        "_renderer",
        "_renderer",
        "content",
        "injector",
        "COMPONENT_REGEXP",
        "match",
        "anyCompRegexp",
        "content",
        "componentDefs",
        "match",
        "COMPONENT_REGEXP",
        "content",
        "splitCompRegexp",
        "i",
        "htmlParts",
        "i",
        "node",
        "htmlParts",
        "i",
        "htmlParts",
        "i",
        "res",
        "node",
        "componentDefs",
        "i",
        "componentDefs",
        "i",
        "injector",
        "res",
        "componentRef",
        "res",
        "htmlTag",
        "injector",
        "htmlTag",
        "componentType",
        "componentType",
        "factory",
        "injector",
        "htmlTag",
        "htmlTag",
        "match",
        "match",
        "componentName"
    ],
    "literals": [
        "'use strict'",
        "'@angular/core'",
        "'COMPONENT_PARSER_ALLOWED'",
        "'^\\\\s*<!-- ReDoc-Inject:\\\\s+?{component}\\\\s+?-->\\\\s*$'",
        "string",
        "string",
        "'{component}'",
        "<${componentSelector}.*>",
        "'mi'",
        "<!-- ReDoc-Inject: <${componentSelector}> -->",
        "string",
        "'{component}'",
        "'(.*?)'",
        "'gmi'",
        "'{component}'",
        "'.*?'",
        "'mi'",
        "'div'",
        "'innerHTML'",
        "string",
        "string"
    ],
    "variables": [
        "COMPONENT_PARSER_ALLOWED",
        "COMPONENT_REGEXP",
        "regexp",
        "componentDefs",
        "match",
        "anyCompRegexp",
        "splitCompRegexp",
        "htmlParts",
        "res",
        "i",
        "node",
        "componentRef",
        "factory",
        "match",
        "componentName",
        "componentType",
        "options"
    ],
    "comments": [
        "TODO: for now only primitive parsing by tagname",
        "TODO parse options"
    ],
    "docstrings": [],
    "functions": [
        "contains",
        "build",
        "setRenderer",
        "splitIntoNodesOrComponents",
        "createComponentByHtml",
        "_parseHtml"
    ],
    "classes": [
        "ComponentParser"
    ]
}