{
    "identifiers": [
        "com",
        "netflix",
        "fenzo",
        "samples",
        "com",
        "netflix",
        "fenzo",
        "com",
        "netflix",
        "fenzo",
        "functions",
        "Action0",
        "com",
        "netflix",
        "fenzo",
        "functions",
        "Action1",
        "com",
        "netflix",
        "fenzo",
        "plugins",
        "BinPackingFitnessCalculators",
        "com",
        "netflix",
        "fenzo",
        "plugins",
        "VMLeaseObject",
        "com",
        "netflix",
        "fenzo",
        "queues",
        "org",
        "apache",
        "mesos",
        "MesosSchedulerDriver",
        "org",
        "apache",
        "mesos",
        "Protos",
        "org",
        "apache",
        "mesos",
        "Scheduler",
        "org",
        "apache",
        "mesos",
        "SchedulerDriver",
        "java",
        "util",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "concurrent",
        "CountDownLatch",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "util",
        "concurrent",
        "atomic",
        "AtomicInteger",
        "numTasksCompleted",
        "queue",
        "leaseAction",
        "numTasksCompleted",
        "queue",
        "numTasksCompleted",
        "numTasksCompleted",
        "queue",
        "queue",
        "Override",
        "driver",
        "frameworkId",
        "masterInfo",
        "Override",
        "driver",
        "masterInfo",
        "Override",
        "driver",
        "offers",
        "leaseAction",
        "call",
        "offers",
        "Override",
        "driver",
        "offerId",
        "Override",
        "driver",
        "status",
        "status",
        "getState",
        "TASK_FAILED",
        "TASK_LOST",
        "TASK_FINISHED",
        "status",
        "getTaskId",
        "getValue",
        "status",
        "getState",
        "queue",
        "remove",
        "status",
        "getTaskId",
        "getValue",
        "qAttribs",
        "numTasksCompleted",
        "incrementAndGet",
        "Override",
        "driver",
        "executorId",
        "slaveId",
        "data",
        "Override",
        "driver",
        "Override",
        "driver",
        "slaveId",
        "Override",
        "driver",
        "executorId",
        "slaveId",
        "status",
        "Override",
        "driver",
        "message",
        "message",
        "qAttribs",
        "args",
        "args",
        "length",
        "err",
        "exit",
        "numTasks",
        "numTasksCompleted",
        "taskScheduler",
        "withFitnessCalculator",
        "BinPackingFitnessCalculators",
        "cpuMemBinPacker",
        "withLeaseOfferExpirySecs",
        "withLeaseRejectAction",
        "Override",
        "v",
        "v",
        "hostname",
        "build",
        "queue",
        "TaskQueues",
        "createTieredQueue",
        "mesosSchedulerCallback",
        "numTasksCompleted",
        "queue",
        "framework",
        "Protos",
        "FrameworkInfo",
        "newBuilder",
        "setName",
        "setUser",
        "build",
        "driver",
        "mesosSchedulerCallback",
        "framework",
        "args",
        "schedCounter",
        "schedulingService",
        "withLoopIntervalMillis",
        "withMaxDelayMillis",
        "withPreSchedulingLoopHook",
        "Override",
        "schedCounter",
        "incrementAndGet",
        "withTaskQuue",
        "queue",
        "withTaskScheduler",
        "taskScheduler",
        "withSchedulingResultCallback",
        "Override",
        "schedulingResult",
        "exceptions",
        "schedulingResult",
        "getExceptions",
        "exceptions",
        "exceptions",
        "isEmpty",
        "e",
        "exceptions",
        "e",
        "printStackTrace",
        "e",
        "schedulingResult",
        "getResultMap",
        "entrySet",
        "offers",
        "l",
        "e",
        "getValue",
        "getLeasesUsed",
        "offers",
        "add",
        "l",
        "getOffer",
        "getId",
        "taskInfos",
        "r",
        "e",
        "getValue",
        "getTasksAssigned",
        "taskInfos",
        "add",
        "SampleFramework",
        "getTaskInfo",
        "e",
        "getValue",
        "getLeasesUsed",
        "iterator",
        "next",
        "getOffer",
        "getSlaveId",
        "r",
        "getTaskId",
        "driver",
        "launchTasks",
        "offers",
        "taskInfos",
        "build",
        "mesosSchedulerCallback",
        "leaseAction",
        "Override",
        "offers",
        "leases",
        "o",
        "offers",
        "leases",
        "add",
        "o",
        "schedulingService",
        "addLeases",
        "leases",
        "schedulingService",
        "start",
        "Override",
        "driver",
        "run",
        "start",
        "i",
        "i",
        "numTasks",
        "i",
        "queue",
        "queueTask",
        "getTask",
        "i",
        "numTasksCompleted",
        "get",
        "numTasks",
        "sleep",
        "numTasksCompleted",
        "get",
        "numTasks",
        "latch",
        "schedulingService",
        "requestAllTasks",
        "Override",
        "taskStateCollectionMap",
        "taskStateCollectionMap",
        "size",
        "latch",
        "countDown",
        "latch",
        "await",
        "TimeUnit",
        "SECONDS",
        "err",
        "exit",
        "i",
        "Override",
        "qAttribs",
        "Override",
        "i",
        "Override",
        "Override",
        "Override",
        "Override",
        "Override",
        "Override",
        "Override",
        "Override",
        "Override",
        "Override",
        "Override",
        "assignedResources",
        "Override"
    ],
    "literals": [
        "\"Mesos scheduler registered\"",
        "\"Mesos scheduler re-registered\"",
        "\"Unexpected offers Rescinded\"",
        "\"Task status for \"",
        "\": \"",
        "\"Mesos driver disconnected\"",
        "\"Mesos agent lost\"",
        "\"Mesos executor lost\"",
        "\"Unexpected mesos scheduler error: \"",
        "\"onlyBucket\"",
        "\"Must provide one argument - Mesos master location string\"",
        "\"Unexpected to reject lease on \"",
        "\"Sample Fenzo Framework\"",
        "\"\"",
        "\"Starting scheduling iteration \"",
        "\"Exceptions from scheduling iteration:\"",
        "\"sleep 3\"",
        "\"        #tasks completed: \"",
        "\" of \"",
        "\"Fenzo queue has \"",
        "\" items\"",
        "\"Timeout waiting for listing all tasks in Fenzo queues\"",
        "\"ALL DONE\"",
        "\"Task-\"",
        "\"groupA\""
    ],
    "variables": [
        "numTasksCompleted",
        "queue"
    ],
    "comments": [
        "create Fenzo TaskScheduler object.",
        "Create a queue from Fenzo provided queue implementations.",
        "Create our Mesos scheduler callback implementation",
        "create Mesos driver",
        "Build Fenzo task scheduling service using the TaskScheduler and TaskQueue objects created above",
        "TaskSchedulingService will call us back when there are task assignments. Handle them by launching",
        "tasks using MesosDriver",
        "set up action in our scheduler callback to send resource offers into our scheduling service",
        "Fenzo lease object adapter for Mesos Offer object",
        "start Mesos driver",
        "submit some tasks",
        "wait for tasks to complete",
        "verify that Fenzo has no tasks in its queue",
        "no-op, unexpected for this sample"
    ],
    "docstrings": [
        "* This is the main method of this sample framework. It showcases how to use Fenzo queues for scheduling. It creates\n     * some number of tasks and launches them into Mesos using the Mesos built-in command executor. The tasks launched\n     * are simple sleep commands that sleep for 3 seconds each.\n     * @param args Requires one argument for the location of Mesos master to connect to.\n     * @throws Exception Upon catching any exceptions within the program."
    ],
    "functions": [
        "MesosScheduler",
        "registered",
        "reregistered",
        "resourceOffers",
        "offerRescinded",
        "statusUpdate",
        "frameworkMessage",
        "disconnected",
        "slaveLost",
        "executorLost",
        "error",
        "main",
        "call",
        "call",
        "call",
        "call",
        "run",
        "call",
        "QueuableTask",
        "getTask",
        "QAttributes",
        "getQAttributes",
        "getId",
        "taskGroupName",
        "getCPUs",
        "getMemory",
        "getNetworkMbps",
        "getDisk",
        "getPorts",
        "getScalarRequests",
        "getCustomNamedResources",
        "getHardConstraints",
        "getSoftConstraints",
        "setAssignedResources",
        "AssignedResources",
        "getAssignedResources"
    ],
    "classes": [
        "SampleQbasedScheduling",
        "MesosScheduler"
    ]
}