{
    "identifiers": [
        "print_function",
        "keras",
        "layers",
        "Conv1D",
        "MaxPooling1D",
        "Embedding",
        "keras",
        "layers",
        "Dense",
        "Input",
        "Flatten",
        "Dropout",
        "Merge",
        "Activation",
        "keras",
        "models",
        "Model",
        "Sequential",
        "keras",
        "optimizers",
        "Adadelta",
        "RMSprop",
        "args",
        "embedding_matrix",
        "args",
        "model_name",
        "lower",
        "_predefined_model",
        "args",
        "embedding_matrix",
        "args",
        "embedding_matrix",
        "_param_selector",
        "args",
        "use_embeddings",
        "Embedding",
        "args",
        "nb_words",
        "args",
        "embedding_dim",
        "weights",
        "embedding_matrix",
        "input_length",
        "args",
        "max_sequence_len",
        "trainable",
        "embeddings_trainable",
        "Embedding",
        "args",
        "nb_words",
        "args",
        "embedding_dim",
        "weights",
        "input_length",
        "args",
        "max_sequence_len",
        "trainable",
        "embeddings_trainable",
        "Input",
        "shape",
        "args",
        "max_sequence_len",
        "args",
        "embedding_dim",
        "index",
        "filtersize",
        "filtersize_list",
        "number_of_filters_per_filtersize",
        "index",
        "pool_length_list",
        "index",
        "Conv1D",
        "nb_filter",
        "nb_filter",
        "filter_length",
        "filtersize",
        "activation",
        "input_node",
        "MaxPooling1D",
        "pool_length",
        "pool_length",
        "conv",
        "Flatten",
        "pool",
        "conv_list",
        "append",
        "flatten",
        "len",
        "filtersize_list",
        "Merge",
        "mode",
        "conv_list",
        "conv_list",
        "Model",
        "input",
        "input_node",
        "output",
        "Sequential",
        "model",
        "add",
        "embedding_layer",
        "model",
        "add",
        "Dropout",
        "dropout_list",
        "input_shape",
        "args",
        "max_sequence_len",
        "args",
        "embedding_dim",
        "model",
        "add",
        "graph",
        "model",
        "add",
        "Dense",
        "model",
        "add",
        "Dropout",
        "dropout_list",
        "model",
        "add",
        "Activation",
        "model",
        "add",
        "Dense",
        "args",
        "len_labels_index",
        "activation",
        "model",
        "compile",
        "loss",
        "optimizer",
        "optimizer",
        "metrics",
        "model",
        "args",
        "Adadelta",
        "clipvalue",
        "args",
        "model_name",
        "lower",
        "args",
        "model_name",
        "lower",
        "args",
        "model_name",
        "lower",
        "RMSprop",
        "clipvalue",
        "args",
        "grad_clip",
        "filtersize_list",
        "number_of_filters_per_filtersize",
        "pool_length_list",
        "dropout_list",
        "optimizer",
        "use_embeddings",
        "embeddings_trainable"
    ],
    "literals": [
        "'self'",
        "'Defining model.'",
        "'relu'",
        "'concat'",
        "'relu'",
        "'softmax'",
        "'categorical_crossentropy'",
        "'acc'",
        "'cnn-rand'",
        "'cnn-static'",
        "'cnn-non-static'"
    ],
    "variables": [
        "filtersize_list",
        "number_of_filters_per_filtersize",
        "pool_length_list",
        "dropout_list",
        "optimizer",
        "use_embeddings",
        "embeddings_trainable",
        "embedding_layer",
        "embedding_layer",
        "input_node",
        "conv_list",
        "nb_filter",
        "pool_length",
        "conv",
        "pool",
        "flatten",
        "graph",
        "model",
        "filtersize_list",
        "number_of_filters_per_filtersize",
        "pool_length_list",
        "dropout_list",
        "optimizer",
        "use_embeddings",
        "embeddings_trainable",
        "use_embeddings",
        "embeddings_trainable",
        "embeddings_trainable",
        "filtersize_list",
        "number_of_filters_per_filtersize",
        "pool_length_list",
        "dropout_list",
        "optimizer",
        "use_embeddings",
        "embeddings_trainable"
    ],
    "comments": [],
    "docstrings": [
        "'''Method to select the model to be used for classification'''",
        "'''function to use one of the predefined models (based on the paper)'''",
        "'''Method to select parameters for models defined in Convolutional Neural Networks for\n        Sentence Classification paper by Yoon Kim'''"
    ],
    "functions": [
        "model_selector",
        "_predefined_model",
        "_param_selector"
    ],
    "classes": []
}