{
    "identifiers": [
        "print_function",
        "pyspark",
        "sql",
        "SparkSession",
        "pyspark",
        "sql",
        "Row",
        "pyspark",
        "sql",
        "types",
        "spark",
        "spark",
        "read",
        "json",
        "df",
        "show",
        "df",
        "printSchema",
        "df",
        "select",
        "show",
        "df",
        "select",
        "df",
        "df",
        "show",
        "df",
        "df",
        "show",
        "df",
        "groupBy",
        "count",
        "show",
        "df",
        "createOrReplaceTempView",
        "spark",
        "sql",
        "sqlDF",
        "show",
        "df",
        "createGlobalTempView",
        "spark",
        "sql",
        "show",
        "spark",
        "newSession",
        "sql",
        "show",
        "spark",
        "spark",
        "sparkContext",
        "sc",
        "textFile",
        "lines",
        "l",
        "l",
        "split",
        "parts",
        "p",
        "Row",
        "name",
        "p",
        "age",
        "p",
        "spark",
        "createDataFrame",
        "people",
        "schemaPeople",
        "createOrReplaceTempView",
        "spark",
        "sql",
        "teenagers",
        "rdd",
        "p",
        "p",
        "name",
        "collect",
        "name",
        "teenNames",
        "name",
        "spark",
        "spark",
        "sparkContext",
        "sc",
        "textFile",
        "lines",
        "l",
        "l",
        "split",
        "parts",
        "p",
        "p",
        "p",
        "strip",
        "StructField",
        "field_name",
        "StringType",
        "field_name",
        "schemaString",
        "split",
        "StructType",
        "fields",
        "spark",
        "createDataFrame",
        "people",
        "schema",
        "schemaPeople",
        "createOrReplaceTempView",
        "schemaPeople",
        "createOrReplaceTempView",
        "spark",
        "sql",
        "results",
        "show",
        "SparkSession",
        "builder",
        "appName",
        "config",
        "getOrCreate",
        "basic_df_example",
        "spark",
        "schema_inference_example",
        "spark",
        "programmatic_schema_example",
        "spark",
        "spark",
        "stop"
    ],
    "literals": [
        "\"../resources/people.json\"",
        "\"name\"",
        "'name'",
        "'age'",
        "'age'",
        "\"age\"",
        "\"people\"",
        "\"SELECT * FROM people\"",
        "\"people\"",
        "\"SELECT * FROM global_temp.people\"",
        "\"SELECT * FROM global_temp.people\"",
        "\"examples/src/main/resources/people.txt\"",
        "\",\"",
        "\"people\"",
        "\"SELECT name FROM people WHERE age >= 13 AND age <= 19\"",
        "\"Name: \"",
        "\"examples/src/main/resources/people.txt\"",
        "\",\"",
        "\"name age\"",
        "\"people\"",
        "\"people\"",
        "\"SELECT name FROM people\"",
        "\"__main__\"",
        "\"Python Spark SQL basic example\"",
        "\"spark.some.config.option\"",
        "\"some-value\""
    ],
    "variables": [
        "df",
        "sqlDF",
        "sc",
        "lines",
        "parts",
        "people",
        "schemaPeople",
        "teenagers",
        "teenNames",
        "sc",
        "lines",
        "parts",
        "people",
        "schemaString",
        "fields",
        "schema",
        "schemaPeople",
        "results",
        "spark"
    ],
    "comments": [
        "",
        "Licensed to the Apache Software Foundation (ASF) under one or more",
        "contributor license agreements.  See the NOTICE file distributed with",
        "this work for additional information regarding copyright ownership.",
        "The ASF licenses this file to You under the Apache License, Version 2.0",
        "(the \"License\"); you may not use this file except in compliance with",
        "the License.  You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "",
        "$example on:init_session$",
        "$example off:init_session$",
        "$example on:schema_inferring$",
        "$example off:schema_inferring$",
        "$example on:programmatic_schema$",
        "Import data types",
        "$example off:programmatic_schema$",
        "$example on:create_df$",
        "spark is an existing SparkSession",
        "Displays the content of the DataFrame to stdout",
        "+----+-------+",
        "| age|   name|",
        "+----+-------+",
        "|null|Michael|",
        "|  30|   Andy|",
        "|  19| Justin|",
        "+----+-------+",
        "$example off:create_df$",
        "$example on:untyped_ops$",
        "spark, df are from the previous example",
        "Print the schema in a tree format",
        "root",
        "|-- age: long (nullable = true)",
        "|-- name: string (nullable = true)",
        "Select only the \"name\" column",
        "+-------+",
        "|   name|",
        "+-------+",
        "|Michael|",
        "|   Andy|",
        "| Justin|",
        "+-------+",
        "Select everybody, but increment the age by 1",
        "+-------+---------+",
        "|   name|(age + 1)|",
        "+-------+---------+",
        "|Michael|     null|",
        "|   Andy|       31|",
        "| Justin|       20|",
        "+-------+---------+",
        "Select people older than 21",
        "+---+----+",
        "|age|name|",
        "+---+----+",
        "| 30|Andy|",
        "+---+----+",
        "Count people by age",
        "+----+-----+",
        "| age|count|",
        "+----+-----+",
        "|  19|    1|",
        "|null|    1|",
        "|  30|    1|",
        "+----+-----+",
        "$example off:untyped_ops$",
        "$example on:run_sql$",
        "Register the DataFrame as a SQL temporary view",
        "+----+-------+",
        "| age|   name|",
        "+----+-------+",
        "|null|Michael|",
        "|  30|   Andy|",
        "|  19| Justin|",
        "+----+-------+",
        "$example off:run_sql$",
        "$example on:global_temp_view$",
        "Register the DataFrame as a global temporary view",
        "Global temporary view is tied to a system preserved database `global_temp`",
        "+----+-------+",
        "| age|   name|",
        "+----+-------+",
        "|null|Michael|",
        "|  30|   Andy|",
        "|  19| Justin|",
        "+----+-------+",
        "Global temporary view is cross-session",
        "+----+-------+",
        "| age|   name|",
        "+----+-------+",
        "|null|Michael|",
        "|  30|   Andy|",
        "|  19| Justin|",
        "+----+-------+",
        "$example off:global_temp_view$",
        "$example on:schema_inferring$",
        "Load a text file and convert each line to a Row.",
        "Infer the schema, and register the DataFrame as a table.",
        "SQL can be run over DataFrames that have been registered as a table.",
        "The results of SQL queries are Dataframe objects.",
        "rdd returns the content as an :class:`pyspark.RDD` of :class:`Row`.",
        "Name: Justin",
        "$example off:schema_inferring$",
        "$example on:programmatic_schema$",
        "Load a text file and convert each line to a Row.",
        "Each line is converted to a tuple.",
        "The schema is encoded in a string.",
        "Apply the schema to the RDD.",
        "Creates a temporary view using the DataFrame",
        "Creates a temporary view using the DataFrame",
        "SQL can be run over DataFrames that have been registered as a table.",
        "+-------+",
        "|   name|",
        "+-------+",
        "|Michael|",
        "|   Andy|",
        "| Justin|",
        "+-------+",
        "$example off:programmatic_schema$",
        "$example on:init_session$",
        "$example off:init_session$"
    ],
    "docstrings": [
        "\"\"\"\nA simple example demonstrating basic Spark SQL features.\nRun with:\n  ./bin/spark-submit examples/src/main/python/sql/basic.py\n\"\"\""
    ],
    "functions": [
        "basic_df_example",
        "schema_inference_example",
        "programmatic_schema_example"
    ],
    "classes": []
}