{
    "identifiers": [
        "collections",
        "sys",
        "HTMLParser",
        "HTMLParser",
        "HTMLParser",
        "HTMLParser",
        "data",
        "data",
        "split",
        "offset",
        "i",
        "xrange",
        "len",
        "bases",
        "offset",
        "counts",
        "counts",
        "collections",
        "defaultdict",
        "counts",
        "offset",
        "bases",
        "i",
        "upper",
        "offset",
        "HTMLParser",
        "skip_columns",
        "left_trim",
        "skip_columns",
        "left_trim",
        "HTMLParser",
        "tag",
        "attrs",
        "tag",
        "exit",
        "sys",
        "stdout",
        "write",
        "t",
        "v",
        "attrs",
        "t",
        "v",
        "tag",
        "tag",
        "exit",
        "sys",
        "stdout",
        "write",
        "data",
        "data",
        "split",
        "offset",
        "len",
        "x",
        "x",
        "offset",
        "skip_columns",
        "offset",
        "left_trim",
        "lt",
        "new_offset",
        "sys",
        "stdout",
        "write",
        "new_offset",
        "offset",
        "i",
        "xrange",
        "len",
        "bases",
        "reference",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "upper",
        "color_dict",
        "true_base",
        "true_base",
        "bases",
        "i",
        "true_base_dict",
        "bases",
        "i",
        "color_dict",
        "true_base",
        "true_base",
        "bases",
        "i",
        "exit",
        "bases",
        "i",
        "coord",
        "skip_columns",
        "sys",
        "stdout",
        "write",
        "output",
        "coord",
        "header",
        "replace",
        "HTMLCharCounter",
        "line",
        "sys",
        "stdin",
        "lines",
        "append",
        "line",
        "line",
        "startswith",
        "line",
        "parser",
        "feed",
        "line",
        "strip",
        "nlines",
        "key",
        "vals",
        "parser",
        "counts",
        "items",
        "len",
        "vals",
        "vals",
        "bad_cols",
        "add",
        "key",
        "len",
        "vals",
        "vals",
        "vals",
        "bad_cols",
        "add",
        "key",
        "nlines",
        "x",
        "x",
        "sorted",
        "x",
        "len",
        "x",
        "x",
        "values",
        "parser",
        "counts",
        "items",
        "len",
        "fixed_points",
        "fixed_points",
        "trim_index",
        "len",
        "fixed_points",
        "fixed_points",
        "trim_index",
        "fixed_points",
        "trim_index",
        "trim_index",
        "max",
        "trim_index",
        "i",
        "xrange",
        "trim_index",
        "parser",
        "counts",
        "trim_index",
        "bad_cols",
        "add",
        "fixed_points",
        "i",
        "len",
        "fixed_points",
        "fixed_points",
        "sorted",
        "parser",
        "counts",
        "keys",
        "len",
        "fixed_points",
        "trim_index",
        "fixed_points",
        "trim_index",
        "fixed_points",
        "trim_index",
        "trim_index",
        "min",
        "len",
        "fixed_points",
        "trim_index",
        "i",
        "xrange",
        "trim_index",
        "len",
        "fixed_points",
        "bad_cols",
        "add",
        "fixed_points",
        "i",
        "write_header",
        "FilteredHTMLOutputter",
        "bad_cols",
        "left_trim",
        "line",
        "lines",
        "line",
        "startswith",
        "line",
        "sys",
        "stdout",
        "write",
        "line",
        "output",
        "feed",
        "line",
        "strip",
        "sys",
        "stdout",
        "write",
        "main"
    ],
    "literals": [
        "\" \"",
        "'H'",
        "'A'",
        "'I'",
        "'C'",
        "'J'",
        "'G'",
        "'K'",
        "'T'",
        "'L'",
        "'N'",
        "'A'",
        "\"purple\"",
        "'C'",
        "\"blue\"",
        "'G'",
        "\"green\"",
        "'T'",
        "\"orange\"",
        "'N'",
        "\"purple\"",
        "'-'",
        "\"red\"",
        "\"tr\"",
        "\"ERROR: Improperly formatted input file\"",
        "\"<tr>\"",
        "\"class\"",
        "\"reference\"",
        "\"tr\"",
        "\"ERROR: Improperly formatted input file\"",
        "\"</tr>\"",
        "\" \"",
        "\"<td colspan=%d> </td>\"",
        "\"*\"",
        "\"<td class=\\\"%sreftd\\\">%s</td>\"",
        "\"v\"",
        "\"<td class=\\\"%sreftd\\\">%s</td>\"",
        "'x'",
        "\"<td class=\\\"%std\\\">%s</td>\"",
        "\"spacer\"",
        "'*'",
        "\"<td class=\\\"%std\\\">%s</td>\"",
        "\"v\"",
        "'A'",
        "'C'",
        "'G'",
        "'T'",
        "'N'",
        "'-'",
        "\"<td class=\\\"%std\\\">%s</td>\"",
        "'a'",
        "'c'",
        "'g'",
        "'t'",
        "'n'",
        "\"<td class=\\\"inserttd\\\"><font color=\\\"%s\\\">%s</font></td>\"",
        "'H'",
        "'I'",
        "'J'",
        "'K'",
        "'L'",
        "\"<td class=\\\"snptd\\\"><font color=\\\"%s\\\">%s</font></td>\"",
        "\"Invalid base character in file: \"",
        "\"\\n\"",
        "\" \"",
        "\"<tr\"",
        "\"samplename\"",
        "\"*\"",
        "\"*\"",
        "\" \"",
        "\"*\"",
        "\"<tr\"",
        "\"samplename\"",
        "\"\\n\"",
        "\"__main__\""
    ],
    "variables": [
        "counts",
        "offset",
        "bases",
        "offset",
        "offset",
        "skip_columns",
        "left_trim",
        "true_base_dict",
        "color_dict",
        "reference",
        "reference",
        "offset",
        "bases",
        "offset",
        "lt",
        "new_offset",
        "coord",
        "output",
        "output",
        "output",
        "output",
        "output",
        "true_base",
        "output",
        "true_base",
        "output",
        "header",
        "lines",
        "parser",
        "nlines",
        "bad_cols",
        "fixed_points",
        "trim_index",
        "trim_index",
        "left_trim",
        "trim_index",
        "trim_index",
        "left_trim",
        "output"
    ],
    "comments": [
        "Simple class that processes HTML files created by HipSTR",
        "and removes any alignment positions in which all bases correspond",
        "to an insertion",
        "Useful when filtering HTML files for a subset of samples and insertions",
        "are no longer present",
        "Read all lines in first pass and determine which columns",
        "only have a * character (insertion)",
        "Output each line after removing columns only containing a *"
    ],
    "docstrings": [
        "\"\"\"\n    <style type='text/css'>\n\n     .ref {\n      color: white;\n      font-family: Courier;\n     }\n\n     td {\n      text-align:center;\n      vertical-align:middle;\n      font-family: Courier;\n      font-size: 13px;\n     }\n\n     .locustd {\n      font-style: italic;\n      color: black;\n     }\n\n     .snptd {\n       background-color: gold;\n     }\n\n     .inserttd {\n      background-color: red;\n     }\n\n     .spacertd {\n      color: white;\n     }\n\n     .reftable {\n      color: white;\n     }\n\n     .readtable {\n      font-weight: normal;\n     }\n\n     caption {\n      background: #dbb768;\n      color:black;\n      font-weight: bold;\n      font-size: 1.1em;\n      text-align: left;\n     }\n\n     .Atd {\n      color: purple;\n     }\n\n     .Ctd {\n      color: blue;\n     }\n\n     .Gtd {\n      color: green;\n     }\n\n     .Ttd {\n      color: orange;\n     }\n\n     .vtd {\n      color: gray;\n     }\n\n     .-td {\n      color: red;\n     }\n\n     .Areftd {\n      background-color: purple;\n     }\n\n     .Creftd {\n      background-color: blue;\n     }\n\n     .Greftd {\n      background-color: green;\n     }\n\n     .Treftd {\n      background-color: orange;\n     }\n\n     .vreftd {\n      background-color: gray;\n     }\n\n     </style>\n    \"\"\""
    ],
    "functions": [
        "handle_data",
        "handle_starttag",
        "handle_endtag",
        "handle_data",
        "write_header",
        "main"
    ],
    "classes": [
        "HTMLCharCounter",
        "FilteredHTMLOutputter"
    ]
}