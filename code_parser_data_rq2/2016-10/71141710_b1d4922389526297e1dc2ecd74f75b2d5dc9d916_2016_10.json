{
    "identifiers": [
        "msg",
        "severity",
        "msg",
        "split",
        "severity",
        "arcpy",
        "AddMessage",
        "severity",
        "arcpy",
        "AddWarning",
        "severity",
        "arcpy",
        "AddError",
        "sys",
        "exc_info",
        "traceback",
        "format_tb",
        "tb",
        "tbinfo",
        "sys",
        "exc_type",
        "sys",
        "exc_value",
        "AddMsgAndPrint",
        "theMsg",
        "AddMsgAndPrint",
        "interp",
        "areaSym",
        "aggMethod",
        "socket",
        "interp",
        "find",
        "interp",
        "replace",
        "interp",
        "find",
        "interp",
        "replace",
        "aggMethod",
        "interp",
        "interp",
        "interp",
        "areaSym",
        "aggMethod",
        "interp",
        "interp",
        "interp",
        "areaSym",
        "aggMethod",
        "interp",
        "interp",
        "interp",
        "interp",
        "areaSym",
        "interpQry",
        "len",
        "sXML",
        "httplib",
        "HTTPConnection",
        "sURL",
        "conn",
        "request",
        "sXML",
        "dHeaders",
        "conn",
        "getresponse",
        "response",
        "status",
        "response",
        "reason",
        "response",
        "read",
        "conn",
        "close",
        "ET",
        "fromstring",
        "xmlString",
        "rec",
        "tree",
        "iter",
        "rec",
        "tag",
        "rec",
        "text",
        "rec",
        "tag",
        "rec",
        "text",
        "rec",
        "tag",
        "rec",
        "text",
        "rec",
        "tag",
        "rec",
        "text",
        "rec",
        "tag",
        "rec",
        "text",
        "rec",
        "tag",
        "rec",
        "text",
        "rec",
        "tag",
        "rec",
        "text",
        "mukey",
        "mukey",
        "areasymbol",
        "musym",
        "muname",
        "rating",
        "class_name",
        "reason",
        "funcDict",
        "cResponse",
        "socket",
        "timeout",
        "e",
        "Msg",
        "socket",
        "error",
        "e",
        "e",
        "Msg",
        "errorMsg",
        "eSSA",
        "Msg",
        "arcpy",
        "sys",
        "os",
        "traceback",
        "time",
        "httplib",
        "xml",
        "etree",
        "cElementTree",
        "ET",
        "arcpy",
        "env",
        "AddMsgAndPrint",
        "arcpy",
        "GetParameterAsText",
        "arcpy",
        "GetParameterAsText",
        "arcpy",
        "GetParameterAsText",
        "arcpy",
        "GetParameterAsText",
        "arcpy",
        "GetParameterAsText",
        "os",
        "path",
        "dirname",
        "sys",
        "argv",
        "aggMethod",
        "aggMethod",
        "aggMethod",
        "ForceExit",
        "areaParam",
        "split",
        "interpParam",
        "split",
        "len",
        "areaList",
        "len",
        "interpLst",
        "arcpy",
        "SetProgressor",
        "jobCnt",
        "interp",
        "interpLst",
        "interp",
        "find",
        "interp",
        "replace",
        "eSSA",
        "areaList",
        "n",
        "arcpy",
        "SetProgressorLabel",
        "interp",
        "eSSA",
        "n",
        "jobCnt",
        "getIntrps",
        "interp",
        "eSSA",
        "aggMethod",
        "gI1",
        "len",
        "gI2",
        "AddMsgAndPrint",
        "interp",
        "eSSA",
        "gI3",
        "AddMsgAndPrint",
        "eSSA",
        "interp",
        "failInterps",
        "append",
        "eSSA",
        "interp",
        "AddMsgAndPrint",
        "interp",
        "eSSA",
        "gI3",
        "k",
        "v",
        "gI2",
        "iteritems",
        "v",
        "arcpy",
        "SetProgressorPosition",
        "getIntrps",
        "interp",
        "eSSA",
        "aggMethod",
        "gI1",
        "len",
        "gI2",
        "AddMsgAndPrint",
        "eSSA",
        "interp",
        "failInterps",
        "append",
        "eSSA",
        "interp",
        "AddMsgAndPrint",
        "interp",
        "eSSA",
        "gI3",
        "k",
        "v",
        "gI2",
        "iteritems",
        "v",
        "arcpy",
        "SetProgressorPosition",
        "AddMsgAndPrint",
        "gI2",
        "failInterps",
        "append",
        "eSSA",
        "interp",
        "arcpy",
        "SetProgressorPosition",
        "len",
        "compDict",
        "arcpy",
        "ValidateTableName",
        "interp",
        "outTbl",
        "replace",
        "outTbl",
        "aggMod",
        "WS",
        "os",
        "sep",
        "outTbl",
        "aggMod",
        "srcDir",
        "os",
        "sep",
        "os",
        "sep",
        "arcpy",
        "management",
        "CreateTable",
        "WS",
        "tblName",
        "template_table",
        "arcpy",
        "da",
        "InsertCursor",
        "jTbl",
        "fldLst",
        "value",
        "compDict",
        "compDict",
        "get",
        "value",
        "cursor",
        "insertRow",
        "row",
        "cursor",
        "compDict",
        "AddMsgAndPrint",
        "interp",
        "jLayer",
        "arcpy",
        "mapping",
        "MapDocument",
        "arcpy",
        "mapping",
        "ListDataFrames",
        "mxd",
        "arcpy",
        "mapping",
        "ListLayers",
        "mxd",
        "jLayer",
        "dfs",
        "objLyr",
        "arcpy",
        "Describe",
        "jLayer",
        "desc",
        "dataType",
        "upper",
        "desc",
        "catalogPath",
        "desc",
        "baseName",
        "x",
        "name",
        "x",
        "desc",
        "fields",
        "flds",
        "arcpy",
        "env",
        "AddMsgAndPrint",
        "jLayer",
        "dType",
        "arcpy",
        "mapping",
        "RemoveLayer",
        "dfs",
        "refLyr",
        "arcpy",
        "MakeRasterLayer_management",
        "path",
        "bName",
        "arcpy",
        "management",
        "AddJoin",
        "bName",
        "jTbl",
        "AddMsgAndPrint",
        "jLayer",
        "dType",
        "arcpy",
        "mapping",
        "RemoveLayer",
        "dfs",
        "refLyr",
        "arcpy",
        "MakeFeatureLayer_management",
        "path",
        "bName",
        "arcpy",
        "management",
        "AddJoin",
        "bName",
        "jTbl",
        "AddMsgAndPrint",
        "jLayer",
        "arcpy",
        "management",
        "AddJoin",
        "jLayer",
        "jTbl",
        "AddMsgAndPrint",
        "jLayer",
        "AddMsgAndPrint",
        "jLayer",
        "len",
        "failInterps",
        "AddMsgAndPrint",
        "f",
        "failInterps",
        "AddMsgAndPrint",
        "f",
        "AddMsgAndPrint",
        "errorMsg"
    ],
    "literals": [
        "'\\n'",
        "\" \\n\"",
        "\": \"",
        "\"Unhandled error in errorMsg method\"",
        "\"<\"",
        "\"<\"",
        "'&lt;'",
        "\">\"",
        "\"<\"",
        "'&gt;'",
        "\"Dominant Component\"",
        "\"Dominant Condition\"",
        "\"Weighted Average\"",
        "\"Host\"",
        "\"sdmdataaccess.nrcs.usda.gov\"",
        "\"Content-Type\"",
        "\"text/xml; charset=utf-8\"",
        "\"SOAPAction\"",
        "\"http://SDMDataAccess.nrcs.usda.gov/Tabular/SDMTabularService.asmx/RunQuery\"",
        "\"Content-Length\"",
        "\"SDMDataAccess.nrcs.usda.gov\"",
        "\"POST\"",
        "\"/Tabular/SDMTabularService.asmx\"",
        "\"areasymbol\"",
        "\"musym\"",
        "\"muname\"",
        "\"MUKEY\"",
        "\"rating\"",
        "\"class\"",
        "'reason'",
        "'Soil Data Access timeout error'",
        "'Socket error: '",
        "'Unknown error collecting interpreations for '",
        "'\\n \\n'",
        "'Dominant Component'",
        "'_dom_comp'",
        "'Dominant Condition'",
        "'_dom_cond'",
        "'Weighted Average'",
        "'_wtd_avg'",
        "'unable to determine aggregation method'",
        "\";\"",
        "\";\"",
        "'step'",
        "'Starting Soil Data Access Dominant Component Tool...'",
        "\"{:}\"",
        "\"{:}\"",
        "\";\"",
        "'Collecting '",
        "' for: '",
        "\" (\"",
        "' of '",
        "')'",
        "'Response for '",
        "' on '",
        "' = '",
        "'No records returned for '",
        "': '",
        "\":\"",
        "'Response for '",
        "' on '",
        "' = '",
        "'No records returned for '",
        "': '",
        "\":\"",
        "'Response for '",
        "' on '",
        "' = '",
        "' - 2nd attempt'",
        "\":\"",
        "\"__\"",
        "\"_\"",
        "'tbl_'",
        "'tbl_'",
        "'MUKEY'",
        "'int_MUKEY'",
        "'areasymbol'",
        "'musym'",
        "'muname'",
        "'rating'",
        "'class'",
        "'reason'",
        "'templates.gdb'",
        "'template_table'",
        "'\\n \\nNo data returned for '",
        "\"\"",
        "\"CURRENT\"",
        "\"*\"",
        "\"MUKEY\"",
        "'\\n \\nReloading '",
        "' due to existing join'",
        "'RASTERLAYER'",
        "\"MUKEY\"",
        "\"MUKEY\"",
        "'\\n \\nAdded join to '",
        "'FEATURELAYER'",
        "\"MUKEY\"",
        "\"MUKEY\"",
        "'\\n \\nAdded join to '",
        "\"MUKEY\"",
        "\"MUKEY\"",
        "'\\n \\nAdded join to '",
        "'\\n \\nUnable to make join to '",
        "'\\n \\nThe following interpretations either failed or collected no records:'",
        "'\\n \\n'"
    ],
    "variables": [
        "tb",
        "tbinfo",
        "theMsg",
        "interp",
        "interp",
        "interpQry",
        "interpQry",
        "interpQry",
        "sXML",
        "dHeaders",
        "dHeaders",
        "dHeaders",
        "dHeaders",
        "dHeaders",
        "sURL",
        "conn",
        "response",
        "cStatus",
        "cResponse",
        "xmlString",
        "tree",
        "funcDict",
        "areasymbol",
        "musym",
        "muname",
        "mukey",
        "rating",
        "rating",
        "class_name",
        "reason",
        "funcDict",
        "mukey",
        "Msg",
        "Msg",
        "Msg",
        "overwriteOutput",
        "areaParam",
        "aggMethod",
        "interpParam",
        "WS",
        "jLayer",
        "srcDir",
        "aggMod",
        "aggMod",
        "aggMod",
        "areaList",
        "interpLst",
        "failInterps",
        "jobCnt",
        "n",
        "compDict",
        "interp",
        "n",
        "gI1",
        "gI2",
        "gI3",
        "compDict",
        "k",
        "gI1",
        "gI2",
        "gI3",
        "compDict",
        "k",
        "outTbl",
        "outTbl",
        "tblName",
        "jTbl",
        "fldLst",
        "template_table",
        "cursor",
        "row",
        "mxd",
        "dfs",
        "objLyr",
        "refLyr",
        "desc",
        "dType",
        "path",
        "bName",
        "flds",
        "addOutputsToMap"
    ],
    "comments": [
        "-------------------------------------------------------------------------------",
        "",
        "Chad Ferguson",
        "USDA-NRCS",
        "Soil Survey Division",
        "Mid-Atlantic and Caribbean Area Regional Office",
        "Raleigh, NC",
        "",
        "Created:     31/03/2015",
        "",
        "This tool grabs interprtations from Soil Data Access and aggregates based on user specified method.",
        "It is designed to be used as a BATCH tool",
        "Soil Data Access SQL code is from Jason Nemecek",
        "SOAP request code is from Steve Peaslee's SSURGO Download Tool - Downlaod By Map's validation class",
        "",
        "",
        "",
        "",
        "",
        "-------------------------------------------------------------------------------",
        "prints message to screen if run as a python script",
        "Adds tool message to the geoprocessor",
        "",
        "Split the message on \\n first, so that if it's multiple lines, a GPMessage will be added for each line",
        "Add a geoprocessing message (in case this is run as a tool)",
        "arcpy.AddMessage(\"    \")",
        "Msg = 'Illegal Character found in ' + interp +' name.  Skipping for ' + areaSym",
        "return False, Msg, None",
        "Msg = 'Illegal Character found in ' + interp +' name.  Skipping for ' + areaSym",
        "return False, Msg, None",
        "arcpy.AddMessage(interp)",
        "Not suited changed to Very Poorly Suited to align better with dominant condition and dominant component for wtd_avg",
        "SDA Query",
        "interpQry =\"SELECT areasymbol, musym, muname, mu.mukey  AS MUKEY,(SELECT interphr FROM component INNER JOIN cointerp ON component.cokey = cointerp.cokey AND component.cokey = c.cokey AND ruledepth = 0 AND mrulename LIKE \"+interp+\") as rating, (SELECT interphrc FROM component INNER JOIN cointerp ON component.cokey = cointerp.cokey AND component.cokey = c.cokey AND ruledepth = 0 AND mrulename LIKE \"+interp+\") as class\\n\"\\",
        "\" FROM legend  AS l\\n\"\\",
        "\" INNER JOIN  mapunit AS mu ON mu.lkey = l.lkey AND l.areasymbol LIKE '\" + areaSym + \"'\\n\"+\\",
        "\" INNER JOIN  component AS c ON c.mukey = mu.mukey  AND c.cokey = (SELECT TOP 1 c1.cokey FROM component AS c1\\n\"\\",
        "\" INNER JOIN mapunit ON c.mukey=mapunit.mukey AND c1.mukey=mu.mukey ORDER BY c1.comppct_r DESC, c1.cokey)\\n\"",
        "\"SELECT areasymbol, musym, muname, mu.mukey/1  AS MUKEY,\\n\"\\",
        "\" (SELECT TOP 1 ROUND (AVG(interphr) over(partition by interphrc),2)\\n\"\\",
        "\" FROM mapunit\\n\"\\",
        "\" INNER JOIN component ON component.mukey=mapunit.mukey\\n\"\\",
        "\" INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \" +interp+ \" GROUP BY interphrc, interphr\\n\"\\",
        "\" ORDER BY SUM (comppct_r) DESC)as rating,\\n\"\\",
        "\" (SELECT TOP 1 interphrc\\n\"\\",
        "\" FROM mapunit\\n\"\\",
        "\" INNER JOIN component ON component.mukey=mapunit.mukey\\n\"\\",
        "\" INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \" +interp+ \"\\n\"+\\",
        "\" GROUP BY interphrc, comppct_r ORDER BY SUM(comppct_r) over(partition by interphrc) DESC) as class\\n\"\\",
        "\" FROM legend  AS l\\n\"\\",
        "\" INNER JOIN  mapunit AS mu ON mu.lkey = l.lkey AND l.areasymbol LIKE '\" +areaSym+ \"'\\n\"+\\",
        "\" INNER JOIN  component AS c ON c.mukey = mu.mukey AND c.cokey =\\n\"\\",
        "\" (SELECT TOP 1 c1.cokey FROM component AS c1\\n\"\\",
        "\" INNER JOIN mapunit ON c.mukey=mapunit.mukey AND c1.mukey=mu.mukey ORDER BY c1.comppct_r DESC, c1.cokey)\\n\"\\",
        "\" ORDER BY areasymbol, musym, muname, mu.mukey\\n\"",
        "\"SELECT\\n\"\\",
        "\" areasymbol, musym, muname, mu.mukey/1  AS MUKEY,\\n\"\\",
        "\" (SELECT TOP 1 CASE WHEN ruledesign = 1 THEN 'limitation'\\n\"\\",
        "\" WHEN ruledesign = 2 THEN 'suitability' END\\n\"\\",
        "\" FROM mapunit\\n\"\\",
        "\" INNER JOIN component ON component.mukey=mapunit.mukey\\n\"\\",
        "\" INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \" + interp+\"\\n\"+\\",
        "\" GROUP BY mapunit.mukey, ruledesign) as design,\\n\"\\",
        "\" ROUND ((SELECT SUM (interphr * comppct_r)\\n\"\\",
        "\" FROM mapunit\\n\"\\",
        "\" INNER JOIN component ON component.mukey=mapunit.mukey\\n\"\\",
        "\" INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \" +interp+\"\\n\"+\\",
        "\" GROUP BY mapunit.mukey),2) as rating,\\n\"\\",
        "\" ROUND ((SELECT SUM (comppct_r)\\n\"\\",
        "\" FROM mapunit\\n\"\\",
        "\" INNER JOIN component ON component.mukey=mapunit.mukey\\n\"\\",
        "\" INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \" +interp+\"\\n\"+\\",
        "\" AND (interphr) IS NOT NULL GROUP BY mapunit.mukey),2) as sum_com\\n\"\\",
        "\" INTO #main\\n\"\\",
        "\" FROM legend  AS l\\n\"\\",
        "\" INNER JOIN  mapunit AS mu ON mu.lkey = l.lkey AND l.areasymbol LIKE '\" +areaSym+ \"'\\n\"\\",
        "\" INNER JOIN  component AS c ON c.mukey = mu.mukey\\n\"\\",
        "\" GROUP BY  areasymbol, musym, muname, mu.mukey\\n\"\\",
        "\" SELECT areasymbol, musym, muname, MUKEY, ISNULL (ROUND ((rating/sum_com),2), 99) AS rating,\\n\"\\",
        "\" CASE WHEN rating IS NULL THEN 'Not Rated'\\n\"\\",
        "\" WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2) &lt; = 0 THEN 'Very Poorly Suited'\\n\"\\",
        "\" WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)  &gt; 0.001 and  ROUND ((rating/sum_com),2)  &lt;=0.333 THEN 'Poorly suited'\\n\"\\",
        "\" WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)  &gt; 0.334 and  ROUND ((rating/sum_com),2)  &lt;=0.666  THEN 'Moderately suited'\\n\"\\",
        "\" WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)  &gt; 0.667 and  ROUND ((rating/sum_com),2)  &lt;=0.999  THEN 'Moderately well suited'\\n\"\\",
        "\" WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)   = 1  THEN 'Well suited'\\n\"\\",
        "\" WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2) &lt; = 0 THEN 'Not limited'\\n\"\\",
        "\" WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  &gt; 0.001 and  ROUND ((rating/sum_com),2)  &lt;=0.333 THEN 'Slightly limited'\\n\"\\",
        "\" WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  &gt; 0.334 and  ROUND ((rating/sum_com),2)  &lt;=0.666  THEN 'Somewhat limited'\\n\"\\",
        "\" WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  &gt; 0.667 and  ROUND ((rating/sum_com),2)  &lt;=0.999  THEN 'Moderately limited'\\n\"\\",
        "\" WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  = 1 THEN 'Very limited' END AS class\\n\"\\",
        "\" FROM #main\"",
        "arcpy.AddMessage(interpQry.replace(\"&gt;\", \">\").replace(\"&lt;\", \"<\"))",
        "Send XML query to SDM Access service",
        "dHeaders[\"User-Agent\"] = \"NuSOAP/0.7.3 (1.114)\"",
        "dHeaders[\"Content-Type\"] = \"application/soap+xml; charset=utf-8\"",
        "Create SDM connection to service using HTTP",
        "Send request in XML-Soap",
        "Get back XML response",
        "AddMsgAndPrint(str(cStatus) + \": \" + cResponse)",
        "Close connection to SDM",
        "Convert XML to tree format",
        "Iterate through XML tree, finding required elements...",
        "areasymbol, musym, muname, mu.mukey, comppct_r",
        "grab the records",
        "collect the results",
        "===============================================================================",
        "AddMsgAndPrint(aggMethod)",
        "loop through the lists",
        "send the request",
        "if it was successful...",
        "if it was unsuccessful...",
        "try again",
        "AddMsgAndPrint('Failed first attempt running ' + interp + ' for ' + eSSA + '. Resubmitting request.', 1)",
        "if 2nd run was successful",
        "if 2nd run was unsuccesful that's' it",
        "create the geodatabase output tables",
        "clean up the interp rule name to use as output table name",
        "fields list for cursor",
        "define the template table delivered with the tool",
        "populate the table"
    ],
    "docstrings": [
        "\"\"\"SELECT areasymbol, musym, muname, mu.mukey  AS MUKEY,\n                (SELECT interphr FROM component INNER JOIN cointerp ON component.cokey = cointerp.cokey AND component.cokey = c.cokey AND ruledepth = 0 AND mrulename LIKE \"\"\"",
        "\"\"\") as rating,\n                (SELECT interphrc FROM component INNER JOIN cointerp ON component.cokey = cointerp.cokey AND component.cokey = c.cokey AND ruledepth = 0 AND mrulename LIKE \"\"\"",
        "\"\"\") as class,\n                (SELECT DISTINCT SUBSTRING(  (  SELECT ( '; ' + interphrc)\n                FROM mapunit\n                INNER JOIN component ON component.mukey=mapunit.mukey AND compkind != 'miscellaneous area' AND component.cokey=c.cokey\n                INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey\n                AND ruledepth != 0 AND interphrc NOT LIKE 'Not%' AND mrulename LIKE \"\"\"",
        "\"\"\" GROUP BY interphrc, interphr\n                ORDER BY interphr DESC, interphrc\n                FOR XML PATH('') ), 3, 1000) )as reason\n                FROM legend  AS l\n                INNER JOIN  mapunit AS mu ON mu.lkey = l.lkey AND l.areasymbol LIKE '\"\"\"",
        "\"\"\"'\n                INNER JOIN  component AS c ON c.mukey = mu.mukey  AND c.cokey = (SELECT TOP 1 c1.cokey FROM component AS c1\n                INNER JOIN mapunit ON c.mukey=mapunit.mukey AND c1.mukey=mu.mukey ORDER BY c1.comppct_r DESC, c1.cokey)\"\"\"",
        "\"\"\"SELECT areasymbol, musym, muname, mu.mukey/1  AS MUKEY,\n            (SELECT TOP 1 ROUND (AVG(interphr) over(partition by interphrc),2)\n            FROM mapunit\n            INNER JOIN component ON component.mukey=mapunit.mukey\n            INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \"\"\"",
        "\"\"\" GROUP BY interphrc, interphr\n            ORDER BY SUM (comppct_r) DESC)as rating,\n            (SELECT TOP 1 interphrc\n            FROM mapunit\n            INNER JOIN component ON component.mukey=mapunit.mukey\n            INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \"\"\"",
        "\"\"\"\n            GROUP BY interphrc, comppct_r ORDER BY SUM(comppct_r) over(partition by interphrc) DESC) as class,\n\n            (SELECT DISTINCT SUBSTRING(  (  SELECT ( '; ' + interphrc)\n            FROM mapunit\n            INNER JOIN component ON component.mukey=mapunit.mukey AND compkind != 'miscellaneous area' AND component.cokey=c.cokey\n            INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey\n\n            AND ruledepth != 0 AND interphrc NOT LIKE 'Not%' AND mrulename LIKE \"\"\"",
        "\"\"\" GROUP BY interphrc, interphr\n            ORDER BY interphr DESC, interphrc\n            FOR XML PATH('') ), 3, 1000) )as reason\n\n\n            FROM legend  AS l\n            INNER JOIN  mapunit AS mu ON mu.lkey = l.lkey AND l.areasymbol LIKE '\"\"\"",
        "\"\"\"'\n            INNER JOIN  component AS c ON c.mukey = mu.mukey AND c.cokey =\n            (SELECT TOP 1 c1.cokey FROM component AS c1\n            INNER JOIN mapunit ON c.mukey=mapunit.mukey AND c1.mukey=mu.mukey ORDER BY c1.comppct_r DESC, c1.cokey)\n            ORDER BY areasymbol, musym, muname, mu.mukey\"\"\"",
        "\"\"\"SELECT areasymbol, musym, muname, mu.mukey/1  AS MUKEY,\n                (SELECT TOP 1 CASE WHEN ruledesign = 1 THEN 'limitation'\n                WHEN ruledesign = 2 THEN 'suitability' END\n                FROM mapunit\n                INNER JOIN component ON component.mukey=mapunit.mukey\n                INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \"\"\"",
        "\"\"\"\n                GROUP BY mapunit.mukey, ruledesign) as design,\n                ROUND ((SELECT SUM (interphr * comppct_r)\n                FROM mapunit\n                INNER JOIN component ON component.mukey=mapunit.mukey\n                INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \"\"\"",
        "\"\"\"\n                GROUP BY mapunit.mukey),2) as rating,\n                ROUND ((SELECT SUM (comppct_r)\n                FROM mapunit\n                INNER JOIN component ON component.mukey=mapunit.mukey\n                INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey AND ruledepth = 0 AND mrulename LIKE \"\"\"",
        "\"\"\"\n                AND (interphr) IS NOT NULL GROUP BY mapunit.mukey),2) as sum_com,\n                (SELECT DISTINCT SUBSTRING(  (  SELECT ( '; ' + interphrc)\n                FROM mapunit\n                INNER JOIN component ON component.mukey=mapunit.mukey AND compkind != 'miscellaneous area'\n                INNER JOIN cointerp ON component.cokey = cointerp.cokey AND mapunit.mukey = mu.mukey\n\n                AND ruledepth != 0 AND interphrc NOT LIKE 'Not%' AND mrulename LIKE \"\"\"",
        "\"\"\"GROUP BY interphrc\n                ORDER BY interphrc\n                FOR XML PATH('') ), 3, 1000) )as reason\n\n                INTO #main\n                FROM legend  AS l\n                INNER JOIN  mapunit AS mu ON mu.lkey = l.lkey AND l.areasymbol LIKE '\"\"\"",
        "\"\"\"'\n                INNER JOIN  component AS c ON c.mukey = mu.mukey\n                GROUP BY  areasymbol, musym, muname, mu.mukey\n\n                SELECT areasymbol, musym, muname, MUKEY, ISNULL (ROUND ((rating/sum_com),2), 99) AS rating,\n                CASE WHEN rating IS NULL THEN 'Not Rated'\n                WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2) &lt; = 0 THEN 'Not suited'\n                WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)  &gt; 0.001 and  ROUND ((rating/sum_com),2)  &lt;=0.333 THEN 'Poorly suited'\n                WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)  &gt; 0.334 and  ROUND ((rating/sum_com),2)  &lt;=0.666  THEN 'Moderately suited'\n                WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)  &gt; 0.667 and  ROUND ((rating/sum_com),2)  &lt;=0.999  THEN 'Moderately well suited'\n                WHEN design = 'suitability' AND  ROUND ((rating/sum_com),2)   = 1  THEN 'Well suited'\n\n                WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2) &lt; = 0 THEN 'Not limited '\n                WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  &gt; 0.001 and  ROUND ((rating/sum_com),2)  &lt;=0.333 THEN 'Slightly limited '\n                WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  &gt; 0.334 and  ROUND ((rating/sum_com),2)  &lt;=0.666  THEN 'Somewhat limited '\n                WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  &gt; 0.667 and  ROUND ((rating/sum_com),2)  &lt;=0.999  THEN 'Moderately limited '\n                WHEN design = 'limitation' AND  ROUND ((rating/sum_com),2)  = 1 THEN 'Very limited' END AS class, reason\n                FROM #main\n                DROP TABLE #main\"\"\"",
        "\"\"\"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n        <soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\n        <soap12:Body>\n        <RunQuery xmlns=\"http://SDMDataAccess.nrcs.usda.gov/Tabular/SDMTabularService.asmx\">\n          <Query>\"\"\"",
        "\"\"\"</Query>\n        </RunQuery>\n        </soap12:Body>\n        </soap12:Envelope>\"\"\""
    ],
    "functions": [
        "AddMsgAndPrint",
        "errorMsg",
        "getIntrps"
    ],
    "classes": [
        "ForceExit"
    ]
}