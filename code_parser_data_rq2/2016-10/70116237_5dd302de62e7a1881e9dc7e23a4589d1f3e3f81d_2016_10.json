{
    "identifiers": [
        "heapq",
        "heappush",
        "heappop",
        "unittest",
        "symbol",
        "freq",
        "symbol",
        "freq",
        "other",
        "freq",
        "other",
        "freq",
        "nodes",
        "len",
        "nodes",
        "node",
        "nodes",
        "heappush",
        "heap",
        "node",
        "_",
        "n",
        "Node",
        "heappop",
        "heap",
        "heappop",
        "heap",
        "z",
        "left",
        "freq",
        "z",
        "right",
        "freq",
        "heappush",
        "heap",
        "z",
        "heap",
        "data",
        "len",
        "data",
        "number",
        "data",
        "uniq_arr",
        "get",
        "number",
        "uniq_arr",
        "update",
        "number",
        "Node",
        "number",
        "n",
        "uniq_arr",
        "number",
        "a",
        "freq",
        "n",
        "n",
        "uniq_arr",
        "values",
        "val",
        "values",
        "arr",
        "append",
        "val",
        "arr",
        "array",
        "Huffman_transform",
        "array",
        "Huffman_compression",
        "array",
        "unittest",
        "TestCase",
        "Huffman",
        "a",
        "inorder",
        "b",
        "node",
        "node",
        "inorder",
        "node",
        "left",
        "node",
        "symbol",
        "node",
        "freq",
        "inorder",
        "node",
        "right",
        "sys",
        "argv",
        "exit",
        "len",
        "argv",
        "unittest",
        "main",
        "exit",
        "argv",
        "open",
        "filename",
        "f",
        "line",
        "f",
        "A",
        "append",
        "line",
        "A",
        "inorder",
        "Huffman",
        "A"
    ],
    "literals": [
        "''",
        "'__main__'",
        "'r'"
    ],
    "variables": [
        "symbol",
        "freq",
        "right",
        "left",
        "n",
        "heap",
        "z",
        "z",
        "left",
        "z",
        "right",
        "z",
        "freq",
        "n",
        "uniq_arr",
        "a",
        "a",
        "freq",
        "values",
        "arr",
        "array",
        "a",
        "b",
        "filename",
        "A"
    ],
    "comments": [
        "Huffman implemenation by Manuel Tobar",
        "Semestre 2016-2",
        "",
        "ToDo: add unit tests",
        "Class Node for Heap",
        "a way to check if nodes are good",
        "if node.symbol != '':",
        "creates an empty array"
    ],
    "docstrings": [
        "\"\"\"Toma un sets de datos y los comprime usando el algoritmo de Huffman\n\n    *array*, es pasado a la funcion 'Huffman_transform' y este retorna un\n    arreglo de nodos para ser comprimidos. Luego es enviado a 'Huffman_Compression'\n    que retorna el arbol binario con los datos comprimidos.\"\"\""
    ],
    "functions": [
        "__lt__",
        "Huffman_compression",
        "Huffman_transform",
        "Huffman",
        "test",
        "inorder"
    ],
    "classes": [
        "Node",
        "TestHuffman"
    ]
}