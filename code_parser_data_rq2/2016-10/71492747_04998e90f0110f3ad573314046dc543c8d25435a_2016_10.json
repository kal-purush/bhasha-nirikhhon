{
    "identifiers": [
        "requests",
        "argparse",
        "logging",
        "json",
        "os",
        "tqdm",
        "logging",
        "basicConfig",
        "level",
        "logging",
        "INFO",
        "channel",
        "platform",
        "REPODATA",
        "format",
        "channel",
        "channel",
        "platform",
        "platform",
        "requests",
        "get",
        "url",
        "json",
        "json",
        "json",
        "argparse",
        "ArgumentParser",
        "description",
        "ap",
        "add_argument",
        "help",
        "ap",
        "add_argument",
        "help",
        "ap",
        "add_argument",
        "nargs",
        "help",
        "ap",
        "_make_arg_parser",
        "ap",
        "parse_args",
        "args",
        "platform",
        "len",
        "args",
        "platform",
        "logging",
        "warning",
        "main",
        "args",
        "upstream_channel",
        "args",
        "target_directory",
        "args",
        "platform",
        "pkg_info",
        "pkg_info",
        "keys",
        "upstream_channel",
        "target_directory",
        "platform",
        "platform",
        "copy",
        "full_platform_list",
        "full_platform_list",
        "remove",
        "sorted",
        "full_platform_list",
        "DEFAULT_PLATFORMS",
        "os",
        "path",
        "exists",
        "target_directory",
        "logging",
        "info",
        "format",
        "target_directory",
        "os",
        "makedirs",
        "target_directory",
        "platform",
        "full_platform_list",
        "os",
        "path",
        "join",
        "target_directory",
        "platform",
        "os",
        "path",
        "exists",
        "dir",
        "logging",
        "info",
        "format",
        "target_directory",
        "os",
        "makedirs",
        "dir",
        "logging",
        "info",
        "format",
        "upstream_channel",
        "full_platform_list",
        "platform",
        "full_platform_list",
        "get_repodata",
        "upstream_channel",
        "platform",
        "open",
        "os",
        "path",
        "join",
        "target_directory",
        "platform",
        "f",
        "json",
        "load",
        "f",
        "j",
        "j",
        "upstream_repo_packages",
        "keys",
        "difference",
        "local_repo_packages",
        "keys",
        "packages_to_mirror",
        "upstream_repo_packages",
        "DOWNLOAD_URL",
        "format",
        "channel",
        "upstream_channel",
        "name",
        "info",
        "version",
        "info",
        "platform",
        "platform",
        "file_name",
        "url",
        "info",
        "expected_size",
        "chunk_size",
        "open",
        "os",
        "path",
        "join",
        "target_directory",
        "platform",
        "f",
        "logging",
        "info",
        "format",
        "requests",
        "get",
        "url",
        "stream",
        "data",
        "tqdm",
        "tqdm",
        "ret",
        "iter_content",
        "chunk_size",
        "desc",
        "unit",
        "total",
        "expected_iterations",
        "f",
        "write",
        "data",
        "sys",
        "sys",
        "version_info",
        "major",
        "logging",
        "error",
        "sys",
        "exit",
        "cli"
    ],
    "literals": [
        "\"https://anaconda.org/{channel}/{name}/{version}/download/{platform}/{file_name}\"",
        "'https://conda.anaconda.org/{channel}/{platform}/repodata.json'",
        "'linux-64'",
        "'linux-32'",
        "'osx-64'",
        "'win-64'",
        "'win-32'",
        "'info'",
        "'packages'",
        "\"CLI interface for conda-mirror.py\"",
        "'--upstream-channel'",
        "'The anaconda channel to mirror'",
        "'--target-directory'",
        "'The place where packages should be mirrored to'",
        "'--platform'",
        "\"+\"",
        "\"The OS platform(s) to mirror. one or more of: {'all',\"",
        "\" 'linux-64', 'linux-32', 'osx-64', 'win-32', 'win-64'}\"",
        "'all'",
        "\"If you pass 'all' as a platform option, all other \"",
        "\"options will be ignored\"",
        "'all'",
        "'all'",
        "\"Making directory: {}\"",
        "\"Making directory: {}\"",
        "\"Going to look on {} for the following platforms: {}\"",
        "\"\"",
        "'repodata.json'",
        "'r'",
        "'info'",
        "'packages'",
        "'name'",
        "'version'",
        "'size'",
        "'wb'",
        "\"Downloading {}\"",
        "\"KB\"",
        "\"__main__\"",
        "\"Requires python 3\""
    ],
    "variables": [
        "DOWNLOAD_URL",
        "REPODATA",
        "DEFAULT_PLATFORMS",
        "url",
        "json",
        "ap",
        "ap",
        "args",
        "full_platform_list",
        "full_platform_list",
        "dir",
        "upstream_repo_info",
        "upstream_repo_packages",
        "j",
        "local_repo_info",
        "local_repo_packages",
        "packages_to_mirror",
        "info",
        "url",
        "expected_size",
        "chunk_size",
        "expected_iterations",
        "ret"
    ],
    "comments": [
        "make sure the target directory structure is in place",
        "iterate over each platform in the upstream channel",
        "1KB chunks"
    ],
    "docstrings": [
        "\"\"\"Get the repodata.json file for a channel/platform combo on anaconda.org\n\n    Parameters\n    ----------\n    channel : str\n        anaconda.org/CHANNEL\n    platform : {'linux-64', 'linux-32', 'osx-64', 'win-32', 'win-64'}\n        The platform of interest\n\n    Returns\n    -------\n    info : dict\n    packages : dict\n        keyed on package name (e.g., twisted-16.0.0-py35_0.tar.bz2)\n    \"\"\"",
        "\"\"\"Reference validator that simply returns the list of all packages\n\n    Parameters\n    ----------\n    pkg_info : dict\n        The second argument returned from get_repodata()\n\n    Returns\n    -------\n    valid : list\n        The package names of the packages which are valid to mirror. These\n        are the keys of the `pkg_info` dictionary\n    invalid : list\n        The package names of the packages which should not be mirrored. These\n        are the keys of the `pkg_info` dictionary\n    \"\"\""
    ],
    "functions": [
        "get_repodata",
        "_make_arg_parser",
        "cli",
        "pass_thru_validator",
        "main"
    ],
    "classes": []
}