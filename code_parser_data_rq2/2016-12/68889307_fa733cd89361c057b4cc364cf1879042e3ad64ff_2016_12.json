{
    "identifiers": [
        "sys",
        "json",
        "time",
        "ctime",
        "cbrequest",
        "sendrequest",
        "filesave",
        "timetrack",
        "configFile",
        "queryAsyncJobResult",
        "resultCollection",
        "queryAsyncJobResultNegative",
        "mountNFS",
        "umountVolume",
        "get_url",
        "get_apikey",
        "volumeUtils",
        "create_volume",
        "delete_volume",
        "addNFSclient",
        "logging",
        "tsmUtils",
        "create_tsm",
        "len",
        "sys",
        "argv",
        "exit",
        "logging",
        "basicConfig",
        "format",
        "filename",
        "filemode",
        "level",
        "logging",
        "DEBUG",
        "logging",
        "info",
        "configFile",
        "sys",
        "argv",
        "logging",
        "info",
        "get_apikey",
        "conf",
        "logging",
        "debug",
        "apikey",
        "logging",
        "info",
        "get_url",
        "conf",
        "apikey",
        "logging",
        "debug",
        "stdurl",
        "stdurl",
        "logging",
        "info",
        "hapools",
        "hapool",
        "hapools",
        "hapool",
        "pool_id",
        "logging",
        "info",
        "sendrequest",
        "stdurl",
        "querycommand",
        "json",
        "loads",
        "resp_listHAPool",
        "text",
        "data",
        "logging",
        "info",
        "KeyError",
        "logging",
        "error",
        "KeyError",
        "exit",
        "get_poolID",
        "hapools",
        "logging",
        "info",
        "accounts",
        "account",
        "accounts",
        "account",
        "account_id",
        "logging",
        "info",
        "sendrequest",
        "stdurl",
        "querycommand",
        "filesave",
        "resp_listAccount",
        "json",
        "loads",
        "resp_listAccount",
        "text",
        "data",
        "logging",
        "info",
        "KeyError",
        "ctime",
        "logging",
        "error",
        "KeyError",
        "exit",
        "get_accID",
        "accounts",
        "account_id",
        "logging",
        "info",
        "logging",
        "info",
        "x",
        "x",
        "account_id",
        "pool_id",
        "conf",
        "x",
        "conf",
        "x",
        "tsm_params",
        "logging",
        "info",
        "create_tsm",
        "tsm_params",
        "stdurl",
        "result_tsm",
        "logging",
        "error",
        "result_tsm",
        "result_tsm",
        "logging",
        "info",
        "logging",
        "debug",
        "querycommand",
        "sendrequest",
        "stdurl",
        "querycommand",
        "json",
        "loads",
        "resp_listTsm",
        "text",
        "logging",
        "info",
        "data",
        "tsm",
        "tsms",
        "tsm",
        "tsm_params",
        "logging",
        "info",
        "tsm",
        "tsm",
        "logging",
        "info",
        "y",
        "logging",
        "info",
        "tsm_params",
        "y",
        "tsm_id",
        "dataset_id",
        "logging",
        "info",
        "create_volume",
        "volume",
        "stdurl",
        "result_vol",
        "result_vol",
        "logging",
        "error",
        "result_vol",
        "exit",
        "result_vol",
        "result_vol",
        "logging",
        "info",
        "tsm_id",
        "logging",
        "info",
        "result_vol",
        "sendrequest",
        "stdurl",
        "querycommand",
        "json",
        "loads",
        "resp_listVolume",
        "text",
        "data1",
        "data",
        "errormsg",
        "logging",
        "error",
        "errormsg",
        "exit",
        "data1",
        "logging",
        "info",
        "vol",
        "volumes",
        "vol",
        "volume",
        "vol",
        "vol",
        "vol",
        "addNFSclient",
        "stdurl",
        "volId",
        "result_addnfs",
        "logging",
        "error",
        "result_addnfs",
        "exit",
        "result_addnfs",
        "result_addnfs",
        "logging",
        "info",
        "volume",
        "mount_p",
        "Tsm_ip",
        "mountNFS",
        "volume_1",
        "result_mount",
        "result_mount",
        "logging",
        "info",
        "result_mount",
        "result_mount",
        "logging",
        "error",
        "result_mount",
        "exit",
        "logging",
        "info"
    ],
    "literals": [
        "'Incorrect parameters, please specify as follows...'",
        "'python example.py conf.txt '",
        "'%(asctime)s %(levelname)s: %(message)s'",
        "'logs/automation_execution.log'",
        "'a'",
        "\"---------------execution begins-----------------\"",
        "\"---------------execution begins-----------------\"",
        "\"getting apiKey\"",
        "\"apikey :%s\"",
        "\"processing stdurl\"",
        "\"stdUrl :%s\"",
        "\"\"",
        "'id'",
        "\"Listing pool ID to create tsm \"",
        "'command=listHAPool'",
        "\"listHAPoolResponse\"",
        "\"hapool\"",
        "\"paasing an exeception to catch KeyError while lsiting poolID\"",
        "\" no POOLs are Available, Minimum 1 POOL required to proceed\"",
        "'No Pool available please have minimum 1 POOL to proceed %s'",
        "\"Listing pool ID was sucessful\"",
        "'id'",
        "\"Listing Account ID\"",
        "'command=listAccount'",
        "\"logs/CurrentAccountList.txt\"",
        "\"w\"",
        "\"listAccountResponse\"",
        "\"account\"",
        "\"paasing an exeception to catch KeyError while lsiting poolID\"",
        "\" no Accounts are Available, Minimum 1 Account required to proceed\"",
        "'No Accounts available please have minimum 1 Account to proceed %s'",
        "\"Listing Account ID was sucessful\"",
        "\"creation of TSM begins\"",
        "'name'",
        "'TTTSM%d'",
        "'accountid'",
        "'poolid'",
        "'ipaddress'",
        "\"ipVSM%d\"",
        "'quotasize'",
        "'1T'",
        "'blocksize'",
        "'4k'",
        "'latency'",
        "'totaliops'",
        "'totalthroughput'",
        "''",
        "'graceallowed'",
        "'true'",
        "'subnet'",
        "'tntinterface'",
        "\"interfaceVSM%d\"",
        "'dnsname'",
        "'sdsd@s.c'",
        "'dnsserver'",
        "'8.8.8.8'",
        "'gracecontrol'",
        "'false'",
        "'iopscontrol'",
        "'true'",
        "'tpcontrol'",
        "'true'",
        "'backuptpcontrol'",
        "'false'",
        "'totalbackupthroughput'",
        "'totalthroughput'",
        "'totaliops'",
        "\"calling method to create tsm\"",
        "'FAILED'",
        "\"FAILED TO CREATE VSM \"",
        "\"FAILED TO CREATE VOLUME: %s\"",
        "'PASSED'",
        "\"ADDITION OF VSM WAS SUCESSFUL \"",
        "\"Adding TSM was sucessful\"",
        "'command=listTsm'",
        "\"passing querycommand to list tsm \\n %s\"",
        "\"sucessfully loaded data to list TSM\"",
        "\"listTsmResponse\"",
        "\"listTsm\"",
        "'name'",
        "'name'",
        "\"fetching Dataset id and TSM id \"",
        "'datasetid'",
        "'id'",
        "\"sucessfully updated Dataset id and TSM id \"",
        "\"processing forloop to create volumes\"",
        "'name'",
        "'%sNFS%d'",
        "'name'",
        "'tsmid'",
        "'datasetid'",
        "'protocoltype'",
        "'NFS'",
        "\"creation of volume begins\"",
        "'FAILED'",
        "\"Adding NFS client FAILED %s \"",
        "\"FAILED TO ADD VOLUMES %s \"",
        "'PASSED'",
        "\"Adding NFS client PASSED %s \"",
        "\"SUCESSFULLY CREATED VOLUMES\"",
        "'command=listFileSystem&tsmid=%s'",
        "\" \"",
        "'errorcode'",
        "\"listFilesystemResponse\"",
        "\"errortext\"",
        "\"%s\"",
        "\"Failed to list volumes %s \"",
        "'listFilesystemResponse'",
        "'filesystem'",
        "\"Listing volumes was sucessful\"",
        "'name'",
        "'name'",
        "'id'",
        "'mountpoint'",
        "'ipaddress'",
        "'all'",
        "'FAILED'",
        "\"Adding NFS client was UNsuccessfuil%d\"",
        "\"Failed to add NFS clients :  %s \"",
        "'PASSED'",
        "\"Adding NFS client FAILED %s \"",
        "\"Sucessfully added NFS clients\"",
        "'name'",
        "'name'",
        "'mountPoint'",
        "'TSMIPAddress'",
        "'PASSED'",
        "\"mounting volume was %s\"",
        "\"Sucessfully added NFS clients\"",
        "'FAILED'",
        "\"mounting volume was %s\"",
        "\"FAILED TO MOUNT NFS VOLUMES %s\"",
        "\"---------------execution begins-----------------\"",
        "\"---------------execution begins-----------------\""
    ],
    "variables": [
        "conf",
        "apikey",
        "stdurl",
        "pool_id",
        "pool_id",
        "querycommand",
        "resp_listHAPool",
        "data",
        "hapools",
        "pool_id",
        "account_id",
        "account_id",
        "querycommand",
        "resp_listAccount",
        "data",
        "accounts",
        "endTime",
        "account_id",
        "tsm_params",
        "tsm_params",
        "result_tsm",
        "querycommand",
        "resp_listTsm",
        "data",
        "tsms",
        "dataset_id",
        "tsm_id",
        "volume",
        "result_vol",
        "querycommand",
        "resp_listVolume",
        "data1",
        "errormsg",
        "volumes",
        "volId",
        "mount_p",
        "Tsm_ip",
        "result_addnfs",
        "volume_1",
        "result_mount"
    ],
    "comments": [
        "getting pool id ##",
        "print pool_id",
        "getting account ID to create TSM",
        "creation of tsm begins  #####",
        "creating a loop to create 5 tsm's",
        "calling method to create tsm",
        "fetcing datasetID and tsmID to create volumes",
        "calling method to create volume",
        "Listing filesystem to add NFS clients to all",
        "getting volid mountpoint and Tsm_ip to set nfs client to all",
        "started mounting NFS volumes"
    ],
    "docstrings": [
        "'''                              \n                           else: \n                                   print (\" no volumes with name %d exists\"% volume['name']) \n                                   logging.error(\"NO VOLUMES FOUND %s\")\n                                   exit()\n                           \n                           \n                           for z in range(1, 21):\n                               logging.info(\"IN the loop to mount all volumes\")\n                               volume_umount = {'name': '%sNFS%s' %(tsm_params['name'], volume['name']), 'tsmid':\\\n                                       tsm_id, 'datasetid': dataset_id,'protocoltype': 'NFS'}\n                               \n                               # STARTED UNMOUNT NFS VOLUMES\n                               \n                               logging.info(\"STARTED UNMOUNT NFS VOLUMES\")\n                               result_umount = umountVolume(volume_umount)\n                               if result_umount[0] == 'FAILED':\n                                   print result_umount\n                                   logging.error(\"failed to mount %s\"% result_umount)\n                                   exit()\n                               elif result_umount[0] == 'PASSED':\n                                   print result_umount\n                                   logging.info(\"mounted sucssfully\")'''"
    ],
    "functions": [
        "get_poolID",
        "get_accID"
    ],
    "classes": []
}