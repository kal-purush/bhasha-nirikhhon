{
    "identifiers": [
        "com",
        "example",
        "tomek",
        "etapi",
        "android",
        "Manifest",
        "android",
        "content",
        "Context",
        "android",
        "content",
        "pm",
        "PackageManager",
        "android",
        "location",
        "Criteria",
        "android",
        "location",
        "Location",
        "android",
        "location",
        "LocationManager",
        "android",
        "support",
        "v4",
        "app",
        "ActivityCompat",
        "crit",
        "locMan",
        "loc",
        "mContext",
        "readLongitudeByNetwork",
        "mContext",
        "readLatitudeByNetwork",
        "mContext",
        "mContext",
        "readLongitudeByGPS",
        "mContext",
        "readLatitudeByGPS",
        "mContext",
        "mContext",
        "readLongitudeByBest",
        "mContext",
        "readLatitudeByBest",
        "mContext",
        "mContext",
        "crit",
        "locMan",
        "mContext",
        "getSystemService",
        "mContext",
        "LOCATION_SERVICE",
        "loc",
        "locMan",
        "getLastKnownLocation",
        "locMan",
        "GPS_PROVIDER",
        "loc",
        "getLongitude",
        "mContext",
        "crit",
        "locMan",
        "mContext",
        "getSystemService",
        "mContext",
        "LOCATION_SERVICE",
        "loc",
        "locMan",
        "getLastKnownLocation",
        "locMan",
        "GPS_PROVIDER",
        "loc",
        "getLatitude",
        "mContext",
        "crit",
        "locMan",
        "mContext",
        "getSystemService",
        "mContext",
        "LOCATION_SERVICE",
        "loc",
        "locMan",
        "getLastKnownLocation",
        "locMan",
        "NETWORK_PROVIDER",
        "loc",
        "getLongitude",
        "mContext",
        "crit",
        "locMan",
        "mContext",
        "getSystemService",
        "mContext",
        "LOCATION_SERVICE",
        "loc",
        "locMan",
        "getLastKnownLocation",
        "locMan",
        "NETWORK_PROVIDER",
        "loc",
        "getLatitude",
        "mContext",
        "crit",
        "locMan",
        "mContext",
        "getSystemService",
        "mContext",
        "LOCATION_SERVICE",
        "ActivityCompat",
        "checkSelfPermission",
        "mContext",
        "Manifest",
        "permission",
        "ACCESS_FINE_LOCATION",
        "PackageManager",
        "PERMISSION_GRANTED",
        "ActivityCompat",
        "checkSelfPermission",
        "mContext",
        "Manifest",
        "permission",
        "ACCESS_COARSE_LOCATION",
        "PackageManager",
        "PERMISSION_GRANTED",
        "loc",
        "locMan",
        "getLastKnownLocation",
        "locMan",
        "getBestProvider",
        "crit",
        "loc",
        "getLongitude",
        "mContext",
        "crit",
        "locMan",
        "mContext",
        "getSystemService",
        "mContext",
        "LOCATION_SERVICE",
        "ActivityCompat",
        "checkSelfPermission",
        "mContext",
        "Manifest",
        "permission",
        "ACCESS_FINE_LOCATION",
        "PackageManager",
        "PERMISSION_GRANTED",
        "ActivityCompat",
        "checkSelfPermission",
        "mContext",
        "Manifest",
        "permission",
        "ACCESS_COARSE_LOCATION",
        "PackageManager",
        "PERMISSION_GRANTED",
        "loc",
        "locMan",
        "getLastKnownLocation",
        "locMan",
        "getBestProvider",
        "crit",
        "loc",
        "getLatitude"
    ],
    "literals": [
        "\"    \"",
        "\"    \"",
        "\"    \""
    ],
    "variables": [
        "crit",
        "locMan",
        "loc"
    ],
    "comments": [
        "TODO: Consider calling",
        "ActivityCompat#requestPermissions",
        "here to request the missing permissions, and then overriding",
        "public void onRequestPermissionsResult(int requestCode, String[] permissions,",
        "int[] grantResults)",
        "to handle the case where the user grants the permission. See the documentation",
        "for ActivityCompat#requestPermissions for more details.",
        "TODO: Consider calling",
        "ActivityCompat#requestPermissions",
        "here to request the missing permissions, and then overriding",
        "public void onRequestPermissionsResult(int requestCode, String[] permissions,",
        "int[] grantResults)",
        "to handle the case where the user grants the permission. See the documentation",
        "for ActivityCompat#requestPermissions for more details."
    ],
    "docstrings": [
        "* Class containing functions used to reading current location\n * Created by Tomek on 23.12.2016.\n * @author TomaszBorowicz\n * @",
        "* Method returns current location in String format\n     * Location is read from GPS\n     * @param mContext Context of the activity which calls the method.\n     * @return String in format Longitude Latitude",
        "* Method returns current location in String format\n     * Location is read from Network\n     * @param mContext Context of the activity which calls the method.\n     * @return String in format Longitude Latitude",
        "* Method returns current location in String format\n     * Location is read from the best source (Network or GPS)\n     * @param mContext Context of the activity which calls the method.\n     * @return String in format Longitude Latitude",
        "* Method returns current Longitude read from GPS\n     * @param mContext Context of the activity which calls the method.\n     * @return Longitude in double format",
        "* Method returns current Latitude read from GPS\n     * @param mContext Context of the activity which calls the method.\n     * @return Latitude in double format",
        "* Method returns current Longitude read from Network\n     * @param mContext Context of the activity which calls the method.\n     * @return Longitude in double format",
        "* Method returns current Latitude read from Network\n     * @param mContext Context of the activity which calls the method.\n     * @return Latitude in double format",
        "* Method returns current Longitude read from the best source (Network ot GPS)\n     * @param mContext Context of the activity which calls the method.\n     * @return Longitude in double format",
        "* Method returns current Latitude read from the best source (Network ot GPS)\n     * @param mContext Context of the activity which calls the method.\n     * @return Latitude in double format"
    ],
    "functions": [
        "readLocationByGPS",
        "readLocationByNetwork",
        "readLocationByBest",
        "readLongitudeByGPS",
        "readLatitudeByGPS",
        "readLongitudeByNetwork",
        "readLatitudeByNetwork",
        "readLongitudeByBest",
        "readLatitudeByBest"
    ],
    "classes": [
        "ReadLocation"
    ]
}