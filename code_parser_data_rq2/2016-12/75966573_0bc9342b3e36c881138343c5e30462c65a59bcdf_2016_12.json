{
    "identifiers": [
        "Collections",
        "Generic",
        "Reflection",
        "Verse",
        "static_quality",
        "Detours",
        "TryDetourFromTo",
        "MethodInfo",
        "source",
        "MethodInfo",
        "destination",
        "source",
        "Log",
        "destination",
        "Log",
        "source",
        "DeclaringType",
        "FullName",
        "source",
        "Name",
        "source",
        "MethodHandle",
        "GetFunctionPointer",
        "ToString",
        "IntPtr",
        "Size",
        "ToString",
        "destination",
        "DeclaringType",
        "FullName",
        "destination",
        "Name",
        "destination",
        "MethodHandle",
        "GetFunctionPointer",
        "ToString",
        "IntPtr",
        "Size",
        "ToString",
        "detoured",
        "Add",
        "sourceString",
        "destinations",
        "Add",
        "destinationString",
        "IntPtr",
        "Size",
        "Int64",
        "source",
        "MethodHandle",
        "GetFunctionPointer",
        "ToInt64",
        "destination",
        "MethodHandle",
        "GetFunctionPointer",
        "ToInt64",
        "Source_Base",
        "Pointer_Raw_Source",
        "Pointer_Raw_Source",
        "Pointer_Raw_Source",
        "Pointer_Raw_Address",
        "Destination_Base",
        "Pointer_Raw_Source",
        "Pointer_Raw_Source",
        "Source_Base",
        "MethodHandle",
        "GetFunctionPointer",
        "ToInt32",
        "MethodHandle",
        "GetFunctionPointer",
        "ToInt32",
        "Pointer_Raw_Source",
        "Source_Base",
        "Pointer_Raw_Address",
        "Pointer_Raw_Source",
        "offset",
        "Destination_Base",
        "Source_Base",
        "Pointer_Raw_Source",
        "Pointer_Raw_Address",
        "offset"
    ],
    "literals": [
        "\"Source MethodInfo is null: Detours\"",
        "\"Destination MethodInfo is null: Detours\"",
        "\".\"",
        "\" @ 0x\"",
        "\"X\"",
        "\".\"",
        "\" @ 0x\"",
        "\"X\""
    ],
    "variables": [
        "detoured",
        "destinations",
        "sourceString",
        "destinationString",
        "Source_Base",
        "Destination_Base",
        "Pointer_Raw_Source",
        "Pointer_Raw_Address"
    ],
    "comments": [
        "For when CCL is not available",
        "</summary>",
        "This is a basic first implementation of the IL method 'hooks' (detours) made possible by RawCode's work;\n            https://ludeon.com/forums/index.php?topic=17143.0\n\n            Performs detours, spits out basic logs and warns if a method is detoured multiple times.\n        *",
        "error out on null arguments",
        "keep track of detours and spit out some messaging",
        "#if DEBUG\n            if (detoured.Contains(sourceString))\n            {\n                CCL_Log.Trace(Verbosity.Warnings,\n                    \"Source method ('\" + sourceString + \"') is previously detoured to '\" + destinations[detoured.IndexOf(sourceString)] + \"'\",\n                    \"Detours\"\n                );\n            }\n            CCL_Log.Trace(Verbosity.Injections,\n                \"Detouring '\" + sourceString + \"' to '\" + destinationString + \"'\",\n                \"Detours\"\n            );\n#endif",
        "64-bit systems use 64-bit absolute address and jumps",
        "12 byte destructive",
        "Get function pointers",
        "Native source address",
        "Pointer to insert jump address into native code",
        "Insert 64-bit absolute jump into native code (address in rax)",
        "mov rax, immediate64",
        "jmp [rax]",
        "( Pointer_Raw_Source + 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09 )",
        "32-bit systems use 32-bit relative offset and jump",
        "5 byte destructive",
        "Get function pointers",
        "Native source address",
        "Pointer to insert jump address into native code",
        "Jump offset (less instruction size)",
        "Insert 32-bit relative jump into native code",
        "done!"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [],
    "classes": []
}