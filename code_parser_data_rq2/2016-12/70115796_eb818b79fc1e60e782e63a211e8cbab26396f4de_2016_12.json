{
    "identifiers": [
        "numpy",
        "np",
        "math",
        "random",
        "pdb",
        "skimage",
        "io",
        "img_as_float",
        "color",
        "skimage",
        "exposure",
        "equalize_hist",
        "filename",
        "data",
        "filename",
        "data",
        "filename",
        "io",
        "imread",
        "filename",
        "data",
        "height",
        "width",
        "bitdepth",
        "_data",
        "shape",
        "i",
        "j",
        "i",
        "height",
        "j",
        "width",
        "item",
        "_data",
        "__getitem__",
        "item",
        "image",
        "means",
        "variances",
        "image",
        "image",
        "indices",
        "means",
        "variances",
        "means",
        "variances",
        "len",
        "means",
        "np",
        "linalg",
        "det",
        "variances",
        "k",
        "k",
        "no_classes",
        "np",
        "linalg",
        "inv",
        "variances",
        "k",
        "k",
        "no_classes",
        "init_labels_from_gmm",
        "i",
        "j",
        "coeff",
        "coeff",
        "i",
        "j",
        "singleton",
        "i",
        "j",
        "k",
        "k",
        "no_classes",
        "np",
        "argmin",
        "lls",
        "np",
        "empty_like",
        "image",
        "_data",
        "dtype",
        "i",
        "image",
        "height",
        "j",
        "image",
        "width",
        "estimate_label",
        "i",
        "j",
        "label_output",
        "i",
        "j",
        "label",
        "np",
        "matrix",
        "image",
        "i",
        "j",
        "means",
        "label",
        "math",
        "log",
        "var_dets",
        "label",
        "x_mu",
        "var_invs",
        "label",
        "x_mu",
        "T",
        "i",
        "j",
        "label",
        "dx",
        "dy",
        "all",
        "i",
        "dy",
        "image",
        "height",
        "i",
        "dy",
        "j",
        "dx",
        "image",
        "width",
        "j",
        "dx",
        "label",
        "labels",
        "i",
        "dy",
        "j",
        "dx",
        "energy",
        "beta",
        "i",
        "j",
        "energy",
        "beta",
        "i",
        "j",
        "energy",
        "i",
        "image",
        "height",
        "j",
        "image",
        "width",
        "labels",
        "i",
        "j",
        "singletons",
        "singleton",
        "i",
        "j",
        "k",
        "doubletons",
        "doubleton",
        "i",
        "j",
        "k",
        "singletons",
        "doubletons",
        "i",
        "j",
        "label",
        "singleton",
        "i",
        "j",
        "label",
        "doubleton",
        "i",
        "j",
        "label",
        "thresh",
        "global_energy",
        "delta_E",
        "thresh",
        "counter",
        "random",
        "shuffle",
        "indices",
        "i",
        "j",
        "indices",
        "labels",
        "estimate_label",
        "i",
        "j",
        "global_energy",
        "math",
        "fabs",
        "E_old",
        "energy",
        "energy",
        "counter",
        "format",
        "counter",
        "E_old",
        "thresh",
        "temp",
        "global_energy",
        "delta_E",
        "thresh",
        "counter",
        "random",
        "shuffle",
        "indices",
        "i",
        "j",
        "indices",
        "math",
        "exp",
        "local_energy",
        "i",
        "j",
        "k",
        "temp",
        "k",
        "no_classes",
        "sum",
        "local_energies",
        "random",
        "uniform",
        "k",
        "no_classes",
        "z",
        "local_energies",
        "k",
        "sum_energies",
        "z",
        "r",
        "labels",
        "k",
        "global_energy",
        "math",
        "fabs",
        "E_old",
        "energy",
        "energy",
        "counter",
        "format",
        "counter",
        "E_old",
        "matplotlib",
        "pyplot",
        "plt",
        "Image",
        "np",
        "array",
        "random",
        "uniform",
        "random",
        "uniform",
        "random",
        "uniform",
        "_",
        "random",
        "uniform",
        "np",
        "eye",
        "random",
        "uniform",
        "np",
        "eye",
        "random",
        "uniform",
        "np",
        "eye",
        "MRF",
        "test_img",
        "means",
        "variances",
        "plt",
        "imshow",
        "test_mrf",
        "labels",
        "cmap",
        "plt",
        "savefig",
        "test_mrf",
        "icm",
        "plt",
        "imshow",
        "test_mrf",
        "labels",
        "plt",
        "savefig",
        "cmap"
    ],
    "literals": [
        "\"you need to supply an image file or pass a picture array\"",
        "'int8'",
        "'took {} iterations\\n final energy was {:6.6f}'",
        "'took {} iterations\\n final energy was {:6.6f}'",
        "'__main__'",
        "'./test_resized_2.jpg'",
        "'gist_gray_r'",
        "'before.png'",
        "'after_icm.png'",
        "'gist_gray_r'"
    ],
    "variables": [
        "_data",
        "_data",
        "indices",
        "image",
        "indices",
        "no_classes",
        "var_dets",
        "var_invs",
        "labels",
        "lls",
        "label_output",
        "label_output",
        "i",
        "j",
        "x_mu",
        "energy",
        "singletons",
        "doubletons",
        "k",
        "E_old",
        "delta_E",
        "counter",
        "delta_E",
        "i",
        "j",
        "energy",
        "delta_E",
        "E_old",
        "E_old",
        "delta_E",
        "counter",
        "local_energies",
        "sum_energies",
        "r",
        "z",
        "i",
        "j",
        "energy",
        "delta_E",
        "E_old",
        "test_img",
        "means",
        "variances",
        "test_mrf"
    ],
    "comments": [
        "preprocessing",
        "self._data = color.rgb2lab(self._data)",
        "if self._data.ndim > 2:",
        "self._data = equalize_hist(color.rgb2gray(self._data)) # convert to grayscale",
        "self._data = img_as_float(self._data) # lab already normalized??",
        "piggyback off of numpy's array indexing",
        "mean, var comes from gmm",
        "precalculate determinants and inverses for the variances",
        "initialization helper functions",
        "possible to overwrite this function to modify our energies",
        "maximum log-likelihood",
        "returns index of minimum as apposed to python's min which would return minimum value",
        "we want minimum since singleton is negative log-likelihood, but want max likelihood",
        "energy calculation functions",
        "this is just the negative log-likelihood",
        "pdb.set_trace()",
        ".item(0) # unwrap numpy matrix",
        "estimation algos for updating labels",
        "efficient graph cut",
        "basically loop through everything picking minimizing labeling until \"convergence\"",
        "no do-while in python :v[",
        "threshold for convergence",
        "mix up the order the indices are visited",
        "local_energies = [self.local_energy(i,j,k) for k in range(self.no_classes)]",
        "np.argmin(local_energies)",
        "no do-while in python :v[",
        "threshold for convergence",
        "gmm with estimate_parameters function",
        "-> mle to get initial segmentation",
        "test_img = Image() # should raise error",
        "lol, for my 640 x 425 px image this code took 140 seconds to run on my desktop"
    ],
    "docstrings": [
        "\"\"\"\n\tholds a picture\n\tcan either supply a filename or\n\tdata as a numpy array\n\t\"\"\""
    ],
    "functions": [
        "__getitem__",
        "beta",
        "estimate_label",
        "init_labels_from_gmm",
        "singleton",
        "doubleton",
        "global_energy",
        "local_energy",
        "icm",
        "gibbs"
    ],
    "classes": [
        "Image",
        "MRF"
    ]
}