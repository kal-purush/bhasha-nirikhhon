{
    "identifiers": [
        "NOJSONNET",
        "NBitcoin",
        "DataEncoders",
        "Newtonsoft",
        "Json",
        "Collections",
        "Generic",
        "IO",
        "Linq",
        "Text",
        "Threading",
        "Tasks",
        "NBitcoin",
        "JsonConverters",
        "NOJSONNET",
        "JsonConverter",
        "Type",
        "objectType",
        "Key",
        "objectType",
        "PubKey",
        "objectType",
        "JsonReader",
        "reader",
        "Type",
        "objectType",
        "existingValue",
        "JsonSerializer",
        "serializer",
        "reader",
        "TokenType",
        "JsonToken",
        "Null",
        "Encoders",
        "Hex",
        "DecodeData",
        "reader",
        "Value",
        "objectType",
        "Key",
        "Key",
        "PubKey",
        "EndOfStreamException",
        "FormatException",
        "JsonObjectException",
        "objectType",
        "Name",
        "reader",
        "Type",
        "uint256",
        "uint160",
        "inverse",
        "Reverse",
        "JsonWriter",
        "writer",
        "value",
        "JsonSerializer",
        "serializer",
        "value",
        "IBitcoinSerializable",
        "value",
        "ToBytes",
        "writer",
        "WriteValue",
        "Encoders",
        "Hex",
        "EncodeData"
    ],
    "literals": [
        "\"Invalid bitcoin object of type \""
    ],
    "variables": [
        "inverse"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "CanConvert",
        "ReadJson",
        "InverseIfNeeded",
        "WriteJson"
    ],
    "classes": [
        "KeyJsonConverter"
    ]
}