{
    "identifiers": [
        "HelloDotNetGuide",
        "异步编程",
        "HelloDotNetGuide",
        "常见算法",
        "SumNumbers",
        "WriteLine",
        "result",
        "n",
        "n",
        "n",
        "SumNumbers",
        "n",
        "Fibonacci",
        "WriteLine",
        "result",
        "n",
        "n",
        "Fibonacci",
        "n",
        "Fibonacci",
        "n",
        "HelloDotNetGuide",
        "异步编程",
        "filePath",
        "StreamReader",
        "filePath",
        "reader",
        "ReadToEndAsync",
        "content",
        "FileNotFoundException",
        "ex",
        "ex",
        "Message"
    ],
    "literals": [
        "\"1+2+3+4+...+100 = \"",
        "\"第30位斐波那契数是：\"",
        "\"文件未找到\""
    ],
    "variables": [
        "result",
        "result",
        "StreamReader",
        "reader",
        "content"
    ],
    "comments": [
        "var getFileContent = ReadFileAsyncExample.ReadFileAsync(\"D:\\\\Desktop\\\\数据读取.txt\").ConfigureAwait(false);",
        "递归算法.FibonacciSum();",
        "递归算法.RecursiveAlgorithmSum();",
        "使用C#语言编写的递归算法来计算1+2+3+4+…+100的结果",
        "最终结果是：5050",
        "</summary>",
        "递归结束条件",
        "使用递归算法来实现求解斐波纳契数列中第30位数的值",
        "最终结果为832040",
        "</summary>",
        "使用C#异步方法来进行文件内容读取操作",
        "</summary>",
        "异步方法读取文件内容",
        "当涉及到C#的异步编程时，你可以使用 async 和 await 关键字来实现",
        "</summary>",
        "<param name=\"filePath\">文件地址</param>",
        "<returns></returns>",
        "异步读取文件内容并等待完成"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "RecursiveAlgorithmSum",
        "SumNumbers",
        "FibonacciSum",
        "Fibonacci",
        "ReadFileAsync"
    ],
    "classes": [
        "递归算法",
        "ReadFileAsyncExample"
    ]
}