{
    "identifiers": [
        "beforeEach",
        "describe",
        "expect",
        "test",
        "jest",
        "fstar_handlers",
        "TextDocuments",
        "TextDocument",
        "defaultSettings",
        "Server",
        "jest",
        "ClientConnection",
        "jest",
        "jest",
        "ClientConnection",
        "jest",
        "Server",
        "mockConnection",
        "TextDocuments",
        "TextDocument",
        "beforeEach",
        "jest",
        "describe",
        "jest",
        "jest",
        "fstar_handlers",
        "handleOneResponseForDocumentMock",
        "fstar_handlers",
        "defaultSettings",
        "mockServer",
        "mockConnection",
        "TextDocument",
        "test",
        "handleFStarResponseForDocument",
        "td",
        "valid_message",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "expect",
        "handleOneResponseForDocumentMock",
        "td",
        "valid_message",
        "lax",
        "test",
        "handleFStarResponseForDocument",
        "td",
        "fragment_0",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "handleFStarResponseForDocument",
        "td",
        "fragment_1",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "handleFStarResponseForDocument",
        "td",
        "fragment_2",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "expect",
        "handleOneResponseForDocumentMock",
        "td",
        "fragment_0",
        "fragment_1",
        "fragment_2",
        "lax",
        "test",
        "handleFStarResponseForDocument",
        "td",
        "fragment_2",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "handleFStarResponseForDocument",
        "td",
        "fragment_1",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "handleFStarResponseForDocument",
        "td",
        "fragment_0",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "test",
        "handleFStarResponseForDocument",
        "td",
        "valid_message",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "expect",
        "handleOneResponseForDocumentMock",
        "td",
        "valid_message",
        "lax",
        "handleFStarResponseForDocument",
        "td",
        "fragment_0",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "handleFStarResponseForDocument",
        "td",
        "valid_message",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "expect",
        "handleOneResponseForDocumentMock",
        "td",
        "valid_message",
        "lax",
        "handleFStarResponseForDocument",
        "td",
        "fragment_1",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "handleFStarResponseForDocument",
        "td",
        "fragment_2",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "test",
        "valid_message",
        "fragment_0",
        "fragment_1",
        "fragment_2",
        "handleFStarResponseForDocument",
        "td",
        "combined_messages",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "expect",
        "handleOneResponseForDocumentMock",
        "td",
        "valid_message",
        "lax",
        "expect",
        "handleOneResponseForDocumentMock",
        "td",
        "fragment_0",
        "fragment_1",
        "fragment_2",
        "lax"
    ],
    "literals": [
        "'@jest/globals'",
        "'../src/fstar_handlers'",
        "'vscode-languageserver/node'",
        "'vscode-languageserver-textdocument'",
        "'../src/settings'",
        "'../src/server'",
        "'../src/server'",
        "'../src/client_connection'",
        "'../src/client_connection'",
        "'handleFStarResponseForDocument tests'",
        "'handleOneResponseForDocumentFactory'",
        "\"test\"",
        "\"test\"",
        "\"test\"",
        "'test valid message'",
        "'{\"kind\": \"message\"}'",
        "'test fragmented message'",
        "'{\"kind\": \"'",
        "'message'",
        "'\"}'",
        "'test out-of-order fragmented messages are not handled'",
        "'{\"kind\": \"'",
        "'message'",
        "'\"}'",
        "'test valid messages flush buffer'",
        "'{\"kind\": \"message\"}'",
        "'{\"kind\": \"'",
        "'message'",
        "'\"}'",
        "'test combined messages and fragments processed separately'",
        "'{\"kind\": \"message\"}'",
        "'{\"kind\": \"'",
        "'message'",
        "'\"}'",
        "'\\n'"
    ],
    "variables": [
        "mockConnection",
        "mockServer",
        "handleOneResponseForDocumentMock",
        "_",
        "handleFStarResponseForDocument",
        "td",
        "lax",
        "valid_message",
        "fragment_0",
        "fragment_1",
        "fragment_2",
        "fragment_0",
        "fragment_1",
        "fragment_2",
        "valid_message",
        "fragment_0",
        "fragment_1",
        "fragment_2",
        "valid_message",
        "fragment_0",
        "fragment_1",
        "fragment_2",
        "combined_messages"
    ],
    "comments": [
        "Mocks",
        "Mocked objects to use in this test suite",
        "",
        "Note: jest.mocked() ensures that the mock is type-safe. See",
        "https://jestjs.io/docs/mock-function-api#jestmockedsource-options for more",
        "details.",
        "`handleFStarResponseForDocument` calls `handleOneResponseForDocument`. We",
        "therefore mock `handleOneResponseForDocument` out to simplify these",
        "tests. The factory function is mocked to just return the mocked",
        "`handleOneResponseForDocument` function.",
        "The function we'll be testing, complete with mocked dependencies",
        "Common test parameters",
        "Valid messages are passed on for further handling",
        "Fragments are buffered until a full valid message is received, then it is",
        "passed on for further handling.",
        "Fragments are assumed to be received in-order, so out-of-order",
        "fragments have undefined behavior. In this test case, no valid",
        "message can be collected.",
        "Fragments are assumed to be received in-order and before other",
        "messages, so a valid message results in the buffer being flushed.",
        "Messages that are separated by newlines should be processed just as",
        "if they were received as separate messages."
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}