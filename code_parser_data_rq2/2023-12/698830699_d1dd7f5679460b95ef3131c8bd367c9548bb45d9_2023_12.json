{
    "identifiers": [
        "annotations",
        "logging",
        "pytest",
        "_pytest",
        "fixtures",
        "FixtureRequest",
        "dbt_semantic_interfaces",
        "implementations",
        "filters",
        "where_filter",
        "PydanticWhereFilter",
        "PydanticWhereFilterIntersection",
        "dbt_semantic_interfaces",
        "implementations",
        "semantic_manifest",
        "PydanticSemanticManifest",
        "dbt_semantic_interfaces",
        "naming",
        "keywords",
        "METRIC_TIME_ELEMENT_NAME",
        "dbt_semantic_interfaces",
        "references",
        "MetricReference",
        "metricflow",
        "model",
        "semantic_manifest_lookup",
        "SemanticManifestLookup",
        "metricflow",
        "plan_conversion",
        "column_resolver",
        "DunderColumnAssociationResolver",
        "metricflow",
        "query",
        "query_exceptions",
        "InvalidQueryException",
        "metricflow",
        "query",
        "query_parser",
        "MetricFlowQueryParser",
        "metricflow",
        "test",
        "fixtures",
        "setup_fixtures",
        "MetricFlowTestSessionState",
        "metricflow",
        "test",
        "model",
        "modify",
        "modify_manifest",
        "modify_manifest",
        "metricflow",
        "test",
        "model",
        "modify",
        "modify_metric_filter",
        "ModifyMetricFilterTransform",
        "metricflow",
        "test",
        "snapshot_utils",
        "assert_object_snapshot_equal",
        "logging",
        "getLogger",
        "request",
        "FixtureRequest",
        "mf_test_session_state",
        "MetricFlowTestSessionState",
        "query_parser",
        "MetricFlowQueryParser",
        "pytest",
        "raises",
        "InvalidQueryException",
        "e",
        "query_parser",
        "parse_and_validate_query",
        "metric_names",
        "group_by_names",
        "assert_object_snapshot_equal",
        "request",
        "request",
        "mf_test_session_state",
        "mf_test_session_state",
        "obj_id",
        "obj",
        "e",
        "value",
        "request",
        "FixtureRequest",
        "mf_test_session_state",
        "MetricFlowTestSessionState",
        "query_parser",
        "MetricFlowQueryParser",
        "pytest",
        "raises",
        "InvalidQueryException",
        "e",
        "query_parser",
        "parse_and_validate_query",
        "metric_names",
        "group_by_names",
        "METRIC_TIME_ELEMENT_NAME",
        "assert_object_snapshot_equal",
        "request",
        "request",
        "mf_test_session_state",
        "mf_test_session_state",
        "obj_id",
        "obj",
        "e",
        "value",
        "request",
        "FixtureRequest",
        "mf_test_session_state",
        "MetricFlowTestSessionState",
        "query_parser",
        "MetricFlowQueryParser",
        "pytest",
        "raises",
        "InvalidQueryException",
        "e",
        "query_parser",
        "parse_and_validate_query",
        "metric_names",
        "group_by_names",
        "assert_object_snapshot_equal",
        "request",
        "request",
        "mf_test_session_state",
        "mf_test_session_state",
        "obj_id",
        "obj",
        "e",
        "value",
        "request",
        "FixtureRequest",
        "mf_test_session_state",
        "MetricFlowTestSessionState",
        "simple_semantic_manifest",
        "PydanticSemanticManifest",
        "modify_manifest",
        "semantic_manifest",
        "simple_semantic_manifest",
        "transform_rule",
        "ModifyMetricFilterTransform",
        "metric_reference",
        "MetricReference",
        "element_name",
        "where_filter_intersection",
        "PydanticWhereFilterIntersection",
        "where_filters",
        "PydanticWhereFilter",
        "where_sql_template",
        "SemanticManifestLookup",
        "modified_manifest",
        "DunderColumnAssociationResolver",
        "modified_manifest",
        "MetricFlowQueryParser",
        "column_association_resolver",
        "column_association_resolver",
        "model",
        "semantic_manifest_lookup",
        "pytest",
        "raises",
        "InvalidQueryException",
        "e",
        "query_parser",
        "parse_and_validate_query",
        "metric_names",
        "group_by_names",
        "METRIC_TIME_ELEMENT_NAME",
        "assert_object_snapshot_equal",
        "request",
        "request",
        "mf_test_session_state",
        "mf_test_session_state",
        "obj_id",
        "obj",
        "e",
        "value",
        "request",
        "FixtureRequest",
        "mf_test_session_state",
        "MetricFlowTestSessionState",
        "simple_semantic_manifest",
        "PydanticSemanticManifest",
        "modify_manifest",
        "semantic_manifest",
        "simple_semantic_manifest",
        "transform_rule",
        "ModifyMetricFilterTransform",
        "metric_reference",
        "MetricReference",
        "element_name",
        "where_filter_intersection",
        "PydanticWhereFilterIntersection",
        "where_filters",
        "PydanticWhereFilter",
        "where_sql_template",
        "where_sql_template",
        "modify_manifest",
        "semantic_manifest",
        "modified_manifest",
        "transform_rule",
        "ModifyMetricFilterTransform",
        "metric_reference",
        "MetricReference",
        "element_name",
        "where_filter_intersection",
        "PydanticWhereFilterIntersection",
        "where_filters",
        "PydanticWhereFilter",
        "where_sql_template",
        "where_sql_template",
        "SemanticManifestLookup",
        "modified_manifest",
        "DunderColumnAssociationResolver",
        "modified_manifest",
        "MetricFlowQueryParser",
        "column_association_resolver",
        "column_association_resolver",
        "model",
        "semantic_manifest_lookup",
        "pytest",
        "raises",
        "InvalidQueryException",
        "e",
        "query_parser",
        "parse_and_validate_query",
        "metric_names",
        "group_by_names",
        "METRIC_TIME_ELEMENT_NAME",
        "assert_object_snapshot_equal",
        "request",
        "request",
        "mf_test_session_state",
        "mf_test_session_state",
        "obj_id",
        "obj",
        "e",
        "value"
    ],
    "literals": [
        "\"bookings\"",
        "\"booking__instant\"",
        "\"result_0\"",
        "\"booking\"",
        "\"result_0\"",
        "\"bookings\"",
        "\"listings\"",
        "\"booking__ds\"",
        "\"result_0\"",
        "\"listings\"",
        "\"{{ TimeDimension('listing__paid_at') }} > '2020-01-01'\"",
        "\"listings\"",
        "\"result_0\"",
        "\"{{ TimeDimension('booking__paid_at') }} > '2020-01-01'\"",
        "\"listings\"",
        "\"bookings\"",
        "\"bookings\"",
        "\"listings\"",
        "\"result_0\""
    ],
    "variables": [
        "logger",
        "modified_manifest",
        "semantic_manifest_lookup",
        "column_association_resolver",
        "query_parser",
        "where_sql_template",
        "modified_manifest",
        "modified_manifest",
        "semantic_manifest_lookup",
        "column_association_resolver",
        "query_parser"
    ],
    "comments": [
        "noqa: D",
        "noqa: D",
        "noqa: D",
        "noqa: D"
    ],
    "docstrings": [
        "\"\"\"Tests that the suggestions for invalid items in filters are specific to the metric.\"\"\""
    ],
    "functions": [
        "test_suggestions_for_group_by_item",
        "test_suggestions_for_metric",
        "test_suggestions_for_multiple_metrics",
        "test_suggestions_for_defined_where_filter",
        "test_suggestions_for_defined_filters_in_multi_metric_query"
    ],
    "classes": []
}