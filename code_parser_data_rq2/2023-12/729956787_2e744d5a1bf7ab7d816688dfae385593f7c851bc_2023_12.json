{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "express",
        "app",
        "cors",
        "app",
        "bodyParser",
        "app",
        "bodyParser",
        "path",
        "__dirname",
        "sqlite3",
        "dbPath",
        "app",
        "req",
        "res",
        "req",
        "nom",
        "prenom",
        "adresse",
        "codePostal",
        "ville",
        "telephone",
        "email",
        "mdp",
        "db",
        "sql",
        "values",
        "err",
        "err",
        "err",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "email",
        "mdp",
        "db",
        "sql",
        "values",
        "err",
        "row",
        "err",
        "err",
        "res",
        "row",
        "jwt",
        "res",
        "res",
        "app",
        "port",
        "port"
    ],
    "literals": [
        "'express'",
        "'cors'",
        "'jsonwebtoken'",
        "'sqlite3'",
        "'body-parser'",
        "'path'",
        "'donnees.db'",
        "'/inscription'",
        "'INSERT INTO utilisateurs (nom, prenom, adresse, code_postal, ville, telephone, email, mdp) VALUES (?, ?, ?, ?, ?, ?, ?, ?)'",
        "'Erreur lors de l\\'inscription :'",
        "'Erreur lors de l\\'inscription'",
        "'Utilisateur inscrit avec succès.'",
        "'/connexion'",
        "'SELECT * FROM utilisateurs WHERE email = ? AND mdp = ?'",
        "'Erreur lors de la vérification des informations de connexion :'",
        "'Erreur interne du serveur'",
        "'votre_clé_secrète'",
        "'1h'",
        "'Informations de connexion incorrectes'",
        "Serveur backend en écoute sur le port ${port}"
    ],
    "variables": [
        "express",
        "cors",
        "jwt",
        "sqlite3",
        "bodyParser",
        "path",
        "app",
        "port",
        "dbPath",
        "db",
        "sql",
        "values",
        "sql",
        "values",
        "token"
    ],
    "comments": [
        "Middleware pour parser le corps des requêtes",
        "Chemin vers la base de données SQLite",
        "Route pour gérer l'inscription",
        "Logique de hachage du mot de passe ici",
        "Utiliser une requête préparée pour insérer les données dans la base de données",
        "Route pour la connexion",
        "Utiliser une requête préparée pour vérifier les informations de connexion dans la base de données",
        "Créez un jeton JWT",
        "Utilisateur trouvé, connexion réussie",
        "Aucun utilisateur trouvé avec les informations fournies",
        "Démarrer le serveur"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}