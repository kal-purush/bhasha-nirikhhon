{
    "identifiers": [
        "typing",
        "Optional",
        "torch",
        "transformers",
        "PretrainedConfig",
        "vllm",
        "model_executor",
        "layers",
        "linear",
        "LinearMethodBase",
        "vllm",
        "model_executor",
        "models",
        "llama",
        "LlamaForCausalLM",
        "vllm",
        "model_executor",
        "weight_utils",
        "default_weight_loader",
        "hf_model_weights_iterator",
        "LlamaForCausalLM",
        "config",
        "Optional",
        "PretrainedConfig",
        "linear_method",
        "Optional",
        "LinearMethodBase",
        "max",
        "config",
        "num_key_value_heads_per_layer",
        "delattr",
        "config",
        "config",
        "config",
        "linear_method",
        "linear_method",
        "model_name_or_path",
        "cache_dir",
        "Optional",
        "load_format",
        "revision",
        "Optional",
        "named_parameters",
        "name",
        "loaded_weight",
        "hf_model_weights_iterator",
        "model_name_or_path",
        "cache_dir",
        "load_format",
        "revision",
        "name",
        "name",
        "name",
        "_degroup_weight",
        "loaded_weight",
        "param_name",
        "weight_name",
        "shard_id",
        "stacked_params_mapping",
        "weight_name",
        "name",
        "name",
        "replace",
        "weight_name",
        "param_name",
        "name",
        "endswith",
        "name",
        "params_dict",
        "params_dict",
        "name",
        "param",
        "weight_loader",
        "weight_loader",
        "param",
        "loaded_weight",
        "shard_id",
        "name",
        "endswith",
        "name",
        "params_dict",
        "params_dict",
        "name",
        "getattr",
        "param",
        "default_weight_loader",
        "weight_loader",
        "param",
        "loaded_weight",
        "loaded_weight",
        "torch",
        "Tensor",
        "torch",
        "Tensor",
        "config",
        "hidden_size",
        "config",
        "hidden_size",
        "config",
        "num_attention_heads",
        "config",
        "num_key_value_heads",
        "loaded_weight",
        "shape",
        "head_size",
        "target_num_kv_heads",
        "num_kv_heads",
        "n_repeats",
        "n_repeats",
        "n_repeats",
        "loaded_weight",
        "view",
        "num_kv_heads",
        "head_size",
        "hidden_size",
        "torch",
        "repeat_interleave",
        "loaded_weight",
        "repeats",
        "n_repeats",
        "dim",
        "loaded_weight",
        "reshape",
        "target_num_kv_heads",
        "head_size",
        "hidden_size",
        "loaded_weight"
    ],
    "literals": [
        "\"num_key_value_heads_per_layer\"",
        "\"auto\"",
        "\"qkv_proj\"",
        "\"q_proj\"",
        "\"q\"",
        "\"qkv_proj\"",
        "\"k_proj\"",
        "\"k\"",
        "\"qkv_proj\"",
        "\"v_proj\"",
        "\"v\"",
        "\"gate_up_proj\"",
        "\"gate_proj\"",
        "\"gate_up_proj\"",
        "\"up_proj\"",
        "\"rotary_emb.inv_freq\"",
        "\"k_proj\"",
        "\"v_proj\"",
        "\".bias\"",
        "\".bias\"",
        "\"weight_loader\""
    ],
    "variables": [
        "config",
        "num_key_value_heads",
        "stacked_params_mapping",
        "params_dict",
        "loaded_weight",
        "name",
        "param",
        "weight_loader",
        "param",
        "weight_loader",
        "hidden_size",
        "head_size",
        "target_num_kv_heads",
        "num_kv_heads",
        "n_repeats",
        "n_repeats",
        "loaded_weight",
        "loaded_weight",
        "loaded_weight"
    ],
    "comments": [
        "coding=utf-8",
        "Adapted from",
        "https://github.com/huggingface/transformers/blob/v4.28.0/src/transformers/models/llama/modeling_llama.py",
        "Copyright 2023 DeciAI Research Team. All rights reserved.",
        "Copyright 2023 The vLLM team.",
        "Copyright 2022 EleutherAI and the HuggingFace Inc. team. All rights reserved.",
        "",
        "This code is based on MistralAI GPT-NeoX library and the GPT-NeoX",
        "and OPT implementations in this library. It has been modified from its",
        "original forms to accommodate minor architectural differences compared",
        "to GPT-NeoX and OPT used by the Meta AI team that trained the model.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "(param_name, shard_name, shard_id)",
        "Skip loading extra bias for GPTQ models.",
        "Skip loading extra bias for GPTQ models."
    ],
    "docstrings": [
        "\"\"\"Inference-only DeciLM model compatible with HuggingFace weights.\"\"\"",
        "\"\"\"\n    Implementation for https://huggingface.co/Deci/DeciLM-7b-instruct.\n    Based on the llama executor.\n\n    The main difference is that DeciLM uses Variable Grouped Query Attention.\n    The constant number of GQA heads in the decoder is overriden with a value\n    per layer.\n\n    Usually, in the HuggingFace implementation, instead of\n    \"config.num_key_value_heads\", we use\n    \"config.num_key_value_heads_per_layer[i]\" which varies.\n\n    Currently, PagedAttention does not work well with variable GQA, so we\n    normalize the weights upon loading, and use uniform GQA with the max value\n    instead.\n    \"\"\""
    ],
    "functions": [
        "load_weights",
        "_degroup_weight"
    ],
    "classes": [
        "DeciLMForCausalLM"
    ]
}