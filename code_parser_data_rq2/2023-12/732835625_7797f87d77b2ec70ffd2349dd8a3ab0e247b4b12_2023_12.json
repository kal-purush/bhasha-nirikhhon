{
    "identifiers": [
        "openai",
        "openai",
        "OpenAI",
        "PyQt5",
        "QtWidgets",
        "QApplication",
        "model",
        "api_key",
        "message_input",
        "progressBar",
        "OpenAI",
        "base_url",
        "api_key",
        "api_key",
        "client",
        "chat",
        "completions",
        "create",
        "model",
        "model",
        "messages",
        "message_input",
        "stream",
        "progressBar",
        "setValue",
        "process",
        "chunk",
        "stream",
        "chunk",
        "choices",
        "delta",
        "content",
        "result",
        "chunk",
        "choices",
        "delta",
        "content",
        "counter",
        "counter",
        "process",
        "process",
        "progressBar",
        "setValue",
        "process",
        "result",
        "result",
        "model",
        "api_key",
        "message_input_list",
        "textBrowser",
        "progressBar",
        "OpenAI",
        "base_url",
        "api_key",
        "api_key",
        "progressBar",
        "setValue",
        "len",
        "message_input_list",
        "current_process",
        "num_content",
        "i",
        "num_content",
        "message_input_list",
        "i",
        "split",
        "parts",
        "message_input",
        "client",
        "chat",
        "completions",
        "create",
        "model",
        "model",
        "messages",
        "message_input",
        "stream",
        "chunk",
        "stream",
        "chunk",
        "choices",
        "delta",
        "content",
        "result",
        "chunk",
        "choices",
        "delta",
        "content",
        "result",
        "i",
        "result",
        "naming_list",
        "append",
        "result",
        "textBrowser",
        "append",
        "result",
        "current_process",
        "step_process",
        "progressBar",
        "setValue",
        "current_process",
        "QApplication",
        "processEvents",
        "naming_list"
    ],
    "literals": [
        "\"https://oneapi.xty.app/v1\"",
        "\"role\"",
        "\"system\"",
        "\"content\"",
        "\"精炼下面的回答，要求在不改变语义的情况下精简句子\"",
        "\"role\"",
        "\"user\"",
        "\"content\"",
        "\"请将下面这段描述缩写至10个token，并且以XX图的形式表达: 这张图中有一只小猫在吃食物，旁边趴着一只小兔子\"",
        "\"role\"",
        "\"assistant\"",
        "\"content\"",
        "\"图: 小猫吃食物,小兔趴在旁边\"",
        "\"role\"",
        "\"user\"",
        "\"content\"",
        "''",
        "''",
        "'GPT模型提取失败, 请检查网络后重新尝试'",
        "\"https://oneapi.xty.app/v1\"",
        "\": \"",
        "\"role\"",
        "\"system\"",
        "\"content\"",
        "\"精炼下面的回答，要求在不改变语义的情况下精简句子，不要出现图字\"",
        "\"role\"",
        "\"user\"",
        "\"content\"",
        "\"请将下面这段描述缩写至5个token: 烟台红富士苹果，脆甜多汁，香甜可口\"",
        "\"role\"",
        "\"assistant\"",
        "\"content\"",
        "\"烟台红富士苹果脆甜可口\"",
        "\"role\"",
        "\"user\"",
        "\"content\"",
        "\"将下面的句子缩写至5个token :\"",
        "''",
        "''",
        "'GPT模型提取失败, 请检查网络后重新尝试'",
        "'图'",
        "': '"
    ],
    "variables": [
        "client",
        "stream",
        "process",
        "result",
        "counter",
        "result",
        "counter",
        "process",
        "result",
        "client",
        "num_content",
        "naming_list",
        "current_process",
        "step_process",
        "parts",
        "message_input",
        "stream",
        "result",
        "result",
        "result",
        "result",
        "current_process"
    ],
    "comments": [
        "更新处理进度",
        "当前待处理的文本数量",
        "用来存储所有的命名结果",
        "当前处理进度",
        "处理一个文本的进展幅度",
        "要\": \"后面的字符",
        "显示最新处理结果并更新进度条",
        "imgs",
        "tf = ''",
        "model_name = \"gpt-3.5-turbo\"",
        "api_key = \"sk-yIjuHjfVC2v4Of88050b6a4404444d9eAdD507DfC1Dd382d\"",
        "message_input = \"将下面的句子缩写至5个token :\" + \"这张图中有一只小猫在吃食物，旁边趴着一只小兔子\"",
        "naming_txt = gpt_for_txt(model=model_name, api_key=api_key, message_input=message_input,progressBar=tf)",
        "print(naming_txt)"
    ],
    "docstrings": [
        "'''\n    使用chatgpt实现对单张图像进行命名, 用于一次性调用\n    注: 因为chagpt的回答方式是流处理，所用函数中涉及的进度显示是一种伪进度。\n       具体的参数设置需要根据stream中的大致循环测试自己设定，不具备实际参考价值\n    :param model:  所用的chatgpt模型的具体型号\n    :param api_key:     API密钥\n    :param message_input:    用户提问信息, 一般是待处理的图像提取内容\n    :param progressBar:      处理进度控件\n    :return:\n    '''",
        "'''\n    使用chatgpt实现对单张图像进行命名, 用于一次性调用\n    注: 因为chagpt的回答方式是流处理，所用函数中涉及的进度显示是一种伪进度。\n       具体的参数设置需要根据stream中的大致循环测试自己设定，不具备实际参考价值\n    :param model:  所用的chatgpt模型的具体型号\n    :param api_key:     API密钥\n    :param message_input_list:    用户提问信息, 一般是待处理的图像提取内容\n    :param textBrowser:      富文本框控件，用来时刻显示当前处理结果\n    :param progressBar:      处理进度控件\n    :return:\n    '''"
    ],
    "functions": [
        "gpt_for_txt_SingleProcess",
        "gpt_for_txt_BatchProcess"
    ],
    "classes": []
}