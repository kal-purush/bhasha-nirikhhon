{
    "identifiers": [
        "org",
        "eclipse",
        "xtext",
        "ide",
        "tests",
        "server",
        "org",
        "eclipse",
        "lsp4j",
        "ClientCapabilities",
        "org",
        "eclipse",
        "lsp4j",
        "DocumentSymbolCapabilities",
        "org",
        "eclipse",
        "lsp4j",
        "InitializeParams",
        "org",
        "eclipse",
        "lsp4j",
        "TextDocumentClientCapabilities",
        "org",
        "eclipse",
        "xtend2",
        "lib",
        "StringConcatenation",
        "org",
        "eclipse",
        "xtext",
        "ide",
        "tests",
        "server",
        "AbstractTestLangLanguageServerTest",
        "org",
        "eclipse",
        "xtext",
        "testing",
        "DocumentSymbolConfiguraiton",
        "org",
        "eclipse",
        "xtext",
        "xbase",
        "lib",
        "ObjectExtensions",
        "org",
        "eclipse",
        "xtext",
        "xbase",
        "lib",
        "Procedures",
        "Procedure1",
        "org",
        "junit",
        "Test",
        "SuppressWarnings",
        "INITIALIZER",
        "it",
        "_clientCapabilities",
        "_function",
        "it_1",
        "_textDocumentClientCapabilities",
        "_function_1",
        "it_2",
        "_documentSymbolCapabilities",
        "_function_2",
        "it_3",
        "it_3",
        "setHierarchicalDocumentSymbolSupport",
        "valueOf",
        "_doubleArrow",
        "ObjectExtensions",
        "operator_doubleArrow",
        "_documentSymbolCapabilities",
        "_function_2",
        "it_2",
        "setDocumentSymbol",
        "_doubleArrow",
        "_doubleArrow",
        "ObjectExtensions",
        "operator_doubleArrow",
        "_textDocumentClientCapabilities",
        "_function_1",
        "it_1",
        "setTextDocument",
        "_doubleArrow",
        "_doubleArrow",
        "ObjectExtensions",
        "operator_doubleArrow",
        "_clientCapabilities",
        "_function",
        "it",
        "setCapabilities",
        "_doubleArrow",
        "Test",
        "_function",
        "it",
        "it",
        "setInitializer",
        "HierarchicalDocumentSymbolTest",
        "INITIALIZER",
        "_builder",
        "_builder",
        "append",
        "_builder",
        "newLine",
        "_builder",
        "append",
        "_builder",
        "append",
        "_builder",
        "newLine",
        "_builder",
        "append",
        "_builder",
        "newLine",
        "_builder",
        "append",
        "_builder",
        "newLine",
        "_builder",
        "append",
        "_builder",
        "append",
        "_builder",
        "newLine",
        "_builder",
        "append",
        "_builder",
        "newLine",
        "it",
        "setModel",
        "_builder",
        "toString",
        "_builder_1",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "_builder_1",
        "append",
        "_builder_1",
        "newLine",
        "it",
        "setExpectedSymbols",
        "_builder_1",
        "toString",
        "testDocumentSymbol",
        "_function"
    ],
    "literals": [
        "\"all\"",
        "\"type Foo {\"",
        "\"\\t\"",
        "\"int bar\"",
        "\"}\"",
        "\"type Bar {\"",
        "\"\\t\"",
        "\"Foo foo\"",
        "\"}\"",
        "\"symbol \\\"Foo\\\" {\"",
        "\"    \"",
        "\"kind: 7\"",
        "\"    \"",
        "\"range: [[0, 5] .. [0, 8]]\"",
        "\"    \"",
        "\"selectionRange: [[0, 0] .. [2, 1]]\"",
        "\"    \"",
        "\"details: \"",
        "\"    \"",
        "\"deprecated: false\"",
        "\"    \"",
        "\"children: [\"",
        "\"        \"",
        "\"symbol \\\"Foo.bar\\\" {\"",
        "\"            \"",
        "\"kind: 7\"",
        "\"            \"",
        "\"range: [[1, 5] .. [1, 8]]\"",
        "\"            \"",
        "\"selectionRange: [[1, 1] .. [1, 8]]\"",
        "\"            \"",
        "\"details: \"",
        "\"            \"",
        "\"deprecated: false\"",
        "\"            \"",
        "\"children: [\"",
        "\"                \"",
        "\"symbol \\\"Foo.bar.int\\\" {\"",
        "\"                    \"",
        "\"kind: 7\"",
        "\"                    \"",
        "\"range: [[1, 1] .. [1, 4]]\"",
        "\"                    \"",
        "\"selectionRange: [[1, 1] .. [1, 4]]\"",
        "\"                    \"",
        "\"details: \"",
        "\"                    \"",
        "\"deprecated: false\"",
        "\"                \"",
        "\"}\"",
        "\"            \"",
        "\"]\"",
        "\"        \"",
        "\"}\"",
        "\"    \"",
        "\"]\"",
        "\"}\"",
        "\"symbol \\\"Bar\\\" {\"",
        "\"    \"",
        "\"kind: 7\"",
        "\"    \"",
        "\"range: [[3, 5] .. [3, 8]]\"",
        "\"    \"",
        "\"selectionRange: [[3, 0] .. [5, 1]]\"",
        "\"    \"",
        "\"details: \"",
        "\"    \"",
        "\"deprecated: false\"",
        "\"    \"",
        "\"children: [\"",
        "\"        \"",
        "\"symbol \\\"Bar.foo\\\" {\"",
        "\"            \"",
        "\"kind: 7\"",
        "\"            \"",
        "\"range: [[4, 5] .. [4, 8]]\"",
        "\"            \"",
        "\"selectionRange: [[4, 1] .. [4, 8]]\"",
        "\"            \"",
        "\"details: \"",
        "\"            \"",
        "\"deprecated: false\"",
        "\"        \"",
        "\"}\"",
        "\"    \"",
        "\"]\"",
        "\"}\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright (c) 2018 TypeFox and others.\n * All rights reserved. This program and the accompanying materials\n * are made available under the terms of the Eclipse Public License v1.0\n * which accompanies this distribution, and is available at\n * http://www.eclipse.org/legal/epl-v10.html"
    ],
    "functions": [
        "testDocumentSymbol_01"
    ],
    "classes": [
        "HierarchicalDocumentSymbolTest"
    ]
}