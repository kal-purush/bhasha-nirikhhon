{
    "identifiers": [
        "require",
        "require",
        "n",
        "isNaN",
        "parseFloat",
        "n",
        "isFinite",
        "n",
        "app",
        "req",
        "res",
        "app",
        "req",
        "nearby",
        "err",
        "errors",
        "nearby",
        "position",
        "position",
        "isNumeric",
        "position",
        "isNumeric",
        "position",
        "err",
        "errors",
        "nearby",
        "sequelize",
        "nearestPositionsQuery",
        "positions",
        "results",
        "sequelizeError",
        "err",
        "sequelizeError",
        "positions",
        "_",
        "positions",
        "p",
        "p",
        "positions",
        "_",
        "positions",
        "p",
        "p",
        "p",
        "positions",
        "_",
        "positions",
        "p",
        "p",
        "positionIds",
        "sequelize",
        "observationsQuery",
        "results",
        "observations",
        "o",
        "positions",
        "o",
        "positions",
        "o",
        "positions",
        "o",
        "o",
        "_",
        "positions",
        "p",
        "p",
        "p",
        "p",
        "_",
        "p",
        "d",
        "d",
        "d",
        "feature",
        "p",
        "geojson",
        "feature",
        "sequelizeError",
        "err",
        "res",
        "err",
        "res",
        "err",
        "err",
        "res",
        "geojson"
    ],
    "literals": [
        "\"lodash\"",
        "\"@feathersjs/errors\"",
        "\"/observations\"",
        "\"sequelizeClient\"",
        "\"FeatureCollection\"",
        "'Missing \"nearby\" parameter.'",
        "\",\"",
        "'Invalid \"nearby\" parameter, should be a pair of decimal values separated with comma (x,y).'",
        "SELECT *\n      FROM positions\n      ORDER BY geometry <-> st_setsrid(st_makepoint(${nearby}),4326)\n      LIMIT 1;",
        "SELECT \"positionId\", year, month, day, rade9\n      FROM observations\n      WHERE \"positionId\" = ANY(ARRAY['${positionIds.join(\"','\")}']) limit 50;",
        "\"','\"",
        "\"Feature\"",
        "\"Internal error.\""
    ],
    "variables": [
        "_",
        "errors",
        "app",
        "sequelize",
        "err",
        "geojson",
        "position",
        "nearestPositionsQuery",
        "positions",
        "results",
        "positionIds",
        "observationsQuery",
        "results",
        "observations",
        "feature"
    ],
    "comments": [
        "Validate \"nearby\" parameter",
        "Get positions",
        "console.log(p",
        "Get positions ids for observations query",
        "Add \"data\" property",
        "Transform positions array to object",
        "Prepare query",
        "Query observations",
        "Add observations to respective position",
        "Format positions as GeoJSON features",
        "Remove duplicated geometry",
        "Remove duplicated field",
        "Copy properties",
        "Add feature"
    ],
    "docstrings": [],
    "functions": [
        "isNumeric"
    ],
    "classes": []
}