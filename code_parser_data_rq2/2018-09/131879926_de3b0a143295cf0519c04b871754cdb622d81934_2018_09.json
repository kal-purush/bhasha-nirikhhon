{
    "identifiers": [
        "Reflection",
        "KSP",
        "IO",
        "KERBALISM",
        "GameParameters",
        "CustomParameterNode",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "asPercentage",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "asPercentage",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "GameMode",
        "GameParameters",
        "GameMode",
        "ANY",
        "instance",
        "HighLogic",
        "CurrentGame",
        "instance",
        "HighLogic",
        "CurrentGame",
        "Parameters",
        "CustomParams",
        "PreferencesBasic",
        "instance",
        "ConfigNode",
        "node",
        "OnLoad",
        "node",
        "instance",
        "GameParameters",
        "CustomParameterNode",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomParameterUI",
        "toolTip",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "GameMode",
        "GameParameters",
        "GameMode",
        "ANY",
        "instance",
        "HighLogic",
        "CurrentGame",
        "instance",
        "HighLogic",
        "CurrentGame",
        "Parameters",
        "CustomParams",
        "PreferencesMessages",
        "instance",
        "ConfigNode",
        "node",
        "OnLoad",
        "node",
        "instance",
        "GameParameters",
        "CustomParameterNode",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "GameMode",
        "GameParameters",
        "GameMode",
        "ANY",
        "instance",
        "HighLogic",
        "CurrentGame",
        "instance",
        "HighLogic",
        "CurrentGame",
        "Parameters",
        "CustomParams",
        "PreferencesLifeSupport",
        "instance",
        "ConfigNode",
        "node",
        "OnLoad",
        "node",
        "instance",
        "GameParameters",
        "CustomParameterNode",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "GameMode",
        "GameParameters",
        "GameMode",
        "ANY",
        "instance",
        "HighLogic",
        "CurrentGame",
        "instance",
        "HighLogic",
        "CurrentGame",
        "Parameters",
        "CustomParams",
        "PreferencesComfort",
        "instance",
        "ConfigNode",
        "node",
        "OnLoad",
        "node",
        "instance",
        "GameParameters",
        "CustomParameterNode",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "CustomIntParameterUI",
        "minValue",
        "maxValue",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "asPercentage",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "asPercentage",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "GameParameters",
        "CustomFloatParameterUI",
        "minValue",
        "maxValue",
        "displayFormat",
        "toolTip",
        "stormMinDays",
        "Lib",
        "HoursInDay",
        "stormMaxDays",
        "Lib",
        "HoursInDay",
        "stormDurationHours",
        "externRadiation",
        "stormRadiation",
        "stormEjectionSpeedC",
        "GameParameters",
        "GameMode",
        "GameParameters",
        "GameMode",
        "ANY",
        "instance",
        "HighLogic",
        "CurrentGame",
        "instance",
        "HighLogic",
        "CurrentGame",
        "Parameters",
        "CustomParams",
        "PreferencesStorm",
        "instance",
        "ConfigNode",
        "node",
        "OnLoad",
        "node",
        "instance"
    ],
    "literals": [
        "\"Transmit Science Immediately\"",
        "\"Automatically transmit science if possible\"",
        "\"Highlight Malfunctions\"",
        "\"Highlight faild parts in flight\"",
        "\"Breakdown Reputation Penalty\"",
        "\"Reputation removed when a Kerbal looses his marbles in space\"",
        "\"Death Reputation Penalty\"",
        "\"Reputation removed when a Kerbal dies\"",
        "\"Incentive Redundancy\"",
        "\"Each malfunction will increase the MTBF\\nof components in the same redundancy group\"",
        "\"Critical Failure Rate\"",
        "\"F2\"",
        "\"Proportion of malfunctions that lead to critical failures\"",
        "\"Fixable Failure Rate\"",
        "\"F2\"",
        "\"Proportion of malfunctions that can be fixed remotely\"",
        "\"Kerbalism\"",
        "\"Kerbalism\"",
        "\"Common\"",
        "\"Electrical Charge\"",
        "\"Show a message when EC level is low\\n(Preset, can be changed per vessel)\"",
        "\"Supplies\"",
        "\"Show a message when supply resources level is low\\n(Preset, can be changed per vessel)\"",
        "\"Signal\"",
        "\"Show a message when signal is lost or obtained\\n(Preset, can be changed per vessel)\"",
        "\"Failures\"",
        "\"Show a message when a components fail\\n(Preset, can be changed per vessel)\"",
        "\"Space Weather\"",
        "\"Show a message for CME events\\n(Preset, can be changed per vessel)\"",
        "\"Scripts\"",
        "\"Show a message when scripts are executed\\n(Preset, can be changed per vessel)\"",
        "\"Stock Messages\"",
        "\"Use the stock message system instead of our own\"",
        "\"Message Duration\"",
        "\"Duration of messages on screen in seconds\"",
        "\"Kerbalism\"",
        "\"Kerbalism\"",
        "\"Notifications\"",
        "\"Survival Temperature\"",
        "\"Ideal living temperature\"",
        "\"Survival Temperature Range\"",
        "\"Sweet spot around survival temperature\"",
        "\"Kerbalism (Advanced)\"",
        "\"Kerbalism (Advanced)\"",
        "\"Life Support\"",
        "\"Ideal Living Space\"",
        "\"Ideal living space per-capita in m^3\"",
        "\"Firm Ground Factor\"",
        "\"F2\"",
        "\"Having something to walk on\"",
        "\"Exercise Factor\"",
        "\"F2\"",
        "\"Having a treadmill\"",
        "\"Social Factor\"",
        "\"F2\"",
        "\"Having more than one crew on a vessel\"",
        "\"Call Home Factor\"",
        "\"F2\"",
        "\"Having a way to communicate with Kerbin\"",
        "\"Panorama Factor\"",
        "\"F2\"",
        "\"Comfort factor for having a panorama window\"",
        "\"Kerbalism (Advanced)\"",
        "\"Kerbalism (Advanced)\"",
        "\"Comfort\"",
        "\"Min Days Between Storms\"",
        "\"Minimum days between storms over a system\"",
        "\"Max Days Between Storms\"",
        "\"Maximum days between storms over a system\"",
        "\"Storm Duration Hours\"",
        "\"Average duration of a storm in hours\"",
        "\"Storm Ejection Speed\"",
        "\"F2\"",
        "\"CME speed as percentage of C\"",
        "\"Shielding Efficiency\"",
        "\"F2\"",
        "\"Proportion of radiation blocked by shielding (at max amount)\"",
        "\"Storm Radiation rad/h\"",
        "\"F2\"",
        "\"Radiation during a solar storm\"",
        "\"External Radiation rad/h\"",
        "\"F2\"",
        "\"Radiation outside the heliopause\"",
        "\"Kerbalism (Advanced)\"",
        "\"Kerbalism (Advanced)\"",
        "\"Storms & Radiation\""
    ],
    "variables": [
        "transmitScience",
        "highlights",
        "breakdownPenalty",
        "deathPenalty",
        "incentiveRedundancy",
        "criticalChance",
        "safeModeChance",
        "GameMode",
        "HasPresets",
        "DisplaySection",
        "Section",
        "SectionOrder",
        "Title",
        "PreferencesBasic",
        "instance",
        "PreferencesBasic",
        "Instance",
        "ec",
        "supply",
        "signal",
        "malfunction",
        "storm",
        "script",
        "stockMessages",
        "messageLength",
        "GameMode",
        "HasPresets",
        "DisplaySection",
        "Section",
        "SectionOrder",
        "Title",
        "PreferencesMessages",
        "instance",
        "PreferencesMessages",
        "Instance",
        "survivalTemperature",
        "survivalRange",
        "GameMode",
        "HasPresets",
        "DisplaySection",
        "Section",
        "SectionOrder",
        "Title",
        "PreferencesLifeSupport",
        "instance",
        "PreferencesLifeSupport",
        "Instance",
        "livingSpace",
        "firmGround",
        "exercise",
        "notAlone",
        "callHome",
        "panorama",
        "GameMode",
        "HasPresets",
        "DisplaySection",
        "Section",
        "SectionOrder",
        "Title",
        "PreferencesComfort",
        "instance",
        "PreferencesComfort",
        "Instance",
        "stormMinDays",
        "stormMaxDays",
        "stormDurationHours",
        "stormEjectionSpeedC",
        "shieldingEfficiency",
        "stormRadiation",
        "externRadiation",
        "StormMinTime",
        "StormMaxTime",
        "StormDuration",
        "ExternRadiation",
        "StormRadiation",
        "StormEjectionSpeed",
        "GameMode",
        "HasPresets",
        "DisplaySection",
        "Section",
        "SectionOrder",
        "Title",
        "PreferencesStorm",
        "instance",
        "PreferencesStorm",
        "Instance"
    ],
    "comments": [
        "I really want this in the gui... but have to look at how this can be done in Science.cs\n\t\t[GameParameters.CustomParameterUI(\"Stock Science Dialog\", toolTip = \"Keep showing the stock science dialog\")]\n\t\tpublic bool scienceDialog = true;",
        "// pressure\n\t\tpublic static double PressureThreshold;                 // level of atmosphere resource that determine pressurized status\n\n\t\t// poisoning\n\t\tpublic static double PoisoningFactor;                   // poisoning modifier value for vessels below threshold\n\t\tpublic static double PoisoningThreshold;                // level of waste atmosphere resource that determine co2 poisoning status\n\n\t\t// humidity\n\t\tpublic static double HumidityFactor;                    // moisture modifier value for vessels below the threshold\n\t\tpublic static double HumidityThreshold;                 // level of moist atmosphere resource that determine high humidity status\n\n\n\t\t// pressure\n\t\t\tPressureFactor = Lib.ConfigValue(cfg, \"PressureFactor\", 10.0);\n\t\t\tPressureThreshold = Lib.ConfigValue(cfg, \"PressureThreshold\", 0.9);\n\n\t\t\t// poisoning\n\t\t\tPoisoningFactor = Lib.ConfigValue(cfg, \"PoisoningFactor\", 0.0);\n\t\t\tPoisoningThreshold = Lib.ConfigValue(cfg, \"PoisoningThreshold\", 0.02);\n\n\t\t\t// humidity\n\t\t\tHumidityFactor = Lib.ConfigValue(cfg, \"HumidityFactor\", 1.0);\n\t\t\tHumidityThreshold = Lib.ConfigValue(cfg, \"HumidityThreshold\", 0.95);"
    ],
    "docstrings": [],
    "functions": [
        "OnLoad",
        "OnLoad",
        "OnLoad",
        "OnLoad",
        "OnLoad"
    ],
    "classes": [
        "PreferencesBasic",
        "PreferencesMessages",
        "PreferencesLifeSupport",
        "PreferencesComfort",
        "PreferencesStorm"
    ]
}