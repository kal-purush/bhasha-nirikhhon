{
    "identifiers": [
        "de",
        "mpc",
        "pia",
        "modeller",
        "report",
        "org",
        "junit",
        "Assert",
        "java",
        "io",
        "File",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "de",
        "mpc",
        "pia",
        "modeller",
        "PIAModeller",
        "de",
        "mpc",
        "pia",
        "modeller",
        "protein",
        "ReportProtein",
        "de",
        "mpc",
        "pia",
        "modeller",
        "protein",
        "inference",
        "SpectrumExtractorInference",
        "de",
        "mpc",
        "pia",
        "modeller",
        "protein",
        "scoring",
        "AbstractScoring",
        "de",
        "mpc",
        "pia",
        "modeller",
        "protein",
        "scoring",
        "MultiplicativeScoring",
        "de",
        "mpc",
        "pia",
        "modeller",
        "protein",
        "scoring",
        "settings",
        "PSMForScoring",
        "de",
        "mpc",
        "pia",
        "modeller",
        "report",
        "impl",
        "PSMScoreFilter",
        "de",
        "mpc",
        "pia",
        "modeller",
        "score",
        "ScoreModelEnum",
        "de",
        "mpc",
        "pia",
        "modeller",
        "score",
        "FDRData",
        "DecoyStrategy",
        "piaModeller",
        "Before",
        "piaFile",
        "getResource",
        "getPath",
        "piaModeller",
        "piaFile",
        "getAbsolutePath",
        "piaModeller",
        "setCreatePSMSets",
        "assertEquals",
        "piaModeller",
        "getCreatePSMSets",
        "piaModeller",
        "getPSMModeller",
        "setAllDecoyPattern",
        "piaModeller",
        "getPSMModeller",
        "setAllTopIdentifications",
        "piaModeller",
        "getPSMModeller",
        "calculateAllFDR",
        "piaModeller",
        "getPSMModeller",
        "calculateCombinedFDRScore",
        "piaModeller",
        "setConsiderModifications",
        "seInference",
        "seInference",
        "addFilter",
        "FilterComparator",
        "less_equal",
        "ScoreModelEnum",
        "PSM_LEVEL_FDR_SCORE",
        "getShortName",
        "seInference",
        "setScoring",
        "seInference",
        "getScoring",
        "setSetting",
        "AbstractScoring",
        "SCORING_SETTING_ID",
        "ScoreModelEnum",
        "PSM_LEVEL_FDR_SCORE",
        "getShortName",
        "seInference",
        "getScoring",
        "setSetting",
        "AbstractScoring",
        "SCORING_SPECTRA_SETTING_ID",
        "PSMForScoring",
        "ONLY_BEST",
        "getShortName",
        "piaModeller",
        "getProteinModeller",
        "infereProteins",
        "seInference",
        "piaModeller",
        "getProteinModeller",
        "updateFDRData",
        "DecoyStrategy",
        "ACCESSIONPATTERN",
        "piaModeller",
        "getProteinModeller",
        "updateDecoyStates",
        "piaModeller",
        "getProteinModeller",
        "calculateFDR",
        "Test",
        "filters",
        "filters",
        "add",
        "RegisteredFilters",
        "PROTEIN_Q_VALUE_FILTER",
        "newInstanceOf",
        "FilterComparator",
        "less_equal",
        "proteinList",
        "piaModeller",
        "getProteinModeller",
        "getFilteredReportProteins",
        "assertEquals",
        "proteinList",
        "size",
        "proteinList",
        "piaModeller",
        "getProteinModeller",
        "getFilteredReportProteins",
        "filters",
        "assertEquals",
        "proteinList",
        "size"
    ],
    "literals": [
        "\"/55merge_mascot_tandem.pia.xml\"",
        "\"createPSMSets should be true\"",
        "\"Rnd.*\"",
        "\"Rnd.*\""
    ],
    "variables": [],
    "comments": [
        "load the PIA XML file",
        "PSM level settings",
        "protein level"
    ],
    "docstrings": [
        "* test cases for protein level filters\n * @author julian\n *"
    ],
    "functions": [
        "setUp",
        "testQValueFilter"
    ],
    "classes": [
        "ProteinFiltersTest"
    ]
}