{
    "identifiers": [
        "os",
        "subprocess",
        "pytest",
        "tests",
        "conftest",
        "IMPORT_DIR",
        "TEST_NAME",
        "MINERS",
        "MINER_FUN",
        "MINER_ARGS",
        "EXP",
        "ChDir",
        "assert_events",
        "tests",
        "filters",
        "match_event_with_field",
        "os",
        "path",
        "abspath",
        "format",
        "IMPORT_DIR",
        "format",
        "USER_TREE_PATH",
        "format",
        "USER_TREE_PATH",
        "USER_TREE_PATH",
        "path",
        "command",
        "ChDir",
        "path",
        "subprocess",
        "check_call",
        "command",
        "path",
        "TEST_FILE",
        "file_operation",
        "path",
        "command",
        "path",
        "TEST_DIR",
        "file_operation",
        "path",
        "command",
        "path",
        "os",
        "path",
        "join",
        "TEST_DIR",
        "TEST_FILE",
        "TEST_FILE",
        "new_path",
        "file_operation",
        "path",
        "command",
        "path",
        "TEST_DIR",
        "file_operation",
        "path",
        "command",
        "TEST_NAME",
        "TRIGGER",
        "create_file",
        "MINERS",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "TEST_NAME",
        "TRIGGER",
        "create_folder",
        "MINERS",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "TEST_NAME",
        "TRIGGER",
        "move_file",
        "MINERS",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "TEST_NAME",
        "TRIGGER",
        "delete_folder",
        "MINERS",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "MINER_FUN",
        "match_event_with_field",
        "MINER_ARGS",
        "EXP",
        "pytest",
        "mark",
        "parametrize",
        "TEST_DATA",
        "test_data",
        "base_setup",
        "setup_method",
        "listener_setup",
        "file_sync_setup",
        "listener_setup",
        "base_setup",
        "file_sync_setup",
        "test_data",
        "TRIGGER",
        "master_dir",
        "assert_events",
        "event_queue",
        "log_writer",
        "test_data",
        "TEST_NAME",
        "miners",
        "test_data",
        "MINERS"
    ],
    "literals": [
        "'Examples/FileSync'",
        "'Examples/FileSync/FileSync.xml'",
        "'{}/FileSync'",
        "'{}/Master'",
        "'{}/Slave'",
        "'bar.txt'",
        "'my_dir'",
        "'trigger'",
        "'touch'",
        "'mkdir'",
        "'mv'",
        "'rm'",
        "'-rf'",
        "'test_create'",
        "'notify'",
        "'Put'",
        "'consume'",
        "'Put'",
        "'test_create_folder'",
        "'notify'",
        "'Put'",
        "'consume'",
        "'Put'",
        "'test_move_file'",
        "'notify'",
        "'Move'",
        "'consume'",
        "'Move'",
        "'test_delete'",
        "'notify'",
        "'Delete'",
        "'consume'",
        "'Delete'",
        "'test_data'"
    ],
    "variables": [
        "PATH_TO_MIX_DIR",
        "FILE_PATHS",
        "USER_TREE_PATH",
        "MASTER_SERVICE",
        "SLAVE_SERVICE",
        "LISTEN_TARGET",
        "TEST_FILE",
        "TEST_DIR",
        "TRIGGER",
        "command",
        "command",
        "new_path",
        "command",
        "command",
        "TEST_DATA",
        "event_queue",
        "log_writer",
        "master_dir",
        "_slave_dir"
    ],
    "comments": [
        "Path to one or more SPARKL mixes your test needs.",
        "The setup method uses the path(s) to import your configuration(s).",
        "The setup method assumes you run the tests from the root folder.",
        "E.g. FILE_PATHS = ['Examples/PrimesExpr/Primes_expr.xml']",
        "The SPARKL path to the tested mix.",
        "SPARKL resource targeted by the `sparkl listen` command."
    ],
    "docstrings": [
        "\"\"\"\nAuthor <miklos@sparkl.com> Miklos Duma\nCopyright 2018 SPARKL Limited\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\nTests for FileSync demo.\n\"\"\"",
        "\"\"\"\n    Calls each set of data in TEST_DATA. The function also uses:\n        - setup_method:\n            A basic setup method that imports the needed configuration(s)\n            and yields the SPARKL alias used in the session.\n    \"\"\""
    ],
    "functions": [
        "file_operation",
        "create_file",
        "create_folder",
        "move_file",
        "delete_folder",
        "test_file_sync"
    ],
    "classes": []
}