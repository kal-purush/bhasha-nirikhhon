{
    "identifiers": [
        "Text",
        "Security",
        "Cryptography",
        "IO",
        "Steganography",
        "Encoding",
        "ASCII",
        "GetBytes",
        "plainText",
        "sharedSecret",
        "IsNullOrEmpty",
        "plainText",
        "ArgumentNullException",
        "IsNullOrEmpty",
        "sharedSecret",
        "ArgumentNullException",
        "Rfc2898DeriveBytes",
        "sharedSecret",
        "_salt",
        "aesAlg",
        "RijndaelManaged",
        "aesAlg",
        "Key",
        "key",
        "GetBytes",
        "aesAlg",
        "KeySize",
        "aesAlg",
        "CreateEncryptor",
        "aesAlg",
        "Key",
        "aesAlg",
        "IV",
        "MemoryStream",
        "msEncrypt",
        "Write",
        "BitConverter",
        "GetBytes",
        "aesAlg",
        "IV",
        "Length",
        "msEncrypt",
        "Write",
        "aesAlg",
        "IV",
        "aesAlg",
        "IV",
        "Length",
        "CryptoStream",
        "msEncrypt",
        "encryptor",
        "CryptoStreamMode",
        "Write",
        "StreamWriter",
        "csEncrypt",
        "swEncrypt",
        "Write",
        "plainText",
        "outStr",
        "Convert",
        "ToBase64String",
        "msEncrypt",
        "ToArray",
        "aesAlg",
        "aesAlg",
        "Clear",
        "outStr",
        "cipherText",
        "sharedSecret",
        "IsNullOrEmpty",
        "cipherText",
        "ArgumentNullException",
        "IsNullOrEmpty",
        "sharedSecret",
        "ArgumentNullException",
        "Rfc2898DeriveBytes",
        "sharedSecret",
        "_salt",
        "Convert",
        "FromBase64String",
        "cipherText",
        "MemoryStream",
        "aesAlg",
        "RijndaelManaged",
        "aesAlg",
        "Key",
        "key",
        "GetBytes",
        "aesAlg",
        "KeySize",
        "aesAlg",
        "IV",
        "ReadByteArray",
        "msDecrypt",
        "aesAlg",
        "CreateDecryptor",
        "aesAlg",
        "Key",
        "aesAlg",
        "IV",
        "CryptoStream",
        "msDecrypt",
        "decryptor",
        "CryptoStreamMode",
        "Read",
        "StreamReader",
        "csDecrypt",
        "plaintext",
        "srDecrypt",
        "ReadToEnd",
        "aesAlg",
        "aesAlg",
        "Clear",
        "plaintext",
        "Stream",
        "s",
        "s",
        "Read",
        "rawLength",
        "rawLength",
        "Length",
        "rawLength",
        "Length",
        "SystemException",
        "BitConverter",
        "ToInt32",
        "rawLength",
        "s",
        "Read",
        "buffer",
        "buffer",
        "Length",
        "buffer",
        "Length",
        "SystemException",
        "buffer"
    ],
    "literals": [
        "\"jasdh7834y8hfeur73rsharks214\"",
        "\"plainText\"",
        "\"sharedSecret\"",
        "\"cipherText\"",
        "\"sharedSecret\"",
        "\"Stream did not contain properly formatted byte array\"",
        "\"Did not read byte array properly\""
    ],
    "variables": [
        "_salt",
        "outStr",
        "RijndaelManaged",
        "aesAlg",
        "Rfc2898DeriveBytes",
        "key",
        "ICryptoTransform",
        "encryptor",
        "MemoryStream",
        "msEncrypt",
        "CryptoStream",
        "csEncrypt",
        "StreamWriter",
        "swEncrypt",
        "RijndaelManaged",
        "aesAlg",
        "plaintext",
        "Rfc2898DeriveBytes",
        "key",
        "MemoryStream",
        "msDecrypt",
        "ICryptoTransform",
        "decryptor",
        "CryptoStream",
        "csDecrypt",
        "StreamReader",
        "srDecrypt",
        "rawLength",
        "buffer"
    ],
    "comments": [
        "resource:",
        "https://github.com/Digiex/MCLauncher.NET/blob/master/MCLauncher.net/Crypto.cs",
        "Encrypt the given string using AES.  The string can be decrypted using",
        "DecryptStringAES().  The sharedSecret parameters must match.",
        "</summary>",
        "<param name=\"plainText\">The text to encrypt.</param>",
        "<param name=\"sharedSecret\">A password used to generate a key for encryption.</param>",
        "Encrypted string to return",
        "RijndaelManaged object used to encrypt the data.",
        "generate the key from the shared secret and the salt",
        "Create a RijndaelManaged object",
        "Create a decryptor to perform the stream transform.",
        "Create the streams used for encryption.",
        "prepend the IV",
        "Write all data to the stream.",
        "Clear the RijndaelManaged object.",
        "Return the encrypted bytes from the memory stream.",
        "Decrypt the given string.  Assumes the string was encrypted using",
        "EncryptStringAES(), using an identical sharedSecret.",
        "</summary>",
        "<param name=\"cipherText\">The text to decrypt.</param>",
        "<param name=\"sharedSecret\">A password used to generate a key for decryption.</param>",
        "Declare the RijndaelManaged object",
        "used to decrypt the data.",
        "Declare the string used to hold",
        "the decrypted text.",
        "generate the key from the shared secret and the salt",
        "Create the streams used for decryption.",
        "Create a RijndaelManaged object",
        "with the specified key and IV.",
        "Get the initialization vector from the encrypted stream",
        "Create a decrytor to perform the stream transform.",
        "Read the decrypted bytes from the decrypting stream",
        "and place them in a string.",
        "Clear the RijndaelManaged object."
    ],
    "docstrings": [
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "EncryptStringAES",
        "DecryptStringAES",
        "ReadByteArray"
    ],
    "classes": [
        "Crypto"
    ]
}