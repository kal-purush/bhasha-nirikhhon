{
    "identifiers": [
        "actionlib",
        "cPickle",
        "os",
        "rosbag",
        "rospy",
        "yaml",
        "collections",
        "defaultdict",
        "hlpr_record_demonstration",
        "playback_plan_object",
        "PlaybackPlanObject",
        "hlpr_manipulation_utils",
        "manipulator",
        "hlpr_manipulation_utils",
        "arm_moveit",
        "hlpr_record_demonstration",
        "msg",
        "PlaybackKeyframeDemoAction",
        "PlaybackKeyframeDemoGoal",
        "PlaybackKeyframeDemoResult",
        "PlaybackKeyframeDemoFeedback",
        "geometry_msgs",
        "msg",
        "Pose",
        "moveit_msgs",
        "msg",
        "DisplayTrajectory",
        "vector_msgs",
        "msg",
        "GripperStat",
        "actionlib",
        "SimpleActionServer",
        "PlaybackKeyframeDemoAction",
        "execute_cb",
        "do_playback_keyframe_demo",
        "auto_start",
        "server",
        "start",
        "ArmMoveIt",
        "Manipulator",
        "Gripper",
        "prefix",
        "rospy",
        "get_param",
        "rospy",
        "get_param",
        "rospy",
        "get_param",
        "rospy",
        "get_param",
        "rospy",
        "Subscriber",
        "gripper_status_topic",
        "GripperStat",
        "_gripper_update",
        "queue_size",
        "arm_planner",
        "group",
        "get_active_joints",
        "rospy",
        "Publisher",
        "moveit_msgs",
        "msg",
        "DisplayTrajectory",
        "queue_size",
        "PlaybackKeyframeDemoResult",
        "msg",
        "msg",
        "position",
        "goal",
        "rospy",
        "loginfo",
        "os",
        "path",
        "expanduser",
        "goal",
        "bag_file_name",
        "rospy",
        "loginfo",
        "filename",
        "os",
        "path",
        "isfile",
        "filename",
        "filename",
        "filename",
        "server",
        "set_aborted",
        "result",
        "error_msg",
        "rospy",
        "logerr",
        "error_msg",
        "filename",
        "endswith",
        "_process_bag",
        "filename",
        "goal",
        "target_topic",
        "join",
        "os",
        "path",
        "splitext",
        "playback_file",
        "rospy",
        "loginfo",
        "pkl_name",
        "_save_pkl",
        "pkl_name",
        "data_store",
        "filename",
        "endswith",
        "_load_pkl",
        "filename",
        "_visualize_plan",
        "data_store",
        "_execute_plan",
        "data_store",
        "result",
        "plan",
        "server",
        "set_succeeded",
        "result",
        "complete_msg",
        "rospy",
        "loginfo",
        "complete_msg",
        "filename",
        "target_topic",
        "rosbag",
        "Bag",
        "filename",
        "bag",
        "get_message_count",
        "KEYFRAME_THRESHOLD",
        "bag",
        "get_message_count",
        "server",
        "set_aborted",
        "result",
        "error_msg",
        "rospy",
        "logerr",
        "error_msg",
        "yaml",
        "load",
        "bag",
        "_get_yaml_info",
        "x",
        "x",
        "bag_info",
        "total_keyframes",
        "len",
        "total_keyframes",
        "server",
        "set_aborted",
        "result",
        "error_msg",
        "rospy",
        "logerr",
        "error_msg",
        "total_keyframes",
        "bag",
        "get_type_and_topic_info",
        "topics",
        "keys",
        "x",
        "x",
        "bag_info",
        "x",
        "GRIPPER_MSG_TYPE",
        "len",
        "gripper_topic",
        "rospy",
        "loginfo",
        "len",
        "gripper_topic",
        "rospy",
        "logwarn",
        "join",
        "gripper_topic",
        "rospy",
        "logwarn",
        "gripper_topic",
        "gripper_topic",
        "defaultdict",
        "topic",
        "msg",
        "t",
        "bag",
        "read_messages",
        "topic",
        "msg_store",
        "msg_store",
        "topic",
        "append",
        "msg",
        "t",
        "bag",
        "get_type_and_topic_info",
        "topics",
        "target_topic",
        "msg_type",
        "target_type",
        "msg_store",
        "PLAN_OBJ_KEY",
        "i",
        "xrange",
        "total_keyframes",
        "PlaybackPlanObject",
        "plan_obj",
        "set_keyframe",
        "i",
        "msg_store",
        "target_topic",
        "i",
        "joint_flag",
        "_get_arm_joint_values",
        "data",
        "Pose",
        "data",
        "position",
        "data",
        "orientation",
        "plan_obj",
        "set_target_val",
        "target",
        "plan_obj",
        "set_target_time",
        "data",
        "plan_obj",
        "set_joint_flag",
        "joint_flag",
        "len",
        "gripper_topic",
        "plan_obj",
        "set_gripper_val",
        "msg_store",
        "gripper_topic",
        "i",
        "data_store",
        "PLAN_OBJ_KEY",
        "append",
        "plan_obj",
        "arm_planner",
        "plan_targetInputWaypoint",
        "x",
        "target",
        "x",
        "data_store",
        "PLAN_OBJ_KEY",
        "joint_flag",
        "merged",
        "plans",
        "server",
        "set_aborted",
        "result",
        "no_plan_msg",
        "plans",
        "i",
        "xrange",
        "total_keyframes",
        "data_store",
        "PLAN_OBJ_KEY",
        "i",
        "plans",
        "i",
        "data_store",
        "data_store",
        "_merge_plans",
        "data_store",
        "DisplayTrajectory",
        "arm_planner",
        "robot",
        "get_current_state",
        "display_trajectory",
        "trajectory",
        "append",
        "plan",
        "display_trajectory_publisher",
        "publish",
        "display_trajectory",
        "plan",
        "plans",
        "plans",
        "len",
        "plans",
        "plans",
        "plans",
        "plan",
        "plans",
        "_merge_points",
        "points",
        "plan",
        "joint_trajectory",
        "points",
        "merged_plan",
        "joint_trajectory",
        "points",
        "merged_plan",
        "points",
        "new_points",
        "len",
        "points",
        "new_points",
        "points",
        "points",
        "time_from_start",
        "rospy",
        "Duration",
        "new_points",
        "pop",
        "point",
        "new_points",
        "point",
        "time_from_start",
        "last_point_time",
        "all_points",
        "point",
        "all_points",
        "msg",
        "joint_name",
        "_arm_joints",
        "msg",
        "name",
        "index",
        "joint_name",
        "msg",
        "position",
        "idx",
        "joint_values",
        "data_store",
        "server",
        "is_preempt_requested",
        "data_store",
        "PLAN_OBJ_KEY",
        "plan_obj",
        "plan_segments",
        "_send_plan",
        "plan_obj",
        "plan",
        "_execute_gripper",
        "plan_obj",
        "result",
        "_merge_plans",
        "data_store",
        "server",
        "set_preempted",
        "result",
        "preempt_msg",
        "rospy",
        "logwarn",
        "preempt_msg",
        "plan",
        "keyframe_count",
        "plan",
        "len",
        "plan",
        "joint_trajectory",
        "points",
        "rospy",
        "loginfo",
        "keyframe_count",
        "FollowJointTrajectoryGoal",
        "plan",
        "joint_trajectory",
        "manipulator",
        "arm",
        "smooth_joint_trajectory_client",
        "send_goal",
        "traj_goal",
        "manipulator",
        "arm",
        "smooth_joint_trajectory_client",
        "wait_for_result",
        "manipulator",
        "arm",
        "smooth_joint_trajectory_client",
        "get_result",
        "stored_obj",
        "stored_obj",
        "gripper_val",
        "position",
        "abs",
        "pos",
        "gripper_pos",
        "GRIPPER_THRESHOLD",
        "gripper",
        "set_pos",
        "pos",
        "rospy",
        "sleep",
        "GRIPPER_SLEEP_TIME",
        "path_name",
        "data",
        "cPickle",
        "dump",
        "data",
        "open",
        "path_name",
        "cPickle",
        "HIGHEST_PROTOCOL",
        "path_name",
        "open",
        "path_name",
        "file_path",
        "cPickle",
        "load",
        "file_path",
        "loaded_file",
        "rospy",
        "init_node",
        "PlaybackKFDemoAction",
        "rospy",
        "spin"
    ],
    "literals": [
        "'playback_objects'",
        "'playback_keyframe_demo'",
        "'right'",
        "\"~keyframe_threshold\"",
        "\"~gripper_msg_type\"",
        "'vector_msgs/GripperStat'",
        "'~pre_plan'",
        "'~gripper_topic'",
        "'/vector/right_gripper/stat'",
        "'/move_group/display_planned_path'",
        "\"Received playback demo goal\"",
        "\"Receieved file: %s\"",
        "\"Playback file given does not exist: %s\"",
        "'.bag'",
        "'.'",
        "'pkl'",
        "\"Saving pkl file: %s\"",
        "'.pkl'",
        "\"Visualized plan successfully\"",
        "\"Executed plan successfully\"",
        "\"Playback Keyframe Demo aborted due to too many frames: %d\"",
        "'messages'",
        "'topics'",
        "\"Provided bag file does not have aligned keyframes. Exiting\"",
        "'topic'",
        "'topics'",
        "'type'",
        "\"No gripper topics detected - will not include gripper\"",
        "'More than one gripper topic: %s'",
        "', '",
        "'Will only use values from topic: %s'",
        "'sensor_msgs/JointState'",
        "'msgs'",
        "\"Failed to generate a plan\"",
        "'full_plan'",
        "'full_plan'",
        "'full_plan'",
        "\"Playback keyframe demo preempted\"",
        "\"Error: no plan found\"",
        "\"Executing Keyframe: %d\"",
        "\"w\"",
        "\"r\"",
        "'__main__'",
        "'playback_keyframe_demo_action_server'"
    ],
    "variables": [
        "PLAN_OBJ_KEY",
        "server",
        "arm_planner",
        "manipulator",
        "gripper",
        "KEYFRAME_THRESHOLD",
        "GRIPPER_MSG_TYPE",
        "_pre_plan",
        "gripper_status_topic",
        "GRIPPER_THRESHOLD",
        "GRIPPER_SLEEP_TIME",
        "_arm_joints",
        "display_trajectory_publisher",
        "playback_file",
        "result",
        "gripper_pos",
        "filename",
        "playback_file",
        "error_msg",
        "data_store",
        "pkl_name",
        "data_store",
        "plan",
        "complete_msg",
        "plan",
        "complete_msg",
        "planned_trajectory",
        "bag",
        "error_msg",
        "bag_info",
        "total_keyframes",
        "total_keyframes",
        "error_msg",
        "total_keyframes",
        "topics",
        "gripper_topic",
        "gripper_topic",
        "data_store",
        "msg_store",
        "msg_store",
        "topic",
        "target_type",
        "joint_flag",
        "joint_flag",
        "data_store",
        "data_store",
        "plan_obj",
        "data",
        "target",
        "target",
        "plans",
        "no_plan_msg",
        "data_store",
        "plan_obj",
        "plan_obj",
        "plan",
        "plan",
        "display_trajectory",
        "display_trajectory",
        "trajectory_start",
        "merged_plan",
        "points",
        "points",
        "points",
        "all_points",
        "last_point_time",
        "point",
        "time_from_start",
        "all_points",
        "joint_values",
        "idx",
        "joint_values",
        "joint_name",
        "plan_segments",
        "result",
        "preempt_msg",
        "traj_goal",
        "traj_goal",
        "trajectory",
        "pos",
        "loaded_file"
    ],
    "comments": [
        "! /usr/bin/env python",
        "Copyright (c) 2016, Diligent Droids",
        "All rights reserved.",
        "",
        "Redistribution and use in source and binary forms, with or without",
        "modification, are permitted provided that the following conditions are met:",
        "",
        "list of conditions and the following disclaimer.",
        "",
        "this list of conditions and the following disclaimer in the documentation",
        "and/or other materials provided with the distribution.",
        "",
        "contributors may be used to endorse or promote products derived from",
        "this software without specific prior written permission.",
        "",
        "THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"",
        "AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE",
        "IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE",
        "DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE",
        "FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL",
        "DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR",
        "SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER",
        "CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,",
        "OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE",
        "OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "Author: Andrea Thomaz, athomaz@diligentdroids.com",
        "Complete refactor 11/10/2016: Vivian Chu, vchu@diligentdroids.com",
        "Setup the actionlib server",
        "Start the server",
        "Load the drivers for the arm and gripper",
        "Load some thresholds",
        "Subscribe to the current gripper status",
        "Setup some gripper values during playback",
        "1cm threshold for moving",
        "NOTE: not tuned",
        "Get joints for the arm from the arm group that we want to plan with",
        "Display the trajectory publisher",
        "Store the playback file",
        "Setup the internal result",
        "Main function that is called everytime playback is called",
        "Pull out the file that we'll be working with and check if valid",
        "Check what kind of file we've received (bag vs. pkl)",
        "Process the bag file",
        "Save the created plan in a pkl file in the same directory",
        "Check if the file exists",
        "if os.path.isfile(pkl_name):",
        "err_msg = \"Error: existing pkl file exists: %s\" % pkl_name",
        "self.server.set_aborted(self.result, error_msg)",
        "rospy.logerr(error_msg)",
        "return",
        "Save the file",
        "Check if we're playing the file",
        "if goal.vis_only:",
        "Return success if we've gotten to this point",
        "Open the bag file",
        "Check if number of keyframes - sanity check if accidentally given trajectory",
        "Pull out information about the bagfile",
        "Pull out the number of messages per topic",
        "Check if keyframes are aligned",
        "Pull out the gripper topic",
        "We assume there is one - warn otherwise",
        "Store the messages",
        "Read the messages - cycle through and store in dictionary",
        "Check what kind of target type (joints vs. EEF)",
        "Create keyframe objects",
        "Pull out the expected topics",
        "Set the keyframe number",
        "Convert target into Pose or just joint dictionary",
        "Store away values",
        "If gripper topic exists - set",
        "Check if we were able to create valid plan segments",
        "Plan with objects - even if not pre_plan, we test if the given keyframes will work",
        "Pull out the plan from the data",
        "Returns None or empty as well",
        "Start merging",
        "Check if this is the first set",
        "Pull out the last time from current points",
        "Remove the first point of the new_points trajectory",
        "Cycle through the active joints and populate",
        "a dictionary for those values",
        "Find that joint name in msg",
        "Populate the joint message in a dictionary",
        "Pull out the plan segments",
        "TODO: Check for error during playback",
        "Finished",
        "If we were told to stop in the middle of execution",
        "Check if we have a valid plan",
        "Let gripper open/close",
        "Load pickle file"
    ],
    "docstrings": [
        "* Redistributions of source code must retain the above copyright notice, this",
        "* Redistributions in binary form must reproduce the above copyright notice,",
        "* Neither the name of hlpr_kinesthetic_teaching nor the names of its",
        "'''Heavy lifting process that actually converts bag files to plans'''",
        "''' Merge an array of plans into a single plan'''",
        "'''Merge two sets of points and taking into account time'''",
        "'''\n        Simple helper that writes data to pkl file\n\n        Input: data \n               path_name - location to and the filename of data\n        '''",
        "'''\n        Simple helper function that loads a pickle file given a path to it\n\n        input: path to pkl file\n        output: loaded pickle file\n\n        '''"
    ],
    "functions": [
        "_gripper_update",
        "do_playback_keyframe_demo",
        "_process_bag",
        "_visualize_plan",
        "_merge_plans",
        "_merge_points",
        "_get_arm_joint_values",
        "_execute_plan",
        "_send_plan",
        "_execute_gripper",
        "_save_pkl",
        "_load_pkl"
    ],
    "classes": [
        "PlaybackKFDemoAction"
    ]
}