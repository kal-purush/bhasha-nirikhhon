{
    "identifiers": [
        "Crypto",
        "Protocol",
        "KDF",
        "PBKDF2",
        "Crypto",
        "PublicKey",
        "RSA",
        "sys",
        "os",
        "chmod",
        "sys",
        "argv",
        "PBKDF2",
        "password",
        "salt",
        "count",
        "n",
        "my_rand",
        "counter",
        "PBKDF2",
        "master_key",
        "my_rand",
        "counter",
        "dkLen",
        "n",
        "count",
        "RSA",
        "generate",
        "randfunc",
        "my_rand",
        "e",
        "key",
        "publickey",
        "pubkey",
        "exportKey",
        "open",
        "content_file",
        "chmod",
        "content_file",
        "write",
        "key",
        "exportKey",
        "open",
        "content_file",
        "content_file",
        "write",
        "pubkey",
        "exportKey"
    ],
    "literals": [
        "\"VeryInsecure-sshkeygen\"",
        "\"my_rand:%s\"",
        "\"your public key:\\n%s\"",
        "'OpenSSH'",
        "\"insecure_rsa\"",
        "'w'",
        "\"insecure_rsa\"",
        "'PEM'",
        "\"insecure_rsa.pub\"",
        "'w'",
        "'OpenSSH'"
    ],
    "variables": [
        "password",
        "salt",
        "master_key",
        "my_rand",
        "counter",
        "key",
        "pubkey"
    ],
    "comments": [
        "!/usr/bin/env python",
        "by xychix[at]hotmail.com 4 Nov 2016",
        "",
        "replace with random salt if you can store one",
        "bigger count = better"
    ],
    "docstrings": [
        "\"\"\"\nThis script wil generate an ssh key from a password. This way you can use key's on\nnon-persistent machines. However I've seen different keys from the same password.\nMake sure you run this atleast once on a persistent (offline) machine to save the \nkeys for emergency recovery.\n\n\"\"\""
    ],
    "functions": [
        "my_rand"
    ],
    "classes": []
}