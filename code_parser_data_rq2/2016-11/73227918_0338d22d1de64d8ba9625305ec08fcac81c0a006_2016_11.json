{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "fs",
        "CREDENTIALS_FILENAME",
        "error",
        "CREDENTIALS_FILENAME",
        "process",
        "require",
        "CREDENTIALS_FILENAME",
        "gulp",
        "gulp",
        "done",
        "CREDENTIALS",
        "process",
        "CREDENTIALS",
        "process",
        "CREDENTIALS",
        "CREDENTIALS",
        "CREDENTIALS",
        "https",
        "options",
        "response",
        "response",
        "data",
        "data",
        "waitForJobStatus",
        "result",
        "err",
        "data",
        "err",
        "done",
        "downloadPlayCanvasPackage",
        "data",
        "err",
        "done",
        "request",
        "bodyData",
        "request",
        "jobId",
        "cb",
        "attemptJobStatus",
        "jobId",
        "cb",
        "attemptCounter",
        "jobId",
        "cb",
        "attemptCounter",
        "MAXIMUM_ATTEMPT_COUNTER",
        "cb",
        "queryJobStatus",
        "jobId",
        "err",
        "data",
        "err",
        "cb",
        "err",
        "data",
        "setTimeout",
        "attemptJobStatus",
        "attemptCounter",
        "jobId",
        "cb",
        "PLAYCANVAS_ATTEMPT_DELAY",
        "cb",
        "data",
        "cb",
        "path",
        "cb",
        "url",
        "path",
        "parsedUrl",
        "parsedUrl",
        "fs",
        "CREDENTIALS",
        "https",
        "options",
        "response",
        "response",
        "data",
        "dataLength",
        "data",
        "file",
        "data",
        "response",
        "file",
        "cb",
        "request",
        "jobId",
        "cb",
        "jobId",
        "CREDENTIALS",
        "https",
        "options",
        "response",
        "response",
        "data",
        "data",
        "parsedData",
        "cb",
        "parsedData",
        "cb",
        "parsedData",
        "response",
        "cb",
        "request"
    ],
    "literals": [
        "'fs'",
        "'url'",
        "'gulp'",
        "'https'",
        "'./.credentials.json'",
        "'Unable to find credentials file \\''",
        "'\\'.'",
        "'default'",
        "'download:app'",
        "'download:app'",
        "'No PlayCanvas access token available for download operation.'",
        "'No PlayCanvas project name to store file.'",
        "'playcanvas.com'",
        "'/api/apps/download'",
        "'POST'",
        "'Content-Type'",
        "'application/json'",
        "'Authorization'",
        "'Bearer '",
        "'data'",
        "'error'",
        "'running'",
        "'complete'",
        "'error'",
        "'error'",
        "'GET'",
        "'./'",
        "'data'",
        "'end'",
        "'playcanvas.com'",
        "'/api/jobs/'",
        "'GET'",
        "'Authorization'",
        "'Bearer '",
        "'data'",
        "'error'",
        "'error'"
    ],
    "variables": [
        "fs",
        "url",
        "gulp",
        "https",
        "CREDENTIALS_FILENAME",
        "MAXIMUM_ATTEMPT_COUNTER",
        "PLAYCANVAS_ATTEMPT_DELAY",
        "CREDENTIALS",
        "bodyData",
        "options",
        "request",
        "result",
        "waitForJobStatus",
        "attemptJobStatus",
        "downloadPlayCanvasPackage",
        "parsedUrl",
        "options",
        "file",
        "dataLength",
        "request",
        "queryJobStatus",
        "options",
        "request",
        "parsedData"
    ],
    "comments": [
        "Maximum number of times we will poll the PlayCanvas server before giving up.",
        "Time (in milliseconds) before we poll the PlayCanvas server",
        "This code just verifies there is actually a credentials file for us to use.",
        "You must create your own, please see README.md for instructions on how to fill one out.",
        "Error occurred",
        "Wait for timeout, try again",
        "Terminate"
    ],
    "docstrings": [
        "* The default task causes the file to be downloaded from PlayCanvas.",
        "* This task asks the PlayCanvas server to build a .zip file package for our project.\n * Once the server has produced the package it then downloads the file to the local folder.",
        "* This function polls the PlayCanvas server for the status of a job, the supplied\n * callback is invoked when the jobs status has switched to the 'complete' state.\n * @param {number} jobId - Identifier of the job to be checked.\n * @param {function} cb - Callback to be invoked when the job has completed or an error occurs.",
        "* Performs a check for the status of a job running on the PlayCanvas servers. This method should not\n * be called directly, instead please use the waitForJobStatus method.\n * @param {number} attemptCounter - Index of the current poll attempt.\n * @param {number} jobId - Identifier of the job to be checked.\n * @param {function} cb - Callback to be invoked when the job has completed or an error occurs.",
        "* Downloads a PlayCanvas application package from the specified URL path.\n * @param {string} path - Web path where the package is located.\n * @param {function} cb - Callback to be invoked when the download has completed.",
        "* Polls PlayCanvas for the status of a specific job.\n * @param {Number} jobId - Identifier of the job to be polled.\n * @param {function} cb - Callback to invoked when the operation has completed."
    ],
    "functions": [],
    "classes": []
}