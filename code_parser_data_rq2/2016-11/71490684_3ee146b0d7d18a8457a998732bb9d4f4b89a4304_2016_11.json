{
    "identifiers": [
        "Client",
        "Server",
        "IGBClientMessage",
        "IGBServerMessage",
        "IServiceHandle",
        "IGRPCTree",
        "buildTree",
        "MockServer",
        "require",
        "buildTree",
        "grpc",
        "mockProtoDefs",
        "describe",
        "beforeEach",
        "done",
        "grpcServer",
        "grpc",
        "mockServer",
        "MockServer",
        "grpcServer",
        "mockProto",
        "mockServer",
        "grpcServer",
        "grpc",
        "grpcServer",
        "gbClient",
        "Client",
        "mockProtoDefs",
        "msg",
        "gbServer",
        "msg",
        "gbServer",
        "Server",
        "mockProtoDefs",
        "msg",
        "gbClient",
        "msg",
        "require",
        "gbTree",
        "gbClient",
        "gbTree",
        "svcPromise",
        "svc",
        "gbClientService",
        "svc",
        "done",
        "done",
        "afterEach",
        "gbClientService",
        "grpcServer",
        "mockServer",
        "grpcServer",
        "gbClient",
        "gbServer",
        "it",
        "done",
        "mockServer",
        "call",
        "callMade",
        "call",
        "gbClientService",
        "err",
        "res",
        "done",
        "err",
        "callMade",
        "it",
        "done",
        "mockServer",
        "call",
        "callMade",
        "call",
        "gbClientService",
        "err",
        "res",
        "done",
        "err",
        "callMade",
        "call",
        "call",
        "it",
        "done",
        "mockServer",
        "call",
        "callMade",
        "call",
        "gbClientService",
        "call",
        "data",
        "expect",
        "data",
        "dataReceived",
        "call",
        "done",
        "call",
        "callMade",
        "done",
        "dataReceived",
        "done",
        "done",
        "call",
        "call",
        "it",
        "done",
        "mockServer",
        "call",
        "callMade",
        "call",
        "gbClientService",
        "call",
        "data",
        "expect",
        "data",
        "dataReceived",
        "call",
        "done",
        "call",
        "callMade",
        "done",
        "dataReceived",
        "done",
        "done"
    ],
    "literals": [
        "'./index'",
        "'./mock'",
        "'grpc'",
        "''",
        "'e2e'",
        "'0.0.0.0:50053'",
        "'grpc'",
        "'mock'",
        "'Greeter'",
        "'localhost:50053'",
        "'should make a non-streaming call properly'",
        "string",
        "'sayHello'",
        "'sayHello'",
        "'kappa'",
        "'Call was not made correctly.'",
        "'should make a client-side streaming call properly'",
        "string",
        "'sayHelloClientStream'",
        "'sayHelloClientStream'",
        "'Call was not made correctly.'",
        "'FailFish'",
        "'should make a bidirectional streaming call properly'",
        "string",
        "'sayHelloBidiStream'",
        "'sayHelloBidiStream'",
        "'data'",
        "'FailFish'",
        "'error'",
        "'end'",
        "'Call was not made properly.'",
        "'Data was not received properly.'",
        "'FailFish'",
        "'should make a server-side streaming call properly'",
        "string",
        "'sayHelloServerStream'",
        "'sayHelloServerStream'",
        "'FailFish'",
        "'data'",
        "'Hello'",
        "'error'",
        "'end'",
        "'Call was not made properly.'",
        "'Data was not received properly.'"
    ],
    "variables": [
        "grpc",
        "mockProtoDefs",
        "mockProto",
        "grpcServer",
        "mockServer",
        "gbClient",
        "gbServer",
        "gbClientService",
        "gbTree",
        "svcPromise",
        "callMade",
        "callMade",
        "call",
        "callMade",
        "dataReceived",
        "call",
        "callMade",
        "dataReceived",
        "call"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}