{
    "identifiers": [
        "numpy",
        "np",
        "boxes",
        "query_boxes",
        "boxes",
        "shape",
        "query_boxes",
        "shape",
        "np",
        "zeros",
        "N",
        "K",
        "dtype",
        "np",
        "k",
        "K",
        "query_boxes",
        "k",
        "query_boxes",
        "k",
        "query_boxes",
        "k",
        "query_boxes",
        "k",
        "n",
        "N",
        "min",
        "boxes",
        "n",
        "query_boxes",
        "k",
        "max",
        "boxes",
        "n",
        "query_boxes",
        "k",
        "iw",
        "min",
        "boxes",
        "n",
        "query_boxes",
        "k",
        "max",
        "boxes",
        "n",
        "query_boxes",
        "k",
        "ih",
        "iw",
        "ih",
        "boxes",
        "n",
        "boxes",
        "n",
        "boxes",
        "n",
        "boxes",
        "n",
        "inter",
        "qbox_area",
        "box_area",
        "inter"
    ],
    "literals": [],
    "variables": [
        "N",
        "K",
        "overlaps",
        "qbox_area",
        "iw",
        "ih",
        "inter",
        "box_area",
        "overlaps",
        "n",
        "k"
    ],
    "comments": [
        "overlap, compute overlap area"
    ],
    "docstrings": [
        "\"\"\"\n    Parameters\n    ----------\n    boxes: (N, 4) ndarray of float\n    query_boxes: (K, 4) ndarray of float\n    Returns\n    -------\n    overlaps: (N, K) ndarray of overlap between boxes and query_boxes\n    -------\n    This is a substitution of cython_bbox as a pure python implementation.\n    Don't expect it to be fast.\n    \"\"\""
    ],
    "functions": [
        "bbox_overlap"
    ],
    "classes": []
}