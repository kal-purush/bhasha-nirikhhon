{
    "identifiers": [
        "com",
        "dph",
        "rocketmqDemo",
        "rocketmq",
        "java",
        "nio",
        "charset",
        "Charset",
        "java",
        "util",
        "concurrent",
        "locks",
        "Lock",
        "java",
        "util",
        "concurrent",
        "locks",
        "ReentrantLock",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "com",
        "alibaba",
        "rocketmq",
        "client",
        "exception",
        "MQBrokerException",
        "com",
        "alibaba",
        "rocketmq",
        "client",
        "exception",
        "MQClientException",
        "com",
        "alibaba",
        "rocketmq",
        "client",
        "producer",
        "DefaultMQProducer",
        "com",
        "alibaba",
        "rocketmq",
        "client",
        "producer",
        "SendResult",
        "com",
        "alibaba",
        "rocketmq",
        "common",
        "message",
        "Message",
        "com",
        "alibaba",
        "rocketmq",
        "remoting",
        "exception",
        "RemotingException",
        "logger",
        "LoggerFactory",
        "getLogger",
        "instance",
        "staticLock",
        "rocketmqAddr",
        "producerGroup",
        "producer",
        "logger",
        "debug",
        "rocketmqAddr",
        "producerGroup",
        "producer",
        "producerGroup",
        "producer",
        "setNamesrvAddr",
        "rocketmqAddr",
        "producer",
        "setRetryAnotherBrokerWhenNotStoreOK",
        "logger",
        "info",
        "format",
        "rocketmqAddr",
        "producerGroup",
        "staticLock",
        "instance",
        "instance",
        "instance",
        "staticLock",
        "unlock",
        "logger",
        "info",
        "producer",
        "start",
        "logger",
        "info",
        "e",
        "e",
        "logger",
        "info",
        "producer",
        "shutdown",
        "logger",
        "info",
        "staticLock",
        "instance",
        "staticLock",
        "unlock",
        "message",
        "logger",
        "debug",
        "format",
        "message",
        "getTopic",
        "message",
        "getTags",
        "message",
        "getBody",
        "Charset",
        "forName",
        "result",
        "producer",
        "send",
        "message",
        "logger",
        "debug",
        "format",
        "result",
        "getMsgId",
        "result",
        "getSendStatus",
        "result",
        "getSendStatus",
        "SEND_OK",
        "FLUSH_DISK_TIMEOUT",
        "SLAVE_NOT_AVAILABLE",
        "e",
        "e"
    ],
    "literals": [
        "\"rocketmq client init...\"",
        "\"172.31.0.3:9876\"",
        "\"producer\"",
        "\"rocketmq client initialized. address[%s], producer group[%s]\"",
        "\"rocketmq client starting...\"",
        "\"rocketmq client started.\"",
        "\"fail to start rocket client.\"",
        "\"rocketmq client stopping...\"",
        "\"rocketmq client stopped.\"",
        "\"send message to rocketmq. topic[%s], tags[%s], content[%s]\"",
        "\"UTF-8\"",
        "\"finish to send message to rocketmq. message id[%s], result[%s]\"",
        "\"fail to send message to rocketmq.\""
    ],
    "variables": [
        "instance",
        "rocketmqAddr",
        "producerGroup",
        "producer"
    ],
    "comments": [
        "地址",
        "生产者组名",
        "生产者",
        "可改成配置文件配置",
        "",
        ""
    ],
    "docstrings": [
        "* @author peihuadeng\n *",
        "* rocketmq 生产者 单例\n * \n * @author peihuadeng\n *",
        "* 初始化",
        "* 单例\n\t * \n\t * @return",
        "* 启动",
        "* 停止",
        "* 发送消息到rocketmq\n\t * \n\t * @param message\n\t * @return"
    ],
    "functions": [
        "RocketMQClient",
        "RocketMQClient",
        "getIntance",
        "start",
        "stop",
        "send"
    ],
    "classes": [
        "RocketMQClient"
    ]
}