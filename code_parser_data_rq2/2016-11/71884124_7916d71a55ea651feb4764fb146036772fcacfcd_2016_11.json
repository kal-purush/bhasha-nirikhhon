{
    "identifiers": [
        "originalUrl",
        "index",
        "URL",
        "originalUrl",
        "url",
        "url",
        "index",
        "url",
        "url",
        "param",
        "param",
        "param",
        "URL",
        "url",
        "urlWithCacheBusting",
        "urlWithCacheBusting",
        "param",
        "urlWithCacheBusting",
        "whitelist",
        "absoluteUrlString",
        "whitelist",
        "URL",
        "absoluteUrlString",
        "whitelist",
        "whitelistedPathRegex",
        "path",
        "whitelistedPathRegex",
        "precacheConfig",
        "cacheNamePrefix",
        "baseUrl",
        "precacheConfig",
        "cacheOption",
        "URL",
        "cacheOption",
        "baseUrl",
        "cacheNamePrefix",
        "absoluteUrl",
        "cacheOption",
        "currentCacheNamesToAbsoluteUrl",
        "cacheName",
        "absoluteUrl",
        "absoluteUrlToCacheName",
        "absoluteUrl",
        "cacheName",
        "absoluteUrlToCacheName",
        "currentCacheNamesToAbsoluteUrl",
        "originalUrl",
        "ignoreUrlParametersMatching",
        "URL",
        "originalUrl",
        "url",
        "url",
        "kv",
        "kv",
        "kv",
        "ignoreUrlParametersMatching",
        "ignoredRegex",
        "ignoredRegex",
        "kv",
        "kv",
        "kv",
        "url",
        "populateCurrentCacheNames",
        "PrecacheConfig",
        "CacheNamePrefix",
        "mappings",
        "mappings",
        "caches",
        "cacheNames",
        "cacheNames",
        "cacheName",
        "caches",
        "cacheName",
        "CurrentCacheNamesToAbsoluteUrl",
        "cacheName",
        "caches",
        "cacheName",
        "cache",
        "cache",
        "keys",
        "keys",
        "cacheName",
        "getCacheBustedUrl",
        "CurrentCacheNamesToAbsoluteUrl",
        "cacheName",
        "cacheBustParam",
        "Request",
        "urlWithCacheBusting",
        "fetch",
        "request",
        "response",
        "response",
        "cache",
        "CurrentCacheNamesToAbsoluteUrl",
        "cacheName",
        "response",
        "urlWithCacheBusting",
        "response",
        "caches",
        "cacheName",
        "caches",
        "allCacheNames",
        "allCacheNames",
        "cacheName",
        "cacheName",
        "CacheNamePrefix",
        "cacheName",
        "CurrentCacheNamesToAbsoluteUrl",
        "cacheName",
        "caches",
        "cacheName",
        "deleteAllCaches",
        "error",
        "error",
        "error",
        "stripIgnoredUrlParameters",
        "IgnoreUrlParametersMatching",
        "AbsoluteUrlToCacheName",
        "urlWithoutIgnoredParameters",
        "cacheName",
        "directoryIndex",
        "urlWithoutIgnoredParameters",
        "addDirectoryIndex",
        "urlWithoutIgnoredParameters",
        "directoryIndex",
        "cacheName",
        "AbsoluteUrlToCacheName",
        "urlWithoutIgnoredParameters",
        "cacheName",
        "navigateFallback",
        "isPathWhitelisted",
        "URL",
        "navigateFallback",
        "cacheName",
        "AbsoluteUrlToCacheName",
        "navigateFallbackUrl",
        "cacheName",
        "caches",
        "cacheName",
        "cache",
        "cache",
        "keys",
        "cache",
        "keys",
        "response",
        "response",
        "response",
        "cacheName",
        "e",
        "e",
        "fetch"
    ],
    "literals": [
        "'use strict'",
        "\"/bower_components/howler.js/dist/howler.js\"",
        "\"8236c0e1c5109b2f977c453019dbd86e\"",
        "\"/bower_components/webcomponentsjs/webcomponents-lite.min.js\"",
        "\"02395895d5d08242c6ba93518a6da2c5\"",
        "\"/images/drum.jpg\"",
        "\"9dd027de6c4d8ef26d948379e095d46f\"",
        "\"/index.html\"",
        "\"37c92e7d9b578c4ded626610a3e304ce\"",
        "\"/manifest.json\"",
        "\"77dfebbe0195effe450da86a674d5fc6\"",
        "\"/sounds/drums-bass.wav\"",
        "\"d370efb94430493891c2786e76753423\"",
        "\"/sounds/drums-clap.wav\"",
        "\"b764676a5afea24fc5116ed78b21e076\"",
        "\"/sounds/drums-floor-tom.wav\"",
        "\"468db34dd46deb45aa41ce28a7e05810\"",
        "\"/sounds/drums-high-hat.wav\"",
        "\"fadfade0c66d28585007a412e415e70f\"",
        "\"/sounds/drums-ride.wav\"",
        "\"facb8c1cadaec46428303ad710ab3104\"",
        "\"/sounds/drums-snare.wav\"",
        "\"40ac830b2f5f88c2a50b34ca3cdb64bb\"",
        "\"/sounds/drums-tom-1.wav\"",
        "\"0862f11f82af179fa108bd04683e729b\"",
        "\"/sounds/drums-tom-2.wav\"",
        "\"5b7b6fb7d9d5e4cda23d2f3bc5ebd4af\"",
        "\"/src/my-app.html\"",
        "\"8180e15c49435f4c31e43963b9bbdf70\"",
        "\"/src/my-bluetooth.html\"",
        "\"df4826f8ed6ad8211c604e94205ffb72\"",
        "\"/src/my-view404.html\"",
        "\"858fecebfa5de274e8d3f7ba905d599e\"",
        "'sw-precache-v1--'",
        "''",
        "'-'",
        "'/'",
        "'&'",
        "''",
        "'sw-precache='",
        "'-'",
        "'&'",
        "'='",
        "'='",
        "'&'",
        "'install'",
        "'-'",
        "'same-origin'",
        "'Request for %s returned a response status %d, '",
        "'so not attempting to cache it.'",
        "'function'",
        "'function'",
        "'activate'",
        "'message'",
        "'delete_all'",
        "'About to delete all caches...'",
        "'Caches deleted.'",
        "'Caches not deleted:'",
        "'fetch'",
        "'GET'",
        "'index.html'",
        "'/index.html'",
        "'accept'",
        "'accept'",
        "'text/html'",
        "'The cache '",
        "' is empty.'",
        "'Couldn\\'t serve response for \"%s\" from cache: %O'"
    ],
    "variables": [
        "PrecacheConfig",
        "CacheNamePrefix",
        "IgnoreUrlParametersMatching",
        "addDirectoryIndex",
        "url",
        "getCacheBustedUrl",
        "urlWithCacheBusting",
        "isPathWhitelisted",
        "path",
        "populateCurrentCacheNames",
        "absoluteUrlToCacheName",
        "currentCacheNamesToAbsoluteUrl",
        "absoluteUrl",
        "cacheName",
        "stripIgnoredUrlParameters",
        "url",
        "mappings",
        "AbsoluteUrlToCacheName",
        "CurrentCacheNamesToAbsoluteUrl",
        "cacheBustParam",
        "urlWithCacheBusting",
        "request",
        "urlWithoutIgnoredParameters",
        "cacheName",
        "directoryIndex",
        "navigateFallback",
        "navigateFallbackUrl"
    ],
    "comments": [
        "This generated service worker JavaScript will precache your site's resources.",
        "The code needs to be saved in a .js file at the top-level of your site, and registered",
        "from your pages in order to be used. See",
        "https://github.com/googlechrome/sw-precache/blob/master/demo/app/js/service-worker-registration.js",
        "for an example of how you can register this script and handle various service worker events.",
        "eslint-env worker, serviceworker",
        "eslint-disable indent, no-unused-vars, no-multiple-empty-lines, max-nested-callbacks, space-before-function-paren",
        "eslint-disable quotes, comma-spacing",
        "eslint-enable quotes, comma-spacing",
        "If the whitelist is empty, then consider all URLs to be whitelisted.",
        "Otherwise compare each path regex to the path of the URL passed in.",
        "Exclude initial '?'",
        "Split into an array of 'key=value' strings",
        "Split each 'key=value' string into a [key, value] array",
        "Return true iff the key doesn't match any of the regexes.",
        "Join each [key, value] array into a 'key=value' string",
        "Join the array of 'key=value' strings into a string with '&' in between each",
        "Take a look at each of the cache names we expect for this version.",
        "Get a list of all the entries in the specific named cache.",
        "For caches that are already populated for a given version of a",
        "resource, there should be 1 entry.",
        "If there are 0 entries, either because this is a brand new version",
        "of a resource or because the install step was interrupted the",
        "last time it ran, then we need to populate the cache.",
        "Use the last bit of the cache name, which contains the hash,",
        "as the cache-busting parameter.",
        "See https://github.com/GoogleChrome/sw-precache/issues/100",
        "Get rid of the empty cache if we can't add a successful response to it.",
        "Force the SW to transition from installing -> active state",
        "Ideally, this would check for event.request.mode === 'navigate', but that is not widely",
        "supported yet:",
        "https://code.google.com/p/chromium/issues/detail?id=540967",
        "https://bugzilla.mozilla.org/show_bug.cgi?id=1209081",
        "eslint-disable quotes, comma-spacing",
        "eslint-enable quotes, comma-spacing",
        "Rely on the fact that each cache we manage should only have one entry, and return that.",
        "If for some reason the response was deleted from the cache,",
        "raise and exception and fall back to the fetch() triggered in the catch()."
    ],
    "docstrings": [
        "* Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "deleteAllCaches"
    ],
    "classes": []
}