{
    "identifiers": [
        "nbformat",
        "IDiffAddRange",
        "IDiffPatch",
        "IDiffEntry",
        "IDiffArrayEntry",
        "CellDiffModel",
        "createAddedCellDiffModel",
        "createDeletedCellDiffModel",
        "createPatchedCellDiffModel",
        "createUnchangedCellDiffModel",
        "setMimetypeFromCellType",
        "OutputDiffModel",
        "makeOutputModels",
        "MergeDecision",
        "resolveCommonPaths",
        "buildDiffs",
        "filterDecisions",
        "pushPatchDecision",
        "popPath",
        "applyDecisions",
        "patch",
        "arraysEqual",
        "valueIn",
        "hasEntries",
        "ObjectMergeModel",
        "DecisionStringDiffModel",
        "nbformat",
        "decisions",
        "local",
        "remote",
        "mimetype",
        "md",
        "decisions",
        "md",
        "popPath",
        "md",
        "val",
        "md",
        "val",
        "md",
        "val",
        "DecisionStringDiffModel",
        "filterDecisions",
        "decisions",
        "local",
        "local",
        "remote",
        "remote",
        "setMimetypeFromCellType",
        "source",
        "mimetype",
        "DecisionStringDiffModel",
        "filterDecisions",
        "decisions",
        "local",
        "local",
        "remote",
        "remote",
        "nbformat",
        "nbformat",
        "filterDecisions",
        "decisions",
        "buildDiffs",
        "outputBase",
        "outputDec",
        "nbformat",
        "mergedDiff",
        "mergedDiff",
        "merged",
        "patch",
        "outputBase",
        "mergedDiff",
        "merged",
        "outputBase",
        "outputs",
        "makeOutputModels",
        "outputBase",
        "merged",
        "mergedDiff",
        "CellDiffModel",
        "source",
        "metadata",
        "outputs",
        "ObjectMergeModel",
        "nbformat",
        "nbformat",
        "decisions",
        "mimetype",
        "mimetype",
        "decisions",
        "hasEntries",
        "lo",
        "hasEntries",
        "ro",
        "hasEntries",
        "lo",
        "hasEntries",
        "ro",
        "lo",
        "ro",
        "i",
        "lo",
        "i",
        "lo",
        "i",
        "ro",
        "i",
        "nbformat",
        "md",
        "MergeDecision",
        "md",
        "nmd",
        "decisions",
        "nmd",
        "applyDecisions",
        "decisions",
        "decisions",
        "decisions",
        "arraysEqual",
        "decisions",
        "decisions",
        "decisions",
        "md",
        "md",
        "decisions",
        "md",
        "md",
        "md",
        "md",
        "hasEntries",
        "md",
        "hasEntries",
        "md",
        "hasEntries",
        "md",
        "hasEntries",
        "md",
        "md",
        "pushPatchDecision",
        "md",
        "md",
        "hasEntries",
        "splitDec",
        "splitDec",
        "splitDec",
        "splitDec",
        "diff",
        "hasEntries",
        "splitDec",
        "resolveCommonPaths",
        "subDecisions",
        "subdec",
        "subDecisions",
        "subdec",
        "subdec",
        "md",
        "md",
        "hasEntries",
        "md",
        "md",
        "md",
        "md",
        "md",
        "first",
        "md",
        "first",
        "nbformat",
        "createAddedCellDiffModel",
        "v",
        "createAddedCellDiffModel",
        "v",
        "createDeletedCellDiffModel",
        "createDeletedCellDiffModel",
        "valueIn",
        "md",
        "hasEntries",
        "md",
        "md",
        "md",
        "md",
        "md",
        "first",
        "md",
        "first",
        "nbformat",
        "createAddedCellDiffModel",
        "v",
        "createAddedCellDiffModel",
        "v",
        "createDeletedCellDiffModel",
        "createDeletedCellDiffModel",
        "valueIn",
        "md",
        "hasEntries",
        "md",
        "hasEntries",
        "md",
        "md",
        "md",
        "md",
        "md",
        "md",
        "createAddedCellDiffModel",
        "v",
        "createAddedCellDiffModel",
        "v",
        "createAddedCellDiffModel",
        "v",
        "createDeletedCellDiffModel",
        "createDeletedCellDiffModel",
        "createDeletedCellDiffModel",
        "valueIn",
        "md",
        "md",
        "md",
        "valueIn",
        "ops",
        "valueIn",
        "ops",
        "md",
        "ops",
        "createDeletedCellDiffModel",
        "md",
        "newDecisions",
        "newDecisions",
        "md",
        "md",
        "createDeletedCellDiffModel",
        "md",
        "newDecisions",
        "newDecisions",
        "md",
        "md",
        "resolveCommonPaths",
        "newDecisions",
        "newDecisions",
        "diff",
        "diff",
        "diff",
        "createPatchedCellDiffModel",
        "diff",
        "createUnchangedCellDiffModel",
        "createPatchedCellDecisionDiffModel"
    ],
    "literals": [
        "'use strict'",
        "'jupyterlab/lib/notebook/notebook/nbformat'",
        "'../../diff/diffentries'",
        "'../../diff/model'",
        "'../../merge/decisions'",
        "'../../patch'",
        "'../../common/util'",
        "'./common'",
        "string",
        "'Invalid diffs for patching cell!'",
        "'source'",
        "'metadata'",
        "'code'",
        "'outputs'",
        "'merged'",
        "string",
        "'source'",
        "'metadata'",
        "'outputs'",
        "'cells'",
        "'cells'",
        "'Not a valid path for a cell decision'",
        "'Invalid merge decision: '",
        "'Cannot have multiple cell decisions on one cell!'",
        "'Merge decision does not conform to expectation: '",
        "'addrange'",
        "'Merge decision does not conform to expectation: '",
        "'remote'",
        "'either'",
        "'Merge decision does not conform to expectation: '",
        "'addrange'",
        "'Merge decision does not conform to expectation: '",
        "'local'",
        "'either'",
        "'local'",
        "'remote'",
        "'either'",
        "'removerange'",
        "'patch'",
        "'Invalid merge decision, '",
        "'cannot have null base for deleted cell: '",
        "'removerange'",
        "'local'",
        "'remote'",
        "'Cannot create a patched or unchanged diff model with null base!'",
        "'Cannot create a patched or unchanged merged diff model with null base!'"
    ],
    "variables": [
        "val",
        "source",
        "metadata",
        "outputs",
        "outputBase",
        "outputDec",
        "mergedDiff",
        "merged",
        "lo",
        "ro",
        "i",
        "decisions",
        "nmd",
        "md",
        "splitDec",
        "diff",
        "subDecisions",
        "newDecisions",
        "first",
        "v",
        "first",
        "v",
        "v",
        "ops"
    ],
    "comments": [
        "Copyright (c) Jupyter Development Team.",
        "Distributed under the terms of the Modified BSD License.",
        "TODO: Remove/extend whitelist once we support more",
        "TODO: Also check other fields?",
        "First check for cell-level decisions:",
        "We have a cell level decision",
        "Have decision on /cells/X/. Such decisions should always",
        "be onsided.",
        "Not onesided.",
        "Split the decision on subkey:",
        "Nest diff as a patch on cell, which can be split by `splitPatch`:",
        "Add all split decisions",
        "Decision has path on subkey",
        "Make local path relative to cell",
        "Possibilities:\n     1. Insertion: base is null! Null diff of missing side (unchanged).\n     2. Deletion: Null diff of present side (unchanged). Set deleteCell\n        depending on action.\n     3. Deletion vs patch: Same as 2., but split patch decision onto\n        source/metadata/outputs.\n     4. Identical ops (insertion or deletion)\n     Cases that shouldn't happen:\n     5. Insertion vs insertion: Shouldn't happen! Should have been split\n        into two decisions with an insertion each before creating model.\n     6. Patch vs patch: Shouldn't occur, as those should have been recursed",
        "We set this to distinguish case 3 from normal",
        "1. or 2.:",
        "1.",
        "2.",
        "1. or 2.:",
        "1.",
        "2.",
        "3. or 4.",
        "4.",
        "Identical insertions (this relies on preprocessing to ensure only",
        "one value in valuelist)",
        "Identical delections",
        "3., by method of elimination",
        "The patch op will be on cell level. Split it on sub keys!",
        "The patch op will be on cell level. Split it on sub keys!"
    ],
    "docstrings": [
        "* Create a cell diff model based on a set of merge\n * decisions that patch the cell.",
        "* CellMergeModel",
        "* Whether the cell is present in only one of the two side (local/remote)",
        "* Run time flag whether the user wants to delete the cell or not",
        "* Whether source is the same in local and remote",
        "* Whether metadata is the same in local and remote",
        "* Whether outputs are the same in local and remote",
        "* Whether cell is the same in local and remote",
        "* Apply merge decisions to create the merged cell",
        "* Apply a cell level decision to the model\n   *\n   * This creates the revelant kinds of models"
    ],
    "functions": [
        "createPatchedCellDecisionDiffModel",
        "agreedSource",
        "agreedMetadata",
        "agreedOutputs",
        "agreedCell",
        "serialize",
        "processDecisions",
        "applyCellLevelDecision",
        "createDiffModel",
        "createMergedDiffModel"
    ],
    "classes": [
        "CellMergeModel"
    ]
}