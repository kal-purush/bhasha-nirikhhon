{
    "identifiers": [
        "calo_init",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "nargs",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "nargs",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "nargs",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "nargs",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "calo_init",
        "parser",
        "add_mutually_exclusive_group",
        "group",
        "add_argument",
        "help",
        "group",
        "add_argument",
        "help",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "nargs",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "calo_init",
        "parser",
        "add_argument",
        "help",
        "calo_init",
        "parse_args",
        "math",
        "pi",
        "floor",
        "maxEta",
        "dEta",
        "pi",
        "nPhi",
        "calo_init",
        "args",
        "inputSim",
        "calo_init",
        "args",
        "maxEta",
        "calo_init",
        "args",
        "maxEta",
        "calo_init",
        "args",
        "numPhi",
        "calo_init",
        "args",
        "numPhi",
        "pi",
        "nPhi",
        "calo_init",
        "args",
        "dPhi",
        "calo_init",
        "args",
        "dPhi",
        "dPhi",
        "pi",
        "calo_init",
        "args",
        "windowSeed",
        "calo_init",
        "args",
        "windowSeed",
        "calo_init",
        "args",
        "windowSeed",
        "calo_init",
        "args",
        "windowPos",
        "calo_init",
        "args",
        "windowPos",
        "calo_init",
        "args",
        "windowPos",
        "calo_init",
        "args",
        "windowDupl",
        "calo_init",
        "args",
        "windowDupl",
        "calo_init",
        "args",
        "windowDupl",
        "calo_init",
        "args",
        "zoom",
        "calo_init",
        "args",
        "zoom",
        "calo_init",
        "args",
        "zoom",
        "calo_init",
        "args",
        "calo_init",
        "args",
        "ROOT",
        "gSystem",
        "gSystem",
        "Load",
        "ROOT",
        "CaloAnalysis_recoMonitor",
        "TCanvas",
        "TFile",
        "gStyle",
        "gPad",
        "kGreen",
        "kRed",
        "kBlue",
        "TColor",
        "TF1",
        "draw_functions",
        "gStyle",
        "SetPalette",
        "energy",
        "filename",
        "calo_init",
        "energies",
        "calo_init",
        "filenames",
        "filenameSim",
        "filename",
        "CaloAnalysis_recoMonitor",
        "nameClusterCollection",
        "nameParticlesCollection",
        "energy",
        "maxEta",
        "nEta",
        "nPhi",
        "dEta",
        "dPhi",
        "analysis",
        "loop",
        "filenameSim",
        "filename",
        "calo_init",
        "verbose",
        "analysis",
        "histograms",
        "histograms",
        "hEn",
        "histograms",
        "hEnFncPhi",
        "histograms",
        "hEta",
        "histograms",
        "hPhi",
        "histograms",
        "hPhiFncPhi",
        "histograms",
        "hEtaFncEta",
        "histograms",
        "hNo",
        "histograms",
        "hNoFncPhi",
        "histograms",
        "hEnDiffMoreClu",
        "histograms",
        "hEtaDiffMoreClu",
        "histograms",
        "hPhiDiffMoreClu",
        "histograms",
        "hRDiffMoreClu",
        "hEn",
        "hEta",
        "hPhi",
        "hNo",
        "hEnDiffMoreClu",
        "hEtaDiffMoreClu",
        "hPhiDiffMoreClu",
        "hRDiffMoreClu",
        "h",
        "h1d",
        "h",
        "SetMarkerColor",
        "h",
        "SetFillColor",
        "h",
        "SetLineColor",
        "h",
        "SetMarkerStyle",
        "h",
        "SetMarkerSize",
        "TCanvas",
        "canv",
        "Divide",
        "canv",
        "cd",
        "TF1",
        "en",
        "en",
        "hEn",
        "Fit",
        "TF1",
        "res",
        "Get",
        "Parameter",
        "res",
        "Get",
        "Parameter",
        "res",
        "Get",
        "Parameter",
        "res",
        "Get",
        "Parameter",
        "hEn",
        "Fit",
        "TF1",
        "dEta",
        "dEta",
        "hEta",
        "Fit",
        "TF1",
        "dPhi",
        "dPhi",
        "hPhi",
        "Fit",
        "hEn",
        "SetDrawOption",
        "hEnDiffMoreClu",
        "SetDrawOption",
        "hNo",
        "SetDrawOption",
        "hEta",
        "SetDrawOption",
        "hPhi",
        "SetDrawOption",
        "hEn",
        "GetXaxis",
        "SetTitle",
        "hEn",
        "GetYaxis",
        "SetTitle",
        "hEn",
        "GetYaxis",
        "SetTitleOffset",
        "hEnDiffMoreClu",
        "GetXaxis",
        "SetTitle",
        "hEnDiffMoreClu",
        "GetYaxis",
        "SetTitle",
        "hEtaDiffMoreClu",
        "GetXaxis",
        "SetTitle",
        "hEtaDiffMoreClu",
        "GetYaxis",
        "SetTitle",
        "hPhiDiffMoreClu",
        "GetXaxis",
        "SetTitle",
        "hPhiDiffMoreClu",
        "GetYaxis",
        "SetTitle",
        "hRDiffMoreClu",
        "GetXaxis",
        "SetTitle",
        "hRDiffMoreClu",
        "GetYaxis",
        "SetTitle",
        "hEnDiffMoreClu",
        "GetYaxis",
        "SetTitleOffset",
        "hNo",
        "GetYaxis",
        "SetTitle",
        "hNo",
        "GetXaxis",
        "SetTitle",
        "hEta",
        "GetXaxis",
        "SetTitle",
        "hEta",
        "GetYaxis",
        "SetTitle",
        "hPhi",
        "GetXaxis",
        "SetTitle",
        "hPhi",
        "GetYaxis",
        "SetTitle",
        "hNo",
        "GetXaxis",
        "SetNdivisions",
        "hEta",
        "GetXaxis",
        "SetRangeUser",
        "dEta",
        "dEta",
        "hEtaFncEta",
        "GetXaxis",
        "SetRangeUser",
        "hEtaFncEta",
        "GetYaxis",
        "SetRangeUser",
        "dEta",
        "dEta",
        "hPhi",
        "GetXaxis",
        "SetRangeUser",
        "dPhi",
        "dPhi",
        "hPhiFncPhi",
        "GetYaxis",
        "SetRangeUser",
        "dPhi",
        "dPhi",
        "canv",
        "cd",
        "gStyle",
        "SetOptFit",
        "hEn",
        "Draw",
        "draw_text",
        "round",
        "res2",
        "Get",
        "Parameter",
        "round",
        "res2",
        "Get",
        "Parameter",
        "en",
        "round",
        "res2",
        "Get",
        "Parameter",
        "res2",
        "Get",
        "Parameter",
        "canv",
        "cd",
        "draw_hist2d",
        "hEnFncPhi",
        "canv",
        "cd",
        "hNo",
        "Draw",
        "hNo",
        "Draw",
        "canv",
        "cd",
        "draw_hist2d",
        "hNoFncPhi",
        "canv",
        "cd",
        "hEnDiffMoreClu",
        "Draw",
        "canv",
        "cd",
        "hEtaDiffMoreClu",
        "Draw",
        "canv",
        "cd",
        "hPhiDiffMoreClu",
        "Draw",
        "canv",
        "cd",
        "hRDiffMoreClu",
        "Draw",
        "canv",
        "cd",
        "hEta",
        "Draw",
        "canv",
        "cd",
        "draw_hist2d",
        "hEtaFncEta",
        "canv",
        "cd",
        "hPhi",
        "Draw",
        "canv",
        "cd",
        "draw_hist2d",
        "hPhiFncPhi",
        "TFile",
        "plots",
        "cd",
        "hEn",
        "Write",
        "hNo",
        "Write",
        "hEta",
        "Write",
        "hPhi",
        "Write",
        "hEnFncPhi",
        "Write",
        "hEnDiffMoreClu",
        "Write",
        "hEtaDiffMoreClu",
        "Write",
        "hPhiDiffMoreClu",
        "Write",
        "hRDiffMoreClu",
        "Write",
        "hNoFncPhi",
        "Write",
        "hPhiFncPhi",
        "Write",
        "hEtaFncEta",
        "Write",
        "plots",
        "Close",
        "calo_init",
        "filenameOut",
        "canv",
        "Print",
        "calo_init",
        "filenameOut",
        "canv",
        "Print"
    ],
    "literals": [
        "\"--windowSeed\"",
        "\"Size of the window used for seeding [eta,phi]\"",
        "\"--windowPos\"",
        "\"Size of the window used for berycentre coalculation [eta,phi]\"",
        "\"--windowDupl\"",
        "\"Size of the window used for duplicate removal [eta,phi]\"",
        "\"--dEta\"",
        "\"Size of the tower in eta\"",
        "\"--maxEta\"",
        "\"Maximum eta\"",
        "\"--dPhi\"",
        "\"Size of the tower in phi\"",
        "\"--numPhi\"",
        "\"Number of the towers in phi\"",
        "\"--zoom\"",
        "\"How many bins around centre should be visible\"",
        "\"--event\"",
        "\"Number of an event to draw\"",
        "\"inputSim\"",
        "\"Input file name with the simulated event\"",
        "\"caloClusters\"",
        "\"GenParticles\"",
        "\"libCaloAnalysis\"",
        "\"File with simulation results: \"",
        "\"File with reconstruction results: \"",
        "'canv'",
        "'ECal'",
        "'fit'",
        "'gaus'",
        "'fit'",
        "'S'",
        "'fit2'",
        "'gaus'",
        "'fit2'",
        "'SR'",
        "'fitEta'",
        "'gaus'",
        "'fitEta'",
        "'S'",
        "'fitPhi'",
        "'gaus'",
        "'fitPhi'",
        "'S'",
        "'bar'",
        "'bar'",
        "'text'",
        "'bar'",
        "'bar'",
        "'energy (GeV)'",
        "'fraction of events'",
        "'#Delta E / E'",
        "'number of events'",
        "'#Delta#eta'",
        "'number of events'",
        "'#Delta#varphi'",
        "'number of events'",
        "'#Delta R'",
        "'number of events'",
        "'fraction of events'",
        "'number of clusters per event'",
        "'#Delta#eta'",
        "'fraction of events'",
        "'#Delta#varphi'",
        "'fraction of events'",
        "'bar'",
        "\"energy: \"",
        "\" GeV\"",
        "\"           \"",
        "\" %\"",
        "\"resolution: \"",
        "\" %\"",
        "'#varphi'",
        "'energy (GeV)'",
        "'text same'",
        "'#varphi'",
        "'number of clusters per event'",
        "'bar'",
        "'#eta'",
        "'#Delta#eta'",
        "'bar'",
        "'#varphi'",
        "'#Delta#varphi'",
        "\"Energy_reco_plots.root\"",
        "\"RECREATE\"",
        "\".png\"",
        "\"Energy_monitor.png\""
    ],
    "variables": [
        "group",
        "eventToDraw",
        "maxEta",
        "nPhi",
        "dEta",
        "nEta",
        "dPhi",
        "nameClusterCollection",
        "nameParticlesCollection",
        "zoomEta",
        "zoomPhi",
        "etaWindowSeed",
        "phiWindowSeed",
        "etaWindowPos",
        "phiWindowPos",
        "etaWindowDupl",
        "phiWindowDupl",
        "filenameSim",
        "maxEta",
        "nPhi",
        "dPhi",
        "dPhi",
        "nPhi",
        "etaWindowSeed",
        "phiWindowSeed",
        "etaWindowPos",
        "phiWindowPos",
        "etaWindowDupl",
        "phiWindowDupl",
        "zoomEta",
        "zoomPhi",
        "eventToDraw",
        "analysis",
        "histograms",
        "hEn",
        "hEnFncPhi",
        "hEta",
        "hPhi",
        "hPhiFncPhi",
        "hEtaFncEta",
        "hNo",
        "hNoFncPhi",
        "hEnDiffMoreClu",
        "hEtaDiffMoreClu",
        "hPhiDiffMoreClu",
        "hRDiffMoreClu",
        "h1d",
        "en",
        "canv",
        "fit",
        "res",
        "fit2",
        "res2",
        "fitEta",
        "resEta",
        "fitPhi",
        "resPhi",
        "plots"
    ],
    "comments": [
        "add arguments relevant only for that script",
        "set of default parameters",
        "artificially increase by 1 (odd number) - to make plots look OK",
        "get parameters if passed from command line",
        "use this script for multiple files",
        "gStyle.SetPalette(56) # kInvertedDarkBodyRadiator",
        "kCMYK",
        "max eta",
        "number of bins in eta",
        "number of bins in phi",
        "tower size in eta",
        "tower size in phi",
        "retrieve histograms to draw them",
        "hist = []",
        "hist.append(histograms.hAllCellEnergy)",
        "hist.append(histograms.hClusterEnergy)",
        "hist.append(histograms.hClusterCellEnergy)",
        "## Calculate some parameters",
        "enTotal = hist[0].Integral()",
        "meanEta = hist[0].ProjectionX().GetMean()",
        "meanPhi = hist[0].ProjectionY().GetMean()",
        "## Set drawing options",
        "for h in hist:",
        "h.GetYaxis().SetRangeUser(meanPhi - (floor(zoomPhi/2) - 0.5 ) * dPhi,meanPhi + (floor(zoomPhi/2) + 0.5 ) * dPhi)",
        "h.GetXaxis().SetRangeUser(meanEta - (floor(zoomEta/2) - 0.5 ) * dEta,meanEta + (floor(zoomEta/2) + 0.5 ) * dEta)",
        "h.GetXaxis().SetNdivisions(zoomEta)",
        "h.GetYaxis().SetNdivisions(zoomPhi)",
        "h.GetXaxis().SetLabelSize(0.02)",
        "h.GetYaxis().SetLabelSize(0.02)",
        "canv = TCanvas('ECal_map_e'+str(energy)+'GeV', 'ECal', 1600, 1400 )",
        "canv.Divide(2,2)",
        "pad = canv.cd(1)",
        "pad.SetGrid()",
        "draw_hist2d(hist[0])",
        "pad = canv.cd(2)",
        "pad.SetLogz()",
        "pad.SetGrid()",
        "draw_hist2d(hist[0])",
        "draw_text([\"energy: \"+str(round(enTotal,2))+\" GeV\"])",
        "pad2 = canv.cd(3)",
        "draw_hist2d(hist[1])",
        "pad2.SetGrid()",
        "draw_text([\"energy: \"+str(round(hist[1].Integral(),2))+\" GeV\",",
        "\"           \"+str(round(hist[1].Integral()/enTotal*100,1))+\" %\"])",
        "pad = canv.cd(4)",
        "pad.SetGrid()",
        "draw_hist2d(hist[2])",
        "draw_text([\"energy: \"+str(round(hist[2].Integral(),2))+\" GeV\",",
        "\"           \"+str(round(hist[2].Integral()/enTotal*100,1))+\" %\"])",
        "for ipad in range(2,5):",
        "canv.cd(ipad)",
        "draw_rectangle([meanEta-etaWindowSeed/2.*dEta, meanPhi-phiWindowSeed/2.*dPhi],",
        "[meanEta+etaWindowSeed/2.*dEta, meanPhi+phiWindowSeed/2.*dPhi], kRed, 4)",
        "draw_rectangle([meanEta-etaWindowDupl/2.*dEta, meanPhi-phiWindowDupl/2.*dPhi],",
        "[meanEta+etaWindowDupl/2.*dEta, meanPhi+phiWindowDupl/2.*dPhi], kBlue, 3)",
        "draw_rectangle([meanEta-etaWindowPos/2.*dEta, meanPhi-phiWindowPos/2.*dPhi],",
        "[meanEta+etaWindowPos/2.*dEta, meanPhi+phiWindowPos/2.*dPhi], kGreen, 2)",
        "canv.Print('ECal_map_e'+str(energy)+'GeV.png')",
        "hNo.GetYaxis().SetRangeUser(0,1.1)"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}