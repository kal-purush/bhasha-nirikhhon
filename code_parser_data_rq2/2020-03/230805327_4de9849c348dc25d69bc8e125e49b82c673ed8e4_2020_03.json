{
    "identifiers": [
        "configureStore",
        "combineReducers",
        "Action",
        "createSlice",
        "PayloadAction",
        "ThunkAction",
        "LoadingState",
        "API_URL",
        "delay",
        "process",
        "require",
        "store",
        "newRootReducer",
        "s",
        "LoadingState",
        "createSlice",
        "state",
        "action",
        "s",
        "state",
        "LoadingState",
        "state",
        "action",
        "state",
        "action",
        "state",
        "action",
        "state",
        "state",
        "LoadingState",
        "coreSlice",
        "getSchools",
        "dispatch",
        "getState",
        "getState",
        "schools",
        "delay",
        "fetch",
        "API_URL",
        "res",
        "s",
        "school",
        "payload",
        "schools",
        "school",
        "school",
        "dispatch",
        "getSchoolsSuccess",
        "schools",
        "e",
        "dispatch",
        "getSchoolsFailure",
        "e",
        "dispatch",
        "finishLoading",
        "finishLoading",
        "combineReducers",
        "coreSlice",
        "rootReducer",
        "configureStore",
        "rootReducer",
        "store",
        "store"
    ],
    "literals": [
        "\"@reduxjs/toolkit\"",
        "\"redux-thunk\"",
        "\"./types\"",
        "\"./constants\"",
        "\"./utils\"",
        "\"development\"",
        "\"./duck\"",
        "\"./duck\"",
        "string",
        "string",
        "string",
        "\"core\"",
        "string",
        "string",
        "string",
        "${API_URL}/schools",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "newRootReducer",
        "initialState",
        "coreSlice",
        "getSchools",
        "res",
        "payload",
        "schools",
        "rootReducer",
        "store"
    ],
    "comments": [
        "Hot Loading setup",
        "@ts-ignore",
        "@ts-ignore",
        "Just to mess with Albert"
    ],
    "docstrings": [],
    "functions": [
        "getSchoolsSuccess",
        "getSchoolsFailure",
        "finishLoading"
    ],
    "classes": []
}