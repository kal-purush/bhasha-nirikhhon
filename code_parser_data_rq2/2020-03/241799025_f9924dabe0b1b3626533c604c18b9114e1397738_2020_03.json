{
    "identifiers": [
        "chalk",
        "inquirer",
        "prettier",
        "emptyDir",
        "pathExists",
        "readFile",
        "readJson",
        "remove",
        "writeFile",
        "exec",
        "paramCase",
        "resolve",
        "rel",
        "resolve",
        "__dirname",
        "rel",
        "cmd",
        "exec",
        "cmd",
        "ret",
        "chalk",
        "pathExists",
        "path",
        "hasEnv",
        "inquirer",
        "OVERWRITE_ENV",
        "inquirer",
        "AWS_PROFILE",
        "AWS_ACCOUNT_ID",
        "AWS_REGION",
        "line",
        "line",
        "writeFile",
        "path",
        "envFile",
        "chalk",
        "readJson",
        "path",
        "pkg",
        "chalk",
        "inquirer",
        "OVERWRITE",
        "pkg",
        "inquirer",
        "pkg",
        "NAME",
        "DESCRIPTION",
        "pkg",
        "DESCRIPTION",
        "pkg",
        "pkg",
        "VERSION",
        "remote",
        "run",
        "remote",
        "remote",
        "remote",
        "inquirer",
        "remote",
        "REPO_URL",
        "pkg",
        "REPO_URL",
        "pkg",
        "run",
        "authorDefault",
        "authorName",
        "run",
        "authorEmail",
        "authorEmail",
        "authorDefault",
        "authorDefault",
        "authorEmail",
        "authorDefault",
        "authorDefault",
        "authorEmail",
        "inquirer",
        "authorDefault",
        "AUTHOR",
        "pkg",
        "AUTHOR",
        "pkg",
        "inquirer",
        "USE_DEPENDABOT",
        "inquirer",
        "readFile",
        "path",
        "writeFile",
        "path",
        "dependabotConfigFileData",
        "DEPENDABOT_BRANCH",
        "remove",
        "path",
        "inquirer",
        "USE_GIT_HOOKS",
        "pkg",
        "pkg",
        "readFile",
        "path",
        "prettier",
        "prettierConfig",
        "writeFile",
        "path",
        "prettier",
        "pkg",
        "prettierOptions",
        "pkg",
        "bypass",
        "bypass",
        "emptyDir",
        "path",
        "emptyDir",
        "path",
        "emptyDir",
        "path",
        "emptyDir",
        "path",
        "chalk",
        "bypass",
        "bypass",
        "inquirer",
        "STACK_WITH_CONSTRUCT",
        "STACK_WITH_CONSTRUCT",
        "STACK_ONLY",
        "ADD_INIT_FILES",
        "inquirer",
        "input",
        "input",
        "STACK_FILENAME",
        "ADD_INIT_FILES",
        "STACK_ONLY",
        "readFile",
        "path",
        "writeFile",
        "path",
        "STACK_FILE_PATH",
        "stackFileData",
        "ADD_INIT_FILES",
        "STACK_WITH_CONSTRUCT",
        "readFile",
        "path",
        "readFile",
        "path",
        "readFile",
        "path",
        "inquirer",
        "input",
        "input",
        "paramCase",
        "CONSTRUCT_NAME",
        "CONSTRUCT_FILE_NAME",
        "writeFile",
        "path",
        "STACK_FILE_PATH",
        "stackFileData",
        "CONSTRUCT_NAME",
        "CONSTRUCT_FILE_NAME",
        "writeFile",
        "path",
        "CONSTRUCT_FILE_PATH",
        "constructFileData",
        "CONSTRUCT_NAME",
        "writeFile",
        "path",
        "CONSTRUCT_FILE_NAME",
        "stackTestFileData",
        "STACK_FILE_PATH",
        "TEST_APP_REPLACE_PATH",
        "TEST_APP_PATH",
        "readFile",
        "path",
        "writeFile",
        "path",
        "STACK_FILENAME",
        "stackTestFileData",
        "STACK_FILE_PATH",
        "TEST_APP_REPLACE_PATH",
        "TEST_APP_PATH",
        "chalk",
        "bypass",
        "name",
        "bypass",
        "readFile",
        "path",
        "writeFile",
        "path",
        "readmeFileData",
        "name",
        "chalk",
        "makeProfile",
        "makeProfile",
        "updatePackage",
        "cleanDemoFiles",
        "bypass",
        "addInitFiles",
        "bypass",
        "writeDocs",
        "bypass",
        "name",
        "process",
        "profile",
        "process",
        "init",
        "process",
        "addInitFiles"
    ],
    "literals": [
        "\"chalk\"",
        "\"inquirer\"",
        "\"prettier\"",
        "\"fs-extra\"",
        "\"child-process-promise\"",
        "\"change-case\"",
        "\"path\"",
        "\"STACK_ONLY\"",
        "\"STACK_WITH_CONSTRUCT\"",
        "string",
        "string",
        "string",
        "string",
        "üîë ${chalk.green(\"Setup your AWS info in an untracked .env file:\")}",
        "\"Setup your AWS info in an untracked .env file:\"",
        "\"../.env\"",
        "\"confirm\"",
        "\"OVERWRITE_ENV\"",
        "\"Overwrite your current .env file?\"",
        "\"input\"",
        "\"AWS_PROFILE\"",
        "\"AWS_PROFILE:\"",
        "\"input\"",
        "\"AWS_ACCOUNT_ID\"",
        "\"AWS_ACCOUNT_ID:\"",
        "\"input\"",
        "\"AWS_REGION\"",
        "\"AWS_REGION:\"",
        "\"us-east-1\"",
        "AWS_PROFILE=${AWS_PROFILE}\n    AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}\n    AWS_REGION=${AWS_REGION}",
        "\"\\n\"",
        "\"\\n\"",
        "\"../.env\"",
        "string",
        "üì¶  ${chalk.green(\"Update package.json with your project settings:\")}",
        "\"Update package.json with your project settings:\"",
        "\"../package.json\"",
        "\"aws-cdk-stack-factory\"",
        "‚ö†Ô∏è  ${chalk.yellow(\"Project has already been intialized.\")}",
        "\"Project has already been intialized.\"",
        "\"confirm\"",
        "\"OVERWRITE\"",
        "\"Overwrite project?\"",
        "\"input\"",
        "\"NAME\"",
        "\"name:\"",
        "\"my-stack\"",
        "\"input\"",
        "\"DESCRIPTION\"",
        "\"description:\"",
        "\"\"",
        "\"input\"",
        "\"VERSION\"",
        "\"version:\"",
        "\"0.0.0\"",
        "\"git config --get remote.origin.url\"",
        "\"git@github.com:\"",
        "https://github.com/${remote.replace(\"git@github.com:\", \"\").trim()}",
        "\"git@github.com:\"",
        "\"\"",
        "\"input\"",
        "\"REPO_URL\"",
        "\"repo url:\"",
        "\"\"",
        "\"git config user.name\"",
        "\"git config user.email\"",
        "${authorDefault} <${authorEmail}>",
        "\"input\"",
        "\"AUTHOR\"",
        "\"author\"",
        "\"confirm\"",
        "\"USE_DEPENDABOT\"",
        "\"Use Dependabot integration?\"",
        "\"input\"",
        "\"DEPENDABOT_BRANCH\"",
        "\"Dependabot branch to track?\"",
        "\"master\"",
        "\"../.dependabot/config.yml\"",
        "\"../.dependabot/config.yml\"",
        "target_branch: ${DEPENDABOT_BRANCH}",
        "\"../.dependabot\"",
        "\"confirm\"",
        "\"USE_GIT_HOOKS\"",
        "\"Use Git commit hooks?\"",
        "\"lint-staged\"",
        "\"../.prettierrc.js\"",
        "\"utf8\"",
        "\"../package.json\"",
        "\"json\"",
        "\"../envs\"",
        "\"../src/stacks\"",
        "\"../src/constructs\"",
        "\"../tests\"",
        "üóëÔ∏è  ${chalk.green(\"Deleted demo envs, stacks, constructs and tests\")}",
        "\"Deleted demo envs, stacks, constructs and tests\"",
        "\"list\"",
        "\"Bootstrap stack, construct and test files?\"",
        "\"ADD_INIT_FILES\"",
        "\"Stack with imported constuct with test\"",
        "\"Stack with test\"",
        "\"Empty repo\"",
        "\"../test-app\"",
        "\"../lib/test-app\"",
        "\"input\"",
        "\"STACK_FILENAME\"",
        "\"my-stack\"",
        "\"Stack filename (use kebab-case-style, no extention):\"",
        "string",
        "../src/stacks/${STACK_FILENAME}",
        "\"./stacks/single-stack.ts\"",
        "${STACK_FILE_PATH}.ts",
        "\"./stacks/stack-with-construct.ts\"",
        "\"./constructs/imported-construct.ts\"",
        "\"./testing/stack-test.ts\"",
        "\"input\"",
        "\"CONSTRUCT_NAME\"",
        "\"MyConstruct\"",
        "\"Construct name (use PascalCase):\"",
        "string",
        "../src/constructs/${CONSTRUCT_FILE_NAME}",
        "${STACK_FILE_PATH}.ts",
        "\"../constructs/imported-construct\"",
        "../constructs/${CONSTRUCT_FILE_NAME}",
        "${CONSTRUCT_FILE_PATH}.ts",
        "../tests/${CONSTRUCT_FILE_NAME}.construct.test.ts",
        "\"../stacks/single-stack\"",
        "\"./testing/stack-test.ts\"",
        "../tests/${STACK_FILENAME}.stack.test.ts",
        "\"../stacks/single-stack\"",
        "üß¨  ${chalk.green(\"Added stack, constuct and test stubs\")}",
        "\"Added stack, constuct and test stubs\"",
        "string",
        "\"./docs/ROOT_README.md\"",
        "\"../README.md\"",
        "\"aws-cdk-stack-factory\"",
        "üìÑ  ${chalk.green(\"Updated root README\")}",
        "\"Updated root README\"",
        "\"profile\"",
        "\"init\"",
        "\"files\""
    ],
    "variables": [
        "STACK_ONLY",
        "STACK_WITH_CONSTRUCT",
        "ret",
        "hasEnv",
        "envFile",
        "pkg",
        "remote",
        "authorDefault",
        "authorName",
        "authorEmail",
        "dependabotConfigFileData",
        "prettierConfig",
        "prettierOptions",
        "TEST_APP_REPLACE_PATH",
        "TEST_APP_PATH",
        "STACK_FILE_PATH",
        "stackFileData",
        "stackFileData",
        "constructFileData",
        "stackTestFileData",
        "CONSTRUCT_FILE_NAME",
        "CONSTRUCT_FILE_PATH",
        "stackTestFileData",
        "readmeFileData"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "path",
        "run",
        "makeProfile",
        "updatePackage",
        "cleanDemoFiles",
        "addInitFiles",
        "writeDocs",
        "profile",
        "init"
    ],
    "classes": []
}