{
    "identifiers": [
        "tl",
        "path",
        "fs",
        "http",
        "https",
        "searchUri",
        "username",
        "password",
        "tl",
        "Buffer",
        "username",
        "password",
        "tl",
        "authBase64",
        "http",
        "searchUri",
        "searchUri",
        "authBase64",
        "options",
        "http",
        "options",
        "options",
        "searchUri",
        "options",
        "http",
        "options",
        "searchUri",
        "username",
        "password",
        "acceptUntrustedCerts",
        "tl",
        "Buffer",
        "username",
        "password",
        "tl",
        "authBase64",
        "https",
        "searchUri",
        "searchUri",
        "acceptUntrustedCerts",
        "authBase64",
        "options",
        "https",
        "options",
        "options",
        "searchUri",
        "options",
        "https",
        "options",
        "client",
        "options",
        "http",
        "https",
        "tl",
        "options",
        "http",
        "client",
        "options",
        "res",
        "http",
        "tl",
        "res",
        "tl",
        "res",
        "res",
        "URL",
        "res",
        "options",
        "downloadUri",
        "options",
        "downloadUri",
        "options",
        "downloadUri",
        "options",
        "tl",
        "downloadUri",
        "path",
        "downloadUri",
        "filename",
        "http",
        "client",
        "options",
        "inner_res",
        "http",
        "tl",
        "inner_res",
        "tl",
        "inner_res",
        "inner_res",
        "fs",
        "fs",
        "filename",
        "inner_res",
        "chunk",
        "file",
        "chunk",
        "file",
        "filename",
        "downloadUri",
        "inner_req",
        "res",
        "res",
        "req"
    ],
    "literals": [
        "'azure-pipelines-task-lib/task'",
        "\"path\"",
        "'fs'",
        "'http'",
        "'https'",
        "string",
        "string",
        "execute_http.",
        "string",
        "':'",
        "'base64'",
        "'GET'",
        "'Authorization'",
        "'Basic '",
        "string",
        "string",
        "execute_https.",
        "string",
        "':'",
        "'base64'",
        "'GET'",
        "'Authorization'",
        "'Basic '",
        "HTTP Request Options: ${JSON.stringify(options)}.",
        "HTTP Response Status Code: ${res.statusCode}.",
        "HTTP Response Headers: ${JSON.stringify(res.headers)}.",
        "Download asset using '${downloadUri}'.",
        "string",
        "Download filename '${filename}'",
        "HTTP Response Status Code: ${inner_res.statusCode}.",
        "HTTP Response Headers: ${JSON.stringify(inner_res.headers)}.",
        "'data'",
        "'end'",
        "Successfully downloaded asset '${filename}' using '${downloadUri}'.",
        "Search returned multiple assets, please refine search criteria to find a single asset!",
        "Asset does not exist for search!"
    ],
    "variables": [
        "authBase64",
        "options",
        "authBase64",
        "options",
        "req",
        "downloadUri",
        "filename",
        "inner_req",
        "file"
    ],
    "comments": [
        "Make sure the secret is correctly scrubbed from any logs",
        "Setup new agent dont use the global one",
        "execute the http request",
        "Make sure the secret is correctly scrubbed from any logs",
        "By default ensure we validate SSL certificates",
        "Setup new agent dont use the global one",
        "execute the https request",
        "Set correct options for the new request to download our file"
    ],
    "docstrings": [],
    "functions": [
        "execute_http",
        "execute_https",
        "execute_request"
    ],
    "classes": [
        "HttpHelper"
    ]
}