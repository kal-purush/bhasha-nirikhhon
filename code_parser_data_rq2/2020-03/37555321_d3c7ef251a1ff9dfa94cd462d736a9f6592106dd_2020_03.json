{
    "identifiers": [
        "org",
        "apache",
        "kafka",
        "streams",
        "processor",
        "internals",
        "org",
        "apache",
        "kafka",
        "clients",
        "admin",
        "Admin",
        "org",
        "apache",
        "kafka",
        "clients",
        "consumer",
        "Consumer",
        "org",
        "apache",
        "kafka",
        "clients",
        "consumer",
        "MockConsumer",
        "org",
        "apache",
        "kafka",
        "clients",
        "consumer",
        "OffsetResetStrategy",
        "org",
        "apache",
        "kafka",
        "common",
        "Metric",
        "org",
        "apache",
        "kafka",
        "common",
        "MetricName",
        "org",
        "apache",
        "kafka",
        "common",
        "TopicPartition",
        "org",
        "apache",
        "kafka",
        "common",
        "metrics",
        "KafkaMetric",
        "org",
        "apache",
        "kafka",
        "common",
        "metrics",
        "Measurable",
        "org",
        "apache",
        "kafka",
        "common",
        "metrics",
        "Metrics",
        "org",
        "apache",
        "kafka",
        "common",
        "utils",
        "LogContext",
        "org",
        "apache",
        "kafka",
        "common",
        "utils",
        "MockTime",
        "org",
        "apache",
        "kafka",
        "streams",
        "StreamsConfig",
        "org",
        "apache",
        "kafka",
        "streams",
        "processor",
        "TaskId",
        "org",
        "apache",
        "kafka",
        "streams",
        "processor",
        "internals",
        "metrics",
        "StreamsMetricsImpl",
        "org",
        "apache",
        "kafka",
        "streams",
        "state",
        "internals",
        "ThreadCache",
        "org",
        "apache",
        "kafka",
        "test",
        "MockClientSupplier",
        "org",
        "easymock",
        "EasyMockRunner",
        "org",
        "easymock",
        "Mock",
        "org",
        "easymock",
        "MockType",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "java",
        "util",
        "org",
        "apache",
        "kafka",
        "common",
        "utils",
        "Utils",
        "mkEntry",
        "org",
        "apache",
        "kafka",
        "common",
        "utils",
        "Utils",
        "mkMap",
        "org",
        "easymock",
        "EasyMock",
        "anyString",
        "org",
        "easymock",
        "EasyMock",
        "expect",
        "org",
        "easymock",
        "EasyMock",
        "mock",
        "org",
        "easymock",
        "EasyMock",
        "replay",
        "org",
        "junit",
        "Assert",
        "assertEquals",
        "RunWith",
        "Mock",
        "MockType",
        "NICE",
        "builder",
        "Mock",
        "MockType",
        "NICE",
        "config",
        "Mock",
        "MockType",
        "NICE",
        "stateDirectory",
        "Mock",
        "MockType",
        "NICE",
        "changeLogReader",
        "Mock",
        "MockType",
        "NICE",
        "consumer",
        "Mock",
        "MockType",
        "NICE",
        "adminClient",
        "mockClientSupplier",
        "streamsMetrics",
        "StreamsConfig",
        "METRICS_LATEST",
        "activeTaskCreator",
        "Test",
        "expect",
        "config",
        "getString",
        "StreamsConfig",
        "APPLICATION_ID_CONFIG",
        "andReturn",
        "expect",
        "config",
        "getString",
        "StreamsConfig",
        "PROCESSING_GUARANTEE_CONFIG",
        "andReturn",
        "StreamsConfig",
        "AT_LEAST_ONCE",
        "expect",
        "config",
        "getProducerConfigs",
        "anyString",
        "andReturn",
        "Collections",
        "emptyMap",
        "replay",
        "config",
        "activeTaskCreator",
        "builder",
        "config",
        "streamsMetrics",
        "stateDirectory",
        "changeLogReader",
        "streamsMetrics",
        "mockClientSupplier",
        "logger",
        "testMetricName",
        "testMetric",
        "testMetricName",
        "config",
        "now",
        "mockClientSupplier",
        "producers",
        "get",
        "setMockMetrics",
        "testMetricName",
        "testMetric",
        "producerMetrics",
        "activeTaskCreator",
        "producerMetrics",
        "assertEquals",
        "testMetricName",
        "producerMetrics",
        "get",
        "testMetricName",
        "metricName",
        "Test",
        "taskId",
        "topology",
        "mock",
        "expect",
        "config",
        "getString",
        "StreamsConfig",
        "APPLICATION_ID_CONFIG",
        "andReturn",
        "expect",
        "config",
        "getString",
        "StreamsConfig",
        "PROCESSING_GUARANTEE_CONFIG",
        "andReturn",
        "StreamsConfig",
        "EXACTLY_ONCE",
        "expect",
        "config",
        "getLong",
        "anyString",
        "andReturn",
        "expect",
        "config",
        "getInt",
        "anyString",
        "andReturn",
        "expect",
        "config",
        "getProducerConfigs",
        "anyString",
        "andReturn",
        "expect",
        "builder",
        "buildSubtopology",
        "taskId",
        "topicGroupId",
        "andReturn",
        "topology",
        "expect",
        "topology",
        "storeToChangelogTopic",
        "andReturn",
        "Collections",
        "emptyMap",
        "expect",
        "topology",
        "source",
        "andReturn",
        "mock",
        "expect",
        "topology",
        "globalStateStores",
        "andReturn",
        "Collections",
        "emptyList",
        "replay",
        "config",
        "builder",
        "topology",
        "mockClientSupplier",
        "setApplicationIdForProducer",
        "activeTaskCreator",
        "builder",
        "config",
        "streamsMetrics",
        "stateDirectory",
        "changeLogReader",
        "streamsMetrics",
        "mockClientSupplier",
        "logger",
        "activeTaskCreator",
        "createTasks",
        "OffsetResetStrategy",
        "NONE",
        "mkMap",
        "mkEntry",
        "Collections",
        "singleton",
        "testMetricName",
        "testMetric",
        "testMetricName",
        "config",
        "now",
        "mockClientSupplier",
        "producers",
        "get",
        "setMockMetrics",
        "testMetricName",
        "testMetric",
        "producerMetrics",
        "activeTaskCreator",
        "producerMetrics",
        "assertEquals",
        "testMetricName",
        "producerMetrics",
        "get",
        "testMetricName",
        "metricName"
    ],
    "literals": [
        "\"clientId\"",
        "\"appId\"",
        "\"threadId\"",
        "\"test_metric\"",
        "\"\"",
        "\"\"",
        "\"appId\"",
        "\"topic\"",
        "\"appId\"",
        "\"threadId\"",
        "\"topic\"",
        "\"test_metric\"",
        "\"\"",
        "\"\""
    ],
    "variables": [
        "builder",
        "config",
        "stateDirectory",
        "changeLogReader",
        "consumer",
        "adminClient",
        "activeTaskCreator"
    ],
    "comments": [],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements. See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "shouldConstructProducerMetricsWithoutEOS",
        "shouldConstructProducerMetricsWithEOS"
    ],
    "classes": [
        "ActiveTaskCreatorTest"
    ]
}