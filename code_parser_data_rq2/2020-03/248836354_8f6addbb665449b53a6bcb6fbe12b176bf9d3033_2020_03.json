{
    "identifiers": [
        "isThresholdReached",
        "startXY",
        "xy",
        "startXY",
        "xy",
        "startXY",
        "xy",
        "touchstart",
        "e",
        "e",
        "e",
        "touchmove",
        "e",
        "isThresholdReached",
        "e",
        "e",
        "touchend",
        "e",
        "isThresholdReached",
        "e",
        "e",
        "e",
        "evt",
        "touch",
        "touch",
        "touch",
        "touch",
        "evt",
        "e",
        "evt",
        "click",
        "e",
        "time",
        "lastClick",
        "e",
        "e",
        "lastClick",
        "x",
        "lastClick",
        "y",
        "closest",
        "e",
        "e",
        "target",
        "nodeName",
        "isLink",
        "e",
        "lastClick",
        "time",
        "lastClick",
        "x",
        "lastClick",
        "y",
        "e",
        "timeDiff",
        "timeDiff",
        "xyDiff",
        "xyDiff",
        "standAlone",
        "e",
        "e",
        "standAlone",
        "standAlone",
        "target",
        "target",
        "target",
        "target",
        "target",
        "closest",
        "node",
        "tagName",
        "curNode",
        "curNode",
        "curNode",
        "tagName",
        "curNode",
        "curNode",
        "curNode",
        "touchstart",
        "touchmove",
        "touchend",
        "click"
    ],
    "literals": [
        "'ontouchstart'",
        "'MouseEvents'",
        "'click'",
        "'A'",
        "'A'",
        "\"href\"",
        "\"href\"",
        "\"energize-focus\"",
        "\"energize-focus\"",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'click'"
    ],
    "variables": [
        "lastClick",
        "isThresholdReached",
        "touchstart",
        "touchmove",
        "touchend",
        "click",
        "closest",
        "touch",
        "evt",
        "time",
        "timeDiff",
        "x",
        "y",
        "xyDiff",
        "target",
        "nodeName",
        "isLink",
        "standAlone",
        "curNode",
        "node"
    ],
    "comments": [
        "Sandbox",
        "NOOP if the threshold has already been reached",
        "Don't fire a click if the user scrolled past the threshold",
        "distinguish from a normal (nonsimulated) click",
        "needed for standalone apps",
        "go up the dom until we find the tag we're after",
        "found",
        "not found, so keep going up",
        "not found",
        "TODO: why does this use capture?"
    ],
    "docstrings": [
        "* energize.js v0.1.0\n *\n * Speeds up click events on mobile devices.\n * https://github.com/davidcalhoun/energize.js",
        "* Don't add to non-touch devices, which don't need to be sped up",
        "* isThresholdReached\n   *\n   * Compare touchstart with touchend xy coordinates,\n   * and only fire simulated click event if the coordinates\n   * are nearby. (don't want clicking to be confused with a swipe)",
        "* touchstart\n   *\n   * Save xy coordinates when the user starts touching the screen",
        "* touchmove\n   *\n   * Check if the user is scrolling past the threshold.\n   * Have to check here because touchend will not always fire\n   * on some tested devices (Kindle Fire?)",
        "* touchend\n   *\n   * If the user didn't scroll past the threshold between\n   * touchstart and touchend, fire a simulated click.\n   *\n   * (This will fire before a native click)",
        "* Create and fire a click event on the target element\n     * https://developer.mozilla.org/en/DOM/event.initMouseEvent",
        "* click\n   *\n   * Because we've already fired a click event in touchend,\n   * we need to listed for all native click events here\n   * and suppress them as necessary.",
        "* Prevent ghost clicks by only allowing clicks we created\n     * in the click event we fired (look for e.simulated)",
        "* Unfortunately Android sometimes fires click events without touch events (seen on Kindle Fire),\n     * so we have to add more logic to determine the time of the last click.  Not perfect...\n     *\n     * Older, simpler check: if((!e.simulated) || standAlone)",
        "* Special logic for standalone web apps\n     * See http://stackoverflow.com/questions/2898740/iphone-safari-web-app-opens-links-in-new-window",
        "* Add an energize-focus class to the targeted link (mimics :focus behavior)\n     * TODO: test and/or remove?  Does this work?",
        "* closest\n   * @param {HTMLElement} node current node to start searching from.\n   * @param {string} tagName the (uppercase) name of the tag you're looking for.\n   *\n   * Find the closest ancestor tag of a given node.\n   *\n   * Starts at node and goes up the DOM tree looking for a\n   * matching nodeName, continuing until hitting document.body",
        "* Add all delegated event listeners\n   * \n   * All the events we care about bubble up to document,\n   * so we can take advantage of event delegation.\n   *\n   * Note: no need to wait for DOMContentLoaded here"
    ],
    "functions": [],
    "classes": []
}