{
    "identifiers": [
        "com",
        "siatsenko",
        "movieland",
        "web",
        "controller",
        "com",
        "siatsenko",
        "movieland",
        "entity",
        "common",
        "com",
        "siatsenko",
        "movieland",
        "entity",
        "request",
        "RequestParameters",
        "com",
        "siatsenko",
        "movieland",
        "service",
        "MovieService",
        "com",
        "siatsenko",
        "movieland",
        "service",
        "RequestParamsService",
        "com",
        "siatsenko",
        "movieland",
        "service",
        "impl",
        "DefaultMovieRequestParamsService",
        "com",
        "siatsenko",
        "movieland",
        "web",
        "controller",
        "util",
        "DtoConverter",
        "org",
        "junit",
        "Before",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "org",
        "mockito",
        "Mockito",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "autoconfigure",
        "web",
        "servlet",
        "WebMvcTest",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "test",
        "context",
        "junit4",
        "SpringRunner",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "MockMvc",
        "java",
        "util",
        "org",
        "hamcrest",
        "collection",
        "IsCollectionWithSize",
        "hasSize",
        "org",
        "hamcrest",
        "CoreMatchers",
        "org",
        "mockito",
        "Mockito",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "request",
        "MockMvcRequestBuilders",
        "get",
        "org",
        "springframework",
        "test",
        "web",
        "servlet",
        "result",
        "MockMvcResultMatchers",
        "RunWith",
        "WebMvcTest",
        "Autowired",
        "mockMvc",
        "Autowired",
        "movieService",
        "Autowired",
        "requestParamsService",
        "Configuration",
        "Bean",
        "Mockito",
        "mock",
        "Bean",
        "Bean",
        "Bean",
        "movies",
        "Before",
        "movieOne",
        "movieOne",
        "setId",
        "movieOne",
        "setNameNative",
        "movieOne",
        "setNameRussian",
        "movieOne",
        "setYearOfRelease",
        "movieOne",
        "setRating",
        "movieOne",
        "setPrice",
        "movieOne",
        "setDescription",
        "movieOne",
        "setPicturePath",
        "movieOne",
        "setCountries",
        "Arrays",
        "asList",
        "movieOne",
        "setGenres",
        "Arrays",
        "asList",
        "movieOne",
        "setReviews",
        "Arrays",
        "asList",
        "Role",
        "ADMIN",
        "movies",
        "add",
        "movieOne",
        "movieTwo",
        "movieTwo",
        "setId",
        "movieTwo",
        "setNameNative",
        "movieTwo",
        "setNameRussian",
        "movieTwo",
        "setYearOfRelease",
        "movieTwo",
        "setRating",
        "movieTwo",
        "setPrice",
        "movieTwo",
        "setDescription",
        "movieTwo",
        "setPicturePath",
        "movieTwo",
        "setCountries",
        "Arrays",
        "asList",
        "movieTwo",
        "setGenres",
        "Arrays",
        "asList",
        "movieTwo",
        "setReviews",
        "Arrays",
        "asList",
        "Role",
        "USER",
        "movies",
        "add",
        "movieTwo",
        "Test",
        "when",
        "movieService",
        "getById",
        "thenReturn",
        "movies",
        "get",
        "mockMvc",
        "perform",
        "get",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "hasSize",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "hasSize",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "hasSize",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "Test",
        "requestParameters",
        "requestParamsService",
        "setSortings",
        "when",
        "movieService",
        "getAll",
        "requestParameters",
        "thenReturn",
        "movies",
        "mockMvc",
        "perform",
        "get",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "hasSize",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "Test",
        "requestParameters",
        "requestParamsService",
        "setSortings",
        "when",
        "movieService",
        "getByGenreId",
        "requestParameters",
        "thenReturn",
        "movies",
        "mockMvc",
        "perform",
        "get",
        "requestParameters",
        "andExpect",
        "status",
        "isOk",
        "andExpect",
        "content",
        "contentType",
        "MediaType",
        "APPLICATION_JSON_UTF8",
        "andExpect",
        "jsonPath",
        "hasSize",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath",
        "andExpect",
        "jsonPath"
    ],
    "literals": [
        "\"The Green Mile\"",
        "\"Зеленая миля\"",
        "\"1999\"",
        "\"Обвиненный в страшном преступлении, Джон Коффи оказывается в блоке смертников тюрьмы «Холодная гора». Вновь прибывший обладал поразительным ростом и был пугающе спокоен, что, впрочем, никак не влияло на отношение к нему начальника блока Пола Эджкомба, привыкшего исполнять приговор.\"",
        "\"https://images-na.ssl-images-amazon.com/images/M/MV5BMTUxMzQyNjA5MF5BMl5BanBnXkFtZTYwOTU2NTY3._V1._SY209_CR0,0,140,209_.jpg\"",
        "\"США\"",
        "\"фэнтези\"",
        "\"драма\"",
        "\"криминал\"",
        "\"детектив\"",
        "\"Рональд Рейнольдс\"",
        "\"ronald.reynolds66@example.com\"",
        "\"Перестал удивляться тому, что этот фильм занимает сплошь первые места во всевозможных кино рейтингах. Особенно я люблю когда при экранизации литературного произведение из него в силу специфики кинематографа исчезает ирония и появляется некий сверхреализм, обязанный удерживать зрителя у экрана каждую отдельно взятую секунду. \"",
        "\"Dances with Wolves\"",
        "\"Танцующий с волками\"",
        "\"1990\"",
        "\"Действие фильма происходит в США во времена Гражданской войны. Лейтенант американской армии Джон Данбар после ранения в бою просит перевести его на новое место службы ближе к западной границе США.\"",
        "\"https://images-na.ssl-images-amazon.com/images/M/MV5BMTY3OTI5NDczN15BMl5BanBnXkFtZTcwNDA0NDY3Mw@@._V1._SX140_CR0,0,140,209_.jpg\"",
        "\"США\"",
        "\"Великобритания\"",
        "\"драма\"",
        "\"приключения\"",
        "\"вестерн\"",
        "\"Амелия Кэннеди\"",
        "\"amelia.kennedy58@example.com\"",
        "\"Нетленный шедевр мирового кинематографа, который можно пересматривать десятки раз и получать все такой — же, извините за выражение, кайф от просмотра. Минусы у фильма, конечно, есть, но черт возьми. Их просто не хочется замечать! Ты настолько поглощен просмотром фильма, что просто не хочется придираться к разным мелочам. \"",
        "\"/movie/{movieId}\"",
        "\"id\"",
        "\"nameNative\"",
        "\"The Green Mile\"",
        "\"nameRussian\"",
        "\"Зеленая миля\"",
        "\"yearOfRelease\"",
        "\"1999\"",
        "\"rating\"",
        "\"price\"",
        "\"description\"",
        "\"Обвиненный в страшном преступлении, Джон Коффи оказывается в блоке смертников тюрьмы «Холодная гора». Вновь прибывший обладал поразительным ростом и был пугающе спокоен, что, впрочем, никак не влияло на отношение к нему начальника блока Пола Эджкомба, привыкшего исполнять приговор.\"",
        "\"picturePath\"",
        "\"https://images-na.ssl-images-amazon.com/images/M/MV5BMTUxMzQyNjA5MF5BMl5BanBnXkFtZTYwOTU2NTY3._V1._SY209_CR0,0,140,209_.jpg\"",
        "\"countries\"",
        "\"countries[0].id\"",
        "\"countries[0].name\"",
        "\"США\"",
        "\"genres\"",
        "\"genres[0].id\"",
        "\"genres[0].name\"",
        "\"фэнтези\"",
        "\"genres[1].id\"",
        "\"genres[1].name\"",
        "\"драма\"",
        "\"genres[2].id\"",
        "\"genres[2].name\"",
        "\"криминал\"",
        "\"genres[3].id\"",
        "\"genres[3].name\"",
        "\"детектив\"",
        "\"reviews\"",
        "\"reviews[0].id\"",
        "\"reviews[0].text\"",
        "\"Перестал удивляться тому, что этот фильм занимает сплошь первые места во всевозможных кино рейтингах. Особенно я люблю когда при экранизации литературного произведение из него в силу специфики кинематографа исчезает ирония и появляется некий сверхреализм, обязанный удерживать зрителя у экрана каждую отдельно взятую секунду. \"",
        "\"reviews[0].user.id\"",
        "\"reviews[0].user.name\"",
        "\"Рональд Рейнольдс\"",
        "\"/movie\"",
        "\"$\"",
        "\"$[0].id\"",
        "\"$[0].nameNative\"",
        "\"The Green Mile\"",
        "\"$[0].nameRussian\"",
        "\"Зеленая миля\"",
        "\"$[0].yearOfRelease\"",
        "\"1999\"",
        "\"$[0].rating\"",
        "\"$[0].price\"",
        "\"$[0].picturePath\"",
        "\"https://images-na.ssl-images-amazon.com/images/M/MV5BMTUxMzQyNjA5MF5BMl5BanBnXkFtZTYwOTU2NTY3._V1._SY209_CR0,0,140,209_.jpg\"",
        "\"/movie/genre/{genreId}\"",
        "\"$\"",
        "\"$[0].id\"",
        "\"$[0].nameNative\"",
        "\"The Green Mile\"",
        "\"$[0].nameRussian\"",
        "\"Зеленая миля\"",
        "\"$[0].yearOfRelease\"",
        "\"1999\"",
        "\"$[0].rating\"",
        "\"$[0].price\"",
        "\"$[0].picturePath\"",
        "\"https://images-na.ssl-images-amazon.com/images/M/MV5BMTUxMzQyNjA5MF5BMl5BanBnXkFtZTYwOTU2NTY3._V1._SY209_CR0,0,140,209_.jpg\""
    ],
    "variables": [
        "mockMvc",
        "movieService",
        "requestParamsService"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "MovieService",
        "movieService",
        "MovieController",
        "movieController",
        "DtoConverter",
        "dtoConverter",
        "RequestParamsService",
        "requestParamsService",
        "beforeTest",
        "GetById",
        "getAll",
        "getByGenreId"
    ],
    "classes": [
        "MovieControllerTest",
        "TestContext"
    ]
}