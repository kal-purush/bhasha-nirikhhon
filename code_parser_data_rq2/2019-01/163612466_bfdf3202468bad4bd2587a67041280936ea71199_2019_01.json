{
    "identifiers": [
        "mapSize",
        "mapSize",
        "mapSize",
        "MAP_SIZE",
        "mapSize",
        "i",
        "mapSize",
        "i",
        "i",
        "j",
        "mapSize",
        "j",
        "i",
        "j",
        "a1",
        "a2",
        "a1",
        "a2",
        "i",
        "a1",
        "i",
        "j",
        "a1",
        "j",
        "a1",
        "i",
        "j",
        "a2",
        "i",
        "j",
        "i",
        "i",
        "j",
        "j",
        "i",
        "i",
        "j",
        "i",
        "j",
        "j",
        "i",
        "j",
        "i",
        "j",
        "k",
        "k",
        "i",
        "j",
        "i",
        "j",
        "i",
        "j",
        "direction",
        "i",
        "i",
        "changedTiles",
        "i",
        "j",
        "j",
        "changedTiles",
        "i",
        "j",
        "direction",
        "direction",
        "Direction",
        "Direction",
        "j",
        "j",
        "loop1Exit",
        "Direction",
        "Direction",
        "i",
        "i",
        "loop1Exit",
        "direction",
        "direction",
        "Direction",
        "i",
        "Direction",
        "i",
        "Direction",
        "j",
        "Direction",
        "j",
        "direction",
        "direction",
        "Direction",
        "i",
        "i",
        "loop2Exit",
        "Direction",
        "i",
        "i",
        "loop2Exit",
        "Direction",
        "j",
        "j",
        "loop2Exit",
        "Direction",
        "j",
        "j",
        "loop2Exit",
        "direction",
        "direction",
        "Direction",
        "Direction",
        "k",
        "i",
        "Direction",
        "Direction",
        "k",
        "j",
        "direction",
        "direction",
        "Direction",
        "k",
        "Cell",
        "k",
        "j",
        "Direction",
        "k",
        "Cell",
        "k",
        "j",
        "Direction",
        "k",
        "Cell",
        "i",
        "k",
        "Direction",
        "k",
        "Cell",
        "i",
        "k",
        "loop1Exit",
        "loop2Init",
        "direction",
        "loop2Exit",
        "i",
        "j",
        "loop2",
        "direction",
        "i",
        "j",
        "Cell",
        "i",
        "j",
        "loop3Init",
        "direction",
        "loop3",
        "direction",
        "k",
        "k",
        "loopTile",
        "loopTile",
        "loopTileValue",
        "newTile",
        "loopTile",
        "loopTileValue",
        "currentValue",
        "loopTileValue",
        "currentValue",
        "changedTiles",
        "loopTile",
        "loopTile",
        "newTile",
        "loopTile",
        "loopTileValue",
        "currentValue",
        "changedTiles",
        "loopTile",
        "loopTile",
        "newTile",
        "i",
        "newTile",
        "j",
        "loop2",
        "direction",
        "i",
        "j",
        "i",
        "j",
        "somethingChanged",
        "newTile",
        "newTile",
        "newTileValue",
        "newTile",
        "newTile",
        "currentValue",
        "newTile",
        "newTile",
        "loop2",
        "direction",
        "newTileValue",
        "currentValue",
        "newTile",
        "newTile",
        "currentValue",
        "changedTiles",
        "newTile",
        "newTile",
        "currentValue",
        "loop2",
        "direction",
        "loop2",
        "direction",
        "loop2Exit",
        "loop1",
        "direction",
        "somethingChanged",
        "direction",
        "direction",
        "somethingChanged"
    ],
    "literals": [],
    "variables": [
        "i",
        "j",
        "equal",
        "i",
        "j",
        "i",
        "j",
        "k",
        "i",
        "j",
        "somethingChanged",
        "changedTiles",
        "i",
        "j",
        "loop1Exit",
        "loop2Exit",
        "i",
        "j",
        "k",
        "loop1",
        "loop2Init",
        "loop2",
        "loop3Init",
        "loop3",
        "currentValue",
        "newTile",
        "loopTile",
        "loopTileValue",
        "newTileValue",
        "somethingChanged"
    ],
    "comments": [
        "sets standard map size to 4 x 4 or whatever is setted up in a constant",
        "initializes map with zeros",
        "checks if the map is full",
        "returns true if there are no empty cells and false otherwise",
        "for square two-dimensinal arrays",
        "checks whether something will change if user will make a move",
        "if map is not full we always can make a move",
        "map is full so we can make a move only if there are two adjacent tiles with the same value",
        "let's check only down and right sides to avoid repetitions",
        "we can move in a vertical direction",
        "we can move in a horizontal direction",
        "move is impossible",
        "spawns new 2 or 4 tile to the map or does nothing if the map is full",
        "gets random empty cell and spawns there a tile",
        "makes a move in a specified direction and returns true if the map was changed and false otherwise",
        "flag that is true if at least one tile has changed it's location",
        "true when we have to exit from this loop",
        "loops variables",
        "needs for every iteration through first loop, iterates first loop variable",
        "j from 0 to mapSize",
        "i from 0 to mapSize",
        "needs for loop 2 variables initialization",
        "needs for every iteration through first loop, iterates second loop variable",
        "i from 1 to mapSize",
        "i from mapSize - 2 to 0 inclusive",
        "j from 1 to mapSize",
        "j from mapSize - 2 to 0 inclusive",
        "needs for loop 2 variable initialization",
        "needs for every iteration through third loop, iterates k and",
        "returns two values which are indexes for current tile looking for",
        "main loop",
        "loop code",
        "empty tile, can't be transfered",
        "current tile that may be transfered",
        "tile where we are going to place the current one",
        "tile that we are currently looking at in the loop represented as map coordinates",
        "out of range",
        "tile that we are currently looking at value",
        "empty loop, current can be transfered here",
        "different tile, search stops",
        "the same tile, we should transfer the current one there so the search stops",
        "the same tile but it was already changed so we can't use it and have to use the previous one",
        "we are in deadlock, can't transfer current tile",
        "erasing current value in map",
        "simply inserting current tile if insertion place is empty",
        "doubling new tile value, increasing score, marking new tile as changed",
        "makes a move in a specified direction and spawns new tile if it's possible"
    ],
    "docstrings": [
        "* array that stores information about tiles that was changed \n\t\t * we need it because by the rules we can't change the same tile twice so that 2222 \n\t\t * can't be transformed to 8, we can transform it only to 44",
        "* loop 1 - loop through columns or rows\n\t\t * loop 2 - nested loop through tiles in a current column or row\n\t\t * loop 3 - third loop which is when the current tile is already choosed and we \n\t\t *\t \t\thave to watch the current column / row through to find the deadlock"
    ],
    "functions": [
        "isFull",
        "arraysEqual",
        "isMovePossible",
        "spawnNew",
        "moveMap",
        "move"
    ],
    "classes": [
        "Board"
    ]
}