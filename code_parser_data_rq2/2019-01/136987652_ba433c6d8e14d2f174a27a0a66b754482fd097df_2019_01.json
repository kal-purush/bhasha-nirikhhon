{
    "identifiers": [
        "InMemoryProject",
        "dockerBaseFingerprint",
        "describe",
        "describe",
        "it",
        "InMemoryProject",
        "updateMeDockerfile",
        "dockerBaseFingerprint",
        "p",
        "result",
        "expectedResult",
        "describe",
        "it",
        "InMemoryProject",
        "dockerBaseFingerprint",
        "p",
        "result"
    ],
    "literals": [
        "\"@atomist/automation-client\"",
        "\"power-assert\"",
        "\"../../lib/fingerprints/docker\"",
        "FROM sforzando-dockerv2-local.jfrog.io/java-atomist:0.11.1-20181115141152\n\nMAINTAINER Jim Clark <jim@atomist.com>\n\nRUN mkdir -p /usr/src/app \\\n    && mkdir -p /usr/src/app/bin \\\n    && mkdir -p /usr/src/app/lib\n\nWORKDIR /usr/src/app\n\nCOPY target/lib /usr/src/app/lib\n\nCOPY target/metajar/incoming-webhooks.jar /usr/src/app/\n\nCMD [\"-Djava.net.preferIPv4Stack=true\", \"-jar\", \"/usr/src/app/incoming-webhooks.jar\", \"-Dclojure.core.async.pool-size=20\"]\n\nEXPOSE 8080",
        "\"docker-base-image-sforzando-dockerv2-local.jfrog.io/java-atomist\"",
        "\"dbi-sforzando-dockerv2-local.jfrog.io/java-atomist\"",
        "\"0.0.1\"",
        "\"sforzando-dockerv2-local.jfrog.io/java-atomist\"",
        "\"0.11.1-20181115141152\"",
        "\"8c81bef863e2ea2bde5d5e0567f8abba3c325eecd21135559b945c05dbf91da2\"",
        "\"dockerBaseFingerprint\"",
        "\"extract valid fingerprint\"",
        "\"should extract valid fingerprint\"",
        "\"foo\"",
        "\"26e18ee3e30c0df0f0f2ff0bc42a4bd08a7024b9\"",
        "\"master\"",
        "\"foo\"",
        "\"https://fake.com/foo/foo.git\"",
        "\"docker/Dockerfile\"",
        "\"empty dockerfile, invalid fingerprint\"",
        "\"should return undefined\"",
        "\"foo\"",
        "\"26e18ee3e30c0df0f0f2ff0bc42a4bd08a7024b9\"",
        "\"master\"",
        "\"foo\"",
        "\"https://fake.com/foo/foo.git\"",
        "\"Dockerfile\"",
        "\"\""
    ],
    "variables": [
        "updateMeDockerfile",
        "expectedResult",
        "p",
        "result",
        "p",
        "result"
    ],
    "comments": [
        "describe(\"applyDockerBaseFingerprint\", async () => {",
        "it(\"should successfully update the base image\", async () => {",
        "const p = InMemoryProject.from({",
        "repo: \"foo\",",
        "sha: \"26e18ee3e30c0df0f0f2ff0bc42a4bd08a7024b9\",",
        "branch: \"master\",",
        "owner: \"foo\",",
        "url: \"https://fake.com/foo/foo.git\",",
        "}, ({ path: \"Dockerfile\", content: updateMeDockerfile })) as any;",
        "const result = await applyDockerBaseFingerprint(p, expectedResult);",
        "assert.strictEqual(result, true);",
        "});",
        "it(\"should have updated the dockerfile content\", async () => {",
        "const p = InMemoryProject.from({",
        "repo: \"foo\",",
        "sha: \"26e18ee3e30c0df0f0f2ff0bc42a4bd08a7024b9\",",
        "branch: \"master\",",
        "owner: \"foo\",",
        "url: \"https://fake.com/foo/foo.git\",",
        "}, ({ path: \"Dockerfile\", content: updateMeDockerfile })) as any;",
        "const t = (p as InMemoryProject);",
        "await applyDockerBaseFingerprint(p, expectedResult);",
        "const updatedDockerFileHandle = await t.getFile(\"Dockerfile\");",
        "const updatedDockerfile = await updatedDockerFileHandle.getContent();",
        "assert.strictEqual(updatedDockerfile, dummyDockerFile);",
        "});",
        "});"
    ],
    "docstrings": [
        "* Copyright Â© 2018 Atomist, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [],
    "classes": []
}