{
    "identifiers": [
        "json",
        "lxml",
        "etree",
        "fromstring",
        "re",
        "requests",
        "logging",
        "elasticsearch",
        "hysds",
        "celery",
        "app",
        "logging",
        "basicConfig",
        "format",
        "log_format",
        "level",
        "logging",
        "INFO",
        "logging",
        "Filter",
        "record",
        "hasattr",
        "record",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "INFO",
        "logger",
        "addFilter",
        "LogFilter",
        "app",
        "conf",
        "elasticsearch",
        "Elasticsearch",
        "es_url",
        "session",
        "info",
        "format",
        "info",
        "info",
        "manifest_url",
        "replace",
        "url",
        "manifest_url2",
        "manifest_url",
        "session",
        "get",
        "url",
        "verify",
        "logger",
        "info",
        "response",
        "url",
        "response",
        "status_code",
        "response",
        "raise_for_status",
        "response",
        "content",
        "xml",
        "re",
        "findall",
        "xml",
        "match",
        "matches",
        "match",
        "match",
        "prefix",
        "ns",
        "nss",
        "manifest",
        "get_namespaces",
        "manifest",
        "fromstring",
        "manifest",
        "x",
        "xpath",
        "namespaces",
        "ns",
        "ipf",
        "met",
        "version",
        "version",
        "met",
        "met",
        "met",
        "met",
        "id",
        "ipf_version",
        "ES",
        "update",
        "index",
        "_index",
        "doc_type",
        "_type",
        "id",
        "id",
        "body",
        "ipf_version",
        "json",
        "loads",
        "open",
        "read",
        "ctx",
        "ctx",
        "requests",
        "session",
        "user",
        "password",
        "user",
        "password",
        "get_dataset_json",
        "met",
        "version",
        "met",
        "ds",
        "get_manifest",
        "session",
        "info",
        "requests",
        "session",
        "user",
        "password",
        "user",
        "password",
        "get_ipf",
        "manifest",
        "update_ipf",
        "id",
        "ipf"
    ],
    "literals": [
        "\"[%(asctime)s: %(levelname)s/%(funcName)s] %(message)s\"",
        "'id'",
        "'--'",
        "'ipf_scrape'",
        "\"GRQ_ES_URL\"",
        "\"grq_v2.0_acquisition-s1-iw_slc\"",
        "\"acquisition-S1-IW_SLC\"",
        "\"{}/Nodes('{}')/Nodes('manifest.safe')/$value\"",
        "'met'",
        "'alternative'",
        "'met'",
        "'filename'",
        "'/apihub/'",
        "'/dhus/'",
        "\"url: %s\"",
        "r'\\s+xmlns:?(\\w*?)\\s*=\\s*[\\'\"](.*?)[\\'\"]'",
        "''",
        "'_default'",
        "'.//xmlData/safe:processing/safe:facility/safe:software/@version'",
        "\"version\"",
        "\"label\"",
        "'id'",
        "\"location\"",
        "'location'",
        "\"starttime\"",
        "'sensingStart'",
        "\"endtime\"",
        "'sensingStop'",
        "\"doc\"",
        "\"processing_version\"",
        "\"__main__\"",
        "\"_context.json\"",
        "\"r\"",
        "\"acq_id\"",
        "\"acq_met\"",
        "\"v2.0\"",
        "'met'",
        "'ds'"
    ],
    "variables": [
        "log_format",
        "record",
        "id",
        "logger",
        "es_url",
        "_index",
        "_type",
        "ES",
        "manifest_url",
        "manifest_url2",
        "response",
        "nss",
        "matches",
        "prefix",
        "ns",
        "prefix",
        "nss",
        "prefix",
        "ns",
        "x",
        "ipf",
        "ctx",
        "id",
        "met",
        "user",
        "password",
        "session",
        "session",
        "auth",
        "ds",
        "info",
        "manifest",
        "session",
        "session",
        "auth",
        "ipf"
    ],
    "comments": [
        "disable extraction of manifest (takes too long); will be",
        "extracted when needed during standard product pipeline",
        "logger.info(\"info: {}\".format(json.dumps(info, indent=2)))",
        "append processing version (ipf)",
        "get session"
    ],
    "docstrings": [
        "\"\"\"Get manifest information.\"\"\"",
        "\"\"\"Take an xml string and return a dict of namespace prefixes to\n       namespaces mapping.\"\"\"",
        "\"\"\"Generated HySDS dataset JSON from met JSON.\"\"\"",
        "'''\n    Main program that find IPF version for acquisition\n    '''"
    ],
    "functions": [
        "get_manifest",
        "get_namespaces",
        "get_ipf",
        "get_dataset_json",
        "update_ipf"
    ],
    "classes": [
        "LogFilter"
    ]
}