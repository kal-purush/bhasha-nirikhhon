{
    "identifiers": [
        "print_function",
        "argparse",
        "os",
        "re",
        "subprocess",
        "sys",
        "os",
        "path",
        "dirname",
        "os",
        "path",
        "realpath",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "re",
        "compile",
        "s",
        "COLOR",
        "s",
        "s",
        "s",
        "DEBUG",
        "s",
        "aspell",
        "word",
        "re",
        "findall",
        "CAMEL_CASE",
        "word",
        "len",
        "parts",
        "part",
        "parts",
        "check_comment",
        "aspell",
        "part",
        "comment",
        "regex",
        "group",
        "secondary",
        "m",
        "regex",
        "finditer",
        "comment",
        "secondary",
        "secondary",
        "search",
        "m",
        "group",
        "group",
        "m",
        "start",
        "group",
        "m",
        "end",
        "group",
        "comment",
        "start",
        "end",
        "start",
        "comment",
        "end",
        "comment",
        "aspell",
        "offset",
        "comment",
        "mask_with_regex",
        "comment",
        "TODO",
        "mask_with_regex",
        "comment",
        "METHOD_DOC",
        "mask_with_regex",
        "comment",
        "BASE64",
        "NUMBER",
        "mask_with_regex",
        "comment",
        "HEX",
        "mask_with_regex",
        "comment",
        "HEX_SIG",
        "mask_with_regex",
        "comment",
        "PREFIXED_HEX",
        "mask_with_regex",
        "comment",
        "UUID",
        "mask_with_regex",
        "comment",
        "IPV6_ADDR",
        "mask_with_regex",
        "comment",
        "QUOTED_WORD",
        "mask_with_regex",
        "comment",
        "FLAG",
        "mask_with_regex",
        "comment",
        "USER",
        "comment",
        "comment",
        "strip",
        "comment",
        "isalnum",
        "comment",
        "aspell",
        "poll",
        "aspell",
        "returncode",
        "aspell",
        "returncode",
        "sys",
        "exit",
        "debug",
        "comment",
        "aspell",
        "stdin",
        "write",
        "comment",
        "os",
        "linesep",
        "aspell",
        "stdin",
        "flush",
        "aspell",
        "stdout",
        "readline",
        "strip",
        "debug",
        "result",
        "result",
        "result",
        "t",
        "t",
        "t",
        "result",
        "split",
        "t",
        "errors",
        "append",
        "original",
        "rem",
        "offset",
        "t",
        "t",
        "rem",
        "split",
        "rem",
        "split",
        "rem",
        "split",
        "errors",
        "append",
        "original",
        "o",
        "offset",
        "suggestions",
        "result",
        "sys",
        "exit",
        "err",
        "err",
        "errors",
        "check_camel_case",
        "aspell",
        "err",
        "errors",
        "aspell",
        "file",
        "lines",
        "line",
        "lines",
        "line_num",
        "in_comment",
        "MULTI_COMMENT_END",
        "search",
        "line",
        "mc_end",
        "errors",
        "check_comment",
        "aspell",
        "line",
        "num",
        "errors",
        "check_comment",
        "aspell",
        "mc_end",
        "group",
        "num",
        "mc_end",
        "end",
        "in_comment",
        "inline",
        "INLINE_COMMENT",
        "finditer",
        "line",
        "last",
        "inline",
        "lastindex",
        "errors",
        "check_comment",
        "aspell",
        "inline",
        "start",
        "m",
        "inline",
        "group",
        "m",
        "num",
        "inline",
        "end",
        "m",
        "last",
        "len",
        "line",
        "MULTI_COMMENT_START",
        "search",
        "line",
        "last",
        "mc_start",
        "errors",
        "check_comment",
        "aspell",
        "mc_start",
        "start",
        "mc_start",
        "group",
        "num",
        "errors",
        "file",
        "line_num",
        "word",
        "offset",
        "suggestions",
        "reversed",
        "errors",
        "line",
        "offset",
        "red",
        "word",
        "line",
        "offset",
        "len",
        "word",
        "prefix",
        "line",
        "rstrip",
        "MARK",
        "len",
        "prefix",
        "word",
        "offset",
        "suggestions",
        "errors",
        "marks",
        "offset",
        "last",
        "offset",
        "marks",
        "num",
        "dictionary",
        "open",
        "dictionary",
        "f",
        "f",
        "readlines",
        "w",
        "w",
        "words",
        "len",
        "w",
        "w",
        "word",
        "words",
        "word",
        "isupper",
        "words",
        "word",
        "lower",
        "os",
        "path",
        "join",
        "TOOLS_DIR",
        "open",
        "pws",
        "f",
        "f",
        "write",
        "len",
        "words",
        "word",
        "words",
        "f",
        "write",
        "word",
        "pws",
        "subprocess",
        "Popen",
        "aspell_args",
        "bufsize",
        "stdin",
        "subprocess",
        "PIPE",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "STDOUT",
        "universal_newlines",
        "aspell",
        "stdout",
        "readline",
        "aspell",
        "files",
        "dictionary",
        "start_aspell",
        "dictionary",
        "path",
        "files",
        "open",
        "path",
        "f",
        "f",
        "readlines",
        "num",
        "check_file",
        "aspell",
        "path",
        "lines",
        "aspell",
        "stdin",
        "close",
        "aspell",
        "wait",
        "num",
        "os",
        "path",
        "join",
        "TOOLS_DIR",
        "argparse",
        "ArgumentParser",
        "description",
        "parser",
        "add_argument",
        "choices",
        "help",
        "parser",
        "add_argument",
        "nargs",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "action",
        "help",
        "parser",
        "add_argument",
        "default_dictionary",
        "help",
        "parser",
        "add_argument",
        "choices",
        "help",
        "parser",
        "parse_args",
        "args",
        "color",
        "args",
        "color",
        "sys",
        "stdout",
        "isatty",
        "args",
        "debug",
        "args",
        "mark",
        "args",
        "target_paths",
        "target_paths",
        "p",
        "paths",
        "root",
        "_",
        "files",
        "os",
        "walk",
        "p",
        "target_paths",
        "os",
        "path",
        "join",
        "root",
        "f",
        "f",
        "files",
        "os",
        "path",
        "splitext",
        "f",
        "exts",
        "execute",
        "target_paths",
        "args",
        "dictionary"
    ],
    "literals": [
        "r'(?:^|[^:\"])//(.*?)$|/\\*+(.*?)\\*+/'",
        "r'/\\*(.*?)$'",
        "r'^(.*?)\\*/'",
        "r'(TODO|NOTE)\\s*\\(@?[A-Za-z0-9-]+\\):?'",
        "'@(param\\s+\\w+|return(\\s+const)?\\s+\\w+)'",
        "r'[A-Z]?[a-z]+|[A-Z]+(?=[A-Z]|$)'",
        "r'^[\\s*]+([A-Za-z0-9/+=]{16,})\\s*$'",
        "r'\\d'",
        "r'(?:^|\\s|[(])([A-Fa-f0-9]{8,})(?:$|\\s|[.,)])'",
        "r'\\W([A-Fa-f0-9]{2}(:[A-Fa-f0-9]{2})+)\\W'",
        "r'0x[A-Fa-f0-9]+'",
        "r'[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}'",
        "r'\\W([A-Fa-f0-9]+:[A-Fa-f0-9:]+/[0-9]{1,3})\\W'",
        "r'([\"\\'*])[A-Za-z0-9]+(\\1)'",
        "r'\\W([-%][A-Za-z]+)'",
        "r'\\W(@[A-Za-z0-9-]+)'",
        "\"\\33[1;31m\"",
        "\"\\033[0m\"",
        "' '",
        "\"\"",
        "\"\"",
        "' '",
        "\"aspell quit unexpectedly: return code %d\"",
        "\"ASPELL< %s\"",
        "\"ASPELL> %s\"",
        "\"\"",
        "\"*\"",
        "\"-\"",
        "\"+\"",
        "\" \"",
        "\"#\"",
        "'&'",
        "'?'",
        "\" \"",
        "\": \"",
        "\", \"",
        "\"aspell produced unexpected output: %s\"",
        "\"%s:%d:\"",
        "\"%s%s\"",
        "' '",
        "' '",
        "'^'",
        "'r'",
        "\"#\"",
        "'.aspell.en.pws'",
        "'w'",
        "\"personal_ws-1.1 en %d\\n\"",
        "\"aspell\"",
        "\"pipe\"",
        "\"--run-together\"",
        "\"--encoding=utf-8\"",
        "\"--personal=\"",
        "'r'",
        "\"Checked %d lines of comments\"",
        "\"__main__\"",
        "'spelling_dictionary.txt'",
        "\"Check comment spelling.\"",
        "'operation_type'",
        "'check'",
        "\"specify if the run should 'check' or 'fix' spelling.\"",
        "'target_paths'",
        "\"*\"",
        "\"specify the files for the script to process.\"",
        "'-d'",
        "'--debug'",
        "'store_true'",
        "\"Debug spell checker subprocess.\"",
        "'--mark'",
        "'store_true'",
        "\"Emits extra output to mark misspelled words.\"",
        "'--dictionary'",
        "\"specify a location for Envoy-specific dictionary words\"",
        "'--color'",
        "'on'",
        "'off'",
        "'auto'",
        "\"auto\"",
        "\"Controls colorized output. Auto limits color to TTY devices.\"",
        "\"on\"",
        "\"auto\"",
        "'.cc'",
        "'.h'",
        "'.proto'",
        "'./api'",
        "'./include'",
        "'./source'",
        "'./test'"
    ],
    "variables": [
        "TOOLS_DIR",
        "INLINE_COMMENT",
        "MULTI_COMMENT_START",
        "MULTI_COMMENT_END",
        "TODO",
        "METHOD_DOC",
        "CAMEL_CASE",
        "BASE64",
        "NUMBER",
        "HEX",
        "HEX_SIG",
        "PREFIXED_HEX",
        "UUID",
        "IPV6_ADDR",
        "QUOTED_WORD",
        "FLAG",
        "USER",
        "DEBUG",
        "COLOR",
        "MARK",
        "parts",
        "start",
        "end",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "comment",
        "errors",
        "result",
        "t",
        "original",
        "rem",
        "_",
        "rem",
        "o",
        "rem",
        "suggestions",
        "errors",
        "in_comment",
        "line_num",
        "num",
        "errors",
        "last",
        "mc_end",
        "last",
        "in_comment",
        "m",
        "last",
        "mc_start",
        "in_comment",
        "prefix",
        "line",
        "marks",
        "last",
        "last",
        "words",
        "words",
        "words",
        "pws",
        "aspell_args",
        "aspell",
        "aspell",
        "num",
        "lines",
        "default_dictionary",
        "parser",
        "args",
        "COLOR",
        "DEBUG",
        "MARK",
        "target_paths",
        "exts",
        "target_paths",
        "paths"
    ],
    "comments": [
        "! /usr/bin/env python",
        "TODO(zuercher): provide support for fixing errors",
        "e.g., // comment OR /* comment */ (single line)",
        "Limit the characters that may precede // to help filter out some code",
        "mistakenly processed as a comment.",
        "e.g., /* comment */ (multiple lines)",
        "e.g., TODO(username): blah",
        "e.g., ignore parameter names in doxygen comments",
        "Camel Case splitter",
        "Base64: we assume base64 encoded data in tests is never mixed with",
        "other comments on a single line.",
        "Hex: match 1) longish strings of hex digits (to avoid matching \"add\" and",
        "other simple words that happen to look like hex), 2) 2 or more two digit",
        "hex numbers separated by colons, 3) \"0x\" prefixed hex numbers of any length,",
        "or 4) UUIDs",
        "Matches e.g. FC00::/8 or 2001::abcd/64. Does not match ::1/128, but",
        "aspell ignores that anyway.",
        "Quoted words: \"word\", 'word', or *word*",
        "Command flags (e.g. \"-rf\") and percent specifiers",
        "Bare github users (e.g. @user)",
        "Split camel case words and run them through the dictionary. Returns",
        "True if they are all spelled correctly, False if word is not camel",
        "case or has a misspelled sub-word.",
        "Words is not camel case: the previous result stands.",
        "Part of camel case word is misspelled, the result stands.",
        "Find occurrences of the regex within comment and replace the numbered",
        "matching group with spaces. If secondary is defined, the matching",
        "group must also match secondary to be masked.",
        "Checks the comment at offset against the aspell pipe. Result is an array",
        "of tuples where each tuple is the misspelled word, it's offset from the",
        "start of the line, and an array of possible replacements.",
        "Replace TODO comments with spaces to preserve string offsets.",
        "Ignore @param varname",
        "Similarly, look for base64 sequences, but they must have at least one",
        "digit.",
        "Various hex constants:",
        "Single words in quotes:",
        "Command flags:",
        "Github user refs:",
        "Everything got stripped, return early.",
        "aspell does not like leading punctuation",
        "handled all results",
        "-: found run-together words in dictionary",
        "+: found root word in dictionary",
        "& <original> <N> <offset>: m1, m2, ... mN, g1, g2, ...",
        "? <original> 0 <offset>: g1, g2, ....",
        "# <original> <offset>",
        "Not in dictionary, but no suggestions",
        "Near misses and/or guesses",
        "drop N (or 0)",
        "o is offset from start of comment",
        "Retry camel case words after splitting them.",
        "Full line is within a multi-line comment.",
        "Start of line is the end of a multi-line comment.",
        "Single-line comment",
        "1 or 2 depending on group matched",
        "New multi-lie comment starts at end of line.",
        "Highlight misspelled words.",
        "Print a caret at the start of each misspelled word.",
        "Read the custom dictionary",
        "Strip comments.",
        "Allow acronyms and abbreviations to be spelled in lowercase.",
        "(e.g. Convert \"HTTP\"\" into \"HTTP\" and \"http\" which also matches",
        "\"Http\").",
        "Generate aspell personal dictionary.",
        "Start an aspell process.",
        "Read the version line that aspell emits on startup."
    ],
    "docstrings": [
        "*: found in dictionary"
    ],
    "functions": [
        "red",
        "debug",
        "check_camel_case",
        "mask_with_regex",
        "check_comment",
        "check_file",
        "start_aspell",
        "execute"
    ],
    "classes": []
}