{
    "identifiers": [
        "json",
        "textwrap",
        "os",
        "makedirs",
        "path",
        "requests",
        "yaml",
        "yaml",
        "representer",
        "SafeRepresenter",
        "style",
        "representer",
        "dumper",
        "data",
        "representer",
        "dumper",
        "data",
        "style",
        "scalar",
        "new_representer",
        "change_style",
        "SafeRepresenter",
        "represent_str",
        "yaml",
        "add_representer",
        "LiteralStr",
        "represent_literal_str",
        "s",
        "s",
        "replace",
        "replace",
        "indent",
        "yaml",
        "dump",
        "width",
        "default_flow_style",
        "escape",
        "text",
        "textwrap",
        "indent",
        "text",
        "indent",
        "text",
        "resource_name",
        "content",
        "url",
        "destination",
        "header",
        "resource_name",
        "url",
        "condition_map",
        "get",
        "resource_name",
        "resource_name",
        "LiteralStr",
        "content",
        "lines",
        "yaml_str_repr",
        "filename_struct",
        "lines",
        "resource_name",
        "destination",
        "filename",
        "makedirs",
        "destination",
        "exist_ok",
        "open",
        "new_filename",
        "f",
        "f",
        "write",
        "lines",
        "new_filename",
        "init_yaml_styles",
        "chart",
        "charts",
        "chart",
        "requests",
        "get",
        "chart",
        "text",
        "chart",
        "yaml",
        "load",
        "raw_text",
        "yaml_text",
        "group",
        "groups",
        "resource",
        "content",
        "group",
        "items",
        "write_group_to_file",
        "resource",
        "replace",
        "content",
        "chart",
        "chart",
        "chart",
        "json",
        "loads",
        "raw_text",
        "json_text",
        "get",
        "flat_structure",
        "path",
        "basename",
        "chart",
        "replace",
        "write_group_to_file",
        "resource",
        "json",
        "dumps",
        "json_text",
        "indent",
        "chart",
        "chart",
        "resource",
        "content",
        "json_text",
        "items",
        "write_group_to_file",
        "resource",
        "replace",
        "json",
        "dumps",
        "content",
        "indent",
        "chart",
        "chart",
        "main"
    ],
    "literals": [
        "'source'",
        "'https://raw.githubusercontent.com/coreos/prometheus-operator/master/contrib/kube-prometheus/manifests/grafana-dashboardDefinitions.yaml'",
        "'destination'",
        "'../templates/grafana/dashboards'",
        "'type'",
        "'yaml'",
        "'source'",
        "'https://raw.githubusercontent.com/etcd-io/etcd/master/Documentation/op-guide/grafana.json'",
        "'destination'",
        "'../templates/grafana/dashboards'",
        "'type'",
        "'json'",
        "'source'",
        "'https://raw.githubusercontent.com/helm/charts/master/stable/prometheus-operator/dashboards/grafana-coredns-k8s.json'",
        "'destination'",
        "'../templates/grafana/dashboards'",
        "'type'",
        "'json'",
        "'grafana-coredns-k8s'",
        "' .Values.coreDns.enabled'",
        "'etcd'",
        "' .Values.kubeEtcd.enabled'",
        "'|'",
        "\"{{\"",
        "\"{{`{{\"",
        "\"}}\"",
        "\"}}`}}\"",
        "' '",
        "'name'",
        "'url'",
        "'condition'",
        "''",
        "'.json'",
        "'{{- end }}'",
        "'.yaml'",
        "\"%s/%s\"",
        "'w'",
        "\"Generated %s\"",
        "\"Generating rules from %s\"",
        "'source'",
        "'source'",
        "'type'",
        "'yaml'",
        "'items'",
        "'data'",
        "'.json'",
        "''",
        "'source'",
        "'destination'",
        "'type'",
        "'json'",
        "'annotations'",
        "'source'",
        "'.json'",
        "''",
        "'source'",
        "'destination'",
        "'.json'",
        "''",
        "'source'",
        "'destination'",
        "\"Finished\"",
        "'__main__'"
    ],
    "variables": [
        "scalar",
        "scalar",
        "style",
        "charts",
        "condition_map",
        "header",
        "represent_literal_str",
        "text",
        "text",
        "text",
        "lines",
        "filename_struct",
        "filename",
        "new_filename",
        "raw_text",
        "yaml_text",
        "groups",
        "json_text",
        "flat_structure",
        "resource"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "https://stackoverflow.com/a/20863889/961092",
        "Source files list",
        "Additional conditions map",
        "standard header",
        "to disable line wrapping",
        "to disable multiple items on single line",
        "escape {{ and }} for helm",
        "initialize header",
        "rules themselves",
        "footer",
        "make sure directories to store the file exist",
        "recreate the file",
        "read the rules, create a new template file per group",
        "is it already a dashboard structure or is it nested (etcd case)?"
    ],
    "docstrings": [
        "\"\"\"Fetch dashboards from provided urls into this chart.\"\"\"",
        "'''# Generated from '%(name)s' from %(url)s\n{{- if and .Values.grafana.enabled .Values.grafana.defaultDashboardsEnabled%(condition)s }}\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: {{ printf \"%%s-%%s\" (include \"prometheus-operator.fullname\" $) \"%(name)s\" | trunc 63 | trimSuffix \"-\" }}\n  labels:\n    {{- if $.Values.grafana.sidecar.dashboards.label }}\n    {{ $.Values.grafana.sidecar.dashboards.label }}: \"1\"\n    {{- end }}\n    app: {{ template \"prometheus-operator.name\" $ }}-grafana\n{{ include \"prometheus-operator.labels\" $ | indent 4 }}\ndata:\n'''",
        "\"\"\"represent yaml as a string\"\"\""
    ],
    "functions": [
        "change_style",
        "new_representer",
        "init_yaml_styles",
        "escape",
        "yaml_str_repr",
        "write_group_to_file",
        "main"
    ],
    "classes": [
        "LiteralStr"
    ]
}