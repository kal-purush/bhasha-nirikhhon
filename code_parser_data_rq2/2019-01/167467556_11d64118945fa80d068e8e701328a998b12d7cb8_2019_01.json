{
    "identifiers": [
        "require",
        "require",
        "express",
        "app",
        "bodyParser",
        "require",
        "require",
        "require",
        "require",
        "fs",
        "err",
        "content",
        "err",
        "err",
        "authorize",
        "content",
        "listEvents",
        "credentials",
        "callback",
        "credentials",
        "google",
        "client_id",
        "client_secret",
        "redirect_uris",
        "fs",
        "TOKEN_PATH",
        "err",
        "token",
        "err",
        "getAccessToken",
        "oAuth2Client",
        "callback",
        "oAuth2Client",
        "token",
        "callback",
        "oAuth2Client",
        "oAuth2Client",
        "callback",
        "oAuth2Client",
        "SCOPES",
        "authUrl",
        "readline",
        "process",
        "process",
        "rl",
        "code",
        "rl",
        "oAuth2Client",
        "code",
        "err",
        "token",
        "err",
        "err",
        "oAuth2Client",
        "token",
        "fs",
        "TOKEN_PATH",
        "token",
        "err",
        "err",
        "err",
        "TOKEN_PATH",
        "callback",
        "oAuth2Client",
        "auth",
        "google",
        "calendar",
        "err",
        "res",
        "err",
        "err",
        "res",
        "events",
        "i",
        "events",
        "i",
        "events",
        "i",
        "start",
        "start",
        "app",
        "request",
        "response",
        "response",
        "__dirname",
        "app",
        "request",
        "response",
        "request",
        "tmp",
        "start",
        "response",
        "request",
        "tmp",
        "start",
        "response",
        "request",
        "response",
        "process",
        "stdin",
        "d",
        "d",
        "d",
        "start",
        "d",
        "start",
        "app"
    ],
    "literals": [
        "'express'",
        "'body-parser'",
        "'http'",
        "'127.0.0.1'",
        "'fs'",
        "\"\"",
        "'readline'",
        "'googleapis'",
        "'https://www.googleapis.com/auth/calendar.readonly'",
        "'token.json'",
        "'credentials.json'",
        "'Error loading client secret file:'",
        "'offline'",
        "'Authorize this app by visiting this url:'",
        "'Enter the code from that page here: '",
        "'Error retrieving access token'",
        "'Token stored to'",
        "'v3'",
        "'primary'",
        "'The API returned an error: '",
        "'%s - %s'",
        "'--------------------------'",
        "\"veuillez choisissez une date: example '2013-02-14' \"",
        "'--------------------------'",
        "'/'",
        "${__dirname}/api.html",
        "'/'",
        "'le créneau que vous avez choisi est indisponible !. \"'",
        "'\".'",
        "\"le créneau que vous avez choisi est indisponible !.\"",
        "'le créneau que vous avez choisi est disponible !. \"'",
        "'\".'",
        "\"le créneau que vous avez choisi est disponible !.\"",
        "\"vide*-*\"",
        "\"vide*-*\"",
        "\"data\"",
        "\"you entered: [\"",
        "\"]\"",
        "\"le créneau que vous avez choisi est indisponible !.\"",
        "\"le créneau que vous avez choisi est disponible !.\"",
        "\"vide*-*\"",
        "'No upcoming events found.'",
        "'Application running on port 3000'"
    ],
    "variables": [
        "express",
        "bodyParser",
        "app",
        "http",
        "hostname",
        "port",
        "fs",
        "urlDate",
        "readline",
        "SCOPES",
        "TOKEN_PATH",
        "oAuth2Client",
        "authUrl",
        "rl",
        "calendar",
        "events",
        "i",
        "start",
        "start",
        "tmp",
        "stdin"
    ],
    "comments": [
        "api.js",
        "If modifying these scopes, delete token.json.",
        "The file token.json stores the user's access and refresh tokens, and is",
        "created automatically when the authorization flow completes for the first",
        "time.",
        "Load client secrets from a local file.",
        "Authorize a client with credentials, then call the Google Calendar API.",
        "Check if we have previously stored a token.",
        "Store the token to disk for later program executions",
        "console.log('Upcoming 10 events:');",
        "a l'aide d un formulair",
        "const postBody = request.body.data;",
        "if we want use the console",
        "var urlDate = '2019-01-20T21:00:00+01:00';"
    ],
    "docstrings": [
        "* Create an OAuth2 client with the given credentials, and then execute the\n * given callback function.\n * @param {Object} credentials The authorization client credentials.\n * @param {function} callback The callback to call with the authorized client.",
        "* Get and store new token after prompting for user authorization, and then\n * execute the given callback with the authorized OAuth2 client.\n * @param {google.auth.OAuth2} oAuth2Client The OAuth2 client to get token for.\n * @param {getEventsCallback} callback The callback for the authorized client.",
        "* Lists the next 10 events on the user's primary calendar.\n * @param {google.auth.OAuth2} auth An authorized OAuth2 client."
    ],
    "functions": [
        "authorize",
        "getAccessToken",
        "listEvents"
    ],
    "classes": []
}