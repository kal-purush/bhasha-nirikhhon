{
    "identifiers": [
        "io",
        "konig",
        "core",
        "showl",
        "java",
        "io",
        "Writer",
        "java",
        "util",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "Collections",
        "java",
        "util",
        "Comparator",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "org",
        "openrdf",
        "model",
        "Resource",
        "io",
        "konig",
        "core",
        "NamespaceManager",
        "io",
        "konig",
        "core",
        "io",
        "PrettyPrintWriter",
        "io",
        "konig",
        "core",
        "util",
        "IriTemplate",
        "io",
        "konig",
        "core",
        "util",
        "ValueFormat",
        "manager",
        "nsManager",
        "pretty",
        "PrettyPrintWriter",
        "of",
        "pretty",
        "setNamespaceManager",
        "nsManager",
        "worker",
        "manager",
        "pretty",
        "worker",
        "printAll",
        "pretty",
        "flush",
        "vargen",
        "join",
        "result",
        "get",
        "join",
        "result",
        "result",
        "vargen",
        "next",
        "put",
        "join",
        "result",
        "result",
        "manager",
        "manager",
        "manager",
        "manager",
        "shapeId",
        "manager",
        "listNodeShapeIds",
        "manager",
        "getNodeShape",
        "shapeId",
        "shape",
        "shape",
        "getAccessor",
        "printRootShape",
        "shape",
        "shape",
        "namer",
        "indent",
        "resource",
        "shape",
        "getId",
        "printJoin",
        "shape",
        "namer",
        "printProperties",
        "shape",
        "namer",
        "shape",
        "namer",
        "direct",
        "shape",
        "getProperties",
        "m",
        "direct",
        "getMappings",
        "add",
        "m",
        "getJoinCondition",
        "Collections",
        "sort",
        "indent",
        "indented",
        "size",
        "indented",
        "pushIndent",
        "join",
        "indented",
        "indent",
        "other",
        "join",
        "otherNode",
        "shape",
        "uri",
        "other",
        "getShape",
        "getIri",
        "varName",
        "namer",
        "varname",
        "join",
        "varName",
        "indented",
        "popIndent",
        "p",
        "shape",
        "join",
        "namer",
        "p",
        "getDeclaringShape",
        "shape",
        "p",
        "getPredicate",
        "getLocalName",
        "p",
        "t",
        "p",
        "template",
        "t",
        "getTemplate",
        "builder",
        "builder",
        "append",
        "comma",
        "shapeAlias",
        "namer",
        "varname",
        "join",
        "e",
        "template",
        "toList",
        "builder",
        "append",
        "comma",
        "comma",
        "e",
        "getType",
        "TEXT",
        "builder",
        "append",
        "builder",
        "append",
        "e",
        "getText",
        "builder",
        "append",
        "VARIABLE",
        "builder",
        "append",
        "shapeAlias",
        "builder",
        "append",
        "builder",
        "append",
        "e",
        "getText",
        "builder",
        "append",
        "builder",
        "toString",
        "path",
        "p",
        "join",
        "namer",
        "shape",
        "namer",
        "shape",
        "getProperties",
        "isEmpty",
        "Collections",
        "sort",
        "Override",
        "a",
        "b",
        "x",
        "a",
        "getPredicate",
        "getLocalName",
        "y",
        "b",
        "getPredicate",
        "getLocalName",
        "x",
        "compareTo",
        "y",
        "indent",
        "pushIndent",
        "comma",
        "p",
        "comma",
        "comma",
        "printProperty",
        "p",
        "namer",
        "popIndent",
        "p",
        "namer",
        "indent",
        "p",
        "getPredicate",
        "getLocalName",
        "printPropertyMappings",
        "p",
        "namer",
        "p",
        "namer",
        "mappings",
        "p",
        "getMappings",
        "size",
        "mappings",
        "size",
        "size",
        "printMappingFromJoinCondition",
        "p",
        "namer",
        "size",
        "pushIndent",
        "m",
        "mappings",
        "other",
        "m",
        "findOther",
        "p",
        "size",
        "indent",
        "path",
        "other",
        "m",
        "getJoinCondition",
        "namer",
        "size",
        "popIndent",
        "p",
        "namer",
        "node",
        "p",
        "getDeclaringShape",
        "q",
        "node",
        "getProperties",
        "m",
        "q",
        "getMappings",
        "join",
        "m",
        "getJoinCondition",
        "r",
        "join",
        "getPropertyOf",
        "node",
        "r",
        "p",
        "other",
        "join",
        "otherProperty",
        "r",
        "joinValue",
        "other",
        "node",
        "join",
        "namer",
        "source",
        "join",
        "namer",
        "elements",
        "node",
        "p",
        "source",
        "p",
        "p",
        "node",
        "getAccessor",
        "elements",
        "add",
        "p",
        "node",
        "p",
        "getDeclaringShape",
        "builder",
        "varname",
        "namer",
        "varname",
        "join",
        "builder",
        "append",
        "varname",
        "i",
        "elements",
        "size",
        "i",
        "i",
        "p",
        "elements",
        "get",
        "i",
        "builder",
        "append",
        "p",
        "pathSeparator",
        "builder",
        "append",
        "p",
        "getPredicate",
        "getLocalName",
        "builder",
        "toString"
    ],
    "literals": [
        "\"CONSTRUCT \"",
        "\"FROM\"",
        "\" AS \"",
        "\"CONCAT(\"",
        "\"\"",
        "\", \"",
        "\")\"",
        "\"SET\"",
        "\"\"",
        "\", \"",
        "\" = \"",
        "\"= \"",
        "\" = \"",
        "\" = ?\""
    ],
    "variables": [
        "manager",
        "out"
    ],
    "comments": [
        "Collect and sort Join Conditions",
        "Print FROM clause",
        "Print WHERE clause",
        "out.indent();",
        "out.print(\"WHERE\");",
        "",
        "if (indented) {",
        "out.pushIndent();",
        "}",
        "",
        "for (ShowlJoinCondition join : list) {",
        "if (indented) {",
        "out.println();",
        "out.indent();",
        "} else {",
        "out.print(' ');",
        "}",
        "ShowlPropertyShape left = join.getLeft();",
        "ShowlPropertyShape right = join.getRight();",
        "",
        "if (right.getDeclaringShape() == shape) {",
        "ShowlPropertyShape tmp = left;",
        "left = right;",
        "right = tmp;",
        "}",
        "",
        "String leftText = joinValue(left, shape, join, namer);",
        "String rightText = joinValue(right, shape, join, namer);",
        "",
        "out.print(leftText);",
        "out.print(\" = \");",
        "out.print(rightText);",
        "",
        "}",
        "",
        "if (indented) {",
        "out.popIndent();",
        "}",
        "out.println();"
    ],
    "docstrings": [
        "* #%L\n * Konig Core\n * %%\n * Copyright (C) 2015 - 2019 Gregory McFall\n * %%\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *      http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * #L%"
    ],
    "functions": [
        "MappingReport",
        "write",
        "varname",
        "Worker",
        "printAll",
        "printRootShape",
        "printJoin",
        "joinValue",
        "printProperties",
        "compare",
        "printProperty",
        "printPropertyMappings",
        "printMappingFromJoinCondition",
        "path"
    ],
    "classes": [
        "MappingReport",
        "NodeNamer",
        "Worker"
    ]
}