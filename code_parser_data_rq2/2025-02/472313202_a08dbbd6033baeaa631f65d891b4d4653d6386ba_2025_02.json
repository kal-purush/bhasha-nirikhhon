{
    "identifiers": [
        "canvas",
        "canvasSize",
        "canvas",
        "canvasSize",
        "canvas",
        "gl",
        "canvasSize",
        "ext",
        "extToUse",
        "gl",
        "ext",
        "extToUse",
        "gl",
        "gl",
        "gl",
        "vertexShader",
        "vs",
        "gl",
        "vertexShader",
        "gl",
        "vertexShader",
        "gl",
        "gl",
        "gl",
        "gl",
        "fragmentShader",
        "fs",
        "gl",
        "fragmentShader",
        "gl",
        "fragmentShader",
        "gl",
        "gl",
        "gl",
        "program",
        "vertexShader",
        "gl",
        "program",
        "fragmentShader",
        "gl",
        "program",
        "gl",
        "program",
        "gl",
        "gl",
        "gl",
        "gl",
        "tex",
        "gl",
        "gl",
        "internalFormat",
        "gl",
        "extToUse",
        "texWidth",
        "texHeight",
        "gl",
        "glDataType",
        "gl",
        "extToUse",
        "texData",
        "filterType",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "gl",
        "program",
        "gl",
        "gl",
        "Uint8Array",
        "gl",
        "pixelToCheck",
        "pixelToCheck",
        "gl",
        "gl",
        "pixel",
        "gl",
        "webglLoseContext",
        "webglLoseContext",
        "r",
        "g",
        "g",
        "b",
        "r",
        "e",
        "Int16Array",
        "main",
        "norm16TexData",
        "gl",
        "ext",
        "ext",
        "gl",
        "gl",
        "main",
        "norm16TexData",
        "gl",
        "ext",
        "ext",
        "gl",
        "gl"
    ],
    "literals": [
        "'canvas'",
        "'webgl2'",
        "#version 300 es\n    void main() {\n      gl_PointSize = ${canvasSize.toFixed(1)};\n      gl_Position = vec4(0, 0, 0, 1);\n    }",
        "#version 300 es\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n\n    uniform sampler2D u_image;\n\n    out vec4 color;\n\n    void main() {\n        vec4 intColor = texture(u_image, gl_PointCoord.xy);\n        color = vec4(vec3(intColor.rrr), 1);\n    }",
        "'LINEAR'",
        "'WEBGL_lose_context'",
        "'EXT_texture_norm16'",
        "'NEAREST'",
        "'EXT_texture_norm16'",
        "'LINEAR'"
    ],
    "variables": [
        "canvasSize",
        "texWidth",
        "texHeight",
        "pixelToCheck",
        "canvas",
        "gl",
        "vs",
        "fs",
        "extToUse",
        "vertexShader",
        "fragmentShader",
        "program",
        "tex",
        "pixel",
        "r",
        "g",
        "b",
        "pixel",
        "webglLoseContext",
        "norm16TexData"
    ],
    "comments": [
        "const floatTexData = new Float32Array([0.3, 0.2, 0.3, 0.4, 0.5]);",
        "const halfFloatTexData = new Uint16Array([13517, 12902, 13517, 13926, 14336]);",
        "float: main({",
        "filterType: 'NEAREST',",
        "texData: floatTexData,",
        "internalFormat: (gl) => gl.R16F,",
        "glDataType: (gl) => gl.FLOAT,",
        "}),",
        "floatLinear: main({",
        "ext: 'OES_texture_float_linear',",
        "filterType: 'LINEAR',",
        "texData: floatTexData,",
        "internalFormat: (gl) => gl.R16F,",
        "glDataType: (gl) => gl.FLOAT,",
        "}),",
        "halfFloat: main({",
        "filterType: 'NEAREST',",
        "texData: halfFloatTexData,",
        "internalFormat: (gl) => gl.R16F,",
        "glDataType: (gl) => gl.HALF_FLOAT,",
        "}),",
        "halfFloatLinear: main({",
        "filterType: 'LINEAR',",
        "texData: halfFloatTexData,",
        "internalFormat: (gl) => gl.R16F,",
        "glDataType: (gl) => gl.HALF_FLOAT,",
        "}),"
    ],
    "docstrings": [],
    "functions": [
        "main",
        "getSupportedTextureFormats"
    ],
    "classes": []
}