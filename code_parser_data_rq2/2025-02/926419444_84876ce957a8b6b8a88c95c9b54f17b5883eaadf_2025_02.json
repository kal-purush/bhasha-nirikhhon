{
    "identifiers": [
        "afterAll",
        "afterEach",
        "beforeAll",
        "beforeEach",
        "describe",
        "expect",
        "it",
        "AddressInfo",
        "Socket",
        "ClientSocket",
        "ClientSocketManager",
        "createPromiseResolvers",
        "httpServer",
        "socketServer",
        "describe",
        "beforeAll",
        "resolve",
        "httpServer",
        "httpServerAddr",
        "httpServer",
        "resolve",
        "afterAll",
        "resolve",
        "socketServer",
        "httpServer",
        "resolve",
        "beforeEach",
        "httpServerAddr",
        "httpServerAddr",
        "socketServerUri",
        "httpServerAddr",
        "httpServerAddr",
        "httpServerAddr",
        "afterEach",
        "socketManager",
        "socketManager",
        "it",
        "createPromiseResolvers",
        "socketManager",
        "ClientSocketManager",
        "socketServerUri",
        "connectResolver",
        "connectResolver",
        "expect",
        "socketManager",
        "it",
        "createPromiseResolvers",
        "createPromiseResolvers",
        "ClientSocket",
        "socketManager",
        "ClientSocketManager",
        "socketServerUri",
        "connectResolver",
        "reason",
        "disconnectResolver",
        "reason",
        "connectResolver",
        "socketManager",
        "disconnectResolver",
        "expect",
        "socketManager",
        "expect",
        "clientReason",
        "connectResolver",
        "disconnectResolver",
        "socketManager",
        "connectResolver",
        "expect",
        "socketManager",
        "socketServer",
        "connectedSocketsMap",
        "socketManager",
        "expect",
        "clientSocket",
        "clientSocket",
        "disconnectResolver",
        "expect",
        "socketManager",
        "expect",
        "serverReason",
        "it",
        "createPromiseResolvers",
        "createPromiseResolvers",
        "socketManager",
        "ClientSocketManager",
        "socketServerUri",
        "reason",
        "reason",
        "serverDisconnectResolver",
        "connectResolver",
        "connectResolver",
        "expect",
        "socketManager",
        "socketManager",
        "expect",
        "socketManager",
        "connectResolver",
        "socketManager",
        "connectResolver",
        "expect",
        "socketManager",
        "socketServer",
        "connectedSocketsMap",
        "socketManager",
        "connectResolver",
        "expect",
        "clientSocket",
        "clientSocket",
        "serverDisconnectResolver",
        "expect",
        "socketManager",
        "connectResolver",
        "expect",
        "socketManager",
        "it",
        "createPromiseResolvers",
        "createPromiseResolvers",
        "createPromiseResolvers",
        "socketManager",
        "ClientSocketManager",
        "socketServerUri",
        "connectResolver",
        "channel",
        "received",
        "anyMessageResolver",
        "expect",
        "channel",
        "serverChannel",
        "expect",
        "received",
        "serverMessage",
        "connectResolver",
        "expect",
        "socketManager",
        "socketManager",
        "serverChannel",
        "msg",
        "messageResolver",
        "expect",
        "msg",
        "serverMessage",
        "socketServer",
        "serverChannel",
        "serverMessage",
        "messageResolver",
        "anyMessageResolver",
        "it",
        "createPromiseResolvers",
        "createPromiseResolvers",
        "socketManager",
        "ClientSocketManager",
        "socketServerUri",
        "connectResolver",
        "connectResolver",
        "expect",
        "socketManager",
        "socketServer",
        "connectedSocketsMap",
        "socketManager",
        "expect",
        "clientSocket",
        "clientSocket",
        "serverChannel",
        "msg",
        "messageResolver",
        "expect",
        "msg",
        "clientMessage",
        "socketManager",
        "serverChannel",
        "clientMessage",
        "messageResolver"
    ],
    "literals": [
        "\"@jest/globals\"",
        "\"net\"",
        "\"socket.io-client\"",
        "\"../src/index.ts\"",
        "\"./utils/promise-resolvers.ts\"",
        "\"./utils/server.ts\"",
        "\"ClientSocketManager: unit tests\"",
        "string",
        "string",
        "\"\"",
        "Expected valid http-server address. Received \\`${httpServerAddr}\\`.",
        "\"string\"",
        "http://localhost:${httpServerAddr.port}",
        "\"should connect\"",
        "\"should handle disconnection\"",
        "\"io client disconnect\"",
        "\"/\"",
        "\"io server disconnect\"",
        "\"should handle reconnection\"",
        "\"io server disconnect\"",
        "\"/\"",
        "\"should receive a message\"",
        "\"server/message\"",
        "\"Hello from the server!\"",
        "\"should send a message\"",
        "\"server/message\"",
        "\"Hello from the client!\"",
        "\"/\""
    ],
    "variables": [
        "httpServerAddr",
        "socketServerUri",
        "socketManager",
        "connectResolver",
        "connectResolver",
        "disconnectResolver",
        "clientReason",
        "connectedSocketsMap",
        "clientSocket",
        "serverReason",
        "connectResolver",
        "serverDisconnectResolver",
        "connectedSocketsMap",
        "clientSocket",
        "connectResolver",
        "messageResolver",
        "anyMessageResolver",
        "serverChannel",
        "serverMessage",
        "connectResolver",
        "messageResolver",
        "serverChannel",
        "clientMessage",
        "connectedSocketsMap",
        "clientSocket"
    ],
    "comments": [
        "Should not reconnect when manually disconnected by client",
        "Should reconnect when manually disconnected by the server"
    ],
    "docstrings": [],
    "functions": [
        "onSocketConnection",
        "onSocketConnection",
        "onSocketDisconnection",
        "onSocketDisconnection",
        "onSocketConnection",
        "onSocketConnection",
        "onAnySubscribedMessageReceived",
        "onSocketConnection"
    ],
    "classes": []
}