{
    "identifiers": [
        "os",
        "sqlite3",
        "datetime",
        "datetime",
        "structlog",
        "typing",
        "Dict",
        "Optional",
        "structlog",
        "get_logger",
        "data_dir",
        "os",
        "path",
        "join",
        "data_dir",
        "_init_db",
        "sqlite3",
        "connect",
        "db_path",
        "conn",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "conn",
        "commit",
        "log",
        "info",
        "path",
        "db_path",
        "e",
        "log",
        "error",
        "error",
        "e",
        "book_id",
        "meta4_data",
        "Dict",
        "join",
        "meta4_data",
        "get",
        "sqlite3",
        "connect",
        "db_path",
        "conn",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "book_id",
        "meta4_data",
        "get",
        "meta4_data",
        "get",
        "meta4_data",
        "get",
        "meta4_data",
        "get",
        "meta4_data",
        "get",
        "mirrors",
        "datetime",
        "now",
        "isoformat",
        "meta4_data",
        "get",
        "conn",
        "commit",
        "log",
        "info",
        "book_id",
        "book_id",
        "file_name",
        "meta4_data",
        "get",
        "e",
        "log",
        "error",
        "book_id",
        "book_id",
        "error",
        "e",
        "book_id",
        "Optional",
        "Dict",
        "sqlite3",
        "connect",
        "db_path",
        "conn",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "book_id",
        "cursor",
        "fetchone",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "split",
        "row",
        "row",
        "row",
        "e",
        "log",
        "error",
        "book_id",
        "book_id",
        "error",
        "e",
        "Dict",
        "sqlite3",
        "connect",
        "db_path",
        "conn",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "row",
        "split",
        "row",
        "row",
        "row",
        "row",
        "cursor",
        "fetchall",
        "e",
        "log",
        "error",
        "error",
        "e",
        "days",
        "sqlite3",
        "connect",
        "db_path",
        "conn",
        "conn",
        "cursor",
        "cursor",
        "execute",
        "days",
        "conn",
        "commit",
        "log",
        "info",
        "deleted_rows",
        "cursor",
        "rowcount",
        "e",
        "log",
        "error",
        "error",
        "e"
    ],
    "literals": [
        "\"meta4_cache.db\"",
        "\"database.initialized\"",
        "\"database.init_failed\"",
        "\"|\"",
        "\"mirrors\"",
        "\"file_name\"",
        "\"file_size\"",
        "\"md5_hash\"",
        "\"sha1_hash\"",
        "\"sha256_hash\"",
        "\"meta4_url\"",
        "\"database.meta4_updated\"",
        "\"file_name\"",
        "\"database.update_failed\"",
        "\"file_name\"",
        "\"file_size\"",
        "\"md5_hash\"",
        "\"sha1_hash\"",
        "\"sha256_hash\"",
        "\"mirrors\"",
        "\"|\"",
        "\"last_updated\"",
        "\"meta4_url\"",
        "\"database.get_failed\"",
        "\"book_id\"",
        "\"file_name\"",
        "\"file_size\"",
        "\"md5_hash\"",
        "\"sha1_hash\"",
        "\"sha256_hash\"",
        "\"mirrors\"",
        "\"|\"",
        "\"last_updated\"",
        "\"meta4_url\"",
        "\"database.get_all_failed\"",
        "\"database.cleanup_completed\"",
        "\"database.cleanup_failed\""
    ],
    "variables": [
        "log",
        "db_path",
        "cursor",
        "mirrors",
        "cursor",
        "cursor",
        "row",
        "cursor",
        "cursor"
    ],
    "comments": [
        "Create meta4 files table"
    ],
    "docstrings": [
        "\"\"\"\nDatabase management for ApocaCache library maintainer.\nHandles caching of meta4 file information in SQLite.\n\"\"\"",
        "\"\"\"Manages SQLite database for meta4 file caching.\"\"\"",
        "\"\"\"Initialize database connection.\"\"\"",
        "\"\"\"Initialize database schema if not exists.\"\"\"",
        "\"\"\"\n                CREATE TABLE IF NOT EXISTS meta4_files (\n                    id INTEGER PRIMARY KEY AUTOINCREMENT,\n                    book_id TEXT UNIQUE,\n                    file_name TEXT,\n                    file_size INTEGER,\n                    md5_hash TEXT,\n                    sha1_hash TEXT,\n                    sha256_hash TEXT,\n                    mirrors TEXT,\n                    last_updated TIMESTAMP,\n                    meta4_url TEXT\n                )\n                \"\"\"",
        "\"\"\"Update or insert meta4 file information.\"\"\"",
        "\"\"\"\n                INSERT OR REPLACE INTO meta4_files \n                (book_id, file_name, file_size, md5_hash, sha1_hash, sha256_hash, \n                mirrors, last_updated, meta4_url)\n                VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n                \"\"\"",
        "\"\"\"Get cached meta4 file information.\"\"\"",
        "\"\"\"\n                SELECT file_name, file_size, md5_hash, sha1_hash, sha256_hash, \n                       mirrors, last_updated, meta4_url\n                FROM meta4_files\n                WHERE book_id = ?\n                \"\"\"",
        "\"\"\"Get all cached meta4 file information.\"\"\"",
        "\"\"\"\n                SELECT book_id, file_name, file_size, md5_hash, sha1_hash, \n                       sha256_hash, mirrors, last_updated, meta4_url\n                FROM meta4_files\n                \"\"\"",
        "\"\"\"Remove entries older than specified days.\"\"\"",
        "\"\"\"\n                DELETE FROM meta4_files\n                WHERE last_updated < datetime('now', '-? days')\n                \"\"\""
    ],
    "functions": [
        "_init_db",
        "update_meta4_info",
        "get_meta4_info",
        "get_all_meta4_info",
        "cleanup_old_entries"
    ],
    "classes": [
        "DatabaseManager"
    ]
}