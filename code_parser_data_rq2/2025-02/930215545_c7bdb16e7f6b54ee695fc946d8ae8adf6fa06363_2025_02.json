{
    "identifiers": [
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "votesPower",
        "index",
        "target",
        "target",
        "index",
        "target",
        "include",
        "canPartitionRecursive",
        "votesPower",
        "index",
        "target",
        "votesPower",
        "index",
        "exclude",
        "canPartitionRecursive",
        "votesPower",
        "index",
        "target",
        "include",
        "exclude",
        "votesPower",
        "index",
        "target",
        "memo",
        "target",
        "index",
        "target",
        "key",
        "index",
        "target",
        "memo",
        "containsKey",
        "key",
        "memo",
        "get",
        "key",
        "include",
        "canPartitionMemo",
        "votesPower",
        "index",
        "target",
        "votesPower",
        "index",
        "memo",
        "exclude",
        "canPartitionMemo",
        "votesPower",
        "index",
        "target",
        "memo",
        "memo",
        "put",
        "key",
        "include",
        "exclude",
        "memo",
        "get",
        "key",
        "votesPower",
        "target",
        "n",
        "votesPower",
        "length",
        "dp",
        "n",
        "target",
        "i",
        "i",
        "n",
        "i",
        "dp",
        "i",
        "i",
        "i",
        "n",
        "i",
        "j",
        "j",
        "target",
        "j",
        "votesPower",
        "i",
        "j",
        "dp",
        "i",
        "j",
        "dp",
        "i",
        "j",
        "dp",
        "i",
        "j",
        "votesPower",
        "i",
        "dp",
        "i",
        "j",
        "dp",
        "i",
        "j",
        "dp",
        "n",
        "target",
        "votesPower",
        "states",
        "index",
        "target",
        "path",
        "result",
        "target",
        "remainingStates",
        "i",
        "i",
        "states",
        "length",
        "i",
        "path",
        "contains",
        "states",
        "i",
        "remainingStates",
        "add",
        "states",
        "i",
        "partition1",
        "path",
        "partition2",
        "remainingStates",
        "result",
        "add",
        "partition1",
        "result",
        "add",
        "partition2",
        "index",
        "target",
        "votesPower",
        "index",
        "path",
        "add",
        "states",
        "index",
        "findPartitions",
        "votesPower",
        "states",
        "index",
        "target",
        "votesPower",
        "index",
        "path",
        "result",
        "path",
        "remove",
        "path",
        "size",
        "findPartitions",
        "votesPower",
        "states",
        "index",
        "target",
        "path",
        "result",
        "args",
        "votesPower",
        "states",
        "totalSum",
        "vote",
        "votesPower",
        "totalSum",
        "vote",
        "totalSum",
        "target",
        "totalSum",
        "canPartition",
        "canPartitionDP",
        "votesPower",
        "target",
        "canPartition",
        "result",
        "findPartitions",
        "votesPower",
        "states",
        "votesPower",
        "length",
        "target",
        "result",
        "printedPartitions",
        "i",
        "i",
        "result",
        "size",
        "i",
        "partition1",
        "result",
        "get",
        "i",
        "partition2",
        "result",
        "get",
        "i",
        "partition1",
        "sort",
        "compareTo",
        "partition2",
        "sort",
        "compareTo",
        "partitionKey",
        "partition1",
        "toString",
        "partition2",
        "toString",
        "printedPartitions",
        "contains",
        "partitionKey",
        "join",
        "partition1",
        "join",
        "partition2",
        "printedPartitions",
        "add",
        "partitionKey"
    ],
    "literals": [
        "\",\"",
        "\"California\"",
        "\"Texas\"",
        "\"Florida\"",
        "\"Indiana\"",
        "\"Alaska\"",
        "\"Ohio\"",
        "\"Hawaii\"",
        "\"Partition is not possible\"",
        "\"Partition is possible\"",
        "\"All valid partitions:\"",
        "\" | \"",
        "\"[\"",
        "\", \"",
        "\"], [\"",
        "\", \"",
        "\"]\"",
        "\"Partition is not possible\""
    ],
    "variables": [],
    "comments": [
        "Please check the Medium article for a detailed approach and step-by-step debugging:",
        "",
        "The article covers the transition from recursion to memoization, and then to bottom-up DP and backtracking",
        "Function to check if partition is possible using recursion",
        "Found a valid subset",
        "Out of bounds",
        "Choice: Include or exclude the current state's votes",
        "Memoization approach (Top-Down DP)",
        "Bottom-Up DP (Tabulation)",
        "Base case",
        "Backtracking approach to find the partitions",
        "Group the partition into two sets",
        "Add both groups of states to the result, ensuring distinct partitions",
        "Include the current state's vote if possible",
        "Exclude the current state's vote and move to the next",
        "Input data",
        "If total sum is odd, it's not possible to partition",
        "Step 1: Use Bottom-Up DP (Tabulation) to check if partitioning is possible",
        "Step 2: Backtracking to find all possible state partitions",
        "Print the results (two partitions for each group of states)",
        "Sort both partitions to avoid duplicate entries",
        "Create a key to check for duplicates",
        "Check if the partition combination is already printed",
        "Print each pair of partitions directly in the specified format"
    ],
    "docstrings": [],
    "functions": [
        "canPartitionRecursive",
        "canPartitionMemo",
        "canPartitionDP",
        "findPartitions",
        "main"
    ],
    "classes": [
        "Main"
    ]
}