{
    "identifiers": [
        "Text",
        "Text",
        "Json",
        "GraphQL",
        "GraphQL",
        "Client",
        "Http",
        "GraphQL",
        "Client",
        "Serializer",
        "Newtonsoft",
        "Newtonsoft",
        "Json",
        "BibleOnSite",
        "Model",
        "Services",
        "BaseGraphQLService",
        "Author",
        "GraphQLHttpClient",
        "Url",
        "NewtonsoftJsonSerializer",
        "GraphQLRequest",
        "OperationName",
        "Variables",
        "Query",
        "JsonConvert",
        "SerializeObject",
        "request",
        "HttpClient",
        "PostAsync",
        "Url",
        "StringContent",
        "reqBody",
        "Encoding",
        "UTF8",
        "res",
        "Content",
        "ReadAsStringAsync",
        "JsonConvert",
        "DeserializeObject",
        "AuthorGraphQLResponse",
        "resBody",
        "Id",
        "graphQLResponse",
        "Data",
        "AuthorById",
        "Id",
        "Name",
        "graphQLResponse",
        "Data",
        "AuthorById",
        "Name",
        "Details",
        "graphQLResponse",
        "Data",
        "AuthorById",
        "Details",
        "author",
        "ex",
        "Diagnostics",
        "Debug",
        "WriteLine",
        "ex",
        "Message",
        "",
        "JsonProperty",
        "JsonProperty",
        "JsonProperty",
        "JsonProperty",
        "JsonProperty"
    ],
    "literals": [
        "\"{\\n  authorById(id: 1) {\\n    id\\n    name\\n    details\\n  }\\n}\\n\"",
        "\"data\"",
        "\"authorById\"",
        "\"id\"",
        "\"name\"",
        "\"details\""
    ],
    "variables": [
        "client",
        "request",
        "reqBody",
        "res",
        "resBody",
        "graphQLResponse",
        "Author",
        "author",
        "AuthorResponse",
        "Data",
        "Author",
        "AuthorById",
        "Id",
        "Name",
        "Details"
    ],
    "comments": [
        "var response = graphQLResponse.Data;",
        "Convert the single author to a list to maintain the return type."
    ],
    "docstrings": [],
    "functions": [
        "AuthorsService",
        "GetAuthors"
    ],
    "classes": [
        "AuthorsService",
        "AuthorGraphQLResponse",
        "AuthorResponse",
        "Author"
    ]
}