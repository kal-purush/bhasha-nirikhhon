{
    "identifiers": [
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "APPROVAL_ATTRIBUTE_KEY",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "APPROVE_DEVICE_PAGE",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "DEVICE_APPROVED_PAGE",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "DEVICE_CODE_URL",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "ERROR_STRING",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "REMEMBER_PARAMETER_KEY",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "REQUEST_USER_CODE_STRING",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "IamOauthRequestParameters",
        "USER_CODE_URL",
        "org",
        "mitre",
        "openid",
        "connect",
        "request",
        "ConnectRequestParameters",
        "APPROVED_SITE",
        "java",
        "net",
        "URI",
        "java",
        "net",
        "URISyntaxException",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "javax",
        "servlet",
        "http",
        "HttpSession",
        "org",
        "apache",
        "http",
        "client",
        "utils",
        "URIBuilder",
        "org",
        "mitre",
        "oauth2",
        "exception",
        "DeviceCodeCreationException",
        "org",
        "mitre",
        "oauth2",
        "model",
        "ClientDetailsEntity",
        "org",
        "mitre",
        "oauth2",
        "model",
        "DeviceCode",
        "org",
        "mitre",
        "oauth2",
        "model",
        "SystemScope",
        "org",
        "mitre",
        "oauth2",
        "service",
        "ClientDetailsEntityService",
        "org",
        "mitre",
        "oauth2",
        "service",
        "DeviceCodeService",
        "org",
        "mitre",
        "oauth2",
        "service",
        "SystemScopeService",
        "org",
        "mitre",
        "oauth2",
        "token",
        "DeviceTokenGranter",
        "org",
        "mitre",
        "openid",
        "connect",
        "config",
        "ConfigurationPropertiesBean",
        "org",
        "mitre",
        "openid",
        "connect",
        "view",
        "HttpCodeView",
        "org",
        "mitre",
        "openid",
        "connect",
        "view",
        "JsonEntityView",
        "org",
        "mitre",
        "openid",
        "connect",
        "view",
        "JsonErrorView",
        "org",
        "slf4j",
        "Logger",
        "org",
        "slf4j",
        "LoggerFactory",
        "org",
        "springframework",
        "http",
        "HttpStatus",
        "org",
        "springframework",
        "http",
        "MediaType",
        "org",
        "springframework",
        "security",
        "access",
        "prepost",
        "PreAuthorize",
        "org",
        "springframework",
        "security",
        "core",
        "Authentication",
        "org",
        "springframework",
        "security",
        "oauth2",
        "common",
        "exceptions",
        "InvalidClientException",
        "org",
        "springframework",
        "security",
        "oauth2",
        "common",
        "exceptions",
        "InvalidScopeException",
        "org",
        "springframework",
        "security",
        "oauth2",
        "common",
        "util",
        "OAuth2Utils",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "AuthorizationRequest",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "OAuth2Authentication",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "OAuth2Request",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "approval",
        "UserApprovalHandler",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "request",
        "DefaultOAuth2RequestFactory",
        "org",
        "springframework",
        "stereotype",
        "Controller",
        "org",
        "springframework",
        "ui",
        "ModelMap",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "GetMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "PostMapping",
        "org",
        "springframework",
        "web",
        "bind",
        "annotation",
        "RequestParam",
        "it",
        "infn",
        "mw",
        "iam",
        "api",
        "account",
        "AccountUtils",
        "it",
        "infn",
        "mw",
        "iam",
        "api",
        "common",
        "error",
        "NoSuchAccountError",
        "it",
        "infn",
        "mw",
        "iam",
        "core",
        "oauth",
        "scope",
        "pdp",
        "ScopePolicyPDP",
        "it",
        "infn",
        "mw",
        "iam",
        "persistence",
        "model",
        "IamAccount",
        "SuppressWarnings",
        "Controller",
        "logger",
        "LoggerFactory",
        "getLogger",
        "clientEntityService",
        "scopeService",
        "config",
        "deviceCodeService",
        "oAuth2RequestFactory",
        "iamUserApprovalHandler",
        "userApprovalUtils",
        "accountUtils",
        "pdp",
        "clientEntityService",
        "scopeService",
        "config",
        "deviceCodeService",
        "oAuth2RequestFactory",
        "iamUserApprovalHandler",
        "userApprovalUtils",
        "accountUtils",
        "pdp",
        "clientEntityService",
        "clientEntityService",
        "scopeService",
        "scopeService",
        "config",
        "config",
        "deviceCodeService",
        "deviceCodeService",
        "oAuth2RequestFactory",
        "oAuth2RequestFactory",
        "iamUserApprovalHandler",
        "iamUserApprovalHandler",
        "userApprovalUtils",
        "userApprovalUtils",
        "accountUtils",
        "accountUtils",
        "pdp",
        "pdp",
        "PostMapping",
        "value",
        "DEVICE_CODE_URL",
        "consumes",
        "MediaType",
        "APPLICATION_FORM_URLENCODED_VALUE",
        "produces",
        "MediaType",
        "APPLICATION_JSON_VALUE",
        "RequestParam",
        "clientId",
        "RequestParam",
        "name",
        "required",
        "scope",
        "parameters",
        "model",
        "client",
        "client",
        "clientEntityService",
        "loadClientByClientId",
        "clientId",
        "checkAuthzGrant",
        "client",
        "e",
        "logger",
        "error",
        "e",
        "model",
        "put",
        "HttpCodeView",
        "CODE",
        "HttpStatus",
        "BAD_REQUEST",
        "HttpCodeView",
        "VIEWNAME",
        "requestedScopes",
        "OAuth2Utils",
        "parseParameterList",
        "scope",
        "allowedScopes",
        "client",
        "getScope",
        "scopeService",
        "scopesMatch",
        "allowedScopes",
        "requestedScopes",
        "logger",
        "error",
        "requestedScopes",
        "allowedScopes",
        "format",
        "client",
        "getClientId",
        "dc",
        "deviceCodeService",
        "createNewDeviceCode",
        "requestedScopes",
        "client",
        "parameters",
        "response",
        "response",
        "put",
        "dc",
        "getDeviceCode",
        "response",
        "put",
        "dc",
        "getUserCode",
        "response",
        "put",
        "config",
        "getIssuer",
        "USER_CODE_URL",
        "client",
        "getDeviceCodeValiditySeconds",
        "response",
        "put",
        "client",
        "getDeviceCodeValiditySeconds",
        "config",
        "isAllowCompleteDeviceCodeUri",
        "verificationUriComplete",
        "config",
        "getIssuer",
        "USER_CODE_URL",
        "addParameter",
        "dc",
        "getUserCode",
        "build",
        "response",
        "put",
        "verificationUriComplete",
        "toString",
        "model",
        "put",
        "JsonEntityView",
        "ENTITY",
        "response",
        "JsonEntityView",
        "VIEWNAME",
        "dcce",
        "model",
        "put",
        "HttpCodeView",
        "CODE",
        "HttpStatus",
        "BAD_REQUEST",
        "model",
        "put",
        "JsonErrorView",
        "ERROR",
        "dcce",
        "getError",
        "model",
        "put",
        "JsonErrorView",
        "ERROR_MESSAGE",
        "dcce",
        "getMessage",
        "JsonErrorView",
        "VIEWNAME",
        "use",
        "logger",
        "error",
        "model",
        "put",
        "HttpCodeView",
        "CODE",
        "HttpStatus",
        "INTERNAL_SERVER_ERROR",
        "HttpCodeView",
        "VIEWNAME",
        "PreAuthorize",
        "GetMapping",
        "USER_CODE_URL",
        "RequestParam",
        "value",
        "required",
        "userCode",
        "model",
        "session",
        "authn",
        "config",
        "isAllowCompleteDeviceCodeUri",
        "userCode",
        "REQUEST_USER_CODE_STRING",
        "readUserCode",
        "userCode",
        "model",
        "session",
        "authn",
        "PreAuthorize",
        "PostMapping",
        "USER_CODE_URL",
        "RequestParam",
        "userCode",
        "model",
        "session",
        "authn",
        "dc",
        "deviceCodeService",
        "lookUpByUserCode",
        "userCode",
        "dc",
        "model",
        "addAttribute",
        "ERROR_STRING",
        "REQUEST_USER_CODE_STRING",
        "dc",
        "getExpiration",
        "dc",
        "getExpiration",
        "before",
        "model",
        "addAttribute",
        "ERROR_STRING",
        "REQUEST_USER_CODE_STRING",
        "dc",
        "isApproved",
        "model",
        "addAttribute",
        "ERROR_STRING",
        "REQUEST_USER_CODE_STRING",
        "client",
        "clientEntityService",
        "loadClientByClientId",
        "dc",
        "getClientId",
        "model",
        "put",
        "client",
        "authorizationRequest",
        "oAuth2RequestFactory",
        "createAuthorizationRequest",
        "dc",
        "getRequestParameters",
        "filteredScopes",
        "filterScopes",
        "scopeService",
        "fromStrings",
        "dc",
        "getScope",
        "authn",
        "filteredScopes",
        "userApprovalUtils",
        "sortScopes",
        "scopeService",
        "fromStrings",
        "filteredScopes",
        "authorizationRequest",
        "setScope",
        "filteredScopes",
        "authorizationRequest",
        "setClientId",
        "client",
        "getClientId",
        "iamUserApprovalHandler",
        "checkForPreApproval",
        "authorizationRequest",
        "authn",
        "o2req",
        "oAuth2RequestFactory",
        "createOAuth2Request",
        "authorizationRequest",
        "o2Auth",
        "o2req",
        "authn",
        "deviceCodeService",
        "approveDeviceCode",
        "dc",
        "o2Auth",
        "authorizationRequest",
        "getExtensions",
        "get",
        "APPROVED_SITE",
        "authorizationRequest",
        "isApproved",
        "model",
        "addAttribute",
        "APPROVAL_ATTRIBUTE_KEY",
        "DEVICE_APPROVED_PAGE",
        "setModelForConsentPage",
        "model",
        "authn",
        "dc",
        "filteredScopes",
        "client",
        "session",
        "setAttribute",
        "authorizationRequest",
        "session",
        "setAttribute",
        "dc",
        "APPROVE_DEVICE_PAGE",
        "PreAuthorize",
        "PostMapping",
        "USER_CODE_URL",
        "RequestParam",
        "userCode",
        "RequestParam",
        "value",
        "OAuth2Utils",
        "USER_OAUTH_APPROVAL",
        "approve",
        "RequestParam",
        "value",
        "REMEMBER_PARAMETER_KEY",
        "required",
        "remember",
        "model",
        "auth",
        "session",
        "authorizationRequest",
        "session",
        "getAttribute",
        "dc",
        "session",
        "getAttribute",
        "dc",
        "getUserCode",
        "equals",
        "userCode",
        "model",
        "addAttribute",
        "ERROR_STRING",
        "REQUEST_USER_CODE_STRING",
        "dc",
        "getExpiration",
        "dc",
        "getExpiration",
        "before",
        "model",
        "addAttribute",
        "ERROR_STRING",
        "REQUEST_USER_CODE_STRING",
        "client",
        "clientEntityService",
        "loadClientByClientId",
        "dc",
        "getClientId",
        "model",
        "put",
        "client",
        "FALSE",
        "equals",
        "approve",
        "approve",
        "model",
        "addAttribute",
        "APPROVAL_ATTRIBUTE_KEY",
        "DEVICE_APPROVED_PAGE",
        "o2req",
        "oAuth2RequestFactory",
        "createOAuth2Request",
        "authorizationRequest",
        "o2Auth",
        "o2req",
        "auth",
        "setAuthzRequestAfterApproval",
        "authorizationRequest",
        "remember",
        "approve",
        "iamUserApprovalHandler",
        "updateAfterApproval",
        "authorizationRequest",
        "o2Auth",
        "model",
        "put",
        "APPROVAL_ATTRIBUTE_KEY",
        "DEVICE_APPROVED_PAGE",
        "client",
        "authorizedGrantTypes",
        "client",
        "getAuthorizedGrantTypes",
        "authorizedGrantTypes",
        "authorizedGrantTypes",
        "isEmpty",
        "authorizedGrantTypes",
        "contains",
        "DeviceTokenGranter",
        "GRANT_TYPE",
        "DeviceTokenGranter",
        "GRANT_TYPE",
        "scopes",
        "authentication",
        "account",
        "accountUtils",
        "getAuthenticatedUserAccount",
        "authentication",
        "orElseThrow",
        "NoSuchAccountError",
        "forUsername",
        "authentication",
        "getName",
        "pdp",
        "filterScopes",
        "scopeService",
        "toStrings",
        "scopes",
        "account",
        "model",
        "authn",
        "dc",
        "scopes",
        "client",
        "model",
        "put",
        "dc",
        "model",
        "put",
        "scopeService",
        "fromStrings",
        "scopes",
        "model",
        "put",
        "userApprovalUtils",
        "claimsForScopes",
        "authn",
        "scopeService",
        "fromStrings",
        "scopes",
        "count",
        "userApprovalUtils",
        "approvedSiteCount",
        "client",
        "getClientId",
        "model",
        "put",
        "count",
        "model",
        "put",
        "userApprovalUtils",
        "isSafeClient",
        "count",
        "client",
        "getCreatedAt",
        "model",
        "put",
        "userApprovalUtils",
        "getClientContactsAsString",
        "client",
        "getContacts",
        "model",
        "put",
        "OAuth2Utils",
        "formatParameterList",
        "scopes",
        "authorizationRequest",
        "remember",
        "approve",
        "approvalParameters",
        "approvalParameters",
        "put",
        "REMEMBER_PARAMETER_KEY",
        "remember",
        "approvalParameters",
        "put",
        "OAuth2Utils",
        "USER_OAUTH_APPROVAL",
        "approve",
        "toString",
        "scopes",
        "authorizationRequest",
        "getScope",
        "scopes",
        "forEach",
        "s",
        "approvalParameters",
        "put",
        "OAuth2Utils",
        "SCOPE_PREFIX",
        "s",
        "authorizationRequest",
        "setApprovalParameters",
        "approvalParameters"
    ],
    "literals": [
        "\"deprecation\"",
        "\"/\"",
        "\"client_id\"",
        "\"scope\"",
        "\"IllegalArgumentException was thrown when attempting to load client\"",
        "\"Client asked for {} but is allowed {}\"",
        "\"Scope not allowed for client '%s'\"",
        "\"device_code\"",
        "\"user_code\"",
        "\"verification_uri\"",
        "\"expires_in\"",
        "\"user_code\"",
        "\"verification_uri_complete\"",
        "\"unable to build verification_uri_complete due to wrong syntax of uri components\"",
        "\"hasRole('ROLE_USER')\"",
        "\"/\"",
        "\"user_code\"",
        "\"hasRole('ROLE_USER')\"",
        "\"/\"",
        "\"/verify\"",
        "\"user_code\"",
        "\"noUserCode\"",
        "\"expiredUserCode\"",
        "\"userCodeAlreadyApproved\"",
        "\"client\"",
        "\"authorizationRequest\"",
        "\"deviceCode\"",
        "\"hasRole('ROLE_USER')\"",
        "\"/\"",
        "\"/approve\"",
        "\"user_code\"",
        "\"authorizationRequest\"",
        "\"deviceCode\"",
        "\"userCodeMismatch\"",
        "\"expiredUserCode\"",
        "\"client\"",
        "\"Unauthorized grant type: \"",
        "\"dc\"",
        "\"scopes\"",
        "\"claims\"",
        "\"count\"",
        "\"gras\"",
        "\"contacts\"",
        "\"scope\"",
        "\"true\""
    ],
    "variables": [
        "clientEntityService",
        "scopeService",
        "config",
        "deviceCodeService",
        "oAuth2RequestFactory",
        "iamUserApprovalHandler",
        "userApprovalUtils",
        "accountUtils",
        "pdp",
        "client"
    ],
    "comments": [
        "just for tests validation"
    ],
    "docstrings": [
        "* Copyright (c) Istituto Nazionale di Fisica Nucleare (INFN). 2016-2021\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "IamDeviceEndpointController",
        "requestDeviceCode",
        "requestUserCode",
        "readUserCode",
        "approveDevice",
        "checkAuthzGrant",
        "filterScopes",
        "setModelForConsentPage",
        "setAuthzRequestAfterApproval"
    ],
    "classes": [
        "IamDeviceEndpointController"
    ]
}