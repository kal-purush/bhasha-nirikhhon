{
    "identifiers": [
        "pulumi_kubernetes",
        "kubernetes",
        "requests",
        "components",
        "cert_manager",
        "cluster_issuer",
        "config",
        "config",
        "keycloak_iam",
        "client",
        "grafana_client",
        "keycloak_iam",
        "role",
        "grafana_admin_role_name",
        "grafana_editor_role_name",
        "grafana_viewer_role_name",
        "utils",
        "k8s",
        "get_decoded_root_cert",
        "kubernetes",
        "core",
        "v1",
        "Namespace",
        "config",
        "monitoring_ns_name",
        "metadata",
        "kubernetes",
        "meta",
        "v1",
        "ObjectMetaArgs",
        "name",
        "config",
        "monitoring_ns_name",
        "config",
        "root_ca_secret_name",
        "kubernetes",
        "core",
        "v1",
        "ConfigMap",
        "resource_name",
        "config",
        "monitoring_ns_name",
        "certs_configmap_name",
        "metadata",
        "kubernetes",
        "meta",
        "v1",
        "ObjectMetaArgs",
        "metadata",
        "name",
        "certs_configmap_name",
        "data",
        "get_decoded_root_cert",
        "files",
        "f",
        "files",
        "f",
        "requests",
        "get",
        "url",
        "timeout",
        "response",
        "raise_for_status",
        "response",
        "text",
        "f",
        "dashboard_content",
        "dashboards",
        "kubernetes",
        "core",
        "v1",
        "ConfigMap",
        "resource_name",
        "config",
        "monitoring_ns_name",
        "dashboards_configmap_name",
        "metadata",
        "kubernetes",
        "meta",
        "v1",
        "ObjectMetaArgs",
        "name",
        "dashboards_configmap_name",
        "config",
        "monitoring_ns_name",
        "labels",
        "dashboard_label",
        "dashboard_label_value",
        "data",
        "get_ceph_dashboards_data",
        "files",
        "config",
        "monitoring_ns_name",
        "kubernetes",
        "helm",
        "v3",
        "Release",
        "resource_name",
        "monitoring_release_name",
        "name",
        "monitoring_release_name",
        "config",
        "monitoring_ns_name",
        "chart",
        "repository_opts",
        "kubernetes",
        "helm",
        "v3",
        "RepositoryOptsArgs",
        "repo",
        "version",
        "values",
        "config",
        "log_level",
        "lower",
        "config",
        "storage_class_name",
        "config",
        "grafana_admin_password",
        "cluster_issuer",
        "metadata",
        "config",
        "grafana_hostname",
        "config",
        "grafana_hostname",
        "config",
        "storage_class_name",
        "config",
        "log_level",
        "lower",
        "config",
        "grafana_hostname",
        "grafana_admin_role_name",
        "grafana_editor_role_name",
        "grafana_viewer_role_name",
        "config",
        "keycloak_url",
        "config",
        "realm_name",
        "config",
        "keycloak_url",
        "config",
        "realm_name",
        "config",
        "keycloak_url",
        "config",
        "realm_name",
        "config",
        "keycloak_url",
        "dashboard_label",
        "dashboard_label_value",
        "grafana_client",
        "client_id",
        "grafana_client",
        "client_secret",
        "certs_configmap_name",
        "certs_configmap_name",
        "config",
        "log_level",
        "lower",
        "config",
        "storage_class_name",
        "skip_crds"
    ],
    "literals": [
        "\"grafana_dashboard\"",
        "\"1\"",
        "\"certs-configmap\"",
        "f\"{config.monitoring_ns_name}-{certs_configmap_name}\"",
        "\"name\"",
        "\"root-ca.crt\"",
        "f\"https://raw.githubusercontent.com/ceph/ceph/refs/heads/main/monitoring/ceph-mixin/dashboards_out/{f}\"",
        "f\"ceph-{f}\"",
        "\"dashboards-configmap\"",
        "f\"{config.monitoring_ns_name}-{dashboards_configmap_name}\"",
        "\"ceph-cluster-advanced.json\"",
        "\"ceph-cluster.json\"",
        "\"cephfs-overview.json\"",
        "\"host-details.json\"",
        "\"hosts-overview.json\"",
        "\"multi-cluster-overview.json\"",
        "\"osd-device-details.json\"",
        "\"osds-overview.json\"",
        "\"pool-detail.json\"",
        "\"pool-overview.json\"",
        "\"radosgw-detail.json\"",
        "\"radosgw-overview.json\"",
        "\"radosgw-sync-overview.json\"",
        "\"rbd-details.json\"",
        "\"rbd-overview.json\"",
        "\"rgw-s3-analytics.json\"",
        "f\"{config.monitoring_ns_name}-monitoring\"",
        "\"kube-prometheus-stack\"",
        "\"https://prometheus-community.github.io/helm-charts\"",
        "\"69.3.3\"",
        "\"crds\"",
        "\"enabled\"",
        "\"upgradeJob\"",
        "\"enabled\"",
        "\"alertmanager\"",
        "\"enabled\"",
        "\"ingres\"",
        "\"enabled\"",
        "\"alertmanagerSpec\"",
        "\"logLevel\"",
        "\"replicas\"",
        "\"retenion\"",
        "\"120h\"",
        "\"storage\"",
        "\"volumeClaimTemplate\"",
        "\"spec\"",
        "\"storageClassName\"",
        "\"resources\"",
        "\"requests\"",
        "\"storage\"",
        "\"16Gi\"",
        "\"grafana\"",
        "\"enabled\"",
        "\"adminUser\"",
        "\"admin\"",
        "\"adminPassword\"",
        "\"ingress\"",
        "\"enabled\"",
        "\"ingressClassName\"",
        "\"nginx\"",
        "\"annotations\"",
        "\"kubernetes.io/ingress.class\"",
        "\"nginx\"",
        "\"cert-manager.io/cluster-issuer\"",
        "\"name\"",
        "\"hosts\"",
        "\"tls\"",
        "\"secretName\"",
        "\"grafana-tls\"",
        "\"hosts\"",
        "\"persistence\"",
        "\"enabled\"",
        "\"storageClassName\"",
        "\"accessModes\"",
        "\"ReadWriteOnce\"",
        "\"size\"",
        "\"16Gi\"",
        "\"grafana.ini\"",
        "\"grafana_net\"",
        "\"\"",
        "\"log\"",
        "\"level\"",
        "\"server\"",
        "\"root_url\"",
        "f\"https://{config.grafana_hostname}\"",
        "\"auth.generic_oauth\"",
        "\"enabled\"",
        "\"true\"",
        "\"name\"",
        "\"Keycloak-OAuth\"",
        "\"allow_sign_up\"",
        "\"true\"",
        "\"allow_assign_grafana_admin\"",
        "\"true\"",
        "\"use_refresh_token\"",
        "\"true\"",
        "\"role_attribute_strict\"",
        "\"true\"",
        "\"scopes\"",
        "\"openid email profile roles\"",
        "\"email_attribute_path\"",
        "\"email\"",
        "\"login_attribute_path\"",
        "\"username\"",
        "\"name_attribute_path\"",
        "\"full_name\"",
        "\"role_attribute_path\"",
        "f\"contains(realm_access.roles[*], '{grafana_admin_role_name}') && 'GrafanaAdmin' \"",
        "f\"|| contains(realm_access.roles[*], '{grafana_editor_role_name}') && 'Editor' \"",
        "f\"|| contains(realm_access.roles[*], '{grafana_viewer_role_name}') && 'Viewer'\"",
        "\"auth_url\"",
        "f\"https://{config.keycloak_url}/realms/{config.realm_name}/protocol/openid-connect/auth\"",
        "\"token_url\"",
        "f\"https://{config.keycloak_url}/realms/{config.realm_name}/protocol/openid-connect/token\"",
        "\"api_url\"",
        "f\"https://{config.keycloak_url}/realms/{config.realm_name}/protocol/openid-connect/userinfo\"",
        "\"redirect_uri\"",
        "f\"https://{config.keycloak_url}/login/generic_oauth\"",
        "\"tls_client_ca\"",
        "\"/etc/ssl/cert.pem\"",
        "\"sidecar\"",
        "\"dashboards\"",
        "\"enabled\"",
        "\"label\"",
        "\"labelValue\"",
        "\"env\"",
        "\"GF_AUTH_GENERIC_OAUTH_CLIENT_ID\"",
        "\"GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET\"",
        "\"extraConfigmapMounts\"",
        "\"name\"",
        "\"mountPath\"",
        "\"/etc/ssl/cert.pem\"",
        "\"subPath\"",
        "\"root-ca.crt\"",
        "\"configMap\"",
        "\"readOnly\"",
        "\"kubeApiServer\"",
        "\"enabled\"",
        "\"kubelet\"",
        "\"enabled\"",
        "\"kubeControllerManager\"",
        "\"enabled\"",
        "\"coreDns\"",
        "\"enabled\"",
        "\"kubeDns\"",
        "\"enabled\"",
        "\"kubeEtcd\"",
        "\"enabled\"",
        "\"kubeScheduler\"",
        "\"enabled\"",
        "\"kubeProxy\"",
        "\"enabled\"",
        "\"kubeMetrics\"",
        "\"enabled\"",
        "\"nodeExporter\"",
        "\"enabled\"",
        "\"prometheusOperator\"",
        "\"enabled\"",
        "\"prometheus\"",
        "\"enabled\"",
        "\"prometheusSpec\"",
        "\"logLevel\"",
        "\"replicas\"",
        "\"shards\"",
        "\"retenion\"",
        "\"10d\"",
        "\"retentionSize\"",
        "\"60GiB\"",
        "\"storageSpec\"",
        "\"volumeClaimTemplate\"",
        "\"spec\"",
        "\"storageClassName\"",
        "\"resources\"",
        "\"requests\"",
        "\"storage\"",
        "\"64Gi\"",
        "\"serviceMonitorSelectorNilUsesHelmValues\"",
        "\"ruleSelectorNilUsesHelmValues\"",
        "\"podMonitorSelectorNilUsesHelmValues\"",
        "\"probeSelectorNilUsesHelmValues\"",
        "\"scrapeConfigSelectorNilUsesHelmValues\""
    ],
    "variables": [
        "dashboard_label",
        "dashboard_label_value",
        "certs_configmap_name",
        "root_ca_secret",
        "dashboards",
        "url",
        "response",
        "dashboard_content",
        "dashboards",
        "dashboards_configmap_name",
        "dashboards_configmap",
        "monitoring_release_name",
        "monitoring_release"
    ],
    "comments": [
        "TODO: To let grafana dashboard use SSO with Keycloak,",
        "we need go to Keycloak admin console:",
        "Client Scopes -> roles -> Mappers -> realm roles",
        "then manually enable \"Add to userinfo\" and Save",
        "https://github.com/prometheus-community/helm-charts/blob/main/charts/kube-prometheus-stack/values.yaml"
    ],
    "docstrings": [],
    "functions": [
        "get_ceph_dashboards_data"
    ],
    "classes": []
}