{
    "identifiers": [
        "org",
        "springframework",
        "data",
        "jdbc",
        "core",
        "mapping",
        "java",
        "util",
        "java",
        "util",
        "Optional",
        "org",
        "apache",
        "commons",
        "logging",
        "Log",
        "org",
        "apache",
        "commons",
        "logging",
        "LogFactory",
        "org",
        "springframework",
        "data",
        "jdbc",
        "repository",
        "config",
        "AbstractJdbcConfiguration",
        "org",
        "springframework",
        "data",
        "mapping",
        "PersistentPropertyAccessor",
        "org",
        "springframework",
        "data",
        "relational",
        "core",
        "conversion",
        "MutableAggregateChange",
        "org",
        "springframework",
        "data",
        "relational",
        "core",
        "dialect",
        "Dialect",
        "org",
        "springframework",
        "data",
        "relational",
        "core",
        "mapping",
        "RelationalMappingContext",
        "org",
        "springframework",
        "data",
        "relational",
        "core",
        "mapping",
        "RelationalPersistentEntity",
        "org",
        "springframework",
        "data",
        "relational",
        "core",
        "mapping",
        "BeforeSaveCallback",
        "org",
        "springframework",
        "jdbc",
        "core",
        "namedparam",
        "NamedParameterJdbcOperations",
        "org",
        "springframework",
        "util",
        "Assert",
        "LOG",
        "LogFactory",
        "getLog",
        "relationalMappingContext",
        "dialect",
        "operations",
        "relationalMappingContext",
        "dialect",
        "namedParameterJdbcOperations",
        "relationalMappingContext",
        "relationalMappingContext",
        "dialect",
        "dialect",
        "operations",
        "namedParameterJdbcOperations",
        "Override",
        "aggregate",
        "aggregateChange",
        "Assert",
        "notNull",
        "aggregate",
        "persistentEntity",
        "relationalMappingContext",
        "getPersistentEntity",
        "aggregate",
        "getClass",
        "idTargetSequence",
        "persistentEntity",
        "getIdTargetSequence",
        "dialect",
        "getIdGeneration",
        "sequencesSupported",
        "persistentEntity",
        "getIdProperty",
        "idTargetSequence",
        "s",
        "dialect",
        "getIdGeneration",
        "nextValueFromSequenceSelect",
        "s",
        "ifPresent",
        "sql",
        "idValue",
        "operations",
        "queryForObject",
        "sql",
        "of",
        "rs",
        "rowNum",
        "rs",
        "getLong",
        "propertyAccessor",
        "persistentEntity",
        "getPropertyAccessor",
        "aggregate",
        "propertyAccessor",
        "setProperty",
        "persistentEntity",
        "getRequiredIdProperty",
        "idValue",
        "idTargetSequence",
        "isPresent",
        "LOG",
        "warn",
        "formatted",
        "aggregate",
        "getClass",
        "getName",
        "aggregate"
    ],
    "literals": [
        "\"The aggregate cannot be null at this point\"",
        "\"\"\"\n                        It seems you're trying to insert an aggregate of type '%s' annotated with @TargetSequence, but the problem is RDBMS you're\n                        working with does not support sequences as such. Falling back to identity columns\n                        \"\"\""
    ],
    "variables": [
        "relationalMappingContext",
        "dialect",
        "operations"
    ],
    "comments": [],
    "docstrings": [
        "* Callback for generating ID via the database sequence. By default, it is registered as a\n * bean in {@link AbstractJdbcConfiguration}\n *\n * @author Mikhail Polivakha"
    ],
    "functions": [
        "IdGeneratingBeforeSaveCallback",
        "onBeforeSave"
    ],
    "classes": [
        "IdGeneratingBeforeSaveCallback"
    ]
}