{
    "identifiers": [
        "org",
        "eclipse",
        "lsp4e",
        "test",
        "completion",
        "org",
        "junit",
        "Assert",
        "java",
        "util",
        "Random",
        "java",
        "util",
        "concurrent",
        "Executors",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "util",
        "concurrent",
        "TimeoutException",
        "org",
        "eclipse",
        "lsp4e",
        "operations",
        "completion",
        "CompletionProposalTools",
        "org",
        "junit",
        "Test",
        "RANDOM",
        "maxLength",
        "length",
        "RANDOM",
        "nextInt",
        "maxLength",
        "length",
        "chars",
        "chars",
        "chars",
        "chars",
        "toUpperCase",
        "sb",
        "length",
        "i",
        "i",
        "length",
        "i",
        "sb",
        "append",
        "chars",
        "charAt",
        "RANDOM",
        "nextInt",
        "chars",
        "length",
        "sb",
        "toString",
        "Test",
        "documentFilter",
        "completionFilter",
        "expectedScore",
        "actualScore",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "assertEquals",
        "expectedScore",
        "actualScore",
        "Test",
        "documentFilter",
        "completionFilter",
        "expectedScore",
        "actualScore",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "assertEquals",
        "expectedScore",
        "actualScore",
        "Test",
        "documentFilter",
        "completionFilter",
        "expectedScore",
        "actualScore",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "assertEquals",
        "expectedScore",
        "actualScore",
        "Test",
        "testCases",
        "timeoutMS",
        "executor",
        "Executors",
        "newSingleThreadExecutor",
        "i",
        "i",
        "testCases",
        "i",
        "commonPrefix",
        "generateRandomString",
        "documentFilter",
        "commonPrefix",
        "generateRandomString",
        "completionFilter",
        "commonPrefix",
        "generateRandomString",
        "future",
        "executor",
        "submit",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "future",
        "get",
        "timeoutMS",
        "TimeUnit",
        "SECONDS",
        "e",
        "future",
        "cancel",
        "fail",
        "documentFilter",
        "completionFilter",
        "e",
        "fail",
        "e",
        "getMessage",
        "executor",
        "shutdown",
        "Test",
        "documentFilter",
        "completionFilter",
        "expectedScore",
        "actualScore",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "assertEquals",
        "expectedScore",
        "actualScore",
        "Test",
        "documentFilter",
        "completionFilter",
        "expectedScore",
        "actualScore",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "assertEquals",
        "expectedScore",
        "actualScore",
        "Test",
        "documentFilter",
        "completionFilter",
        "expectedScore",
        "actualScore",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "assertEquals",
        "expectedScore",
        "actualScore",
        "Test",
        "documentFilter",
        "completionFilter",
        "expectedScore",
        "actualScore",
        "CompletionProposalTools",
        "getScoreOfFilterMatch",
        "documentFilter",
        "completionFilter",
        "assertEquals",
        "expectedScore",
        "actualScore"
    ],
    "literals": [
        "\"\"",
        "\"abcdefghijklmnopqrstuvwxyzäöüß\"",
        "\"_\"",
        "\"Example\"",
        "\"eXaMpLe\"",
        "\"The score should be 0 for case-insensitive matches.\"",
        "\"example\"",
        "\"\"",
        "\"The score should be -1 for an empty completionFilter.\"",
        "\"\"",
        "\"example\"",
        "\"The score should be 0 for an empty documentFilter.\"",
        "\"Possible infinite loop detected in getScoreOfFilterMatch with inputs: \"",
        "\"documentFilter='\"",
        "\"', completionFilter='\"",
        "\"'\"",
        "\"Unexpected exception: \"",
        "\"example\"",
        "\"example\"",
        "\"The score should be 0 for exact matches.\"",
        "\"foo\"",
        "\"example\"",
        "\"The score should be -1 when there's no match.\"",
        "\"ex\"",
        "\"example\"",
        "\"The score should be 0 when documentFilter is a prefix.\"",
        "\"eap\"",
        "\"example\"",
        "\"The score should account for scattered characters.\""
    ],
    "variables": [],
    "comments": [
        "Number of random test cases to try",
        "Timeout threshold for detecting infinite loops",
        "String with length of 0-2 chars",
        "Interrupt stuck execution"
    ],
    "docstrings": [
        "*****************************************************************************\n * Copyright (c) 2025 Vegard IT GmbH and others.\n * This program and the accompanying materials are made\n * available under the terms of the Eclipse Public License 2.0\n * which is available at https://www.eclipse.org/legal/epl-2.0/\n *\n * SPDX-License-Identifier: EPL-2.0\n *\n * Contributors:\n *  Sebastian Thomschke (Vegard IT GmbH) - initial implementation\n ******************************************************************************",
        "* Test cases for {@link CompletionProposalTools#getScoreOfFilterMatch(String, String)}",
        "* Test case for https://github.com/eclipse-lsp4e/lsp4e/issues/1132"
    ],
    "functions": [
        "generateRandomString",
        "testCaseInsensitivity",
        "testEmptyCompletionFilter",
        "testEmptyDocumentFilter",
        "testRandomFilters",
        "testExactMatch",
        "testNoMatch",
        "testPrefixMatch",
        "testScatteredMatch"
    ],
    "classes": [
        "ScoreOfFilterMatchTest"
    ]
}