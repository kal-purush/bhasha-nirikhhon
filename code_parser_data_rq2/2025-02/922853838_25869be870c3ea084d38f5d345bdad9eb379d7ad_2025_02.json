{
    "identifiers": [
        "pytest",
        "torch",
        "resnet_10",
        "configuration_resnet",
        "ResNet10Config",
        "resnet_10",
        "modeling_resnet",
        "ResNet10",
        "pytest",
        "fixture",
        "ResNet10Config",
        "num_channels",
        "embedding_size",
        "hidden_sizes",
        "hidden_act",
        "output_hidden_states",
        "pytest",
        "fixture",
        "config",
        "ResNet10",
        "config",
        "pytest",
        "fixture",
        "torch",
        "randn",
        "batch_size",
        "input_size",
        "input_size",
        "model",
        "config",
        "isinstance",
        "model",
        "ResNet10",
        "model",
        "config",
        "config",
        "model",
        "input_data",
        "model",
        "input_data",
        "input_data",
        "shape",
        "output",
        "last_hidden_state",
        "shape",
        "batch_size",
        "expected_size",
        "expected_size",
        "model",
        "input_data",
        "model",
        "input_data",
        "output_hidden_states",
        "output",
        "hidden_states",
        "len",
        "output",
        "hidden_states",
        "pytest",
        "mark",
        "parametrize",
        "model",
        "batch_size",
        "torch",
        "randn",
        "batch_size",
        "input_size",
        "input_size",
        "model",
        "x",
        "output",
        "last_hidden_state",
        "shape",
        "batch_size",
        "model",
        "name",
        "param",
        "model",
        "named_parameters",
        "param",
        "param",
        "data",
        "torch",
        "isnan",
        "param",
        "data",
        "model",
        "torch",
        "randn",
        "batch_size",
        "wrong_channels",
        "input_size",
        "input_size",
        "pytest",
        "raises",
        "RuntimeError",
        "model",
        "x",
        "pytest",
        "mark",
        "parametrize",
        "model",
        "input_size",
        "torch",
        "randn",
        "batch_size",
        "input_size",
        "input_size",
        "model",
        "x",
        "input_size",
        "output",
        "last_hidden_state",
        "shape",
        "expected_size"
    ],
    "literals": [
        "\"relu\"",
        "\"batch_size\"",
        "\"input_size\""
    ],
    "variables": [
        "batch_size",
        "input_size",
        "output",
        "expected_size",
        "batch_size",
        "output",
        "input_size",
        "x",
        "output",
        "wrong_channels",
        "batch_size",
        "input_size",
        "x",
        "_",
        "batch_size",
        "x",
        "output",
        "expected_size"
    ],
    "comments": [
        "After initial conv and maxpool: 224 -> 112 -> 56",
        "After 4 stages with stride=2: 56 -> 28 -> 14 -> 7",
        "Should have hidden states from:",
        "1. After embedder (before encoder)",
        "2. After each encoder stage (4 stages)",
        "Total: 5 hidden states",
        "Config expects 3",
        "Due to 5 downsampling operations"
    ],
    "docstrings": [
        "\"\"\"Test if model initializes correctly with given config\"\"\"",
        "\"\"\"Test if forward pass produces correct output shape\"\"\"",
        "\"\"\"Test if hidden states are returned when requested\"\"\"",
        "\"\"\"Test if model handles different batch sizes\"\"\"",
        "\"\"\"Test if all model parameters are initialized (not None)\"\"\"",
        "\"\"\"Test if model properly handles incorrect number of input channels\"\"\"",
        "\"\"\"Test if model handles different input sizes\"\"\""
    ],
    "functions": [
        "config",
        "model",
        "input_data",
        "test_model_initialization",
        "test_forward_pass_shape",
        "test_hidden_states_output",
        "test_different_batch_sizes",
        "test_model_parameters_not_none",
        "test_input_channel_validation",
        "test_different_input_sizes"
    ],
    "classes": []
}