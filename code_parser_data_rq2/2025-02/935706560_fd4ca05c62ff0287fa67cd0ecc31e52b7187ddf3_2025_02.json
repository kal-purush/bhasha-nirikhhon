{
    "identifiers": [
        "express",
        "bodyParser",
        "axios",
        "jwt",
        "cors",
        "cookieParser",
        "express",
        "app",
        "express",
        "app",
        "express",
        "app",
        "bodyParser",
        "app",
        "cors",
        "app",
        "cookieParser",
        "authenticateToken",
        "req",
        "res",
        "next",
        "req",
        "token",
        "res",
        "jwt",
        "token",
        "SECRET_KEY",
        "req",
        "decoded",
        "next",
        "error",
        "res",
        "app",
        "authenticateToken",
        "req",
        "res",
        "res",
        "app",
        "authenticateToken",
        "req",
        "res",
        "res",
        "app",
        "authenticateToken",
        "req",
        "res",
        "req",
        "req",
        "axios",
        "API_REST",
        "username",
        "parseInt",
        "user",
        "score",
        "axios",
        "API_REST",
        "user",
        "userToPatch",
        "username",
        "palavra",
        "axios",
        "API_SOAP",
        "xmlData",
        "err",
        "err",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "axios",
        "API_REST",
        "dados",
        "response",
        "res",
        "err",
        "res",
        "err",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "axios",
        "API_REST",
        "username",
        "user",
        "user",
        "password",
        "user",
        "res",
        "jwt",
        "SECRET_KEY",
        "res",
        "token",
        "res",
        "err",
        "res",
        "err",
        "res",
        "app",
        "req",
        "res",
        "res",
        "res",
        "app",
        "req",
        "res",
        "res",
        "app",
        "port",
        "port"
    ],
    "literals": [
        "'express'",
        "'body-parser'",
        "'axios'",
        "\"jsonwebtoken\"",
        "\"cors\"",
        "'cookie-parser'",
        "'public'",
        "\"http://localhost:8000/eventos/\"",
        "\"http://localhost:8080/users/\"",
        "\"minhachavemuitosegurasegurademaisdescobreai\"",
        "\"/login\"",
        "\"/login\"",
        "\"/\"",
        "\"index.html\"",
        "'public'",
        "\"/ranking\"",
        "'ranking.html'",
        "'public'",
        "\"/tentativa\"",
        "${API_REST+username}",
        "${API_REST}${user.id}",
        "\"Content-Type\"",
        "\"application/json\"",
        "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:soap=\"http://src.soap/\">\n            <soapenv:Header/>\n            <soapenv:Body>\n                <soap:mensagem>\n                    <arg0>${username}</arg0>\n                    <arg1>${palavra}</arg1>\n                </soap:mensagem>\n            </soapenv:Body>\n        </soapenv:Envelope>",
        "'Content-Type'",
        "'text/xml'",
        "\"Tentativa enviada com sucesso!\"",
        "\"/cadastro\"",
        "'cadastro.html'",
        "'public'",
        "\"/cadastro\"",
        "${API_REST}",
        "\"Content-Type\"",
        "\"application/json\"",
        "'/login'",
        "\"/error\"",
        "\"An erro has ocurred while post user: \"",
        "\"/login\"",
        "'login.html'",
        "'public'",
        "\"/login\"",
        "${API_REST+username}",
        "\"Credenciais inválidas\"",
        "'1h'",
        "\"token\"",
        "\"/\"",
        "\"/error\"",
        "\"An erro has ocurred while post user: \"",
        "'login.html'",
        "'public'",
        "\"/logout\"",
        "\"token\"",
        "\"/login\"",
        "\"/error\"",
        "'error.html'",
        "'public'",
        "'0.0.0.0'",
        "App is running at port ${port}..."
    ],
    "variables": [
        "app",
        "port",
        "API_SOAP",
        "API_REST",
        "SECRET_KEY",
        "authenticateToken",
        "token",
        "decoded",
        "username",
        "user",
        "score",
        "userToPatch",
        "xmlData",
        "dados",
        "response",
        "user",
        "token"
    ],
    "comments": [
        "rotas",
        "Middleware para verificar o token",
        "home",
        "eventos",
        "enviar username para o SOAP",
        "aumentando o score do usuário",
        "get use by username from rest api",
        "get use by username from rest api",
        "res.redirect('/eventos');",
        "cadastro render file",
        "cadastra um novo usuário pela API Rest",
        "login",
        "login",
        "get use by username from rest api",
        "res.redirect(\"/error\");",
        "Logout (Remover Token)"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}