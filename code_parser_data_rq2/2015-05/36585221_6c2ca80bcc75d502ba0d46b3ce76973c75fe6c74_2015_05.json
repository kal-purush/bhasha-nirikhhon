{
    "identifiers": [
        "c",
        "e",
        "dnum",
        "dn",
        "c",
        "dn",
        "e",
        "dn",
        "x",
        "x",
        "x",
        "dnum",
        "n",
        "n",
        "raw",
        "n",
        "n",
        "n",
        "raw",
        "raw",
        "expInf",
        "raw",
        "expInf",
        "coef",
        "exp",
        "coef",
        "ZERO",
        "coef",
        "MINUS_INF",
        "coef",
        "INF",
        "isInteger",
        "coef",
        "coef",
        "isInteger",
        "exp",
        "exp",
        "exp",
        "minExp",
        "ZERO",
        "exp",
        "maxExp",
        "coef",
        "MINUS_INF",
        "INF",
        "raw",
        "coef",
        "exp",
        "dnum",
        "c",
        "e",
        "c",
        "c",
        "e",
        "c",
        "sign",
        "c",
        "e",
        "e",
        "sign",
        "digits",
        "repeat",
        "e",
        "digits",
        "e",
        "e",
        "digits",
        "digits",
        "repeat",
        "e",
        "digits",
        "digits",
        "digits",
        "e",
        "e",
        "digits",
        "e",
        "digits",
        "digits",
        "i",
        "digits",
        "i",
        "e",
        "digits",
        "digits",
        "digits",
        "digits",
        "se",
        "e",
        "digits",
        "digits",
        "digits",
        "digits",
        "sign",
        "digits",
        "se",
        "dnum",
        "e",
        "e",
        "c",
        "c",
        "e",
        "e",
        "dnum",
        "dnum",
        "isFinite",
        "dnum",
        "dnum",
        "ZERO",
        "make",
        "dnum",
        "make",
        "dnum",
        "mutable",
        "n",
        "n",
        "roundup",
        "shiftRight",
        "n",
        "roundup",
        "n",
        "n",
        "n",
        "n",
        "n",
        "dnum",
        "dnum",
        "that",
        "that",
        "that",
        "isDnum",
        "that",
        "cmp",
        "that",
        "s",
        "s",
        "s",
        "s",
        "ZERO",
        "spanSignedDigits",
        "s",
        "i",
        "i",
        "before",
        "i",
        "s",
        "s",
        "i",
        "i",
        "after",
        "spanDigits",
        "s",
        "i",
        "i",
        "after",
        "after",
        "trimRight",
        "after",
        "i",
        "s",
        "s",
        "i",
        "i",
        "spanSignedDigits",
        "s",
        "i",
        "exp",
        "parseInt",
        "es",
        "i",
        "es",
        "i",
        "s",
        "exp",
        "after",
        "parseInt",
        "before",
        "after",
        "make",
        "coef",
        "exp",
        "s",
        "start",
        "s",
        "start",
        "c",
        "c",
        "i",
        "s",
        "start",
        "skipDigits",
        "s",
        "i",
        "s",
        "start",
        "s",
        "start",
        "skipDigits",
        "s",
        "start",
        "s",
        "i",
        "s",
        "i",
        "n",
        "isDigit",
        "s",
        "i",
        "i",
        "i",
        "c",
        "c",
        "c",
        "s",
        "c",
        "s",
        "s",
        "i",
        "c",
        "i",
        "s",
        "i",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "same",
        "x",
        "y",
        "sub",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "mutable",
        "x",
        "y",
        "mutable",
        "y",
        "align",
        "x",
        "y",
        "x",
        "y",
        "c",
        "c",
        "ZERO",
        "c",
        "minInt",
        "maxInt",
        "c",
        "x",
        "mutable",
        "x",
        "y",
        "mutable",
        "y",
        "shiftRight",
        "x",
        "x",
        "shiftRight",
        "y",
        "y",
        "c",
        "x",
        "y",
        "make",
        "c",
        "x",
        "x",
        "y",
        "y",
        "mutable",
        "y",
        "y",
        "add",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "x",
        "y",
        "y",
        "tmp",
        "tmp",
        "x",
        "x",
        "y",
        "y",
        "tmp",
        "y",
        "x",
        "shiftLeft",
        "y",
        "y",
        "x",
        "x",
        "roundup",
        "shiftRight",
        "x",
        "x",
        "y",
        "x",
        "y",
        "roundup",
        "x",
        "n",
        "n",
        "isInteger",
        "c",
        "n",
        "c",
        "n",
        "minExp",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "expInf",
        "n",
        "roundup",
        "x",
        "y",
        "convert",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "convert",
        "x",
        "y",
        "x",
        "y",
        "sign",
        "sign",
        "MINUS_INF",
        "INF",
        "c",
        "e",
        "c",
        "MINUS_INF",
        "c",
        "INF",
        "isInteger",
        "c",
        "make",
        "c",
        "e",
        "c",
        "e",
        "parse",
        "c",
        "n",
        "n",
        "isFinite",
        "n",
        "minInt",
        "n",
        "n",
        "maxInt",
        "n",
        "n",
        "s",
        "n",
        "s",
        "s",
        "n",
        "n",
        "s",
        "n",
        "s",
        "n",
        "n",
        "rpt",
        "s",
        "n",
        "n",
        "s",
        "s",
        "rpt"
    ],
    "literals": [
        "\"use strict\"",
        "'object'",
        "\"dnum.make invalid coefficient: \"",
        "\"dnum.make invalid exponent: \"",
        "string",
        "\"0\"",
        "\"-\"",
        "\"\"",
        "\"inf\"",
        "\"\"",
        "\"0\"",
        "\"\"",
        "\".\"",
        "\"0\"",
        "\".\"",
        "\".\"",
        "\"e\"",
        "\"\"",
        "\"\"",
        "'number'",
        "string",
        "\"string\"",
        "\"0\"",
        "\"\"",
        "'.'",
        "'0'",
        "'e'",
        "string",
        "string",
        "'+'",
        "'-'",
        "string",
        "string",
        "string",
        "string",
        "'0'",
        "'9'",
        "string",
        "string",
        "string",
        "\"number\"",
        "string",
        "string",
        "''",
        "''",
        "\"repeat too large\"",
        "''"
    ],
    "variables": [
        "dnum",
        "dn",
        "minExp",
        "maxExp",
        "expInf",
        "maxInt",
        "minInt",
        "ZERO",
        "INF",
        "MINUS_INF",
        "c",
        "e",
        "sign",
        "digits",
        "se",
        "i",
        "e",
        "c",
        "n",
        "roundup",
        "i",
        "before",
        "after",
        "exp",
        "es",
        "coef",
        "i",
        "start",
        "c",
        "n",
        "i",
        "c",
        "tmp",
        "roundup",
        "c",
        "roundup",
        "rpt"
    ],
    "comments": [
        "<reference path=\"node.d.ts\"/>",
        "construct a mutable number (for internal use only)",
        "return a mutable version of a number (for internal use only)",
        "if (exp === undefined)",
        "exp = 0;",
        "methods ---------------------------------------------------------------------",
        "avoid -0 coefficient",
        "static functions ------------------------------------------------------------",
        "invalid input",
        "invalid input",
        "warning: 1e2 will not be the \"same\" as 100",
        "cmp compares two dnums, returning 0, -1, or +1",
        "add/sub ---------------------------------------------------------------------",
        "add returns the sum of two dnums",
        "NaN from adding +inf and -inf",
        "overflow",
        "sub returns the difference of two dnums",
        "could avoid copy by duplicating add code",
        "swap",
        "mul -------------------------------------------------------------------------",
        "mul returns the product of two dnums",
        "div -------------------------------------------------------------------------",
        "div returns the quotient of two dnums",
        "helpers ---------------------------------------------------------------------",
        "fast path",
        "utility functions -----------------------------------------------------------",
        "in ES6"
    ],
    "docstrings": [
        "* dnum implements immutable decimal floating point numbers\n * on top of JavaScript binary floating point numbers\n * The representation is a coefficient and an exponent\n * where both are integers.\n * The sign of the number is the sign of the coefficient.\n * Infinite is represented by an infinite coefficient and a large exponent.\n *\n * Created by andrew on 2015-05-17.",
        "* make constructs a dnum\n * @param {number} coef integer, may be infinite\n * @param {number} [exp=0] integer, outside range of -126 to 126 will become infinite\n * @returns {Object} an immutable dnum",
        "* String converts a Dnum to a string.\n * If the exponent is 0 it will print the number as an integer.\n * Otherwise it will try to avoid scientific notation\n * adding up to 4 zeroes at the end or 3 zeroes at the beginning.\n * @returns {string}",
        "* @returns {boolean} whether or not the dnum is an integer",
        "* @returns {boolean} whether or not the dnum is zero",
        "* @returns {boolean} whether or not the dnum is infinite",
        "* @returns {number} 0, +1, or -1",
        "* @returns {Object} the negative of a dnum (but not negative zero)",
        "* @returns {Object} the absolute value of a dnum",
        "* @returns {number} the integer value of a dnum,\n * zero if the absolute value < 1, infinite if too large",
        "* @returns {number} this dnum converted to a JavaScript number",
        "* @param that\n * @returns {boolean} true if that is a number equal to this, else false",
        "* Convert a string to a dnum.\n * @param s {string}\n * @returns {object|false} a dnum, or null if not a valid number"
    ],
    "functions": [
        "raw",
        "isDnum",
        "mutable",
        "make",
        "parse",
        "spanSignedDigits",
        "spanDigits",
        "skipDigits",
        "isDigit",
        "trimRight",
        "same",
        "cmp",
        "add",
        "sub",
        "align",
        "shiftLeft",
        "shiftRight",
        "mul",
        "div",
        "inf",
        "convert",
        "isInteger",
        "repeat"
    ],
    "classes": []
}