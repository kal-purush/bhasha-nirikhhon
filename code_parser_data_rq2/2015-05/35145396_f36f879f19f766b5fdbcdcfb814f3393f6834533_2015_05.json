{
    "identifiers": [
        "org",
        "h2",
        "test",
        "db",
        "java",
        "sql",
        "Connection",
        "java",
        "sql",
        "ResultSet",
        "java",
        "sql",
        "SQLException",
        "java",
        "sql",
        "Statement",
        "org",
        "h2",
        "test",
        "TestBase",
        "org",
        "h2",
        "value",
        "DataType",
        "conn",
        "stat",
        "a",
        "TestBase",
        "createCaller",
        "init",
        "test",
        "Override",
        "deleteDb",
        "testUsingBadSyntax",
        "testUsingGoodSyntax",
        "testHashIndex",
        "testSpatialIndex",
        "testBadSpatialSyntax",
        "conn",
        "getConnection",
        "stat",
        "conn",
        "createStatement",
        "stat",
        "execute",
        "stat",
        "execute",
        "stat",
        "execute",
        "rs",
        "stat",
        "executeQuery",
        "assertTrue",
        "rs",
        "next",
        "assertFalse",
        "rs",
        "next",
        "stat",
        "execute",
        "rs",
        "stat",
        "executeQuery",
        "assertFalse",
        "rs",
        "next",
        "rs",
        "stat",
        "executeQuery",
        "assertTrue",
        "rs",
        "next",
        "assertEquals",
        "rs",
        "getInt",
        "assertEquals",
        "rs",
        "getInt",
        "stat",
        "execute",
        "conn",
        "close",
        "deleteDb",
        "conn",
        "getConnection",
        "stat",
        "conn",
        "createStatement",
        "stat",
        "execute",
        "assertFalse",
        "isSupportedSyntax",
        "stat",
        "assertFalse",
        "isSupportedSyntax",
        "stat",
        "assertFalse",
        "isSupportedSyntax",
        "stat",
        "assertFalse",
        "isSupportedSyntax",
        "stat",
        "assertFalse",
        "isSupportedSyntax",
        "stat",
        "conn",
        "close",
        "deleteDb",
        "conn",
        "getConnection",
        "stat",
        "conn",
        "createStatement",
        "stat",
        "execute",
        "assertTrue",
        "isSupportedSyntax",
        "stat",
        "assertTrue",
        "isSupportedSyntax",
        "stat",
        "assertTrue",
        "isSupportedSyntax",
        "stat",
        "conn",
        "close",
        "deleteDb",
        "stat",
        "sql",
        "stat",
        "execute",
        "sql",
        "ex",
        "config",
        "mvStore",
        "config",
        "mvcc",
        "config",
        "memory",
        "config",
        "mvcc",
        "DataType",
        "GEOMETRY_CLASS",
        "deleteDb",
        "conn",
        "getConnection",
        "stat",
        "conn",
        "createStatement",
        "stat",
        "execute",
        "stat",
        "execute",
        "stat",
        "execute",
        "stat",
        "execute",
        "stat",
        "execute",
        "stat",
        "execute",
        "stat",
        "execute",
        "rs",
        "stat",
        "executeQuery",
        "assertTrue",
        "rs",
        "next",
        "assertEquals",
        "rs",
        "getInt",
        "assertFalse",
        "rs",
        "next",
        "rs",
        "close",
        "conn",
        "close",
        "deleteDb",
        "config",
        "mvStore",
        "config",
        "mvcc",
        "config",
        "memory",
        "config",
        "mvcc",
        "DataType",
        "GEOMETRY_CLASS",
        "deleteDb",
        "conn",
        "getConnection",
        "stat",
        "conn",
        "createStatement",
        "stat",
        "execute",
        "stat",
        "execute",
        "assertFalse",
        "isSupportedSyntax",
        "stat",
        "conn",
        "close",
        "deleteDb"
    ],
    "literals": [
        "\"using_index\"",
        "\"using_index\"",
        "\"create table test(id int)\"",
        "\"create index idx_name on test(id) using hash\"",
        "\"insert into test select x from system_range(1, 1000)\"",
        "\"select * from test where id=100\"",
        "\"delete from test where id=100\"",
        "\"select * from test where id=100\"",
        "\"select min(id), max(id) from test\"",
        "\"drop table test\"",
        "\"using_index\"",
        "\"using_index\"",
        "\"create table test(id int)\"",
        "\"create hash index idx_name_1 on test(id) using hash\"",
        "\"create hash index idx_name_2 on test(id) using btree\"",
        "\"create index idx_name_3 on test(id) using hashtree\"",
        "\"create unique hash index idx_name_4 on test(id) using hash\"",
        "\"create index idx_name_5 on test(id) using hash table\"",
        "\"using_index\"",
        "\"using_index\"",
        "\"create table test(id int)\"",
        "\"create index idx_name_1 on test(id) using hash\"",
        "\"create index idx_name_2 on test(id) using btree\"",
        "\"create unique index idx_name_3 on test(id) using hash\"",
        "\"using_index\"",
        "\"spatial\"",
        "\"spatial\"",
        "\"create table test\"",
        "\"(id int primary key, poly geometry)\"",
        "\"insert into test values(1, \"",
        "\"'POLYGON ((1 1, 1 2, 2 2, 1 1))')\"",
        "\"insert into test values(2,null)\"",
        "\"insert into test values(3, \"",
        "\"'POLYGON ((3 1, 3 2, 4 2, 3 1))')\"",
        "\"insert into test values(4,null)\"",
        "\"insert into test values(5, \"",
        "\"'POLYGON ((1 3, 1 4, 2 4, 1 3))')\"",
        "\"create index on test(poly) using rtree\"",
        "\"select * from test \"",
        "\"where poly && 'POINT (1.5 1.5)'::Geometry\"",
        "\"id\"",
        "\"spatial\"",
        "\"spatial\"",
        "\"spatial\"",
        "\"create table test\"",
        "\"(id int primary key, poly geometry)\"",
        "\"insert into test values(1, \"",
        "\"'POLYGON ((1 1, 1 2, 2 2, 1 1))')\"",
        "\"create spatial index on test(poly) using rtree\"",
        "\"spatial\""
    ],
    "variables": [
        "conn",
        "stat",
        "a"
    ],
    "comments": [
        "Close the database",
        "Close the database"
    ],
    "docstrings": [
        "* Copyright 2004-2014 H2 Group. Multiple-Licensed under the MPL 2.0,\n * and the EPL 1.0 (http://h2database.com/html/license.html).\n * Initial Developer: H2 Group",
        "* Tests the \"create index ... using\" syntax.\n *\n * @author Erwan Bocher Atelier SIG, IRSTV FR CNRS 2488",
        "* Run just this test.\n     *\n     * @param a ignored\n     * @throws java.lang.Exception",
        "* Return if the syntax is supported otherwise false\n     *\n     * @param stat\n     * @param sql\n     * @return"
    ],
    "functions": [
        "main",
        "test",
        "testHashIndex",
        "testUsingBadSyntax",
        "testUsingGoodSyntax",
        "isSupportedSyntax",
        "testSpatialIndex",
        "testBadSpatialSyntax"
    ],
    "classes": [
        "TestUsingIndex"
    ]
}