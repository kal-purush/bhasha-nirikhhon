{
    "identifiers": [
        "angular",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "$q",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "scannedText",
        "scannedFormat",
        "wasCancelled",
        "$q",
        "defer",
        "defer",
        "defer",
        "data",
        "data",
        "$q",
        "defer",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$q",
        "$timeout",
        "ArrayBuffer",
        "services",
        "seconds",
        "$q",
        "$timeout",
        "q",
        "deviceScan",
        "seconds",
        "q",
        "deviceID",
        "$q",
        "$timeout",
        "q",
        "deviceConnect",
        "q",
        "deviceID",
        "$q",
        "$timeout",
        "q",
        "q",
        "deviceID",
        "serviceUUID",
        "characteristicUUID",
        "$q",
        "$timeout",
        "q",
        "readData",
        "q",
        "deviceID",
        "serviceUUID",
        "characteristicUUID",
        "data",
        "$q",
        "$timeout",
        "q",
        "q",
        "deviceID",
        "serviceUUID",
        "characteristicUUID",
        "data",
        "$q",
        "$timeout",
        "q",
        "q",
        "deviceID",
        "serviceUUID",
        "characteristicUUID",
        "$q",
        "$timeout",
        "q",
        "q",
        "deviceID",
        "serviceUUID",
        "characteristicUUID",
        "$q",
        "$timeout",
        "q",
        "q",
        "deviceID",
        "$q",
        "q",
        "q",
        "$q",
        "q",
        "q",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "imageData",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "options",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "contacts",
        "contact",
        "$q",
        "defer",
        "i",
        "i",
        "i",
        "contact",
        "existingIndex",
        "i",
        "existingIndex",
        "contact",
        "defer",
        "defer",
        "defer",
        "contact",
        "$q",
        "defer",
        "i",
        "i",
        "i",
        "contact",
        "toRemove",
        "i",
        "toRemove",
        "defer",
        "toRemove",
        "defer",
        "defer",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "fields",
        "defer",
        "fields",
        "defer",
        "i",
        "i",
        "key",
        "i",
        "i",
        "key",
        "defer",
        "results",
        "defer",
        "ngCordovaMocks",
        "$q",
        "options",
        "$q",
        "options",
        "options",
        "q",
        "options",
        "q",
        "ngCordovaMocks",
        "device",
        "cordova",
        "model",
        "platform",
        "uuid",
        "version",
        "ngCordovaMocks",
        "$interval",
        "$q",
        "currentAcceleration",
        "throwsError",
        "positions",
        "watchIntervals",
        "$q",
        "defer",
        "defer",
        "defer",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "delay",
        "options",
        "$interval",
        "defer",
        "randomX",
        "randomY",
        "randomZ",
        "result",
        "defer",
        "result",
        "delay",
        "watchId",
        "defer",
        "watchId",
        "$q",
        "watchId",
        "defer",
        "i",
        "i",
        "i",
        "watchId",
        "$interval",
        "watchIntervals",
        "i",
        "removed",
        "i",
        "removed",
        "removed",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$interval",
        "$q",
        "currentHeading",
        "throwsError",
        "readings",
        "watchIntervals",
        "$q",
        "defer",
        "defer",
        "defer",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "delay",
        "options",
        "watchID",
        "$interval",
        "defer",
        "magneticHeading",
        "trueHeading",
        "headingAccuracy",
        "result",
        "defer",
        "result",
        "delay",
        "id",
        "i",
        "i",
        "i",
        "id",
        "$interval",
        "watchIntervals",
        "i",
        "removed",
        "i",
        "removed",
        "removed",
        "defer",
        "cancel",
        "watchID",
        "defer",
        "id",
        "cancel",
        "id",
        "watchID",
        "defer",
        "watchID",
        "defer",
        "watchId",
        "$q",
        "watchId",
        "defer",
        "i",
        "i",
        "i",
        "watchId",
        "$interval",
        "watchIntervals",
        "i",
        "removed",
        "i",
        "removed",
        "removed",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$q",
        "dialogText",
        "dialogTitle",
        "defaultValue",
        "promptResponse",
        "beepCount",
        "useHostAbilities",
        "message",
        "title",
        "buttonName",
        "$q",
        "alert",
        "message",
        "d",
        "message",
        "title",
        "buttonName",
        "d",
        "d",
        "message",
        "title",
        "buttonName",
        "$q",
        "confirm",
        "message",
        "d",
        "result",
        "message",
        "title",
        "buttonName",
        "d",
        "d",
        "message",
        "title",
        "buttonLabels",
        "defaultText",
        "$q",
        "prompt",
        "message",
        "defaultText",
        "d",
        "result",
        "message",
        "title",
        "defaultText",
        "i",
        "buttonLabels",
        "i",
        "buttonLabels",
        "i",
        "d",
        "d",
        "times",
        "times",
        "ngCordovaMocks",
        "$q",
        "errorMessage",
        "$q",
        "defer",
        "errorMessage",
        "defer",
        "defer",
        "throwsError",
        "fileSystem",
        "shouldMockFiles",
        "files",
        "directory",
        "$q",
        "directory",
        "directory",
        "defer",
        "defer",
        "defer",
        "mockIt",
        "directory",
        "overwrite",
        "$q",
        "directory",
        "defer",
        "defer",
        "mockIt",
        "filePath",
        "mockIt",
        "filePath",
        "$q",
        "filePath",
        "filePath",
        "defer",
        "defer",
        "defer",
        "mockIt",
        "filePath",
        "overwrite",
        "$q",
        "filePath",
        "defer",
        "defer",
        "mockIt",
        "directory",
        "file",
        "mockIt",
        "filePath",
        "data",
        "options",
        "filePath",
        "data",
        "filePath",
        "data",
        "mockIt",
        "filePath",
        "filePath",
        "filePath",
        "$q",
        "files",
        "filePath",
        "files",
        "filePath",
        "defer",
        "files",
        "filePath",
        "defer",
        "defer",
        "mockIt",
        "filePath",
        "mockIt",
        "filePath",
        "mockIt",
        "filePath",
        "mockIt",
        "filePath",
        "mockIt",
        "filePath",
        "mockIt",
        "filePath",
        "mockIt",
        "source",
        "filePath",
        "trust",
        "options",
        "mockIt",
        "server",
        "filePath",
        "options",
        "mockIt",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "file",
        "$q",
        "defer",
        "defer",
        "defer",
        "pack",
        "$q",
        "defer",
        "defer",
        "defer",
        "pack",
        "$q",
        "defer",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$interval",
        "$q",
        "throwsError",
        "watchIntervals",
        "locations",
        "currentPosition",
        "nextPosition",
        "useHostAbilities",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "options",
        "navigator",
        "navigator",
        "position",
        "position",
        "defer",
        "error",
        "defer",
        "error",
        "defer",
        "defer",
        "defer",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "delay",
        "options",
        "watchID",
        "$interval",
        "defer",
        "result",
        "navigator",
        "navigator",
        "position",
        "position",
        "position",
        "defer",
        "position",
        "error",
        "defer",
        "error",
        "defer",
        "result",
        "result",
        "result",
        "defer",
        "result",
        "delay",
        "id",
        "i",
        "i",
        "i",
        "id",
        "$interval",
        "watchIntervals",
        "i",
        "removed",
        "i",
        "removed",
        "removed",
        "defer",
        "cancel",
        "watchID",
        "defer",
        "id",
        "cancel",
        "id",
        "watchID",
        "defer",
        "watchID",
        "defer",
        "watchID",
        "$q",
        "watchID",
        "defer",
        "i",
        "i",
        "i",
        "watchID",
        "$interval",
        "watchIntervals",
        "i",
        "removed",
        "i",
        "removed",
        "removed",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$q",
        "navigator",
        "navigator",
        "language",
        "language",
        "throwsError",
        "preferredLanguage",
        "localeName",
        "firstDayOfWeek",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "date",
        "options",
        "$q",
        "defer",
        "date",
        "date",
        "options",
        "options",
        "defer",
        "result",
        "defer",
        "dateString",
        "options",
        "$q",
        "defer",
        "dateString",
        "dateString",
        "options",
        "options",
        "defer",
        "result",
        "defer",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "defer",
        "result",
        "defer",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "defer",
        "result",
        "defer",
        "date",
        "$q",
        "defer",
        "date",
        "date",
        "defer",
        "result",
        "defer",
        "number",
        "options",
        "$q",
        "defer",
        "number",
        "number",
        "options",
        "options",
        "defer",
        "result",
        "defer",
        "numberString",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "defer",
        "result",
        "defer",
        "options",
        "$q",
        "defer",
        "options",
        "options",
        "defer",
        "result",
        "defer",
        "currencyCode",
        "$q",
        "defer",
        "currencyCode",
        "currencyCode",
        "defer",
        "result",
        "defer",
        "ngCordovaMocks",
        "$q",
        "methods",
        "throwsError",
        "methodsName",
        "funcName",
        "methods",
        "funcName",
        "$q",
        "defer",
        "defer",
        "defer",
        "methods",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "isSignedIn",
        "displayName",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "data",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "data",
        "$q",
        "defer",
        "defer",
        "defer",
        "data",
        "$q",
        "defer",
        "defer",
        "defer",
        "data",
        "$q",
        "defer",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "ngCordovaMocks",
        "isVisible",
        "isVisible",
        "isVisible",
        "ngCordovaMocks",
        "$q",
        "keychains",
        "key",
        "serviceName",
        "$q",
        "serviceName",
        "defer",
        "serviceName",
        "key",
        "defer",
        "defer",
        "key",
        "serviceName",
        "value",
        "$q",
        "serviceName",
        "serviceName",
        "serviceName",
        "key",
        "value",
        "defer",
        "defer",
        "key",
        "serviceName",
        "$q",
        "serviceName",
        "serviceName",
        "key",
        "defer",
        "defer",
        "ngCordovaMocks",
        "connectionType",
        "isConnected",
        "ngCordovaMocks",
        "$q",
        "$timeout",
        "$rootScope",
        "throwsError",
        "deviceToken",
        "notification",
        "$timeout",
        "$rootScope",
        "notification",
        "config",
        "$q",
        "config",
        "config",
        "config",
        "defer",
        "defer",
        "config",
        "config",
        "config",
        "_self",
        "defer",
        "options",
        "$q",
        "defer",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "message",
        "image",
        "link",
        "number",
        "subject",
        "toAddresses",
        "bccAddresses",
        "socialService",
        "attachments",
        "message",
        "image",
        "link",
        "$q",
        "defer",
        "message",
        "image",
        "link",
        "defer",
        "defer",
        "message",
        "image",
        "link",
        "$q",
        "defer",
        "message",
        "image",
        "link",
        "defer",
        "defer",
        "message",
        "image",
        "link",
        "$q",
        "defer",
        "message",
        "image",
        "link",
        "defer",
        "defer",
        "message",
        "number",
        "$q",
        "defer",
        "message",
        "number",
        "defer",
        "defer",
        "message",
        "subject",
        "toArr",
        "bccArr",
        "file",
        "$q",
        "defer",
        "message",
        "subject",
        "toArr",
        "bccArr",
        "file",
        "defer",
        "defer",
        "$q",
        "defer",
        "defer",
        "defer",
        "via",
        "message",
        "subject",
        "file",
        "link",
        "$q",
        "defer",
        "message",
        "via",
        "subject",
        "file",
        "link",
        "defer",
        "defer",
        "via",
        "message",
        "subject",
        "file",
        "link",
        "$q",
        "defer",
        "via",
        "message",
        "subject",
        "file",
        "link",
        "defer",
        "defer",
        "message",
        "subject",
        "file",
        "link",
        "$q",
        "defer",
        "message",
        "subject",
        "file",
        "link",
        "defer",
        "defer",
        "ngCordovaMocks",
        "isVisible",
        "ngCordovaMocks",
        "isStatusBarVisible",
        "canOverlayWebView",
        "style",
        "style",
        "colorHex",
        "colorHex",
        "color",
        "color",
        "ngCordovaMocks",
        "$q",
        "throwsError",
        "message",
        "$q",
        "defer",
        "defer",
        "defer",
        "message",
        "$q",
        "defer",
        "defer",
        "defer",
        "message",
        "$q",
        "defer",
        "defer",
        "defer",
        "message",
        "$q",
        "defer",
        "defer",
        "defer",
        "message",
        "$q",
        "defer",
        "defer",
        "defer",
        "message",
        "$q",
        "defer",
        "defer",
        "defer",
        "message",
        "duration",
        "position",
        "$q",
        "defer",
        "defer",
        "defer",
        "ngCordovaMocks",
        "$timeout",
        "vibrateTimer",
        "isVibrating",
        "time",
        "time",
        "time",
        "$timeout",
        "time",
        "$timeout",
        "time",
        "pattern",
        "repeat",
        "$timeout"
    ],
    "literals": [
        "'ngCordovaMocks'",
        "'$cordovaAppVersion'",
        "'$q'",
        "'mock v'",
        "'$cordovaBarcodeScanner'",
        "'$q'",
        "''",
        "''",
        "'There was an error scanning.'",
        "'There was an error encoding the data.'",
        "'$cordovaBLE'",
        "'$q'",
        "'$timeout'",
        "\"name\"",
        "\"Test Device\"",
        "\"id\"",
        "\"AA:BB:CC:DD:EE:FF\"",
        "\"advertising\"",
        "\"rssi\"",
        "\"name\"",
        "\"Test Device\"",
        "\"id\"",
        "\"AA:BB:CC:DD:EE:FF\"",
        "\"advertising\"",
        "\"rssi\"",
        "\"services\"",
        "\"1800\"",
        "\"1801\"",
        "\"180f\"",
        "\"characteristics\"",
        "\"service\"",
        "\"1800\"",
        "\"characteristic\"",
        "\"2a00\"",
        "\"properties\"",
        "\"Read\"",
        "\"service\"",
        "\"1800\"",
        "\"characteristic\"",
        "\"2a01\"",
        "\"properties\"",
        "\"Read\"",
        "\"service\"",
        "\"1801\"",
        "\"characteristic\"",
        "\"2a05\"",
        "\"properties\"",
        "\"Read\"",
        "\"service\"",
        "\"180f\"",
        "\"characteristic\"",
        "\"2a19\"",
        "\"properties\"",
        "\"Read\"",
        "\"descriptors\"",
        "\"uuid\"",
        "\"2901\"",
        "\"uuid\"",
        "\"2904\"",
        "'$cordovaCamera'",
        "'$q'",
        "''",
        "'There was an error getting the picture.'",
        "'$cordovaCapture'",
        "'$q'",
        "'There was an error capturing the audio.'",
        "'There was an error capturing the image.'",
        "'There was an error capturing the video.'",
        "'$cordovaContacts'",
        "'$q'",
        "'There was an error saving the contact.'",
        "'Contact already exists.'",
        "'There was an error saving the contact.'",
        "'Unable to find contact.'",
        "'There was an error finding the contact.'",
        "'id'",
        "'displayName'",
        "'ContactError.INVALID_ARGUMENT_ERROR'",
        "'*'",
        "'$cordovaDatePicker'",
        "'$q'",
        "'date'",
        "'$cordovaDevice'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'$cordovaDeviceMotion'",
        "'$interval'",
        "'$q'",
        "'There was an error getting the current acceleration.'",
        "'There was an error watching the current acceleration.'",
        "'There was an error watching the acceleration.'",
        "'Unable to clear watch.'",
        "'Unable to clear watch. No watch ID provided.'",
        "'$cordovaDeviceOrientation'",
        "'$interval'",
        "'$q'",
        "'There was an error getting the current heading.'",
        "'There was an error getting the compass heading.'",
        "'There was an error watching the acceleration.'",
        "'Unable to clear watch.'",
        "'Unable to clear watch. No watch ID provided.'",
        "'$cordovaDialogs'",
        "'$q'",
        "''",
        "''",
        "''",
        "'$cordovaFile'",
        "'$q'",
        "'There was an error checking the directory.'",
        "'There was an error creating the directory.'",
        "'There was an error listing the directory'",
        "'There was an error checking for the file.'",
        "''",
        "'There was an error creating the file.'",
        "'There was an error removng the file.'",
        "'There was an error writing the file.'",
        "'There was an error reading the file as text.'",
        "'There was an error reading the file as a data url.'",
        "'There was an error reading the file as a binary string.'",
        "'There was an error reading the file as an array buffer.'",
        "'There was an error reading the file metadata'",
        "'There was an error reading the file from the absolute path'",
        "'There was an error reading the file metadta from the absolute path'",
        "'There was an error downloading the file.'",
        "'There was an error uploading the file.'",
        "'$cordovaFileOpener2'",
        "'$q'",
        "'There was an error capturing the file.'",
        "'There was an error capturing the packageId.'",
        "'There was an error capturing the packageId.'",
        "'$cordovaGeolocation'",
        "'$interval'",
        "'$q'",
        "'There was an error getting the location.'",
        "'Geolocation is not supported by this browser.'",
        "'There was an error getting the geolocation.'",
        "'There was an error watching the geolocation.'",
        "'Geolocation is not supported by this browser.'",
        "'Unable to clear watch.'",
        "'Unable to clear watch. No watch ID provided.'",
        "'$cordovaGlobalization'",
        "'$q'",
        "\"en-US\"",
        "'Sunday'",
        "'There was an error getting the preferred language.'",
        "'There was an error getting the locale name.'",
        "'There was an error getting the first day of week.'",
        "'There was an error getting the string from the date.'",
        "''",
        "'There was an error getting the date from the string.'",
        "''",
        "'There was an error getting the date pattern.'",
        "''",
        "'There was an error getting the date names.'",
        "''",
        "'There was an error getting if this is in daylight savings time mode.'",
        "''",
        "'There was an error convertng the number to a string.'",
        "''",
        "'There was an error convertng the string to a number.'",
        "''",
        "'There was an error convertng the string to a number.'",
        "''",
        "'There was an error convertng the string to a number.'",
        "''",
        "'$cordovaGoogleAnalytics'",
        "'$q'",
        "'startTrackerWithId'",
        "'setUserId'",
        "'debugMode'",
        "'trackView'",
        "'addCustomDimension'",
        "'trackEvent'",
        "'addTransaction'",
        "'addTransactionItem'",
        "'use strict'",
        "'$cordovaGooglePlayGame'",
        "'$q'",
        "''",
        "'There was a auth error.'",
        "'SIGN IN SUCCESS'",
        "'There was a signout error.'",
        "'There was a isSignedIn error.'",
        "'isSignedIn'",
        "'There was a showPlayer error.'",
        "'displayName'",
        "'There was a submitScore error.'",
        "'OK'",
        "'There was a showAllLeaderboards error.'",
        "'OK'",
        "'There was a showLeaderboard error.'",
        "'OK'",
        "'There was a unlockAchievement error.'",
        "'OK'",
        "'There was a incrementAchievement error.'",
        "'OK'",
        "'There was a showAchievements error.'",
        "'OK'",
        "'$cordovaKeyboard'",
        "'$cordovaKeychain'",
        "'$q'",
        "'$cordovaNetwork'",
        "'WiFi connection'",
        "'use strict'",
        "'$cordovaPush'",
        "'$q'",
        "'$timeout'",
        "'$rootScope'",
        "''",
        "'$cordovaPush:notificationReceived'",
        "'There was a register error.'",
        "'registered'",
        "'There was a register error.'",
        "'$cordovaSocialSharing'",
        "'$q'",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'There was an error sharing via Twitter.'",
        "'There was an error sharing via WhatsApp.'",
        "'There was an error sharing via Facebook.'",
        "'There was an error sharing via SMS.'",
        "'There was an error sharing via SMS.'",
        "'There was an error sharing via SMS.'",
        "'There was an error sharing via SMS.'",
        "'There was an error sharing via SMS.'",
        "'$cordovaSplashscreen'",
        "'$cordovaStatusbar'",
        "'$cordovaToast'",
        "'$q'",
        "'There was an error showing the toast.'",
        "'There was an error showing the toast.'",
        "'There was an error showing the toast.'",
        "'There was an error showing the toast.'",
        "'There was an error showing the toast.'",
        "'There was an error showing the toast.'",
        "'There was an error showing the toast.'",
        "'$cordovaVibration'",
        "'$timeout'"
    ],
    "variables": [
        "ngCordovaMocks",
        "throwsError",
        "defer",
        "throwsError",
        "scannedText",
        "scannedFormat",
        "wasCancelled",
        "defer",
        "defer",
        "deviceScan",
        "deviceConnect",
        "readData",
        "q",
        "q",
        "q",
        "q",
        "q",
        "q",
        "q",
        "q",
        "q",
        "q",
        "throwsError",
        "imageData",
        "defer",
        "throwsError",
        "defer",
        "defer",
        "defer",
        "throwsError",
        "contacts",
        "defer",
        "existingIndex",
        "i",
        "defer",
        "toRemove",
        "i",
        "defer",
        "fields",
        "results",
        "i",
        "propertyValue",
        "q",
        "device",
        "cordova",
        "model",
        "platform",
        "uuid",
        "version",
        "currentAcceleration",
        "throwsError",
        "positions",
        "watchIntervals",
        "defer",
        "defer",
        "watchId",
        "delay",
        "randomX",
        "randomY",
        "randomZ",
        "result",
        "defer",
        "removed",
        "i",
        "currentHeading",
        "throwsError",
        "readings",
        "watchIntervals",
        "defer",
        "defer",
        "watchID",
        "delay",
        "magneticHeading",
        "trueHeading",
        "headingAccuracy",
        "result",
        "cancel",
        "removed",
        "i",
        "defer",
        "removed",
        "i",
        "dialogText",
        "dialogTitle",
        "defaultValue",
        "promptResponse",
        "beepCount",
        "useHostAbilities",
        "d",
        "d",
        "result",
        "d",
        "result",
        "i",
        "throwsError",
        "fileSystem",
        "shouldMockFiles",
        "files",
        "mockIt",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "throwsError",
        "defer",
        "defer",
        "defer",
        "throwsError",
        "useHostAbilities",
        "watchIntervals",
        "locations",
        "currentPosition",
        "nextPosition",
        "defer",
        "defer",
        "watchID",
        "delay",
        "result",
        "cancel",
        "removed",
        "i",
        "defer",
        "removed",
        "i",
        "throwsError",
        "language",
        "preferredLanguage",
        "firstDayOfWeek",
        "localeName",
        "defer",
        "defer",
        "defer",
        "defer",
        "result",
        "defer",
        "result",
        "defer",
        "result",
        "defer",
        "result",
        "defer",
        "result",
        "defer",
        "result",
        "defer",
        "result",
        "defer",
        "result",
        "defer",
        "result",
        "throwsError",
        "methods",
        "methodsName",
        "defer",
        "throwsError",
        "isSignedIn",
        "displayName",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "isVisible",
        "keychains",
        "defer",
        "defer",
        "defer",
        "connectionType",
        "isConnected",
        "throwsError",
        "deviceToken",
        "_self",
        "defer",
        "defer",
        "throwsError",
        "message",
        "image",
        "link",
        "number",
        "socialService",
        "subject",
        "toAddresses",
        "bccAddresses",
        "attachments",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "isVisible",
        "isStatusBarVisible",
        "canOverlayWebView",
        "throwsError",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "defer",
        "isVibrating",
        "vibrateTimer"
    ],
    "comments": [
        "!\n * ngCordova\n * v0.1.15-alpha\n * Copyright 2014 Drifty Co. http://drifty.com/\n * See LICENSE in this repository for license information",
        "This is just to get by JSHint.",
        "The actual implementation relies on the entire object match.",
        "we're gong to rely on the ID.",
        "The actual implementation relies on the entire object match.",
        "we're gong to rely on the ID.",
        "Implement a very rudimentary search approach for testing purposes.",
        "This is NOT exhaustive.",
        "TODO: Search by individual fields",
        "The default based on https://github.com/apache/cordova-plugin-device-motion/blob/master/doc/index.md",
        "Generate a random position",
        "The default based on https://github.com/apache/cordova-plugin-device-orientation/blob/master/doc/index.md",
        "Generate a random position",
        "NOTE: The window.alert method doesn't support a title or callbacks.",
        "NOTE: The window.confirm method doesn't support a title or custom button naming.",
        "NOTE: The window.prompt method doesn't support a title or custom button naming.",
        "This is just to get by JSHint.",
        "Attempt to use nextPosition.",
        "Determine whether to use the host's geolocation capabilities or not",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "TODO: Review",
        "END TODO: Review",
        "These are added to get by JSHINT for now",
        "These are added to get by JSHINT for now",
        "do nothing. everything happens behind the scenes in this case.",
        "its a stub that is present for completeness.",
        "do nothing. everything happens behind the scenes in this case.",
        "its a stub that is present for completeness.",
        "TODO: Review",
        "TODO: review",
        "TODO: review",
        "TODO: Implement pattern here.",
        "The following is a temporary timer that just looks at the first value",
        "jshint ignore:start",
        "Based on the documentation (https://github.com/apache/cordova-plugin-vibration/blob/master/doc/index.md)",
        "This method is deprecated. For that reason, this isn't implemented at this time.",
        "jshint ignore:end"
    ],
    "docstrings": [
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaBarcodeScanner\n *\n * @description\n * A service for testing barcode scanner features\n * in an app build with ngCordova.\n*",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaBarcodeScanner\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name scannedText\n\t\t * @propertyOf ngCordovaMocks.cordovaBarcodeScanner\n\t\t *\n\t\t * @description\n\t\t * Used to simulate the result.text property of a\n\t\t * successful scan. For more information, see the text at \n\t\t * https://github.com/wildabeast/BarcodeScanner/#using-the-plugin\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name scannedFormat\n\t\t * @propertyOf ngCordovaMocks.cordovaBarcodeScanner\n\t\t *\n\t\t * @description\n\t\t * Used to simulate the result.format property of a\n\t\t * successful scan. For more information, see the text at \n\t\t * https://github.com/wildabeast/BarcodeScanner/#using-the-plugin\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name wasCancelled\n\t\t * @propertyOf ngCordovaMocks.cordovaBarcodeScanner\n\t\t *\n\t\t * @description\n\t\t * Used to simulate the result.cancelled property of a\n\t\t * successful scan. For more information, see the text at \n\t\t * https://github.com/wildabeast/BarcodeScanner/#using-the-plugin\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaBLE\n *\n * @description\n * A service for ble features\n * in an app build with ngCordova.\n*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaCamera\n *\n * @description\n * A service for testing camera features\n * in an app build with ngCordova.\n*",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaCamera\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n     * @name imageData\n     * @propertyOf ngCordovaMocks.cordovaCamera\n     *\n     * @description\n     * The imagedata (e.g. an url) which will be returned from the device.\n     * This property should only be used in automated tests.\n     *",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaCapture\n *\n * @description\n * A service for testing media capture\n * in an app build with ngCordova.\n *\n * @example",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaCapture\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaContacts\n *\n * @description\n * A service for testing features related with contacts\n * in an app build with ngCordova.\n*",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaContacts\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc contacts\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaContacts\n\t\t *\n\t\t * @description\n\t\t * An in-memory collection of contacts.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaDatePicker\n *\n * @description\n * A service for testing datepicker features\n * in an app build with ngCordova.",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaDevice\n *\n * @description\n * A service for testing device information\n * in an app build with ngCordova.\n*",
        "* @ngdoc property\n\t\t * @name device\n\t\t * @propertyOf ngCordovaMocks.cordovaDevice\n\t\t *\n\t\t * @description\n\t\t * The name of the 'device'. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name cordova\n\t\t * @propertyOf ngCordovaMocks.cordovaDevice\n\t\t *\n\t\t * @description\n\t\t * The version of cordova in use.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name model\n\t\t * @propertyOf ngCordovaMocks.cordovaDevice\n\t\t *\n\t\t * @description\n\t\t * The model of the device using the app.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name platform\n\t\t * @propertyOf ngCordovaMocks.cordovaDevice\n\t\t *\n\t\t * @description\n\t\t * The name of the operating system in use.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name uuid\n\t\t * @propertyOf ngCordovaMocks.cordovaDevice\n\t\t *\n\t\t * @description\n\t\t * The unique identifier of a device.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name version\n\t\t * @propertyOf ngCordovaMocks.cordovaDevice\n\t\t *\n\t\t * @description\n\t\t * The version of the operating system.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaDeviceMotion\n *\n * @description\n * A service for mocking the accelerometer\n * in an app build with ngCordova.\n*",
        "* @ngdoc property\n\t\t * @name currentAcceleration\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceMotion\n\t\t *\n\t\t * @description\n\t\t * The current acceleration. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceMotion\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name positions\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceMotion\n\t\t *\n\t\t * @description\n\t\t * The collection of 'positions' that have been logged.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name watchIntervals\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceMotion\n\t\t *\n\t\t * @description\n\t\t * The collection of watchers that are currently active.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaDeviceOrientation\n *\n * @description\n * A service for testing compass fetures\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name currentHeading\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceOrientation\n\t\t *\n\t\t * @description\n\t\t * The current heading.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceOrientation\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name positions\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceOrientation\n\t\t *\n\t\t * @description\n\t\t * The collection of compass 'readings' that have been logged.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name watchIntervals\n\t\t * @propertyOf ngCordovaMocks.cordovaDeviceOrientation\n\t\t *\n\t\t * @description\n\t\t * The collection of watchers that are currently active.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaDialogs\n *\n * @description\n * A service for testing dialogs\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name dialogText\n\t\t * @propertyOf ngCordovaMocks.cordovaDialogs\n\t\t *\n\t\t * @description\n\t\t * The main content in the dialog.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name dialogTitle\n\t\t * @propertyOf ngCordovaMocks.cordovaDialogs\n\t\t *\n\t\t * @description\n\t\t * The title of the dialog.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name defaultValue\n\t\t * @propertyOf ngCordovaMocks.cordovaDialogs\n\t\t *\n\t\t * @description\n\t\t * The default value to be used in a prompt.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name promptResponse\n\t\t * @propertyOf ngCordovaMocks.cordovaDialogs\n\t\t *\n\t\t * @description\n\t\t * Used to simulate a user's response to a prompt.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name buttonLabels\n\t\t * @propertyOf ngCordovaMocks.cordovaDialogs\n\t\t *\n\t\t * @description\n\t\t * An array of the text of each button in the dialog.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name beepCount\n\t\t * @propertyOf ngCordovaMocks.cordovaDialogs\n\t\t *\n\t\t * @description\n\t\t * The number of times a beep has occurred.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name useHostAbilities\n\t\t * @propertyOf ngCordovaMocks.cordovaDialogs\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether or not to try and use the host's \n\t\t * (browser or otherwise) prompting capabilities.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaFile\n *\n * @description\n * A service for testing interaction with device directories and files\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaFile\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not.\n\t\t * This property should only be used in automated tests.\n\t\t *",
        "* @ngdoc property\n\t\t * @name fileSystem\n\t\t * @propertyOf ngCordovaMocks.cordovaFile\n\t\t *\n\t\t * @description\n\t\t * A fake, in-memory file system. This is incomplete at this time.\n\t\t * This property should only be used in automated tests.\n\t\t *",
        "* @ngdoc property\n         * @name shouldMockFiles\n         * @propertyOf ngCordovaMocks.cordovaFile\n         *\n         * @description\n         * A flag that signals whether one wish to mock files.\n         * This is useful if you need mocks specific file scenarios.\n         * This property should only be used in automated tests.\n         *",
        "* @ngdoc property\n         * @name files\n         * @propertyOf ngCordovaMocks.cordovaFile\n         *\n         * @description\n         * An object that may be used for mocking files on the device.\n         * This property should only be used in automated tests.\n         *\n         * *",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaFileOpener2\n *\n * @description\n * A service for testing fileOpener2\n * in an app build with ngCordova.",
        "* @ngdoc property\n     * @name throwsError\n     * @propertyOf ngCordovaMocks.cordovaFileOpener2\n     *\n     * @description\n     * A flag that signals whether a promise should be rejected or not.\n     * This property should only be used in automated tests.\n     *",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaGeolocation\n *\n * @description\n * A service for testing location services\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaGeolocation\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name watchIntervals\n\t\t * @propertyOf ngCordovaMocks.cordovaGeolocation\n\t\t *\n\t\t * @description\n\t\t * The collection of watchers that are currently active.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name locations\n\t\t * @propertyOf ngCordovaMocks.cordovaGeolocation\n\t\t *\n\t\t * @description\n\t\t * The collection of 'locations' that have been logged.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name currentPosition\n\t\t * @propertyOf ngCordovaMocks.cordovaGeolocation\n\t\t *\n\t\t * @description\n\t\t * The last location logged.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name nextPosition\n\t\t * @propertyOf ngCordovaMocks.cordovaGeolocation\n\t\t *\n\t\t * @description\n\t\t * The position to be logged the next time that a watcher\n\t\t * gets the location.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name useHostAbilities\n\t\t * @propertyOf ngCordovaMocks.cordovaGeolocation\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether or not to try and use the host's\n\t\t * (browser or otherwise) geolocation capabilities.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaGlobalization\n *\n * @description\n * A service for testing features related to a user's locale and timezone.\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaGlobalization\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name preferredLanguage\n\t\t * @propertyOf ngCordovaMocks.cordovaGlobalization\n\t\t *\n\t\t * @description\n\t\t * The user's preferred language.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name localeName\n\t\t * @propertyOf ngCordovaMocks.cordovaGlobalization\n\t\t *\n\t\t * @description\n\t\t * The name of the user's locale.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name firstDayOfWeek\n\t\t * @propertyOf ngCordovaMocks.cordovaGlobalization\n\t\t *\n\t\t * @description\n\t\t * The first day of the week based on the user's locale.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaGoogleAnalytics\n *\n * @description\n * A service for testing google analytics services\n * in an app build with ngCordova.",
        "* @ngdoc property\n   * @name throwsError\n   * @propertyOf ngCordovaMocks.cordovaGeolocation\n   *\n   * @description\n   * A flag that signals whether a promise should be rejected or not.\n   * This property should only be used in automated tests.\n  *",
        "* @ngdoc service\n * @name ngCordovaMocks.googlePlayGame\n *\n * @description\n * A service for testing Google Play Game features\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t     * @name _throwsError\n\t     * @propertyOf ngCordovaMocks.googlePlayGame\n\t     *\n\t     * @description\n\t     * A flag that signals whether a promise should be rejected or not. \n\t     * This property should only be used in automated tests.\n\t    *",
        "* @ngdoc property\n\t     * @name _isSignedIn\n\t     * @propertyOf ngCordovaMocks.googlePlayGame\n\t     *\n\t     * @description\n\t     * A flag that signals whether a promise should be rejected or not. \n\t     * This property should only be used in automated tests.\n\t    *",
        "* @ngdoc property\n\t     * @name _displayName\n\t     * @propertyOf ngCordovaMocks.googlePlayGame\n\t     *\n\t     * @description\n\t     * A flag that signals whether a promise should be rejected or not. \n\t     * This property should only be used in automated tests.\n\t    *",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaKeyboard\n *\n * @description\n * A service for testing device keyboard features\n * in an app build with ngCordova.\n*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaKeychain\n *\n * @description\n * A service for testing Keychain features\n * in an app built with ngCordova.\n *",
        "* @ngdoc property\n     * @name keychains\n     * @propertyOf ngCordovaMocks.cordovaKeychain\n     *\n     * @description\n     * The collection of 'keychains' that have been saved.\n     * This property should only be used in automated tests.\n     *",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaNetwork\n *\n * @description\n * A service for testing networked fetures\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name connectionType\n\t\t * @propertyOf ngCordovaMocks.cordovaNetwork\n\t\t *\n\t\t * @description\n\t\t * They type of connection. Values should match those found at\n\t\t * https://github.com/apache/cordova-plugin-network-information/blob/master/doc/index.md \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name isConnected\n\t\t * @propertyOf ngCordovaMocks.cordovaNetwork\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether the app is connected to a network. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaPush\n *\n * @description\n * A service for testing push notifications features\n * in an app build with ngCordova.",
        "* @ngdoc property\n     * @name throwsError\n     * @propertyOf ngCordovaMocks.cordovaPush\n     *\n     * @description\n     * A flag that signals whether a promise should be rejected or not. \n     * This property should only be used in automated tests.\n    *",
        "* @ngdoc property\n     * @name deviceToken\n     * @propertyOf ngCordovaMocks.cordovaPush\n     *\n     * @description\n     * Token send when service register device\n     * This property should only be used in automated tests.\n    *",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaSocialSharing\n *\n * @description\n * A service for testing via social services\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name throwsError\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether a promise should be rejected or not. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name message\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * The message to be shared via a social service. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name image\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * An image to be shared via a social service. \n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name link\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * A link to be shared via a social service.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name number\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * A comma-delimited list of phone numbers to send a social message to.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name subject\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * The subject of an email.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name toAddresses\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * An array of email addresses to send an email to.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name bccAddresses\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * An array of email addresses to blind carbon-copy an email to.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name socialService\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * The name of a social service to share content through.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name attachments\n\t\t * @propertyOf ngCordovaMocks.cordovaSocialSharing\n\t\t *\n\t\t * @description\n\t\t * An array of attachments to include with an email to be sent.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaSplashscreen\n *\n * @description\n * A service for testing the splash screen\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name isVisible\n\t\t * @propertyOf ngCordovaMocks.cordovaSplashscreen\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether the splash screen is visible or not.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaStatusbar\n *\n * @description\n * A service for testing the status bar\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name isStatusBarVisible\n\t\t * @propertyOf ngCordovaMocks.cordovaStatusbar\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether the status bar is visible or not.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name canOverlayWebView\n\t\t * @propertyOf ngCordovaMocks.cordovaStatusbar\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether the status bar can overlay the web view.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaToast\n *\n * @description\n * A service for testing toasts\n * in an app build with ngCordova.\n *\n * @example",
        "* @ngdoc property\n     * @name throwsError\n     * @propertyOf ngCordovaMocks.cordovaToast\n     *\n     * @description\n     * A flag that signals whether a promise should be rejected or not.\n     * This property should only be used in automated tests.\n     *",
        "* @ngdoc service\n * @name ngCordovaMocks.cordovaVibration\n *\n * @description\n * A service for testing vibration\n * in an app build with ngCordova.",
        "* @ngdoc property\n\t\t * @name vibrateTimer\n\t\t * @propertyOf ngCordovaMocks.cordovaVibration\n\t\t *\n\t\t * @description\n\t\t * Access to the timer associated with vibration.\n\t\t * This property should only be used in automated tests.\n\t\t*",
        "* @ngdoc property\n\t\t * @name isVibrating\n\t\t * @propertyOf ngCordovaMocks.cordovaVibration\n\t\t *\n\t\t * @description\n\t\t * A flag that signals whether vibration is active.\n\t\t * This property should only be used in automated tests.\n\t\t*"
    ],
    "functions": [],
    "classes": []
}