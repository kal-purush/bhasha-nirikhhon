{
    "identifiers": [
        "require",
        "require",
        "require",
        "process",
        "require",
        "require",
        "grunt",
        "require",
        "grunt",
        "require",
        "grunt",
        "grunt",
        "require",
        "_",
        "cordovaCli",
        "name",
        "grunt",
        "name",
        "name",
        "_",
        "_",
        "_",
        "process",
        "path",
        "exec",
        "process",
        "spawn",
        "cmd",
        "flags",
        "child",
        "data",
        "grunt",
        "data",
        "child",
        "data",
        "grunt",
        "data",
        "child",
        "code",
        "code",
        "code",
        "done",
        "code",
        "grunt",
        "grunt",
        "grunt",
        "_",
        "_",
        "grunt",
        "path",
        "spawn",
        "cmd",
        "child",
        "data",
        "grunt",
        "data",
        "child",
        "data",
        "grunt",
        "data",
        "process",
        "code",
        "child",
        "process",
        "code",
        "grunt",
        "grunt",
        "grunt",
        "karma",
        "grunt",
        "grunt",
        "path",
        "process",
        "spawn",
        "script",
        "flags",
        "child",
        "code",
        "code",
        "code",
        "done",
        "code",
        "grunt",
        "grunt",
        "target",
        "target",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt",
        "grunt"
    ],
    "literals": [
        "'use strict'",
        "'lodash'",
        "'path'",
        "'cordova'",
        "'win32'",
        "'win-spawn'",
        "'child_process'",
        "'load-grunt-tasks'",
        "'time-grunt'",
        "'app'",
        "'scripts'",
        "'styles'",
        "'images'",
        "'test'",
        "'www'",
        "'  '",
        "'\"use strict\";\\n\\n {%= __ngModule %}'",
        "'config'",
        "'<%= yeoman.app %>/<%= yeoman.scripts %>/configuration.js'",
        "'development'",
        "'http://dev.yoursite.com:10000/'",
        "'production'",
        "'http://api.yoursite.com/'",
        "'bower.json'",
        "'wiredep'",
        "'newer:copy:app'",
        "'<%= yeoman.app %>/**/*.html'",
        "'newer:copy:app'",
        "'<%= yeoman.app %>/<%= yeoman.scripts %>/**/*.js'",
        "'newer:copy:app'",
        "'newer:jshint:all'",
        "'<%= yeoman.app %>/<%= yeoman.styles %>/**/*.{scss,sass}'",
        "'compass:server'",
        "'autoprefixer'",
        "'newer:copy:tmp'",
        "'Gruntfile.js'",
        "'ngconstant:development'",
        "'newer:copy:app'",
        "'localhost'",
        "'<%= yeoman.dist %>'",
        "'coverage'",
        "'.jshintrc'",
        "'jshint-stylish'",
        "'Gruntfile.js'",
        "'<%= yeoman.app %>/<%= yeoman.scripts %>/**/*.js'",
        "'test/.jshintrc'",
        "'test/unit/**/*.js'",
        "'.temp'",
        "'<%= yeoman.dist %>/*'",
        "'!<%= yeoman.dist %>/.git*'",
        "'.temp'",
        "'last 1 version'",
        "'.temp/<%= yeoman.styles %>/'",
        "'{,*/}*.css'",
        "'.temp/<%= yeoman.styles %>/'",
        "'<%= yeoman.app %>/index.html'",
        "'<%= yeoman.app %>/styles/{,*/}*.{scss,sass}'",
        "'<%= yeoman.app %>/<%= yeoman.styles %>'",
        "'.temp/<%= yeoman.styles %>'",
        "'.temp/<%= yeoman.images %>/generated'",
        "'<%= yeoman.app %>/<%= yeoman.images %>'",
        "'<%= yeoman.app %>/<%= yeoman.scripts %>'",
        "'<%= yeoman.app %>/<%= yeoman.styles %>/fonts'",
        "'<%= yeoman.app %>/bower_components'",
        "'/<%= yeoman.images %>'",
        "'/<%= yeoman.images %>/generated'",
        "'/<%= yeoman.styles %>/fonts'",
        "'Sass::Script::Number.precision = 10\\n'",
        "'<%= yeoman.dist %>/<%= yeoman.images %>/generated'",
        "'<%= yeoman.app %>/index.html'",
        "'<%= yeoman.dist %>'",
        "'.temp'",
        "'concat'",
        "'uglifyjs'",
        "'cssmin'",
        "'<%= yeoman.dist %>/**/*.html'",
        "'<%= yeoman.dist %>/<%= yeoman.styles %>/**/*.css'",
        "'<%= yeoman.dist %>'",
        "'<%= yeoman.dist %>'",
        "'*.html'",
        "'templates/**/*.html'",
        "'<%= yeoman.dist %>'",
        "'<%= yeoman.app %>'",
        "'<%= yeoman.dist %>'",
        "'<%= yeoman.images %>/**/*.{png,jpg,jpeg,gif,webp,svg}'",
        "'*.html'",
        "'templates/**/*.html'",
        "'fonts/*'",
        "'.temp/<%= yeoman.images %>'",
        "'<%= yeoman.dist %>/<%= yeoman.images %>'",
        "'generated/*'",
        "'<%= yeoman.app %>/<%= yeoman.styles %>'",
        "'.temp/<%= yeoman.styles %>/'",
        "'{,*/}*.css'",
        "'app/bower_components/ionic/release/fonts/'",
        "'<%= yeoman.app %>/fonts/'",
        "'*'",
        "'<%= yeoman.app %>/vendor'",
        "'.temp/<%= yeoman.styles %>/'",
        "'{,*/}*.css'",
        "'<%= yeoman.app %>'",
        "'<%= yeoman.dist %>/'",
        "'**/*'",
        "'!**/*.(scss,sass,css)'",
        "'.temp'",
        "'<%= yeoman.dist %>/'",
        "'**/*'",
        "'compass:server'",
        "'copy:styles'",
        "'copy:vendor'",
        "'copy:fonts'",
        "'compass'",
        "'copy:styles'",
        "'copy:vendor'",
        "'copy:fonts'",
        "'compass:dist'",
        "'copy:styles'",
        "'copy:vendor'",
        "'copy:fonts'",
        "''",
        "'mocha'",
        "'chai'",
        "'<%= yeoman.app %>/bower_components/angular/angular.js'",
        "'<%= yeoman.app %>/bower_components/angular-mocks/angular-mocks.js'",
        "'<%= yeoman.app %>/bower_components/angular-animate/angular-animate.js'",
        "'<%= yeoman.app %>/bower_components/angular-sanitize/angular-sanitize.js'",
        "'<%= yeoman.app %>/bower_components/angular-ui-router/release/angular-ui-router.js'",
        "'<%= yeoman.app %>/bower_components/ionic/release/js/ionic.js'",
        "'<%= yeoman.app %>/bower_components/ionic/release/js/ionic-angular.js'",
        "'<%= yeoman.app %>/<%= yeoman.scripts %>/**/*.js'",
        "'<%= yeoman.test %>/mock/**/*.js'",
        "'<%= yeoman.test %>/spec/**/*.js'",
        "'dots'",
        "'coverage'",
        "'<%= yeoman.app %>/<%= yeoman.scripts %>/**/*.js'",
        "'coverage'",
        "'html'",
        "'coverage/'",
        "'text-summary'",
        "'PhantomJS'",
        "'PhantomJS'",
        "'.temp/concat/<%= yeoman.scripts %>'",
        "'*.js'",
        "'.temp/concat/<%= yeoman.scripts %>'",
        "'cordova:'",
        "''",
        "'http'",
        "'https'",
        "':'",
        "'win32'",
        "'cordova.cmd'",
        "'cordova'",
        "'./node_modules/cordova/bin'",
        "'data'",
        "'data'",
        "'close'",
        "'ripple'",
        "'wiredep'",
        "'newer:copy:app'",
        "'ripple-emulator'",
        "'ripple-emulator'",
        "'watch'",
        "'watch'",
        "'files'",
        "'newer:copy:app'",
        "'prepare'",
        "'./node_modules/ripple-emulator/bin'",
        "'ripple'",
        "'emulate'",
        "'data'",
        "'data'",
        "'exit'",
        "'SIGINT'",
        "'watch'",
        "'watch:karma'",
        "'<%= yeoman.app %>/<%= yeoman.scripts %>/**/*.js'",
        "'<%= yeoman.test %>/spec/**/*.js'",
        "'newer:jshint:test'",
        "'karma:unit:run'",
        "'watch'",
        "'watch'",
        "'ionic'",
        "'./node_modules/ionic/bin/'",
        "'ionic'",
        "'inherit'",
        "'close'",
        "'test'",
        "'wiredep'",
        "'clean'",
        "'concurrent:test'",
        "'autoprefixer'",
        "'karma:unit:start'",
        "'watch:karma'",
        "'serve'",
        "'compress'",
        "'compress'",
        "'ionic:serve'",
        "'concurrent.ionic.tasks'",
        "'ionic:serve'",
        "'watch'",
        "'wiredep'",
        "'init'",
        "'concurrent:ionic'",
        "'emulate'",
        "'concurrent.ionic.tasks'",
        "'ionic:emulate:'",
        "'watch'",
        "'init'",
        "'concurrent:ionic'",
        "'run'",
        "'concurrent.ionic.tasks'",
        "'ionic:run:'",
        "'watch'",
        "'init'",
        "'concurrent:ionic'",
        "'build'",
        "'init'",
        "'ionic:build:'",
        "'init'",
        "'clean'",
        "'ngconstant:development'",
        "'wiredep'",
        "'concurrent:server'",
        "'autoprefixer'",
        "'newer:copy:app'",
        "'newer:copy:tmp'",
        "'compress'",
        "'clean'",
        "'ngconstant:production'",
        "'wiredep'",
        "'useminPrepare'",
        "'concurrent:dist'",
        "'autoprefixer'",
        "'concat'",
        "'ngAnnotate'",
        "'copy:dist'",
        "'cssmin'",
        "'uglify'",
        "'usemin'",
        "'htmlmin'",
        "'coverage'",
        "'karma:continuous'",
        "'connect:coverage:keepalive'",
        "'default'",
        "'wiredep'",
        "'newer:jshint'",
        "'karma:continuous'",
        "'compress'"
    ],
    "variables": [
        "_",
        "path",
        "cordovaCli",
        "spawn",
        "done",
        "exec",
        "cmd",
        "flags",
        "child",
        "cmd",
        "child",
        "karma",
        "done",
        "script",
        "flags",
        "child"
    ],
    "comments": [
        "Generated on 2015-05-06 using generator-ionic 0.7.3",
        "Load grunt tasks automatically",
        "Time how long tasks take. Can help when optimizing build times",
        "Define the configuration for all the tasks",
        "Project settings",
        "configurable paths",
        "Environment Variables for Angular App",
        "This creates an Angular Module that can be injected via ENV",
        "Add any desired constants to the ENV objects below.",
        "https://github.com/diegonetto/generator-ionic/blob/master/docs/FAQ.md#how-do-i-add-constants",
        "Watches files for changes and runs tasks based on the changed files",
        "The actual grunt server settings",
        "Change this to '0.0.0.0' to access the server from outside.",
        "Make sure code styles are up to par and there are no obvious mistakes",
        "Empties folders to start fresh",
        "Automatically inject Bower components into the app",
        "Compiles Sass to CSS and generates necessary files if requested",
        "Reads HTML for usemin blocks to enable smart builds that automatically",
        "concat, minify and revision files. Creates configurations in memory so",
        "additional tasks can operate on them",
        "Performs rewrites based on the useminPrepare configuration",
        "The following *-min tasks produce minified files in the dist folder",
        "root: '<%= yeoman.app %>',",
        "Copies remaining files to places other tasks can use",
        "By default, your `index.html`'s <!-- Usemin block --> will take care of",
        "minification. These next options are pre-configured if you do not wish",
        "to use the Usemin blocks.",
        "cssmin: {",
        "dist: {",
        "files: {",
        "'<%= yeoman.dist %>/<%= yeoman.styles %>/main.css': [",
        "'.temp/<%= yeoman.styles %>/**/*.css',",
        "'<%= yeoman.app %>/<%= yeoman.styles %>/**/*.css'",
        "]",
        "}",
        "}",
        "},",
        "uglify: {",
        "dist: {",
        "files: {",
        "'<%= yeoman.dist %>/<%= yeoman.scripts %>/scripts.js': [",
        "'<%= yeoman.dist %>/<%= yeoman.scripts %>/scripts.js'",
        "]",
        "}",
        "}",
        "},",
        "concat: {",
        "dist: {}",
        "},",
        "Test settings",
        "These will override any config options in karma.conf.js if you create it.",
        "Update this if you change the yeoman config path",
        "Change this to 'Chrome', 'Firefox', etc. Note that you will need",
        "to install a karma launcher plugin for browsers other than Chrome.",
        "ngAnnotate tries to make the code safe for minification automatically by",
        "using the Angular long form for dependency injection.",
        "Register tasks for all Cordova commands",
        "Handle URL's being split up by Grunt because of `:` characters",
        "Since Apache Ripple serves assets directly out of their respective platform",
        "directories, we watch all registered files and then copy all un-built assets",
        "over to <%= yeoman.dist %>/. Last step is running cordova prepare so we can refresh the ripple",
        "browser tab to see the changes. Technically ripple runs `cordova prepare` on browser",
        "refreshes, but at this time you would need to re-run the emulator to see changes.",
        "Dynamically configure `karma` target of `watch` task so that",
        "we don't have to run the karma test server as part of `grunt serve`",
        "Wrap ionic-cli commands"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}