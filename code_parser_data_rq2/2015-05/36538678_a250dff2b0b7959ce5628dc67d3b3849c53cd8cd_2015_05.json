{
    "identifiers": [
        "Ext",
        "Ext",
        "Ext",
        "emptyFn",
        "dest",
        "src",
        "defaults",
        "defaults",
        "apply",
        "dest",
        "defaults",
        "dest",
        "src",
        "src",
        "key",
        "src",
        "dest",
        "key",
        "src",
        "key",
        "dest",
        "location",
        "location",
        "doc",
        "doc",
        "isBrowser",
        "isBrowser",
        "require",
        "phantom",
        "phantom",
        "Ext",
        "message",
        "config",
        "defaults",
        "defaults",
        "_apply",
        "defaults",
        "config",
        "config",
        "i",
        "config",
        "i",
        "config",
        "i",
        "_environment",
        "_config",
        "_debug",
        "Request",
        "Entry",
        "navigator",
        "_tags",
        "ua",
        "name",
        "tag",
        "tag",
        "tag",
        "name",
        "eventName",
        "element",
        "isSupported",
        "element",
        "element",
        "element",
        "eventName",
        "isSupported",
        "element",
        "eventName",
        "element",
        "eventName",
        "element",
        "eventName",
        "element",
        "eventName",
        "isSupported",
        "uaTagChecks",
        "c",
        "c",
        "len",
        "c",
        "check",
        "uaTagChecks",
        "c",
        "uaTags",
        "check",
        "check",
        "ua",
        "isPhone",
        "uaTags",
        "uaTags",
        "uaTags",
        "uaTags",
        "uaTags",
        "isMobile",
        "uaTags",
        "uaTags",
        "uaTags",
        "uaTags",
        "isTablet",
        "_tags",
        "uaTags",
        "uaTags",
        "uaTags",
        "uaTags",
        "uaTags",
        "ua",
        "touchSupported",
        "isEventSupported",
        "navigator",
        "navigator",
        "isDesktop",
        "isPhone",
        "isTablet",
        "isIE10",
        "uaTags",
        "isBlackberry",
        "uaTags",
        "uaTags",
        "apply",
        "_tags",
        "Boot",
        "isPhone",
        "isTablet",
        "isDesktop",
        "touchSupported",
        "uaTags",
        "uaTags",
        "uaTags",
        "uaTags",
        "uaTags",
        "isBlackberry",
        "uaTags",
        "isBlackberry",
        "uaTags",
        "isIE10",
        "isIE10",
        "uaTags",
        "uaTags",
        "uaTags",
        "paramsString",
        "i",
        "i",
        "paramsArray",
        "i",
        "tmpArray",
        "paramsArray",
        "i",
        "tmpArray",
        "tmpArray",
        "tmpArray",
        "tmplen",
        "tmpArray",
        "i",
        "i",
        "tmplen",
        "i",
        "platform",
        "tmpArray",
        "i",
        "name",
        "platform",
        "platform",
        "enabled",
        "platform",
        "enabled",
        "enabled",
        "enabled",
        "enabled",
        "platforms",
        "name",
        "enabled",
        "platform",
        "platform",
        "platform",
        "platform",
        "len",
        "platform",
        "p",
        "p",
        "len",
        "p",
        "tag",
        "platform",
        "p",
        "_tags",
        "tag",
        "_tags",
        "tag",
        "doc",
        "scriptEls",
        "n",
        "n",
        "len",
        "n",
        "src",
        "script",
        "scriptEls",
        "n",
        "src",
        "state",
        "script",
        "baseUrl",
        "re",
        "src",
        "Boot",
        "script",
        "Boot",
        "script",
        "Boot",
        "baseUrl",
        "src",
        "Boot",
        "key",
        "Boot",
        "src",
        "_debug",
        "key",
        "entry",
        "Entry",
        "key",
        "src",
        "state",
        "state",
        "state",
        "script",
        "baseUrl",
        "script",
        "scriptEls",
        "scriptEls",
        "baseUrl",
        "script",
        "Boot",
        "script",
        "Boot",
        "script",
        "Boot",
        "Boot",
        "baseUrl",
        "baseUrl",
        "origin",
        "Boot",
        "origin",
        "Boot",
        "Ext",
        "Boot",
        "url",
        "resolverEl",
        "url",
        "resolverEl",
        "_config",
        "dc",
        "ret",
        "dc",
        "pos",
        "c",
        "ret",
        "pos",
        "c",
        "end",
        "ret",
        "pos",
        "end",
        "end",
        "ret",
        "end",
        "end",
        "c",
        "pos",
        "end",
        "end",
        "ret",
        "ret",
        "pos",
        "end",
        "ret",
        "name",
        "name",
        "Boot",
        "name",
        "Boot",
        "name",
        "value",
        "name",
        "Boot",
        "name",
        "value",
        "s",
        "name",
        "Boot",
        "s",
        "name",
        "s",
        "Boot",
        "Boot",
        "Boot",
        "doc",
        "doc",
        "url",
        "key",
        "cfg",
        "cfg",
        "config",
        "url",
        "config",
        "key",
        "Boot",
        "key",
        "Entry",
        "config",
        "url",
        "cfg",
        "Boot",
        "url",
        "Boot",
        "key",
        "entry",
        "entry",
        "Boot",
        "url",
        "key",
        "cfg",
        "entry",
        "request",
        "sync",
        "request",
        "sync",
        "request",
        "_debug",
        "Request",
        "request",
        "request",
        "Boot",
        "Boot",
        "request",
        "Boot",
        "_debug",
        "request",
        "Boot",
        "request",
        "Boot",
        "request",
        "Boot",
        "request",
        "Boot",
        "request",
        "_debug",
        "Request",
        "request",
        "Boot",
        "Boot",
        "request",
        "Boot",
        "Boot",
        "request",
        "request",
        "Request",
        "request",
        "request",
        "Boot",
        "request",
        "request",
        "request",
        "Request",
        "request",
        "request",
        "Boot",
        "request",
        "request",
        "Boot",
        "request",
        "Boot",
        "Boot",
        "next",
        "Boot",
        "next",
        "_debug",
        "Boot",
        "next",
        "Boot",
        "Boot",
        "Boot",
        "Boot",
        "Boot",
        "Boot",
        "listener",
        "Boot",
        "listener",
        "listener",
        "Boot",
        "listener",
        "Boot",
        "listener",
        "indexMap",
        "loadOrder",
        "Request",
        "indexMap",
        "loadOrder",
        "loadOrder",
        "Request",
        "loadOrder",
        "url",
        "complete",
        "scope",
        "async",
        "async",
        "async",
        "complete",
        "async",
        "XMLHttpRequest",
        "xhr",
        "xhr",
        "status",
        "xhr",
        "xhr",
        "xhr",
        "content",
        "xhr",
        "result",
        "content",
        "status",
        "exception",
        "complete",
        "complete",
        "scope",
        "result",
        "xhr",
        "async",
        "xhr",
        "readyStateChange",
        "_debug",
        "url",
        "async",
        "xhr",
        "url",
        "async",
        "xhr",
        "err",
        "exception",
        "err",
        "readyStateChange",
        "result",
        "async",
        "readyStateChange",
        "result",
        "entry",
        "entry",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "cfg",
        "url",
        "url",
        "url",
        "cfg",
        "Boot",
        "_apply",
        "cfg",
        "urls",
        "charset",
        "_apply",
        "cfg",
        "Request",
        "loadOrder",
        "loadOrder",
        "i",
        "i",
        "len",
        "i",
        "element",
        "loadOrder",
        "i",
        "loadOrderMap",
        "element",
        "element",
        "loadOrderMap",
        "index",
        "indexMap",
        "loadOrder",
        "includeUses",
        "skipLoaded",
        "loadOrder",
        "index",
        "indexMap",
        "index",
        "indexMap",
        "indexMap",
        "index",
        "stop",
        "stop",
        "added",
        "idx",
        "indexMap",
        "indexMap",
        "idx",
        "item",
        "loadOrder",
        "idx",
        "item",
        "url",
        "item",
        "entry",
        "Boot",
        "url",
        "skipLoaded",
        "entry",
        "entry",
        "reqs",
        "item",
        "includeUses",
        "item",
        "reqs",
        "reqs",
        "item",
        "len",
        "reqs",
        "i",
        "i",
        "len",
        "i",
        "ridx",
        "reqs",
        "i",
        "indexMap",
        "ridx",
        "indexMap",
        "ridx",
        "added",
        "added",
        "stop",
        "indexMap",
        "indexMap",
        "loadOrder",
        "index",
        "indexMap",
        "indexMap",
        "index",
        "indexMap",
        "index",
        "indexes",
        "index",
        "indexes",
        "a",
        "b",
        "a",
        "b",
        "len",
        "indexes",
        "i",
        "i",
        "len",
        "i",
        "paths",
        "loadOrder",
        "indexes",
        "i",
        "paths",
        "url",
        "indexMap",
        "includeUses",
        "skipLoaded",
        "url",
        "url",
        "url",
        "me",
        "me",
        "loadOrder",
        "loadOrderMap",
        "loadOrderMap",
        "me",
        "loadOrder",
        "me",
        "loadOrderMap",
        "indexMap",
        "indexMap",
        "url",
        "i",
        "i",
        "len",
        "i",
        "item",
        "loadOrderMap",
        "url",
        "i",
        "item",
        "me",
        "item",
        "indexMap",
        "loadOrder",
        "includeUses",
        "skipLoaded",
        "unmapped",
        "url",
        "i",
        "me",
        "indexMap",
        "loadOrder",
        "unmapped",
        "url",
        "urls",
        "includeUses",
        "urls",
        "urls",
        "urls",
        "urls",
        "i",
        "i",
        "len",
        "i",
        "tmpExpanded",
        "urls",
        "i",
        "includeUses",
        "t",
        "tlen",
        "tmpExpanded",
        "t",
        "tlen",
        "t",
        "tUrl",
        "tmpExpanded",
        "t",
        "expandMap",
        "tUrl",
        "expandMap",
        "tUrl",
        "expanded",
        "tUrl",
        "expanded",
        "expanded",
        "urls",
        "expanded",
        "me",
        "me",
        "expanded",
        "urls",
        "me",
        "expanded",
        "urls",
        "me",
        "expanded",
        "urls",
        "expanded",
        "me",
        "me",
        "url",
        "Boot",
        "url",
        "url",
        "me",
        "entries",
        "entries",
        "urls",
        "me",
        "i",
        "i",
        "urls",
        "i",
        "url",
        "me",
        "urls",
        "i",
        "entry",
        "Boot",
        "url",
        "me",
        "me",
        "entry",
        "me",
        "entries",
        "entry",
        "me",
        "entries",
        "entries",
        "sync",
        "me",
        "entries",
        "me",
        "sync",
        "me",
        "sync",
        "me",
        "me",
        "me",
        "me",
        "len",
        "i",
        "start",
        "i",
        "len",
        "i",
        "entry",
        "entries",
        "i",
        "entry",
        "continueLoad",
        "entries",
        "i",
        "me",
        "continueLoad",
        "continueLoad",
        "me",
        "i",
        "entry",
        "me",
        "sync",
        "me",
        "me",
        "entries",
        "me",
        "me",
        "i",
        "start",
        "i",
        "len",
        "i",
        "entry",
        "entries",
        "i",
        "entry",
        "me",
        "i",
        "entry",
        "entry",
        "entry",
        "me",
        "me",
        "me",
        "me",
        "me",
        "error",
        "me",
        "me",
        "error",
        "Boot",
        "me",
        "me",
        "me",
        "fn",
        "delay",
        "delay",
        "setTimeout",
        "fn",
        "scope",
        "me",
        "delay",
        "fn",
        "scope",
        "me",
        "me",
        "Boot",
        "me",
        "listener",
        "me",
        "me",
        "me",
        "listener",
        "me",
        "listeners",
        "listener",
        "listeners",
        "_debug",
        "listener",
        "listeners",
        "listener",
        "cfg",
        "cfg",
        "cfg",
        "_debug",
        "cfg",
        "cfg",
        "Boot",
        "Ext",
        "manifest",
        "manifest",
        "cfg",
        "cfg",
        "loader",
        "loader",
        "cache",
        "cache",
        "Boot",
        "cache",
        "buster",
        "cache",
        "buster",
        "cache",
        "buster",
        "busterParam",
        "loader",
        "loader",
        "Boot",
        "buster",
        "busterParam",
        "buster",
        "_apply",
        "cfg",
        "charset",
        "buster",
        "_apply",
        "cfg",
        "Entry",
        "me",
        "_debug",
        "me",
        "Boot",
        "me",
        "me",
        "Boot",
        "me",
        "me",
        "me",
        "me",
        "cssRe",
        "me",
        "tag",
        "me",
        "el",
        "_debug",
        "me",
        "me",
        "tag",
        "tag",
        "el",
        "doc",
        "tag",
        "tag",
        "el",
        "me",
        "me",
        "el",
        "tag",
        "tag",
        "el",
        "doc",
        "tag",
        "el",
        "me",
        "Boot",
        "el",
        "me",
        "el",
        "el",
        "Boot",
        "me",
        "me",
        "me",
        "me",
        "url",
        "url",
        "me",
        "url",
        "me",
        "req",
        "req",
        "req",
        "Boot",
        "url",
        "complete",
        "async",
        "response",
        "response",
        "response",
        "response",
        "me",
        "exception",
        "status",
        "_environment",
        "me",
        "url",
        "me",
        "status",
        "status",
        "status",
        "_environment",
        "status",
        "content",
        "me",
        "content",
        "me",
        "url",
        "status",
        "me",
        "callback",
        "me",
        "callback",
        "callback",
        "me",
        "callback",
        "callback",
        "me",
        "el",
        "errorFn",
        "Boot",
        "el",
        "readyStateChange",
        "el",
        "callback",
        "el",
        "me",
        "me",
        "Boot",
        "content",
        "asset",
        "_debug",
        "Boot",
        "me",
        "me",
        "me",
        "me",
        "basePath",
        "key",
        "key",
        "doc",
        "basePath",
        "head",
        "head",
        "head",
        "head",
        "url",
        "content",
        "key",
        "el",
        "me",
        "ieMode",
        "el",
        "head",
        "ieMode",
        "head",
        "el",
        "el",
        "content",
        "el",
        "content",
        "head",
        "el",
        "head",
        "url",
        "content",
        "key",
        "Ext",
        "content",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "complete",
        "me",
        "complete",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "complete",
        "me",
        "me",
        "response",
        "me",
        "response",
        "me",
        "me",
        "sync",
        "me",
        "me",
        "me",
        "sync",
        "me",
        "me",
        "me",
        "Boot",
        "me",
        "me",
        "me",
        "Boot",
        "me",
        "me",
        "sync",
        "response",
        "me",
        "response",
        "me",
        "me",
        "Boot",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "me",
        "el",
        "me",
        "me",
        "el",
        "el",
        "prop",
        "el",
        "prop",
        "me",
        "el",
        "prop",
        "el",
        "prop",
        "cleanEx",
        "el",
        "el",
        "el",
        "emptyFn",
        "requests",
        "i",
        "i",
        "len",
        "i",
        "request",
        "requests",
        "i",
        "request",
        "listener",
        "me",
        "me",
        "me",
        "listener",
        "me",
        "listeners",
        "listener",
        "listeners",
        "listeners",
        "_debug",
        "listener",
        "listeners",
        "listener",
        "Ext",
        "disable",
        "path",
        "date",
        "date",
        "disable",
        "date",
        "date",
        "doc",
        "date",
        "path",
        "_environment",
        "Boot",
        "Boot",
        "request",
        "require",
        "filePath",
        "onLoad",
        "scope",
        "Boot",
        "emptyFn",
        "Boot",
        "Boot",
        "Ext",
        "Ext",
        "code",
        "execScript",
        "code",
        "$$code",
        "eval",
        "$$code",
        "me",
        "arguments",
        "args",
        "method",
        "me",
        "t",
        "args",
        "t",
        "args",
        "args",
        "method",
        "me",
        "arguments",
        "bind",
        "bind"
    ],
    "literals": [
        "'object'",
        "'_dc'",
        "'a'",
        "'undefined'",
        "'function'",
        "'undefined'",
        "'object'",
        "'div'",
        "'iPhone'",
        "'iPod'",
        "'Android'",
        "'Silk'",
        "'Android 2'",
        "'BlackBerry'",
        "'BB'",
        "'iPad'",
        "'RIM Tablet OS'",
        "'MSIE 10'",
        "'Trident'",
        "'Chrome'",
        "'Tizen'",
        "'Firefox'",
        "'Safari'",
        "'Windows Phone'",
        "'on'",
        "''",
        "'function'",
        "'undefined'",
        "'Android 2'",
        "'Windows Phone'",
        "'RIM Tablet OS'",
        "'MSIE 10'",
        "'touchend'",
        "'MSIE 10'",
        "\"&\"",
        "\"=\"",
        "\":\"",
        "'false'",
        "'0'",
        "'script'",
        "\"readyState\"",
        "\"async\"",
        "\"creating entry \"",
        "\" in Boot.init\"",
        "'loaded'",
        "'complete'",
        "'src'",
        "'readyState'",
        "\"async\"",
        "'/'",
        "\"//\"",
        "':'",
        "''",
        "'='",
        "'?'",
        "'&'",
        "'&'",
        "''",
        "'?'",
        "'string'",
        "'head'",
        "\"Boot.load called\"",
        "\"current active request, suspending this request\"",
        "\"Boot.loadSync called\"",
        "\"resuming suspended request\"",
        "'file:'",
        "'ionp:'",
        "\"fetching \"",
        "\" \"",
        "\"async\"",
        "\"sync\"",
        "'GET'",
        "'string'",
        "\"string\"",
        "'failure'",
        "'success'",
        "'delay'",
        "\"firing request listeners\"",
        "\"creating entry for \"",
        "\"=\"",
        "\"checking \"",
        "\" for prefix \"",
        "\"creating element for \"",
        "\"link\"",
        "\"link\"",
        "'stylesheet'",
        "'href'",
        "\"textContent\"",
        "\"text/css\"",
        "\"script\"",
        "'text/javascript'",
        "'src'",
        "'?'",
        "'?'",
        "'&'",
        "\"Failed loading synchronously via XHR: '\"",
        "\"'. It's likely that the file is either being loaded from a \"",
        "\"different domain or from the local file system where cross \"",
        "\"origin requests are not allowed for security reasons. Try \"",
        "\"asynchronous loading instead.\"",
        "\"Failed loading synchronously via XHR: '\"",
        "\"'. Please verify that the file exists. XHR status code: \"",
        "'loaded'",
        "'complete'",
        "\"injecting content for \"",
        "\"/\"",
        "'base'",
        "\"\\n/*# sourceURL=\"",
        "\" */\"",
        "\"style\"",
        "'styleSheet'",
        "\"\\n//# sourceURL=\"",
        "\"firing event listeners for url \"",
        "'ext-cache=1; expires='",
        "'; path='",
        "'/'"
    ],
    "variables": [
        "Ext",
        "doc",
        "apply",
        "_config",
        "cssRe",
        "resolverEl",
        "isBrowser",
        "_environment",
        "_tags",
        "_debug",
        "_apply",
        "Boot",
        "ua",
        "isMobile",
        "isPhone",
        "isDesktop",
        "isTablet",
        "touchSupported",
        "isIE10",
        "isBlackberry",
        "element",
        "uaTagChecks",
        "isEventSupported",
        "eventName",
        "isSupported",
        "uaTags",
        "len",
        "check",
        "c",
        "paramsString",
        "paramsArray",
        "i",
        "platforms",
        "tmpArray",
        "tmplen",
        "platform",
        "name",
        "enabled",
        "len",
        "p",
        "tag",
        "scriptEls",
        "len",
        "re",
        "entry",
        "script",
        "src",
        "state",
        "baseUrl",
        "key",
        "n",
        "origin",
        "ret",
        "dc",
        "pos",
        "c",
        "end",
        "config",
        "key",
        "entry",
        "request",
        "request",
        "next",
        "listener",
        "xhr",
        "result",
        "status",
        "content",
        "exception",
        "readyStateChange",
        "cfg",
        "url",
        "urls",
        "charset",
        "len",
        "loadOrderMap",
        "i",
        "element",
        "item",
        "len",
        "i",
        "reqs",
        "entry",
        "stop",
        "added",
        "idx",
        "ridx",
        "url",
        "indexes",
        "paths",
        "index",
        "len",
        "i",
        "me",
        "loadOrder",
        "loadOrderMap",
        "len",
        "unmapped",
        "i",
        "item",
        "expanded",
        "expandMap",
        "tmpExpanded",
        "len",
        "i",
        "t",
        "tlen",
        "tUrl",
        "me",
        "urls",
        "expanded",
        "me",
        "entries",
        "i",
        "entry",
        "urls",
        "url",
        "me",
        "entries",
        "len",
        "start",
        "continueLoad",
        "entry",
        "i",
        "me",
        "entries",
        "len",
        "start",
        "i",
        "entry",
        "me",
        "error",
        "fn",
        "delay",
        "scope",
        "me",
        "listeners",
        "listeners",
        "listener",
        "charset",
        "manifest",
        "loader",
        "cache",
        "buster",
        "busterParam",
        "me",
        "me",
        "me",
        "el",
        "me",
        "url",
        "url",
        "async",
        "complete",
        "me",
        "status",
        "content",
        "exception",
        "url",
        "me",
        "el",
        "readyStateChange",
        "errorFn",
        "me",
        "head",
        "url",
        "key",
        "el",
        "ieMode",
        "basePath",
        "me",
        "complete",
        "me",
        "complete",
        "me",
        "me",
        "me",
        "me",
        "el",
        "prop",
        "requests",
        "len",
        "i",
        "request",
        "me",
        "listeners",
        "listeners",
        "listener",
        "date",
        "bind",
        "args",
        "method",
        "t",
        "arguments"
    ],
    "comments": [
        "@tag core",
        "@define Ext.Boot",
        "<editor-fold desc=\"Boot\">",
        "<debug>",
        "console.log(message);",
        "</debug>",
        "Keyed by absolute URL this object holds \"true\" if that URL is already loaded",
        "or an array of callbacks to call once it loads.",
        "Entry objects \n\n                 'http://foo.com/bar/baz/Thing.js': {\n                 done: true,\n                 el: scriptEl || linkEl,\n                 preserve: true,\n                 requests: [ request1, ... ]\n                 }",
        "when loadSync is called, need to cause subsequent load requests to also be loadSync,",
        "eg, when Ext.require(...) is called",
        "<debug>",
        "</debug>",
        "if the browser has touch events we can be reasonably sure the device has",
        "a touch screen",
        "browsers that use pointer event have maxTouchPoints > 0 if the",
        "device supports touch input",
        "http://www.w3.org/TR/pointerevents/#widl-Navigator-maxTouchPoints",
        "IE10 uses a vendor-prefixed maxTouchPoints property",
        "Check if the ?platform parameter is set in the URL",
        "Since we are loading after other scripts, and we needed to gather them",
        "anyway, we track them in _scripts so we don't have to ask for them all",
        "repeatedly.",
        "If we find a script file called \"ext-*.js\", then the base path is that file's base path.",
        "<debug>",
        "</debug>",
        "non-IE",
        "IE only",
        "@TODO - see if we need this fallback logic",
        "http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue",
        "If we have a _dc query parameter we need to remove it from the canonical",
        "URL.",
        "keep the '?'",
        "remove the '&'",
        "<debug>",
        "</debug>",
        "If there is a request in progress, we must",
        "queue this new request to be fired  when the current request completes.",
        "<debug>",
        "</debug>",
        "trigger assignment of entries now to ensure that overlapping",
        "entries with currently running requests will synchronize state",
        "with this pending one as they complete",
        "<debug>",
        "</debug>",
        "<debug>",
        "</debug>",
        "<debug>",
        "</debug>",
        "prevent cycles",
        "iterate the requirements for each index and",
        "accumulate in the index map",
        "if we find a requirement that wasn't",
        "already in the index map,",
        "set the added flag to indicate we need to",
        "reprocess",
        "if we made a pass through the index map and didn't add anything",
        "then we can stop",
        "convert indexes back into load paths",
        "if we added some urls to the request to honor the indicated",
        "load order, the request needs to be sequential",
        "Free the stack (and defer the next script)",
        "<debug>",
        "</debug>",
        "<debug>",
        "</debug>",
        "<debug>",
        "</debug>",
        "<debug>",
        "</debug>",
        "<debug>",
        "</debug>",
        "<debug>",
        "</debug>",
        "IE starts loading here",
        "<debug>",
        "</debug>",
        "reset the href attribute to cuase IE to pick up the change",
        "create element after setting base",
        "Debugger friendly, file names are still shown even though they're",
        "eval'ed code. Breakpoints work on both Firebug and Chrome's Web",
        "Inspector.",
        "at this point, we need sequential evaluation,",
        "which means we can't advance the load until",
        "this entry has fully completed",
        "if we're calling back through load and we're loading but haven't",
        "yet loaded, then we should be in a sequential, cross domain",
        "load scenario which means we can't continue the load on the",
        "request until this entry has fully evaluated, which will mean",
        "loaded = evaluated = done = true in one step.  For css files, this",
        "will happen immediately upon <link> element creation / insertion,",
        "but <script> elements will set this upon load notification",
        "for async modes, we have some options",
        "if cross domain, just inject the script tag and let the onload",
        "events drive the progression",
        "for IE, use the readyStateChange allows us to load scripts in parallel",
        "but serialize the evaluation by appending the script node to the",
        "document",
        "for other browsers, just ajax the content down in parallel, and use",
        "globalEval to serialize evaluation",
        "for sync mode in js, global eval FTW.  IE won't honor the comment",
        "paths in the debugger, so eventually we need a sync mode for IE that",
        "uses the readyStateChange mechanism",
        "signal that the load process can continue",
        "Remove, since its useless now",
        "If we set the src property to null IE",
        "will try and request a script at './null'",
        "and prepare for GC",
        "ignore",
        "Setting to null can cause exceptions if IE ever needs to call these",
        "again (like onreadystatechange). This emptyFn has nothing locked in",
        "closure scope so it is about as safe as null for memory leaks.",
        "<debug>",
        "</debug>",
        "<if nonBrowser>",
        "@TODO",
        "</if>",
        "NOTE: We run the eval at global scope to protect the body of the function and allow",
        "compressors to still process it.",
        "(eval(\"/*@cc_on!@*/!1\"));",
        "<feature legacyBrowser>",
        "To reduce overhead on call of the bound fn we have two flavors based on",
        "whether we have args to prepend or not:",
        "avoid the slice/concat if the caller does not supply args",
        "this is the majority use case - just fn.bind(this) and no args",
        "to detect this polyfill if one want to improve it",
        "</feature>",
        "</editor-fold>"
    ],
    "docstrings": [
        "* @class Ext.Boot\n * @singleton",
        "* @cfg {Boolean} [disableCaching=true]\n             * If `true` current timestamp is added to script URL's to prevent caching.\n             * In debug builds, adding a \"cache\" or \"disableCacheBuster\" query parameter\n             * to the page's URL will set this to `false`.",
        "* @cfg {String} [disableCachingParam=\"_dc\"]\n             * The query parameter name for the cache buster's timestamp.",
        "* @cfg {Boolean} loadDelay\n             * Millisecond delay between asynchronous script injection (prevents stack\n             * overflow on some user agents) 'false' disables delay but potentially\n             * increases stack load.",
        "* @cfg {Boolean} preserveScripts\n             * `false` to remove asynchronously loaded scripts, `true` to retain script\n             * element for browser debugger compatibility and improved load performance.",
        "* @cfg {String} charset\n             * Optional charset to specify encoding of dynamic content.",
        "* The Boot loader class manages Request objects that contain one or \n     * more individual urls that need to be loaded.  Requests can be performed\n     * synchronously or asynchronously, but will always evaluate urls in the\n     * order specified on the request object.",
        "* contains the current script name being loaded\n             * (loadSync or sequential load only)",
        "* simple helper method for debugging",
        "* enables / disables loading scripts via script / link elements rather\n             * than using ajax / eval",
        "* The defult function that detects various platforms and sets tags\n             * in the platform map accrodingly.  Examples are iOS, android, tablet, etc.\n             * @param tags the set of tags to populate",
        "* Extracts user supplied platform tags from the \"platformTags\" query parameter\n             * of the form:\n             *\n             * ?platformTags=name:state,name:state,...\n             *\n             * (each tag defaults to true when state is unspecified)\n             *\n             * Example:\n             * ?platformTags=isTablet,isPhone:false,isDesktop:0,iOS:1,Safari:true, ...\n             *\n             * @returns {Object} the platform tags supplied by the query string",
        "* This method returns a canonical URL for the given URL.\n             *\n             * For example, the following all produce the same canonical URL (which is the\n             * last one):\n             *\n             *      http://foo.com/bar/baz/zoo/derp/../../goo/Thing.js?_dc=12345\n             *      http://foo.com/bar/baz/zoo/derp/../../goo/Thing.js\n             *      http://foo.com/bar/baz/zoo/derp/../jazz/../../goo/Thing.js\n             *      http://foo.com/bar/baz/zoo/../goo/Thing.js\n             *      http://foo.com/bar/baz/goo/Thing.js\n             *\n             * @private",
        "* Get the config value corresponding to the specified name. If no name is given, will return the config object\n             * @param {String} name The config property name\n             * @return {Object}",
        "* Set the configuration.\n             * @param {Object} config The config object to override the default values.\n             * @return {Ext.Boot} this",
        "* this is a helper function used by Ext.Loader to flush out\n             * 'uses' arrays for classes",
        "* The request class encapsulates a series of Entry objects\n     * and provides notification around the completion of all Entries\n     * in this request.",
        "* @private\n         * @param manifest\n         * @returns {*}",
        "* @private\n         * @param index\n         * @param indexMap\n         * @returns {{}}",
        "* The Entry class is a token to manage the load and evaluation\n     * state of a particular url.  It is used to notify all Requests\n     * interested in this url that the content is available.",
        "* @private",
        "* Turns on or off the \"cache buster\" applied to dynamically loaded scripts. Normally\n     * dynamically loaded scripts have an extra query parameter appended to avoid stale\n     * cached scripts. This method can be used to disable this mechanism, and is primarily\n     * useful for testing. This is done using a cookie.\n     * @param {Boolean} disable True to disable the cache buster.\n     * @param {String} [path=\"/\"] An optional path to scope the cookie.",
        "* This method evaluates the given code free of any local variable. This\n * will be at global scope, in others it will be in a function.\n * @parma {String} code The code to evaluate.\n * @private\n * @method",
        "* Only IE8 & IE/Quirks lack Function.prototype.bind so we polyfill that here."
    ],
    "functions": [
        "Request",
        "Entry"
    ],
    "classes": []
}