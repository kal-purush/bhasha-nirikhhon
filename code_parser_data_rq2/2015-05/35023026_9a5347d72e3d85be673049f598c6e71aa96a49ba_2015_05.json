{
    "identifiers": [
        "cherrypy",
        "os",
        "sys",
        "pybean",
        "Store",
        "SQLiteWriter",
        "math",
        "os",
        "path",
        "join",
        "os",
        "getcwd",
        "os",
        "path",
        "dirname",
        "sys",
        "path",
        "append",
        "_curdir",
        "os",
        "environ",
        "keys",
        "os",
        "environ",
        "os",
        "environ",
        "_curdir",
        "_curdir",
        "os",
        "path",
        "isdir",
        "download_root_dir",
        "os",
        "makedirs",
        "download_root_dir",
        "os",
        "path",
        "isdir",
        "download_root_dir",
        "os",
        "makedirs",
        "download_root_dir",
        "os",
        "path",
        "isdir",
        "download_root_dir",
        "os",
        "makedirs",
        "download_root_dir",
        "cherrypy",
        "expose",
        "attr",
        "args",
        "kwargs",
        "cherrypy",
        "HTTPRedirect",
        "cherrypy",
        "expose",
        "args",
        "kwargs",
        "Store",
        "SQLiteWriter",
        "_curdir",
        "frozen",
        "SQLite連結",
        "find",
        "material_item",
        "material",
        "outstring",
        "material_item",
        "serialno",
        "material_item",
        "unsno",
        "material_item",
        "treatment",
        "outstring",
        "outstring",
        "outstring",
        "outstring",
        "outstring",
        "cherrypy",
        "expose",
        "small_gear_no",
        "gear_type",
        "Store",
        "SQLiteWriter",
        "_curdir",
        "frozen",
        "SQLite連結",
        "find_one",
        "small_gear_no",
        "gear_type",
        "lewis_factor",
        "type1",
        "gear_type",
        "lewis_factor",
        "type2",
        "gear_type",
        "lewis_factor",
        "type3",
        "lewis_factor",
        "type4",
        "lewis_factor",
        "gearno",
        "SQLite連結",
        "find_one",
        "small_gear_no",
        "gear_type",
        "lewis_factor",
        "type1",
        "gear_type",
        "lewis_factor",
        "type2",
        "gear_type",
        "lewis_factor",
        "type3",
        "lewis_factor",
        "type4",
        "lewis_factor",
        "gearno",
        "larger_formfactor",
        "small_gear_no",
        "larger_toothnumber",
        "larger_formfactor",
        "smaller_formfactor",
        "larger_toothnumber",
        "smaller_toothnumber",
        "round",
        "calculated_factor",
        "cherrypy",
        "expose",
        "horsepower",
        "rpm",
        "ratio",
        "toothtype",
        "safetyfactor",
        "material_serialno",
        "npinion",
        "Store",
        "SQLiteWriter",
        "_curdir",
        "frozen",
        "toothtype",
        "toothtype",
        "壓力角",
        "npinion",
        "最小齒數",
        "最小齒數",
        "npinion",
        "SQLite連結",
        "SQLite連結",
        "find_one",
        "material_serialno",
        "material",
        "yield_str",
        "SQLite連結",
        "count",
        "npinion",
        "on_table",
        "SQLite連結",
        "find_one",
        "npinion",
        "toothtype",
        "lewis_factor",
        "type1",
        "toothtype",
        "lewis_factor",
        "type2",
        "toothtype",
        "lewis_factor",
        "type3",
        "lewis_factor",
        "type4",
        "interpolation",
        "npinion",
        "toothtype",
        "npinion",
        "ratio",
        "facewidth",
        "circularpitch",
        "facewidth",
        "circularpitch",
        "i",
        "math",
        "pi",
        "diametralpitch",
        "npinion",
        "diametralpitch",
        "math",
        "pi",
        "pitchdiameter",
        "rpm",
        "horsepower",
        "pitchlinevelocity",
        "pitchlinevelocity",
        "transmittedload",
        "diametralpitch",
        "safetyfactor",
        "velocityfactor",
        "formfactor",
        "strengthstress",
        "counter",
        "outstring",
        "outstring",
        "i",
        "counter",
        "round",
        "facewidth",
        "counter",
        "gear_weblink",
        "outstring",
        "counter",
        "facewidth",
        "outstring",
        "cherrypy",
        "expose",
        "outstring",
        "cherrypy",
        "expose",
        "facewidth",
        "n",
        "outstring",
        "Gear",
        "_curdir",
        "data_dir",
        "data_dir",
        "os",
        "environ",
        "keys",
        "cherrypy",
        "Application",
        "root",
        "config",
        "application_conf",
        "cherrypy",
        "quickstart",
        "root",
        "config",
        "application_conf"
    ],
    "literals": [
        "'OPENSHIFT_REPO_DIR'",
        "'OPENSHIFT_DATA_DIR'",
        "'OPENSHIFT_DATA_DIR'",
        "\"/local_data/\"",
        "\"/local_data/\"",
        "\"downloads\"",
        "\"downloads\"",
        "\"mkdir error\"",
        "\"images\"",
        "\"images\"",
        "\"mkdir error\"",
        "\"tmp\"",
        "\"tmp\"",
        "\"mkdir error\"",
        "'default'",
        "\"/\"",
        "\"/lewis.db\"",
        "\"steel\"",
        "\"抱歉! 資料庫無法連線<br />\"",
        "\"<option value=\"",
        "\">UNS - \"",
        "\" - \"",
        "\"</select><br />\"",
        "\"小齒輪齒數:<input type=text name=npinion id=npinion value=18 size=10><br />\"",
        "\"<input type=submit id=submit value=進行運算>\"",
        "\"</form>\"",
        "\"/lewis.db\"",
        "\"lewis\"",
        "\"gearno > ?\"",
        "\"lewis\"",
        "\"gearno < ? order by gearno DESC\"",
        "\"/lewis.db\"",
        "\"\"",
        "\"steel\"",
        "\"steel\"",
        "\"serialno=?\"",
        "\"lewis\"",
        "\"gearno=?\"",
        "\"lewis\"",
        "\"gearno=?\"",
        "\"超過5000次的設計運算,仍無法找到答案!<br />\"",
        "\"可能所選用的傳遞功率過大,或無足夠強度的材料可以使用!<br />\"",
        "\"進行\"",
        "\"次重複運算後,得到合用的facewidth值為:\"",
        "'/static'",
        "'tools.staticdir.on'",
        "'tools.staticdir.dir'",
        "\"/static\"",
        "'/images'",
        "'tools.staticdir.on'",
        "'tools.staticdir.dir'",
        "\"/images\"",
        "'/downloads'",
        "'tools.staticdir.on'",
        "'tools.staticdir.dir'",
        "\"/downloads\"",
        "'__main__'",
        "'OPENSHIFT_REPO_DIR'"
    ],
    "variables": [
        "_curdir",
        "download_root_dir",
        "data_dir",
        "download_root_dir",
        "data_dir",
        "SQLite連結",
        "material",
        "outstring",
        "SQLite連結",
        "lewis_factor",
        "larger_formfactor",
        "larger_formfactor",
        "larger_formfactor",
        "larger_formfactor",
        "larger_toothnumber",
        "lewis_factor",
        "smaller_formfactor",
        "smaller_formfactor",
        "smaller_formfactor",
        "smaller_formfactor",
        "smaller_toothnumber",
        "calculated_factor",
        "SQLite連結",
        "outstring",
        "壓力角",
        "壓力角",
        "最小齒數",
        "最小齒數",
        "npinion",
        "npinion",
        "steel",
        "material",
        "strengthstress",
        "on_table",
        "lewis_factor",
        "formfactor",
        "formfactor",
        "formfactor",
        "formfactor",
        "formfactor",
        "ngear",
        "counter",
        "i",
        "facewidth",
        "circularpitch",
        "diametralpitch",
        "circularpitch",
        "pitchdiameter",
        "pitchlinevelocity",
        "transmittedload",
        "velocityfactor",
        "facewidth",
        "facewidth",
        "outstring",
        "outstring",
        "outstring",
        "root",
        "application_conf",
        "application"
    ],
    "comments": [
        "這個程式要計算正齒輪的齒面寬, 資料庫連結希望使用 pybean 與 SQLite",
        "導入 pybean 模組與所要使用的 Store 及 SQLiteWriter 方法",
        "確定程式檔案所在目錄, 在 Windows 有最後的反斜線",
        "將所在目錄設為系統搜尋目錄",
        "while program is executed in OpenShift",
        "while program is executed in localhost",
        "這是 Gear 設計資料表的定義",
        "hope to create downloads and images directories",
        "各組利用 index 引導隨後的程式執行",
        "進行資料庫檔案連結,  並且取出所有資料",
        "利用 Store  建立資料庫檔案對應物件, 並且設定 frozen=True 表示不要開放動態資料表的建立",
        "因為程式以 application 所在目錄執行, 因此利用相對目錄連結 lewis.db 資料庫檔案",
        "material = SQLite連結.find_one(\"steel\",\"serialno = ?\",[序號])",
        "str(SQLite連結.count(\"steel\")) 將傳回 70, 表示資料庫中有 70 筆資料",
        "所傳回的 material 為 iterator",
        "使用內插法求值",
        "找出比目標齒數大的其中的最小的,就是最鄰近的大值",
        "找出比目標齒數小的其中的最大的,就是最鄰近的小值",
        "只傳回小數點後五位數",
        "改寫為齒面寬的設計函式",
        "根據所選用的齒形決定壓力角",
        "根據壓力角決定最小齒數",
        "直接設最小齒數",
        "大於400的齒數則視為齒條(Rack)",
        "根據所選用的材料查詢強度值",
        "由 material之序號查 steel 表以得材料之降伏強度S單位為 kpsi 因此查得的值要成乘上1000",
        "利用 Store  建立資料庫檔案對應物件, 並且設定 frozen=True 表示不要開放動態資料表的建立",
        "SQLite連結 = Store(SQLiteWriter(\"lewis.db\", frozen=True))",
        "指定 steel 資料表",
        "資料查詢",
        "material = SQLite連結.find_one(\"steel\",\"unsno=? and treatment=?\",[unsno, treatment])",
        "列出 steel 資料表中的資料筆數",
        "print(SQLite連結.count(\"steel\"))",
        "print (material.yield_str)",
        "由小齒輪的齒數與齒形類別,查詢lewis form factor",
        "先查驗是否有直接對應值",
        "直接進入設計運算",
        "print(\"直接運算\")",
        "print(on_table)",
        "print(lewis_factor.type1)",
        "根據齒形查出 formfactor 值",
        "沒有直接對應值, 必須進行查表內插運算後, 再執行設計運算",
        "print(\"必須內插\")",
        "print(interpolation(npinion, gear_type))",
        "開始進行設計運算",
        "重要的最佳化設計---儘量用整數的diametralpitch",
        "先嘗試用整數算若 diametralpitch 找到100 仍無所獲則改用 0.25 作為增量再不行則宣告 fail",
        "circularpitch = 3.14159/diametralpitch",
        "pitchlinevelocity = 3.14159*pitchdiameter*rpm/12",
        "formfactor is Lewis form factor",
        "formfactor need to get from table 13-3 and determined ty teeth number and type of tooth",
        "formfactor = 0.293",
        "90 is the value get from table corresponding to material type",
        "離開while迴圈",
        "先載入 cube 程式測試",
        "outstring = self.cube_weblink()",
        "再載入 gear 程式測試",
        "setup static, images and downloads directories",
        "if inOpenshift ('OPENSHIFT_REPO_DIR' exists in environment variables) or not inOpenshift",
        "operate in OpenShift",
        "operate in localhost"
    ],
    "docstrings": [
        "'''\n\nlewis.db 中有兩個資料表, steel 與 lewis\n\n CREATE TABLE steel ( \n    serialno      INTEGER,\n    unsno         TEXT,\n    aisino        TEXT,\n    treatment     TEXT,\n    yield_str     INTEGER,\n    tensile_str   INTEGER,\n    stretch_ratio INTEGER,\n    sectional_shr INTEGER,\n    brinell       INTEGER \n);\n\nCREATE TABLE lewis ( \n    serialno INTEGER PRIMARY KEY\n                     NOT NULL,\n    gearno   INTEGER,\n    type1    NUMERIC,\n    type4    NUMERIC,\n    type3    NUMERIC,\n    type2    NUMERIC \n);\n'''",
        "'''\n            outstring = \"\"\n            for material_item in material:\n                outstring += str(material_item.serialno) + \":\" + material_item.unsno + \"_\" + material_item.treatment + \"<br />\"\n            return outstring\n            '''",
        "'''\n<form id=entry method=post action=\"gear_width\">\n請填妥下列參數，以完成適當的齒尺寸大小設計。<br />\n馬達馬力:<input type=text name=horsepower id=horsepower value=100 size=10>horse power<br />\n馬達轉速:<input type=text name=rpm id=rpm value=1120 size=10>rpm<br />\n齒輪減速比: <input type=text name=ratio id=ratio value=4 size=10><br />\n齒形:<select name=toothtype id=toothtype>\n<option value=type1>壓力角20度,a=0.8,b=1.0\n<option value=type2>壓力角20度,a=1.0,b=1.25\n<option value=type3>壓力角25度,a=1.0,b=1.25\n<option value=type4>壓力角25度,a=1.0,b=1.35\n</select><br />\n安全係數:<input type=text name=safetyfactor id=safetyfactor value=3 size=10><br />\n齒輪材質:<select name=material_serialno id=material_serialno>\n'''",
        "'''<script type=\"text/javascript\" src=\"/static/weblink/pfcUtils.js\"></script>\n    <script type=\"text/javascript\" src=\"/static/weblink/wl_header.js\">\n    document.writeln (\"Error loading Pro/Web.Link header!\");\n    </script>\n    <script type=\"text/javascript\" language=\"JavaScript\">\n    // 若第三輸入為 false, 表示僅載入 session, 但是不顯示\n    // ret 為 model open return\n     var ret = document.pwl.pwlMdlOpen(\"cube.prt\", \"v:/tmp\", false);\n    if (!ret.Status) {\n        alert(\"pwlMdlOpen failed (\" + ret.ErrorCode + \")\");\n    }\n        //將 ProE 執行階段設為變數 session\n        var session = pfcGetProESession();\n        // 在視窗中打開零件檔案, 並且顯示出來\n        var window = session.OpenFile(pfcCreate(\"pfcModelDescriptor\").CreateFromFileName(\"cube.prt\"));\n        var solid = session.GetModel(\"cube.prt\",pfcCreate(\"pfcModelType\").MDL_PART);\n        var length,width,myf,myn,i,j,volume,count,d1Value,d2Value;\n        // 將模型檔中的 length 變數設為 javascript 中的 length 變數\n        length = solid.GetParam(\"a1\");\n        // 將模型檔中的 width 變數設為 javascript 中的 width 變數\n        width = solid.GetParam(\"a2\");\n    //改變零件尺寸\n        //myf=20;\n        //myn=20;\n        volume=0;\n        count=0;\n        try\n        {\n                // 以下採用 URL 輸入對應變數\n                //createParametersFromArguments ();\n                // 以下則直接利用 javascript 程式改變零件參數\n                for(i=0;i<=5;i++)\n                {\n                    //for(j=0;j<=2;j++)\n                    //{\n                        myf=20.0;\n                        myn=10.0+i*0.5;\n    // 設定變數值, 利用 ModelItem 中的 CreateDoubleParamValue 轉換成 Pro/Web.Link 所需要的浮點數值\n             d1Value = pfcCreate (\"MpfcModelItem\").CreateDoubleParamValue(myf);\n             d2Value = pfcCreate (\"MpfcModelItem\").CreateDoubleParamValue(myn);\n    // 將處理好的變數值, 指定給對應的零件變數\n                        length.Value = d1Value;\n                        width.Value = d2Value;\n                        //零件尺寸重新設定後, 呼叫 Regenerate 更新模型\n                        solid.Regenerate(void null);\n                        //利用 GetMassProperty 取得模型的質量相關物件\n                        properties = solid.GetMassProperty(void null);\n                        //volume = volume + properties.Volume;\n    volume = properties.Volume;\n                        count = count + 1;\n    alert(\"執行第\"+count+\"次,零件總體積:\"+volume);\n    // 將零件存為新檔案\n    var newfile = document.pwl.pwlMdlSaveAs(\"cube.prt\", \"v:/tmp\", \"cube\"+count+\".prt\");\n    if (!newfile.Status) {\n        alert(\"pwlMdlSaveAs failed (\" + newfile.ErrorCode + \")\");\n    }\n    //} // 內圈 for 迴圈\n                } //外圈 for 迴圈\n                //alert(\"共執行:\"+count+\"次,零件總體積:\"+volume);\n                //alert(\"零件體積:\"+properties.Volume);\n                //alert(\"零件體積取整數:\"+Math.round(properties.Volume));\n            }\n        catch(err)\n            {\n                alert (\"Exception occurred: \"+pfcGetExceptionType (err));\n            }\n    </script>\n    '''",
        "'''<script type=\"text/javascript\" src=\"/static/weblink/pfcUtils.js\"></script>\n    <script type=\"text/javascript\" src=\"/static/weblink/wl_header.js\">// <![CDATA[\n    document.writeln (\"Error loading Pro/Web.Link header!\");\n    // ]]></script>\n    <script type=\"text/javascript\" language=\"JavaScript\">// <![CDATA[\n    if (!pfcIsWindows()) netscape.security.PrivilegeManager.enablePrivilege(\"UniversalXPConnect\");\n    // 若第三輸入為 false, 表示僅載入 session, 但是不顯示\n    // ret 為 model open return\n     var ret = document.pwl.pwlMdlOpen(\"gear.prt\", \"v:/\", false);\n    if (!ret.Status) {\n        alert(\"pwlMdlOpen failed (\" + ret.ErrorCode + \")\");\n    }\n        //將 ProE 執行階段設為變數 session\n        var session = pfcGetProESession();\n        // 在視窗中打開零件檔案, 並且顯示出來\n        var window = session.OpenFile(pfcCreate(\"pfcModelDescriptor\").CreateFromFileName(\"gear.prt\"));\n        var solid = session.GetModel(\"gear.prt\",pfcCreate(\"pfcModelType\").MDL_PART);\n        var length,width,myf,myn,i,j,volume,count,d1Value,d2Value;\n        // 將模型檔中的 length 變數設為 javascript 中的 length 變數\n        length = solid.GetParam(\"n\");\n        // 將模型檔中的 width 變數設為 javascript 中的 width 變數\n        width = solid.GetParam(\"face_width\");\n    //改變零件尺寸\n        //myf=20;\n        //myn=20;\n        volume=0;\n        count=0;\n        try\n        {\n                // 以下採用 URL 輸入對應變數\n                //createParametersFromArguments ();\n                // 以下則直接利用 javascript 程式改變零件參數\n                for(i=0;i<=5;i++)\n                {\n                    //for(j=0;j<=2;j++)\n                    //{\n                        myf=25+i*2;\n                        myn=10.0+i*0.5;\n    // 設定變數值, 利用 ModelItem 中的 CreateDoubleParamValue 轉換成 Pro/Web.Link 所需要的浮點數值\n             //d1Value = pfcCreate (\"MpfcModelItem\").CreateDoubleParamValue(myf);\n             d1Value = pfcCreate (\"MpfcModelItem\").CreateIntParamValue(myf);\n             d2Value = pfcCreate (\"MpfcModelItem\").CreateDoubleParamValue(myn);\n\n    // 將處理好的變數值, 指定給對應的零件變數\n                        length.Value = d1Value;\n                        width.Value = d2Value;\n                        //零件尺寸重新設定後, 呼叫 Regenerate 更新模型\n                        solid.Regenerate(void null);\n                        //利用 GetMassProperty 取得模型的質量相關物件\n                        properties = solid.GetMassProperty(void null);\n                        //volume = volume + properties.Volume;\n    volume = properties.Volume;\n                        count = count + 1;\n    alert(\"執行第\"+count+\"次,零件總體積:\"+volume);\n    // 將零件存為新檔案\n    var newfile = document.pwl.pwlMdlSaveAs(\"gear.prt\", \"v:/\", \"mygear_\"+count+\".prt\");\n    if (!newfile.Status) {\n        alert(\"pwlMdlSaveAs failed (\" + newfile.ErrorCode + \")\");\n    }\n    //} // 內圈 for 迴圈\n                } //外圈 for 迴圈\n                //alert(\"共執行:\"+count+\"次,零件總體積:\"+volume);\n                //alert(\"零件體積:\"+properties.Volume);\n                //alert(\"零件體積取整數:\"+Math.round(properties.Volume));\n            }\n        catch(err)\n            {\n                alert (\"Exception occurred: \"+pfcGetExceptionType (err));\n            }\n    // ]]></script>\n    '''"
    ],
    "functions": [
        "index",
        "interpolation",
        "gear_width",
        "cube_weblink",
        "gear_weblink"
    ],
    "classes": [
        "Gear"
    ]
}