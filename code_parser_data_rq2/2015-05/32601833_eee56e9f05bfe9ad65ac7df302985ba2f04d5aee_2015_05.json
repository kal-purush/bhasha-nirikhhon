{
    "identifiers": [
        "require",
        "require",
        "require",
        "data",
        "_",
        "data",
        "key",
        "data",
        "key",
        "key",
        "data",
        "query",
        "searchComplete",
        "searchError",
        "query",
        "_",
        "query",
        "searchCache",
        "queryCopy",
        "_",
        "queryCopy",
        "queryCopy",
        "promise",
        "queryCopy",
        "searchCache",
        "queryCopy",
        "addQueryToResults",
        "data",
        "data",
        "queryCopy",
        "data",
        "promise",
        "queryCopy",
        "promise",
        "searchCache",
        "checkRequestedResultTypesArePresent",
        "searchComplete",
        "searchError",
        "query",
        "query",
        "searchInterface",
        "query",
        "query",
        "Q",
        "refactorQueryToHaveShapeOfResponse",
        "query",
        "query",
        "metadata"
    ],
    "literals": [
        "'use strict'",
        "'q'",
        "'./searchInterfaceCache'",
        "'gramene-search-client'",
        "' not found in search results'",
        "'performing search'",
        "'asking search interface for'",
        "'remote query not required'"
    ],
    "variables": [
        "Q",
        "searchCache",
        "searchInterface",
        "queryCopy",
        "promise",
        "metadata"
    ],
    "comments": [
        "Note that this function is debounced in init. It might be called many",
        "times in succession when a user is interacting with the page,",
        "but only the last one will fire.",
        "make a copy of the query state when we make the async call...",
        "find cached results and move them from",
        "query.resultTypes to query.cachedResultTypes",
        "if we have any uncached result types, we need to",
        "ask the server for some data, otherwise we will",
        "just use what we have",
        "when we get data from the server, put it in the",
        "cache",
        "and also add the query for the actual search",
        "to the results metadata.",
        "add any cached data",
        "console.log for anything we asked for but didn't get",
        "TODO should we error out here?",
        "tell interested parties about what has happened"
    ],
    "docstrings": [],
    "functions": [
        "checkRequestedResultTypesArePresent"
    ],
    "classes": []
}