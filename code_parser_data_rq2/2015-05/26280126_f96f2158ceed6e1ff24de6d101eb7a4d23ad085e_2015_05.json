{
    "identifiers": [
        "SensusService",
        "Probes",
        "User",
        "Collections",
        "ObjectModel",
        "Collections",
        "Generic",
        "SensusUI",
        "UiProperties",
        "Collections",
        "Specialized",
        "Threading",
        "Linq",
        "SensusService",
        "Probes",
        "User",
        "ScriptRunner",
        "ObservableCollection",
        "Trigger",
        "Trigger",
        "EventHandler",
        "Tuple",
        "Datum",
        "Datum",
        "Script",
        "_probe",
        "_probe",
        "value",
        "_script",
        "_script",
        "value",
        "EntryStringUiProperty",
        "_name",
        "_name",
        "value",
        "OnOffUiProperty",
        "_enabled",
        "value",
        "_enabled",
        "_enabled",
        "value",
        "_probe",
        "Running",
        "_enabled",
        "Start",
        "Stop",
        "ObservableCollection",
        "Trigger",
        "_triggers",
        "EntryIntegerUiProperty",
        "_delayMS",
        "_delayMS",
        "value",
        "EntryIntegerUiProperty",
        "_maximumAgeMinutes",
        "_maximumAgeMinutes",
        "value",
        "Script",
        "_incompleteScripts",
        "OnOffUiProperty",
        "_rerun",
        "value",
        "_rerun",
        "_rerun",
        "value",
        "_probe",
        "Running",
        "_enabled",
        "_rerun",
        "StartRerunCallbacksAsync",
        "StopRerunCallbacksAsync",
        "EntryIntegerUiProperty",
        "_rerunDelayMS",
        "value",
        "value",
        "value",
        "_rerunDelayMS",
        "_rerunDelayMS",
        "value",
        "_rerunCallbackId",
        "_rerunCallbackId",
        "SensusServiceHelper",
        "Get",
        "RescheduleRepeatingCallback",
        "_rerunCallbackId",
        "_rerunDelayMS",
        "_rerunDelayMS",
        "_numScriptsAgedOut",
        "_numScriptsAgedOut",
        "value",
        "OnOffUiProperty",
        "_triggerRandomly",
        "value",
        "_triggerRandomly",
        "_triggerRandomly",
        "value",
        "_probe",
        "Running",
        "_enabled",
        "_triggerRandomly",
        "StartRandomTriggerCallbacksAsync",
        "StopRandomTriggerCallbackAsync",
        "EntryIntegerUiProperty",
        "_maximumRandomTriggerDelayMinutes",
        "value",
        "value",
        "value",
        "_maximumRandomTriggerDelayMinutes",
        "value",
        "_maximumRandomTriggerDelayMinutes",
        "_randomTriggerCallbackId",
        "_maximumRandomTriggerDelayMinutes",
        "value",
        "reschedule",
        "StartRandomTriggerCallbacksAsync",
        "name",
        "Script",
        "script",
        "maximumAgeMinutes",
        "ScriptProbe",
        "probe",
        "delayMS",
        "_name",
        "name",
        "_script",
        "script",
        "_maximumAgeMinutes",
        "maximumAgeMinutes",
        "_probe",
        "probe",
        "_delayMS",
        "delayMS",
        "_enabled",
        "_triggers",
        "ObservableCollection",
        "Trigger",
        "_triggerHandler",
        "Trigger",
        "EventHandler",
        "Tuple",
        "Datum",
        "Datum",
        "_incompleteScripts",
        "Script",
        "_rerun",
        "_rerunCallbackId",
        "_rerunDelayMS",
        "_numScriptsAgedOut",
        "_triggerRandomly",
        "_randomTriggerCallbackId",
        "_maximumRandomTriggerDelayMinutes",
        "_random",
        "Random",
        "_triggers",
        "CollectionChanged",
        "o",
        "e",
        "e",
        "Action",
        "NotifyCollectionChangedAction",
        "Add",
        "Trigger",
        "trigger",
        "e",
        "NewItems",
        "_triggerHandler",
        "ContainsKey",
        "trigger",
        "EventHandler",
        "Tuple",
        "Datum",
        "Datum",
        "oo",
        "previousCurrentDatum",
        "_locker",
        "_probe",
        "Running",
        "_enabled",
        "previousCurrentDatum",
        "Item2",
        "trigger",
        "ConditionSatisfiedLastTime",
        "previousCurrentDatum",
        "Item1",
        "previousCurrentDatum",
        "Item2",
        "trigger",
        "DatumProperty",
        "GetValue",
        "currentDatum",
        "currentDatumValue",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "trigger",
        "DatumPropertyName",
        "LoggingLevel",
        "Normal",
        "GetType",
        "trigger",
        "Change",
        "previousDatum",
        "currentDatumValue",
        "Convert",
        "ToDouble",
        "currentDatumValue",
        "Convert",
        "ToDouble",
        "trigger",
        "DatumProperty",
        "GetValue",
        "previousDatum",
        "ex",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "ex",
        "Message",
        "LoggingLevel",
        "Normal",
        "GetType",
        "trigger",
        "FireFor",
        "currentDatumValue",
        "RunAsync",
        "_script",
        "Copy",
        "previousDatum",
        "currentDatum",
        "trigger",
        "Probe",
        "MostRecentDatumChanged",
        "handler",
        "_triggerHandler",
        "Add",
        "trigger",
        "handler",
        "e",
        "Action",
        "NotifyCollectionChangedAction",
        "Remove",
        "Trigger",
        "trigger",
        "e",
        "OldItems",
        "_triggerHandler",
        "ContainsKey",
        "trigger",
        "trigger",
        "Probe",
        "MostRecentDatumChanged",
        "_triggerHandler",
        "trigger",
        "_triggerHandler",
        "Remove",
        "trigger",
        "_rerun",
        "StartRerunCallbacksAsync",
        "_triggerRandomly",
        "StartRandomTriggerCallbacksAsync",
        "_incompleteScripts",
        "StopRerunCallbacks",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "LoggingLevel",
        "Normal",
        "GetType",
        "_rerunCallbackId",
        "SensusServiceHelper",
        "Get",
        "ScheduleRepeatingCallback",
        "_probe",
        "Running",
        "_enabled",
        "_rerun",
        "_incompleteScripts",
        "scriptToRerun",
        "_incompleteScripts",
        "Count",
        "scriptToRerun",
        "_incompleteScripts",
        "Dequeue",
        "scriptToRerun",
        "Age",
        "TotalMinutes",
        "_maximumAgeMinutes",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "_name",
        "LoggingLevel",
        "Normal",
        "GetType",
        "scriptToRerun",
        "_numScriptsAgedOut",
        "scriptToRerun",
        "RunAsync",
        "scriptToRerun",
        "_rerunDelayMS",
        "_rerunDelayMS",
        "Start",
        "StartRandomTriggerCallbacksAsync",
        "_locker",
        "StopRandomTriggerCallbacks",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "LoggingLevel",
        "Normal",
        "GetType",
        "__IOS__",
        "__ANDROID__",
        "__WINDOWS_PHONE__",
        "TODO",
        "we",
        "SensusServiceHelper",
        "Get",
        "ScheduleOneTimeCallback",
        "_probe",
        "Running",
        "_enabled",
        "_triggerRandomly",
        "RunAsync",
        "_script",
        "Copy",
        "StartRandomTriggerCallbacksAsync",
        "_random",
        "Next",
        "_maximumRandomTriggerDelayMinutes",
        "userNotificationMessage",
        "Start",
        "RunAsync",
        "Script",
        "script",
        "RunAsync",
        "script",
        "RunAsync",
        "Script",
        "script",
        "Action",
        "callback",
        "RunAsync",
        "script",
        "callback",
        "RunAsync",
        "Script",
        "script",
        "Datum",
        "previousDatum",
        "Datum",
        "currentDatum",
        "RunAsync",
        "script",
        "previousDatum",
        "currentDatum",
        "RunAsync",
        "Script",
        "script",
        "Datum",
        "previousDatum",
        "Datum",
        "currentDatum",
        "Action",
        "callback",
        "__IOS__",
        "__ANDROID__",
        "__WINDOWS_PHONE__",
        "TODO",
        "CancellationToken",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "_name",
        "LoggingLevel",
        "Normal",
        "Script",
        "script",
        "FirstRunTimestamp",
        "DateTimeOffset",
        "MinValue",
        "script",
        "FirstRunTimestamp",
        "DateTimeOffset",
        "UtcNow",
        "isRerun",
        "previousDatum",
        "script",
        "PreviousDatum",
        "previousDatum",
        "currentDatum",
        "script",
        "CurrentDatum",
        "currentDatum",
        "Prompt",
        "prompt",
        "script",
        "Prompts",
        "prompt",
        "Complete",
        "ManualResetEvent",
        "prompt",
        "RunAsync",
        "script",
        "PreviousDatum",
        "script",
        "CurrentDatum",
        "isRerun",
        "script",
        "FirstRunTimestamp",
        "datum",
        "_probe",
        "StoreDatum",
        "datum",
        "datumWait",
        "datumWait",
        "WaitOne",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "_name",
        "LoggingLevel",
        "Normal",
        "Script",
        "_rerun",
        "script",
        "Complete",
        "_incompleteScripts",
        "_incompleteScripts",
        "Enqueue",
        "script",
        "callback",
        "callback",
        "_delayMS",
        "SensusServiceHelper",
        "Get",
        "ScheduleOneTimeCallback",
        "runAction",
        "_delayMS",
        "userNotificationMessage",
        "runAction",
        "CancellationToken",
        "Start",
        "TestHealth",
        "error",
        "warning",
        "misc",
        "_incompleteScripts",
        "_incompleteScripts",
        "Count",
        "misc",
        "_name",
        "_incompleteScripts",
        "Count",
        "_incompleteScripts",
        "Select",
        "s",
        "FirstRunTimestamp",
        "Min",
        "Environment",
        "NewLine",
        "_numScriptsAgedOut",
        "misc",
        "_numScriptsAgedOut",
        "_name",
        "Environment",
        "NewLine",
        "restart",
        "Restart",
        "Stop",
        "Start",
        "StopRerunCallbacksAsync",
        "StopRerunCallbacks",
        "Start",
        "StopRerunCallbacks",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "LoggingLevel",
        "Normal",
        "GetType",
        "SensusServiceHelper",
        "Get",
        "UnscheduleOneTimeCallback",
        "_rerunCallbackId",
        "_rerunCallbackId",
        "StopRandomTriggerCallbackAsync",
        "StopRandomTriggerCallbacks",
        "Start",
        "StopRandomTriggerCallbacks",
        "SensusServiceHelper",
        "Get",
        "Logger",
        "Log",
        "LoggingLevel",
        "Normal",
        "GetType",
        "SensusServiceHelper",
        "Get",
        "UnscheduleOneTimeCallback",
        "_randomTriggerCallbackId",
        "_randomTriggerCallbackId",
        "Stop",
        "StopRerunCallbacks",
        "StopRandomTriggerCallbacks"
    ],
    "literals": [
        "\"Name:\"",
        "\"Enabled:\"",
        "\"Delay (MS):\"",
        "\"Maximum Age (Mins.):\"",
        "\"Rerun Incompletes:\"",
        "\"Rerun Delay (MS):\"",
        "\"Trigger Randomly:\"",
        "\"Maximum Random Delay (Mins.):\"",
        "\"Trigger error:  Value of datum property \"",
        "\" was null.\"",
        "\"Trigger error:  Failed to convert datum values to doubles for change calculation:  \"",
        "\"Starting rerun callbacks.\"",
        "\"Script \\\"\"",
        "\"\\\" has aged out.\"",
        "\"Rerun Script\"",
        "\"Starting random script trigger callbacks.\"",
        "\"Your input is requested.\"",
        "\"Randomly Rerun\"",
        "\"Your input is requested.\"",
        "\"Running \\\"\"",
        "\"\\\".\"",
        "\"\\\"\"",
        "\"\\\" has finished running.\"",
        "\"Run Script\"",
        "\"Script runner \\\"\"",
        "\"\\\" is holding \"",
        "\" copies, the oldest being run first on \"",
        "\".\"",
        "\" \\\"\"",
        "\"\\\" scripts have aged out.\"",
        "\"Stopping rerun callbacks.\"",
        "\"Stopping random trigger callbacks.\""
    ],
    "variables": [
        "_name",
        "Script",
        "_script",
        "_maximumAgeMinutes",
        "ScriptProbe",
        "_probe",
        "_delayMS",
        "_enabled",
        "_triggers",
        "_triggerHandler",
        "_incompleteScripts",
        "_rerun",
        "_rerunCallbackId",
        "_rerunDelayMS",
        "_numScriptsAgedOut",
        "_triggerRandomly",
        "_randomTriggerCallbackId",
        "_maximumRandomTriggerDelayMinutes",
        "Random",
        "_random",
        "_locker",
        "ScriptProbe",
        "Probe",
        "Script",
        "Script",
        "Name",
        "Enabled",
        "Triggers",
        "DelayMS",
        "MaximumAgeMinutes",
        "IncompleteScripts",
        "RerunIncompletes",
        "RerunDelayMS",
        "NumScriptsAgedOut",
        "TriggerRandomly",
        "MaximumRandomTriggerDelayMinutes",
        "reschedule",
        "handler",
        "Datum",
        "previousDatum",
        "Datum",
        "currentDatum",
        "currentDatumValue",
        "Script",
        "scriptToRerun",
        "userNotificationMessage",
        "userNotificationMessage",
        "Should",
        "_randomTriggerCallbackId",
        "userNotificationMessage",
        "userNotificationMessage",
        "Should",
        "we",
        "isRerun",
        "ManualResetEvent",
        "datumWait",
        "restart"
    ],
    "comments": [
        "Copyright 2014 The Rector & Visitors of the University of Virginia",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "ignore duplicate triggers -- the user should delete and re-add them instead.",
        "must be running and must have a current datum",
        "this covers the case when the current datum is null. for some probes, the null datum is meaningful and is emitted in order for their state to be tracked appropriately (e.g., POI probe).",
        "get the value that might trigger the script",
        "if we're triggering based on datum value changes instead of absolute values, calculate the change now",
        "don't need to set ConditionSatisfiedLastTime = false here, since it cannot be the case that it's true and prevDatum == null (we must have had a currDatum last time in order to set ConditionSatisfiedLastTime = true).",
        "if the trigger fires, run a copy of the script so that we can retain a pristine version of the original",
        "we don't need to copy the script, since we're already working with a copy of the original",
        "no user notification message, since there might not be any scripts to rerun",
        "if we're still going, run a copy of the script so that we can retain a pristine version of the original",
        "this method can be called with previous / current datum values (e.g., when the script is first triggered. it",
        "can also be called without previous / current datum values (e.g., when triggering randomly or rerunning). if",
        "we have such values, set them on the script."
    ],
    "docstrings": [],
    "functions": [
        "ScriptRunner",
        "Start",
        "StartRerunCallbacksAsync"
    ],
    "classes": []
}