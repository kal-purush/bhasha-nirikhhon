{
    "identifiers": [
        "de",
        "unijena",
        "cheminf",
        "fragment",
        "fingerprint",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "openscience",
        "cdk",
        "fragment",
        "ExhaustiveFragmenter",
        "org",
        "openscience",
        "cdk",
        "interfaces",
        "IAtomContainer",
        "org",
        "openscience",
        "cdk",
        "io",
        "iterator",
        "IteratingSDFReader",
        "org",
        "openscience",
        "cdk",
        "silent",
        "SilentChemObjectBuilder",
        "org",
        "openscience",
        "cdk",
        "smiles",
        "SmiFlavor",
        "org",
        "openscience",
        "cdk",
        "smiles",
        "SmilesGenerator",
        "java",
        "io",
        "FileInputStream",
        "java",
        "util",
        "Test",
        "tmpSDFReader",
        "SilentChemObjectBuilder",
        "getInstance",
        "tmpFragmenter",
        "tmpFragmenter",
        "setMinimumFragmentSize",
        "tmpSmiGen",
        "SmiFlavor",
        "Unique",
        "tmpFrequenciesMap",
        "tmpSDFReader",
        "hasNext",
        "tmpMolecule",
        "tmpSDFReader",
        "next",
        "tmpFragmenter",
        "generateFragments",
        "tmpMolecule",
        "tmpFragments",
        "tmpFragmenter",
        "getFragmentsAsContainers",
        "tmpFragment",
        "tmpFragments",
        "tmpSmilesCode",
        "tmpSmiGen",
        "create",
        "tmpFragment",
        "tmpFrequenciesMap",
        "containsKey",
        "tmpSmilesCode",
        "tmpFrequenciesMap",
        "put",
        "tmpSmilesCode",
        "tmpFrequenciesMap",
        "get",
        "tmpSmilesCode",
        "tmpFrequenciesMap",
        "put",
        "tmpSmilesCode",
        "tmpFragmentSmilesCode",
        "tmpFrequenciesMap",
        "keySet",
        "tmpFragmentSmilesCode",
        "tmpFrequenciesMap",
        "get",
        "tmpFragmentSmilesCode",
        "tmpCNP0170165SmilesString",
        "tmpCNP0437667SmilesString"
    ],
    "literals": [
        "\"D:\\\\Project_Fragment_Fingerprints\\\\FragmentFingerprints_git\\\\src\\\\test\\\\resources\\\\de\\\\unijena\\\\cheminf\\\\fragment\\\\fingerprint\\\\coconut_napthalene_substructure_search_result.sdf\"",
        "\": \"",
        "\"OC=1C(O)=C(O)C=2C=CC=CC2C1O\"",
        "\"O=C(O)C1=CC=2C=CC=CC2C=C1O\""
    ],
    "variables": [],
    "comments": [
        "make it \"path\\\\to\\\\coconut_napthalene_substructure_search_result.sdf\" in the example code",
        "This fragmentation scheme simply breaks single non-ring bonds.",
        "minimum fragment size 1",
        "TODO: set up fingerprinter",
        "naphthalene-1,2,3,4-tetrol",
        "3-hydroxy-2-naphthoic acid",
        "TODO: Generate and print fingerprints for the two molecules"
    ],
    "docstrings": [
        "* MIT License\n *\n * Copyright (c) 2023 Betuel Sevindik, Felix Baensch, Jonas Schaub, Christoph Steinbeck, and Achim Zielesny\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *",
        "*"
    ],
    "functions": [
        "exampleUsageTest"
    ],
    "classes": [
        "ExampleUsageTest"
    ]
}