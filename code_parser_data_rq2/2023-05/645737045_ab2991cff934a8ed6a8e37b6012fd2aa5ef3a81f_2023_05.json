{
    "identifiers": [
        "os",
        "sys",
        "os",
        "path",
        "join",
        "os",
        "path",
        "dirname",
        "sys",
        "platform",
        "os",
        "path",
        "isdir",
        "extra_dll_dir",
        "os",
        "add_dll_directory",
        "extra_dll_dir",
        "name",
        "globals",
        "g",
        "get",
        "name",
        "g",
        "get",
        "name",
        "numpy",
        "core",
        "_multiarray_umath",
        "__cpu_features__",
        "__cpu_baseline__",
        "__cpu_dispatch__",
        "name",
        "info_dict",
        "globals",
        "items",
        "name",
        "info_dict",
        "name",
        "info_dict",
        "k",
        "v",
        "info_dict",
        "items",
        "v",
        "k",
        "len",
        "v",
        "v",
        "v",
        "k",
        "v",
        "feature",
        "__cpu_dispatch__",
        "__cpu_features__",
        "feature",
        "features_found",
        "append",
        "feature",
        "features_not_found",
        "append",
        "feature",
        "join",
        "__cpu_baseline__",
        "join",
        "features_found",
        "join",
        "features_not_found"
    ],
    "literals": [
        "\"get_info\"",
        "\"show\"",
        "'.libs'",
        "'win32'",
        "'libraries'",
        "'openblas64_'",
        "'openblas64_'",
        "'library_dirs'",
        "'/usr/local/lib'",
        "'language'",
        "'c'",
        "'define_macros'",
        "'HAVE_CBLAS'",
        "'BLAS_SYMBOL_SUFFIX'",
        "'64_'",
        "'HAVE_BLAS_ILP64'",
        "'runtime_library_dirs'",
        "'/usr/local/lib'",
        "'libraries'",
        "'openblas64_'",
        "'openblas64_'",
        "'library_dirs'",
        "'/usr/local/lib'",
        "'language'",
        "'c'",
        "'define_macros'",
        "'HAVE_CBLAS'",
        "'BLAS_SYMBOL_SUFFIX'",
        "'64_'",
        "'HAVE_BLAS_ILP64'",
        "'runtime_library_dirs'",
        "'/usr/local/lib'",
        "'libraries'",
        "'openblas64_'",
        "'openblas64_'",
        "'library_dirs'",
        "'/usr/local/lib'",
        "'language'",
        "'c'",
        "'define_macros'",
        "'HAVE_CBLAS'",
        "'BLAS_SYMBOL_SUFFIX'",
        "'64_'",
        "'HAVE_BLAS_ILP64'",
        "'HAVE_LAPACKE'",
        "'runtime_library_dirs'",
        "'/usr/local/lib'",
        "'libraries'",
        "'openblas64_'",
        "'openblas64_'",
        "'library_dirs'",
        "'/usr/local/lib'",
        "'language'",
        "'c'",
        "'define_macros'",
        "'HAVE_CBLAS'",
        "'BLAS_SYMBOL_SUFFIX'",
        "'64_'",
        "'HAVE_BLAS_ILP64'",
        "'HAVE_LAPACKE'",
        "'runtime_library_dirs'",
        "'/usr/local/lib'",
        "\"_info\"",
        "\"_\"",
        "\":\"",
        "\"  NOT AVAILABLE\"",
        "\"sources\"",
        "\" ...\\n... \"",
        "\"    %s = %s\"",
        "\"Supported SIMD extensions in this NumPy install:\"",
        "\"    baseline = %s\"",
        "','",
        "\"    found = %s\"",
        "','",
        "\"    not found = %s\"",
        "','"
    ],
    "variables": [
        "__all__",
        "extra_dll_dir",
        "openblas64__info",
        "blas_ilp64_opt_info",
        "openblas64__lapack_info",
        "lapack_ilp64_opt_info",
        "g",
        "v",
        "v",
        "features_found",
        "features_not_found"
    ],
    "comments": [
        "This file is generated by numpy's setup.py",
        "It contains system_info results at the time of building this package."
    ],
    "docstrings": [
        "\"\"\"\n    Show libraries in the system on which NumPy was built.\n\n    Print information about various resources (libraries, library\n    directories, include directories, etc.) in the system on which\n    NumPy was built.\n\n    See Also\n    --------\n    get_include : Returns the directory containing NumPy C\n                  header files.\n\n    Notes\n    -----\n    1. Classes specifying the information to be printed are defined\n       in the `numpy.distutils.system_info` module.\n\n       Information may include:\n\n       * ``language``: language used to write the libraries (mostly\n         C or f77)\n       * ``libraries``: names of libraries found in the system\n       * ``library_dirs``: directories containing the libraries\n       * ``include_dirs``: directories containing library header files\n       * ``src_dirs``: directories containing library source files\n       * ``define_macros``: preprocessor macros used by\n         ``distutils.setup``\n       * ``baseline``: minimum CPU features required\n       * ``found``: dispatched features supported in the system\n       * ``not found``: dispatched features that are not supported\n         in the system\n\n    2. NumPy BLAS/LAPACK Installation Notes\n\n       Installing a numpy wheel (``pip install numpy`` or force it\n       via ``pip install numpy --only-binary :numpy: numpy``) includes\n       an OpenBLAS implementation of the BLAS and LAPACK linear algebra\n       APIs. In this case, ``library_dirs`` reports the original build\n       time configuration as compiled with gcc/gfortran; at run time\n       the OpenBLAS library is in\n       ``site-packages/numpy.libs/`` (linux), or\n       ``site-packages/numpy/.dylibs/`` (macOS), or\n       ``site-packages/numpy/.libs/`` (windows).\n\n       Installing numpy from source\n       (``pip install numpy --no-binary numpy``) searches for BLAS and\n       LAPACK dynamic link libraries at build time as influenced by\n       environment variables NPY_BLAS_LIBS, NPY_CBLAS_LIBS, and\n       NPY_LAPACK_LIBS; or NPY_BLAS_ORDER and NPY_LAPACK_ORDER;\n       or the optional file ``~/.numpy-site.cfg``.\n       NumPy remembers those locations and expects to load the same\n       libraries at run-time.\n       In NumPy 1.21+ on macOS, 'accelerate' (Apple's Accelerate BLAS\n       library) is in the default build-time search order after\n       'openblas'.\n\n    Examples\n    --------\n    >>> import numpy as np\n    >>> np.show_config()\n    blas_opt_info:\n        language = c\n        define_macros = [('HAVE_CBLAS', None)]\n        libraries = ['openblas', 'openblas']\n        library_dirs = ['/usr/local/lib']\n    \"\"\""
    ],
    "functions": [
        "get_info",
        "show"
    ],
    "classes": []
}