{
    "identifiers": [],
    "literals": [],
    "variables": [],
    "comments": [
        "import InstructorEmbedding as ie",
        "",
        "",
        "model = ie.INSTRUCTOR('hkunlp/instructor-xl')",
        "def embed_docs_instructor(docs, model=model):",
        "\"\"\"",
        "Embed a list of loaded langchain Document objects into a list of vectors.",
        "",
        ":param docs: A list of loaded langchain Document objects to embed.",
        "",
        ":param model: The Instructor model to use.",
        "",
        ":return: A list of vectors.",
        "\"\"\"",
        "vectors = []",
        "for x in docs:",
        "vector = model.encode(x.page_content)",
        "vectors.append(vector)",
        "return vectors"
    ],
    "docstrings": [
        "\"\"\"\nExperiemental alternative to using OpenAI embeddings. Large computational cost. \n\nUncomment, install requirements, and replace call to embed_docs in extract_summary_docs in utils.py to use.\n\nCan use instructor models other than instructor-xl.\n\n\"\"\""
    ],
    "functions": [],
    "classes": []
}