{
    "identifiers": [
        "abc",
        "ABC",
        "abstractmethod",
        "typing",
        "Any",
        "Dict",
        "Optional",
        "datetime",
        "datetime",
        "services",
        "date",
        "to_unix_timestamp",
        "datastore",
        "datastore",
        "DataStore",
        "models",
        "models",
        "DocumentChunk",
        "DocumentChunkMetadata",
        "DocumentMetadataFilter",
        "QueryResult",
        "QueryWithEmbedding",
        "DocumentChunkWithScore",
        "ABC",
        "abstractmethod",
        "table",
        "json",
        "Any",
        "NotImplementedError",
        "abstractmethod",
        "function_name",
        "Any",
        "Any",
        "NotImplementedError",
        "abstractmethod",
        "table",
        "column",
        "pattern",
        "NotImplementedError",
        "abstractmethod",
        "table",
        "column",
        "ids",
        "NotImplementedError",
        "abstractmethod",
        "table",
        "DocumentMetadataFilter",
        "NotImplementedError",
        "DataStore",
        "create_db_client",
        "abstractmethod",
        "PGClient",
        "NotImplementedError",
        "chunks",
        "Dict",
        "DocumentChunk",
        "document_id",
        "document_chunks",
        "chunks",
        "items",
        "chunk",
        "document_chunks",
        "chunk",
        "id",
        "chunk",
        "text",
        "chunk",
        "embedding",
        "document_id",
        "chunk",
        "metadata",
        "source",
        "chunk",
        "metadata",
        "source_id",
        "chunk",
        "metadata",
        "url",
        "chunk",
        "metadata",
        "author",
        "chunk",
        "metadata",
        "created_at",
        "datetime",
        "fromtimestamp",
        "to_unix_timestamp",
        "chunk",
        "metadata",
        "created_at",
        "client",
        "upsert",
        "json",
        "chunks",
        "keys",
        "queries",
        "QueryWithEmbedding",
        "QueryResult",
        "QueryResult",
        "query",
        "queries",
        "query",
        "embedding",
        "query",
        "top_k",
        "query",
        "top_k",
        "query",
        "query",
        "document_id",
        "query",
        "document_id",
        "query",
        "source",
        "query",
        "source",
        "value",
        "query",
        "source_id",
        "query",
        "source_id",
        "query",
        "author",
        "query",
        "author",
        "query",
        "start_date",
        "datetime",
        "fromtimestamp",
        "to_unix_timestamp",
        "query",
        "start_date",
        "query",
        "end_date",
        "datetime",
        "fromtimestamp",
        "to_unix_timestamp",
        "query",
        "end_date",
        "client",
        "rpc",
        "DocumentChunkWithScore",
        "row",
        "data",
        "DocumentChunkWithScore",
        "id",
        "row",
        "text",
        "row",
        "score",
        "row",
        "metadata",
        "DocumentChunkMetadata",
        "source",
        "row",
        "source_id",
        "row",
        "document_id",
        "row",
        "url",
        "row",
        "created_at",
        "row",
        "author",
        "row",
        "results",
        "append",
        "document_chunk",
        "query_results",
        "append",
        "QueryResult",
        "query",
        "query",
        "query",
        "results",
        "results",
        "e",
        "e",
        "query_results",
        "append",
        "QueryResult",
        "query",
        "query",
        "query",
        "results",
        "query_results",
        "ids",
        "Optional",
        "Optional",
        "DocumentMetadataFilter",
        "delete_all",
        "Optional",
        "delete_all",
        "client",
        "delete_like",
        "ids",
        "client",
        "delete_in",
        "ids",
        "client",
        "delete_by_filters"
    ],
    "literals": [
        "\"id\"",
        "\"content\"",
        "\"embedding\"",
        "\"document_id\"",
        "\"source\"",
        "\"source_id\"",
        "\"url\"",
        "\"author\"",
        "\"created_at\"",
        "\"documents\"",
        "\"in_embedding\"",
        "\"in_match_count\"",
        "\"in_document_id\"",
        "\"in_source\"",
        "\"in_source_id\"",
        "\"in_author\"",
        "\"in_start_date\"",
        "\"in_end_date\"",
        "\"match_page_sections\"",
        "\"id\"",
        "\"content\"",
        "\"similarity\"",
        "\"source\"",
        "\"source_id\"",
        "\"document_id\"",
        "\"url\"",
        "\"created_at\"",
        "\"author\"",
        "\"error:\"",
        "\"documents\"",
        "\"document_id\"",
        "\"%\"",
        "\"documents\"",
        "\"document_id\"",
        "\"documents\""
    ],
    "variables": [
        "client",
        "json",
        "json",
        "query_results",
        "data",
        "results",
        "document_chunk"
    ],
    "comments": [
        "interface for Postgres client to implement pg based Datastore providers",
        "abstract class for Postgres based Datastore providers that implements DataStore interface",
        "get the top 3 documents with the highest cosine similarity using rpc function in the database called \"match_page_sections\"",
        "TODO: add embedding to the response ?",
        "embedding=row[\"embedding\"],"
    ],
    "docstrings": [
        "\"\"\"\n        Takes in a list of documents and inserts them into the table.\n        \"\"\"",
        "\"\"\"\n        Calls a stored procedure in the database with the given parameters.\n        \"\"\"",
        "\"\"\"\n        Deletes rows in the table that match the pattern.\n        \"\"\"",
        "\"\"\"\n        Deletes rows in the table that match the ids.\n        \"\"\"",
        "\"\"\"\n        Deletes rows in the table that match the filter.\n        \"\"\"",
        "\"\"\"\n        Create db client, can be accessing postgres database via different APIs.\n        Can be supabase client or psycopg2 based client.\n        Return a client for postgres DB.\n        \"\"\"",
        "\"\"\"\n        Takes in a dict of document_ids to list of document chunks and inserts them into the database.\n        Return a list of document ids.\n        \"\"\"",
        "\"\"\"\n        Takes in a list of queries with embeddings and filters and returns a list of query results with matching document chunks and scores.\n        \"\"\"",
        "\"\"\"\n        Removes vectors by ids, filter, or everything in the datastore.\n        Multiple parameters can be used at once.\n        Returns whether the operation was successful.\n        \"\"\""
    ],
    "functions": [
        "upsert",
        "rpc",
        "delete_like",
        "delete_in",
        "delete_by_filters",
        "create_db_client",
        "_upsert",
        "_query"
    ],
    "classes": [
        "PGClient",
        "PgVectorDataStore"
    ]
}