{
    "identifiers": [
        "tech",
        "tablesaw",
        "columns",
        "numbers",
        "tech",
        "tablesaw",
        "api",
        "ColumnType",
        "tech",
        "tablesaw",
        "api",
        "DoubleColumn",
        "tech",
        "tablesaw",
        "columns",
        "AbstractColumnType",
        "tech",
        "tablesaw",
        "io",
        "ReadOptions",
        "BYTE_SIZE",
        "DEFAULT_PARSER",
        "ColumnType",
        "DOUBLE",
        "InstanceNumber",
        "BYTE_SIZE",
        "InstanceNumber",
        "InstanceNumber",
        "BYTE_SIZE",
        "InstanceNumber",
        "byteSize",
        "name",
        "printerFriendlyName",
        "byteSize",
        "name",
        "printerFriendlyName",
        "Override",
        "name",
        "DoubleColumn",
        "create",
        "name",
        "Override",
        "options",
        "options",
        "value",
        "isNaN",
        "value",
        "NaN"
    ],
    "literals": [
        "\"DOUBLE\"",
        "\"Double\"",
        "\"DOUBLE\"",
        "\"Double\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "The {@link ColumnType} for {@link DoubleColumn}",
        "Returns the default parser for DoubleColumn",
        "Returns the singleton instance of DoubleColumnType",
        "{@inheritDoc}",
        "{@inheritDoc}",
        "Returns true if the given value is the missing value indicator for this column type",
        "* Returns the missing value indicator for this column type NOTE: Clients should use {@link\n   * DoubleColumnType#valueIsMissing(double)} to test for missing value indicators"
    ],
    "functions": [
        "DoubleColumnType",
        "instance",
        "DoubleColumnType",
        "DoubleColumn",
        "create",
        "DoubleParser",
        "customParser",
        "valueIsMissing",
        "missingValueIndicator"
    ],
    "classes": [
        "DoubleColumnType"
    ]
}