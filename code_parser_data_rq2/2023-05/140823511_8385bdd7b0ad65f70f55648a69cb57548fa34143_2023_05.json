{
    "identifiers": [
        "os",
        "kubernetes",
        "azure",
        "identity",
        "ClientSecretCredential",
        "azure",
        "mgmt",
        "containerservice",
        "ContainerServiceClient",
        "azure",
        "mgmt",
        "resource",
        "ResourceManagementClient",
        "ocw",
        "lib",
        "provider",
        "Provider",
        "ocw",
        "lib",
        "k8s",
        "clean_jobs",
        "webui",
        "PCWConfig",
        "PCWConfig",
        "Provider",
        "cls",
        "vault_namespace",
        "vault_namespace",
        "AKS",
        "__instances",
        "AKS",
        "__instances",
        "__new__",
        "cls",
        "AKS",
        "__instances",
        "vault_namespace",
        "get_data",
        "__sp_credentials",
        "ClientSecretCredential",
        "client_id",
        "get_data",
        "client_secret",
        "get_data",
        "tenant_id",
        "get_data",
        "__sp_credentials",
        "__container_mgmt_client",
        "ContainerServiceClient",
        "sp_credentials",
        "subscription",
        "__container_mgmt_client",
        "__resource_mgmt_client",
        "ResourceManagementClient",
        "sp_credentials",
        "subscription",
        "__resoure_mgmt_client",
        "resource_group",
        "cluster_name",
        "cluster_name",
        "__kubectl_client",
        "subscription",
        "resource_group",
        "cluster_name",
        "os",
        "path",
        "expanduser",
        "kubeconfig",
        "cmd_exec",
        "get_data",
        "get_data",
        "get_data",
        "res",
        "returncode",
        "RuntimeError",
        "res",
        "stderr",
        "cmd_exec",
        "resource_group",
        "cluster_name",
        "kubeconfig",
        "res",
        "returncode",
        "RuntimeError",
        "cluster_name",
        "resource_group",
        "res",
        "stderr",
        "kubernetes",
        "config",
        "load_kube_config",
        "config_file",
        "kubeconfig",
        "__kubectl_client",
        "kubernetes",
        "client",
        "BatchV1Api",
        "__kubectl_client",
        "cluster_name",
        "PCWConfig",
        "get_k8s_clusters_for_provider",
        "_namespace",
        "cluster",
        "clusters",
        "kubectl_client",
        "cluster",
        "cluster",
        "clean_jobs",
        "client",
        "cluster"
    ],
    "literals": [
        "'eu-central-1'",
        "'subscription_id'",
        "'client_id'",
        "'client_secret'",
        "'tenant_id'",
        "f\"~/.kube/aks_config_{self.subscription()}_{resource_group}_{cluster_name}\"",
        "f\"az login --service-principal -u {self.get_data('client_id')} \"",
        "'client_id'",
        "f\"-p {self.get_data('client_secret')} --tenant {self.get_data('tenant_id')}\"",
        "'client_secret'",
        "'tenant_id'",
        "f\"Cannot login to azure : {res.stderr}\"",
        "f\"az aks get-credentials --resource-group {resource_group} \"",
        "f\"--name {cluster_name} --file {kubeconfig}\"",
        "f\"Cannot get the kubeconfig for the cluster {cluster_name} \"",
        "f\"for resource-group {resource_group} : {res.stderr}\"",
        "\"azure\"",
        "\"resource_group\"",
        "\"cluster_name\"",
        "\"cluster_name\""
    ],
    "variables": [
        "__instances",
        "default_region",
        "vault_namespace",
        "__container_mgmt_client",
        "__resource_mgmt_client",
        "__sp_credentials",
        "__kubectl_client",
        "__sp_credentials",
        "__container_mgmt_client",
        "__resoure_mgmt_client",
        "kubeconfig",
        "kubeconfig",
        "res",
        "res",
        "cluster_name",
        "clusters",
        "client"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "__new__",
        "subscription",
        "sp_credentials",
        "container_mgmt_client",
        "resource_mgmt_client",
        "kubectl_client",
        "cleanup_k8s_jobs"
    ],
    "classes": [
        "AKS"
    ]
}