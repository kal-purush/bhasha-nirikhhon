{
    "identifiers": [
        "org",
        "firstinspires",
        "ftc",
        "robotcontroller",
        "external",
        "samples",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "Disabled",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "OpMode",
        "com",
        "qualcomm",
        "robotcore",
        "eventloop",
        "opmode",
        "TeleOp",
        "com",
        "qualcomm",
        "robotcore",
        "hardware",
        "DcMotor",
        "com",
        "qualcomm",
        "robotcore",
        "util",
        "ElapsedTime",
        "com",
        "qualcomm",
        "robotcore",
        "util",
        "Range",
        "TeleOp",
        "name",
        "group",
        "Disabled",
        "runtime",
        "leftDrive",
        "rightDrive",
        "Override",
        "telemetry",
        "addData",
        "leftDrive",
        "hardwareMap",
        "get",
        "rightDrive",
        "hardwareMap",
        "get",
        "leftDrive",
        "setDirection",
        "DcMotor",
        "Direction",
        "FORWARD",
        "rightDrive",
        "setDirection",
        "DcMotor",
        "Direction",
        "REVERSE",
        "telemetry",
        "addData",
        "Override",
        "Override",
        "runtime",
        "reset",
        "Override",
        "leftPower",
        "rightPower",
        "drive",
        "gamepad1",
        "left_stick_y",
        "turn",
        "gamepad1",
        "right_stick_x",
        "leftPower",
        "Range",
        "clip",
        "drive",
        "turn",
        "rightPower",
        "Range",
        "clip",
        "drive",
        "turn",
        "leftDrive",
        "setPower",
        "leftPower",
        "rightDrive",
        "setPower",
        "rightPower",
        "telemetry",
        "addData",
        "runtime",
        "toString",
        "telemetry",
        "addData",
        "leftPower",
        "rightPower",
        "Override"
    ],
    "literals": [
        "\"Basic: Iterative OpMode\"",
        "\"Iterative Opmode\"",
        "\"Status\"",
        "\"Initialized\"",
        "\"left_drive\"",
        "\"right_drive\"",
        "\"Status\"",
        "\"Initialized\"",
        "\"Status\"",
        "\"Run Time: \"",
        "\"Motors\"",
        "\"left (%.2f), right (%.2f)\""
    ],
    "variables": [
        "leftPower",
        "rightPower"
    ],
    "comments": [
        "Declare OpMode members.",
        "Initialize the hardware variables. Note that the strings used here as parameters",
        "to 'get' must correspond to the names assigned during the robot configuration",
        "step (using the FTC Robot Controller app on the phone).",
        "Most robots need the motor on one side to be reversed to drive forward",
        "Reverse the motor that runs backwards when connected directly to the battery",
        "Tell the driver that initialization is complete.",
        "Setup a variable for each drive wheel to save power level for telemetry",
        "Choose to drive using either Tank Mode, or POV Mode",
        "Comment out the method that's not used.  The default below is POV.",
        "POV Mode uses left stick to go forward, and right stick to turn.",
        "- This uses basic math to combine motions and is easier to drive straight.",
        "Tank Mode uses one stick to control each wheel.",
        "- This requires no math, but it is hard to drive forward slowly and keep straight.",
        "leftPower  = -gamepad1.left_stick_y ;",
        "rightPower = -gamepad1.right_stick_y ;",
        "Send calculated power to wheels",
        "Show the elapsed game time and wheel power."
    ],
    "docstrings": [
        "Copyright (c) 2017 FIRST. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification,\n * are permitted (subject to the limitations in the disclaimer below) provided that\n * the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice, this list\n * of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright notice, this\n * list of conditions and the following disclaimer in the documentation and/or\n * other materials provided with the distribution.\n *\n * Neither the name of FIRST nor the names of its contributors may be used to endorse or\n * promote products derived from this software without specific prior written permission.\n *\n * NO EXPRESS OR IMPLIED LICENSES TO ANY PARTY'S PATENT RIGHTS ARE GRANTED BY THIS\n * LICENSE. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.",
        "* This file contains an example of an iterative (Non-Linear) \"OpMode\".\n * An OpMode is a 'program' that runs in either the autonomous or the teleop period of an FTC match.\n * The names of OpModes appear on the menu of the FTC Driver Station.\n * When an selection is made from the menu, the corresponding OpMode\n * class is instantiated on the Robot Controller and executed.\n *\n * This particular OpMode just executes a basic Tank Drive Teleop for a two wheeled robot\n * It includes all the skeletal structure that all iterative OpModes contain.\n *\n * Use Android Studios to Copy this Class, and Paste it into your team's code folder with a new name.\n * Remove or comment out the @Disabled line to add this opmode to the Driver Station OpMode list",
        "* Code to run ONCE when the driver hits INIT",
        "* Code to run REPEATEDLY after the driver hits INIT, but before they hit PLAY",
        "* Code to run ONCE when the driver hits PLAY",
        "* Code to run REPEATEDLY after the driver hits PLAY but before they hit STOP",
        "* Code to run ONCE after the driver hits STOP"
    ],
    "functions": [
        "init",
        "init_loop",
        "start",
        "loop",
        "stop"
    ],
    "classes": [
        "BasicOpMode_Iterative"
    ]
}