{
    "identifiers": [
        "movingLeft",
        "movingLeft",
        "width",
        "width",
        "width",
        "width",
        "height",
        "height",
        "Level",
        "LevelSequence",
        "SpriteMap",
        "ObjectType",
        "SpriteMap",
        "ObjectType",
        "REVERSED",
        "SpriteMap",
        "ObjectType",
        "ObjectsBehaviour",
        "ObjectType",
        "state",
        "timeframe",
        "state",
        "Direction",
        "Direction",
        "timeframe",
        "state",
        "HEIGHT",
        "Direction",
        "Direction",
        "timeframe",
        "state",
        "Direction",
        "Direction",
        "timeframe",
        "state",
        "Direction",
        "Direction",
        "timeframe",
        "HEIGHT",
        "HEIGHT",
        "WIDTH",
        "WIDTH",
        "ObjectsBehaviour",
        "ObjectType",
        "_state",
        "timeframe",
        "Direction",
        "timeframe",
        "Direction",
        "timeframe",
        "WIDTH",
        "ObjectState",
        "LevelsRules",
        "Level",
        "state",
        "state",
        "ObjectType",
        "deletedFireballs",
        "fireball",
        "fireball",
        "fireball",
        "fenceHit",
        "Verdict",
        "Verdict",
        "LevelsInitialize",
        "Level",
        "state",
        "state",
        "Direction",
        "SpriteMap",
        "ObjectType",
        "ObjectState",
        "ObjectType",
        "WIDTH",
        "HEIGHT",
        "state",
        "container",
        "container",
        "container",
        "container",
        "Game",
        "INITIAL_LEVEL",
        "deactivated",
        "deactivated",
        "deactivated",
        "deactivated",
        "Verdict",
        "restart",
        "restart",
        "restart",
        "restart",
        "restart",
        "LevelsInitialize",
        "Verdict",
        "verdict",
        "verdict",
        "verdict",
        "evt",
        "evt",
        "evt",
        "Verdict",
        "Verdict",
        "needToRestartTheGame",
        "Verdict",
        "statistics",
        "keys",
        "keys",
        "it",
        "statistics",
        "it",
        "message",
        "Verdict",
        "message",
        "Verdict",
        "message",
        "Verdict",
        "message",
        "message",
        "time",
        "time",
        "i",
        "NAMES",
        "i",
        "generationIntervalSec",
        "time",
        "diffTime",
        "generationIntervalSec",
        "userTime",
        "minTimeInSec",
        "userTime",
        "minTimeInSec",
        "statistic",
        "NAMES",
        "i",
        "userTime",
        "statistic",
        "array",
        "array",
        "i",
        "i",
        "i",
        "array",
        "i",
        "array",
        "i",
        "array",
        "j",
        "array",
        "j",
        "temp",
        "array",
        "message",
        "x",
        "y",
        "width",
        "heigth",
        "ctx",
        "ctx",
        "x",
        "y",
        "ctx",
        "x",
        "offset",
        "y",
        "heigth",
        "ctx",
        "x",
        "y",
        "heigth",
        "ctx",
        "x",
        "width",
        "y",
        "heigth",
        "offset",
        "ctx",
        "x",
        "width",
        "y",
        "heigth",
        "ctx",
        "x",
        "width",
        "offset",
        "y",
        "heigth",
        "ctx",
        "x",
        "width",
        "y",
        "ctx",
        "x",
        "width",
        "y",
        "offset",
        "ctx",
        "x",
        "y",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "drawCloud",
        "ctx",
        "drawCloud",
        "ctx",
        "ctx",
        "message",
        "line",
        "i",
        "ctx",
        "line",
        "i",
        "callback",
        "callback",
        "SpriteMap",
        "keys",
        "sprite",
        "Image",
        "sprite",
        "sprite",
        "image",
        "sprite",
        "image",
        "imagesToGo",
        "callback",
        "image",
        "sprite",
        "i",
        "keys",
        "i",
        "loadSprite",
        "SpriteMap",
        "keys",
        "i",
        "delta",
        "ObjectType",
        "me",
        "me",
        "Direction",
        "SpriteMap",
        "ObjectType",
        "ObjectType",
        "me",
        "Direction",
        "me",
        "me",
        "me",
        "me",
        "me",
        "ObjectsBehaviour",
        "delta",
        "ObjectState",
        "remainingObjects",
        "Verdict",
        "state",
        "state",
        "ObjectType",
        "me",
        "ObjectState",
        "Verdict",
        "Verdict",
        "state",
        "state",
        "Verdict",
        "Verdict",
        "state",
        "state",
        "Verdict",
        "Verdict",
        "LevelsRules",
        "Verdict",
        "currentCheck",
        "Verdict",
        "allChecks",
        "currentRule",
        "allChecks",
        "currentCheck",
        "currentRule",
        "currentCheck",
        "status",
        "status",
        "status",
        "WIDTH",
        "HEIGHT",
        "Direction",
        "SpriteMap",
        "reversed",
        "REVERSED",
        "SpriteMap",
        "sprite",
        "delta",
        "Verdict",
        "requestAnimationFrame",
        "Verdict",
        "Verdict",
        "Verdict",
        "Verdict",
        "evt",
        "evt",
        "evt",
        "evt",
        "evt",
        "evt",
        "Game",
        "Verdict",
        "Game",
        "wizardRightImage",
        "wizardLeftImage",
        "SpriteMap",
        "ObjectType",
        "wizardRightImage",
        "SpriteMap",
        "ObjectType",
        "REVERSED",
        "wizardLeftImage",
        "game",
        "game",
        "Verdict",
        "game"
    ],
    "literals": [
        "'use strict'",
        "'Кекс'",
        "'Катя'",
        "'Игорь'",
        "'-reversed'",
        "'img/wizard.gif'",
        "'img/wizard-reversed.gif'",
        "'img/fireball.gif'",
        "'canvas'",
        "'2d'",
        "'undefined'",
        "'keydown'",
        "'keydown'",
        "'Вы победили Газебо!\\nУра!'",
        "'Вы проиграли!'",
        "'Игра на паузе!\\nНажмите Пробел, чтобы продолжить'",
        "'Добро пожаловать!\\nНажмите Пробел для начала игры'",
        "'Вы'",
        "'rgba(0, 0, 0, 0.7)'",
        "'rgba(256, 256, 256, 1.0)'",
        "'#000'",
        "'16px PT Mono'",
        "'\\n'",
        "'undefined'",
        "''",
        "'keydown'",
        "'keyup'",
        "'keydown'",
        "'keyup'",
        "'.demo'",
        "'img/wizard.gif'",
        "'img/wizard-reversed.gif'"
    ],
    "variables": [
        "HEIGHT",
        "WIDTH",
        "Level",
        "NAMES",
        "LevelSequence",
        "INITIAL_LEVEL",
        "ObjectType",
        "ObjectState",
        "Direction",
        "SpriteMap",
        "REVERSED",
        "ObjectsBehaviour",
        "Verdict",
        "LevelsRules",
        "deletedFireballs",
        "fenceHit",
        "LevelsInitialize",
        "Game",
        "needToRestartTheGame",
        "message",
        "statistics",
        "keys",
        "generationIntervalSec",
        "minTimeInSec",
        "statistic",
        "i",
        "diffTime",
        "userTime",
        "i",
        "j",
        "temp",
        "ctx",
        "drawCloud",
        "offset",
        "keys",
        "imagesToGo",
        "loadSprite",
        "image",
        "i",
        "me",
        "remainingObjects",
        "me",
        "allChecks",
        "currentCheck",
        "currentRule",
        "reversed",
        "sprite",
        "delta",
        "game"
    ],
    "comments": [
        "TODO: Find a clever way",
        "Пока зажата стрелка вверх, маг сначала поднимается, а потом левитирует",
        "в воздухе на определенной высоте.",
        "NB! Сложность заключается в том, что поведение описано в координатах",
        "канваса, а не координатах, относительно нижней границы игры.",
        "Если стрелка вверх не зажата, а маг находится в воздухе, он плавно",
        "опускается на землю.",
        "Если зажата стрелка влево, маг перемещается влево.",
        "Если зажата стрелка вправо, маг перемещается вправо.",
        "Ограничения по перемещению по полю. Маг не может выйти за пределы поля.",
        "Did we hit the fence?",
        "Установка персонажа в начальное положение. Он стоит в крайнем левом",
        "углу экрана, глядя вправо. Скорость перемещения персонажа на этом",
        "уровне равна 2px за кадр.",
        "@param {boolean} deactivated",
        "Статус игры. Если CONTINUE, то игра продолжается.",
        "Объекты, удаленные на последнем кадре.",
        "Время с момента отрисовки предыдущего кадра.",
        "Состояние нажатых клавиш.",
        "Время начала прохождения уровня.",
        "Все объекты на карте.",
        "Время начала прохождения игры.",
        "сбросить кэш при перезагрузке уровня",
        "При перезапуске уровня, происходит полная перезапись состояния",
        "игры из изначального состояния.",
        "При продолжении уровня состояние сохраняется, кроме записи о том,",
        "что состояние уровня изменилось с паузы на продолжение игры.",
        "Запись времени начала игры и времени начала уровня.",
        "Предварительная отрисовка игрового экрана.",
        "Установка обработчиков событий.",
        "Запуск игрового цикла.",
        "Персонаж.",
        "Добавляет на карту файрбол по нажатию на Shift.",
        "Убирает в garbage не используемые на карте объекты.",
        "Нет нужны запускать проверку, нужно ли останавливать уровень, если",
        "заранее известно, что да.",
        "Проверки, не зависящие от уровня, но влияющие на его состояние.",
        "Проверка всех правил влияющих на уровень. Запускаем цикл проверок",
        "по всем универсальным проверкам и проверкам конкретного уровня.",
        "Цикл продолжается до тех пор, пока какая-либо из проверок не вернет",
        "любое другое состояние кроме CONTINUE или пока не пройдут все",
        "проверки. После этого состояние сохраняется.",
        "Удаление всех отрисованных на странице элементов.",
        "Выставление всех элементов, оставшихся в this.state.objects согласно",
        "их координатам и направлению.",
        "@private",
        "@private"
    ],
    "docstrings": [
        "* @const\n   * @type {number}",
        "* @const\n   * @type {number}",
        "* ID уровней.\n   * @enum {number}",
        "* Порядок прохождения уровней.\n   * @type {Array.<Level>}",
        "* Начальный уровень.\n   * @type {Level}",
        "* Допустимые виды объектов на карте.\n   * @enum {number}",
        "* Допустимые состояния объектов.\n   * @enum {number}",
        "* Коды направлений.\n   * @enum {number}",
        "* Карта спрайтов игры.\n   * @type {Object.<ObjectType, Object>}",
        "* Правила перерисовки объектов в зависимости от состояния игры.\n   * @type {Object.<ObjectType, function(Object, Object, number): Object>}",
        "* Обновление движения мага. Движение мага зависит от нажатых в данный момент\n   * стрелок. Маг может двигаться одновременно по горизонтали и по вертикали.\n   * На движение мага влияет его пересечение с препятствиями.\n   * @param {Object} object\n   * @param {Object} state\n   * @param {number} timeframe",
        "* Обновление движения файрбола. Файрбол выпускается в определенном направлении\n   * и после этого неуправляемо движется по прямой в заданном направлении. Если\n   * он пролетает весь экран насквозь, он исчезает.\n   * @param {Object} object\n   * @param {Object} _state\n   * @param {number} timeframe",
        "* ID возможных ответов функций, проверяющих успех прохождения уровня.\n   * CONTINUE говорит о том, что раунд не закончен и игру нужно продолжать,\n   * WIN о том, что раунд выигран, FAIL — о поражении. PAUSE о том, что игру\n   * нужно прервать.\n   * @enum {number}",
        "* Правила завершения уровня. Ключами служат ID уровней, значениями функции\n   * принимающие на вход состояние уровня и возвращающие true, если раунд\n   * можно завершать или false если нет.\n   * @type {Object.<Level, function(Object):boolean>}",
        "* Уровень считается пройденным, если был выпущен файлболл и он улетел\n   * за экран.\n   * @param {Object} state\n   * @return {Verdict}",
        "* Начальные условия для уровней.\n   * @enum {Object.<Level, function>}",
        "* Первый уровень.\n   * @param {Object} state\n   * @return {Object}",
        "* Конструктор объекта Game. Создает canvas, добавляет обработчики событий\n   * и показывает приветственный экран.\n   * @param {Element} container\n   * @constructor",
        "* Текущий уровень игры.\n     * @type {Level}",
        "* Состояние игры. Описывает местоположение всех объектов на игровой карте\n     * и время проведенное на уровне и в игре.\n     * @return {Object}",
        "* Начальные проверки и запуск текущего уровня.\n     * @param {boolean=} restart",
        "* Временная остановка игры.\n     * @param {Verdict=} verdict",
        "* Обработчик событий клавиатуры во время паузы.\n     * @param {KeyboardsEvent} evt\n     * @private\n     * @private",
        "* Отрисовка экрана паузы.",
        "* Предзагрузка необходимых изображений для уровня.\n     * @param {function} callback\n     * @private",
        "* Обновление статуса объектов на экране. Добавляет объекты, которые должны\n     * появиться, выполняет проверку поведения всех объектов и удаляет те, которые\n     * должны исчезнуть.\n     * @param {number} delta Время, прошеднее с отрисовки прошлого кадра.",
        "* Проверка статуса текущего уровня.",
        "* Если персонаж мертв, игра прекращается.\n           * @param {Object} state\n           * @return {Verdict}",
        "* Если нажата клавиша Esc игра ставится на паузу.\n           * @param {Object} state\n           * @return {Verdict}",
        "* Игра прекращается если игрок продолжает играть в нее два часа подряд.\n           * @param {Object} state\n           * @return {Verdict}",
        "* Принудительная установка состояния игры. Используется для изменения\n     * состояния игры от внешних условий, например, когда необходимо остановить\n     * игру, если она находится вне области видимости и установить вводный\n     * экран.\n     * @param {Verdict} status",
        "* Отрисовка всех объектов на экране.",
        "* Основной игровой цикл. Сначала проверяет состояние всех объектов игры\n     * и обновляет их согласно правилам их поведения, а затем запускает\n     * проверку текущего раунда. Рекурсивно продолжается до тех пор, пока\n     * проверка не вернет состояние FAIL, WIN или PAUSE.",
        "* @param {KeyboardEvent} evt [description]\n     * @private",
        "* @param {KeyboardEvent} evt [description]\n     * @private"
    ],
    "functions": [],
    "classes": []
}