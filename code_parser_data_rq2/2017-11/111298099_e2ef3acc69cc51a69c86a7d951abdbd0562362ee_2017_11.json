{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Net",
        "Threading",
        "Threading",
        "Tasks",
        "ServiceStack",
        "ServiceStack",
        "Messaging",
        "ServiceStack",
        "RabbitMq",
        "Livedoon",
        "Api",
        "Route",
        "IReturn",
        "HashResponse",
        "Service",
        "IServerEvents",
        "serverEvents",
        "serverEvents",
        "ArgumentNullException",
        "nameof",
        "serverEvents",
        "_serverEvents",
        "serverEvents",
        "HashGenerator",
        "request",
        "request",
        "Subscriber",
        "HttpError",
        "HttpStatusCode",
        "BadRequest",
        "request",
        "Url",
        "Uri",
        "TryCreate",
        "url",
        "UriKind",
        "Absolute",
        "uriResult",
        "uriResult",
        "Scheme",
        "Uri",
        "UriSchemeHttp",
        "uriResult",
        "Scheme",
        "Uri",
        "UriSchemeHttps",
        "urlValidationResult",
        "HttpError",
        "HttpStatusCode",
        "BadRequest",
        "url",
        "RabbitMqServer",
        "mqServer",
        "CreateMessageQueueClient",
        "mqClient",
        "Publish",
        "request",
        "mqClient",
        "Get",
        "HashResponse",
        "QueueNames",
        "HashResponse",
        "In",
        "mqClient",
        "Ack",
        "response",
        "_serverEvents",
        "NotifyChannel",
        "response",
        "Body",
        "Start"
    ],
    "literals": [
        "\"/api/md5\"",
        "\"localhost\"",
        "\"hash\""
    ],
    "variables": [
        "Url",
        "Subscriber",
        "Succeed",
        "Result",
        "Subscriber",
        "Url",
        "IServerEvents",
        "_serverEvents",
        "url",
        "urlValidationResult",
        "mqServer",
        "mqClient",
        "response"
    ],
    "comments": [
        "[Route(\"/api/md5?url={Url}\")]",
        "Check if client id exists.",
        "Check if the url is valid.",
        "Since we don't really \"use\" the uri object, just create one inline.",
        "dispatch a new thread for message queue processing",
        "if there are any notification registered,",
        "push notification"
    ],
    "docstrings": [],
    "functions": [
        "HashServices",
        "Any"
    ],
    "classes": [
        "HashGenerator",
        "HashResponse",
        "HashServices"
    ]
}