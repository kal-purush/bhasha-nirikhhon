{
    "identifiers": [
        "Collections",
        "Generic",
        "Diagnostics",
        "Globalization",
        "IO",
        "Net",
        "Sockets",
        "Runtime",
        "InteropServices",
        "Text",
        "RegularExpressions",
        "Threading",
        "Krofiler",
        "UIThreadMonitor",
        "ManualResetEvent",
        "Stopwatch",
        "StartNew",
        "sw",
        "Restart",
        "socket",
        "Receive",
        "buffer",
        "SocketFlags",
        "readBytes",
        "waitUIThread",
        "Reset",
        "waitUIThread",
        "WaitOne",
        "socket",
        "Send",
        "buffer",
        "TimeSpan",
        "Zero",
        "seconds",
        "Path",
        "GetTempFileName",
        "ProcessStartInfo",
        "startInfo",
        "UseShellExecute",
        "startInfo",
        "Arguments",
        "Process",
        "GetCurrentProcess",
        "Id",
        "seconds",
        "outputFilePath",
        "Process",
        "Start",
        "startInfo",
        "sampleProcess",
        "EnableRaisingEvents",
        "sampleProcess",
        "Exited",
        "ConvertJITAddressesToMethodNames",
        "outputFilePath",
        "DllImport",
        "offset",
        "process",
        "HasExited",
        "process",
        "StandardError",
        "ReadLine",
        "process",
        "HasExited",
        "process",
        "StandardOutput",
        "ReadLine",
        "ConvertJITAddressesToMethodNames",
        "fileName",
        "IsListening",
        "IsListening",
        "listener",
        "Stop",
        "listener",
        "process",
        "Kill",
        "process",
        "fileName",
        "profilingType",
        "Regex",
        "RegexOptions",
        "Compiled",
        "File",
        "Exists",
        "fileName",
        "FileInfo",
        "fileName",
        "Length",
        "Path",
        "Combine",
        "profilingType",
        "Now",
        "StreamReader",
        "fileName",
        "StreamWriter",
        "outputFilename",
        "line",
        "sr",
        "ReadLine",
        "rx",
        "IsMatch",
        "line",
        "rx",
        "Match",
        "line",
        "Parse",
        "match",
        "Groups",
        "Value",
        "NumberStyles",
        "HexNumber",
        "methodsCache",
        "TryGetValue",
        "offset",
        "pmipMethodName",
        "pmipMethodName",
        "mono_pmip",
        "offset",
        "TrimStart",
        "methodsCache",
        "Add",
        "offset",
        "pmipMethodName",
        "pmipMethodName",
        "line",
        "line",
        "Remove",
        "match",
        "Index",
        "match",
        "Length",
        "line",
        "line",
        "Insert",
        "match",
        "Index",
        "pmipMethodName",
        "sw",
        "WriteLine",
        "line"
    ],
    "literals": [
        "\"sample\"",
        "\"Profile\"",
        "\"__Internal\"",
        "\"UIThreadHang\"",
        "\"/Users/davidkarlas/Desktop/\""
    ],
    "variables": [
        "UIThreadMonitor",
        "Instance",
        "Socket",
        "socket",
        "tcpLoopThread",
        "dumpsReaderThread",
        "pumpErrorThread",
        "TcpListener",
        "listener",
        "Process",
        "process",
        "buffer",
        "ManualResetEvent",
        "waitUIThread",
        "sw",
        "readBytes",
        "TimeSpan",
        "forceProfileTime",
        "outputFilePath",
        "startInfo",
        "sampleProcess",
        "IsListening",
        "methodsCache",
        "fileName",
        "rx",
        "outputFilename",
        "sr",
        "sw",
        "line",
        "match",
        "offset",
        "pmipMethodName"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "UIThreadMonitor",
        "TcpLoop",
        "Profile",
        "Start",
        "mono_pmip",
        "PumpErrorStream",
        "DumpsReader",
        "Stop",
        "ConvertJITAddressesToMethodNames"
    ],
    "classes": [
        "UIThreadMonitor"
    ]
}