{
    "identifiers": [
        "AlgebraicType",
        "InitNewUnavailable",
        "Maybe",
        "ObjC",
        "ObjectSpec",
        "InitNewUnavailable",
        "InitNewUnavailable",
        "describe",
        "describe",
        "it",
        "ObjectSpec",
        "Maybe",
        "ObjC",
        "ObjectSpecPlugin",
        "objectType",
        "ObjC",
        "expect",
        "instanceMethods",
        "expectedInstanceMethods",
        "ObjC",
        "ObjectSpecPlugin",
        "objectType",
        "ObjC",
        "expect",
        "classMethods",
        "expectedClassMethods",
        "it",
        "ObjectSpec",
        "ObjC",
        "Maybe",
        "Maybe",
        "Maybe",
        "Maybe",
        "Maybe",
        "ObjC",
        "ObjectSpecPlugin",
        "objectType",
        "ObjC",
        "Maybe",
        "Maybe",
        "ObjC",
        "Maybe",
        "ObjC",
        "expect",
        "instanceMethods",
        "expectedInstanceMethods",
        "ObjC",
        "ObjectSpecPlugin",
        "objectType",
        "ObjC",
        "Maybe",
        "Maybe",
        "ObjC",
        "Maybe",
        "ObjC",
        "expect",
        "classMethods",
        "expectedClassMethods",
        "describe",
        "describe",
        "it",
        "AlgebraicType",
        "Maybe",
        "AlgebraicType",
        "ObjC",
        "AlgebraicTypePlugin",
        "algebraicType",
        "ObjC",
        "Maybe",
        "Maybe",
        "ObjC",
        "Maybe",
        "ObjC",
        "expect",
        "instanceMethods",
        "expectedInstanceMethods",
        "ObjC",
        "AlgebraicTypePlugin",
        "algebraicType",
        "ObjC",
        "Maybe",
        "Maybe",
        "ObjC",
        "Maybe",
        "ObjC",
        "expect",
        "classMethods",
        "expectedClassMethods"
    ],
    "literals": [
        "'../../algebraic-type'",
        "'../../plugins/init-new-unavailable'",
        "'../../maybe'",
        "'../../objc'",
        "'../../object-spec'",
        "'ObjectSpecPlugins.InitNewUnavailable'",
        "'#instanceMethods'",
        "'generates no instance or class methods, if no attributes are given'",
        "'RMInitNewUnavailable'",
        "string",
        "'Foo'",
        "'generates unavailable init/new instance methods, if at least one attribute is given'",
        "'value'",
        "string",
        "string",
        "'NSString'",
        "'NSString *'",
        "string",
        "'NSObject'",
        "string",
        "'RMInitNewUnavailable'",
        "string",
        "'Foo'",
        "string",
        "\"NSObject\"",
        "\"NS_UNAVAILABLE\"",
        "'init'",
        "'instancetype'",
        "'instancetype'",
        "string",
        "\"NSObject\"",
        "\"NS_UNAVAILABLE\"",
        "'new'",
        "'instancetype'",
        "'instancetype'",
        "'AlgebraicTypePlugins.InitNewUnavailable'",
        "'#instanceMethods'",
        "'always generates unavailable init/new methods for ADTs'",
        "'Foo'",
        "'RMInitNewUnavailable'",
        "string",
        "'subtypeOne'",
        "string",
        "\"NSObject\"",
        "\"NS_UNAVAILABLE\"",
        "'init'",
        "'instancetype'",
        "'instancetype'",
        "string",
        "\"NSObject\"",
        "\"NS_UNAVAILABLE\"",
        "'new'",
        "'instancetype'",
        "'instancetype'"
    ],
    "variables": [
        "ObjectSpecPlugin",
        "AlgebraicTypePlugin",
        "objectType",
        "instanceMethods",
        "expectedInstanceMethods",
        "classMethods",
        "expectedClassMethods",
        "objectType",
        "instanceMethods",
        "expectedInstanceMethods",
        "classMethods",
        "expectedClassMethods",
        "algebraicType",
        "instanceMethods",
        "expectedInstanceMethods",
        "classMethods",
        "expectedClassMethods"
    ],
    "comments": [
        "<reference path='../../type-defs/jasmine.d.ts'/>",
        "<reference path='../../type-defs/jasmine-test-additions.d.ts'/>"
    ],
    "docstrings": [
        "* Copyright (c) 2016-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory."
    ],
    "functions": [],
    "classes": []
}