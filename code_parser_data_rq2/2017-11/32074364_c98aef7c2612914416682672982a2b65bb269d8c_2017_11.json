{
    "identifiers": [
        "logging",
        "socket",
        "support",
        "DatagramProxy",
        "TCPDatagramProtocol",
        "DatagramProxy",
        "ext_udp_port",
        "int_udp_address",
        "bufsize",
        "DEFAULT_BUFFER_SIZE",
        "bufsize",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "ext_sock",
        "bind",
        "ext_udp_port",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "int_sock",
        "connect",
        "int_udp_address",
        "ext_sock",
        "recvfrom",
        "bufsize",
        "ext_address",
        "ext_address",
        "logging",
        "info",
        "format",
        "ext_address",
        "ext_address",
        "int_sock",
        "send",
        "datagram",
        "int_sock",
        "recv",
        "bufsize",
        "ext_address",
        "logging",
        "warning",
        "ext_sock",
        "sendto",
        "datagram",
        "ext_address",
        "ext_sock",
        "ext_to_int",
        "int_sock",
        "int_to_ext",
        "ext_sock",
        "close",
        "int_sock",
        "close",
        "DatagramProxy",
        "udp_port",
        "tcp_address",
        "bufsize",
        "DEFAULT_BUFFER_SIZE",
        "bufsize",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "udp_sock",
        "bind",
        "udp_port",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "tcp_sock",
        "connect",
        "tcp_address",
        "TCPDatagramProtocol",
        "udp_sock",
        "recvfrom",
        "bufsize",
        "udp_address",
        "udp_address",
        "logging",
        "info",
        "format",
        "udp_address",
        "udp_address",
        "tcp_sock",
        "send",
        "tcp_protocol",
        "send",
        "datagram",
        "tcp_sock",
        "recv",
        "bufsize",
        "len",
        "data",
        "datagram",
        "tcp_protocol",
        "recv",
        "data",
        "udp_address",
        "logging",
        "warning",
        "udp_sock",
        "sendto",
        "datagram",
        "udp_address",
        "udp_sock",
        "udp_to_tcp",
        "tcp_sock",
        "tcp_to_udp",
        "udp_sock",
        "close",
        "tcp_sock",
        "close",
        "DatagramProxy",
        "tcp_port",
        "udp_address",
        "bufsize",
        "DEFAULT_BUFFER_SIZE",
        "bufsize",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_STREAM",
        "tcp_listen_sock",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_REUSEADDR",
        "tcp_listen_sock",
        "bind",
        "tcp_port",
        "tcp_listen_sock",
        "listen",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "udp_sock",
        "connect",
        "udp_address",
        "tcp_sock",
        "tcp_sock",
        "close",
        "tcp_sock",
        "tcp_listen_sock",
        "accept",
        "TCPDatagramProtocol",
        "logging",
        "info",
        "format",
        "address",
        "udp_sock",
        "recv",
        "bufsize",
        "tcp_sock",
        "logging",
        "warning",
        "tcp_sock",
        "send",
        "tcp_protocol",
        "send",
        "datagram",
        "tcp_sock",
        "recv",
        "bufsize",
        "data",
        "tcp_sock",
        "close",
        "datagram",
        "tcp_protocol",
        "recv",
        "data",
        "udp_sock",
        "send",
        "datagram",
        "udp_sock",
        "udp_to_tcp",
        "tcp_listen_sock",
        "on_connect",
        "tcp_sock",
        "tcp_sock",
        "tcp_to_udp",
        "handlers",
        "udp_sock",
        "close",
        "tcp_listen_sock",
        "close",
        "tcp_sock",
        "tcp_sock",
        "close"
    ],
    "literals": [
        "\"\"",
        "\"new UDP connection from {}\"",
        "\"got UDP data before UDP 'connection' made\"",
        "\"\"",
        "\"new UDP connection from {}\"",
        "\"Remote socket closed prematurely.\"",
        "\"got TCP data before UDP 'connection' made\"",
        "\"\"",
        "\"new TCP connection from {}\"",
        "\"got UDP data before TCP connection made\"",
        "\"\""
    ],
    "variables": [
        "DEFAULT_BUFFER_SIZE",
        "bufsize",
        "ext_sock",
        "ext_address",
        "int_sock",
        "datagram",
        "ext_address",
        "ext_address",
        "datagram",
        "bufsize",
        "udp_sock",
        "udp_address",
        "tcp_sock",
        "tcp_protocol",
        "datagram",
        "udp_address",
        "udp_address",
        "data",
        "bufsize",
        "tcp_listen_sock",
        "tcp_sock",
        "tcp_protocol",
        "udp_sock",
        "address",
        "tcp_protocol",
        "datagram",
        "data",
        "tcp_sock",
        "handlers",
        "handlers"
    ],
    "comments": [
        "Receive the external datagram, recording the originating address of",
        "the packet (to allow directing of return packets)",
        "Forward the datagram to the internal socket",
        "Receive the internal datagram",
        "Forward to the external socket at the address most recently received",
        "from",
        "Receive the datagram, recording the originating address of the packet",
        "(to allow directing of return packets)",
        "Forward the datagram over TCP (prepending with the datagram length)",
        "Forward the datagram to the last UDP address received from",
        "The TCP server",
        "The most recently connected socket to the server (or None if not",
        "connected)",
        "Socket closed."
    ],
    "docstrings": [
        "\"\"\"A UDP to UDP proxy.\n\n    This proxy listens on an \"external\" UDP port and awaits the arrival of UDP\n    datagrams. These datagrams are transparently forwarded to the \"internal\"\n    UDP address upon arrival. If any UDP datagrams are received back from the\n    internal connection, these are forwarded to the most recent external host\n    to send a UDP datagram to the external UDP port.\n\n    This proxy essentially allows port numbers to be changed.\n    \"\"\"",
        "\"\"\"Forward a UDP datagram arriving from the external socket to the\n        internal socket.\"\"\"",
        "\"\"\"Forward a UDP datagram arriving from the internal socket to the\n        external socket.\"\"\"",
        "\"\"\"Forward UDP datagrams over a TCP connection.\n\n    This proxy listens on a UDP port and connects to a TCP server. When a UDP\n    datagram is received, it is forwarded down the TCP connection. When a\n    datagram is received from the TCP connection, a UDP datagram is sent to the\n    last address a UDP datagram was received from.\n\n    Since TCP is stream-based not datagram-based, each datagram is prefixed\n    with a 32-bit number indicating the datagram's length in bytes.\n\n    If the TCP connection is closed, this proxy will raise an exception when it\n    next attempts to forward a datagram.\n    \"\"\"",
        "\"\"\"Forward received UDP datagrams over TCP.\"\"\"",
        "\"\"\"Unpack received TCP data and forward any datagrams over UDP.\"\"\"",
        "\"\"\"Unpack datagrams sent over a TCP connection into UDP datagrams.\n\n    This proxy sets up a TCP server and 'connects' to a specified UDP address.\n    Datagrams sent to the TCP server are forwarded as UDP datagrams to the\n    specified destination. UDP datagrams received are forwarded down the TCP\n    connection.\n\n    Since TCP is stream-based not datagram-based, each datagram is prefixed\n    with a 32-bit number indicating the datagram's length in bytes.\n\n    When a connection is made to the TCP server, all previous TCP connections\n    are closed.\n    \"\"\""
    ],
    "functions": [
        "ext_to_int",
        "int_to_ext",
        "get_select_handlers",
        "close",
        "udp_to_tcp",
        "tcp_to_udp",
        "get_select_handlers",
        "close",
        "on_connect",
        "udp_to_tcp",
        "tcp_to_udp",
        "get_select_handlers",
        "close"
    ],
    "classes": [
        "UDPtoUDP",
        "UDPtoTCP",
        "TCPtoUDP"
    ]
}