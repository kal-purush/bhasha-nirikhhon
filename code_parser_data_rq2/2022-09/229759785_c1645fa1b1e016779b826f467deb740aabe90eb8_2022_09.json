{
    "identifiers": [
        "os",
        "subprocess",
        "sys",
        "base64",
        "b64encode",
        "pathlib",
        "Path",
        "sys",
        "stderr",
        "Path",
        "os",
        "getenv",
        "open",
        "os",
        "getenv",
        "os",
        "getenv",
        "_RENDER_SUMMARY",
        "_OUTPUTS",
        "append",
        "_SUMMARY",
        "msg",
        "_RENDER_SUMMARY",
        "msg",
        "file",
        "_SUMMARY",
        "msg",
        "_DEBUG",
        "msg",
        "file",
        "sys",
        "stderr",
        "msg",
        "output",
        "_OUTPUTS",
        "msg",
        "file",
        "output",
        "args",
        "args",
        "msg",
        "msg",
        "sys",
        "exit",
        "Path",
        "p",
        "resolve",
        "p",
        "sys",
        "argv",
        "split",
        "Path",
        "os",
        "getenv",
        "open",
        "_DEBUG",
        "pip_audit_args",
        "append",
        "os",
        "getenv",
        "pip_audit_args",
        "append",
        "os",
        "getenv",
        "pip_audit_args",
        "append",
        "os",
        "getenv",
        "pip_audit_args",
        "append",
        "os",
        "getenv",
        "index_url",
        "pip_audit_args",
        "extend",
        "index_url",
        "os",
        "getenv",
        "split",
        "url",
        "extra_index_urls",
        "pip_audit_args",
        "extend",
        "url",
        "os",
        "getenv",
        "split",
        "vuln_id",
        "ignored_vuln_ids",
        "pip_audit_args",
        "extend",
        "vuln_id",
        "pip_audit_args",
        "extend",
        "os",
        "getenv",
        "lower",
        "input_",
        "inputs",
        "input_",
        "startswith",
        "_fatal_help",
        "input_",
        "input_",
        "is_dir",
        "len",
        "inputs",
        "_fatal_help",
        "pip_audit_args",
        "append",
        "input_",
        "input_",
        "is_file",
        "_fatal_help",
        "input_",
        "pip_audit_args",
        "extend",
        "input_",
        "_debug",
        "a",
        "a",
        "pip_audit_args",
        "subprocess",
        "run",
        "_pip_audit",
        "pip_audit_args",
        "text",
        "stdout",
        "subprocess",
        "PIPE",
        "stderr",
        "subprocess",
        "STDOUT",
        "env",
        "os",
        "environ",
        "_debug",
        "status",
        "stdout",
        "status",
        "returncode",
        "_log",
        "_log",
        "open",
        "io",
        "io",
        "read",
        "b64encode",
        "output",
        "encode",
        "decode",
        "_log",
        "output",
        "_summary",
        "_log",
        "status",
        "stdout",
        "_summary",
        "os",
        "getenv",
        "sys",
        "exit",
        "sys",
        "exit",
        "status",
        "returncode"
    ],
    "literals": [
        "\"GITHUB_STEP_SUMMARY\"",
        "\"a\"",
        "\"GHA_PIP_AUDIT_SUMMARY\"",
        "\"true\"",
        "\"true\"",
        "\"GHA_PIP_AUDIT_INTERNAL_BE_CAREFUL_DEBUG\"",
        "\"false\"",
        "\"false\"",
        "f\"\\033[93mDEBUG: {msg}\\033[0m\"",
        "\"python\"",
        "\"-m\"",
        "\"pip_audit\"",
        "f\"::error::‚ùå {msg}\"",
        "\"GITHUB_STEP_SUMMARY\"",
        "\"a\"",
        "\"--progress-spinner=off\"",
        "\"--format=markdown\"",
        "\"--cache-dir=/tmp/pip-audit-cache\"",
        "\"--desc\"",
        "\"--output=/tmp/pip-audit-output.txt\"",
        "\"--verbose\"",
        "\"GHA_PIP_AUDIT_NO_DEPS\"",
        "\"false\"",
        "\"false\"",
        "\"--no-deps\"",
        "\"GHA_PIP_AUDIT_REQUIRE_HASHES\"",
        "\"false\"",
        "\"false\"",
        "\"--require-hashes\"",
        "\"GHA_PIP_AUDIT_LOCAL\"",
        "\"false\"",
        "\"false\"",
        "\"--local\"",
        "\"GHA_PIP_AUDIT_INDEX_URL\"",
        "\"\"",
        "\"--index-url\"",
        "\"GHA_PIP_AUDIT_EXTRA_INDEX_URLS\"",
        "\"\"",
        "\"--extra-index-url\"",
        "\"GHA_PIP_AUDIT_IGNORE_VULNS\"",
        "\"\"",
        "\"--ignore-vuln\"",
        "\"--vulnerability-service\"",
        "\"GHA_PIP_AUDIT_VULNERABILITY_SERVICE\"",
        "\"pypi\"",
        "\"-\"",
        "f\"input {input_} looks like a flag\"",
        "\"pip-audit only supports one project directory at a time\"",
        "f\"input {input_} does not look like a file\"",
        "\"--requirement\"",
        "f\"running: pip-audit {[str(a) for a in pip_audit_args]}\"",
        "\"PIP_NO_CACHE_DIR\"",
        "\"1\"",
        "\"üéâ pip-audit exited successfully\"",
        "\"‚ùå pip-audit found one or more problems\"",
        "\"/tmp/pip-audit-output.txt\"",
        "\"r\"",
        "f\"::set-output name=output::{b64encode(output.encode()).decode()}\"",
        "\"GHA_PIP_AUDIT_INTERNAL_BE_CAREFUL_ALLOW_FAILURE\"",
        "\"false\"",
        "\"false\""
    ],
    "variables": [
        "_OUTPUTS",
        "_SUMMARY",
        "_RENDER_SUMMARY",
        "_DEBUG",
        "inputs",
        "summary",
        "pip_audit_args",
        "index_url",
        "extra_index_urls",
        "ignored_vuln_ids",
        "status",
        "output"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "action.py: run pip-audit",
        "",
        "most state is passed in as environment variables; the only argument",
        "is a whitespace-separated list of inputs",
        "The arguments we pass into `pip-audit` get built up in this list.",
        "The spinner is useless in the CI.",
        "We intend to emit a Markdown-formatted table.",
        "`pip cache dir` doesn't work in this container for some reason, and I",
        "haven't debugged it yet.",
        "Include full descriptions in the output.",
        "Write the output to this logfile, which we'll turn into the step summary (if configured).",
        "If inputs is empty, we let `pip-audit` run in \"`pip list` source\" mode by not",
        "adding any explicit input argument(s).",
        "Otherwise, we handle either exactly one project path (a directory)",
        "or one or more requirements-style inputs (all files).",
        "Forbid things that look like flags. This isn't a security boundary; just",
        "a way to prevent (less motivated) users from breaking the action on themselves.",
        "This is really nasty: our output contains multiple lines,",
        "so we can't naively stuff it into an output (since this is all done",
        "in-channel as a special command on stdout).",
        "Normally, we exit with the same code as `pip-audit`, but the user can",
        "explicitly configure the CI to always pass.",
        "This is primarily useful for our own self-test workflows."
    ],
    "docstrings": [
        "\"\"\"\n<details>\n<summary>\n    Raw `pip-audit` output\n</summary>\n\n```\n    \"\"\"",
        "\"\"\"\n```\n</details>\n    \"\"\""
    ],
    "functions": [
        "_summary",
        "_debug",
        "_log",
        "_pip_audit",
        "_fatal_help"
    ],
    "classes": []
}