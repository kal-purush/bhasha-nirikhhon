{
    "identifiers": [
        "ZenLib",
        "Text",
        "TSize",
        "TSign",
        "IEquatable",
        "Bitvec",
        "TSize",
        "TSign",
        "IComparable",
        "Bitvec",
        "TSize",
        "TSign",
        "TSize",
        "ToString",
        "Size",
        "Parse",
        "sizeType",
        "Split",
        "ZenException",
        "sizeType",
        "Signed",
        "TSign",
        "Signed",
        "NumBytes",
        "Bytes",
        "CommonUtilities",
        "CopyBigEndian",
        "numBytes",
        "value",
        "Signed",
        "Size",
        "Size",
        "Pow",
        "exp",
        "Pow",
        "exp",
        "value",
        "min",
        "value",
        "max",
        "ArgumentException",
        "value",
        "Size",
        "Bytes",
        "NumBytes",
        "Signed",
        "value",
        "negated",
        "value",
        "value",
        "i",
        "Min",
        "Bytes",
        "Length",
        "i",
        "Bytes",
        "Bytes",
        "Length",
        "i",
        "value",
        "value",
        "negated",
        "Negate",
        "Bytes",
        "Bytes",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "Equals",
        "other",
        "LessThanOrEqual",
        "other",
        "Bitvec",
        "TSize",
        "TSign",
        "left",
        "Bitvec",
        "TSize",
        "TSign",
        "right",
        "Contract",
        "AssertNotNull",
        "left",
        "Contract",
        "AssertNotNull",
        "right",
        "left",
        "LessThanOrEqual",
        "right",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "GetBit",
        "Bytes",
        "GetBit",
        "other",
        "Bytes",
        "Signed",
        "ln",
        "rn",
        "Signed",
        "ln",
        "rn",
        "i",
        "Bytes",
        "Length",
        "i",
        "Bytes",
        "i",
        "other",
        "Bytes",
        "i",
        "other",
        "Bytes",
        "i",
        "Bytes",
        "i",
        "Bitvec",
        "TSize",
        "TSign",
        "left",
        "Bitvec",
        "TSize",
        "TSign",
        "right",
        "Contract",
        "AssertNotNull",
        "left",
        "Contract",
        "AssertNotNull",
        "right",
        "left",
        "GreaterThanOrEqual",
        "right",
        "Bitvec",
        "TSize",
        "TSign",
        "left",
        "Bitvec",
        "TSize",
        "TSign",
        "right",
        "Contract",
        "AssertNotNull",
        "left",
        "Contract",
        "AssertNotNull",
        "right",
        "left",
        "GreaterThan",
        "right",
        "Bitvec",
        "TSize",
        "TSign",
        "left",
        "Bitvec",
        "TSize",
        "TSign",
        "right",
        "Contract",
        "AssertNotNull",
        "left",
        "Contract",
        "AssertNotNull",
        "right",
        "left",
        "LessThan",
        "right",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "other",
        "other",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "other",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "other",
        "other",
        "Bitvec",
        "TSize",
        "TSign",
        "left",
        "Bitvec",
        "TSize",
        "TSign",
        "right",
        "left",
        "Equals",
        "right",
        "Bitvec",
        "TSize",
        "TSign",
        "left",
        "Bitvec",
        "TSize",
        "TSign",
        "right",
        "left",
        "right",
        "obj",
        "obj",
        "Bitvec",
        "TSize",
        "TSign",
        "Equals",
        "obj",
        "Bitvec",
        "TSize",
        "TSign",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "other",
        "i",
        "Bytes",
        "Length",
        "i",
        "Bytes",
        "i",
        "other",
        "Bytes",
        "i",
        "Size",
        "ToLong",
        "Signed",
        "l",
        "ToString",
        "l",
        "ToString",
        "StringBuilder",
        "sb",
        "Append",
        "i",
        "Size",
        "i",
        "sb",
        "Append",
        "GetBit",
        "i",
        "sb",
        "ToString",
        "Size",
        "Signed",
        "i",
        "Bytes",
        "Length",
        "i",
        "hashCode",
        "hashCode",
        "Bytes",
        "i",
        "hashCode",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "Contract",
        "AssertNotNull",
        "other",
        "Bytes",
        "Length",
        "BitwiseAnd",
        "Bytes",
        "other",
        "Bytes",
        "newBytes",
        "newBytes",
        "left",
        "right",
        "result",
        "i",
        "left",
        "Length",
        "i",
        "result",
        "i",
        "left",
        "i",
        "right",
        "i",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "Contract",
        "AssertNotNull",
        "other",
        "Bytes",
        "Length",
        "BitwiseOr",
        "Bytes",
        "other",
        "Bytes",
        "newBytes",
        "newBytes",
        "left",
        "right",
        "result",
        "i",
        "left",
        "Length",
        "i",
        "result",
        "i",
        "left",
        "i",
        "right",
        "i",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "Contract",
        "AssertNotNull",
        "other",
        "Bytes",
        "Length",
        "BitwiseXor",
        "Bytes",
        "other",
        "Bytes",
        "newBytes",
        "newBytes",
        "left",
        "right",
        "result",
        "i",
        "left",
        "Length",
        "i",
        "result",
        "i",
        "left",
        "i",
        "right",
        "i",
        "Bytes",
        "Length",
        "Negate",
        "Bytes",
        "newBytes",
        "newBytes",
        "result",
        "Length",
        "one",
        "one",
        "Length",
        "BitwiseNot",
        "result",
        "Add",
        "result",
        "one",
        "result",
        "Bytes",
        "Length",
        "BitwiseNot",
        "Bytes",
        "newBytes",
        "newBytes",
        "result",
        "i",
        "Size",
        "i",
        "GetBit",
        "i",
        "SetBit",
        "result",
        "i",
        "b",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "Contract",
        "AssertNotNull",
        "other",
        "Bytes",
        "Length",
        "Add",
        "Bytes",
        "other",
        "Bytes",
        "newBytes",
        "newBytes",
        "left",
        "right",
        "result",
        "Size",
        "i",
        "i",
        "GetBit",
        "left",
        "i",
        "GetBit",
        "right",
        "i",
        "SetBit",
        "result",
        "i",
        "b1",
        "b2",
        "c",
        "c",
        "b1",
        "b2",
        "b1",
        "b2",
        "c",
        "Bitvec",
        "TSize",
        "TSign",
        "other",
        "Contract",
        "AssertNotNull",
        "other",
        "Bytes",
        "Length",
        "Subtract",
        "Bytes",
        "other",
        "Bytes",
        "newBytes",
        "newBytes",
        "left",
        "right",
        "result",
        "Size",
        "i",
        "i",
        "GetBit",
        "left",
        "i",
        "GetBit",
        "right",
        "i",
        "SetBit",
        "result",
        "i",
        "b1",
        "b2",
        "c",
        "c",
        "b1",
        "b2",
        "c",
        "b1",
        "b2",
        "c",
        "Size",
        "ArgumentException",
        "Size",
        "Bytes",
        "Signed",
        "GetBit",
        "Bytes",
        "negated",
        "Bytes",
        "Length",
        "Negate",
        "Bytes",
        "i",
        "Length",
        "i",
        "result",
        "result",
        "i",
        "negated",
        "result",
        "result",
        "Size",
        "i",
        "Size",
        "i",
        "result",
        "i",
        "GetBit",
        "Bytes",
        "i",
        "result",
        "position",
        "value",
        "Contract",
        "Assert",
        "position",
        "Contract",
        "Assert",
        "position",
        "Size",
        "SetBit",
        "Bytes",
        "position",
        "value",
        "position",
        "Contract",
        "Assert",
        "position",
        "Contract",
        "Assert",
        "position",
        "Size",
        "GetBit",
        "Bytes",
        "position",
        "Size",
        "position",
        "Size",
        "position",
        "Length",
        "p",
        "whichByte",
        "p",
        "position",
        "value",
        "Size",
        "position",
        "Length",
        "p",
        "p",
        "value",
        "whichByte",
        "mask",
        "whichByte",
        "mask",
        "TSource",
        "TTarget",
        "TSource",
        "x",
        "ReflectionUtilities",
        "IsFixedIntegerType",
        "TSource",
        "ReflectionUtilities",
        "IsFixedIntegerType",
        "TTarget",
        "b1",
        "b2",
        "TTarget",
        "dynamic",
        "x",
        "b1",
        "b2",
        "dynamic",
        "x",
        "Bytes",
        "i",
        "Min",
        "Length",
        "i",
        "result",
        "result",
        "Length",
        "i",
        "TTarget",
        "dynamic",
        "result",
        "b1",
        "dynamic",
        "x",
        "Bytes",
        "BitConverter",
        "GetBytes",
        "dynamic",
        "x",
        "BitConverter",
        "IsLittleEndian",
        "Reverse",
        "TTarget",
        "GetConstructor",
        "Type",
        "TTarget",
        "c",
        "Invoke"
    ],
    "literals": [
        "\"#b\"",
        "\"1\"",
        "\"0\""
    ],
    "variables": [
        "Size",
        "Signed",
        "Bytes",
        "sizeType",
        "numBytes",
        "exp",
        "min",
        "max",
        "negated",
        "i",
        "ln",
        "rn",
        "i",
        "i",
        "l",
        "sb",
        "i",
        "hashCode",
        "i",
        "newBytes",
        "i",
        "newBytes",
        "i",
        "newBytes",
        "i",
        "newBytes",
        "one",
        "newBytes",
        "i",
        "b",
        "newBytes",
        "c",
        "i",
        "b1",
        "b2",
        "newBytes",
        "c",
        "i",
        "b1",
        "b2",
        "negated",
        "result",
        "i",
        "result",
        "i",
        "p",
        "whichByte",
        "p",
        "whichByte",
        "mask",
        "b1",
        "b2",
        "result",
        "i",
        "c"
    ],
    "comments": [
        "<copyright file=\"Bitvec.cs\" company=\"Microsoft\">",
        "Copyright (c) Microsoft. All rights reserved.",
        "</copyright>",
        "A class representing a fixed bit size integer.",
        "</summary>",
        "Gets the number of bits for the integer.",
        "</summary>",
        "Gets whether the integer is signed.",
        "</summary>",
        "The bytes representing the binary of the integer in Big Endian.",
        "</summary>",
        "Static initializer for the bitvector class.",
        "</summary>",
        "Creates a new instance of the <see cref=\"Bitvec{TSize, TSign}\"/> class.",
        "</summary>",
        "<param name=\"bytes\">The bytes in Big Endian.</param>",
        "Creates a new instance of the <see cref=\"Bitvec{TSize, TSign}\"/> class.",
        "</summary>",
        "<param name=\"value\">The value as a long.</param>",
        "Compare this integer to another.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns>An integer.</returns>",
        "Less than or equal to for fixed bit size integers.",
        "</summary>",
        "<param name=\"left\">The first integer.</param>",
        "<param name=\"right\">The second integer.</param>",
        "<returns></returns>",
        "Less than or equal to for fixed bit size integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns></returns>",
        "Greater than or equal to for fixed bit size integers.",
        "</summary>",
        "<param name=\"left\">The first integer.</param>",
        "<param name=\"right\">The second integer.</param>",
        "<returns></returns>",
        "Greater than for fixed bit size integers.",
        "</summary>",
        "<param name=\"left\">The first integer.</param>",
        "<param name=\"right\">The second integer.</param>",
        "<returns></returns>",
        "Less than for fixed bit size integers.",
        "</summary>",
        "<param name=\"left\">The first integer.</param>",
        "<param name=\"right\">The second integer.</param>",
        "<returns></returns>",
        "Greater than or equal to for fixed bit size integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns></returns>",
        "Greater than or equal to for fixed bit size integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns></returns>",
        "Greater than or equal to for fixed bit size integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns></returns>",
        "Equality for fixed bit size integers.",
        "</summary>",
        "<param name=\"left\">The first integer.</param>",
        "<param name=\"right\">The second integer.</param>",
        "<returns></returns>",
        "Inequality for fixed bit size integers.",
        "</summary>",
        "<param name=\"left\">The first integer.</param>",
        "<param name=\"right\">The second integer.</param>",
        "<returns></returns>",
        "Equality of fixed bit integers.",
        "</summary>",
        "<param name=\"obj\">The other integer.</param>",
        "<returns>True or false.</returns>",
        "Equality of fixed bit integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns>True or false.</returns>",
        "Convert the integer to a string.",
        "</summary>",
        "<returns>The integer as a string.</returns>",
        "Gets the hash code.",
        "</summary>",
        "<returns>Integer hash code.</returns>",
        "Compute the bitwise and of two integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns></returns>",
        "Bitwise and of two bitvectors.",
        "</summary>",
        "<param name=\"left\">The left bytes.</param>",
        "<param name=\"right\">The right bytes.</param>",
        "<param name=\"result\">The result bytes.</param>",
        "Compute the bitwise and of two integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns></returns>",
        "Bitwise or of two bitvectors.",
        "</summary>",
        "<param name=\"left\">The left bytes.</param>",
        "<param name=\"right\">The right bytes.</param>",
        "<param name=\"result\">The result bytes.</param>",
        "Compute the bitwise and of two integers.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns></returns>",
        "Bitwise xor of two bitvectors.",
        "</summary>",
        "<param name=\"left\">The left bytes.</param>",
        "<param name=\"right\">The right bytes.</param>",
        "<param name=\"result\">The result bytes.</param>",
        "Compute the bitwise negation of an integer.",
        "</summary>",
        "<returns>The negated integer.</returns>",
        "Bitwise negation of a bitvectors.",
        "</summary>",
        "<param name=\"bytes\">The bytes.</param>",
        "<param name=\"result\">The result.</param>",
        "Compute the bitwise negation of an integer.",
        "</summary>",
        "<returns>The negated integer.</returns>",
        "Bitwise not of bitvectors.",
        "</summary>",
        "<param name=\"bytes\">The bytes.</param>",
        "<param name=\"result\">The result bytes.</param>",
        "Adds the integer with another of the same size.",
        "Wraps around on overflow.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns>The added integer.</returns>",
        "Add two bitvectors together.",
        "</summary>",
        "<param name=\"left\">The left bytes.</param>",
        "<param name=\"right\">The right bytes.</param>",
        "<param name=\"result\">The result bytes.</param>",
        "Subtracts an integer from this integer.",
        "Wraps around on overflow.",
        "</summary>",
        "<param name=\"other\">The other integer.</param>",
        "<returns>The subtracted integer.</returns>",
        "Subtraction of two bitvectors.",
        "</summary>",
        "<param name=\"left\">The left bytes.</param>",
        "<param name=\"right\">The right bytes.</param>",
        "<param name=\"result\">The result bytes.</param>",
        "Create a long value from this integer, if the size permits.",
        "</summary>",
        "<returns></returns>",
        "Gets the bits for the integer.",
        "</summary>",
        "<returns>The bits as an array.</returns>",
        "Sets a bit at a given position.",
        "</summary>",
        "<param name=\"position\">The position.</param>",
        "<param name=\"value\">Whether to set true or false.</param>",
        "Gets whether the bit is set at a given position.",
        "</summary>",
        "<param name=\"position\">The position.</param>",
        "<returns>True or false.</returns>",
        "Returns the number of bytes needed.",
        "</summary>",
        "<returns>The number of bytes.</returns>",
        "Gets whether the bit is set at a given position.",
        "</summary>",
        "<param name=\"bytes\">The bytes.</param>",
        "<param name=\"position\">The position.</param>",
        "<returns>True or false.</returns>",
        "Gets whether the bit is set at a given position.",
        "</summary>",
        "<param name=\"bytes\">The bytes.</param>",
        "<param name=\"position\">The position.</param>",
        "<param name=\"value\">Whether to set true or false.</param>",
        "Static methods for fixed integers.",
        "</summary>",
        "Cast one finite integer to another finite integer type.",
        "</summary>",
        "<param name=\"x\">The source finite integer.</param>",
        "<returns>The resulting finite integer.</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Bitvec",
        "Bitvec",
        "Bitvec",
        "CompareTo",
        "LessThanOrEqual",
        "GreaterThanOrEqual",
        "GreaterThan",
        "LessThan",
        "Equals",
        "Equals",
        "ToString",
        "GetHashCode",
        "BitwiseAndBytes",
        "BitwiseAnd",
        "BitwiseOrBytes",
        "BitwiseOr",
        "BitwiseXorBytes",
        "BitwiseXor",
        "NegateBytes",
        "Negate",
        "BitwiseNotBytes",
        "BitwiseNot",
        "AddBytes",
        "Add",
        "SubtractBytes",
        "Subtract",
        "ToLong",
        "GetBits",
        "SetBit",
        "GetBit",
        "NumBytes",
        "GetBit",
        "SetBit",
        "TTarget",
        "CastFiniteInteger"
    ],
    "classes": [
        "Bitvec",
        "Bitvec"
    ]
}