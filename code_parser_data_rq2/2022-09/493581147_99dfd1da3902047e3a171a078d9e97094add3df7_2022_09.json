{
    "identifiers": [
        "Database",
        "Command",
        "readdirSync",
        "ensureDirSync",
        "readJSONSync",
        "path",
        "prompts",
        "PATHS",
        "arrayToHashmap",
        "sortJSONObjectByKey",
        "getSqliteDb",
        "Command",
        "program",
        "DBImport",
        "path",
        "PATHS",
        "ensureDirSync",
        "importDir",
        "getSqliteDb",
        "readdirSync",
        "importDir",
        "name",
        "path",
        "importDir",
        "name",
        "name",
        "importTableNames",
        "readJSONSync",
        "filePath",
        "table",
        "summary",
        "table",
        "importData",
        "localData",
        "data",
        "confirmed",
        "data",
        "data",
        "data",
        "summary",
        "v",
        "v",
        "summaries",
        "summaries",
        "prompts",
        "confirmed",
        "data",
        "data",
        "summary",
        "table",
        "sequenceData",
        "table",
        "table",
        "table",
        "importData",
        "importData",
        "sequenceData",
        "sequenceData",
        "table",
        "importData",
        "localData",
        "table",
        "primaryKey",
        "arrayToHashmap",
        "importData",
        "primaryKey",
        "arrayToHashmap",
        "localData",
        "primaryKey",
        "importHashmap",
        "localHashmap",
        "index",
        "localEntry",
        "ops",
        "localEntry",
        "importEntry",
        "isSame",
        "ops",
        "ops",
        "localData",
        "importData",
        "index",
        "importEntry",
        "ops",
        "ops",
        "ops",
        "ops",
        "table",
        "totalOps",
        "ops",
        "ops",
        "totalOps",
        "ops",
        "a",
        "b",
        "a",
        "b",
        "a",
        "key",
        "a",
        "key",
        "b",
        "key",
        "table",
        "table",
        "stmt",
        "table",
        "rows",
        "columns",
        "columns",
        "column",
        "column",
        "columns",
        "column",
        "column",
        "table",
        "columnRefs",
        "valueRefs",
        "sql",
        "rows",
        "row",
        "rows",
        "stmt",
        "row",
        "insertMany",
        "rows",
        "values",
        "values",
        "table",
        "seq",
        "name",
        "sql",
        "stmt",
        "table",
        "table",
        "stmt",
        "rows"
    ],
    "literals": [
        "\"better-sqlite3\"",
        "\"commander\"",
        "\"fs-extra\"",
        "\"path\"",
        "\"prompts\"",
        "\"../../paths\"",
        "\"../../utils/object.utils\"",
        "\"./common\"",
        "\"db:import\"",
        "\"Import strapi data\"",
        "string",
        "string",
        "\"db\"",
        "\".json\"",
        "\"\"",
        "\"Up to date\"",
        "\"confirm\"",
        "\"confirmed\"",
        "\"Continue?\"",
        "\"sqlite_sequence\"",
        "string",
        "\"id\"",
        "\"sqlite_sequence\"",
        "\"name\"",
        "\"sqlite_sequence\"",
        "string",
        "DELETE FROM ${table}",
        "string",
        "string",
        "'${column}'",
        "\", \"",
        "@${column}",
        "\", \"",
        "INSERT INTO ${table} (${columnRefs}) VALUES (${valueRefs})",
        "string",
        "\"sqlite_sequence\"",
        "UPDATE ${table} SET 'seq' = ${seq} WHERE name = '${name}'",
        "string",
        "SELECT * FROM ${table}"
    ],
    "variables": [
        "program",
        "importDir",
        "importTableNames",
        "data",
        "importData",
        "localData",
        "summary",
        "confirmed",
        "summaries",
        "sequenceData",
        "ops",
        "primaryKey",
        "importHashmap",
        "localHashmap",
        "index",
        "importEntry",
        "localEntry",
        "isSame",
        "index",
        "importEntry",
        "totalOps",
        "stmt",
        "columnRefs",
        "valueRefs",
        "sql",
        "stmt",
        "insertMany",
        "table",
        "sql",
        "stmt",
        "stmt",
        "rows"
    ],
    "comments": [
        "setup folders",
        "query list of all tables",
        "get summary of local and import data",
        "confirm and process",
        "track sequence data to upload after other inserts",
        "new rows",
        "existing rows (conflict or same)",
        "ignore sequence delete of untracked tables",
        "console.log(row);"
    ],
    "docstrings": [
        "*************************************************************************************\n * CLI\n * @example yarn\n ************************************************************************************",
        "*************************************************************************************\n * Main Methods\n ************************************************************************************",
        "*\n   *",
        "* Compare local and import data, generating a summary of operations to perform\n   * NOTE - tables will be fully deleted and recreated, so output only a rough\n   * indication of what the expected outcome will be\n   *",
        "*\n   * @param table\n   * https://stackoverflow.com/questions/4280041/truncate-a-sqlite-table-if-it-exists"
    ],
    "functions": [
        "run",
        "confirmImport",
        "handleImport",
        "generateSummary",
        "compareEntries",
        "truncateTable",
        "insertRows",
        "updateSqliteSequence",
        "getTableData"
    ],
    "classes": [
        "DBImport"
    ]
}