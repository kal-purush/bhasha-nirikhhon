{
    "identifiers": [
        "OperatorType",
        "CoinIdentifier",
        "SearchFilters",
        "CurrencyId",
        "isStakeAddress",
        "buildFromSentenceWithInputsAndOutputs",
        "isNullOrUndefined",
        "generateOutputCoinWhereCondition",
        "generateInputCoinWhereCondition",
        "generateTxQuery",
        "withFilters",
        "createCurrencyQuery",
        "currencyId",
        "filters",
        "isTotalCount",
        "isNullOrUndefined",
        "status",
        "conditions",
        "status",
        "coinIdentifier",
        "transactionHash",
        "conditions",
        "address",
        "isStakeAddress",
        "address",
        "isStake",
        "joinTables",
        "conditions",
        "isStake",
        "address",
        "address",
        "conditions",
        "conditions",
        "OperatorType",
        "outputsWhere",
        "inputsWhere",
        "whereClause",
        "joinTables",
        "joinClause",
        "joinTables",
        "coinIdentifier",
        "conditions",
        "OperatorType",
        "outputsWhere",
        "outputsWhere",
        "generateOutputCoinWhereCondition",
        "coinIdentifier",
        "inputsWhere",
        "inputsWhere",
        "generateInputCoinWhereCondition",
        "coinIdentifier",
        "symbol",
        "policy",
        "joinClause",
        "buildFromSentenceWithInputsAndOutputs",
        "joinSentence",
        "coinIdentifier",
        "joinSentence",
        "isTotalCount",
        "generateTxQuery",
        "createCoinQuery",
        "coinIdentifier",
        "filters",
        "isTotalCount",
        "maxBlock",
        "conditions",
        "maxBlock",
        "isNullOrUndefined",
        "status",
        "conditions",
        "status",
        "address",
        "isStakeAddress",
        "address",
        "isStake",
        "joinTables",
        "conditions",
        "isStake",
        "address",
        "address",
        "conditions",
        "whereClause",
        "OperatorType",
        "conditions",
        "OperatorType",
        "joinTables",
        "joinClause",
        "joinTables",
        "buildFromSentenceWithInputsAndOutputs",
        "joinClause",
        "joinClause",
        "generateInputCoinWhereCondition",
        "coinIdentifier",
        "whereClause",
        "coinIdentifier",
        "whereClause",
        "isTotalCount",
        "generateTxQuery",
        "getQueryWithAndOperator",
        "filters",
        "isTotalCount",
        "withFilters",
        "filters",
        "isTotalCount",
        "currencyIdentifier",
        "createCurrencyQuery",
        "currencyIdentifier",
        "filters",
        "isTotalCount",
        "coinIdentifier",
        "createCoinQuery",
        "coinIdentifier",
        "filters",
        "isTotalCount",
        "withFilters",
        "filters",
        "isTotalCount"
    ],
    "literals": [
        "'../../../../utils/constants'",
        "'../../../../models'",
        "'../../../../utils/cardano/addresses'",
        "'./commons'",
        "''",
        "''",
        "''",
        "tx.valid_contract = ${status}",
        "'tx.hash = $1'",
        "'stake_address ON tx_out.stake_address_id = stake_address.id'",
        "${isStake ? `stake_address.view = '${address}'` : `tx_out.address = '${address}'`}",
        "stake_address.view = '${address}'",
        "tx_out.address = '${address}'",
        "WHERE ${conditions.join(` ${OperatorType.AND} `)}",
        "${OperatorType.AND}",
        "JOIN ${joinTables.join(' JOIN ')}",
        "' JOIN '",
        "${OperatorType.AND}",
        "' WHERE '",
        "JOIN ma_tx_out\n          ON ma_tx_out.tx_out_id = tx_out.id\n        JOIN multi_asset asset\n          ON asset.id = ma_tx_out.ident\n          AND asset.name = DECODE('${symbol}', 'hex')\n          AND asset.policy = DECODE('${policy}', 'hex')\n        ${joinClause}",
        "${joinSentence} ${coinIdentifier ? 'JOIN tx AS tx_out_tx ON tx_out_tx.id = tx_in.tx_out_id' : ''}",
        "'JOIN tx AS tx_out_tx ON tx_out_tx.id = tx_in.tx_out_id'",
        "''",
        "SELECT COUNT(DISTINCT tx.id) AS \"totalCount\" ${from}",
        "''",
        "''",
        "tx.block_id <= (select id from block where block_no = ${maxBlock})",
        "tx.valid_contract  = ${status}",
        "'stake_address ON stake_address.id = tx_out.stake_address_id'",
        "${isStake ? `stake_address.view = '${address}'` : `tx_out.address = '${address}'`}",
        "stake_address.view = '${address}'",
        "tx_out.address = '${address}'",
        "${OperatorType.AND} ${conditions.join(` ${OperatorType.AND} `)}",
        "${OperatorType.AND}",
        "JOIN ${joinTables.join(' JOIN ')}",
        "' JOIN '",
        "JOIN tx AS tx_out_tx ON tx_out_tx.id = tx_in.tx_out_id ${joinClause}",
        "WHERE ${generateInputCoinWhereCondition(coinIdentifier)} ${whereClause}",
        "WHERE (tx.hash = $1 AND tx_out.index = ${coinIdentifier.index}) ${whereClause}",
        "SELECT COUNT(DISTINCT tx.id) AS \"totalCount\" ${from}"
    ],
    "variables": [
        "createCurrencyQuery",
        "currencyId",
        "filters",
        "conditions",
        "joinClause",
        "joinTables",
        "outputsWhere",
        "inputsWhere",
        "isStake",
        "whereClause",
        "joinSentence",
        "createCoinQuery",
        "filters",
        "joinClause",
        "whereClause",
        "joinTables",
        "conditions",
        "isStake",
        "getQueryWithAndOperator",
        "filters"
    ],
    "comments": [
        "eslint-disable-next-line complexity"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}