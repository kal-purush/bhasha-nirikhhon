{
    "identifiers": [
        "com",
        "kain",
        "hap",
        "proxy",
        "tlv",
        "serialize",
        "java",
        "io",
        "java",
        "io",
        "InputStream",
        "java",
        "util",
        "Arrays",
        "org",
        "springframework",
        "context",
        "ApplicationEventPublisher",
        "org",
        "springframework",
        "context",
        "ApplicationEventPublisherAware",
        "org",
        "springframework",
        "core",
        "serializer",
        "Deserializer",
        "org",
        "springframework",
        "integration",
        "ip",
        "tcp",
        "serializer",
        "SoftEndOfStreamException",
        "org",
        "springframework",
        "integration",
        "ip",
        "tcp",
        "serializer",
        "TcpDeserializationExceptionEvent",
        "com",
        "kain",
        "hap",
        "proxy",
        "tlv",
        "packet",
        "HapRequest",
        "lombok",
        "slf4j",
        "Slf4j",
        "Slf4j",
        "LENGTH_HEADER",
        "METHOD_SUFIX",
        "DEFAULT_MAX_MESSAGE_SIZE",
        "applicationEventPublisher",
        "mapper",
        "TlvMapper",
        "INSTANCE",
        "Override",
        "applicationEventPublisher",
        "applicationEventPublisher",
        "applicationEventPublisher",
        "Override",
        "inputStream",
        "buffer",
        "DEFAULT_MAX_MESSAGE_SIZE",
        "n",
        "bite",
        "available",
        "inputStream",
        "available",
        "bodyLength",
        "log",
        "debug",
        "available",
        "duplicatedLf",
        "request",
        "bite",
        "inputStream",
        "read",
        "bite",
        "n",
        "checkClosure",
        "bite",
        "n",
        "bite",
        "buffer",
        "n",
        "duplicatedLf",
        "body",
        "bodyLength",
        "inputStream",
        "read",
        "body",
        "bodyLength",
        "request",
        "setBody",
        "mapper",
        "readPacket",
        "body",
        "duplicatedLf",
        "header",
        "buffer",
        "trim",
        "header",
        "startsWith",
        "LENGTH_HEADER",
        "bodyLength",
        "valueOf",
        "header",
        "substring",
        "LENGTH_HEADER",
        "length",
        "trim",
        "header",
        "endsWith",
        "METHOD_SUFIX",
        "splited",
        "header",
        "split",
        "request",
        "setMethod",
        "splited",
        "request",
        "setEndpoint",
        "splited",
        "request",
        "addHeader",
        "header",
        "Arrays",
        "fill",
        "buffer",
        "n",
        "bite",
        "duplicatedLf",
        "buffer",
        "n",
        "bite",
        "n",
        "DEFAULT_MAX_MESSAGE_SIZE",
        "DEFAULT_MAX_MESSAGE_SIZE",
        "e",
        "e",
        "ex",
        "publishEvent",
        "ex",
        "buffer",
        "n",
        "ex",
        "request",
        "bite",
        "bite",
        "log",
        "debug",
        "cause",
        "buffer",
        "offset",
        "cause",
        "buffer",
        "offset",
        "applicationEventPublisher",
        "applicationEventPublisher",
        "publishEvent",
        "log",
        "trace"
    ],
    "literals": [
        "\"Content-Length:\"",
        "\"HTTP/1.1\"",
        "\"Available to read: {}\"",
        "\"Stream closed between payloads\"",
        "\" \"",
        "\"Terminator CRLF not found before max message length: \"",
        "\"Socket closed during message assembly\"",
        "\"Socket closed during message assembly\"",
        "\"No event publisher for {}\""
    ],
    "variables": [
        "applicationEventPublisher",
        "bite"
    ],
    "comments": [
        "TODO: check max size of request;",
        "start read body",
        "get request method and endpoint",
        "NOSONAR catch and throw",
        "it's an IO exception and we don't want an event for this"
    ],
    "docstrings": [],
    "functions": [
        "setApplicationEventPublisher",
        "HapRequest",
        "deserialize",
        "checkClosure",
        "publishEvent"
    ],
    "classes": [
        "HttpPacketSerializer"
    ]
}