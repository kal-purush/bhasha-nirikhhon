{
    "identifiers": [
        "assertRestError",
        "Express",
        "supertest",
        "OperatorUtils",
        "IJsonValidator",
        "JsonValidator",
        "ClientBuilder",
        "OperatorClient",
        "UnableToIdentifySignerError",
        "createRequest",
        "defaultRefererUrl",
        "randomPrivateKey",
        "getNewIdUrl",
        "operatorClient",
        "createRequest",
        "defaultRefererUrl",
        "operatorClient",
        "request",
        "fullUrl",
        "defaultPublicKeyProvider",
        "host",
        "host",
        "ClientBuilder",
        "ClientBuilder",
        "UnableToIdentifySignerError",
        "host",
        "describe",
        "getContext",
        "validator",
        "JsonValidator",
        "publicKeyProvider",
        "defaultPublicKeyProvider",
        "OperatorUtils",
        "validator",
        "publicKeyProvider",
        "jest",
        "jest",
        "it",
        "jest",
        "getContext",
        "exceptionValidator",
        "ClientBuilder",
        "defaultPublicKeyProvider",
        "getNewIdUrl",
        "operatorClient",
        "supertest",
        "server",
        "url",
        "defaultRefererUrl",
        "defaultRefererUrl",
        "assertRestError",
        "response",
        "expect",
        "startMock",
        "expect",
        "endMock",
        "it",
        "getContext",
        "supertest",
        "server",
        "defaultRefererUrl",
        "defaultRefererUrl",
        "assertRestError",
        "response",
        "expect",
        "startMock",
        "expect",
        "endMock",
        "it",
        "getContext",
        "ClientBuilder",
        "defaultPublicKeyProvider",
        "getNewIdUrl",
        "operatorClient",
        "supertest",
        "server",
        "url",
        "defaultRefererUrl",
        "defaultRefererUrl",
        "assertRestError",
        "response",
        "expect",
        "startMock",
        "expect",
        "endMock",
        "describe",
        "it",
        "getContext",
        "ClientBuilder",
        "randomPrivateKey",
        "defaultPublicKeyProvider",
        "getNewIdUrl",
        "operatorClient",
        "supertest",
        "server",
        "url",
        "defaultRefererUrl",
        "defaultRefererUrl",
        "assertRestError",
        "response",
        "expect",
        "startMock",
        "expect",
        "endMock",
        "it",
        "getContext",
        "ClientBuilder",
        "defaultPublicKeyProvider",
        "getNewIdUrl",
        "operatorClient",
        "supertest",
        "server",
        "url",
        "defaultRefererUrl",
        "defaultRefererUrl",
        "assertRestError",
        "response",
        "expect",
        "startMock",
        "expect",
        "endMock",
        "it",
        "getContext",
        "ClientBuilder",
        "defaultPublicKeyProvider",
        "getNewIdUrl",
        "operatorClient",
        "supertest",
        "server",
        "url",
        "assertRestError",
        "response",
        "expect",
        "startMock",
        "expect",
        "endMock",
        "test",
        "getContext",
        "ClientBuilder",
        "defaultPublicKeyProvider",
        "getNewIdUrl",
        "operatorClient",
        "supertest",
        "server",
        "url",
        "defaultRefererUrl",
        "defaultRefererUrl",
        "request",
        "expect",
        "response",
        "response",
        "expect",
        "data",
        "expect",
        "data",
        "expect",
        "data",
        "expect",
        "data",
        "expect",
        "startMock",
        "expect",
        "endMock"
    ],
    "literals": [
        "'../helpers/integration.helpers'",
        "'express'",
        "'supertest'",
        "'../utils/operator-utils'",
        "'@core/validation/json-validator'",
        "'../utils/client-utils'",
        "'@client/operator-client'",
        "'@core/express/errors'",
        "'node-mocks-http'",
        "'../utils/constants'",
        "''",
        "string",
        "Error calling Identity endpoint on ${host}",
        "'newId'",
        "'beginHandling'",
        "'endHandling'",
        "'should fallback to unknown error in case of an exception'",
        "'UnknownException'",
        "'no-permission.com'",
        "'referer'",
        "'Origin'",
        "'UNKNOWN_ERROR'",
        "'should check query string'",
        "'/paf/v1/new-id'",
        "'referer'",
        "'Origin'",
        "'INVALID_QUERY_STRING'",
        "'should check permissions'",
        "'no-permission.com'",
        "'referer'",
        "'Origin'",
        "'UNAUTHORIZED_OPERATION'",
        "'should check message signature'",
        "'for wrong signature'",
        "'referer'",
        "'Origin'",
        "'VERIFICATION_FAILED'",
        "'for unknown signer'",
        "'paf.read-only.com'",
        "'referer'",
        "'Origin'",
        "'UNKNOWN_SIGNER'",
        "'should check origin header'",
        "'VERIFICATION_FAILED'",
        "'should handle valid request'",
        "'referer'",
        "'Origin'"
    ],
    "variables": [
        "getNewIdUrl",
        "request",
        "fullUrl",
        "defaultPublicKeyProvider",
        "getContext",
        "startMock",
        "endMock",
        "server",
        "exceptionValidator",
        "operatorClient",
        "url",
        "response",
        "response",
        "operatorClient",
        "url",
        "response",
        "operatorClient",
        "url",
        "response",
        "operatorClient",
        "url",
        "response",
        "operatorClient",
        "url",
        "response",
        "operatorClient",
        "url",
        "request",
        "response",
        "data"
    ],
    "comments": [
        "Remove hostname part",
        "Note: use real JSON validator by default",
        "Note that the operator node is not start()ed",
        "This client host is allowed to read, but the public key won't be found"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}