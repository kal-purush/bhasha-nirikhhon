{
    "identifiers": [
        "com",
        "hukki",
        "example",
        "config",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "context",
        "annotation",
        "Bean",
        "org",
        "springframework",
        "context",
        "annotation",
        "Configuration",
        "org",
        "springframework",
        "http",
        "HttpMethod",
        "org",
        "springframework",
        "security",
        "authentication",
        "AuthenticationManager",
        "org",
        "springframework",
        "security",
        "crypto",
        "bcrypt",
        "BCryptPasswordEncoder",
        "org",
        "springframework",
        "security",
        "crypto",
        "password",
        "PasswordEncoder",
        "org",
        "springframework",
        "security",
        "oauth2",
        "config",
        "annotation",
        "configurers",
        "ClientDetailsServiceConfigurer",
        "org",
        "springframework",
        "security",
        "oauth2",
        "config",
        "annotation",
        "web",
        "configuration",
        "AuthorizationServerConfigurerAdapter",
        "org",
        "springframework",
        "security",
        "oauth2",
        "config",
        "annotation",
        "web",
        "configuration",
        "EnableAuthorizationServer",
        "org",
        "springframework",
        "security",
        "oauth2",
        "config",
        "annotation",
        "web",
        "configurers",
        "AuthorizationServerEndpointsConfigurer",
        "org",
        "springframework",
        "security",
        "oauth2",
        "config",
        "annotation",
        "web",
        "configurers",
        "AuthorizationServerSecurityConfigurer",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "ClientDetailsService",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "client",
        "JdbcClientDetailsService",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "code",
        "AuthorizationCodeServices",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "code",
        "InMemoryAuthorizationCodeServices",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "code",
        "JdbcAuthorizationCodeServices",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "token",
        "AuthorizationServerTokenServices",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "token",
        "DefaultTokenServices",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "token",
        "TokenEnhancerChain",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "token",
        "TokenStore",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "token",
        "store",
        "InMemoryTokenStore",
        "org",
        "springframework",
        "security",
        "oauth2",
        "provider",
        "token",
        "store",
        "JwtAccessTokenConverter",
        "javax",
        "sql",
        "DataSource",
        "java",
        "util",
        "Arrays",
        "EnableAuthorizationServer",
        "Configuration",
        "Bean",
        "Bean",
        "dataSource",
        "clientDetailsService",
        "dataSource",
        "clientDetailsService",
        "setPasswordEncoder",
        "passwordEncoder",
        "clientDetailsService",
        "Override",
        "clients",
        "clients",
        "withClientDetails",
        "clientDetailsService",
        "Autowired",
        "clientDetailsService",
        "Autowired",
        "authorizationCodeServices",
        "Bean",
        "dataSource",
        "dataSource",
        "Autowired",
        "authorizationServerTokenServices",
        "Bean",
        "service",
        "service",
        "setClientDetailsService",
        "clientDetailsService",
        "service",
        "setSupportRefreshToken",
        "service",
        "setTokenStore",
        "tokenStore",
        "service",
        "setAccessTokenValiditySeconds",
        "service",
        "setRefreshTokenValiditySeconds",
        "service",
        "Autowired",
        "tokenStore",
        "Bean",
        "Override",
        "endpoints",
        "endpoints",
        "authorizationCodeServices",
        "authorizationCodeServices",
        "tokenServices",
        "authorizationServerTokenServices",
        "allowedTokenEndpointRequestMethods",
        "HttpMethod",
        "POST",
        "Override",
        "security",
        "security",
        "tokenKeyAccess",
        "checkTokenAccess",
        "allowFormAuthenticationForClients"
    ],
    "literals": [
        "\"permitAll()\"",
        "\"permitAll()\""
    ],
    "variables": [
        "clientDetailsService",
        "authorizationCodeServices",
        "authorizationServerTokenServices",
        "tokenStore"
    ],
    "comments": [
        "设置授权码模式的授权码如何存取",
        "@Autowired",
        "private JwtAccessTokenConverter accessTokenConverter;",
        "TokenEnhancerChain tokenEnhancerChain = new TokenEnhancerChain();",
        "tokenEnhancerChain.setTokenEnhancers(Arrays.asList(accessTokenConverter));",
        "service.setTokenEnhancer(tokenEnhancerChain);",
        "令牌默认有效期2小时",
        "刷新令牌默认有效期3天",
        "@Autowired",
        "private AuthenticationManager authenticationManager;",
        ".authenticationManager(authenticationManager)"
    ],
    "docstrings": [
        "* oauth2配置jdbc存储\n * 1.配置客户端\n * 2.配置token授权点\n * 3.配置token授权店安全机制",
        "* =========================================================1.客户端配置============================================================================",
        "* =========================================================1.客户端配置============================================================================",
        "* =========================================================2.令牌服务配置============================================================================",
        "* =========================================================2.令牌服务配置============================================================================",
        "* =========================================================3.配置令牌端点(Token Endpoint)的安全约束============================================================================",
        "* =========================================================3.配置令牌端点(Token Endpoint)的安全约束============================================================================"
    ],
    "functions": [
        "PasswordEncoder",
        "passwordEncoder",
        "ClientDetailsService",
        "clientDetailsService",
        "configure",
        "AuthorizationCodeServices",
        "authorizationCodeServices",
        "AuthorizationServerTokenServices",
        "authorizationServerTokenServices",
        "TokenStore",
        "tokenStore",
        "configure",
        "configure"
    ],
    "classes": [
        "AuthorizationServerConfigForJDBC"
    ]
}