{
    "identifiers": [
        "os",
        "configparser",
        "natsort",
        "natsorted",
        "Interface",
        "Interface",
        "gi",
        "repository",
        "GdkPixbuf",
        "pyinotify",
        "CONFIG_WINDOW_WIDTH",
        "CONFIG_WINDOW_HEIGHT",
        "CONFIG_WINDOW_FULLSCREEN",
        "ANIMATION_RATE",
        "pyinotify",
        "ProcessEvent",
        "image_viewer",
        "pyinotify",
        "ProcessEvent",
        "image_viewer",
        "image_viewer",
        "addToFilelist",
        "pathname",
        "image_viewer",
        "removeFromFilelist",
        "pathname",
        "process_IN_DELETE",
        "process_IN_CREATE",
        "path",
        "path",
        "extension",
        "os",
        "path",
        "splitext",
        "path",
        "os",
        "path",
        "basename",
        "path",
        "os",
        "path",
        "dirname",
        "path",
        "setError",
        "load",
        "extension",
        "SUPPORTED_STATIC",
        "loadStaticImage",
        "extension",
        "SUPPORTED_ANIMATION",
        "loadAnimation",
        "setError",
        "GdkPixbuf",
        "Pixbuf",
        "new_from_file",
        "path",
        "pixbuf",
        "get_width",
        "pixbuf",
        "get_height",
        "setError",
        "GdkPixbuf",
        "PixbufAnimation",
        "new_from_file",
        "path",
        "pixbuf",
        "get_width",
        "pixbuf",
        "get_height",
        "setError",
        "error_loading",
        "extension",
        "SUPPORTED_ANIMATION",
        "error_loading",
        "extension",
        "SUPPORTED_STATIC",
        "error_loading",
        "width",
        "height",
        "isStatic",
        "pixbuf",
        "scale_simple",
        "width",
        "height",
        "GdkPixbuf",
        "InterpType",
        "BILINEAR",
        "isAnimation",
        "is_resizable",
        "size",
        "path",
        "name",
        "pixbuf",
        "folder",
        "os",
        "path",
        "basename",
        "folder",
        "position",
        "position",
        "position",
        "config_folder",
        "config_folder",
        "os",
        "path",
        "exists",
        "config_folder",
        "os",
        "mkdir",
        "config_folder",
        "loadConfig",
        "setupInterface",
        "pyinotify",
        "WatchManager",
        "pyinotify",
        "IN_DELETE",
        "pyinotify",
        "IN_CREATE",
        "pyinotify",
        "IN_MOVED_FROM",
        "pyinotify",
        "IN_MOVED_TO",
        "InotifyEventHandler",
        "pyinotify",
        "Notifier",
        "pyinotify_wm",
        "handler",
        "timeout",
        "INOTIFY_TIMEOUT",
        "configparser",
        "SafeConfigParser",
        "DEFAULT_CONFIG",
        "os",
        "path",
        "join",
        "config_folder",
        "config",
        "read",
        "config_file",
        "param",
        "config",
        "get",
        "CONFIG_SECTION_DEFAULT",
        "param",
        "param",
        "config",
        "get",
        "CONFIG_SECTION_DEFAULT",
        "param",
        "param",
        "config",
        "get",
        "CONFIG_SECTION_DEFAULT",
        "param",
        "lower",
        "param",
        "value",
        "config",
        "CONFIG_SECTION_DEFAULT",
        "value",
        "config",
        "write",
        "open",
        "config_file",
        "getConfigInt",
        "CONFIG_WINDOW_WIDTH",
        "getConfigInt",
        "CONFIG_WINDOW_HEIGHT",
        "Interface",
        "resize",
        "request_size",
        "getConfigBool",
        "CONFIG_WINDOW_FULLSCREEN",
        "modeFullscreen",
        "fullscreen",
        "show",
        "imagepath",
        "imagepath",
        "openImage",
        "imagepath",
        "current_image",
        "getFolder",
        "inotifyAdd",
        "current_folder",
        "readFolder",
        "current_folder",
        "setCurrentImagePosition",
        "start",
        "current_image",
        "getSize",
        "getFullscreen",
        "setConfig",
        "CONFIG_WINDOW_WIDTH",
        "width",
        "setConfig",
        "CONFIG_WINDOW_HEIGHT",
        "height",
        "setConfig",
        "CONFIG_WINDOW_FULLSCREEN",
        "fullscreen",
        "saveConfig",
        "close",
        "path",
        "pyinotify_wm",
        "add_watch",
        "path",
        "pyinotify_mask",
        "rec",
        "path",
        "pyinotify_wdd",
        "path",
        "pyinotify_wm",
        "rm_watch",
        "pyinotify_wdd",
        "path",
        "openNearImage",
        "OPEN_NEXT",
        "openNearImage",
        "OPEN_PREV",
        "open_type",
        "current_image",
        "getName",
        "current_image",
        "getFolder",
        "filename",
        "files_in_folder",
        "next",
        "os",
        "path",
        "join",
        "current_folder",
        "filename",
        "position",
        "filename",
        "current_name",
        "os",
        "path",
        "join",
        "current_folder",
        "filename",
        "position",
        "position",
        "open_type",
        "OPEN_PREV",
        "prev_image",
        "openUpperFolder",
        "open_type",
        "prev_image",
        "inotifyRemove",
        "current_folder",
        "inotifyAdd",
        "os",
        "path",
        "dirname",
        "prev_image",
        "open_type",
        "OPEN_NEXT",
        "next_image",
        "openUpperFolder",
        "open_type",
        "next_image",
        "inotifyRemove",
        "current_folder",
        "inotifyAdd",
        "os",
        "path",
        "dirname",
        "next_image",
        "open_type",
        "OPEN_NEXT",
        "next_image",
        "openImage",
        "next_image",
        "next_position",
        "openImage",
        "current_image",
        "open_type",
        "OPEN_PREV",
        "prev_image",
        "openImage",
        "prev_image",
        "prev_position",
        "openImage",
        "current_image",
        "get",
        "os",
        "path",
        "dirname",
        "current_image",
        "getFolder",
        "os",
        "path",
        "basename",
        "current_image",
        "getFolder",
        "readFolder",
        "folder",
        "get",
        "OPEN_PREV",
        "files",
        "reverse",
        "filename",
        "files",
        "filename",
        "current_folder_name",
        "next",
        "os",
        "path",
        "join",
        "folder",
        "filename",
        "os",
        "path",
        "isdir",
        "candidate_path",
        "readFolder",
        "candidate_path",
        "len",
        "el_files",
        "el_files",
        "get",
        "OPEN_NEXT",
        "os",
        "path",
        "join",
        "candidate_path",
        "el_files",
        "position",
        "element",
        "get",
        "OPEN_NEXT",
        "get",
        "OPEN_PREV",
        "len",
        "files_in_folder",
        "element",
        "position",
        "path",
        "position",
        "IWImage",
        "path",
        "position",
        "img",
        "setPosition",
        "position",
        "img",
        "ext",
        "ext",
        "lower",
        "SUPPORTED_STATIC",
        "ext",
        "lower",
        "SUPPORTED_ANIMATION",
        "folder",
        "include_folders",
        "os",
        "listdir",
        "folder",
        "include_folders",
        "filename",
        "all_files",
        "filename",
        "os",
        "path",
        "join",
        "folder",
        "filename",
        "os",
        "path",
        "isdir",
        "filepath",
        "filename",
        "lower",
        "f_lower",
        "folders",
        "folders",
        "f_lower",
        "append",
        "filename",
        "filename",
        "natsorted",
        "folders",
        "keys",
        "filename",
        "all_files",
        "filename",
        "os",
        "path",
        "splitext",
        "filename",
        "isSupportedExtension",
        "ext",
        "filename",
        "lower",
        "f_lower",
        "valid_files",
        "valid_files",
        "f_lower",
        "append",
        "filename",
        "filename",
        "natsorted",
        "valid_files",
        "keys",
        "el",
        "folders_keys",
        "folders",
        "el",
        "fls",
        "sort",
        "sorted_files",
        "extend",
        "fls",
        "el",
        "valid_files_keys",
        "valid_files",
        "el",
        "fls",
        "sort",
        "sorted_files",
        "extend",
        "fls",
        "sorted_files",
        "filename",
        "files_in_folder",
        "filename",
        "current_image",
        "getName",
        "current_image",
        "setPosition",
        "position",
        "position",
        "len",
        "files_in_folder",
        "path",
        "os",
        "path",
        "dirname",
        "path",
        "readFolder",
        "current_folder",
        "updateFolderData",
        "path",
        "os",
        "path",
        "basename",
        "path",
        "filename",
        "files_in_folder",
        "files_in_folder",
        "remove",
        "filename",
        "updateFolderData",
        "setCurrentImagePosition",
        "fillInfo",
        "folder",
        "len",
        "os",
        "listdir",
        "folder",
        "args",
        "kwargs",
        "ImageViewer",
        "args",
        "kwargs",
        "iw"
    ],
    "literals": [
        "'DEFAULT'",
        "'Preferences'",
        "'Window_width'",
        "'Window_height'",
        "'Window_fullscreen'",
        "'100'",
        "'100'",
        "'False'",
        "'.png'",
        "'.jpg'",
        "'.jpeg'",
        "'.bmp'",
        "'.gif'",
        "'config.txt'",
        "'true'",
        "'w'",
        "'.'",
        "'.'"
    ],
    "variables": [
        "OPEN_NEXT",
        "OPEN_PREV",
        "CONFIG_SECTION_DEFAULT",
        "CONFIG_SECTION_PREFS",
        "CONFIG_WINDOW_WIDTH",
        "CONFIG_WINDOW_HEIGHT",
        "CONFIG_WINDOW_FULLSCREEN",
        "DEFAULT_CONFIG",
        "SUPPORTED_STATIC",
        "SUPPORTED_ANIMATION",
        "ANIMATION_RATE",
        "ANIMATION_DELAY",
        "INOTIFY_TIMEOUT",
        "image_viewer",
        "path",
        "position",
        "_",
        "name",
        "folder",
        "pixbuf",
        "size",
        "is_resizable",
        "error_loading",
        "pixbuf",
        "size",
        "is_resizable",
        "error_loading",
        "pixbuf",
        "size",
        "is_resizable",
        "error_loading",
        "position",
        "config_folder",
        "current_image",
        "files_in_folder",
        "pyinotify_wm",
        "pyinotify_mask",
        "handler",
        "pyinotify_notifier",
        "pyinotify_wdd",
        "config",
        "config_file",
        "param",
        "request_size",
        "fullscreen",
        "current_image",
        "current_folder",
        "files_in_folder",
        "width",
        "height",
        "fullscreen",
        "pyinotify_wdd",
        "current_name",
        "current_folder",
        "next",
        "next_image",
        "prev_image",
        "position",
        "next_image",
        "next_position",
        "next",
        "prev_image",
        "prev_position",
        "prev_image",
        "prev_position",
        "next_image",
        "next_position",
        "current_image",
        "current_image",
        "folder",
        "current_folder_name",
        "files",
        "next",
        "element",
        "next",
        "candidate_path",
        "el_files",
        "files_in_folder",
        "position",
        "element",
        "position",
        "position",
        "position",
        "img",
        "all_files",
        "folders",
        "folders_keys",
        "filepath",
        "f_lower",
        "folders",
        "f_lower",
        "folders_keys",
        "valid_files",
        "valid_files_keys",
        "_",
        "ext",
        "f_lower",
        "valid_files",
        "f_lower",
        "valid_files_keys",
        "sorted_files",
        "fls",
        "fls",
        "position",
        "current_folder",
        "files_in_folder",
        "filename",
        "iw"
    ],
    "comments": [
        "!/usr/bin/env python3",
        "60 FPS (too high?)",
        "Keep this number low",
        "Inotify Handler",
        "file moved from the folder",
        "file moved in the folder",
        "IWImage",
        "Image Viewer",
        "Inotify",
        "save last window size",
        "save config",
        "Go to previous folder / next folder",
        "set inotify",
        "set inotify",
        "Set image and open",
        "open with interface",
        "open with interface",
        "Get all the files/folders",
        "Reverse the array if get prev",
        "Get the first valid element",
        "check if the element is valid",
        "read folder",
        "get element position",
        "element is the new image,",
        "position is its position in the folder",
        "Compose",
        "TODO: better, this is kinda lazy",
        "update interface",
        "update interface"
    ],
    "docstrings": [
        "'''\n  def scaleAnimation(self, width, height):\n    # Get all pixbuf and resize\n    delay = GLib.TimeVal()\n    # Stop loop\n    print(self.pixbuf.list_properties())\n    #self.pixbuf.set_loop(False)\n    pixiter = self.pixbuf.get_iter(delay)\n    all_pbuf = []\n    keep = True\n    while keep:\n      frame_pixbuf = pixiter.get_pixbuf()\n      pbuf = self.scaleAnimationFrame(frame_pixbuf, width, height)\n      all_pbuf.append(pbuf)\n      #delay_ms = pixiter.get_delay() * 1000\n      delay_ms = ANIMATION_DELAY * 1000000\n      delay.add(delay_ms)\n      r = pixiter.advance(delay)\n      print(r) # DEBUG\n    #self.pixbuf.set_loop(True)\n    # Compose new animation\n    new_animation = GdkPixbuf.PixbufSimpleAnim.new(width, height, ANIMATION_RATE)\n    for pbuf in all_pbuf:\n      new_animation.add_frame(pbuf)\n    new_animation.set_loop(True)\n    return new_animation\n  \n  def scaleAnimationFrame(self, pixbuf, width, height):\n    return pixbuf.scale_simple(width, height, GdkPixbuf.InterpType.BILINEAR)\n  '''",
        "'''\n        # Note: I do not consider files while reading the upper folder\n        # because I read only files on the same level\n        # i.e. files in the folders ~/Pictures/ and ~/Documents\n        # are on the same level, pictures in\n        # ~/Pictures and ~/Pictures/ex1 are not.\n        else:\n          # reorder the files correctly\n          if get == OPEN_PREV:\n            files.reverse()\n          self.files_in_folder = self.removeFoldersFromArray(files)\n          element = candidate_path\n        break\n        '''",
        "'''\n  def removeFoldersFromArray(self, files):\n    # NOTE: the input must be in the format given by\n    # self.readFolder\n    new_array = []\n    for el in files:\n      if os.path.isdir(el):\n        break\n      else:\n        new_array.append(el)\n    return new_array\n  '''"
    ],
    "functions": [
        "process_IN_CREATE",
        "process_IN_DELETE",
        "process_IN_MOVED_FROM",
        "process_IN_MOVED_IN",
        "setError",
        "load",
        "loadStaticImage",
        "loadAnimation",
        "isAnimation",
        "isStatic",
        "isError",
        "scale",
        "isResizable",
        "getSize",
        "getFilepath",
        "getName",
        "getPixbuf",
        "getFolder",
        "getFolderName",
        "setPosition",
        "getPosition",
        "loadConfig",
        "getConfig",
        "getConfigInt",
        "getConfigBool",
        "setConfig",
        "saveConfig",
        "setupInterface",
        "start",
        "close",
        "stop",
        "inotifyAdd",
        "inotifyRemove",
        "openNextImage",
        "openPrevImage",
        "openNearImage",
        "openUpperFolder",
        "openImage",
        "isSupportedExtension",
        "readFolder",
        "setCurrentImagePosition",
        "getTotImages",
        "addToFilelist",
        "removeFromFilelist",
        "updateFolderData",
        "folderIsEmpty"
    ],
    "classes": [
        "InotifyEventHandler",
        "IWImage",
        "ImageViewer"
    ]
}