{
    "identifiers": [
        "test",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Test",
        "application",
        "Constants",
        "parser",
        "Parser",
        "parser",
        "VALID_COMMAND",
        "INVALID_COMMAND",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_ADD",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_ADD",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_DELETE",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_DELETE",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_EDIT",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_EDIT",
        "Test",
        "input1",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_UNDO",
        "Test",
        "input1",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_REDO",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_MARK",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_MARK",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_UNMARK",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_UNMARK",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_ENQUIREPATH",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_ENQUIREPATH",
        "Test",
        "input1",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_HELP",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_SHOW",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_SHOW",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_SEARCH",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_SEARCH",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_ADD",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_SEARCH",
        "Test",
        "input1",
        "input2",
        "assertFalse",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_ADD",
        "assertFalse",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_SEARCH",
        "assertTrue",
        "VALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_INVALID",
        "assertTrue",
        "VALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_INVALID",
        "Test",
        "input1",
        "input2",
        "assertFalse",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_ADD",
        "assertFalse",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_SEARCH",
        "assertTrue",
        "VALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_INVALID",
        "assertTrue",
        "VALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_INVALID",
        "Test",
        "input1",
        "input2",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_ADD",
        "assertTrue",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_SEARCH",
        "Test",
        "input1",
        "input2",
        "assertFalse",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_MARK",
        "assertFalse",
        "INVALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_SHOW",
        "assertTrue",
        "VALID_COMMAND",
        "parser",
        "getCommand",
        "input1",
        "Constants",
        "COMMAND_INVALID",
        "assertTrue",
        "VALID_COMMAND",
        "parser",
        "getCommand",
        "input2",
        "Constants",
        "COMMAND_INVALID"
    ],
    "literals": [
        "\"Valid Command\"",
        "\"Invalid command\"",
        "\"add task1\"",
        "\"create task2\"",
        "\"delete task1\"",
        "\"del task2\"",
        "\"edit task1\"",
        "\"e task2\"",
        "\"undo\"",
        "\"redo\"",
        "\"mark task1\"",
        "\"m task2\"",
        "\"unmark task1\"",
        "\"um task2\"",
        "\"enquirepath\"",
        "\"en\"",
        "\"help\"",
        "\"show task1\"",
        "\"display task2\"",
        "\"search task1\"",
        "\"find task2\"",
        "\"add task1\"",
        "\"find task2\"",
        "\"ad d task1\"",
        "\"sear task2\"",
        "\"cr3ate task1\"",
        "\"searchhh task2\"",
        "\" add task1\"",
        "\"    find task2\"",
        "\"text mark task1\"",
        "\"word show task2\""
    ],
    "variables": [],
    "comments": [
        "@@author A0124127R",
        "\"add\" and command variations",
        "\"delete\" and command variations",
        "\"edit\" and command variations",
        "\"undo\"",
        "\"redo\"",
        "\"mark\" and command variations",
        "\"unmark\" and command variations",
        "\"enquirepath\" and command variations",
        "\"help\"",
        "\"show\" and command variations",
        "\"show\" and command variations",
        "input commands is within the list",
        "input command is incomplete / has spaces in between",
        "input command contains incorrect characters",
        "input commands has white spaces before text",
        "input commands has text before commands"
    ],
    "docstrings": [
        "* Tests command inputs and their variations(if any),\n\t * and checks if the command given is accurate",
        "* Boundary Test Cases for getCommand()",
        "* Fails because command is only registered if it's exact",
        "* Fails due to incorrect command words",
        "* Fails as commands are only registered as the first word"
    ],
    "functions": [
        "testGetCommand_Add",
        "testGetCommand_Delete",
        "testGetCommand_Edit",
        "testGetCommand_Undo",
        "testGetCommand_Redo",
        "testGetCommand_Mark",
        "testGetCommand_Unmark",
        "testGetCommand_EnquirePath",
        "testGetCommand_Help",
        "testGetCommand_Show",
        "testGetCommand_Search",
        "testGetCommand_CommandBoundary1",
        "testGetCommand_CommandBoundary2",
        "testGetCommand_CommandBoundary3",
        "testGetCommand_CommandBoundary4",
        "testGetCommand_CommandBoundary5"
    ],
    "classes": [
        "CommandParserTest"
    ]
}