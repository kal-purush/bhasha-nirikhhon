{
    "identifiers": [
        "GitRepository",
        "fs",
        "chai",
        "path",
        "chai",
        "require",
        "require",
        "process",
        "path",
        "done",
        "fs",
        "execSync",
        "execSync",
        "execSync",
        "exec",
        "err",
        "stdout",
        "stderr",
        "stdout",
        "stderr",
        "done",
        "describe",
        "before",
        "done",
        "tempDir",
        "fs",
        "tempDir",
        "process",
        "tempDir",
        "process",
        "initializeRepository",
        "done",
        "after",
        "tempDir",
        "process",
        "currentDirectory",
        "process",
        "GitRepository",
        "describe",
        "beforeEach",
        "done",
        "initializeRepository",
        "done",
        "it",
        "done",
        "unInitializeRepository",
        "expect",
        "git",
        "done",
        "it",
        "done",
        "expect",
        "git",
        "done",
        "describe",
        "it",
        "done",
        "done",
        "describe",
        "it",
        "done",
        "done",
        "it",
        "done",
        "done",
        "describe",
        "it",
        "done",
        "done",
        "describe",
        "it",
        "done",
        "done",
        "it",
        "done",
        "done",
        "it",
        "done",
        "done"
    ],
    "literals": [
        "\"../src/lib/repositories/GitRepository\"",
        "'fs'",
        "'del'",
        "'chai'",
        "'path'",
        "'child_process'",
        "'child_process'",
        "string",
        "\"../temp\"",
        "\"package.json\"",
        "\"0.0.1\"",
        "'  '",
        "'\\n'",
        "\"git init\"",
        "\"git add package.json\"",
        "''",
        "'git commit -m \"test commit\"'",
        "\"package.json\"",
        "\".git\"",
        "'GitRepository Test cases'",
        "\"changing Directory to: \"",
        "\"changing Directory back to: \"",
        "'isValid()'",
        "'should throe error if not a git repository'",
        "'should resolve to true if valid git repository'",
        "'add()'",
        "'should add filenames provided'",
        "'commit()'",
        "'should commit any files marked for commit'",
        "'should commit with right commit message'",
        "'tag()'",
        "'should sucessfully create tag for the repository'",
        "'push()'",
        "'should reject if no remote repository configured'",
        "'should resolve successfully if a remote repository is configured and the changes are pushed'",
        "'should allow to push tags only'"
    ],
    "variables": [
        "expect",
        "execSync",
        "exec",
        "currentDirectory",
        "tempDir",
        "git"
    ],
    "comments": [
        "<reference path=\"../typings/tsd.d.ts\" />"
    ],
    "docstrings": [],
    "functions": [
        "initializeRepository",
        "unInitializeRepository"
    ],
    "classes": []
}