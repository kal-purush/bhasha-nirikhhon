{
    "identifiers": [
        "ko",
        "value",
        "original",
        "value",
        "original",
        "original",
        "value",
        "original",
        "value",
        "original",
        "value",
        "original",
        "original",
        "value",
        "value",
        "original",
        "value",
        "original",
        "original",
        "value",
        "original",
        "value",
        "v",
        "v",
        "value",
        "original",
        "value",
        "original",
        "original",
        "value",
        "original",
        "value",
        "v",
        "i",
        "v",
        "original",
        "i",
        "validatorFactory",
        "value",
        "ko",
        "ko",
        "ko",
        "validators",
        "i",
        "v",
        "i",
        "v",
        "i",
        "error",
        "error",
        "ko",
        "validators",
        "i",
        "v",
        "i",
        "v",
        "i",
        "v",
        "i",
        "observable",
        "errorMessage",
        "observable",
        "validating",
        "observable",
        "validatorFactory",
        "value",
        "validators",
        "validatorFactory",
        "observable",
        "observable",
        "observable",
        "value",
        "ko",
        "re",
        "value",
        "errorMessages",
        "value",
        "ko",
        "value",
        "value",
        "errorMessages",
        "minLength",
        "value",
        "ko",
        "value",
        "value",
        "minLength",
        "format",
        "errorMessages",
        "minLength",
        "min",
        "max",
        "value",
        "ko",
        "value",
        "value",
        "min",
        "format",
        "errorMessages",
        "min",
        "value",
        "max",
        "format",
        "errorMessages",
        "max",
        "service",
        "parameters",
        "value",
        "ko",
        "ko",
        "value",
        "newValue",
        "validating",
        "service",
        "newValue",
        "result",
        "errorMessage",
        "result",
        "validating",
        "validating",
        "errorMessage",
        "validating",
        "other",
        "value",
        "ko",
        "value",
        "other",
        "errorMessages",
        "f",
        "a",
        "f",
        "a"
    ],
    "literals": [
        "\"knockout\"",
        "\"Wrong e-mail format\"",
        "\"Required field\"",
        "\"At least {0} characters long\"",
        "\"At least {0}\"",
        "\"At most {0}\"",
        "\"The two fields must be identical\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"\"",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "\"{0}\""
    ],
    "variables": [
        "errorMessages",
        "observable",
        "validators",
        "errorMessage",
        "v",
        "i",
        "error",
        "validating",
        "v",
        "i",
        "re",
        "errorMessage",
        "validating"
    ],
    "comments": [
        "Copyright (C) 2015 Sidoine De Wispelaere\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION\nOF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN\nCONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.",
        "An object whose value may have changed since an initial value",
        "Whether the object value changed or not",
        "Utility function that converts a string to a date and checks that the value is different\n * @param {Date} value The current value\n * @param {string} original The original value, that is converted to a Date",
        "Utility function that checks that an object has changed or that the object was originaly null but is not anymore, or that the\n * object is not null but originaly was null.",
        "Checks if an array of Changeable has changed",
        "Checks if an array of values has changed",
        "A validator.",
        "The error message. If null, there is no error.",
        "(optional) true while the validator is not ready (e.g. asynchronous call).\n     * You should listen to this observable before reading errorMessage",
        "An extension to KnockoutObservable to add validators",
        "If there is an error it is not null",
        "If the state is unknown (asynchronous call)",
        "Add a new validator factory",
        "Create a ValidableObservable",
        "A validator factory that checks that the value has the format of an e-mail",
        "A validator factory that checks that the value is not null or empty",
        "Creates a validator factory that checks that a string has a minimum length",
        "Creates a validator factory that checks that a number has a value between two limits",
        "Creates a validator factory that calls a service to check if a value is valid",
        "Creates a validator factory that checks that the string is equal to another observable string"
    ],
    "docstrings": [],
    "functions": [
        "hasDateChanged",
        "hasObjectChanged",
        "hasArrayOfObjectsChanged",
        "hasArrayChanged",
        "validableObservable",
        "isEmail",
        "isRequired",
        "hasMinLength",
        "isInRange",
        "validateService",
        "areSame",
        "format"
    ],
    "classes": []
}