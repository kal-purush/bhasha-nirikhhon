{
    "identifiers": [
        "os",
        "unittest",
        "lsst",
        "pex",
        "policy",
        "pexPolicy",
        "lsst",
        "obs",
        "test",
        "TestMapper",
        "lsst",
        "utils",
        "lsst",
        "utils",
        "tests",
        "utilsTests",
        "unittest",
        "TestCase",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "os",
        "path",
        "join",
        "mapperRoot",
        "actualPolicyPath",
        "testData",
        "TestMapper",
        "root",
        "mapperRoot",
        "os",
        "path",
        "join",
        "assertTrue",
        "os",
        "path",
        "exists",
        "repoPolicyPath",
        "pexPolicy",
        "Policy_createPolicy",
        "actualPolicyPath",
        "repoPolicy",
        "get",
        "mapper",
        "mappings",
        "template",
        "assertEqual",
        "template",
        "mapperTemplate",
        "os",
        "path",
        "join",
        "pexPolicy",
        "Policy_createPolicy",
        "policyPath",
        "policy",
        "get",
        "mapper",
        "mappings",
        "template",
        "assertEqual",
        "template",
        "mapperTemplate",
        "utilsTests",
        "init",
        "suites",
        "unittest",
        "makeSuite",
        "PolicyTestCase",
        "suites",
        "unittest",
        "makeSuite",
        "utilsTests",
        "MemoryTestCase",
        "unittest",
        "TestSuite",
        "suites",
        "shouldExit",
        "utilsTests",
        "run",
        "suite",
        "shouldExit",
        "run"
    ],
    "literals": [
        "'data'",
        "'policyInRepo'",
        "'data'",
        "'policyInRepo'",
        "'_policy.paf'",
        "'data'",
        "'policyInRepo1/a'",
        "'data'",
        "'policyInRepo1'",
        "'a'",
        "'_parent'",
        "'_policy.paf'",
        "'data'",
        "'policyInRepo2/a'",
        "'data'",
        "'policyInRepo2'",
        "'a'",
        "'_parent'",
        "'_parent'",
        "'_policy.paf'",
        "'data'",
        "'policyInRepo'",
        "'_policy.paf'",
        "'exposures.raw.template'",
        "'raw'",
        "'policy'",
        "'testMapper.paf'",
        "'exposures.postISRCCD.template'",
        "'postISRCCD'",
        "'__main__'"
    ],
    "variables": [
        "testData",
        "mapper",
        "repoPolicyPath",
        "repoPolicy",
        "template",
        "mapperTemplate",
        "policyPath",
        "policy",
        "template",
        "mapperTemplate",
        "suites"
    ],
    "comments": [
        "!/usr/bin/env python",
        "",
        "LSST Data Management System",
        "Copyright 2015 LSST Corporation.",
        "",
        "This product includes software developed by the",
        "LSST Project (http://www.lsst.org/).",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the LSST License Statement and",
        "the GNU General Public License along with this program.  If not,",
        "see <http://www.lsstcorp.org/LegalNotices/>.",
        "",
        "Run a simple test case to verify that although the package's policy was overloaded with some",
        "values, other values specified in the policy file in the package are loaded."
    ],
    "docstrings": [
        "\"\"\"Tests related to the use of the policy file in Butler/butlerUtils.\"\"\"",
        "\"\"\"Verify that the template value specified in the policy file in the repository\n        overrides the template value set in the policy file in the package.\n        Checks the _parent symlink chain works.\n        Checks that values not specified in the local _policy file are set with those of the package's\n        _policy file.\n        \"\"\""
    ],
    "functions": [
        "testInRepoPolicyOverrides",
        "suite",
        "run"
    ],
    "classes": [
        "PolicyTestCase"
    ]
}