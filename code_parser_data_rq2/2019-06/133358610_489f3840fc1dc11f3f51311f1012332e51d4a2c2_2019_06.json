{
    "identifiers": [
        "downloadUtils",
        "drive",
        "require",
        "dlVars",
        "constants",
        "tar",
        "require",
        "constants",
        "Aria2",
        "ariaOptions",
        "callback",
        "err",
        "aria2",
        "callback",
        "err",
        "callback",
        "err",
        "callback",
        "gid",
        "aria2",
        "keys",
        "callback",
        "keys",
        "callback",
        "gid",
        "aria2",
        "keys",
        "callback",
        "keys",
        "callback",
        "gid",
        "aria2",
        "keys",
        "callback",
        "keys",
        "callback",
        "gid",
        "aria2",
        "keys",
        "callback",
        "keys",
        "gid",
        "callback",
        "err",
        "file",
        "aria2",
        "gid",
        "err",
        "files",
        "err",
        "callback",
        "err",
        "downloadUtils",
        "files",
        "filePath",
        "callback",
        "filePath",
        "callback",
        "gid",
        "callback",
        "err",
        "message",
        "filename",
        "filesize",
        "aria2",
        "gid",
        "err",
        "res",
        "err",
        "callback",
        "err",
        "err",
        "res",
        "isActive",
        "downloadUtils",
        "parseFloat",
        "res",
        "parseFloat",
        "res",
        "parseFloat",
        "res",
        "res",
        "isActive",
        "statusMessage",
        "callback",
        "statusMessage",
        "statusMessage",
        "statusMessage",
        "gid",
        "callback",
        "err",
        "isMetadata",
        "aria2",
        "gid",
        "err",
        "res",
        "err",
        "callback",
        "err",
        "err",
        "res",
        "callback",
        "callback",
        "gid",
        "callback",
        "err",
        "fileSize",
        "aria2",
        "gid",
        "err",
        "res",
        "err",
        "callback",
        "err",
        "res",
        "callback",
        "res",
        "err",
        "url",
        "filePath",
        "fileName",
        "fileSize",
        "dlDetails",
        "dlVars",
        "filePath",
        "fileSize",
        "callback",
        "dlDetails",
        "downloadUtils",
        "filePath",
        "constants",
        "fileName",
        "dlDetails",
        "filePath",
        "realFilePath",
        "driveUploadFile",
        "realFilePath",
        "fileName",
        "fileSize",
        "callback",
        "diskspace",
        "constants",
        "err",
        "res",
        "err",
        "err",
        "driveUploadFile",
        "realFilePath",
        "fileName",
        "fileSize",
        "callback",
        "res",
        "fileSize",
        "fileName",
        "tar",
        "fileName",
        "destName",
        "err",
        "size",
        "err",
        "callback",
        "err",
        "driveUploadFile",
        "realFilePath",
        "destName",
        "size",
        "callback",
        "driveUploadFile",
        "realFilePath",
        "fileName",
        "fileSize",
        "callback",
        "driveUploadFile",
        "realFilePath",
        "fileName",
        "fileSize",
        "callback",
        "filePath",
        "fileName",
        "fileSize",
        "callback",
        "drive",
        "filePath",
        "constants",
        "err",
        "url",
        "callback",
        "err",
        "url",
        "filePath",
        "fileName",
        "fileSize",
        "gid",
        "callback",
        "aria2",
        "gid",
        "callback",
        "uri",
        "callback",
        "err",
        "gid",
        "aria2",
        "uri",
        "constants",
        "gid",
        "callback",
        "gid",
        "err",
        "callback",
        "err"
    ],
    "literals": [
        "'./utils'",
        "'../fs-walk'",
        "'aria2'",
        "'./vars.js'",
        "'../.constants'",
        "'../drive/tar'",
        "'diskspace'",
        "'localhost'",
        "'/jsonrpc'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'status'",
        "'totalLength'",
        "'completedLength'",
        "'downloadSpeed'",
        "'files'",
        "string",
        "'ERROR:'",
        "'status'",
        "'active'",
        "'totalLength'",
        "'completedLength'",
        "'downloadSpeed'",
        "'files'",
        "'No active downloads.'",
        "string",
        "string",
        "'followedBy'",
        "string",
        "'ERROR:'",
        "'followedBy'",
        "string",
        "string",
        "'totalLength'",
        "string",
        "'totalLength'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'/'",
        "string",
        "'uploadFile: diskspace: '",
        "'free'",
        "'Starting archival'",
        "'.tar'",
        "string",
        "'Archive complete'",
        "'.tar'",
        "'uploadFile: Not enough space, uploading without archiving'",
        "string",
        "string",
        "string",
        "string",
        "'uploadFile: deleting'",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "Aria2",
        "diskspace",
        "ariaOptions",
        "aria2",
        "filePath",
        "isActive",
        "statusMessage",
        "fileName",
        "realFilePath",
        "destName"
    ],
    "comments": [
        "If there is only one file, do not archive",
        "Could not archive, so upload normally"
    ],
    "docstrings": [
        "* Get a human-readable message about the status of the given download. Uses\n * HTML markup. Filename and filesize is always present if the download exists,\n * message is only present if the download is active.\n * @param {string} gid The Aria2 GID of the download\n * @param {function} callback The function to call on completion. (err, message, filename, filesize).",
        "* Sets the upload flag, uploads the given path to Google Drive, then calls the callback,\n * cleans up the download directory, and unsets the download and upload flags.\n * If a directory  is given, and isTar is set in vars, archives the directory to a tar\n * before uploading. Archival fails if fileSize is more than or equal to half the free\n * space on disk.\n * @param {dlVars.DlVars} dlDetails The dlownload details for the current download\n * @param {string} filePath The path of the file or directory to upload\n * @param {number} fileSize The size of the file\n * @param {function} callback The function to call with the link to the uploaded file"
    ],
    "functions": [
        "openWebsocket",
        "setOnDownloadStart",
        "setOnDownloadStop",
        "setOnDownloadComplete",
        "setOnDownloadError",
        "getAriaFilePath",
        "getStatus",
        "isDownloadMetadata",
        "getFileSize",
        "uploadFile",
        "driveUploadFile",
        "stopDownload",
        "addUri"
    ],
    "classes": []
}