{
    "identifiers": [
        "sys",
        "datetime",
        "datetime",
        "date",
        "timedelta",
        "requests",
        "pyowm",
        "OWM",
        "timeutils",
        "forecastio",
        "weather_utils",
        "desc_code",
        "wind_direction",
        "cal_cloudbase",
        "weather_utils",
        "mph_to_kmph",
        "windscale",
        "get_api_key",
        "weather_alerts",
        "weather_alerts",
        "get_api_key",
        "forecastio",
        "load_forecast",
        "darksky_api",
        "lat",
        "lng",
        "forecast",
        "currently",
        "fc_cur",
        "dewPoint",
        "cal_cloudbase",
        "fc_cur",
        "temperature",
        "dewpoint",
        "dewpoint",
        "lat",
        "lng",
        "get_api_key",
        "forecastio",
        "load_forecast",
        "darksky_api",
        "lat",
        "lng",
        "units",
        "forecast",
        "alerts",
        "alerts",
        "format",
        "alerts",
        "forecast",
        "daily",
        "by_day",
        "summary",
        "datetime",
        "datetime",
        "today",
        "aday",
        "by_day",
        "data",
        "day",
        "date",
        "strftime",
        "weekday",
        "sum",
        "aday",
        "summary",
        "tempMin",
        "aday",
        "temperatureMin",
        "tempMax",
        "aday",
        "temperatureMax",
        "percipcnt",
        "aday",
        "precipProbability",
        "format",
        "aday",
        "weekday",
        "timedelta",
        "days",
        "get_api_key",
        "OWM",
        "owm_api",
        "owm_obj",
        "weather_at_coords",
        "lat",
        "lng",
        "owm_obj",
        "is_API_online",
        "sys",
        "exit",
        "format",
        "obs_lst",
        "get_reception_time",
        "timeformat",
        "obs_lst",
        "get_location",
        "get_name",
        "obs_lst",
        "get_weather",
        "wind_direction",
        "forcast",
        "get_wind",
        "round",
        "mph_to_kmph",
        "forcast",
        "get_wind",
        "get",
        "wind_kmph",
        "windscale",
        "wind_kmph",
        "weather_current_darksky",
        "format",
        "forcast",
        "get_clouds",
        "format",
        "cloudbase",
        "format",
        "forcast",
        "get_rain",
        "get",
        "format",
        "wind_dir",
        "winds",
        "format",
        "forcast",
        "get_humidity",
        "format",
        "forcast",
        "get_pressure",
        "get",
        "forcast",
        "get_pressure",
        "get",
        "format",
        "forcast",
        "get_temperature",
        "unit",
        "get",
        "forcast",
        "get_temperature",
        "unit",
        "get",
        "forcast",
        "get_temperature",
        "unit",
        "get",
        "format",
        "dewpoint",
        "forcast",
        "get_detailed_status",
        "desc_code",
        "forcast",
        "get_weather_code",
        "format",
        "code_means",
        "weather_aviation",
        "weather_aviation",
        "city_name",
        "owm_obj",
        "three_hours_forecast",
        "city_name",
        "format",
        "weather_fcast",
        "when_starts",
        "weather_fcast",
        "when_ends",
        "weather_fcast",
        "get_forecast",
        "forecasts",
        "actualize",
        "format",
        "forecasts",
        "get_reception_time",
        "timeutils",
        "tomorrow",
        "format",
        "weather_fcast",
        "get_weather_at",
        "t",
        "get_detailed_status",
        "format",
        "weather_fcast",
        "will_have_rain",
        "format",
        "weather_fcast",
        "will_have_fog",
        "format",
        "weather_fcast",
        "will_have_clouds",
        "format",
        "weather_fcast",
        "will_have_sun",
        "datetime",
        "datetime",
        "now",
        "date",
        "aweather",
        "get_reference_time",
        "aweather",
        "forecasts",
        "adate",
        "split",
        "adate",
        "date_arr",
        "dtsplt",
        "date_set",
        "weather_fcast",
        "most_hot",
        "format",
        "hott",
        "get_reference_time",
        "hott",
        "get_detailed_status",
        "weather_fcast",
        "most_windy",
        "format",
        "winds",
        "get_reference_time",
        "winds",
        "get_detailed_status",
        "weather_fcast",
        "most_rainy",
        "rains",
        "format",
        "rains",
        "get_reference_time",
        "rains",
        "get_detailed_status",
        "weather_fcast",
        "most_humid",
        "format",
        "humid",
        "get_reference_time",
        "humid",
        "get_detailed_status",
        "weather_fcast",
        "most_snowy",
        "snows",
        "format",
        "snows",
        "get_reference_time",
        "snows",
        "get_detailed_status",
        "flag",
        "get_api_key",
        "checkwx_api",
        "requests",
        "get",
        "headers",
        "hdr",
        "json",
        "flag",
        "response",
        "flag",
        "requests",
        "get",
        "headers",
        "hdr",
        "json",
        "req",
        "requests",
        "get",
        "headers",
        "hdr",
        "json",
        "format",
        "req",
        "req",
        "req",
        "format",
        "req",
        "format",
        "req",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "low_clouds",
        "mid_clouds",
        "high_clouds",
        "format",
        "req",
        "req",
        "req",
        "req",
        "flag",
        "requests",
        "get",
        "headers",
        "hdr",
        "json",
        "format",
        "req",
        "format",
        "req",
        "req",
        "req",
        "mph_to_kmph",
        "req",
        "wind_direction",
        "req",
        "format",
        "w_speed",
        "w_dir",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "req",
        "req",
        "req",
        "format",
        "low_clouds",
        "mid_clouds",
        "high_clouds",
        "format",
        "req",
        "req",
        "owm_obj",
        "station_day_history",
        "hist",
        "get_station_history",
        "owm_obj",
        "weather_history_at_place",
        "weather_current_owm"
    ],
    "literals": [
        "'pune'",
        "',in'",
        "'darksky'",
        "'darksky'",
        "'si'",
        "\"ALERTs: {}\"",
        "\"===========Daily Data=========\"",
        "\"Daily Summary: %s\"",
        "'%a'",
        "'{day}: {sum} Temp range: {tempMin} - {tempMax}C'",
        "'owm'",
        "\"OpenWeatherMap API is Not Online.\\n\"",
        "\"OpenWeatherMap Login Failed\"",
        "\"\\n################################\\n\"",
        "\"Weather Observation received at: {}\"",
        "'iso'",
        "'speed'",
        "\" kmph \"",
        "\"Current Cloud Coverage {}%\"",
        "\"Estimated Cloudbase height is {} meters.\"",
        "\"Current Rain volume in last 3 hours {} mm\"",
        "'3h'",
        "\"Current Wind Direction {} & Speed {}\"",
        "\"Current Humidity percentage {}%\"",
        "\"Current Atmospheric Pressure {} hPa and at sea-level {} hPa\"",
        "'press'",
        "'sea_level'",
        "\"Current Temperature {} C, Min_temperature: {}C & Max_temperature: {}C\"",
        "'celsius'",
        "'temp'",
        "'celsius'",
        "'temp_min'",
        "'celsius'",
        "'temp_max'",
        "\"Current DewPoint measured is {} C\"",
        "\" \"",
        "\"Current Weather Status : {}\"",
        "'taf'",
        "'metar'",
        "\"\\n###################################\\n\"",
        "\"--------- Weather forecast every 3 hours, for next 5 days -------\"",
        "\"Weather forecast starts: {} and ends: {}\"",
        "'iso'",
        "'iso'",
        "\"#\"",
        "\"Forecast reception time: {}\"",
        "'iso'",
        "\"24 hours weather from now: {}\"",
        "\"Today Rain forecast: {}\"",
        "\"Today Fog forecast: {}\"",
        "\"Today Cloud forecast: {}\"",
        "\"Today Sun forecast: {}\"",
        "\"#\"",
        "'iso'",
        "' '",
        "\"\\nNext 5Days, the Hottest period is {} and {}\"",
        "'iso'",
        "\"Next 5Days, most windy period is {} and {}\"",
        "'iso'",
        "\"Next 5Days, most rains around {}\"",
        "\"Next 5Days, Most humidity around {} and {}\"",
        "'iso'",
        "\"Next 5Days, most snow on {} and {}\"",
        "''",
        "'checkwx'",
        "'X-API-Key'",
        "'https://api.checkwx.com/station/vapo'",
        "'elevation'",
        "'data'",
        "'elevation'",
        "'meters'",
        "'metar'",
        "\"\\n----- Decoded METAR from nearest station ------\\n\"",
        "'https://api.checkwx.com/metar/vapo/decoded'",
        "'results'",
        "\"Pune(vapo) is NOT transmitting METAR now, getting from Mumbai\"",
        "'https://api.checkwx.com/metar/lat/18.5195694/lon/73.8553467/decoded?pretty=1'",
        "\"METAR from {}({}), observed at {}\"",
        "\"data\"",
        "\"station\"",
        "\"name\"",
        "\"data\"",
        "\"icao\"",
        "\"data\"",
        "\"observed\"",
        "\"RAW METAR: {}\"",
        "\"data\"",
        "\"raw_text\"",
        "\"The temperature is {}C and DewPoint is {}C\"",
        "\"data\"",
        "\"temperature\"",
        "\"celsius\"",
        "\"data\"",
        "\"dewpoint\"",
        "\"celsius\"",
        "\"The humidity is {}% & pressure is {}mb with visibility of {} meters.\"",
        "\"data\"",
        "\"humidity\"",
        "\"percent\"",
        "\"data\"",
        "\"barometer\"",
        "\"mb\"",
        "\"data\"",
        "\"visibility\"",
        "\"meters\"",
        "\"The cloud ceiling is at {}m and {}({})\"",
        "\"data\"",
        "\"ceiling\"",
        "\"meters_agl\"",
        "\"data\"",
        "\"ceiling\"",
        "\"text\"",
        "\"data\"",
        "\"ceiling\"",
        "\"code\"",
        "\"The sky conditions at level {}m is {}({})\"",
        "\"data\"",
        "\"clouds\"",
        "\"base_meters_agl\"",
        "\"data\"",
        "\"clouds\"",
        "\"text\"",
        "\"data\"",
        "\"clouds\"",
        "\"code\"",
        "\"and at level {}m is {}({})\"",
        "\"data\"",
        "\"clouds\"",
        "\"base_meters_agl\"",
        "\"data\"",
        "\"clouds\"",
        "\"text\"",
        "\"data\"",
        "\"clouds\"",
        "\"code\"",
        "\"and at level {}m is {}({})\"",
        "\"data\"",
        "\"clouds\"",
        "\"base_meters_agl\"",
        "\"data\"",
        "\"clouds\"",
        "\"text\"",
        "\"data\"",
        "\"clouds\"",
        "\"code\"",
        "\"{} {} {}\"",
        "\"Flight Conditions are {}({}) and category is {}\"",
        "\"data\"",
        "\"conditions\"",
        "\"text\"",
        "\"data\"",
        "\"conditions\"",
        "\"code\"",
        "\"data\"",
        "\"flight_category\"",
        "'taf'",
        "\"\\n--------- 12hours TAF Weather Forecast --------\\n\"",
        "'https://api.checkwx.com/taf/vapo/decoded?pretty=1'",
        "\"TAF Raw Text: {}\"",
        "\"data\"",
        "\"raw_text\"",
        "\"TAF weather forecast for {} from {} till {}\"",
        "\"data\"",
        "\"station\"",
        "\"name\"",
        "\"data\"",
        "\"timestamp\"",
        "\"issued\"",
        "\"data\"",
        "\"timestamp\"",
        "\"to\"",
        "\"data\"",
        "\"forecast\"",
        "\"wind\"",
        "\"speed_mph\"",
        "\"data\"",
        "\"forecast\"",
        "\"wind\"",
        "\"degrees\"",
        "'taf'",
        "\"Wind forecast are, speed {}kmph, direction {} & Visibility {} meters\"",
        "\"data\"",
        "\"forecast\"",
        "\"visibility\"",
        "\"meters\"",
        "\"The sky conditions at level {}m is {}({})\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"base_meters_agl\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"text\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"code\"",
        "\"and at level {}m is {}({})\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"base_meters_agl\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"text\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"code\"",
        "\"at level {}m is {}({})\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"base_meters_agl\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"text\"",
        "\"data\"",
        "\"forecast\"",
        "\"clouds\"",
        "\"code\"",
        "\"{} {} {}\"",
        "\"The forecast conditions are {}({})\"",
        "\"data\"",
        "\"forecast\"",
        "\"conditions\"",
        "\"text\"",
        "\"data\"",
        "\"forecast\"",
        "\"conditions\"",
        "\"code\"",
        "'Pune,in'",
        "\"__main__\""
    ],
    "variables": [
        "city_name",
        "lat",
        "lng",
        "darksky_api",
        "forecast",
        "fc_cur",
        "dewpoint",
        "darksky_api",
        "forecast",
        "alerts",
        "by_day",
        "weekday",
        "aday",
        "owm_api",
        "owm_obj",
        "obs_lst",
        "forcast_loc",
        "forcast",
        "wind_dir",
        "wind_kmph",
        "winds",
        "cloudbase",
        "dewpoint",
        "code_means",
        "weather_fcast",
        "forecasts",
        "t",
        "prsnt",
        "date_arr",
        "dtsplt",
        "date_set",
        "uniq_dates",
        "hott",
        "winds",
        "rains",
        "humid",
        "snows",
        "checkwx_api",
        "hdr",
        "response",
        "req",
        "req",
        "low_clouds",
        "mid_clouds",
        "high_clouds",
        "req",
        "w_speed",
        "w_dir",
        "low_clouds",
        "mid_clouds",
        "high_clouds",
        "hist",
        "station_hist",
        "hist1"
    ],
    "comments": [
        "from mycroft import MycroftSkill, intent_file_handler",
        "Cache provider to be used",
        "from pyowm.caches.lrucache import LRUCache",
        "cache = LRUCache()",
        "User input, keeping the scope to pune for PoC porposes(MVP).",
        "Not utilising much of Darksky, just need to get dewpoint, for",
        "cloud base calculations. Need to use it future for validating",
        "metrics and comparing wind and temperature.",
        "Return the cloud base height and the dewpoint",
        "Function to get the next 5 days forecast with darksky APIs",
        "Print alerts if any",
        "Function to take an observation list and do weather reporting.",
        "Check if API are online to make calls.",
        "An Observation object will be returned, containing weather info about",
        "the location matching the toponym/ID/coordinates you provided.",
        "Get OWM weather condition code",
        "Get METAR and TAF current weather for the location.",
        "Get Terminal Aerodrome Forecase(TAF)",
        "Common function to get the forecast for the given city.",
        "Query for 3 hours weather forecast for the next 5 days",
        "The weather objects returned inside a Forecast object",
        "may refer to timestamps in the recent past. In order to",
        "remove those outdated weather items from the forecast",
        "24 hours weather forecast",
        "Display the forecasts in interval of 3 hours for today.",
        "set() will store only unique values.",
        "Creating a list of lists to store details for each date.",
        "series = [[] for i in range(len(uniq_dates))]",
        "print(\"Depths:{}\".format(series))",
        "for aweather in forecasts:",
        "for auniq in uniq_dates:",
        "indx = uniq_dates.index(auniq)",
        "if auniq in aweather.get_reference_time('iso'):",
        "series[indx].append(aweather)",
        "print(\"Weather Series:{}\".format(series))",
        "For days when there is no rains.",
        "Utility function to get METAR & TAF information.",
        "https://tgftp.nws.noaa.gov/data/observations/metar/stations/VAPO.TXT",
        "Return the elevation for cloudbase calculations.",
        "METARs typically come from airports or permanent weather observation stations.",
        "A typical METAR contains data for the temperature, dew point, wind direction and speed,",
        "precipitation, cloud cover and heights, visibility, and barometric pressure.",
        "A METAR may also contain information on precipitation amounts, lightning, and",
        "other information that would be of interest to pilots",
        "Returns the latest Station information for multiple stations within",
        "a specified radius of the parameters latitude and longitude.",
        "req = requests.get('https://api.checkwx.com/station/lat/18.5195694/lon/73.8553467/radius/100', headers=hdr)",
        "print(req.text)",
        "Analysis historical data of the given place.",
        "Boilerplate template to start it all.",
        "City IDs can be retrieved using a registry.",
        "TBD: Make it generic for around the world, keeping in local for now.",
        "reg = owm_obj.city_id_registry()",
        "city_id = reg.ids_for('Pune', country=\"IN\", matching='nocase')",
        "city_loc = reg.locations_for(\"Pune\", country=\"IN\", matching='nocase')",
        "city_coords = reg.geopoints_for(\"Pune\", country=\"IN\", matching='nocase')",
        "print(\"City ID: {}, City Loc: {} and City Geo Co-ords:\\",
        "{}\".format(city_id, city_loc, city_coords))",
        "An Observation object will be returned, containing weather info about",
        "the location matching the toponym/ID/coordinates you provided.",
        "Get weather forecast. Does it work with co-ordinates or name.",
        "weather_forecast_owm(city_name)",
        "Get Weather forecast with DARKSKY API.",
        "Get the next 5 days forecast from DarkSky API",
        "weather_forecast_darksky(lat, lng)",
        "TBD: PAID : Get weather history from meteoStations, by ID",
        "weather_history()",
        "TBD: Need to work on weather ALERTS",
        "weather_alerts(owm_api, lat, lng)",
        "TBD: Function to get adjoining areas weather.",
        "obs_list = owm_obj.weather_at_places('Pune', 'accurate')",
        "Find observed weather for all the places in the surroundings of",
        "lon=-2.15,lat=57",
        "obs_list = owm_obj.weather_around_coords(18.5195, 73.85534)",
        "As above but limit result items to 8",
        "obs_list = owm_obj.weather_around_coords(18.5195694,73.8553467, limit=8)"
    ],
    "docstrings": [],
    "functions": [
        "weather_current_darksky",
        "weather_forecast_darksky",
        "weather_current_owm",
        "weather_forecast_owm",
        "weather_aviation",
        "weather_history"
    ],
    "classes": []
}