{
    "identifiers": [
        "com",
        "ibm",
        "streamsx",
        "rest",
        "com",
        "ibm",
        "streamsx",
        "topology",
        "gson",
        "GsonUtilities",
        "jstring",
        "com",
        "ibm",
        "streamsx",
        "topology",
        "gson",
        "GsonUtilities",
        "java",
        "io",
        "java",
        "io",
        "UnsupportedEncodingException",
        "java",
        "net",
        "MalformedURLException",
        "java",
        "net",
        "URL",
        "java",
        "net",
        "URLEncoder",
        "java",
        "nio",
        "charset",
        "StandardCharsets",
        "java",
        "util",
        "org",
        "apache",
        "http",
        "client",
        "fluent",
        "Executor",
        "org",
        "apache",
        "http",
        "client",
        "fluent",
        "Request",
        "org",
        "apache",
        "http",
        "entity",
        "ContentType",
        "com",
        "google",
        "gson",
        "JsonObject",
        "com",
        "ibm",
        "streamsx",
        "topology",
        "gson",
        "GsonUtilities",
        "com",
        "ibm",
        "streamsx",
        "topology",
        "streams",
        "Util",
        "urlS",
        "streamsUrl",
        "urlS",
        "instancePath",
        "streamsUrl",
        "getPath",
        "name",
        "instancePath",
        "substring",
        "instancePath",
        "lastIndexOf",
        "authorizeUrl",
        "streamsUrl",
        "getHost",
        "detailsUrl",
        "streamsUrl",
        "getHost",
        "URLEncoder",
        "encode",
        "name",
        "StandardCharsets",
        "UTF_8",
        "name",
        "serviceTokenUrl",
        "streamsUrl",
        "getHost",
        "streamsUrl",
        "authorizeUrl",
        "detailsUrl",
        "serviceTokenUrl",
        "streamsUrl",
        "authorizeUrl",
        "detailsUrl",
        "serviceTokenUrl",
        "serviceAuth",
        "expire",
        "streamsUrl",
        "authorizeUrl",
        "detailsUrl",
        "serviceTokenUrl",
        "streamsUrl",
        "streamsUrl",
        "authorizeUrl",
        "authorizeUrl",
        "detailsUrl",
        "detailsUrl",
        "serviceTokenUrl",
        "serviceTokenUrl",
        "executor",
        "namepwd",
        "userPwd",
        "Util",
        "getDefaultUserPassword",
        "namepwd",
        "addProperty",
        "userPwd",
        "namepwd",
        "addProperty",
        "userPwd",
        "post",
        "Request",
        "Post",
        "authorizeUrl",
        "toExternalForm",
        "bodyString",
        "namepwd",
        "toString",
        "ContentType",
        "APPLICATION_JSON",
        "resp",
        "RestUtils",
        "requestGsonResponse",
        "executor",
        "post",
        "icp4dToken",
        "GsonUtilities",
        "jstring",
        "resp",
        "icpdAuth",
        "RestUtils",
        "createBearerAuth",
        "icp4dToken",
        "resp",
        "RestUtils",
        "getGsonResponse",
        "executor",
        "icpdAuth",
        "detailsUrl",
        "sro",
        "resp",
        "serviceId",
        "jstring",
        "sro",
        "sca",
        "sro",
        "pd",
        "pd",
        "addProperty",
        "serviceId",
        "post",
        "Request",
        "Post",
        "serviceTokenUrl",
        "toExternalForm",
        "addHeader",
        "icpdAuth",
        "bodyString",
        "pd",
        "toString",
        "ContentType",
        "APPLICATION_JSON",
        "resp",
        "RestUtils",
        "requestGsonResponse",
        "executor",
        "post",
        "serviceToken",
        "jstring",
        "resp",
        "serviceAuth",
        "RestUtils",
        "createBearerAuth",
        "serviceToken",
        "expire",
        "currentTimeMillis",
        "sci",
        "sca",
        "buildEndpoint",
        "jstring",
        "sci",
        "buildUrl",
        "streamsUrl",
        "getHost",
        "buildEndpoint",
        "getPort",
        "buildEndpoint",
        "getPath",
        "connInfo",
        "connInfo",
        "addProperty",
        "connInfo",
        "addProperty",
        "streamsUrl",
        "toExternalForm",
        "connInfo",
        "addProperty",
        "buildUrl",
        "toExternalForm",
        "cfg",
        "cfg",
        "addProperty",
        "cfg",
        "add",
        "connInfo",
        "cfg",
        "addProperty",
        "serviceToken",
        "cfg",
        "addProperty",
        "streamsUrl",
        "getHost",
        "cfg",
        "addProperty",
        "serviceId",
        "cfg",
        "Override",
        "executor"
    ],
    "literals": [
        "\"https\"",
        "\"/icp4d-api/v1/authorize\"",
        "\"https\"",
        "\"/zen-data/v2/serviceInstance/details?displayName=\"",
        "\"https\"",
        "\"/zen-data/v2/serviceInstance/token\"",
        "\"username\"",
        "\"password\"",
        "\"token\"",
        "\"requestObj\"",
        "\"ID\"",
        "\"CreateArguments\"",
        "\"serviceInstanceId\"",
        "\"Authorization\"",
        "\"AccessToken\"",
        "\"connection-info\"",
        "\"externalBuildEndpoint\"",
        "\"https\"",
        "\"externalClient\"",
        "\"serviceRestEndpoint\"",
        "\"serviceBuildEndpoint\"",
        "\"type\"",
        "\"streams\"",
        "\"connection_info\"",
        "\"service_token\"",
        "\"cluster_ip\"",
        "\"service_id\""
    ],
    "variables": [
        "streamsUrl",
        "authorizeUrl",
        "detailsUrl",
        "serviceTokenUrl",
        "serviceAuth",
        "expire"
    ],
    "comments": [
        "Ensure the build endpoint matches the fully external Streams URL",
        "Return object matches one created in Python."
    ],
    "docstrings": [
        "# Licensed Materials - Property of IBM\n# Copyright IBM Corp. 2019"
    ],
    "functions": [
        "ICP4DAuthenticator",
        "of",
        "ICP4DAuthenticator",
        "JsonObject",
        "config",
        "apply"
    ],
    "classes": [
        "ICP4DAuthenticator"
    ]
}