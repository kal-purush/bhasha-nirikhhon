{
    "identifiers": [
        "GraphQLEnumType",
        "Kind",
        "DocumentNode",
        "validate",
        "GraphQLSchema",
        "specifiedDirectives",
        "validateSDL",
        "gql",
        "composeServices",
        "buildMapsFromServiceList",
        "astSerializer",
        "typeSerializer",
        "selectionSetSerializer",
        "normalizeTypeDefs",
        "federationDirectives",
        "ServiceDefinition",
        "matchingEnums",
        "expect",
        "astSerializer",
        "expect",
        "typeSerializer",
        "expect",
        "selectionSetSerializer",
        "createDefinitionsDocumentForServices",
        "serviceList",
        "buildMapsFromServiceList",
        "serviceList",
        "Kind",
        "definitionsMap",
        "describe",
        "beforeEach",
        "schema",
        "GraphQLSchema",
        "specifiedDirectives",
        "federationDirectives",
        "it",
        "gql",
        "gql",
        "createDefinitionsDocumentForServices",
        "serviceList",
        "validateSDL",
        "definitionsDocument",
        "schema",
        "matchingEnums",
        "expect",
        "errors",
        "it",
        "gql",
        "gql",
        "createDefinitionsDocumentForServices",
        "serviceList",
        "validateSDL",
        "definitionsDocument",
        "schema",
        "matchingEnums",
        "expect",
        "errors",
        "it",
        "gql",
        "gql",
        "gql",
        "createDefinitionsDocumentForServices",
        "serviceList",
        "validateSDL",
        "definitionsDocument",
        "schema",
        "matchingEnums",
        "expect",
        "errors",
        "it",
        "gql",
        "gql",
        "gql",
        "createDefinitionsDocumentForServices",
        "serviceList",
        "validateSDL",
        "definitionsDocument",
        "schema",
        "matchingEnums",
        "expect",
        "errors"
    ],
    "literals": [
        "'graphql'",
        "'graphql/validation/validate'",
        "'graphql-tag'",
        "'../../../compose'",
        "'../../../../snapshotSerializers'",
        "'../../../normalize'",
        "'../../../../directives'",
        "'../../../types'",
        "'../matchingEnums'",
        "'matchingEnums'",
        "'does not error with matching enums across services'",
        "enum ProductCategory {\n            BED\n            BATH\n          }",
        "'serviceA'",
        "enum ProductCategory {\n            BED\n            BATH\n          }",
        "'serviceB'",
        "Array []",
        "'errors when enums in separate services dont match'",
        "enum ProductCategory {\n            BED\n            BATH\n          }",
        "'serviceA'",
        "enum ProductCategory {\n            BEYOND\n          }",
        "'serviceB'",
        "Array [\n        [GraphQLError: The \\`ProductCategory\\` enum does not have identical values in all services. Groups of services with identical values are: [serviceA], [serviceB]],\n      ]",
        "'errors when enums in separate services dont match'",
        "type Query {\n            products: [Product]!\n          }\n\n          type Product @key(fields: \"sku\") {\n            sku: String!\n            upc: String!\n            type: ProductType\n          }\n\n          enum ProductType {\n            BOOK\n            FURNITURE\n          }",
        "'serviceA'",
        "enum ProductType {\n            FURNITURE\n            BOOK\n            DIGITAL\n          }",
        "'serviceB'",
        "enum ProductType {\n            FURNITURE\n            BOOK\n            DIGITAL\n          }",
        "'serviceC'",
        "Array [\n        [GraphQLError: The \\`ProductType\\` enum does not have identical values in all services. Groups of services with identical values are: [serviceA], [serviceB, serviceC]],\n      ]",
        "'errors when an enum name is defined as another type in a service'",
        "enum ProductType {\n            BOOK\n            FURNITURE\n          }",
        "'serviceA'",
        "type ProductType {\n            id: String\n          }",
        "'serviceB'",
        "enum ProductType {\n            FURNITURE\n            BOOK\n            DIGITAL\n          }",
        "'serviceC'",
        "Array [\n        [GraphQLError: [serviceA] ProductType -> ProductType is an enum in [serviceA, serviceC], but not in [serviceB]],\n      ]"
    ],
    "variables": [
        "createDefinitionsDocumentForServices",
        "schema",
        "serviceList",
        "definitionsDocument",
        "errors",
        "serviceList",
        "definitionsDocument",
        "errors",
        "serviceList",
        "definitionsDocument",
        "errors",
        "serviceList",
        "definitionsDocument",
        "errors"
    ],
    "comments": [
        "simulate the first half of the composition process",
        "create a blank schema for each test"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}