{
    "identifiers": [],
    "literals": [
        "'jsdoc'",
        "'jsdoc/check-alignment'",
        "'error'",
        "'jsdoc/check-examples'",
        "'error'",
        "'jsdoc/check-indentation'",
        "'error'",
        "'jsdoc/check-param-names'",
        "'error'",
        "'jsdoc/check-syntax'",
        "'error'",
        "'jsdoc/check-tag-names'",
        "'error'",
        "'jsdoc/check-types'",
        "'error'",
        "'jsdoc/implements-on-classes'",
        "'error'",
        "'jsdoc/match-description'",
        "'error'",
        "'jsdoc/newline-after-description'",
        "'error'",
        "'jsdoc/no-types'",
        "'error'",
        "'jsdoc/no-undefined-types'",
        "'error'",
        "'jsdoc/require-description'",
        "'error'",
        "'jsdoc/require-description-complete-sentence'",
        "'error'",
        "'jsdoc/require-example'",
        "'off'",
        "'jsdoc/require-hyphen-before-param-description'",
        "'error'",
        "'jsdoc/require-jsdoc'",
        "'error'",
        "'jsdoc/require-param'",
        "'error'",
        "'jsdoc/require-param-description'",
        "'error'",
        "'jsdoc/require-param-name'",
        "'error'",
        "'jsdoc/require-param-type'",
        "'off'",
        "'jsdoc/require-returns'",
        "'error'",
        "'jsdoc/require-returns-check'",
        "'error'",
        "'jsdoc/require-returns-description'",
        "'error'",
        "'jsdoc/require-returns-type'",
        "'off'",
        "'jsdoc/valid-types'",
        "'error'"
    ],
    "variables": [],
    "comments": [
        "eslint-env commonjs",
        "eslint-disable import/unambiguous",
        "eslint-disable import/no-commonjs",
        "Reports invalid alignment of JSDoc block asterisks",
        "Ensures that (JavaScript) examples within JSDoc adhere to ESLint rules",
        "Reports invalid padding inside JSDoc block",
        "Reports invalid padding inside JSDoc block",
        "Reports against Google Closure Compiler syntax",
        "Reports invalid block tag names",
        "Reports invalid types",
        "Reports an issue with any non-constructor function using @implements",
        "Enforces a regular expression pattern on descriptions",
        "Enforces a consistent padding of the block description",
        "This rule reports types being used on @param or @returns",
        "Checks that types in jsdoc comments are defined. This can be used to check unimported types.",
        "Requires that all functions have a description",
        "Requires that block description and tag description are written in complete sentences",
        "Requires that all functions have examples",
        "Requires a hyphen before the @param description",
        "Checks for presence of jsdoc comments, on class declarations as well as functions",
        "Requires that all function parameters are documented",
        "Requires that @param tag has description value",
        "Requires that all function parameters have name",
        "Requires that @param tag has type value",
        "Requires returns are documented",
        "Checks if the return expression exists in function body and in the comment",
        "Requires that @returns tag has description value",
        "Requires that @returns tag has type value",
        "Requires all types to be valid JSDoc or Closure compiler types without syntax errors"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}