{
    "identifiers": [
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$",
        "FOUNDATION_VERSION",
        "rtl",
        "$",
        "plugin",
        "_plugin",
        "name",
        "name",
        "functionName",
        "_plugin",
        "hyphenate",
        "className",
        "attrName",
        "className",
        "_plugin",
        "registerPlugin",
        "plugin",
        "name",
        "name",
        "hyphenate",
        "name",
        "functionName",
        "plugin",
        "plugin",
        "pluginName",
        "plugin",
        "pluginName",
        "plugin",
        "pluginName",
        "plugin",
        "plugin",
        "plugin",
        "plugin",
        "plugin",
        "pluginName",
        "plugin",
        "unregisterPlugin",
        "plugin",
        "hyphenate",
        "functionName",
        "plugin",
        "plugin",
        "plugin",
        "pluginName",
        "pluginName",
        "prop",
        "plugin",
        "plugin",
        "prop",
        "reInit",
        "plugins",
        "plugins",
        "$",
        "isJQ",
        "plugins",
        "$",
        "plugins",
        "_typeof",
        "plugins",
        "plgs",
        "plgs",
        "p",
        "p",
        "hyphenate",
        "p",
        "$",
        "p",
        "plugins",
        "hyphenate",
        "plugins",
        "$",
        "plugins",
        "_this",
        "fns",
        "plugins",
        "err",
        "err",
        "plugins",
        "GetYoDigits",
        "length",
        "length",
        "length",
        "length",
        "length",
        "reflow",
        "elem",
        "plugins",
        "plugins",
        "plugins",
        "plugins",
        "plugins",
        "plugins",
        "$",
        "plugins",
        "i",
        "name",
        "_this",
        "name",
        "$",
        "elem",
        "name",
        "name",
        "$elem",
        "$",
        "$el",
        "name",
        "$el",
        "$el",
        "e",
        "i",
        "e",
        "el",
        "el",
        "opt",
        "opts",
        "opt",
        "parseValue",
        "opt",
        "$el",
        "plugin",
        "$",
        "opts",
        "er",
        "er",
        "functionName",
        "transitionend",
        "$elem",
        "t",
        "transitions",
        "elem",
        "t",
        "end",
        "transitions",
        "t",
        "end",
        "end",
        "end",
        "setTimeout",
        "$elem",
        "$elem",
        "Foundation",
        "throttle",
        "func",
        "delay",
        "timer",
        "timer",
        "setTimeout",
        "func",
        "context",
        "args",
        "timer",
        "delay",
        "foundation",
        "method",
        "method",
        "_typeof",
        "method",
        "$",
        "$",
        "$meta",
        "$",
        "$noJS",
        "$noJS",
        "Foundation",
        "Foundation",
        "arguments",
        "plugClass",
        "plugClass",
        "method",
        "plugClass",
        "method",
        "plugClass",
        "args",
        "i",
        "el",
        "plugClass",
        "method",
        "$",
        "el",
        "args",
        "ReferenceError",
        "method",
        "plugClass",
        "functionName",
        "plugClass",
        "Foundation",
        "$",
        "foundation",
        "i",
        "vendors",
        "i",
        "vendors",
        "i",
        "vp",
        "vp",
        "vp",
        "callback",
        "lastTime",
        "now",
        "setTimeout",
        "callback",
        "lastTime",
        "nextTime",
        "nextTime",
        "now",
        "clearTimeout",
        "now",
        "oThis",
        "arguments",
        "fNOP",
        "fBound",
        "fToBind",
        "fNOP",
        "oThis",
        "aArgs",
        "arguments",
        "fNOP",
        "fBound",
        "fNOP",
        "fBound",
        "fn",
        "funcNameRegex",
        "fn",
        "results",
        "results",
        "results",
        "fn",
        "fn",
        "fn",
        "isNaN",
        "parseFloat",
        "jQuery",
        "$",
        "Foundation",
        "ImNotTouchingYou",
        "GetDimensions",
        "GetOffsets",
        "element",
        "parent",
        "lrOnly",
        "tbOnly",
        "GetDimensions",
        "element",
        "parent",
        "GetDimensions",
        "parent",
        "bottom",
        "eleDims",
        "eleDims",
        "parDims",
        "parDims",
        "top",
        "eleDims",
        "parDims",
        "left",
        "eleDims",
        "parDims",
        "right",
        "eleDims",
        "eleDims",
        "parDims",
        "parDims",
        "bottom",
        "eleDims",
        "eleDims",
        "eleDims",
        "eleDims",
        "top",
        "eleDims",
        "eleDims",
        "left",
        "eleDims",
        "eleDims",
        "right",
        "eleDims",
        "eleDims",
        "eleDims",
        "bottom",
        "top",
        "left",
        "right",
        "lrOnly",
        "left",
        "right",
        "tbOnly",
        "top",
        "bottom",
        "allDirs",
        "elem",
        "test",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "rect",
        "rect",
        "rect",
        "winY",
        "rect",
        "winX",
        "parRect",
        "parRect",
        "parRect",
        "winY",
        "parRect",
        "winX",
        "winRect",
        "winRect",
        "winY",
        "winX",
        "element",
        "anchor",
        "position",
        "vOffset",
        "hOffset",
        "isOverflow",
        "GetDimensions",
        "element",
        "anchor",
        "GetDimensions",
        "anchor",
        "position",
        "Foundation",
        "$anchorDims",
        "$eleDims",
        "$anchorDims",
        "$anchorDims",
        "$anchorDims",
        "$eleDims",
        "vOffset",
        "$anchorDims",
        "$eleDims",
        "hOffset",
        "$anchorDims",
        "$anchorDims",
        "$anchorDims",
        "hOffset",
        "$anchorDims",
        "$anchorDims",
        "$anchorDims",
        "$eleDims",
        "$anchorDims",
        "$eleDims",
        "vOffset",
        "isOverflow",
        "hOffset",
        "$anchorDims",
        "$anchorDims",
        "$eleDims",
        "$anchorDims",
        "$anchorDims",
        "vOffset",
        "$anchorDims",
        "$eleDims",
        "hOffset",
        "$anchorDims",
        "$anchorDims",
        "$eleDims",
        "$anchorDims",
        "$anchorDims",
        "hOffset",
        "$anchorDims",
        "$anchorDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "$eleDims",
        "vOffset",
        "$eleDims",
        "$eleDims",
        "$anchorDims",
        "$anchorDims",
        "$anchorDims",
        "vOffset",
        "$anchorDims",
        "$anchorDims",
        "hOffset",
        "$eleDims",
        "$anchorDims",
        "$anchorDims",
        "vOffset",
        "Foundation",
        "$anchorDims",
        "$eleDims",
        "$anchorDims",
        "$anchorDims",
        "hOffset",
        "$anchorDims",
        "$anchorDims",
        "vOffset",
        "jQuery",
        "$",
        "getKeyCodes",
        "keyCodes",
        "parseKey",
        "keyCodes",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "handleKey",
        "component",
        "functions",
        "commands",
        "component",
        "commandList",
        "commandList",
        "cmds",
        "commandList",
        "Foundation",
        "cmds",
        "$",
        "commandList",
        "commandList",
        "cmds",
        "$",
        "commandList",
        "commandList",
        "command",
        "cmds",
        "keyCode",
        "fn",
        "functions",
        "command",
        "fn",
        "fn",
        "fn",
        "functions",
        "functions",
        "functions",
        "returnValue",
        "functions",
        "functions",
        "functions",
        "findFocusable",
        "$element",
        "$element",
        "$element",
        "$",
        "$",
        "register",
        "componentName",
        "cmds",
        "commands",
        "componentName",
        "cmds",
        "trapFocus",
        "$element",
        "Foundation",
        "$element",
        "$focusable",
        "$focusable",
        "$element",
        "$lastFocusable",
        "Foundation",
        "$firstFocusable",
        "$firstFocusable",
        "Foundation",
        "$lastFocusable",
        "releaseFocus",
        "$element",
        "$element",
        "kcs",
        "kc",
        "kcs",
        "k",
        "kcs",
        "kc",
        "kcs",
        "kc",
        "k",
        "Foundation",
        "Keyboard",
        "jQuery",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$",
        "_init",
        "$",
        "namedQueries",
        "parseStyleToObject",
        "extractedStyles",
        "key",
        "namedQueries",
        "namedQueries",
        "key",
        "key",
        "namedQueries",
        "key",
        "atLeast",
        "size",
        "size",
        "query",
        "query",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "size",
        "get",
        "size",
        "i",
        "i",
        "i",
        "size",
        "query",
        "query",
        "_getCurrentSize",
        "i",
        "i",
        "i",
        "query",
        "matched",
        "query",
        "matched",
        "_typeof",
        "matched",
        "matched",
        "matched",
        "_watcher",
        "$",
        "_this",
        "_this",
        "newSize",
        "currentSize",
        "_this",
        "newSize",
        "$",
        "newSize",
        "currentSize",
        "Foundation",
        "MediaQuery",
        "styleMedia",
        "style",
        "style",
        "script",
        "script",
        "script",
        "style",
        "script",
        "info",
        "style",
        "style",
        "styleMedia",
        "matchMedium",
        "media",
        "media",
        "style",
        "style",
        "text",
        "style",
        "text",
        "info",
        "media",
        "styleMedia",
        "media",
        "media",
        "styleObject",
        "styleObject",
        "styleObject",
        "ret",
        "param",
        "param",
        "parts",
        "parts",
        "key",
        "decodeURIComponent",
        "key",
        "val",
        "val",
        "decodeURIComponent",
        "val",
        "ret",
        "key",
        "ret",
        "key",
        "val",
        "ret",
        "key",
        "ret",
        "key",
        "val",
        "ret",
        "key",
        "ret",
        "key",
        "val",
        "ret",
        "styleObject",
        "Foundation",
        "MediaQuery",
        "jQuery",
        "$",
        "animateIn",
        "element",
        "animation",
        "cb",
        "animate",
        "element",
        "animation",
        "cb",
        "animateOut",
        "element",
        "animation",
        "cb",
        "animate",
        "element",
        "animation",
        "cb",
        "duration",
        "elem",
        "fn",
        "duration",
        "fn",
        "elem",
        "elem",
        "elem",
        "elem",
        "ts",
        "start",
        "start",
        "ts",
        "prog",
        "ts",
        "start",
        "fn",
        "elem",
        "prog",
        "duration",
        "anim",
        "move",
        "elem",
        "anim",
        "elem",
        "elem",
        "elem",
        "anim",
        "move",
        "isIn",
        "element",
        "animation",
        "cb",
        "element",
        "$",
        "element",
        "element",
        "isIn",
        "initClasses",
        "initClasses",
        "isIn",
        "activeClasses",
        "activeClasses",
        "reset",
        "element",
        "animation",
        "requestAnimationFrame",
        "element",
        "initClass",
        "isIn",
        "element",
        "requestAnimationFrame",
        "element",
        "element",
        "activeClass",
        "element",
        "Foundation",
        "element",
        "finish",
        "isIn",
        "element",
        "reset",
        "cb",
        "cb",
        "element",
        "element",
        "element",
        "initClass",
        "activeClass",
        "animation",
        "Foundation",
        "Move",
        "Foundation",
        "Motion",
        "jQuery",
        "$",
        "Feather",
        "menu",
        "arguments",
        "arguments",
        "arguments",
        "menu",
        "menu",
        "subMenuClass",
        "items",
        "$",
        "$item",
        "$sub",
        "$item",
        "hasSubClass",
        "$item",
        "$item",
        "$sub",
        "subMenuClass",
        "$sub",
        "$item",
        "$item",
        "subItemClass",
        "Burn",
        "menu",
        "subMenuClass",
        "menu",
        "subMenuClass",
        "subItemClass",
        "hasSubClass",
        "Foundation",
        "Nest",
        "jQuery",
        "$",
        "elem",
        "options",
        "cb",
        "options",
        "elem",
        "remain",
        "clearTimeout",
        "timer",
        "clearTimeout",
        "timer",
        "remain",
        "remain",
        "duration",
        "remain",
        "elem",
        "start",
        "timer",
        "setTimeout",
        "options",
        "_this",
        "cb",
        "cb",
        "cb",
        "remain",
        "elem",
        "nameSpace",
        "clearTimeout",
        "timer",
        "elem",
        "remain",
        "remain",
        "end",
        "start",
        "elem",
        "nameSpace",
        "images",
        "callback",
        "images",
        "unloaded",
        "callback",
        "images",
        "singleImageLoaded",
        "$",
        "$",
        "src",
        "src",
        "$",
        "singleImageLoaded",
        "unloaded",
        "unloaded",
        "callback",
        "Foundation",
        "Timer",
        "Foundation",
        "onImagesLoaded",
        "jQuery",
        "$",
        "$",
        "onTouchMove",
        "onTouchEnd",
        "isMoving",
        "e",
        "$",
        "e",
        "isMoving",
        "e",
        "e",
        "startPosX",
        "x",
        "startPosY",
        "y",
        "elapsedTime",
        "startTime",
        "dx",
        "$",
        "elapsedTime",
        "$",
        "dir",
        "dx",
        "dir",
        "e",
        "onTouchEnd",
        "$",
        "dir",
        "dir",
        "e",
        "e",
        "startPosX",
        "e",
        "startPosY",
        "e",
        "isMoving",
        "startTime",
        "onTouchMove",
        "onTouchEnd",
        "onTouchStart",
        "onTouchStart",
        "$",
        "init",
        "$",
        "$",
        "setup",
        "$",
        "$",
        "jQuery",
        "$",
        "$",
        "i",
        "el",
        "$",
        "el",
        "handleTouch",
        "handleTouch",
        "touches",
        "eventTypes",
        "simulatedEvent",
        "first",
        "first",
        "first",
        "first",
        "simulatedEvent",
        "simulatedEvent",
        "first",
        "first",
        "first",
        "first",
        "first",
        "simulatedEvent",
        "jQuery",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$",
        "i",
        "prefixes",
        "i",
        "prefixes",
        "i",
        "prefixes",
        "i",
        "triggers",
        "el",
        "el",
        "id",
        "$",
        "id",
        "el",
        "$",
        "triggers",
        "$",
        "$",
        "$",
        "id",
        "triggers",
        "$",
        "$",
        "$",
        "$",
        "id",
        "triggers",
        "$",
        "$",
        "$",
        "e",
        "e",
        "$",
        "animation",
        "Foundation",
        "$",
        "animation",
        "$",
        "$",
        "$",
        "$",
        "$",
        "id",
        "$",
        "$",
        "checkListeners",
        "eventsListener",
        "resizeListener",
        "scrollListener",
        "closemeListener",
        "pluginName",
        "$",
        "pluginName",
        "pluginName",
        "plugNames",
        "pluginName",
        "pluginName",
        "_typeof",
        "pluginName",
        "pluginName",
        "plugNames",
        "pluginName",
        "yetiBoxes",
        "plugNames",
        "name",
        "name",
        "$",
        "listeners",
        "listeners",
        "e",
        "pluginId",
        "e",
        "$",
        "plugin",
        "pluginId",
        "plugins",
        "$",
        "_this",
        "_this",
        "debounce",
        "$",
        "$nodes",
        "$",
        "e",
        "timer",
        "clearTimeout",
        "timer",
        "timer",
        "setTimeout",
        "MutationObserver",
        "$nodes",
        "$",
        "$nodes",
        "debounce",
        "debounce",
        "$",
        "$nodes",
        "$",
        "e",
        "timer",
        "clearTimeout",
        "timer",
        "timer",
        "setTimeout",
        "MutationObserver",
        "$nodes",
        "$",
        "$nodes",
        "debounce",
        "MutationObserver",
        "listeningElementsMutation",
        "mutationRecordsList",
        "$",
        "mutationRecordsList",
        "mutationRecordsList",
        "$target",
        "mutationRecordsList",
        "$target",
        "$target",
        "$target",
        "mutationRecordsList",
        "$target",
        "$target",
        "mutationRecordsList",
        "$target",
        "$target",
        "$target",
        "$target",
        "$target",
        "$target",
        "nodes",
        "i",
        "nodes",
        "i",
        "MutationObserver",
        "listeningElementsMutation",
        "elementObserver",
        "nodes",
        "i",
        "Foundation",
        "checkListeners",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "arguments",
        "arguments",
        "arguments",
        "_classCallCheck",
        "Abide",
        "element",
        "$",
        "Abide",
        "options",
        "Foundation",
        "_createClass",
        "Abide",
        "_init",
        "_events",
        "_this2",
        "_this2",
        "e",
        "_this2",
        "$",
        "e",
        "e",
        "_this2",
        "$",
        "e",
        "e",
        "_this2",
        "$",
        "e",
        "_reflow",
        "requiredCheck",
        "$el",
        "$el",
        "$el",
        "isGood",
        "$el",
        "$el",
        "opt",
        "opt",
        "isGood",
        "$el",
        "$el",
        "isGood",
        "isGood",
        "findFormError",
        "$el",
        "$el",
        "$el",
        "$error",
        "$error",
        "$el",
        "$error",
        "$error",
        "id",
        "$error",
        "findLabel",
        "$el",
        "$el",
        "id",
        "$label",
        "$el",
        "$label",
        "findRadioLabels",
        "$els",
        "$els",
        "i",
        "el",
        "el",
        "_this3",
        "id",
        "$label",
        "$label",
        "$",
        "el",
        "$label",
        "$",
        "labels",
        "addErrorClasses",
        "$el",
        "$el",
        "$el",
        "$label",
        "$label",
        "$formError",
        "$formError",
        "$el",
        "removeRadioErrorClasses",
        "groupName",
        "groupName",
        "$els",
        "$els",
        "$labels",
        "$labels",
        "$formErrors",
        "$formErrors",
        "$els",
        "removeErrorClasses",
        "$el",
        "$el",
        "$el",
        "$el",
        "$el",
        "$label",
        "$label",
        "$formError",
        "$formError",
        "$el",
        "validateInput",
        "$el",
        "$el",
        "$el",
        "$el",
        "$el",
        "$el",
        "$el",
        "validated",
        "$el",
        "validated",
        "clearRequire",
        "validated",
        "clearRequire",
        "validated",
        "$el",
        "validator",
        "customValidator",
        "$el",
        "validator",
        "$el",
        "$el",
        "equalTo",
        "$el",
        "clearRequire",
        "validated",
        "customValidator",
        "equalTo",
        "goodToGo",
        "goodToGo",
        "$el",
        "dependentElements",
        "dependentElements",
        "$",
        "_this",
        "$",
        "goodToGo",
        "$el",
        "$el",
        "message",
        "$el",
        "goodToGo",
        "validateForm",
        "acc",
        "_this",
        "$",
        "acc",
        "noError",
        "noError",
        "noError",
        "validateText",
        "$el",
        "pattern",
        "pattern",
        "pattern",
        "$el",
        "$el",
        "$el",
        "inputText",
        "pattern",
        "valid",
        "pattern",
        "inputText",
        "pattern",
        "$el",
        "valid",
        "pattern",
        "inputText",
        "valid",
        "$el",
        "valid",
        "valid",
        "validateRadio",
        "groupName",
        "groupName",
        "$group",
        "i",
        "e",
        "$",
        "e",
        "required",
        "required",
        "valid",
        "valid",
        "$group",
        "i",
        "e",
        "$",
        "e",
        "valid",
        "valid",
        "matchValidation",
        "$el",
        "validators",
        "required",
        "required",
        "required",
        "validators",
        "v",
        "_this4",
        "v",
        "$el",
        "required",
        "$el",
        "clear",
        "resetForm",
        "$",
        "opts",
        "$form",
        "opts",
        "$",
        "opts",
        "$form",
        "opts",
        "$",
        "opts",
        "opts",
        "opts",
        "$form",
        "$",
        "$form",
        "$",
        "$form",
        "$",
        "$form",
        "$form",
        "$form",
        "destroy",
        "_this",
        "$",
        "Foundation",
        "Abide",
        "Abide",
        "equalTo",
        "el",
        "required",
        "parent",
        "$",
        "el",
        "el",
        "Foundation",
        "Abide",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Accordion",
        "element",
        "$",
        "Accordion",
        "options",
        "Foundation",
        "Foundation",
        "_createClass",
        "Accordion",
        "_init",
        "idx",
        "el",
        "$",
        "el",
        "$el",
        "$content",
        "Foundation",
        "el",
        "id",
        "$el",
        "id",
        "linkId",
        "$content",
        "linkId",
        "id",
        "$initActive",
        "$initActive",
        "anchor",
        "_this2",
        "anchor",
        "$",
        "anchor",
        "$link",
        "$anchor",
        "$link",
        "_this2",
        "$anchor",
        "_this2",
        "_this2",
        "_this2",
        "$",
        "_this",
        "$",
        "offset",
        "_this",
        "_this2",
        "$link",
        "$anchor",
        "_events",
        "$",
        "$elem",
        "$tabContent",
        "$elem",
        "e",
        "e",
        "_this",
        "$tabContent",
        "e",
        "Foundation",
        "e",
        "toggle",
        "_this",
        "$tabContent",
        "next",
        "$elem",
        "_this",
        "$a",
        "previous",
        "$elem",
        "_this",
        "$a",
        "handled",
        "e",
        "e",
        "$",
        "toggle",
        "$target",
        "$target",
        "$target",
        "$target",
        "$target",
        "history",
        "anchor",
        "history",
        "anchor",
        "down",
        "$target",
        "firstTime",
        "$target",
        "firstTime",
        "$currentActive",
        "$currentActive",
        "$target",
        "$target",
        "_this3",
        "$target",
        "$",
        "$target",
        "up",
        "$target",
        "$target",
        "$aunts",
        "$target",
        "$target",
        "_this",
        "_this",
        "$target",
        "$target",
        "$",
        "$target",
        "destroy",
        "$",
        "Foundation",
        "Accordion",
        "Accordion",
        "Foundation",
        "Accordion",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "AccordionMenu",
        "element",
        "$",
        "AccordionMenu",
        "options",
        "Foundation",
        "Foundation",
        "Foundation",
        "_createClass",
        "AccordionMenu",
        "_init",
        "Foundation",
        "$",
        "$elem",
        "$sub",
        "Foundation",
        "$sub",
        "$elem",
        "subId",
        "isActive",
        "linkId",
        "$sub",
        "linkId",
        "isActive",
        "subId",
        "initPanes",
        "initPanes",
        "_this",
        "$",
        "_events",
        "$",
        "$submenu",
        "$",
        "e",
        "e",
        "_this",
        "$submenu",
        "e",
        "$",
        "$element",
        "$element",
        "$elements",
        "i",
        "$",
        "$element",
        "$prevElement",
        "$elements",
        "i",
        "$nextElement",
        "$elements",
        "i",
        "$elements",
        "$",
        "$nextElement",
        "$element",
        "$",
        "$prevElement",
        "$element",
        "$prevElement",
        "$prevElement",
        "$prevElement",
        "$",
        "$nextElement",
        "$element",
        "Foundation",
        "e",
        "open",
        "$target",
        "_this",
        "$target",
        "$target",
        "close",
        "$target",
        "$target",
        "_this",
        "$target",
        "$element",
        "_this",
        "$element",
        "$element",
        "up",
        "$prevElement",
        "down",
        "$nextElement",
        "toggle",
        "$element",
        "_this",
        "$element",
        "closeAll",
        "_this",
        "handled",
        "preventDefault",
        "preventDefault",
        "e",
        "e",
        "hideAll",
        "showAll",
        "toggle",
        "$target",
        "$target",
        "$target",
        "$target",
        "$target",
        "down",
        "$target",
        "$target",
        "$target",
        "$target",
        "$target",
        "_this",
        "_this",
        "$target",
        "up",
        "$target",
        "$target",
        "_this",
        "_this",
        "$target",
        "$target",
        "$menus",
        "destroy",
        "Foundation",
        "Foundation",
        "AccordionMenu",
        "AccordionMenu",
        "Foundation",
        "AccordionMenu",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Drilldown",
        "element",
        "$",
        "Drilldown",
        "options",
        "Foundation",
        "Foundation",
        "Foundation",
        "_createClass",
        "Drilldown",
        "_init",
        "Foundation",
        "_prepareMenu",
        "$",
        "$link",
        "_this",
        "$link",
        "$sub",
        "$link",
        "$link",
        "$link",
        "_this",
        "$link",
        "$",
        "$menu",
        "$back",
        "_this",
        "$menu",
        "_this",
        "$menu",
        "_this",
        "_this",
        "_this",
        "$menu",
        "$",
        "_resize",
        "_events",
        "$elem",
        "$elem",
        "e",
        "$",
        "e",
        "e",
        "e",
        "_this",
        "$elem",
        "_this",
        "$",
        "$body",
        "e",
        "e",
        "_this",
        "$",
        "_this",
        "e",
        "e",
        "_this",
        "$body",
        "_registerEvents",
        "_scrollTop",
        "_this",
        "$",
        "_this",
        "_this",
        "parseInt",
        "$scrollTopElement",
        "_this",
        "$",
        "scrollPos",
        "_this",
        "_this",
        "$",
        "_this",
        "_keyboardEvents",
        "e",
        "$",
        "$element",
        "$elements",
        "i",
        "$",
        "$element",
        "$prevElement",
        "$elements",
        "i",
        "$nextElement",
        "$elements",
        "i",
        "$elements",
        "Foundation",
        "e",
        "next",
        "$element",
        "_this",
        "_this",
        "$element",
        "$element",
        "Foundation",
        "$element",
        "$element",
        "_this",
        "previous",
        "_this",
        "$element",
        "$element",
        "Foundation",
        "$element",
        "setTimeout",
        "$element",
        "up",
        "$prevElement",
        "$element",
        "_this",
        "down",
        "$nextElement",
        "$element",
        "_this",
        "close",
        "$element",
        "_this",
        "_this",
        "$element",
        "$element",
        "open",
        "$element",
        "_this",
        "_this",
        "$element",
        "$element",
        "Foundation",
        "$element",
        "setTimeout",
        "$element",
        "$element",
        "_this",
        "_this",
        "$element",
        "$element",
        "Foundation",
        "$element",
        "$element",
        "_this",
        "handled",
        "preventDefault",
        "preventDefault",
        "e",
        "e",
        "_hideAll",
        "$elem",
        "$elem",
        "Foundation",
        "$elem",
        "e",
        "$elem",
        "_back",
        "$elem",
        "$elem",
        "$elem",
        "e",
        "e",
        "_this",
        "$elem",
        "$elem",
        "parentSubMenu",
        "_this",
        "parentSubMenu",
        "_menuLinkEvents",
        "e",
        "setTimeout",
        "_this",
        "_show",
        "$elem",
        "$elem",
        "$elem",
        "$elem",
        "$elem",
        "_hide",
        "$elem",
        "$elem",
        "$elem",
        "$elem",
        "$elem",
        "Foundation",
        "$elem",
        "$elem",
        "$elem",
        "$elem",
        "$elem",
        "_getMaxDims",
        "$",
        "Foundation",
        "maxHeight",
        "height",
        "maxHeight",
        "height",
        "maxHeight",
        "_this",
        "$",
        "height",
        "$",
        "result",
        "height",
        "result",
        "maxHeight",
        "result",
        "result",
        "destroy",
        "Foundation",
        "$",
        "$",
        "$link",
        "$link",
        "$link",
        "$link",
        "Foundation",
        "Drilldown",
        "Drilldown",
        "Foundation",
        "Drilldown",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Dropdown",
        "element",
        "$",
        "Dropdown",
        "options",
        "Foundation",
        "Foundation",
        "_createClass",
        "Dropdown",
        "_init",
        "$",
        "$id",
        "$",
        "$id",
        "$",
        "$id",
        "$id",
        "$id",
        "$id",
        "$id",
        "Foundation",
        "getPositionClass",
        "verticalPosition",
        "verticalPosition",
        "verticalPosition",
        "horizontalPosition",
        "horizontalPosition",
        "horizontalPosition",
        "horizontalPosition",
        "horizontalPosition",
        "verticalPosition",
        "verticalPosition",
        "position",
        "_reposition",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "_setPosition",
        "Foundation",
        "Foundation",
        "position",
        "position",
        "direction",
        "param",
        "$eleDims",
        "$eleDims",
        "Foundation",
        "$eleDims",
        "Foundation",
        "$parentDims",
        "$parentDims",
        "newWidth",
        "newWidth",
        "$parentDims",
        "Foundation",
        "parentHOffset",
        "newWidth",
        "Foundation",
        "position",
        "Foundation",
        "position",
        "_events",
        "$",
        "bodyData",
        "bodyData",
        "clearTimeout",
        "_this",
        "_this",
        "setTimeout",
        "_this",
        "_this",
        "_this",
        "clearTimeout",
        "_this",
        "_this",
        "setTimeout",
        "_this",
        "_this",
        "_this",
        "clearTimeout",
        "_this",
        "clearTimeout",
        "_this",
        "_this",
        "setTimeout",
        "_this",
        "_this",
        "_this",
        "e",
        "$",
        "Foundation",
        "_this",
        "Foundation",
        "e",
        "open",
        "$target",
        "_this",
        "_this",
        "_this",
        "e",
        "close",
        "_this",
        "_this",
        "_addBodyHandler",
        "$",
        "$body",
        "e",
        "_this",
        "e",
        "_this",
        "e",
        "_this",
        "e",
        "_this",
        "$body",
        "open",
        "Foundation",
        "$focusable",
        "$focusable",
        "Foundation",
        "close",
        "curPositionClass",
        "curPositionClass",
        "Foundation",
        "toggle",
        "destroy",
        "Foundation",
        "Dropdown",
        "Dropdown",
        "Foundation",
        "Dropdown",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "DropdownMenu",
        "element",
        "$",
        "DropdownMenu",
        "options",
        "Foundation",
        "Foundation",
        "Foundation",
        "_createClass",
        "DropdownMenu",
        "_init",
        "Foundation",
        "subs",
        "subs",
        "_isVertical",
        "_events",
        "handleClickFn",
        "e",
        "$",
        "e",
        "parClass",
        "$elem",
        "parClass",
        "$elem",
        "$elem",
        "hasSub",
        "hasClicked",
        "_this",
        "_this",
        "hasTouch",
        "_this",
        "hasTouch",
        "e",
        "e",
        "_this",
        "$elem",
        "e",
        "e",
        "_this",
        "$sub",
        "$elem",
        "$elem",
        "_this",
        "parClass",
        "hasTouch",
        "handleClickFn",
        "_this",
        "e",
        "$",
        "$elem",
        "parClass",
        "hasSub",
        "_this",
        "e",
        "$",
        "$elem",
        "parClass",
        "hasSub",
        "clearTimeout",
        "$elem",
        "$elem",
        "setTimeout",
        "_this",
        "$elem",
        "_this",
        "e",
        "$",
        "$elem",
        "parClass",
        "hasSub",
        "_this",
        "$elem",
        "_this",
        "clearTimeout",
        "$elem",
        "$elem",
        "setTimeout",
        "_this",
        "$elem",
        "_this",
        "e",
        "$",
        "e",
        "_this",
        "$element",
        "isTab",
        "_this",
        "$element",
        "$element",
        "$elements",
        "i",
        "$",
        "$element",
        "$prevElement",
        "$elements",
        "i",
        "$nextElement",
        "$elements",
        "i",
        "nextSibling",
        "$element",
        "$nextElement",
        "e",
        "prevSibling",
        "$prevElement",
        "e",
        "openSub",
        "$element",
        "$sub",
        "_this",
        "$sub",
        "$element",
        "e",
        "closeSub",
        "$element",
        "close",
        "_this",
        "close",
        "e",
        "openSub",
        "close",
        "_this",
        "_this",
        "_this",
        "e",
        "handled",
        "e",
        "isTab",
        "_this",
        "Foundation",
        "$",
        "functions",
        "nextSibling",
        "prevSibling",
        "closeSub",
        "openSub",
        "$",
        "functions",
        "nextSibling",
        "prevSibling",
        "openSub",
        "closeSub",
        "Foundation",
        "$",
        "functions",
        "prevSibling",
        "nextSibling",
        "openSub",
        "closeSub",
        "$",
        "functions",
        "nextSibling",
        "prevSibling",
        "openSub",
        "closeSub",
        "Foundation",
        "$",
        "functions",
        "closeSub",
        "openSub",
        "nextSibling",
        "prevSibling",
        "$",
        "functions",
        "openSub",
        "closeSub",
        "nextSibling",
        "prevSibling",
        "Foundation",
        "e",
        "functions",
        "_addBodyHandler",
        "$",
        "$body",
        "e",
        "_this",
        "e",
        "$link",
        "_this",
        "$body",
        "_show",
        "$sub",
        "i",
        "el",
        "$",
        "el",
        "$sub",
        "$sub",
        "$sibs",
        "idx",
        "$sub",
        "Foundation",
        "$sub",
        "clear",
        "$sub",
        "$parentLi",
        "oldClass",
        "clear",
        "Foundation",
        "$sub",
        "clear",
        "$parentLi",
        "$sub",
        "$sub",
        "_hide",
        "$elem",
        "idx",
        "$elem",
        "$elem",
        "$toClose",
        "$elem",
        "idx",
        "$toClose",
        "i",
        "el",
        "i",
        "idx",
        "$toClose",
        "$toClose",
        "$toClose",
        "somethingToClose",
        "$toClose",
        "$toClose",
        "$toClose",
        "$toClose",
        "$toClose",
        "$toClose",
        "oldClass",
        "$toClose",
        "destroy",
        "$",
        "Foundation",
        "Foundation",
        "DropdownMenu",
        "DropdownMenu",
        "Foundation",
        "DropdownMenu",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Equalizer",
        "element",
        "$",
        "Equalizer",
        "options",
        "Foundation",
        "_createClass",
        "Equalizer",
        "_init",
        "eqId",
        "$watched",
        "$watched",
        "eqId",
        "Foundation",
        "eqId",
        "Foundation",
        "tooSmall",
        "$",
        "tooSmall",
        "tooSmall",
        "tooSmall",
        "imgs",
        "Foundation",
        "imgs",
        "_pauseEvents",
        "_onResizeMe",
        "e",
        "_onPostEqualized",
        "e",
        "e",
        "_events",
        "_checkMQ",
        "Foundation",
        "tooSmall",
        "tooSmall",
        "_killswitch",
        "_reflow",
        "_isStacked",
        "getHeights",
        "cb",
        "i",
        "len",
        "i",
        "i",
        "heights",
        "i",
        "cb",
        "heights",
        "getHeightsByRow",
        "cb",
        "groups",
        "group",
        "i",
        "len",
        "i",
        "i",
        "$",
        "i",
        "elOffsetTop",
        "lastElTopOffset",
        "group",
        "groups",
        "group",
        "lastElTopOffset",
        "elOffsetTop",
        "groups",
        "group",
        "i",
        "i",
        "groups",
        "j",
        "ln",
        "j",
        "$",
        "groups",
        "j",
        "heights",
        "groups",
        "j",
        "max",
        "cb",
        "groups",
        "applyHeight",
        "heights",
        "heights",
        "max",
        "applyHeightByRow",
        "groups",
        "groups",
        "i",
        "len",
        "i",
        "groups",
        "i",
        "groups",
        "i",
        "groupsILength",
        "groupsILength",
        "$",
        "groups",
        "i",
        "groupsILength",
        "j",
        "lenJ",
        "j",
        "$",
        "groups",
        "i",
        "j",
        "max",
        "destroy",
        "Foundation",
        "Equalizer",
        "Equalizer",
        "Foundation",
        "Equalizer",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Interchange",
        "element",
        "$",
        "Interchange",
        "options",
        "Foundation",
        "_createClass",
        "Interchange",
        "_init",
        "_events",
        "$",
        "Foundation",
        "_this2",
        "_reflow",
        "i",
        "i",
        "i",
        "rule",
        "match",
        "rule",
        "match",
        "match",
        "_addBreakpoints",
        "i",
        "Foundation",
        "Foundation",
        "i",
        "Foundation",
        "i",
        "Interchange",
        "query",
        "query",
        "_generateRules",
        "element",
        "rules",
        "rules",
        "rules",
        "rules",
        "rules",
        "rules",
        "i",
        "rules",
        "rules",
        "i",
        "rules",
        "i",
        "rule",
        "rule",
        "rule",
        "Interchange",
        "query",
        "query",
        "Interchange",
        "query",
        "rulesList",
        "path",
        "query",
        "rulesList",
        "replace",
        "path",
        "path",
        "path",
        "_this",
        "path",
        "trigger",
        "path",
        "path",
        "trigger",
        "$",
        "path",
        "response",
        "_this",
        "response",
        "trigger",
        "$",
        "response",
        "_this",
        "path",
        "destroy",
        "Interchange",
        "Interchange",
        "Interchange",
        "Foundation",
        "Interchange",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Magellan",
        "element",
        "$",
        "Magellan",
        "options",
        "Foundation",
        "_createClass",
        "Magellan",
        "_init",
        "Foundation",
        "$",
        "id",
        "id",
        "id",
        "$",
        "parseInt",
        "calcPoints",
        "html",
        "body",
        "body",
        "html",
        "html",
        "html",
        "$",
        "$tar",
        "_this",
        "$tar",
        "pt",
        "_this",
        "pt",
        "_events",
        "$",
        "_this",
        "_this",
        "$",
        "_this",
        "location",
        "_this",
        "location",
        "_this",
        "_this",
        "e",
        "e",
        "_this",
        "arrival",
        "$",
        "e",
        "_this",
        "_this",
        "scrollToLoc",
        "loc",
        "$",
        "loc",
        "$",
        "loc",
        "$",
        "scrollPos",
        "_this",
        "_this",
        "reflow",
        "_updateActive",
        "parseInt",
        "winPos",
        "curIdx",
        "winPos",
        "curIdx",
        "winPos",
        "p",
        "i",
        "isDown",
        "p",
        "_this",
        "winPos",
        "p",
        "_this",
        "_this",
        "winPos",
        "curIdx",
        "curVisible",
        "curVisible",
        "curIdx",
        "curIdx",
        "hash",
        "hash",
        "hash",
        "hash",
        "winPos",
        "destroy",
        "hash",
        "Foundation",
        "Magellan",
        "Magellan",
        "Foundation",
        "Magellan",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "OffCanvas",
        "element",
        "$",
        "OffCanvas",
        "options",
        "$",
        "$",
        "Foundation",
        "Foundation",
        "_createClass",
        "OffCanvas",
        "_init",
        "$",
        "id",
        "id",
        "id",
        "id",
        "$",
        "overlay",
        "overlayPosition",
        "$",
        "overlay",
        "overlayPosition",
        "$",
        "parseFloat",
        "$",
        "_events",
        "$",
        "$target",
        "_setMQChecker",
        "$",
        "Foundation",
        "_this",
        "_this",
        "_this",
        "Foundation",
        "_this",
        "_this",
        "reveal",
        "isRevealed",
        "isRevealed",
        "$closer",
        "$closer",
        "$closer",
        "$closer",
        "_stopScrolling",
        "_recordScrollable",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "elem",
        "_stopScrollPropagation",
        "elem",
        "up",
        "elem",
        "up",
        "elem",
        "down",
        "elem",
        "open",
        "trigger",
        "trigger",
        "trigger",
        "_this",
        "$",
        "Foundation",
        "_this",
        "canvasFocus",
        "canvasFocus",
        "_this",
        "Foundation",
        "close",
        "cb",
        "_this",
        "$",
        "Foundation",
        "toggle",
        "trigger",
        "trigger",
        "trigger",
        "_handleKeyboard",
        "e",
        "Foundation",
        "e",
        "close",
        "_this2",
        "_this2",
        "handled",
        "e",
        "e",
        "destroy",
        "Foundation",
        "OffCanvas",
        "OffCanvas",
        "Foundation",
        "OffCanvas",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Orbit",
        "element",
        "$",
        "Orbit",
        "options",
        "Foundation",
        "Foundation",
        "_createClass",
        "Orbit",
        "_init",
        "Foundation",
        "id",
        "id",
        "initActive",
        "$images",
        "Foundation",
        "$images",
        "_loadBullets",
        "geoSync",
        "Foundation",
        "_this",
        "_prepareForOrbit",
        "_setWrapperHeight",
        "cb",
        "temp",
        "$",
        "counter",
        "_this",
        "_this",
        "counter",
        "$",
        "max",
        "temp",
        "max",
        "temp",
        "max",
        "counter",
        "counter",
        "max",
        "cb",
        "cb",
        "max",
        "_setSlideHeight",
        "height",
        "$",
        "height",
        "_events",
        "e",
        "e",
        "_this",
        "e",
        "e",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "$controls",
        "e",
        "e",
        "_this",
        "$",
        "_this",
        "$",
        "idx",
        "_this",
        "_this",
        "idx",
        "_this",
        "ltr",
        "$slide",
        "idx",
        "e",
        "Foundation",
        "e",
        "next",
        "_this",
        "previous",
        "_this",
        "handled",
        "$",
        "e",
        "_this",
        "_this",
        "_reset",
        "el",
        "$",
        "el",
        "changeSlide",
        "isLTR",
        "chosenSlide",
        "idx",
        "$curSlide",
        "isLTR",
        "isLTR",
        "chosenSlide",
        "$newSlide",
        "isLTR",
        "$curSlide",
        "$curSlide",
        "$firstSlide",
        "$curSlide",
        "$curSlide",
        "$curSlide",
        "$lastSlide",
        "$curSlide",
        "$newSlide",
        "chosenSlide",
        "$newSlide",
        "$curSlide",
        "$newSlide",
        "idx",
        "idx",
        "$newSlide",
        "idx",
        "Foundation",
        "$newSlide",
        "dirIn",
        "$newSlide",
        "Foundation",
        "$curSlide",
        "dirOut",
        "$curSlide",
        "_this",
        "_this",
        "_this",
        "$curSlide",
        "$newSlide",
        "$newSlide",
        "_updateBullets",
        "idx",
        "$oldBullet",
        "idx",
        "span",
        "destroy",
        "Foundation",
        "Orbit",
        "Orbit",
        "Foundation",
        "Orbit",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "ResponsiveMenu",
        "$",
        "element",
        "Foundation",
        "_createClass",
        "ResponsiveMenu",
        "_init",
        "i",
        "rules",
        "i",
        "rules",
        "i",
        "rule",
        "rule",
        "rule",
        "rule",
        "rule",
        "MenuPlugins",
        "rulePlugin",
        "rulesTree",
        "ruleSize",
        "MenuPlugins",
        "rulePlugin",
        "rulesTree",
        "$",
        "Foundation",
        "_events",
        "$",
        "_this",
        "_checkMediaQueries",
        "$",
        "key",
        "Foundation",
        "key",
        "matchedMq",
        "key",
        "matchedMq",
        "matchedMq",
        "$",
        "MenuPlugins",
        "key",
        "value",
        "_this",
        "value",
        "matchedMq",
        "matchedMq",
        "destroy",
        "$",
        "Foundation",
        "ResponsiveMenu",
        "ResponsiveMenu",
        "Foundation",
        "Foundation",
        "Foundation",
        "Foundation",
        "ResponsiveMenu",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "ResponsiveToggle",
        "$",
        "element",
        "$",
        "ResponsiveToggle",
        "options",
        "Foundation",
        "_createClass",
        "ResponsiveToggle",
        "_init",
        "targetID",
        "$",
        "targetID",
        "$",
        "target",
        "targetID",
        "target",
        "$",
        "input",
        "input",
        "_events",
        "$",
        "_update",
        "Foundation",
        "toggleMenu",
        "Foundation",
        "Foundation",
        "_this2",
        "_this2",
        "Foundation",
        "_this2",
        "destroy",
        "$",
        "Foundation",
        "ResponsiveToggle",
        "ResponsiveToggle",
        "Foundation",
        "ResponsiveToggle",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Reveal",
        "element",
        "$",
        "Reveal",
        "options",
        "Foundation",
        "Foundation",
        "_createClass",
        "Reveal",
        "_init",
        "Foundation",
        "mobileSniff",
        "$",
        "$",
        "$",
        "$",
        "$",
        "_makeOverlay",
        "$",
        "_updatePosition",
        "$",
        "$",
        "left",
        "parseInt",
        "outerWidth",
        "width",
        "left",
        "parseInt",
        "height",
        "outerHeight",
        "top",
        "parseInt",
        "outerHeight",
        "top",
        "parseInt",
        "outerHeight",
        "height",
        "top",
        "parseInt",
        "top",
        "left",
        "_events",
        "closeZfTrigger",
        "$element",
        "_this",
        "$",
        "$element",
        "_this2",
        "_this2",
        "resizemeZfTrigger",
        "_this",
        "e",
        "e",
        "e",
        "e",
        "e",
        "_this",
        "e",
        "e",
        "_this",
        "$",
        "_this",
        "e",
        "$",
        "e",
        "_this",
        "$",
        "_handleState",
        "e",
        "open",
        "hash",
        "hash",
        "_this",
        "_this",
        "_this",
        "$",
        "$",
        "afterAnimation",
        "_this",
        "addRevealOpenClasses",
        "Foundation",
        "_this",
        "Foundation",
        "Foundation",
        "_this3",
        "_this3",
        "Foundation",
        "_this3",
        "afterAnimation",
        "Foundation",
        "addRevealOpenClasses",
        "setTimeout",
        "_this3",
        "_extraHandlers",
        "Foundation",
        "$",
        "e",
        "e",
        "_this",
        "$",
        "_this",
        "e",
        "$",
        "e",
        "_this",
        "$",
        "e",
        "Foundation",
        "e",
        "close",
        "_this",
        "_this",
        "_this",
        "e",
        "$",
        "Foundation",
        "e",
        "open",
        "_this",
        "_this",
        "setTimeout",
        "_this",
        "$target",
        "_this",
        "_this",
        "close",
        "_this",
        "_this",
        "_this",
        "handled",
        "preventDefault",
        "preventDefault",
        "e",
        "close",
        "Foundation",
        "finishUp",
        "finishUp",
        "Foundation",
        "finishUp",
        "finishUp",
        "$",
        "$",
        "_this",
        "$",
        "$",
        "_this",
        "$",
        "_this",
        "_this",
        "$",
        "$",
        "Foundation",
        "_this",
        "_this",
        "_this",
        "_this",
        "toggle",
        "destroy",
        "$",
        "$",
        "Foundation",
        "Reveal",
        "Reveal",
        "Foundation",
        "Reveal",
        "iPhoneSniff",
        "androidSniff",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Slider",
        "element",
        "$",
        "Slider",
        "options",
        "Foundation",
        "Foundation",
        "_createClass",
        "Slider",
        "_init",
        "$",
        "$",
        "$",
        "isDbl",
        "setHandles",
        "_this2",
        "_this2",
        "_this2",
        "_reflow",
        "_pctOfBar",
        "value",
        "percent",
        "value",
        "pctOfBar",
        "pctOfBar",
        "pctOfBar",
        "pctOfBar",
        "pctOfBar",
        "_value",
        "pctOfBar",
        "pctOfBar",
        "pctOfBar",
        "pctOfBar",
        "pctOfBar",
        "pctOfBar",
        "value",
        "_logTransform",
        "value",
        "baseLog",
        "value",
        "_powTransform",
        "value",
        "value",
        "_setHandlePos",
        "$hndl",
        "location",
        "noInvert",
        "cb",
        "location",
        "parseFloat",
        "location",
        "location",
        "location",
        "location",
        "location",
        "isDbl",
        "$hndl",
        "parseFloat",
        "location",
        "location",
        "h2Val",
        "h2Val",
        "location",
        "parseFloat",
        "location",
        "location",
        "h1Val",
        "h1Val",
        "location",
        "noInvert",
        "location",
        "location",
        "vert",
        "vert",
        "$hndl",
        "hOrW",
        "hOrW",
        "location",
        "elemDim",
        "handleDim",
        "pctOfBar",
        "percent",
        "pxToMove",
        "elemDim",
        "location",
        "parseFloat",
        "location",
        "$hndl",
        "location",
        "isDbl",
        "$hndl",
        "percent",
        "handleDim",
        "elemDim",
        "isLeftHndl",
        "css",
        "lOrT",
        "movement",
        "dim",
        "parseFloat",
        "lOrT",
        "movement",
        "handlePct",
        "cb",
        "cb",
        "cb",
        "parseFloat",
        "lOrT",
        "dim",
        "movement",
        "isNaN",
        "handlePos",
        "handlePos",
        "handlePct",
        "css",
        "hOrW",
        "dim",
        "_this",
        "$hndl",
        "Foundation",
        "moveTime",
        "$hndl",
        "isNaN",
        "movement",
        "$hndl",
        "lOrT",
        "pctOfBar",
        "$hndl",
        "lOrT",
        "movement",
        "_this",
        "_this",
        "hOrW",
        "pctOfBar",
        "_this",
        "css",
        "clearTimeout",
        "_this",
        "_this",
        "setTimeout",
        "_this",
        "$hndl",
        "_this",
        "_setInitAttr",
        "idx",
        "idx",
        "idx",
        "Foundation",
        "idx",
        "id",
        "idx",
        "initVal",
        "idx",
        "id",
        "initVal",
        "_setValues",
        "$handle",
        "val",
        "$handle",
        "idx",
        "val",
        "$handle",
        "val",
        "_handleEvent",
        "e",
        "$handle",
        "val",
        "val",
        "e",
        "vertical",
        "vertical",
        "vertical",
        "e",
        "e",
        "param",
        "param",
        "vertical",
        "$",
        "$",
        "direction",
        "e",
        "e",
        "eventOffset",
        "eventOffset",
        "windowScroll",
        "eventOffset",
        "elemOffset",
        "eventFromBar",
        "barXY",
        "eventFromBar",
        "barDim",
        "barXY",
        "barDim",
        "barXY",
        "eventFromBar",
        "percent",
        "barXY",
        "barDim",
        "value",
        "offsetPct",
        "Foundation",
        "value",
        "value",
        "value",
        "_this",
        "value",
        "hasVal",
        "$handle",
        "absPosition",
        "direction",
        "barXY",
        "param",
        "absPosition",
        "direction",
        "barXY",
        "param",
        "$handle",
        "firstHndlPos",
        "secndHndlPos",
        "value",
        "val",
        "hasVal",
        "$handle",
        "value",
        "hasVal",
        "_adjustValue",
        "$handle",
        "value",
        "parseFloat",
        "step",
        "$handle",
        "val",
        "parseFloat",
        "$handle",
        "val",
        "value",
        "left",
        "val",
        "step",
        "prev_val",
        "val",
        "left",
        "next_val",
        "prev_val",
        "step",
        "left",
        "val",
        "val",
        "val",
        "prev_val",
        "div",
        "next_val",
        "prev_val",
        "val",
        "_events",
        "_eventsForHandle",
        "$handle",
        "e",
        "_this",
        "$",
        "_this",
        "e",
        "_this",
        "idx",
        "$",
        "e",
        "_this",
        "$",
        "e",
        "_this",
        "_this",
        "e",
        "_this",
        "e",
        "_this",
        "$",
        "$handle",
        "e",
        "$handle",
        "_this",
        "_this",
        "curHandle",
        "$",
        "e",
        "$body",
        "e",
        "e",
        "_this",
        "e",
        "curHandle",
        "e",
        "_this",
        "e",
        "curHandle",
        "$handle",
        "_this",
        "_this",
        "$body",
        "e",
        "e",
        "$handle",
        "e",
        "$",
        "_this",
        "_this",
        "_$handle",
        "parseFloat",
        "_this",
        "idx",
        "Foundation",
        "e",
        "decrease",
        "newValue",
        "oldValue",
        "_this",
        "increase",
        "newValue",
        "oldValue",
        "_this",
        "decrease_fast",
        "newValue",
        "oldValue",
        "_this",
        "increase_fast",
        "newValue",
        "oldValue",
        "_this",
        "handled",
        "e",
        "_this",
        "_$handle",
        "newValue",
        "destroy",
        "clearTimeout",
        "Foundation",
        "Slider",
        "Slider",
        "frac",
        "num",
        "frac",
        "num",
        "$handle",
        "dir",
        "clickPos",
        "param",
        "$handle",
        "dir",
        "$handle",
        "param",
        "clickPos",
        "value",
        "value",
        "Foundation",
        "Slider",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Sticky",
        "element",
        "$",
        "Sticky",
        "options",
        "Foundation",
        "_createClass",
        "Sticky",
        "_init",
        "Foundation",
        "$parent",
        "$parent",
        "$parent",
        "$",
        "id",
        "id",
        "$",
        "_this",
        "id",
        "$",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "$",
        "_this",
        "_this",
        "_this",
        "_this",
        "scroll",
        "_this",
        "_this",
        "scroll",
        "_this",
        "_this",
        "id",
        "_parsePoints",
        "top",
        "btm",
        "pts",
        "i",
        "len",
        "pts",
        "i",
        "i",
        "pts",
        "i",
        "pt",
        "pts",
        "i",
        "pts",
        "i",
        "$",
        "place",
        "pt",
        "anchor",
        "place",
        "place",
        "pt",
        "anchor",
        "breaks",
        "i",
        "pt",
        "breaks",
        "_events",
        "id",
        "id",
        "$",
        "scrollListener",
        "scrollListener",
        "e",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "e",
        "el",
        "_this",
        "id",
        "e",
        "el",
        "_this",
        "id",
        "e",
        "el",
        "_this",
        "id",
        "_eventsHandler",
        "id",
        "id",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "id",
        "_this",
        "_this",
        "scrollListener",
        "_pauseListeners",
        "scrollListener",
        "$",
        "scrollListener",
        "_calc",
        "checkSizes",
        "scroll",
        "checkSizes",
        "scroll",
        "scroll",
        "scroll",
        "scroll",
        "_setSticky",
        "stickTo",
        "stickTo",
        "css",
        "mrgn",
        "mrgn",
        "css",
        "stickTo",
        "css",
        "notStuckTo",
        "notStuckTo",
        "stickTo",
        "css",
        "stickTo",
        "_this",
        "_removeSticky",
        "isTop",
        "stickTo",
        "stickToTop",
        "stickToTop",
        "isTop",
        "css",
        "mrgn",
        "css",
        "isTop",
        "css",
        "css",
        "anchorPt",
        "stickTo",
        "topOrBottom",
        "css",
        "topOrBottom",
        "_setSizes",
        "cb",
        "Foundation",
        "cb",
        "cb",
        "cb",
        "parseInt",
        "comp",
        "parseInt",
        "comp",
        "newElemWidth",
        "pdngl",
        "pdngr",
        "newContainerHeight",
        "newContainerHeight",
        "newContainerHeight",
        "newContainerHeight",
        "anchorPt",
        "newContainerHeight",
        "cb",
        "cb",
        "cb",
        "_setBreakPoints",
        "elemHeight",
        "cb",
        "cb",
        "cb",
        "cb",
        "emCalc",
        "emCalc",
        "topPoint",
        "topPoint",
        "mTop",
        "bottomPoint",
        "elemHeight",
        "mTop",
        "topPoint",
        "winHeight",
        "elemHeight",
        "mBtm",
        "bottomPoint",
        "winHeight",
        "mBtm",
        "topPoint",
        "bottomPoint",
        "cb",
        "cb",
        "cb",
        "destroy",
        "$",
        "Foundation",
        "Sticky",
        "Sticky",
        "em",
        "parseInt",
        "em",
        "Foundation",
        "Sticky",
        "jQuery",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Tabs",
        "element",
        "$",
        "Tabs",
        "options",
        "Foundation",
        "Foundation",
        "_createClass",
        "Tabs",
        "_init",
        "$",
        "$",
        "$elem",
        "$elem",
        "_this",
        "$link",
        "$link",
        "$link",
        "hash",
        "$",
        "hash",
        "$elem",
        "$link",
        "hash",
        "isActive",
        "linkId",
        "$tabContent",
        "isActive",
        "linkId",
        "isActive",
        "_this",
        "$",
        "$",
        "$elem",
        "_this",
        "$link",
        "$images",
        "Foundation",
        "$images",
        "anchor",
        "_this2",
        "anchor",
        "$link",
        "_this2",
        "$",
        "anchor",
        "_this2",
        "_this2",
        "$",
        "offset",
        "_this2",
        "_this2",
        "$link",
        "$",
        "anchor",
        "_events",
        "$",
        "$",
        "_addClickHandler",
        "e",
        "e",
        "e",
        "_this",
        "$",
        "_addKeyHandler",
        "e",
        "e",
        "$",
        "$element",
        "$elements",
        "i",
        "$",
        "$element",
        "_this",
        "$prevElement",
        "i",
        "$elements",
        "$elements",
        "i",
        "$nextElement",
        "i",
        "$elements",
        "$elements",
        "$elements",
        "i",
        "$prevElement",
        "$elements",
        "i",
        "$nextElement",
        "$elements",
        "i",
        "$elements",
        "Foundation",
        "e",
        "open",
        "$element",
        "_this",
        "$element",
        "previous",
        "$prevElement",
        "_this",
        "$prevElement",
        "next",
        "$nextElement",
        "_this",
        "$nextElement",
        "handled",
        "e",
        "e",
        "_handleTabChange",
        "$target",
        "historyHandled",
        "$target",
        "$target",
        "$target",
        "$target",
        "$tabLink",
        "hash",
        "$oldTab",
        "$target",
        "historyHandled",
        "$target",
        "history",
        "anchor",
        "history",
        "anchor",
        "$target",
        "$targetContent",
        "$targetContent",
        "_openTab",
        "$target",
        "$target",
        "$tabLink",
        "hash",
        "$target",
        "$tabLink",
        "$targetContent",
        "_collapseTab",
        "$target",
        "$target",
        "$",
        "$target_anchor",
        "selectTab",
        "elem",
        "historyHandled",
        "elem",
        "_typeof",
        "elem",
        "idStr",
        "elem",
        "idStr",
        "elem",
        "idStr",
        "idStr",
        "idStr",
        "idStr",
        "$target",
        "historyHandled",
        "_setHeight",
        "$",
        "panel",
        "_this",
        "isActive",
        "panel",
        "isActive",
        "panel",
        "max",
        "temp",
        "max",
        "temp",
        "max",
        "max",
        "destroy",
        "$",
        "$",
        "Foundation",
        "Tabs",
        "Tabs",
        "Foundation",
        "Tabs",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Toggler",
        "element",
        "$",
        "Toggler",
        "element",
        "options",
        "Foundation",
        "_createClass",
        "Toggler",
        "_init",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "input",
        "$",
        "id",
        "id",
        "id",
        "id",
        "_events",
        "toggle",
        "_toggleClass",
        "isOn",
        "isOn",
        "_toggleAnimate",
        "Foundation",
        "_this",
        "Foundation",
        "_this",
        "_updateARIA",
        "isOn",
        "isOn",
        "destroy",
        "Foundation",
        "Toggler",
        "Toggler",
        "Foundation",
        "Toggler",
        "jQuery",
        "target",
        "props",
        "i",
        "props",
        "i",
        "props",
        "i",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "descriptor",
        "target",
        "descriptor",
        "descriptor",
        "Constructor",
        "protoProps",
        "staticProps",
        "protoProps",
        "defineProperties",
        "Constructor",
        "protoProps",
        "staticProps",
        "defineProperties",
        "Constructor",
        "staticProps",
        "Constructor",
        "instance",
        "Constructor",
        "instance",
        "Constructor",
        "$",
        "element",
        "options",
        "_classCallCheck",
        "Tooltip",
        "element",
        "$",
        "Tooltip",
        "options",
        "Foundation",
        "_createClass",
        "Tooltip",
        "_init",
        "Foundation",
        "$",
        "elemId",
        "elemId",
        "elemId",
        "elemId",
        "elemId",
        "_getPositionClass",
        "element",
        "element",
        "element",
        "position",
        "position",
        "position",
        "position",
        "_buildTemplate",
        "id",
        "$",
        "templateClasses",
        "id",
        "$template",
        "_reposition",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "position",
        "_setPosition",
        "Foundation",
        "Foundation",
        "position",
        "position",
        "direction",
        "param",
        "$tipDims",
        "$tipDims",
        "Foundation",
        "Foundation",
        "$anchorDims",
        "Foundation",
        "position",
        "Foundation",
        "position",
        "show",
        "Foundation",
        "_this",
        "hide",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_events",
        "e",
        "_this",
        "_this",
        "setTimeout",
        "_this",
        "_this",
        "e",
        "clearTimeout",
        "_this",
        "isFocus",
        "_this",
        "_this",
        "_this",
        "e",
        "e",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "_this",
        "e",
        "e",
        "_this",
        "e",
        "_this",
        "_this",
        "_this",
        "e",
        "isFocus",
        "_this",
        "_this",
        "isFocus",
        "_this",
        "e",
        "isFocus",
        "_this",
        "_this",
        "_this",
        "_this",
        "toggle",
        "destroy",
        "Foundation",
        "Tooltip",
        "Tooltip",
        "Foundation",
        "Tooltip",
        "jQuery"
    ],
    "literals": [
        "'use strict'",
        "\"function\"",
        "\"symbol\"",
        "\"function\"",
        "\"symbol\"",
        "\"use strict\"",
        "'6.3.1'",
        "'html'",
        "'dir'",
        "'rtl'",
        "'data-'",
        "'data-'",
        "'zfPlugin'",
        "'zfPlugin'",
        "'init.zf.'",
        "'zfPlugin'",
        "'data-'",
        "'zfPlugin'",
        "'destroyed.zf.'",
        "'zfPlugin'",
        "'undefined'",
        "'undefined'",
        "'object'",
        "'[data-'",
        "']'",
        "'_init'",
        "'string'",
        "'[data-'",
        "']'",
        "'_init'",
        "'undefined'",
        "'object'",
        "'-'",
        "''",
        "'undefined'",
        "'string'",
        "'[data-'",
        "']'",
        "'[data-'",
        "']'",
        "'zfPlugin'",
        "\"Tried to initialize \"",
        "\" on an element that already has a Foundation plugin.\"",
        "'data-options'",
        "'data-options'",
        "';'",
        "':'",
        "'zfPlugin'",
        "'transition'",
        "'transitionend'",
        "'WebkitTransition'",
        "'webkitTransitionEnd'",
        "'MozTransition'",
        "'transitionend'",
        "'OTransition'",
        "'otransitionend'",
        "'div'",
        "'undefined'",
        "'transitionend'",
        "'transitionend'",
        "'undefined'",
        "'undefined'",
        "'meta.foundation-mq'",
        "'.no-js'",
        "'<meta class=\"foundation-mq\">'",
        "'no-js'",
        "'undefined'",
        "'string'",
        "'zfPlugin'",
        "'zfPlugin'",
        "\"We're sorry, '\"",
        "\"' is not an available method for \"",
        "'this element'",
        "'.'",
        "'We\\'re sorry, '",
        "' is not a valid parameter. You must use a string representing the method you wish to invoke.'",
        "'webkit'",
        "'moz'",
        "'RequestAnimationFrame'",
        "'CancelAnimationFrame'",
        "'CancelRequestAnimationFrame'",
        "'function'",
        "'Function.prototype.bind - what is trying to be bound is not callable'",
        "\"\"",
        "'true'",
        "'false'",
        "'$1-$2'",
        "'use strict'",
        "\"I'm sorry, Dave. I'm afraid I can't do that.\"",
        "'top'",
        "'left'",
        "'right'",
        "'center top'",
        "'center bottom'",
        "'center left'",
        "'center right'",
        "'center'",
        "'reveal'",
        "'reveal full'",
        "'left bottom'",
        "'right bottom'",
        "'use strict'",
        "'TAB'",
        "'ENTER'",
        "'ESCAPE'",
        "'SPACE'",
        "'ARROW_LEFT'",
        "'ARROW_UP'",
        "'ARROW_RIGHT'",
        "'ARROW_DOWN'",
        "''",
        "'SHIFT_'",
        "'CTRL_'",
        "'ALT_'",
        "''",
        "'Component not defined!'",
        "'undefined'",
        "'function'",
        "'function'",
        "'function'",
        "'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]'",
        "':visible'",
        "'tabindex'",
        "'keydown.zf.trapfocus'",
        "'TAB'",
        "'SHIFT_TAB'",
        "'keydown.zf.trapfocus'",
        "'use strict'",
        "\"function\"",
        "\"symbol\"",
        "\"function\"",
        "\"symbol\"",
        "'default'",
        "'only screen'",
        "'only screen and (orientation: landscape)'",
        "'only screen and (orientation: portrait)'",
        "'only screen and (-webkit-min-device-pixel-ratio: 2),'",
        "'only screen and (min--moz-device-pixel-ratio: 2),'",
        "'only screen and (-o-min-device-pixel-ratio: 2/1),'",
        "'only screen and (min-device-pixel-ratio: 2),'",
        "'only screen and (min-resolution: 192dpi),'",
        "'only screen and (min-resolution: 2dppx)'",
        "''",
        "'.foundation-mq'",
        "'font-family'",
        "'only screen and (min-width: '",
        "')'",
        "' '",
        "'only'",
        "'undefined'",
        "'undefined'",
        "'object'",
        "'resize.zf.mediaquery'",
        "'changed.zf.mediaquery'",
        "'use strict'",
        "'style'",
        "'script'",
        "'text/css'",
        "'matchmediajs-test'",
        "'getComputedStyle'",
        "'@media '",
        "'{ #matchmediajs-test { width: 1px; } }'",
        "'1px'",
        "'all'",
        "'all'",
        "'string'",
        "'&'",
        "' '",
        "'='",
        "'use strict'",
        "'mui-enter'",
        "'mui-leave'",
        "'mui-enter-active'",
        "'mui-leave-active'",
        "'finished.zf.animate'",
        "'finished.zf.animate'",
        "'finished.zf.animate'",
        "'finished.zf.animate'",
        "'transition'",
        "'none'",
        "'transition'",
        "''",
        "' '",
        "' '",
        "'use strict'",
        "'zf'",
        "'role'",
        "'menubar'",
        "'li'",
        "'role'",
        "'menuitem'",
        "'is-'",
        "'-submenu'",
        "'-item'",
        "'is-'",
        "'-submenu-parent'",
        "'ul'",
        "'aria-haspopup'",
        "'aria-label'",
        "'a:first'",
        "'drilldown'",
        "'aria-expanded'",
        "'submenu '",
        "'data-submenu'",
        "''",
        "'role'",
        "'menu'",
        "'drilldown'",
        "'aria-hidden'",
        "'[data-submenu]'",
        "'is-submenu-item '",
        "'is-'",
        "'-submenu'",
        "'-item'",
        "'is-'",
        "'-submenu-parent'",
        "'>li, .menu, .menu > li'",
        "' '",
        "' '",
        "' is-submenu-item submenu is-active'",
        "'data-submenu'",
        "'display'",
        "''",
        "'use strict'",
        "'timer'",
        "'paused'",
        "'function'",
        "'timerstart.zf.'",
        "'paused'",
        "'timerpaused.zf.'",
        "'complete'",
        "'src'",
        "'src'",
        "'?'",
        "'&'",
        "'?'",
        "'load'",
        "'use strict'",
        "'1.0.0'",
        "'ontouchstart'",
        "'touchmove'",
        "'touchend'",
        "'left'",
        "'right'",
        "'swipe'",
        "'swipe'",
        "'touchmove'",
        "'touchend'",
        "'touchstart'",
        "'touchstart'",
        "'left'",
        "'up'",
        "'down'",
        "'right'",
        "'swipe'",
        "'swipe'",
        "'touchstart touchmove touchend touchcancel'",
        "'mousedown'",
        "'mousemove'",
        "'mouseup'",
        "'MouseEvent'",
        "'function'",
        "'bubbles'",
        "'cancelable'",
        "'screenX'",
        "'screenY'",
        "'clientX'",
        "'clientY'",
        "'MouseEvent'",
        "'use strict'",
        "\"function\"",
        "\"symbol\"",
        "\"function\"",
        "\"symbol\"",
        "'WebKit'",
        "'Moz'",
        "'O'",
        "'Ms'",
        "''",
        "'MutationObserver'",
        "'MutationObserver'",
        "' '",
        "'#'",
        "'close'",
        "'trigger'",
        "'triggerHandler'",
        "'.zf.trigger'",
        "'click.zf.trigger'",
        "'[data-open]'",
        "'open'",
        "'click.zf.trigger'",
        "'[data-close]'",
        "'close'",
        "'close'",
        "'close.zf.trigger'",
        "'click.zf.trigger'",
        "'[data-toggle]'",
        "'toggle'",
        "'toggle'",
        "'toggle.zf.trigger'",
        "'close.zf.trigger'",
        "'[data-closable]'",
        "'closable'",
        "''",
        "'closed.zf'",
        "'closed.zf'",
        "'focus.zf.trigger blur.zf.trigger'",
        "'[data-toggle-focus]'",
        "'toggle-focus'",
        "'#'",
        "'toggle.zf.trigger'",
        "'load'",
        "'[data-yeti-box]'",
        "'dropdown'",
        "'tooltip'",
        "'reveal'",
        "'string'",
        "'undefined'",
        "'undefined'",
        "'object'",
        "'string'",
        "'Plugin names must be strings'",
        "'closeme.zf.'",
        "' '",
        "'.'",
        "'[data-'",
        "']'",
        "'[data-yeti-box=\"'",
        "'\"]'",
        "'close.zf.trigger'",
        "'[data-resize]'",
        "'resize.zf.trigger'",
        "'resize.zf.trigger'",
        "'resizeme.zf.trigger'",
        "'data-events'",
        "\"resize\"",
        "'[data-scroll]'",
        "'scroll.zf.trigger'",
        "'scroll.zf.trigger'",
        "'scrollme.zf.trigger'",
        "'data-events'",
        "\"scroll\"",
        "'[data-resize], [data-scroll], [data-mutate]'",
        "\"attributes\"",
        "\"data-events\"",
        "\"scroll\"",
        "\"data-events\"",
        "'scrollme.zf.trigger'",
        "\"data-events\"",
        "\"resize\"",
        "\"data-events\"",
        "'resizeme.zf.trigger'",
        "\"style\"",
        "\"[data-mutate]\"",
        "\"data-events\"",
        "\"mutate\"",
        "\"[data-mutate]\"",
        "'mutateme.zf.trigger'",
        "\"[data-mutate]\"",
        "\"childList\"",
        "\"[data-mutate]\"",
        "\"data-events\"",
        "\"mutate\"",
        "\"[data-mutate]\"",
        "'mutateme.zf.trigger'",
        "\"[data-mutate]\"",
        "\"data-events\"",
        "\"style\"",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Abide'",
        "'_init'",
        "'input, textarea, select'",
        "'_events'",
        "'.abide'",
        "'reset.zf.abide'",
        "'submit.zf.abide'",
        "'fieldChange'",
        "'change.zf.abide'",
        "'change.zf.abide'",
        "'input.zf.abide'",
        "'input.zf.abide'",
        "'blur.zf.abide'",
        "'blur.zf.abide'",
        "'_reflow'",
        "'requiredCheck'",
        "'required'",
        "'checkbox'",
        "'select'",
        "'select-one'",
        "'select-multiple'",
        "'option:selected'",
        "'findFormError'",
        "'[data-form-error-for=\"'",
        "'\"]'",
        "'findLabel'",
        "'label[for=\"'",
        "'\"]'",
        "'label'",
        "'findRadioLabels'",
        "'label[for=\"'",
        "'\"]'",
        "'label'",
        "'addErrorClasses'",
        "'data-invalid'",
        "''",
        "'removeRadioErrorClasses'",
        "':radio[name=\"'",
        "'\"]'",
        "'data-invalid'",
        "'removeErrorClasses'",
        "'radio'",
        "'name'",
        "'data-invalid'",
        "'validateInput'",
        "'data-validator'",
        "'[data-abide-ignore]'",
        "'[type=\"hidden\"]'",
        "'[disabled]'",
        "'radio'",
        "'name'",
        "'checkbox'",
        "'select'",
        "'select-one'",
        "'select-multiple'",
        "'required'",
        "'data-equalto'",
        "'valid'",
        "'invalid'",
        "'.zf.abide'",
        "'[data-equalto=\"'",
        "'id'",
        "'\"]'",
        "'removeErrorClasses'",
        "'addErrorClasses'",
        "'validateForm'",
        "'[data-abide-error]'",
        "'display'",
        "'none'",
        "'block'",
        "'formvalid'",
        "'forminvalid'",
        "'.zf.abide'",
        "'validateText'",
        "'pattern'",
        "'type'",
        "'type'",
        "'required'",
        "'validateRadio'",
        "':radio[name=\"'",
        "'\"]'",
        "'required'",
        "'checked'",
        "'matchValidation'",
        "' '",
        "'resetForm'",
        "'.'",
        "'small'",
        "'.'",
        "'small'",
        "'.'",
        "'[data-abide-error]'",
        "'display'",
        "'none'",
        "':input'",
        "':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]'",
        "''",
        "'data-invalid'",
        "':input:radio'",
        "'[data-abide-ignore]'",
        "'checked'",
        "'data-invalid'",
        "':input:checkbox'",
        "'[data-abide-ignore]'",
        "'checked'",
        "'data-invalid'",
        "'formreset.zf.abide'",
        "'destroy'",
        "'.abide'",
        "'[data-abide-error]'",
        "'display'",
        "'none'",
        "'.abide'",
        "'fieldChange'",
        "'is-invalid-label'",
        "'is-invalid-input'",
        "'.form-error'",
        "'is-visible'",
        "'#'",
        "'data-equalto'",
        "'Abide'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Accordion'",
        "'Accordion'",
        "'ENTER'",
        "'toggle'",
        "'SPACE'",
        "'toggle'",
        "'ARROW_DOWN'",
        "'next'",
        "'ARROW_UP'",
        "'previous'",
        "'_init'",
        "'role'",
        "'tablist'",
        "'[data-accordion-item]'",
        "'[data-tab-content]'",
        "'accordion'",
        "'-label'",
        "'a:first'",
        "'aria-controls'",
        "'role'",
        "'tab'",
        "'id'",
        "'aria-expanded'",
        "'aria-selected'",
        "'role'",
        "'tabpanel'",
        "'aria-labelledby'",
        "'aria-hidden'",
        "'id'",
        "'.is-active'",
        "'[data-tab-content]'",
        "'[href$=\"'",
        "'\"]'",
        "'[data-accordion-item]'",
        "'is-active'",
        "'html, body'",
        "'deeplink.zf.accordion'",
        "'_events'",
        "'[data-tab-content]'",
        "'a'",
        "'click.zf.accordion keydown.zf.accordion'",
        "'click.zf.accordion'",
        "'keydown.zf.accordion'",
        "'Accordion'",
        "'a'",
        "'click.zf.accordion'",
        "'a'",
        "'click.zf.accordion'",
        "'popstate'",
        "'toggle'",
        "'is-active'",
        "'a'",
        "'href'",
        "''",
        "''",
        "'down'",
        "'aria-hidden'",
        "'[data-tab-content]'",
        "'is-active'",
        "'.is-active'",
        "'[data-tab-content]'",
        "'down.zf.accordion'",
        "'#'",
        "'aria-labelledby'",
        "'aria-expanded'",
        "'aria-selected'",
        "'up'",
        "'is-active'",
        "'is-active'",
        "'up.zf.accordion'",
        "'aria-hidden'",
        "'is-active'",
        "'#'",
        "'aria-labelledby'",
        "'aria-expanded'",
        "'aria-selected'",
        "'destroy'",
        "'[data-tab-content]'",
        "'display'",
        "''",
        "'a'",
        "'.zf.accordion'",
        "'popstate'",
        "'Accordion'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'accordion'",
        "'AccordionMenu'",
        "'AccordionMenu'",
        "'ENTER'",
        "'toggle'",
        "'SPACE'",
        "'toggle'",
        "'ARROW_RIGHT'",
        "'open'",
        "'ARROW_UP'",
        "'up'",
        "'ARROW_DOWN'",
        "'down'",
        "'ARROW_LEFT'",
        "'close'",
        "'ESCAPE'",
        "'closeAll'",
        "'_init'",
        "'[data-submenu]'",
        "'.is-active'",
        "'role'",
        "'menu'",
        "'aria-multiselectable'",
        "'.is-accordion-submenu-parent'",
        "'acc-menu-link'",
        "'[data-submenu]'",
        "'acc-menu'",
        "'is-active'",
        "'aria-controls'",
        "'aria-expanded'",
        "'role'",
        "'menuitem'",
        "'id'",
        "'aria-labelledby'",
        "'aria-hidden'",
        "'role'",
        "'menu'",
        "'id'",
        "'.is-active'",
        "'_events'",
        "'li'",
        "'[data-submenu]'",
        "'a'",
        "'click.zf.accordionMenu'",
        "'click.zf.accordionMenu'",
        "'keydown.zf.accordionmenu'",
        "'ul'",
        "'li'",
        "'[data-submenu]'",
        "'a'",
        "'a'",
        "'[data-submenu]:visible'",
        "'li:first-child'",
        "'a'",
        "':first-child'",
        "'li'",
        "'a'",
        "'li'",
        "'[data-submenu]:visible'",
        "'li'",
        "'li:last-child'",
        "'a'",
        "':last-child'",
        "'li'",
        "'li'",
        "'a'",
        "'AccordionMenu'",
        "':hidden'",
        "'li'",
        "'a'",
        "':hidden'",
        "'[data-submenu]'",
        "'[data-submenu]'",
        "'li'",
        "'a'",
        "'[data-submenu]'",
        "'[data-submenu]'",
        "'hideAll'",
        "'[data-submenu]'",
        "'showAll'",
        "'[data-submenu]'",
        "'toggle'",
        "':animated'",
        "':hidden'",
        "'down'",
        "'.is-active'",
        "'is-active'",
        "'aria-hidden'",
        "'.is-accordion-submenu-parent'",
        "'aria-expanded'",
        "'down.zf.accordionMenu'",
        "'up'",
        "'up.zf.accordionMenu'",
        "'[data-submenu]'",
        "'aria-hidden'",
        "'.is-accordion-submenu-parent'",
        "'aria-expanded'",
        "'destroy'",
        "'[data-submenu]'",
        "'display'",
        "''",
        "'a'",
        "'click.zf.accordionMenu'",
        "'accordion'",
        "'AccordionMenu'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'drilldown'",
        "'Drilldown'",
        "'Drilldown'",
        "'ENTER'",
        "'open'",
        "'SPACE'",
        "'open'",
        "'ARROW_RIGHT'",
        "'next'",
        "'ARROW_UP'",
        "'up'",
        "'ARROW_DOWN'",
        "'down'",
        "'ARROW_LEFT'",
        "'previous'",
        "'ESCAPE'",
        "'close'",
        "'TAB'",
        "'down'",
        "'SHIFT_TAB'",
        "'up'",
        "'_init'",
        "'li.is-drilldown-submenu-parent'",
        "'a'",
        "'li'",
        "'[data-submenu]'",
        "'li'",
        "'.js-drilldown-back'",
        "'role'",
        "'menuitem'",
        "'a'",
        "'data-mutate'",
        "'data-drilldown'",
        "'drilldown'",
        "'_prepareMenu'",
        "'[data-submenu]'",
        "'<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>'",
        "'savedHref'",
        "'href'",
        "'href'",
        "'tabindex'",
        "'[data-submenu]'",
        "'aria-hidden'",
        "'tabindex'",
        "'role'",
        "'menu'",
        "'.js-drilldown-back'",
        "\"bottom\"",
        "\"top\"",
        "\"Unsupported backButtonPosition value '\"",
        "\"'\"",
        "'invisible'",
        "'drilldown-submenu-cover-previous'",
        "'is-drilldown'",
        "'is-drilldown'",
        "'animate-height'",
        "'_resize'",
        "'max-width'",
        "'none'",
        "'min-height'",
        "'none'",
        "'_events'",
        "'click.zf.drilldown'",
        "'click.zf.drilldown'",
        "'ul'",
        "'li'",
        "'is-drilldown-submenu-parent'",
        "'li'",
        "'body'",
        "'.zf.drilldown'",
        "'click.zf.drilldown'",
        "'.zf.drilldown'",
        "'mutateme.zf.trigger'",
        "'_registerEvents'",
        "'open.zf.drilldown hide.zf.drilldown closed.zf.drilldown'",
        "'_scrollTop'",
        "''",
        "'html, body'",
        "'html'",
        "'scrollme.zf.drilldown'",
        "'_keyboardEvents'",
        "'.js-drilldown-back > a, .is-submenu-parent-item > a'",
        "'keydown.zf.drilldown'",
        "'li'",
        "'ul'",
        "'li'",
        "'a'",
        "'Drilldown'",
        "'li'",
        "'li'",
        "'li'",
        "'ul li a'",
        "'li'",
        "'ul'",
        "'li'",
        "'ul'",
        "'li'",
        "'ul'",
        "'li'",
        "'a'",
        "'> li:first-child > a'",
        "'> li:last-child > a'",
        "'> li > a'",
        "'a'",
        "'li'",
        "'ul'",
        "'li'",
        "'ul'",
        "'li'",
        "'ul'",
        "'li'",
        "'a'",
        "'li'",
        "'li'",
        "'li'",
        "'ul li a'",
        "'_hideAll'",
        "'.is-drilldown-submenu.is-active'",
        "'is-closing'",
        "'ul'",
        "'calcHeight'",
        "'is-active is-closing'",
        "'closed.zf.drilldown'",
        "'_back'",
        "'click.zf.drilldown'",
        "'.js-drilldown-back'",
        "'click.zf.drilldown'",
        "'li'",
        "'ul'",
        "'li'",
        "'_menuLinkEvents'",
        "'.is-drilldown-submenu-parent'",
        "'click.zf.drilldown'",
        "'click.zf.drilldown'",
        "'_show'",
        "'[data-submenu]'",
        "'calcHeight'",
        "'aria-expanded'",
        "'[data-submenu]'",
        "'is-active'",
        "'invisible'",
        "'aria-hidden'",
        "'open.zf.drilldown'",
        "'_hide'",
        "'ul'",
        "'calcHeight'",
        "'li'",
        "'aria-expanded'",
        "'aria-hidden'",
        "'is-closing'",
        "'is-closing'",
        "'is-active is-closing'",
        "'invisible'",
        "'hide.zf.drilldown'",
        "'_getMaxDims'",
        "'li'",
        "'calcHeight'",
        "'is-drilldown-submenu'",
        "'height'",
        "'min-height'",
        "'px'",
        "'max-width'",
        "'px'",
        "'destroy'",
        "'.zf.drilldown'",
        "'mutateme.zf.trigger'",
        "'drilldown'",
        "'.js-drilldown-back, .is-submenu-parent-item'",
        "'.is-active, .is-closing, .is-drilldown-submenu'",
        "'is-active is-closing is-drilldown-submenu'",
        "'[data-submenu]'",
        "'aria-hidden tabindex role'",
        "'.zf.drilldown'",
        "'drilldown-submenu-cover-previous'",
        "'a'",
        "'tabindex'",
        "'savedHref'",
        "'href'",
        "'savedHref'",
        "'savedHref'",
        "'<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>'",
        "'top'",
        "'<div></div>'",
        "''",
        "'swing'",
        "'Drilldown'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Dropdown'",
        "'Dropdown'",
        "'ENTER'",
        "'open'",
        "'SPACE'",
        "'open'",
        "'ESCAPE'",
        "'close'",
        "'_init'",
        "'id'",
        "'[data-toggle=\"'",
        "'\"]'",
        "'[data-toggle=\"'",
        "'\"]'",
        "'[data-open=\"'",
        "'\"]'",
        "'aria-controls'",
        "'data-is-focus'",
        "'data-yeti-box'",
        "'aria-haspopup'",
        "'aria-expanded'",
        "'.'",
        "'aria-hidden'",
        "'true'",
        "'data-yeti-box'",
        "'data-resize'",
        "'aria-labelledby'",
        "'dd-anchor'",
        "'getPositionClass'",
        "''",
        "''",
        "' '",
        "'_reposition'",
        "'bottom'",
        "'top'",
        "'top'",
        "'top'",
        "'bottom'",
        "'left'",
        "'right'",
        "'right'",
        "'right'",
        "'left'",
        "'left'",
        "'top'",
        "'left'",
        "'left'",
        "'top'",
        "'bottom'",
        "'left'",
        "'left'",
        "'left'",
        "'right'",
        "'bottom'",
        "'right'",
        "'left'",
        "'bottom'",
        "'_setPosition'",
        "'aria-expanded'",
        "'false'",
        "'left'",
        "'left'",
        "'right'",
        "'left'",
        "'top'",
        "'top'",
        "'height'",
        "'width'",
        "'height'",
        "'center bottom'",
        "'width'",
        "'height'",
        "'auto'",
        "'_events'",
        "'open.zf.trigger'",
        "'close.zf.trigger'",
        "'toggle.zf.trigger'",
        "'resizeme.zf.trigger'",
        "'mouseenter.zf.dropdown mouseleave.zf.dropdown'",
        "'mouseenter.zf.dropdown'",
        "'body'",
        "'undefined'",
        "'mouse'",
        "'hover'",
        "'mouseleave.zf.dropdown'",
        "'hover'",
        "'mouseenter.zf.dropdown mouseleave.zf.dropdown'",
        "'mouseenter.zf.dropdown'",
        "'mouseleave.zf.dropdown'",
        "'hover'",
        "'keydown.zf.dropdown'",
        "'Dropdown'",
        "'tabindex'",
        "'_addBodyHandler'",
        "'click.zf.dropdown'",
        "'click.zf.dropdown'",
        "'click.zf.dropdown'",
        "'open'",
        "'closeme.zf.dropdown'",
        "'id'",
        "'hover'",
        "'aria-expanded'",
        "'is-open'",
        "'aria-hidden'",
        "'show.zf.dropdown'",
        "'close'",
        "'is-open'",
        "'is-open'",
        "'aria-hidden'",
        "'hover'",
        "'aria-expanded'",
        "''",
        "''",
        "'hide.zf.dropdown'",
        "'toggle'",
        "'is-open'",
        "'hover'",
        "'destroy'",
        "'.zf.trigger'",
        "'.zf.dropdown'",
        "''",
        "'Dropdown'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'dropdown'",
        "'DropdownMenu'",
        "'DropdownMenu'",
        "'ENTER'",
        "'open'",
        "'SPACE'",
        "'open'",
        "'ARROW_RIGHT'",
        "'next'",
        "'ARROW_UP'",
        "'up'",
        "'ARROW_DOWN'",
        "'down'",
        "'ARROW_LEFT'",
        "'previous'",
        "'ESCAPE'",
        "'close'",
        "'_init'",
        "'li.is-dropdown-submenu-parent'",
        "'.is-dropdown-submenu-parent'",
        "'.is-dropdown-submenu'",
        "'first-sub'",
        "'[role=\"menuitem\"]'",
        "'[role=\"menuitem\"]'",
        "'ul.is-dropdown-submenu'",
        "'right'",
        "'.top-bar-right'",
        "'*'",
        "'right'",
        "'opens-left'",
        "'opens-right'",
        "'_isVertical'",
        "'display'",
        "'block'",
        "'_events'",
        "'ontouchstart'",
        "'undefined'",
        "'is-dropdown-submenu-parent'",
        "'ul'",
        "'.'",
        "'data-is-click'",
        "'true'",
        "'.is-dropdown-submenu'",
        "'.'",
        "'data-is-click'",
        "'click.zf.dropdownmenu touchstart.zf.dropdownmenu'",
        "'click.zf.dropdownmenu'",
        "'mouseenter.zf.dropdownmenu'",
        "'_delay'",
        "'_delay'",
        "'.is-dropdown-submenu'",
        "'mouseleave.zf.dropdownmenu'",
        "'data-is-click'",
        "'true'",
        "'_delay'",
        "'_delay'",
        "'keydown.zf.dropdownmenu'",
        "'ul'",
        "'[role=\"menuitem\"]'",
        "'li'",
        "':last-child'",
        "'a:first'",
        "'a:first'",
        "'ul.is-dropdown-submenu'",
        "'li > a:first'",
        "'ul'",
        "'li'",
        "'a:first'",
        "'a:first'",
        "'DropdownMenu'",
        "'_addBodyHandler'",
        "'mouseup.zf.dropdownmenu touchend.zf.dropdownmenu'",
        "'mouseup.zf.dropdownmenu touchend.zf.dropdownmenu'",
        "'mouseup.zf.dropdownmenu touchend.zf.dropdownmenu'",
        "'_show'",
        "'li.is-dropdown-submenu-parent'",
        "'li.is-dropdown-submenu-parent'",
        "'visibility'",
        "'hidden'",
        "'js-dropdown-active'",
        "'li.is-dropdown-submenu-parent'",
        "'is-active'",
        "'left'",
        "'-right'",
        "'-left'",
        "'.is-dropdown-submenu-parent'",
        "'opens'",
        "'opens-'",
        "'opens-'",
        "'opens-inner'",
        "'visibility'",
        "''",
        "'show.zf.dropdownmenu'",
        "'_hide'",
        "'is-active'",
        "'.is-active'",
        "'li.is-active'",
        "'data-is-click'",
        "'is-active'",
        "'ul.js-dropdown-active'",
        "'js-dropdown-active'",
        "'opens-inner'",
        "'left'",
        "'right'",
        "'left'",
        "'li.is-dropdown-submenu-parent'",
        "'opens-inner opens-'",
        "'opens-'",
        "'hide.zf.dropdownmenu'",
        "'destroy'",
        "'.zf.dropdownmenu'",
        "'data-is-click'",
        "'is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner'",
        "'.zf.dropdownmenu'",
        "'dropdown'",
        "'left'",
        "'vertical'",
        "'align-right'",
        "'DropdownMenu'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Equalizer'",
        "'_init'",
        "'data-equalizer'",
        "''",
        "'[data-equalizer-watch=\"'",
        "'\"]'",
        "'[data-equalizer-watch]'",
        "'data-resize'",
        "'eq'",
        "'data-mutate'",
        "'eq'",
        "'[data-equalizer]'",
        "'[data-equalizer]'",
        "'img'",
        "'changed.zf.mediaquery'",
        "'_pauseEvents'",
        "'.zf.equalizer'",
        "'resizeme.zf.trigger'",
        "'mutateme.zf.trigger'",
        "'_onResizeMe'",
        "'_onPostEqualized'",
        "'_events'",
        "'postequalized.zf.equalizer'",
        "'resizeme.zf.trigger'",
        "'mutateme.zf.trigger'",
        "'_checkMQ'",
        "'height'",
        "'auto'",
        "'_killswitch'",
        "'_reflow'",
        "'height'",
        "'auto'",
        "'_isStacked'",
        "'getHeights'",
        "'auto'",
        "'getHeightsByRow'",
        "'auto'",
        "'applyHeight'",
        "'preequalized.zf.equalizer'",
        "'height'",
        "'postequalized.zf.equalizer'",
        "'applyHeightByRow'",
        "'preequalized.zf.equalizer'",
        "'height'",
        "'auto'",
        "'preequalizedrow.zf.equalizer'",
        "'height'",
        "'postequalizedrow.zf.equalizer'",
        "'postequalized.zf.equalizer'",
        "'destroy'",
        "'height'",
        "'auto'",
        "''",
        "'Equalizer'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "''",
        "'Interchange'",
        "'_init'",
        "'_events'",
        "'resize.zf.interchange'",
        "'_reflow'",
        "'_addBreakpoints'",
        "'_generateRules'",
        "'interchange'",
        "'string'",
        "', '",
        "''",
        "'replace'",
        "'replaced.zf.interchange'",
        "'IMG'",
        "'src'",
        "'load'",
        "'background-image'",
        "'url('",
        "')'",
        "'destroy'",
        "'landscape'",
        "'screen and (orientation: landscape)'",
        "'portrait'",
        "'screen and (orientation: portrait)'",
        "'retina'",
        "'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'",
        "'Interchange'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Magellan'",
        "'_init'",
        "'magellan'",
        "'[data-magellan-target]'",
        "'a'",
        "'data-resize'",
        "'data-scroll'",
        "'id'",
        "'calcPoints'",
        "'_events'",
        "'html, body'",
        "'load'",
        "'resizeme.zf.trigger'",
        "'scrollme.zf.trigger'",
        "'click.zf.magellan'",
        "'a[href^=\"#\"]'",
        "'href'",
        "'popstate'",
        "'scrollToLoc'",
        "'html, body'",
        "'reflow'",
        "'_updateActive'",
        "'[href=\"#'",
        "'magellan-target'",
        "'\"]'",
        "\"\"",
        "'href'",
        "'update.zf.magellan'",
        "'destroy'",
        "'.zf.trigger .zf.magellan'",
        "'.'",
        "'href'",
        "''",
        "'linear'",
        "'active'",
        "'Magellan'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'OffCanvas'",
        "'OffCanvas'",
        "'ESCAPE'",
        "'close'",
        "'_init'",
        "'id'",
        "'aria-hidden'",
        "'true'",
        "'is-transition-'",
        "'[data-open=\"'",
        "'\"], [data-close=\"'",
        "'\"], [data-toggle=\"'",
        "'\"]'",
        "'aria-expanded'",
        "'false'",
        "'aria-controls'",
        "'div'",
        "\"position\"",
        "'fixed'",
        "'is-overlay-fixed'",
        "'is-overlay-absolute'",
        "'class'",
        "'js-off-canvas-overlay '",
        "'is-overlay-fixed'",
        "'body'",
        "'[data-off-canvas-content]'",
        "'g'",
        "'-'",
        "'[data-off-canvas]'",
        "'_events'",
        "'.zf.trigger .zf.offcanvas'",
        "'open.zf.trigger'",
        "'close.zf.trigger'",
        "'toggle.zf.trigger'",
        "'keydown.zf.offcanvas'",
        "'[data-off-canvas-content]'",
        "'click.zf.offcanvas'",
        "'_setMQChecker'",
        "'changed.zf.mediaquery'",
        "'load.zf.offcanvas'",
        "'reveal'",
        "'[data-close]'",
        "'aria-hidden'",
        "'false'",
        "'open.zf.trigger toggle.zf.trigger'",
        "'aria-hidden'",
        "'true'",
        "'open.zf.trigger toggle.zf.trigger'",
        "'open.zf.trigger'",
        "'toggle.zf.trigger'",
        "'_stopScrolling'",
        "'_recordScrollable'",
        "'_stopScrollPropagation'",
        "'open'",
        "'is-open'",
        "'top'",
        "'bottom'",
        "'is-open'",
        "'aria-expanded'",
        "'true'",
        "'aria-hidden'",
        "'false'",
        "'opened.zf.offcanvas'",
        "'body'",
        "'is-off-canvas-open'",
        "'touchmove'",
        "'touchstart'",
        "'touchmove'",
        "'is-visible'",
        "'is-closable'",
        "'[data-autofocus]'",
        "'a, button'",
        "'[data-off-canvas-content]'",
        "'tabindex'",
        "'-1'",
        "'close'",
        "'is-open'",
        "'is-open'",
        "'aria-hidden'",
        "'true'",
        "'closed.zf.offcanvas'",
        "'body'",
        "'is-off-canvas-open'",
        "'touchmove'",
        "'touchstart'",
        "'touchmove'",
        "'is-visible'",
        "'is-closable'",
        "'aria-expanded'",
        "'false'",
        "'[data-off-canvas-content]'",
        "'tabindex'",
        "'toggle'",
        "'is-open'",
        "'_handleKeyboard'",
        "'OffCanvas'",
        "'destroy'",
        "'.zf.trigger .zf.offcanvas'",
        "'.zf.offcanvas'",
        "'push'",
        "'reveal-for-'",
        "'OffCanvas'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Orbit'",
        "'Orbit'",
        "'ltr'",
        "'ARROW_RIGHT'",
        "'next'",
        "'ARROW_LEFT'",
        "'previous'",
        "'rtl'",
        "'ARROW_LEFT'",
        "'next'",
        "'ARROW_RIGHT'",
        "'previous'",
        "'_init'",
        "'.'",
        "'.'",
        "'img'",
        "'.is-active'",
        "'orbit'",
        "'data-resize'",
        "'id'",
        "'is-active'",
        "'no-motionui'",
        "'tabindex'",
        "'_loadBullets'",
        "'.'",
        "'button'",
        "'geoSync'",
        "'_prepareForOrbit'",
        "'_setWrapperHeight'",
        "'data-slide'",
        "'.is-active'",
        "'position'",
        "'relative'",
        "'display'",
        "'none'",
        "'height'",
        "'_setSlideHeight'",
        "'max-height'",
        "'_events'",
        "'.resizeme.zf.trigger'",
        "'resizeme.zf.trigger'",
        "'swipeleft.zf.orbit swiperight.zf.orbit'",
        "'swipeleft.zf.orbit'",
        "'swiperight.zf.orbit'",
        "'click.zf.orbit'",
        "'clickedOn'",
        "'clickedOn'",
        "'clickedOn'",
        "'pause'",
        "'start'",
        "'mouseenter.zf.orbit'",
        "'mouseleave.zf.orbit'",
        "'clickedOn'",
        "'.'",
        "', .'",
        "'tabindex'",
        "'click.zf.orbit touchend.zf.orbit'",
        "'click.zf.orbit touchend.zf.orbit'",
        "'slide'",
        "'.is-active'",
        "'slide'",
        "'keydown.zf.orbit'",
        "'Orbit'",
        "'.is-active'",
        "'_reset'",
        "'undefined'",
        "'.zf.orbit'",
        "'*'",
        "'.zf.orbit'",
        "'is-active is-active is-in'",
        "'aria-live'",
        "'is-active'",
        "'slidechange.zf.orbit'",
        "'changeSlide'",
        "'.is-active'",
        "'Right'",
        "'Left'",
        "'Left'",
        "'Right'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'beforeslidechange.zf.orbit'",
        "':hidden'",
        "'is-active'",
        "'position'",
        "'absolute'",
        "'top'",
        "'animInFrom'",
        "'position'",
        "'relative'",
        "'display'",
        "'block'",
        "'aria-live'",
        "'polite'",
        "'is-active'",
        "'animOutTo'",
        "'aria-live'",
        "'is-active is-in'",
        "'aria-live'",
        "'is-active is-in'",
        "'aria-live'",
        "'polite'",
        "'slidechange.zf.orbit'",
        "'_updateBullets'",
        "'.'",
        "'.is-active'",
        "'is-active'",
        "'span:last'",
        "'is-active'",
        "'destroy'",
        "'.zf.orbit'",
        "'*'",
        "'.zf.orbit'",
        "'slide-in-right'",
        "'slide-out-right'",
        "'slide-in-left'",
        "'slide-out-left'",
        "'orbit-container'",
        "'orbit-slide'",
        "'orbit-bullets'",
        "'orbit-next'",
        "'orbit-previous'",
        "'Orbit'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'responsive-menu'",
        "'ResponsiveMenu'",
        "'_init'",
        "'string'",
        "' '",
        "'-'",
        "'small'",
        "'data-mutate'",
        "'data-mutate'",
        "'responsive-menu'",
        "'_events'",
        "'changed.zf.mediaquery'",
        "'_checkMediaQueries'",
        "'destroy'",
        "'.zf.ResponsiveMenu'",
        "'dropdown'",
        "'dropdown-menu'",
        "'drilldown'",
        "'drilldown'",
        "'accordion-menu'",
        "'accordion-menu'",
        "'ResponsiveMenu'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'ResponsiveToggle'",
        "'_init'",
        "'responsive-toggle'",
        "'Your tab bar needs an ID of a Menu as the value of data-tab-bar.'",
        "'#'",
        "'[data-toggle]'",
        "'toggle'",
        "\"\"",
        "' '",
        "'_events'",
        "'changed.zf.mediaquery'",
        "'click.zf.responsiveToggle'",
        "'_update'",
        "'toggleMenu'",
        "':hidden'",
        "'toggled.zf.responsiveToggle'",
        "'[data-mutate]'",
        "'mutateme.zf.trigger'",
        "'toggled.zf.responsiveToggle'",
        "'[data-mutate]'",
        "'mutateme.zf.trigger'",
        "'toggled.zf.responsiveToggle'",
        "'destroy'",
        "'.zf.responsiveToggle'",
        "'.zf.responsiveToggle'",
        "'changed.zf.mediaquery'",
        "'medium'",
        "'ResponsiveToggle'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Reveal'",
        "'Reveal'",
        "'ENTER'",
        "'open'",
        "'SPACE'",
        "'open'",
        "'ESCAPE'",
        "'close'",
        "'_init'",
        "'id'",
        "'[data-open=\"'",
        "'\"]'",
        "'[data-open=\"'",
        "'\"]'",
        "'[data-toggle=\"'",
        "'\"]'",
        "'aria-controls'",
        "'aria-haspopup'",
        "'tabindex'",
        "'full'",
        "'role'",
        "'dialog'",
        "'aria-hidden'",
        "'data-yeti-box'",
        "'data-resize'",
        "'without-overlay'",
        "'#'",
        "'load.zf.reveal'",
        "'_makeOverlay'",
        "'<div></div>'",
        "'reveal-overlay'",
        "'_updatePosition'",
        "'auto'",
        "'auto'",
        "'px'",
        "'auto'",
        "'px'",
        "'0px'",
        "'_events'",
        "'open.zf.trigger'",
        "'close.zf.trigger'",
        "'[data-closable]'",
        "'toggle.zf.trigger'",
        "'resizeme.zf.trigger'",
        "'keydown.zf.reveal'",
        "'.zf.reveal'",
        "'click.zf.reveal'",
        "'popstate.zf.reveal:'",
        "'_handleState'",
        "'#'",
        "'open'",
        "'#'",
        "'visibility'",
        "'hidden'",
        "'visibility'",
        "'hidden'",
        "'visibility'",
        "''",
        "'visibility'",
        "''",
        "'fast'",
        "'fast'",
        "'slow'",
        "'slow'",
        "'closeme.zf.reveal'",
        "'html, body'",
        "'is-reveal-open'",
        "'body'",
        "'is-reveal-open'",
        "'aria-hidden'",
        "'tabindex'",
        "'fade-in'",
        "'aria-hidden'",
        "'tabindex'",
        "'open.zf.reveal'",
        "'_extraHandlers'",
        "'body'",
        "'click.zf.reveal'",
        "'keydown.zf.reveal'",
        "'Reveal'",
        "'keydown.zf.reveal'",
        "'Reveal'",
        "':focus'",
        "'[data-close]'",
        "'close'",
        "':visible'",
        "'fade-out'",
        "'keydown.zf.reveal'",
        "'body'",
        "'click.zf.reveal'",
        "'keydown.zf.reveal'",
        "'.reveal:visible'",
        "'html, body'",
        "'is-reveal-open'",
        "'body'",
        "'.reveal:visible'",
        "'body'",
        "'is-reveal-open'",
        "'aria-hidden'",
        "'closed.zf.reveal'",
        "''",
        "'#'",
        "''",
        "''",
        "'toggle'",
        "'destroy'",
        "'.zf'",
        "'.zf.reveal:'",
        "''",
        "''",
        "'auto'",
        "'auto'",
        "\"body\"",
        "'Reveal'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Slider'",
        "'Slider'",
        "'ltr'",
        "'ARROW_RIGHT'",
        "'increase'",
        "'ARROW_UP'",
        "'increase'",
        "'ARROW_DOWN'",
        "'decrease'",
        "'ARROW_LEFT'",
        "'decrease'",
        "'SHIFT_ARROW_RIGHT'",
        "'increase_fast'",
        "'SHIFT_ARROW_UP'",
        "'increase_fast'",
        "'SHIFT_ARROW_DOWN'",
        "'decrease_fast'",
        "'SHIFT_ARROW_LEFT'",
        "'decrease_fast'",
        "'rtl'",
        "'ARROW_LEFT'",
        "'increase'",
        "'ARROW_RIGHT'",
        "'decrease'",
        "'SHIFT_ARROW_LEFT'",
        "'increase_fast'",
        "'SHIFT_ARROW_RIGHT'",
        "'decrease_fast'",
        "'_init'",
        "'input'",
        "'[data-slider-handle]'",
        "'#'",
        "'aria-controls'",
        "'[data-slider-fill]'",
        "'height'",
        "'width'",
        "'#'",
        "'aria-controls'",
        "'setHandles'",
        "'_reflow'",
        "'_pctOfBar'",
        "\"pow\"",
        "\"log\"",
        "'_value'",
        "\"pow\"",
        "\"log\"",
        "'_logTransform'",
        "'_powTransform'",
        "'_setHandlePos'",
        "'aria-valuenow'",
        "'aria-valuenow'",
        "'height'",
        "'width'",
        "'top'",
        "'left'",
        "'%'",
        "'function'",
        "'min-'",
        "'%'",
        "'finished.zf.animate'",
        "'moved.zf.slider'",
        "'dragging'",
        "'%'",
        "'%'",
        "'%'",
        "'changed.zf.slider'",
        "'_setInitAttr'",
        "'id'",
        "'slider'",
        "'id'",
        "'max'",
        "'min'",
        "'step'",
        "'role'",
        "'slider'",
        "'aria-controls'",
        "'aria-valuemax'",
        "'aria-valuemin'",
        "'aria-valuenow'",
        "'aria-orientation'",
        "'vertical'",
        "'horizontal'",
        "'tabindex'",
        "'_setValues'",
        "'aria-valuenow'",
        "'_handleEvent'",
        "'height'",
        "'width'",
        "'top'",
        "'left'",
        "'_adjustValue'",
        "'aria-valuenow'",
        "'_events'",
        "'_eventsForHandle'",
        "'change.zf.slider'",
        "'change.zf.slider'",
        "'click.zf.slider'",
        "'click.zf.slider'",
        "'dragging'",
        "'[data-slider-handle]'",
        "'body'",
        "'mousedown.zf.slider'",
        "'mousedown.zf.slider'",
        "'is-dragging'",
        "'is-dragging'",
        "'dragging'",
        "'mousemove.zf.slider'",
        "'mouseup.zf.slider'",
        "'is-dragging'",
        "'is-dragging'",
        "'dragging'",
        "'mousemove.zf.slider mouseup.zf.slider'",
        "'selectstart.zf.slider touchmove.zf.slider'",
        "'keydown.zf.slider'",
        "'keydown.zf.slider'",
        "'Slider'",
        "'destroy'",
        "'.zf.slider'",
        "'.zf.slider'",
        "'.zf.slider'",
        "'disabled'",
        "'linear'",
        "'Slider'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Sticky'",
        "'_init'",
        "'[data-sticky-container]'",
        "'sticky'",
        "'data-resize'",
        "'data-mutate'",
        "''",
        "'#'",
        "'data-mutate'",
        "'load.zf.sticky'",
        "\"display\"",
        "\"none\"",
        "'height'",
        "''",
        "'#'",
        "'-'",
        "'-'",
        "'_parsePoints'",
        "\"\"",
        "\"\"",
        "'number'",
        "':'",
        "'#'",
        "'bottom'",
        "'_events'",
        "'scroll.zf.'",
        "'resizeme.zf.trigger'",
        "'resizeme.zf.trigger'",
        "'mutateme.zf.trigger'",
        "'mutateme.zf.trigger'",
        "'_eventsHandler'",
        "'scroll.zf.'",
        "'_pauseListeners'",
        "'pause.zf.sticky'",
        "'_calc'",
        "'_setSticky'",
        "'top'",
        "'marginTop'",
        "'marginBottom'",
        "'top'",
        "'bottom'",
        "'top'",
        "'em'",
        "'auto'",
        "'is-anchored is-at-'",
        "'is-stuck is-at-'",
        "'sticky.zf.stuckto:'",
        "\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\"",
        "'_removeSticky'",
        "'top'",
        "'marginTop'",
        "'marginBottom'",
        "'bottom'",
        "'top'",
        "'top'",
        "'bottom'",
        "'bottom'",
        "'auto'",
        "'top'",
        "'top'",
        "'is-stuck is-at-'",
        "'is-anchored is-at-'",
        "'sticky.zf.unstuckfrom:'",
        "'_setSizes'",
        "'function'",
        "'padding-left'",
        "'padding-right'",
        "'max-width'",
        "'px'",
        "\"display\"",
        "\"none\"",
        "'is-at-bottom'",
        "'top'",
        "'function'",
        "'_setBreakPoints'",
        "'function'",
        "'top'",
        "'bottom'",
        "'function'",
        "'destroy'",
        "' is-anchored is-at-top'",
        "''",
        "''",
        "''",
        "'max-width'",
        "''",
        "'resizeme.zf.trigger'",
        "'mutateme.zf.trigger'",
        "'change.zf.sticky'",
        "''",
        "'<div data-sticky-container></div>'",
        "'top'",
        "''",
        "''",
        "''",
        "'medium'",
        "'sticky'",
        "'sticky-container'",
        "'Sticky'",
        "'use strict'",
        "\"function\"",
        "\"symbol\"",
        "\"function\"",
        "\"symbol\"",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Tabs'",
        "'Tabs'",
        "'ENTER'",
        "'open'",
        "'SPACE'",
        "'open'",
        "'ARROW_RIGHT'",
        "'next'",
        "'ARROW_UP'",
        "'previous'",
        "'ARROW_DOWN'",
        "'next'",
        "'ARROW_LEFT'",
        "'previous'",
        "'_init'",
        "'role'",
        "'tablist'",
        "'.'",
        "'[data-tabs-content=\"'",
        "'\"]'",
        "'a'",
        "''",
        "'-label'",
        "'#'",
        "'role'",
        "'presentation'",
        "'role'",
        "'tab'",
        "'aria-controls'",
        "'aria-selected'",
        "'id'",
        "'role'",
        "'tabpanel'",
        "'aria-hidden'",
        "'aria-labelledby'",
        "'html, body'",
        "'img'",
        "'[href$=\"'",
        "'\"]'",
        "'html, body'",
        "'deeplink.zf.tabs'",
        "'_events'",
        "'changed.zf.mediaquery'",
        "'popstate'",
        "'_addClickHandler'",
        "'click.zf.tabs'",
        "'click.zf.tabs'",
        "'.'",
        "'_addKeyHandler'",
        "'keydown.zf.tabs'",
        "'keydown.zf.tabs'",
        "'ul'",
        "'li'",
        "'Tabs'",
        "'[role=\"tab\"]'",
        "'[role=\"tab\"]'",
        "'[role=\"tab\"]'",
        "'_handleTabChange'",
        "''",
        "'collapse.zf.tabs'",
        "'.'",
        "'.'",
        "'[role=\"tab\"]'",
        "'a'",
        "'href'",
        "''",
        "''",
        "'change.zf.tabs'",
        "\"[data-mutate]\"",
        "\"mutateme.zf.trigger\"",
        "'_openTab'",
        "'[role=\"tab\"]'",
        "''",
        "'aria-selected'",
        "'true'",
        "''",
        "'aria-hidden'",
        "'false'",
        "'_collapseTab'",
        "''",
        "'[role=\"tab\"]'",
        "'aria-selected'",
        "'false'",
        "'#'",
        "'aria-controls'",
        "''",
        "'aria-hidden'",
        "'true'",
        "'selectTab'",
        "'undefined'",
        "'undefined'",
        "'object'",
        "'#'",
        "'#'",
        "'[href$=\"'",
        "'\"]'",
        "'.'",
        "'_setHeight'",
        "'.'",
        "'height'",
        "''",
        "''",
        "'visibility'",
        "'hidden'",
        "'display'",
        "'block'",
        "'visibility'",
        "''",
        "'display'",
        "''",
        "'height'",
        "'px'",
        "'destroy'",
        "'.'",
        "'.zf.tabs'",
        "'.'",
        "'changed.zf.mediaquery'",
        "'popstate'",
        "'tabs-title'",
        "'is-active'",
        "'tabs-panel'",
        "'is-active'",
        "'Tabs'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "''",
        "'Toggler'",
        "'_init'",
        "' '",
        "'toggler'",
        "'.'",
        "'[data-open=\"'",
        "'\"], [data-close=\"'",
        "'\"], [data-toggle=\"'",
        "'\"]'",
        "'aria-controls'",
        "'aria-expanded'",
        "':hidden'",
        "'_events'",
        "'toggle.zf.trigger'",
        "'toggle.zf.trigger'",
        "'toggle'",
        "'_toggleAnimate'",
        "'_toggleClass'",
        "'_toggleClass'",
        "'on.zf.toggler'",
        "'off.zf.toggler'",
        "'[data-mutate]'",
        "'mutateme.zf.trigger'",
        "'_toggleAnimate'",
        "':hidden'",
        "'on.zf.toggler'",
        "'[data-mutate]'",
        "'mutateme.zf.trigger'",
        "'off.zf.toggler'",
        "'[data-mutate]'",
        "'mutateme.zf.trigger'",
        "'_updateARIA'",
        "'aria-expanded'",
        "'destroy'",
        "'.zf.toggler'",
        "'Toggler'",
        "'use strict'",
        "\"value\"",
        "\"Cannot call a class as a function\"",
        "'Tooltip'",
        "'_init'",
        "'aria-describedby'",
        "'tooltip'",
        "'title'",
        "'title'",
        "''",
        "'aria-describedby'",
        "'data-yeti-box'",
        "'data-toggle'",
        "'data-resize'",
        "'_getPositionClass'",
        "''",
        "''",
        "'_buildTemplate'",
        "' '",
        "' '",
        "'<div></div>'",
        "'role'",
        "'tooltip'",
        "'aria-hidden'",
        "'data-is-active'",
        "'data-is-focus'",
        "'id'",
        "'_reposition'",
        "'bottom'",
        "'top'",
        "'top'",
        "'top'",
        "'bottom'",
        "'left'",
        "'right'",
        "'right'",
        "'right'",
        "'left'",
        "'left'",
        "'top'",
        "'left'",
        "'left'",
        "'top'",
        "'bottom'",
        "'left'",
        "'left'",
        "'left'",
        "'right'",
        "'bottom'",
        "'right'",
        "'left'",
        "'bottom'",
        "'_setPosition'",
        "'left'",
        "'left'",
        "'right'",
        "'left'",
        "'top'",
        "'top'",
        "'height'",
        "'width'",
        "'height'",
        "'center bottom'",
        "'width'",
        "'height'",
        "'auto'",
        "'center '",
        "'bottom'",
        "'show'",
        "'all'",
        "'visibility'",
        "'hidden'",
        "'closeme.zf.tooltip'",
        "'id'",
        "'data-is-active'",
        "'aria-hidden'",
        "'visibility'",
        "''",
        "'show.zf.tooltip'",
        "'hide'",
        "'aria-hidden'",
        "'data-is-active'",
        "'hide.zf.tooltip'",
        "'_events'",
        "'mouseenter.zf.tooltip'",
        "'mouseleave.zf.tooltip'",
        "'mousedown.zf.tooltip'",
        "'tabindex'",
        "'mousedown.zf.tooltip'",
        "'tap.zf.tooltip touchend.zf.tooltip'",
        "'close.zf.trigger'",
        "'focus.zf.tooltip'",
        "'focusout.zf.tooltip'",
        "'resizeme.zf.trigger'",
        "'toggle'",
        "'destroy'",
        "'title'",
        "'.zf.trigger .zf.tooltip'",
        "'has-tip top right left'",
        "'aria-describedby aria-haspopup data-disable-hover data-resize data-toggle data-tooltip data-yeti-box'",
        "''",
        "'tooltip'",
        "'has-tip'",
        "'small'",
        "''",
        "''",
        "'Tap to close.'",
        "''",
        "'Tooltip'"
    ],
    "variables": [
        "_typeof",
        "FOUNDATION_VERSION",
        "Foundation",
        "className",
        "attrName",
        "pluginName",
        "pluginName",
        "isJQ",
        "_this",
        "fns",
        "_this",
        "plugin",
        "$elem",
        "$el",
        "opts",
        "thing",
        "opt",
        "transitions",
        "elem",
        "end",
        "timer",
        "context",
        "args",
        "arguments",
        "foundation",
        "$meta",
        "$noJS",
        "args",
        "plugClass",
        "vendors",
        "i",
        "vp",
        "lastTime",
        "now",
        "nextTime",
        "aArgs",
        "fToBind",
        "fNOP",
        "fBound",
        "funcNameRegex",
        "results",
        "eleDims",
        "top",
        "bottom",
        "left",
        "right",
        "parDims",
        "allDirs",
        "rect",
        "parRect",
        "winRect",
        "winY",
        "winX",
        "$eleDims",
        "$anchorDims",
        "keyCodes",
        "commands",
        "Keyboard",
        "key",
        "commandList",
        "keyCode",
        "cmds",
        "command",
        "fn",
        "returnValue",
        "$focusable",
        "$firstFocusable",
        "$lastFocusable",
        "k",
        "_typeof",
        "defaultQueries",
        "MediaQuery",
        "extractedStyles",
        "namedQueries",
        "query",
        "query",
        "matched",
        "i",
        "query",
        "_this",
        "newSize",
        "currentSize",
        "styleMedia",
        "style",
        "script",
        "info",
        "text",
        "styleObject",
        "parts",
        "key",
        "val",
        "initClasses",
        "activeClasses",
        "Motion",
        "anim",
        "prog",
        "start",
        "initClass",
        "activeClass",
        "Nest",
        "items",
        "subMenuClass",
        "subItemClass",
        "hasSubClass",
        "$item",
        "$sub",
        "subMenuClass",
        "subItemClass",
        "hasSubClass",
        "_this",
        "duration",
        "nameSpace",
        "remain",
        "start",
        "timer",
        "end",
        "unloaded",
        "src",
        "startPosX",
        "startPosY",
        "startTime",
        "elapsedTime",
        "isMoving",
        "x",
        "y",
        "dx",
        "dy",
        "dir",
        "handleTouch",
        "touches",
        "first",
        "eventTypes",
        "simulatedEvent",
        "_typeof",
        "MutationObserver",
        "prefixes",
        "i",
        "triggers",
        "id",
        "id",
        "animation",
        "id",
        "yetiBoxes",
        "plugNames",
        "listeners",
        "plugin",
        "plugins",
        "_this",
        "timer",
        "$nodes",
        "timer",
        "$nodes",
        "nodes",
        "listeningElementsMutation",
        "$target",
        "i",
        "elementObserver",
        "_createClass",
        "i",
        "descriptor",
        "Abide",
        "options",
        "_this2",
        "isGood",
        "opt",
        "id",
        "$error",
        "id",
        "$label",
        "_this3",
        "labels",
        "id",
        "$label",
        "$label",
        "$formError",
        "$els",
        "$labels",
        "$formErrors",
        "$label",
        "$formError",
        "clearRequire",
        "validated",
        "customValidator",
        "validator",
        "equalTo",
        "goodToGo",
        "message",
        "dependentElements",
        "_this",
        "acc",
        "_this",
        "noError",
        "inputText",
        "valid",
        "$group",
        "valid",
        "required",
        "_this4",
        "clear",
        "$form",
        "opts",
        "_this",
        "_createClass",
        "i",
        "descriptor",
        "Accordion",
        "_this2",
        "$el",
        "$content",
        "id",
        "linkId",
        "$initActive",
        "anchor",
        "$link",
        "$anchor",
        "_this",
        "_this2",
        "offset",
        "_this",
        "$elem",
        "$tabContent",
        "$a",
        "$a",
        "anchor",
        "_this3",
        "$currentActive",
        "$aunts",
        "_this",
        "_createClass",
        "i",
        "descriptor",
        "AccordionMenu",
        "linkId",
        "$elem",
        "$sub",
        "subId",
        "isActive",
        "initPanes",
        "_this",
        "_this",
        "$submenu",
        "$element",
        "$elements",
        "$prevElement",
        "$nextElement",
        "$target",
        "_this",
        "_this",
        "$menus",
        "_createClass",
        "i",
        "descriptor",
        "Drilldown",
        "_this",
        "$link",
        "$sub",
        "$menu",
        "$back",
        "_this",
        "$body",
        "_this",
        "$scrollTopElement",
        "scrollPos",
        "_this",
        "$element",
        "$elements",
        "$prevElement",
        "$nextElement",
        "$elem",
        "_this",
        "parentSubMenu",
        "_this",
        "_this",
        "maxHeight",
        "result",
        "_this",
        "numOfElems",
        "height",
        "$link",
        "_createClass",
        "i",
        "descriptor",
        "Dropdown",
        "$id",
        "verticalPosition",
        "horizontalPosition",
        "position",
        "position",
        "$eleDims",
        "$anchorDims",
        "_this",
        "direction",
        "param",
        "offset",
        "newWidth",
        "parentHOffset",
        "$parentDims",
        "parentHOffset",
        "_this",
        "bodyData",
        "$target",
        "visibleFocusableElements",
        "$body",
        "_this",
        "$focusable",
        "curPositionClass",
        "_createClass",
        "i",
        "descriptor",
        "DropdownMenu",
        "subs",
        "_this",
        "hasTouch",
        "parClass",
        "handleClickFn",
        "$elem",
        "hasSub",
        "hasClicked",
        "$sub",
        "$elem",
        "hasSub",
        "$elem",
        "hasSub",
        "$elem",
        "hasSub",
        "$element",
        "isTab",
        "$elements",
        "$prevElement",
        "$nextElement",
        "nextSibling",
        "prevSibling",
        "openSub",
        "$sub",
        "closeSub",
        "close",
        "functions",
        "$body",
        "_this",
        "$link",
        "idx",
        "$sibs",
        "clear",
        "oldClass",
        "$parentLi",
        "$toClose",
        "somethingToClose",
        "oldClass",
        "_createClass",
        "i",
        "descriptor",
        "Equalizer",
        "eqId",
        "$watched",
        "imgs",
        "tooSmall",
        "_this",
        "tooSmall",
        "heights",
        "i",
        "len",
        "lastElTopOffset",
        "groups",
        "group",
        "i",
        "len",
        "elOffsetTop",
        "j",
        "ln",
        "heights",
        "max",
        "max",
        "i",
        "len",
        "groupsILength",
        "max",
        "j",
        "lenJ",
        "_createClass",
        "i",
        "descriptor",
        "Interchange",
        "_this2",
        "match",
        "rule",
        "query",
        "rulesList",
        "rules",
        "rule",
        "path",
        "query",
        "_this",
        "trigger",
        "_createClass",
        "i",
        "descriptor",
        "Magellan",
        "id",
        "_this",
        "_this",
        "body",
        "html",
        "$tar",
        "pt",
        "_this",
        "$body",
        "opts",
        "arrival",
        "_this",
        "scrollPos",
        "winPos",
        "curIdx",
        "isDown",
        "_this",
        "curVisible",
        "hash",
        "hash",
        "_createClass",
        "i",
        "descriptor",
        "OffCanvas",
        "id",
        "overlay",
        "overlayPosition",
        "$target",
        "_this",
        "$closer",
        "elem",
        "elem",
        "up",
        "down",
        "_this",
        "canvasFocus",
        "_this",
        "_this2",
        "_createClass",
        "i",
        "descriptor",
        "Orbit",
        "$images",
        "initActive",
        "id",
        "_this",
        "_this",
        "max",
        "temp",
        "counter",
        "_this",
        "_this",
        "$controls",
        "idx",
        "ltr",
        "$slide",
        "$curSlide",
        "$firstSlide",
        "$lastSlide",
        "dirIn",
        "dirOut",
        "_this",
        "$newSlide",
        "$oldBullet",
        "span",
        "$newBullet",
        "_createClass",
        "i",
        "descriptor",
        "ResponsiveMenu",
        "rulesTree",
        "rules",
        "i",
        "rule",
        "ruleSize",
        "rulePlugin",
        "_this",
        "matchedMq",
        "_this",
        "MenuPlugins",
        "_createClass",
        "i",
        "descriptor",
        "ResponsiveToggle",
        "targetID",
        "target",
        "input",
        "_this",
        "_this2",
        "_createClass",
        "i",
        "descriptor",
        "Reveal",
        "width",
        "outerWidth",
        "height",
        "outerHeight",
        "left",
        "top",
        "_this2",
        "_this",
        "_this3",
        "hash",
        "_this",
        "afterAnimation",
        "_this",
        "$target",
        "_this",
        "_createClass",
        "i",
        "descriptor",
        "Slider",
        "isDbl",
        "_this",
        "_this2",
        "pctOfBar",
        "value",
        "isDbl",
        "h2Val",
        "h1Val",
        "_this",
        "vert",
        "hOrW",
        "lOrT",
        "handleDim",
        "elemDim",
        "pctOfBar",
        "pxToMove",
        "movement",
        "css",
        "isLeftHndl",
        "dim",
        "handlePct",
        "handlePos",
        "moveTime",
        "initVal",
        "id",
        "idx",
        "value",
        "hasVal",
        "_this",
        "vertical",
        "param",
        "direction",
        "eventOffset",
        "halfOfHandle",
        "barDim",
        "windowScroll",
        "elemOffset",
        "eventFromBar",
        "barXY",
        "offsetPct",
        "firstHndlPos",
        "secndHndlPos",
        "val",
        "step",
        "div",
        "left",
        "prev_val",
        "next_val",
        "_this",
        "curHandle",
        "timer",
        "idx",
        "$body",
        "_$handle",
        "idx",
        "oldValue",
        "newValue",
        "_createClass",
        "i",
        "descriptor",
        "Sticky",
        "$parent",
        "id",
        "_this",
        "scroll",
        "top",
        "btm",
        "pts",
        "breaks",
        "i",
        "len",
        "pt",
        "place",
        "anchor",
        "_this",
        "scrollListener",
        "_this",
        "scrollListener",
        "_this",
        "stickTo",
        "mrgn",
        "notStuckTo",
        "css",
        "stickTo",
        "stickToTop",
        "css",
        "anchorPt",
        "mrgn",
        "notStuckTo",
        "topOrBottom",
        "_this",
        "newElemWidth",
        "comp",
        "pdngl",
        "pdngr",
        "newContainerHeight",
        "anchorPt",
        "mTop",
        "mBtm",
        "topPoint",
        "bottomPoint",
        "winHeight",
        "_typeof",
        "_createClass",
        "i",
        "descriptor",
        "Tabs",
        "_this2",
        "_this",
        "$elem",
        "$link",
        "isActive",
        "hash",
        "linkId",
        "$tabContent",
        "$images",
        "anchor",
        "$link",
        "offset",
        "_this",
        "_this",
        "$element",
        "$elements",
        "$prevElement",
        "$nextElement",
        "$oldTab",
        "$tabLink",
        "hash",
        "$targetContent",
        "anchor",
        "$tabLink",
        "hash",
        "$targetContent",
        "$target_anchor",
        "idStr",
        "$target",
        "max",
        "_this",
        "panel",
        "isActive",
        "temp",
        "_createClass",
        "i",
        "descriptor",
        "Toggler",
        "input",
        "id",
        "isOn",
        "_this",
        "_createClass",
        "i",
        "descriptor",
        "Tooltip",
        "elemId",
        "position",
        "templateClasses",
        "$template",
        "position",
        "$tipDims",
        "$anchorDims",
        "direction",
        "param",
        "offset",
        "_this",
        "_this",
        "_this",
        "_this",
        "$template",
        "isFocus"
    ],
    "comments": [
        "Global Foundation object",
        "This is attached to the window, or used as a module for AMD/Browserify",
        "Object key to use when adding to global Foundation object",
        "Examples: Foundation.Reveal, Foundation.OffCanvas",
        "Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin",
        "Examples: data-reveal, data-off-canvas",
        "Add to the Foundation object and the plugins list (for reflowing)",
        "clean up script to prep for garbage collection.",
        "If plugins is undefined, just grab everything",
        "If plugins is a string, convert it to an array with one item",
        "Iterate through each plugin",
        "Get the current plugin",
        "Localize the search to all elements inside elem, as well as elem itself, unless elem === document",
        "For each plugin found, initialize it",
        "Don't double-dip on plugins",
        "TODO: consider not making this a jQuery function",
        "TODO: need way to reflow vs. re-initialize",
        "needs to initialize the Foundation object, or an individual plugin.",
        "an individual method to invoke on a plugin or group of plugins",
        "collect all the arguments, if necessary",
        "determine the class of plugin",
        "make sure both the class and method exist",
        "if there's only one, call it directly.",
        "otherwise loop through the jQuery collection and invoke the method on each",
        "error for no class or no method",
        "error for invalid argument type",
        "Polyfill for requestAnimationFrame",
        "closest thing possible to the ECMAScript 5",
        "internal IsCallable function",
        "native functions don't have a prototype",
        "Polyfill to get the name of a function in IE9",
        "Convert PascalCase to kebab-case",
        "Thank you: http://stackoverflow.com/a/8955580",
        "Remove un-printable characters, e.g. for `fromCharCode` calls for CTRL only events",
        "Remove trailing underscore, in case only modifiers were used (e.g. only `CTRL_ALT`)",
        "this component does not differentiate between ltr and rtl",
        "use plain list",
        "merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa",
        "execute function  if exists",
        "execute function when event was handled",
        "execute function when event was not handled",
        "only have visible elements and those that have a tabindex greater or equal 0",
        "Default set of media queries",
        "Change the current media query",
        "Broadcast the media query change on the window",
        "matchMedia() polyfill - Test a CSS media type/query in JS.",
        "Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license",
        "For browsers that support matchMedium api such as IE 9 and webkit",
        "For those that don't support matchMedium",
        "'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers",
        "'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers",
        "Test if media query is true or false",
        "Thank you: https://github.com/sindresorhus/query-string",
        "browsers re-quote string style values",
        "missing `=` should be `null`:",
        "http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters",
        "console.log('called');",
        "console.log(start, ts);",
        "Set up the animation",
        "Start the animation",
        "Clean up the animation when it finishes",
        "Hides the element (for out animations), resets the element, and runs a callback",
        "Resets transitions and removes motion-specific classes",
        "Note:  Drilldowns behave differently in how they hide, and so need",
        "additional attributes.  We should look if this possibly over-generalized",
        "utility (Nest) is appropriate when we rework menus in 6.4",
        "items = menu.find('li'),",
        "console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')",
        ".removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')",
        ".removeAttr('data-submenu'));",
        "items.each(function(){",
        "var $item = $(this),",
        "$sub = $item.children('ul');",
        "if($item.parent('[data-submenu]').length){",
        "$item.removeClass('is-submenu-item ' + subItemClass);",
        "}",
        "if($sub.length){",
        "$item.removeClass('has-submenu');",
        "$sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');",
        "}",
        "});",
        "options is an object for easily adding features later.",
        "if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.",
        "rerun the timer.",
        "if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.",
        "Check if image is loaded",
        "Force load the image",
        "fix for IE. See https://css-tricks.com/snippets/jquery/fixing-load-in-ie-for-cached-images/",
        "alert(this);",
        "else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {",
        "dir = dy > 0 ? 'down' : 'up';",
        "}",
        "we pass the original event object because the jQuery event",
        "object is normalized to w3c specs and does not provide the TouchList",
        "left",
        "Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );",
        "Elements with [data-open] will reveal a plugin that supports it when clicked.",
        "Elements with [data-close] will close a plugin that supports it when clicked.",
        "If used without a value on [data-close], the event will bubble, allowing it to close a parent component.",
        "Elements with [data-toggle] will toggle a plugin that supports it when clicked.",
        "Elements with [data-closable] will respond to close.zf.trigger events.",
        "fallback for IE 9",
        "trigger all listening elements and signal a resize event",
        "default time to emit resize event",
        "fallback for IE 9",
        "trigger all listening elements and signal a scroll event",
        "default time to emit scroll event",
        "element callback",
        "trigger the event handler for the element depending on type",
        "nothing",
        "for each element that needs to listen for resizing, scrolling, or mutation add a single observer",
        "------------------------------------",
        "[PH]",
        "Foundation.CheckWatchers = checkWatchers;",
        "Foundation.ISeeYou = scrollListener;",
        "Foundation.IFeelYou = closemeListener;",
        "radios need to clear all of the els",
        "don't validate ignored inputs or hidden inputs or disabled inputs",
        "Re-validate inputs that depend on this one with equalto",
        "A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute",
        "If the pattern attribute on the element is in Abide's list of patterns, then test that regexp",
        "If the pattern name isn't also the type attribute of the field, then test it as a regexp",
        "An empty field is valid if it's not required",
        "If at least one radio in the group has the `required` attribute, the group is considered required",
        "Per W3C spec, all radio buttons in a group should have `required`, but we're being nice",
        "For the group to be required, at least one radio needs to be required",
        "For the group to be valid, at least one radio needs to be checked",
        "amex, visa, diners",
        "http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address",
        "abc.de",
        "YYYY-MM-DD",
        "HH:MM:SS",
        "MM/DD/YYYY",
        "DD/MM/YYYY",
        "#FFF or #FFFFFF",
        "Window exports",
        "need a hash and a relevant anchor in this tabset",
        "roll up a little to show the titles",
        "use browser to open a tab, if it exists in this tabset",
        "either replace or update browser history",
        "Foundation.Move(this.options.slideSpeed, $target, function(){",
        "});",
        "Window exports",
        ".find('a').css('padding-left', '1rem');",
        "has open sub menu",
        "is first element of sub menu",
        "if previous element has open sub menu",
        "is last element of sub menu",
        "close active sub of this item",
        "close currently open sub",
        ".attr('tabindex', 0);",
        "Foundation.Move(this.options.slideSpeed, $target, function() {",
        "});",
        "Foundation.Move(this.options.slideSpeed, $target, function(){",
        "});",
        "Window exports",
        "if(!this.options.holdOpen){",
        "this._menuLinkEvents();",
        "}",
        "create a wrapper on element if it doesn't exist.",
        "set wrapper",
        "_getMaxDims has side effects (boo) but calling it should update all other necessary heights & widths",
        "if(e.target !== e.currentTarget.firstElementChild){",
        "return false;",
        "}",
        "Don't tap focus on first element in root ul",
        "Don't tap focus on last element in root ul",
        "Don't close on element in root ul",
        "not menu item means back button",
        "end keyboardAccess",
        "console.log('mouseup on back');",
        "If there is a parent submenu, call show",
        "e.stopImmediatePropagation();",
        "holdOpen: false",
        "Window exports",
        "default, try switching to opposite side",
        "if default change didn't work, try bottom or left first",
        "if nothing cleared, set to bottom",
        "var _this = this;",
        "this.$element/*.show()*/;",
        ".hide()",
        "Window exports",
        "used for onClick and in the keyboard handlers",
        "Handle Leaf element Clicks",
        "if ($element.is(':first-child')) {",
        "}",
        "focus to first element",
        "vertical menu",
        "right aligned",
        "left aligned",
        "horizontal menu",
        "right aligned",
        "left aligned",
        "not tabs -> one sub",
        "right aligned",
        "left aligned",
        "Window exports",
        "group by Row",
        "maybe could use this.$watched[i].offsetTop",
        "Window exports",
        "Iterate through each rule, but only save the last match",
        "Replacing images",
        "Replacing background images",
        "Replacing HTML",
        "this.$element.trigger('replaced.zf.interchange');",
        "TODO this.",
        "Window exports",
        "Do nothing if target does not exist to prevent errors",
        "evt, elem, scrollPos",
        "scrollPos ||",
        "Window exports",
        "Find triggers that affect this element and add aria-expanded to them",
        "Add an overlay over the content if necessary",
        "Taken and adapted from http://stackoverflow.com/questions/16889447/prevent-full-page-scrolling-ios",
        "Only really works for y, not sure how to extend to x or if we need to.",
        "called from event handler context with this as elem",
        "If the element is scrollable (content overflows), then...",
        "If we're at the top, scroll down one pixel to allow scrolling up",
        "If we're at the bottom, scroll up one pixel to allow scrolling down",
        "called from event handler context with this as elem",
        "If `contentScroll` is set to false, add class and disable scrolling on touch devices.",
        "If `contentScroll` is set to false, remove class and re-enable scrolling on touch devices.",
        "Window exports",
        "@TODO: consider discussion on PR #9278 about DOM pollution by changeSlide",
        "hehe",
        "allow wrapper to be focusable to enable arrow navigation",
        "rewrite this to `for` loop",
        "if not the active slide, set css position and display property",
        "only change the wrapper height property once.",
        "fire callback with max height dimension.",
        "",
        "also need to handle enter/return and spacebar key presses",
        "if this is active, kick out of function.",
        "handle keyboard event with keyboard util",
        "if bullet is focused, make sure focus moves",
        "Don't do anything if there are no slides (first run)",
        "Remove old events",
        "Restart timer if autoPlay is enabled",
        "Reset all sliddes",
        "Show the first slide",
        "Triggers when the slide has finished animating",
        "Select first bullet if bullets are present",
        "Don't freak out if we're in the middle of cleanup",
        "if the slide is currently animating, kick out of the function",
        "most of the time, this will be auto played or clicked from the navButtons.",
        "if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!",
        "pick next slide if moving left to right",
        "pick prev slide if moving right to left",
        "grab index to update bullets",
        "do stuff?",
        "Window exports",
        "The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules",
        "Parse rules from \"classes\" pulled from data attribute",
        "Iterate through every rule found",
        "Add data-mutate since children may need it.",
        "$(window).on('resize.zf.ResponsiveMenu', function() {",
        "_this._checkMediaQueries();",
        "});",
        "Iterate through each rule and find the last matching rule",
        "No match? No dice",
        "Plugin already initialized? We good",
        "Remove existing plugin-specific CSS classes",
        "Add the CSS class for the new plugin",
        "Create an instance of the new plugin",
        "The plugin matches the plugin classes with these plugin instances.",
        "Window exports",
        "If they were set, parse the animation classes",
        "Mobile",
        "Desktop",
        "Window exports",
        "only worry about left if we don't have an overlay or we havea  horizontal offset,",
        "otherwise we're perfectly in the middle",
        "only close reveal when it's explicitly called",
        "Make elements invisible, but remove display: none so we can get size and positioning",
        "Motion UI method of reveal",
        "protect against object having been removed",
        "jQuery method of reveal",
        "handle accessibility",
        "If we're in the middle of cleanup, don't freak out",
        "lock focus within modal while tabbing",
        "handle keyboard event with keyboard util",
        "set focus back to anchor if close button has been activated",
        "dont't trigger if acual element has focus (i.e. inputs, links, ...)",
        "Motion UI method of hiding",
        "jQuery method of hiding",
        "Conditionals to remove extra event listeners added on open",
        "move $element outside of $overlay to prevent error unregisterPlugin()",
        "Window exports",
        "this.$handle.triggerHandler('click.zf.slider');",
        "Set handle positions",
        "don't move if the slider has been disabled since its initialization",
        "might need to alter that slightly for bars that will have odd number selections.",
        "on input change events, convert string to number...grumble.",
        "prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max",
        "this block is to prevent 2 handles from crossing eachother. Could/should be improved.",
        "this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"",
        "for click and drag events, it's weird due to the scale(-1, 1) css property",
        "percentage of bar min/max value based on click or drag point",
        "number of actual pixels to shift the handle, based on the percentage obtained above",
        "percentage of bar to shift the handle",
        "fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value",
        "declare empty object for css adjustments, only used with 2 handled-sliders",
        "TODO update to calculate based on values set to respective inputs??",
        "empty variable, will be used for min-height/width for fill bar",
        "percentage w/h of the handle compared to the slider bar",
        "if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar",
        "left or top percentage value to apply to the fill bar.",
        "calculate the new min-height/width for the fill bar.",
        "this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider",
        "plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.",
        "this is only needed for the initialization of 2 handled sliders",
        "just caching the value of the left/bottom handle's left/top property",
        "calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0",
        "based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself",
        "assign the min-height/width to our css object",
        "because we don't know exactly how the handle will be moved, check the amount of time it should take to move.",
        "adjusting the left/top property of the handle, based on the percentage calculated above",
        "if movement isNaN, that is because the slider is hidden and we cannot determine handle width,",
        "fall back to next best guess.",
        "if single-handled, a simple method to expand the fill bar",
        "otherwise, use the css object we created above",
        "click or drag events",
        "touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...",
        "best way to guess this is simulated is if clientY == pageY",
        "turn everything around for RTL, yay math!",
        "boolean flag for the setHandlePos fn, specifically for vertical sliders",
        "figure out which handle it is, pass it to the next function.",
        "change event on input",
        "",
        "prevent events triggered by touch",
        "handle keyboard event with keyboard util",
        "only set handle pos when event was handled specially",
        "if (newValue) { // if pressed key has special function, update value\n        e.preventDefault();\n        _this._setHandlePos(_$handle, newValue);\n      }",
        "steps: 100,",
        "dragDelay: 0,",
        "update this if changing the transition time in the sass",
        "Window exports",
        "We calculate the container height to have correct values for anchor points offset calculation.",
        "Unstick the element will ensure that proper classes are set.",
        "topPoint = this.$anchor.offset().top || this.points[0],",
        "bottomPoint = topPoint + this.anchorHeight || this.points[1],",
        "this would be the stickTo: both option... tricky",
        "Window exports",
        "'TAB': 'next',",
        "'SHIFT_TAB': 'previous'",
        "current context-bound function to open tabs on page load or history popstate",
        "need a hash and a relevant anchor in this tabset",
        "roll up a little to show the titles",
        "use browser to open a tab, if it exists in this tabset",
        "handle keyboard event with keyboard util",
        "close old tab",
        "open new tab",
        "either replace or update browser history",
        "fire to children a mutation event",
        "Lock down the `this` value for the root tabs object",
        "get the options from the parent instead of trying to get them from the child",
        "Window exports",
        "Parse animation classes if they were set",
        "Otherwise, parse toggle class",
        "Allow for a . at the beginning of the string",
        "Add ARIA attributes to triggers",
        "If the target is hidden, add aria-hidden",
        "Window exports",
        "helper variables to track movement on collisions",
        "var position = element.attr('class').match(/top|left|right/g);",
        "default, try switching to opposite side",
        "if default change didn't work, try bottom or left first",
        "if nothing cleared, set to bottom",
        "this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({",
        "console.error('The screen is too small to display this tooltip');",
        "console.log(this.template);",
        "maybe do stuff?",
        "console.log('hiding', this.$element.data('yeti-box'));",
        "_this.hide();",
        "_this.isClick = false;",
        "'toggle.zf.trigger': this.toggle.bind(this),",
        "'close.zf.trigger': this.hide.bind(this)",
        "If we're not showing open on clicks, we need to pretend a click-launched focus isn't",
        "a real focus, otherwise on hover and come back we get bad behavior",
        "Window exports"
    ],
    "docstrings": [
        "* Stores initialized plugins.",
        "* Stores generated unique ids for plugin instances",
        "* Returns a boolean for RTL support",
        "* Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n   * @param {Object} plugin - The constructor of the plugin.",
        "* @function\n   * Populates the _uuids array with pointers to each individual plugin instance.\n   * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n   * Also fires the initialization event for each plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @param {String} name - the name of the plugin, passed as a camelCased string.\n   * @fires Plugin#init",
        "* Fires when the plugin has initialized.\n           * @event Plugin#init",
        "* @function\n   * Removes the plugins uuid from the _uuids array.\n   * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n   * Also fires the destroyed event for the plugin, consolidating repetitive code.\n   * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n   * @fires Plugin#destroyed",
        "* Fires when the plugin has been destroyed.\n           * @event Plugin#destroyed",
        "* @function\n   * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n   * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n   * @default If no argument is passed, reflow all currently active plugins.",
        "* returns a random base-36 uid with namespacing\n   * @function\n   * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n   * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n   * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n   * @returns {String} - unique id",
        "* Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n   * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n   * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.",
        "* Function for applying a debounce effect to a function call.\n   * @function\n   * @param {Function} func - Function to be called at end of timeout.\n   * @param {Number} delay - Time in ms to delay the call of `func`.\n   * @returns function",
        "* The Foundation jQuery method.\n * @param {String|Array} method - An action to perform on the current jQuery object.",
        "* Polyfill for performance.now, required by rAF",
        "* Compares the dimensions of an element to a container and determines collision events with container.\n * @function\n * @param {jQuery} element - jQuery object to test for collisions.\n * @param {jQuery} parent - jQuery object to use as bounding container.\n * @param {Boolean} lrOnly - set to true to check left and right values only.\n * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n * @default if no parent object passed, detects collisions with `window`.\n * @returns {Boolean} - true if collision free, false if a collision in any direction.",
        "* Uses native methods to return an object of dimension values.\n * @function\n * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n * @returns {Object} - nested object of integer pixel values\n * TODO - if element is window, return only those values.",
        "* Returns an object of top and left integer pixel values for dynamically rendered elements,\n * such as: Tooltip, Reveal, and Dropdown\n * @function\n * @param {jQuery} element - jQuery object for the element being positioned.\n * @param {jQuery} anchor - jQuery object for the element's anchor point.\n * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n * TODO alter/rewrite to work with `em` values as well/instead of pixels",
        "*****************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n *****************************************",
        "* Parses the (keyboard) event and returns a String that represents its key\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   * @param {Event} event - the event generated by the event handler\n   * @return String key - String that represents the key pressed",
        "* Handles the given (keyboard) event\n   * @param {Event} event - the event generated by the event handler\n   * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n   * @param {Objects} functions - collection of functions that are to be executed",
        "* Finds all focusable elements within the given `$element`\n   * @param {jQuery} $element - jQuery object to search within\n   * @return {jQuery} $focusable - all focusable elements within `$element`",
        "* Returns the component name name\n   * @param {Object} component - Foundation component, e.g. Slider or Reveal\n   * @return String componentName",
        "* Traps the focus in the given element.\n   * @param  {jQuery} $element  jQuery object to trap the foucs into.",
        "* Releases the trapped focus from the given element.\n   * @param  {jQuery} $element  jQuery object to release the focus for.",
        "* Constants for easier comparing.\n * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE",
        "* Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n   * @function\n   * @private",
        "* Checks if the screen is at least as wide as a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.",
        "* Checks if the screen matches to a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to check, either 'small only' or 'small'. Omitting 'only' falls back to using atLeast() method.\n   * @returns {Boolean} `true` if the breakpoint matches, `false` if it does not.",
        "* Gets the media query of a breakpoint.\n   * @function\n   * @param {String} size - Name of the breakpoint to get.\n   * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.",
        "* Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n   * @function\n   * @private\n   * @returns {String} Name of the current breakpoint.",
        "* Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n   * @function\n   * @private",
        "* Motion module.\n * @module foundation.motion",
        "* Animates an element in or out using a CSS transition class.\n * @function\n * @private\n * @param {Boolean} isIn - Defines if the animation is in or out.\n * @param {Object} element - jQuery or HTML object to animate.\n * @param {String} animation - CSS class to use.\n * @param {Function} cb - Callback to run when animation is finished.",
        "* Runs a callback function when images are fully loaded.\n * @param {Object} images - Image(s) to check if loaded.\n * @param {Func} callback - Function to execute when image is fully loaded.",
        "**************************************************",
        "**Work inspired by multiple jquery swipe plugins**",
        "**Done by Yohai Ararat ***************************",
        "**************************************************",
        "**************************************************\n * Method for adding psuedo drag events to elements *\n **************************************************",
        "**********************************",
        "**From the jQuery Mobile Library**",
        "**need to recreate functionality**",
        "**and try to improve if possible**",
        "**********************************",
        "* Fires once after all other scripts have loaded\n* @function\n* @private",
        "******** only fires this function once on load, if there's something to watch ********",
        "* Abide module.\n * @module foundation.abide",
        "* Creates a new instance of Abide.\n   * @class\n   * @fires Abide#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the Abide plugin and calls functions to get Abide functioning on load.\n   * @private",
        "* Initializes events for Abide.\n   * @private",
        "* Calls necessary functions to update Abide upon DOM change\n   * @private",
        "* Checks whether or not a form element has the required attribute and if it's checked or not\n   * @param {Object} element - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty",
        "* Get:\n   * - Based on $el, the first element(s) corresponding to `formErrorSelector` in this order:\n   *   1. The element's direct sibling('s).\n   *   2. The element's parent's children.\n   * - Element(s) with the attribute `[data-form-error-for]` set with the element's id.\n   *\n   * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n   *\n   * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n   * @returns {Object} jQuery object with the selector.",
        "* Get the first element in this order:\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\n   * 3. The `.closest()` <label>\n   *\n   * @param {Object} $el - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty",
        "* Get the set of labels associated with a set of radio els in this order\n   * 2. The <label> with the attribute `[for=\"someInputId\"]`\n   * 3. The `.closest()` <label>\n   *\n   * @param {Object} $el - jQuery object to check for required attribute\n   * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty",
        "* Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n   * @param {Object} $el - jQuery object to add the class to",
        "* Remove CSS error classes etc from an entire radio button group\n   * @param {String} groupName - A string that specifies the name of a radio button group\n   *",
        "* Removes CSS error class as specified by the Abide settings from the label, input, and the form\n   * @param {Object} $el - jQuery object to remove the class from",
        "* Goes through a form to find inputs and proceeds to validate them in ways specific to their type. \n   * Ignores inputs with data-abide-ignore, type=\"hidden\" or disabled attributes set\n   * @fires Abide#invalid\n   * @fires Abide#valid\n   * @param {Object} element - jQuery object to validate, should be an HTML input\n   * @returns {Boolean} goodToGo - If the input is valid or not.",
        "* Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n     * Trigger includes the DOM element of the input.\n     * @event Abide#valid\n     * @event Abide#invalid",
        "* Goes through a form and if there are any invalid inputs, it will display the form error element\n   * @returns {Boolean} noError - true if no errors were detected...\n   * @fires Abide#formvalid\n   * @fires Abide#forminvalid",
        "* Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n     * Trigger includes the element of the form.\n     * @event Abide#formvalid\n     * @event Abide#forminvalid",
        "* Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n   * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n   * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n   * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified",
        "* Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\n   * @param {String} groupName - A string that specifies the name of a radio button group\n   * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)",
        "* Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n   * @param {Object} $el - jQuery input element.\n   * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n   * @param {Boolean} required - self explanatory?\n   * @returns {Boolean} - true if validations passed.",
        "* Resets form inputs and styles\n   * @fires Abide#formreset",
        "* Fires when the form has been reset.\n     * @event Abide#formreset",
        "* Destroys an instance of Abide.\n   * Removes error styles and classes from elements, without resetting their values.",
        "* Default settings for plugin",
        "* The default event to validate inputs. Checkboxes and radios validate immediately.\n   * Remove or change this value for manual validation.\n   * @option\n   * @type {?string}\n   * @default 'fieldChange'",
        "* Class to be applied to input labels on failed validation.\n   * @option\n   * @type {string}\n   * @default 'is-invalid-label'",
        "* Class to be applied to inputs on failed validation.\n   * @option\n   * @type {string}\n   * @default 'is-invalid-input'",
        "* Class selector to use to target Form Errors for show/hide.\n   * @option\n   * @type {string}\n   * @default '.form-error'",
        "* Class added to Form Errors on failed validation.\n   * @option\n   * @type {string}\n   * @default 'is-visible'",
        "* Set to true to validate text inputs on any value change.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Set to true to validate inputs on blur.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Optional validation functions to be used. `equalTo` being the only default included function.\n   * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n   * el : The jQuery element to validate.\n   * required : Boolean value of the required attribute be present or not.\n   * parent : The direct parent of the input.\n   * @option",
        "* Accordion module.\n * @module foundation.accordion\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion",
        "* Creates a new instance of an accordion.\n   * @class\n   * @fires Accordion#init\n   * @param {jQuery} element - jQuery object to make into an accordion.\n   * @param {Object} options - a plain object with settings to override the default options.",
        "* Initializes the accordion by animating the preset active pane(s).\n   * @private",
        "* Fires when the zplugin has deeplinked at pageload\n            * @event Accordion#deeplink",
        "* Adds event handlers for items within the accordion.\n   * @private",
        "* Toggles the selected content pane's open/close state.\n   * @param {jQuery} $target - jQuery object of the pane to toggle (`.accordion-content`).\n   * @function",
        "* Opens the accordion tab defined by `$target`.\n   * @param {jQuery} $target - Accordion pane to open (`.accordion-content`).\n   * @param {Boolean} firstTime - flag to determine if reflow should happen.\n   * @fires Accordion#down\n   * @function",
        "* Fires when the tab is done opening.\n       * @event Accordion#down",
        "* Closes the tab defined by `$target`.\n   * @param {jQuery} $target - Accordion tab to close (`.accordion-content`).\n   * @fires Accordion#up\n   * @function",
        "* Fires when the tab is done collapsing up.\n         * @event Accordion#up",
        "* Destroys an instance of an accordion.\n   * @fires Accordion#destroyed\n   * @function",
        "* Amount of time to animate the opening of an accordion pane.\n   * @option\n   * @type {number}\n   * @default 250",
        "* Allow the accordion to have multiple open panes.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allow the accordion to close all panes.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows the window to scroll to content of pane specified by hash anchor\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Adjust the deep link scroll to make sure the top of the accordion panel is visible\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Animation time (ms) for the deep link adjustment\n   * @option\n   * @type {number}\n   * @default 300",
        "* Update the browser history with the open accordion\n   * @option\n   * @type {boolean}\n   * @default false",
        "* AccordionMenu module.\n * @module foundation.accordionMenu\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.nest",
        "* Creates a new instance of an accordion menu.\n   * @class\n   * @fires AccordionMenu#init\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the accordion menu by hiding all nested menus.\n   * @private",
        "* Adds event handlers for items within the menu.\n   * @private",
        "* Closes all panes of the menu.\n   * @function",
        "* Opens all panes of the menu.\n   * @function",
        "* Toggles the open/close state of a submenu.\n   * @function\n   * @param {jQuery} $target - the submenu to toggle",
        "* Opens the sub-menu defined by `$target`.\n   * @param {jQuery} $target - Sub-menu to open.\n   * @fires AccordionMenu#down",
        "* Fires when the menu is done opening.\n           * @event AccordionMenu#down",
        "* Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\n   * @param {jQuery} $target - Sub-menu to close.\n   * @fires AccordionMenu#up",
        "* Fires when the menu is done collapsing up.\n         * @event AccordionMenu#up",
        "* Destroys an instance of accordion menu.\n   * @fires AccordionMenu#destroyed",
        "* Amount of time to animate the opening of a submenu in ms.\n   * @option\n   * @type {number}\n   * @default 250",
        "* Allow the menu to have multiple open panes.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Drilldown module.\n * @module foundation.drilldown\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.nest",
        "* Creates a new instance of a drilldown menu.\n   * @class\n   * @param {jQuery} element - jQuery object to make into an accordion menu.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the drilldown by creating jQuery collections of elements\n   * @private",
        "* prepares drilldown menu by setting attributes to links and elements\n   * sets a min height to prevent content jumping\n   * wraps the element if not already wrapped\n   * @private\n   * @function",
        "* Adds event handlers to elements in the menu.\n   * @function\n   * @private\n   * @param {jQuery} $elem - the current menu item to add handlers to.",
        "* Adds event handlers to the menu element.\n   * @function\n   * @private",
        "* Scroll to Top of Element or data-scroll-top-element\n   * @function\n   * @fires Drilldown#scrollme",
        "* Fires after the menu has scrolled\n        * @event Drilldown#scrollme",
        "* Adds keydown event listener to `li`'s in the menu.\n   * @private",
        "* Closes all open elements, and returns to root menu.\n   * @function\n   * @fires Drilldown#closed",
        "* Fires when the menu is fully closed.\n         * @event Drilldown#closed",
        "* Adds event listener for each `back` button, and closes open menus.\n   * @function\n   * @fires Drilldown#back\n   * @param {jQuery} $elem - the current sub-menu to add `back` event.",
        "* Adds event listener to menu items w/o submenus to close open menus on click.\n   * @function\n   * @private",
        "* Opens a submenu.\n   * @function\n   * @fires Drilldown#open\n   * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.",
        "* Fires when the submenu has opened.\n     * @event Drilldown#open",
        "* Hides a submenu\n   * @function\n   * @fires Drilldown#hide\n   * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.",
        "* Fires when the submenu has closed.\n     * @event Drilldown#hide",
        "* Iterates through the nested menus to calculate the min-height, and max-width for the menu.\n   * Prevents content jumping.\n   * @function\n   * @private",
        "* Destroys the Drilldown Menu\n   * @function",
        "* Markup used for JS generated back button. Prepended  or appended (see backButtonPosition) to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\n   * @option\n   * @type {string}\n   * @default '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>'",
        "* Position the back button either at the top or bottom of drilldown submenus. Can be `'left'` or `'bottom'`.\n   * @option\n   * @type {string}\n   * @default top",
        "* Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\n   * @option\n   * @type {string}\n   * @default '<div></div>'",
        "* Adds the parent link to the submenu.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allow the menu to return to root list on body click.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allow the menu to auto adjust height.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Animate the auto adjust height.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Scroll to the top of the menu after opening a submenu or navigating back using the menu back button\n   * @option\n   * @type {boolean}\n   * @default false",
        "* String jquery selector (for example 'body') of element to take offset().top from, if empty string the drilldown menu offset().top is taken\n   * @option\n   * @type {string}\n   * @default ''",
        "* ScrollTop offset\n   * @option\n   * @type {number}\n   * @default 0",
        "* Scroll animation duration\n   * @option\n   * @type {number}\n   * @default 500",
        "* Scroll animation easing. Can be `'swing'` or `'linear'`.\n   * @option\n   * @type {string}\n   * @see {@link https://api.jquery.com/animate|JQuery animate}\n   * @default 'swing'",
        "* Dropdown module.\n * @module foundation.dropdown\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers",
        "* Creates a new instance of a dropdown.\n   * @class\n   * @param {jQuery} element - jQuery object to make into a dropdown.\n   *        Object should be of the dropdown panel, rather than its anchor.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n   * @function\n   * @private",
        "* Helper function to determine current orientation of dropdown pane.\n   * @function\n   * @returns {String} position - string value of a position class.",
        "* Adjusts the dropdown panes orientation by adding/removing positioning classes.\n   * @function\n   * @private\n   * @param {String} position - position class to remove.",
        "* Sets the position and orientation of the dropdown pane, checks for collisions.\n   * Recursively calls itself if a collision is detected, with a new position class.\n   * @function\n   * @private",
        "* Adds event listeners to the element utilizing the triggers utility library.\n   * @function\n   * @private",
        "* Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private",
        "* Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n   * @function\n   * @fires Dropdown#closeme\n   * @fires Dropdown#show",
        "* Fires to close other open dropdowns, typically when dropdown is opening\n     * @event Dropdown#closeme",
        "* Fires once the dropdown is visible.\n     * @event Dropdown#show",
        "* Closes the open dropdown pane.\n   * @function\n   * @fires Dropdown#hide",
        "* Fires once the dropdown is no longer visible.\n     * @event Dropdown#hide",
        "* Toggles the dropdown pane's visibility.\n   * @function",
        "* Destroys the dropdown.\n   * @function",
        "* Class that designates bounding container of Dropdown (default: window)\n   * @option\n   * @type {?string}\n   * @default null",
        "* Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @type {number}\n   * @default 250",
        "* Allow submenus to open on hover events\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Don't close dropdown when hovering over dropdown pane\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @type {number}\n   * @default 1",
        "* Number of pixels between the dropdown pane and the triggering element on open.\n   * @option\n   * @type {number}\n   * @default 1",
        "* Class applied to adjust open position. JS will test and fill this in.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows a click on the body to close the dropdown.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* DropdownMenu module.\n * @module foundation.dropdown-menu\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.nest",
        "* Creates a new instance of DropdownMenu.\n   * @class\n   * @fires DropdownMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the plugin, and calls _prepareMenu\n   * @private\n   * @function",
        "* Adds event listeners to elements within the menu\n   * @private\n   * @function",
        "* Adds an event handler to the body to close any dropdowns on a click.\n   * @function\n   * @private",
        "* Opens a dropdown pane, and checks for collisions first.\n   * @param {jQuery} $sub - ul element that is a submenu to show\n   * @function\n   * @private\n   * @fires DropdownMenu#show",
        "* Fires when the new dropdown pane is visible.\n     * @event DropdownMenu#show",
        "* Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n   * @function\n   * @param {jQuery} $elem - element with a submenu to hide\n   * @param {Number} idx - index of the $tabs collection to hide\n   * @private",
        "* Fires when the open menus are closed.\n       * @event DropdownMenu#hide",
        "* Destroys the plugin.\n   * @function",
        "* Default settings for plugin",
        "* Disallows hover events from opening submenus\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Amount of time to delay opening a submenu on hover event.\n   * @option\n   * @type {number}\n   * @default 50",
        "* Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Amount of time to delay closing a submenu on a mouseleave event.\n   * @option\n   * @type {number}\n   * @default 500",
        "* Position of the menu relative to what direction the submenus should open. Handled by JS. Can be `'left'` or `'right'`.\n   * @option\n   * @type {string}\n   * @default 'left'",
        "* Allow clicks on the body to close any open submenus.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Allow clicks on leaf anchor links to close any open submenus.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n   * @option\n   * @type {string}\n   * @default 'vertical'",
        "* Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n   * @option\n   * @type {string}\n   * @default 'align-right'",
        "* Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Equalizer module.\n * @module foundation.equalizer\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.timerAndImageLoader if equalizer contains images",
        "* Creates a new instance of Equalizer.\n   * @class\n   * @fires Equalizer#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n   * @private",
        "* Removes event listeners if the breakpoint is too small.\n   * @private",
        "* function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\n   * @private",
        "* function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\n   * @private",
        "* Initializes events for Equalizer.\n   * @private",
        "* Checks the current breakpoint to the minimum required size.\n   * @private",
        "* A noop version for the plugin\n   * @private",
        "* Calls necessary functions to update Equalizer upon DOM change\n   * @private",
        "* Manually determines if the first 2 elements are *NOT* stacked.\n   * @private",
        "* Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Function} cb - A non-optional callback to return the heights array to.\n   * @returns {Array} heights - An array of heights of children within Equalizer container",
        "* Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n   * @param {Function} cb - A non-optional callback to return the heights array to.\n   * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child",
        "* Changes the CSS height property of each child in an Equalizer parent to match the tallest\n   * @param {array} heights - An array of heights of children within Equalizer container\n   * @fires Equalizer#preequalized\n   * @fires Equalizer#postequalized",
        "* Fires before the heights are applied\n     * @event Equalizer#preequalized",
        "* Fires when the heights have been applied\n     * @event Equalizer#postequalized",
        "* Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\n   * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n   * @fires Equalizer#preequalized\n   * @fires Equalizer#preequalizedrow\n   * @fires Equalizer#postequalizedrow\n   * @fires Equalizer#postequalized",
        "* Fires before the heights are applied",
        "* Fires before the heights per row are applied\n        * @event Equalizer#preequalizedrow",
        "* Fires when the heights per row have been applied\n        * @event Equalizer#postequalizedrow",
        "* Fires when the heights have been applied",
        "* Destroys an instance of Equalizer.\n   * @function",
        "* Default settings for plugin",
        "* Enable height equalization when stacked on smaller screens.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Enable height equalization row by row.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* String representing the minimum breakpoint size the plugin should equalize heights on.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Interchange module.\n * @module foundation.interchange\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.timerAndImageLoader",
        "* Creates a new instance of Interchange.\n   * @class\n   * @fires Interchange#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n   * @function\n   * @private",
        "* Initializes events for Interchange.\n   * @function\n   * @private",
        "* Calls necessary functions to update Interchange upon DOM change\n   * @function\n   * @private",
        "* Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n   * @function\n   * @private",
        "* Checks the Interchange element for the provided media query + content pairings\n   * @function\n   * @private\n   * @param {Object} element - jQuery object that is an Interchange instance\n   * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys",
        "* Update the `src` property of an image, or change the HTML of a container, to the specified path.\n   * @function\n   * @param {String} path - Path to the image or HTML partial.\n   * @fires Interchange#replaced",
        "* Fires when content in an Interchange element is done being loaded.\n     * @event Interchange#replaced",
        "* Destroys an instance of interchange.\n   * @function",
        "* Default settings for plugin",
        "* Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n   * @option\n   * @type {?array}\n   * @default null",
        "* Magellan module.\n * @module foundation.magellan",
        "* Creates a new instance of Magellan.\n   * @class\n   * @fires Magellan#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n   * @private",
        "* Calculates an array of pixel values that are the demarcation lines between locations on the page.\n   * Can be invoked if new elements are added or the size of a location changes.\n   * @function",
        "* Initializes events for Magellan.\n   * @private",
        "* Function to scroll to a given location on the page.\n   * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n   * @function",
        "* Calls necessary functions to update Magellan upon DOM change\n   * @function",
        "* Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n   * @private\n   * @function\n   * @fires Magellan#update",
        "* Fires when magellan is finished updating to the new active element.\n     * @event Magellan#update",
        "* Destroys an instance of Magellan and resets the url of the window.\n   * @function",
        "* Default settings for plugin",
        "* Amount of time, in ms, the animated scrolling should take between locations.\n   * @option\n   * @type {number}\n   * @default 500",
        "* Animation style to use when scrolling between locations. Can be `'swing'` or `'linear'`.\n   * @option\n   * @type {string}\n   * @default 'linear'\n   * @see {@link https://api.jquery.com/animate|Jquery animate}",
        "* Number of pixels to use as a marker for location changes.\n   * @option\n   * @type {number}\n   * @default 50",
        "* Class applied to the active locations link on the magellan container.\n   * @option\n   * @type {string}\n   * @default 'active'",
        "* Allows the script to manipulate the url of the current page, and if supported, alter the history.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n   * @option\n   * @type {number}\n   * @default 0",
        "* OffCanvas module.\n * @module foundation.offcanvas\n * @requires foundation.util.keyboard\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers\n * @requires foundation.util.motion",
        "* Creates a new instance of an off-canvas wrapper.\n   * @class\n   * @fires OffCanvas#init\n   * @param {Object} element - jQuery object to initialize.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n   * @function\n   * @private",
        "* Adds event handlers to the off-canvas wrapper and the exit overlay.\n   * @function\n   * @private",
        "* Applies event listener for elements that will reveal at certain breakpoints.\n   * @private",
        "* Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n   * @param {Boolean} isRevealed - true if element should be revealed.\n   * @function",
        "* Stops scrolling of the body when offcanvas is open on mobile Safari and other troublesome browsers.\n   * @private",
        "* Opens the off-canvas menu.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.\n   * @fires OffCanvas#opened",
        "* Fires when the off-canvas menu opens.\n     * @event OffCanvas#opened",
        "* Closes the off-canvas menu.\n   * @function\n   * @param {Function} cb - optional cb to fire after closure.\n   * @fires OffCanvas#closed",
        "* Fires when the off-canvas menu opens.\n       * @event OffCanvas#closed",
        "* Toggles the off-canvas menu open or closed.\n   * @function\n   * @param {Object} event - Event object passed from listener.\n   * @param {jQuery} trigger - element that triggered the off-canvas to open.",
        "* Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n   * @function\n   * @private",
        "* Destroys the offcanvas plugin.\n   * @function",
        "* Allow the user to click outside of the menu to close it.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Adds an overlay on top of `[data-off-canvas-content]`.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Enable/disable scrolling of the main content when an off canvas panel is open.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n   * @option\n   * @type {number}\n   * @default 0",
        "* Type of transition for the offcanvas menu. Options are 'push', 'detached' or 'slide'.\n   * @option\n   * @type {string}\n   * @default push",
        "* Force the page to scroll to top or bottom on open.\n   * @option\n   * @type {?string}\n   * @default null",
        "* Allow the offcanvas to remain open for certain breakpoints.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\n   * @option\n   * @type {?string}\n   * @default null",
        "* Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n   * @option\n   * @type {string}\n   * @default reveal-for-\n   * @todo improve the regex testing for this.",
        "* Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Orbit module.\n * @module foundation.orbit\n * @requires foundation.util.keyboard\n * @requires foundation.util.motion\n * @requires foundation.util.timerAndImageLoader\n * @requires foundation.util.touch",
        "* Creates a new instance of an orbit carousel.\n  * @class\n  * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n  * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n  * @function\n  * @private",
        "* Creates a jQuery collection of bullets, if they are being used.\n  * @function\n  * @private",
        "* Sets a `timer` object on the orbit, and starts the counter for the next slide.\n  * @function",
        "* Sets wrapper and slide heights for the orbit.\n  * @function\n  * @private",
        "* Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n  * @function\n  * @private\n  * @param {Function} cb - a callback function to fire when complete.",
        "* Sets the max-height of each slide.\n  * @function\n  * @private",
        "* Adds event listeners to basically everything within the element.\n  * @function\n  * @private",
        "***************************************",
        "**Now using custom event - thanks to:**",
        "**      Yohai Ararat of Toronto      **",
        "***************************************",
        "***************************************",
        "* Resets Orbit so it can be reinitialized",
        "* Changes the current slide to a new one.\n  * @function\n  * @param {Boolean} isLTR - flag if the slide should move left to right.\n  * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n  * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n  * @fires Orbit#slidechange",
        "* Triggers before the next slide starts animating in and only if a next slide has been found.\n      * @event Orbit#beforeslidechange",
        "* Triggers when the slide has finished animating in.\n    * @event Orbit#slidechange",
        "* Updates the active state of the bullets, if displayed.\n  * @function\n  * @private\n  * @param {Number} idx - the index of the current slide.",
        "* Destroys the carousel and hides the element.\n  * @function",
        "* Tells the JS to look for and loadBullets.\n  * @option\n   * @type {boolean}\n  * @default true",
        "* Tells the JS to apply event listeners to nav buttons\n  * @option\n   * @type {boolean}\n  * @default true",
        "* motion-ui animation class to apply\n  * @option\n   * @type {string}\n  * @default 'slide-in-right'",
        "* motion-ui animation class to apply\n  * @option\n   * @type {string}\n  * @default 'slide-out-right'",
        "* motion-ui animation class to apply\n  * @option\n   * @type {string}\n  * @default 'slide-in-left'\n  *",
        "* motion-ui animation class to apply\n  * @option\n   * @type {string}\n  * @default 'slide-out-left'",
        "* Allows Orbit to automatically animate on page load.\n  * @option\n   * @type {boolean}\n  * @default true",
        "* Amount of time, in ms, between slide transitions\n  * @option\n   * @type {number}\n  * @default 5000",
        "* Allows Orbit to infinitely loop through the slides\n  * @option\n   * @type {boolean}\n  * @default true",
        "* Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n  * @option\n   * @type {boolean}\n  * @default true",
        "* Allows the timing function to pause animation on hover.\n  * @option\n   * @type {boolean}\n  * @default true",
        "* Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n  * @option\n   * @type {boolean}\n  * @default true",
        "* Class applied to the container of Orbit\n  * @option\n   * @type {string}\n  * @default 'orbit-container'",
        "* Class applied to individual slides.\n  * @option\n   * @type {string}\n  * @default 'orbit-slide'",
        "* Class applied to the bullet container. You're welcome.\n  * @option\n   * @type {string}\n  * @default 'orbit-bullets'",
        "* Class applied to the `next` navigation button.\n  * @option\n   * @type {string}\n  * @default 'orbit-next'",
        "* Class applied to the `previous` navigation button.\n  * @option\n   * @type {string}\n  * @default 'orbit-previous'",
        "* Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n  * @option\n   * @type {boolean}\n  * @default true",
        "* ResponsiveMenu module.\n * @module foundation.responsiveMenu\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery",
        "* Creates a new instance of a responsive menu.\n   * @class\n   * @fires ResponsiveMenu#init\n   * @param {jQuery} element - jQuery object to make into a dropdown menu.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n   * @function\n   * @private",
        "* Initializes events for the Menu.\n   * @function\n   * @private",
        "* Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n   * @function\n   * @private",
        "* Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n   * @function",
        "* ResponsiveToggle module.\n * @module foundation.responsiveToggle\n * @requires foundation.util.mediaQuery",
        "* Creates a new instance of Tab Bar.\n   * @class\n   * @fires ResponsiveToggle#init\n   * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the tab bar by finding the target element, toggling element, and running update().\n   * @function\n   * @private",
        "* Adds necessary event handlers for the tab bar to work.\n   * @function\n   * @private",
        "* Checks the current media query to determine if the tab bar should be visible or hidden.\n   * @function\n   * @private",
        "* Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n   * @function\n   * @fires ResponsiveToggle#toggled",
        "* Fires when the element attached to the tab bar toggles.\n       * @event ResponsiveToggle#toggled",
        "* The breakpoint after which the menu is always shown, and the tab bar is hidden.\n   * @option\n   * @type {string}\n   * @default 'medium'",
        "* To decide if the toggle should be animated or not.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Reveal module.\n * @module foundation.reveal\n * @requires foundation.util.keyboard\n * @requires foundation.util.box\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.motion if using animations",
        "* Creates a new instance of Reveal.\n   * @class\n   * @param {jQuery} element - jQuery object to use for the modal.\n   * @param {Object} options - optional parameters.",
        "* Initializes the modal by adding the overlay and close buttons, (if selected).\n   * @private",
        "* Creates an overlay div to display behind the modal.\n   * @private",
        "* Updates position of modal\n   * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n   * @private",
        "* Adds event handlers for the modal.\n   * @private",
        "* Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n   * @private",
        "* Opens the modal controlled by `this.$anchor`, and closes all others by default.\n   * @function\n   * @fires Reveal#closeme\n   * @fires Reveal#open",
        "* Fires immediately before the modal opens.\n       * Closes any other modals that are currently open\n       * @event Reveal#closeme",
        "* Fires when the modal has successfully opened.\n     * @event Reveal#open",
        "* Adds extra event handlers for the body and window if necessary.\n   * @private",
        "* Closes the modal.\n   * @function\n   * @fires Reveal#closed",
        "* Fires when the modal is done closing.\n      * @event Reveal#closed",
        "* Resets the modal content\n    * This prevents a running video to keep going in the background",
        "* Toggles the open/closed state of a modal.\n   * @function",
        "* Destroys an instance of a modal.\n   * @function",
        "* Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Time, in ms, to delay the opening of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0",
        "* Time, in ms, to delay the closing of a modal after a click if no animation used.\n   * @option\n   * @type {number}\n   * @default 0",
        "* Allows a click on the body/overlay to close the modal.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Allows the modal to close if the user presses the `ESCAPE` key.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* If true, allows multiple modals to be displayed at once.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Distance, in pixels, the modal should push down from the top of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto",
        "* Distance, in pixels, the modal should push in from the side of the screen.\n   * @option\n   * @type {number|string}\n   * @default auto",
        "* Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Percentage of screen height the modal should push up from the bottom of the view.\n   * @option\n   * @type {number}\n   * @default 10",
        "* Allows the modal to generate an overlay div, which will cover the view when modal opens.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows the modal to append to custom div.\n   * @option\n   * @type {string}\n   * @default \"body\"",
        "* Slider module.\n * @module foundation.slider\n * @requires foundation.util.motion\n * @requires foundation.util.triggers\n * @requires foundation.util.keyboard\n * @requires foundation.util.touch",
        "* Creates a new instance of a slider control.\n   * @class\n   * @param {jQuery} element - jQuery object to make into a slider control.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n   * @function\n   * @private",
        "* @function\n  * @private\n  * @param {Number} value - floating point (the value) to be transformed using to a relative position on the slider (the inverse of _value)",
        "* @function\n  * @private\n  * @param {Number} pctOfBar - floating point, the relative position of the slider (typically between 0-1) to be transformed to a value",
        "* @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the log function",
        "* @function\n  * @private\n  * @param {Number} value - floating point (typically between 0-1) to be transformed using the power function",
        "* Sets the position of the selected handle and fill bar.\n   * @function\n   * @private\n   * @param {jQuery} $hndl - the selected handle to move.\n   * @param {Number} location - floating point between the start and end values of the slider bar.\n   * @param {Function} cb - callback function to fire on completion.\n   * @fires Slider#moved\n   * @fires Slider#changed",
        "* Fires when the handle is done moving.\n                     * @event Slider#moved",
        "* Fires when the value has not been change for a given time.\n     * @event Slider#changed",
        "* Sets the initial attribute for the slider element.\n   * @function\n   * @private\n   * @param {Number} idx - index of the current handle/input to use.",
        "* Sets the input and `aria-valuenow` values for the slider element.\n   * @function\n   * @private\n   * @param {jQuery} $handle - the currently selected handle.\n   * @param {Number} val - floating point of the new value.",
        "* Handles events on the slider element.\n   * Calculates the new location of the current handle.\n   * If there are two handles and the bar was clicked, it determines which handle to move.\n   * @function\n   * @private\n   * @param {Object} e - the `event` object passed from the listener.\n   * @param {jQuery} $handle - the current handle to calculate for, if selected.\n   * @param {Number} val - floating point number for the new value of the slider.\n   * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.",
        "* Adjustes value for handle in regard to step value. returns adjusted value\n   * @function\n   * @private\n   * @param {jQuery} $handle - the selected handle.\n   * @param {Number} value - value to adjust. used if $handle is falsy",
        "* Adds event listeners to the slider elements.\n   * @function\n   * @private",
        "* Adds event listeners a particular handle\n   * @function\n   * @private\n   * @param {jQuery} $handle - the current handle to apply listeners to.",
        "* Destroys the slider plugin.",
        "* Minimum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 0",
        "* Maximum value for the slider scale.\n   * @option\n   * @type {number}\n   * @default 100",
        "* Minimum value change per change event.\n   * @option\n   * @type {number}\n   * @default 1",
        "* Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 0",
        "* Value at which the right handle/second input should be set to on initialization.\n   * @option\n   * @type {number}\n   * @default 100",
        "* Allows the input to be located outside the container and visible. Set to by the JS\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows the user to click/tap on the slider bar to select a value.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Set to true and use the `vertical` class to change alignment to vertical.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows the user to drag the slider handle(s) to select a value.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Potential future feature.",
        "* Number of decimal places the plugin should go to for floating point precision.\n   * @option\n   * @type {number}\n   * @default 2",
        "* Time delay for dragged elements.",
        "* Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n   * @option\n   * @type {number}\n   * @default 200",
        "* Class applied to disabled sliders.\n   * @option\n   * @type {string}\n   * @default 'disabled'",
        "* Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Milliseconds before the `changed.zf-slider` event is triggered after value change.\n   * @option\n   * @type {number}\n   * @default 500",
        "* Basevalue for non-linear sliders\n  * @option\n  * @type {number}\n  * @default 5",
        "* Basevalue for non-linear sliders, possible values are: `'linear'`, `'pow'` & `'log'`. Pow and Log use the nonLinearBase setting.\n  * @option\n  * @type {string}\n  * @default 'linear'",
        "* Sticky module.\n * @module foundation.sticky\n * @requires foundation.util.triggers\n * @requires foundation.util.mediaQuery",
        "* Creates a new instance of a sticky thing.\n   * @class\n   * @param {jQuery} element - jQuery object to make sticky.\n   * @param {Object} options - options object passed when creating the element programmatically.",
        "* Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n   * @function\n   * @private",
        "* If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n   * @function\n   * @private",
        "* Adds event handlers for the scrolling element.\n   * @private\n   * @param {String} id - psuedo-random id for unique scroll event listener.",
        "* Handler for events.\n   * @private\n   * @param {String} id - psuedo-random id for unique scroll event listener.",
        "* Removes event handlers for scroll and change events on anchor.\n   * @fires Sticky#pause\n   * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`",
        "* Fires when the plugin is paused due to resize event shrinking the view.\n     * @event Sticky#pause\n     * @private",
        "* Called on every `scroll` event and on `_init`\n   * fires functions based on booleans and cached values\n   * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n   * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.",
        "* Causes the $element to become stuck.\n   * Adds `position: fixed;`, and helper classes.\n   * @fires Sticky#stuckto\n   * @function\n   * @private",
        "* Fires when the $element has become `position: fixed;`\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n                  * @event Sticky#stuckto",
        "* Causes the $element to become unstuck.\n   * Removes `position: fixed;`, and helper classes.\n   * Adds other helper classes.\n   * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n   * @fires Sticky#unstuckfrom\n   * @private",
        "* Fires when the $element has become anchored.\n                  * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n                  * @event Sticky#unstuckfrom",
        "* Sets the $element and $container sizes for plugin.\n   * Calls `_setBreakPoints`.\n   * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n   * @private",
        "* Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n   * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n   * @param {Function} cb - optional callback function to be called on completion.\n   * @private",
        "* Destroys the current sticky element.\n   * Resets the element to the top position first.\n   * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n   * @function",
        "* Customizable container template. Add your own classes for styling and sizing.\n   * @option\n   * @type {string}\n   * @default '&lt;div data-sticky-container&gt;&lt;/div&gt;'",
        "* Location in the view the element sticks to. Can be `'top'` or `'bottom'`.\n   * @option\n   * @type {string}\n   * @default 'top'",
        "* If anchored to a single element, the id of that element.\n   * @option\n   * @type {string}\n   * @default ''",
        "* If using more than one element as anchor points, the id of the top anchor.\n   * @option\n   * @type {string}\n   * @default ''",
        "* If using more than one element as anchor points, the id of the bottom anchor.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n   * @option\n   * @type {number}\n   * @default 1",
        "* Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n   * @option\n   * @type {number}\n   * @default 1",
        "* Breakpoint string that is the minimum screen size an element should become sticky.\n   * @option\n   * @type {string}\n   * @default 'medium'",
        "* Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n   * @option\n   * @type {string}\n   * @default 'sticky'",
        "* Class applied to sticky container. Foundation defaults to `sticky-container`.\n   * @option\n   * @type {string}\n   * @default 'sticky-container'",
        "* Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n   * @option\n   * @type {number}\n   * @default -1",
        "* Helper function to calculate em values\n * @param Number {em} - number of em's to calculate into pixels",
        "* Tabs module.\n * @module foundation.tabs\n * @requires foundation.util.keyboard\n * @requires foundation.util.timerAndImageLoader if tabs contain images",
        "* Creates a new instance of tabs.\n   * @class\n   * @fires Tabs#init\n   * @param {jQuery} element - jQuery object to make into tabs.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n   * @private",
        "* Fires when the zplugin has deeplinked at pageload\n            * @event Tabs#deeplink",
        "* Adds event handlers for items within the tabs.\n   * @private",
        "* Adds click handlers for items within the tabs.\n   * @private",
        "* Adds keyboard event handlers for items within the tabs.\n   * @private",
        "* Opens the tab `$targetContent` defined by `$target`. Collapses active tab.\n   * @param {jQuery} $target - Tab to open.\n   * @param {boolean} historyHandled - browser has already handled a history update\n   * @fires Tabs#change\n   * @function",
        "* Check for active class on target. Collapse if exists.",
        "* Fires when the zplugin has successfully collapsed tabs.\n            * @event Tabs#collapse",
        "* Fires when the plugin has successfully changed tabs.\n     * @event Tabs#change",
        "* Opens the tab `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to Open.\n   * @function",
        "* Collapses `$targetContent` defined by `$target`.\n   * @param {jQuery} $target - Tab to Open.\n   * @function",
        "* Public method for selecting a content pane to display.\n   * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n   * @param {boolean} historyHandled - browser has already handled a history update\n   * @function",
        "* Sets the height of each panel to the height of the tallest panel.\n   * If enabled in options, gets called on media query change.\n   * If loading content via external source, can be called directly or with _reflow.\n   * If enabled with `data-match-height=\"true\"`, tabs sets to equal height\n   * @function\n   * @private",
        "* Destroys an instance of an tabs.\n   * @fires Tabs#destroyed",
        "* Allows the window to scroll to content of pane specified by hash anchor\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Adjust the deep link scroll to make sure the top of the tab panel is visible\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Animation time (ms) for the deep link adjustment\n   * @option\n   * @type {number}\n   * @default 300",
        "* Update the browser history with the open tab\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows the window to scroll to content of active pane on load if set to true.\n   * Not recommended if more than one tab panel per page.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows keyboard input to 'wrap' around the tab links.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Allows the tab content panes to match heights if set to true.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Allows active tabs to collapse when clicked.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Class applied to `li`'s in tab link list.\n   * @option\n   * @type {string}\n   * @default 'tabs-title'",
        "* Class applied to the active `li` in tab link list.\n   * @option\n   * @type {string}\n   * @default 'is-active'",
        "* Class applied to the content containers.\n   * @option\n   * @type {string}\n   * @default 'tabs-panel'",
        "* Class applied to the active content container.\n   * @option\n   * @type {string}\n   * @default 'is-active'",
        "* Toggler module.\n * @module foundation.toggler\n * @requires foundation.util.motion\n * @requires foundation.util.triggers",
        "* Creates a new instance of Toggler.\n   * @class\n   * @fires Toggler#init\n   * @param {Object} element - jQuery object to add the trigger to.\n   * @param {Object} options - Overrides to the default plugin settings.",
        "* Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n   * @function\n   * @private",
        "* Initializes events for the toggle trigger.\n   * @function\n   * @private",
        "* Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n   * @function\n   * @fires Toggler#on\n   * @fires Toggler#off",
        "* Fires if the target element has the class after a toggle.\n       * @event Toggler#on",
        "* Fires if the target element does not have the class after a toggle.\n       * @event Toggler#off",
        "* Destroys the instance of Toggler on the element.\n   * @function",
        "* Tells the plugin if the element should animated when toggled.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Tooltip module.\n * @module foundation.tooltip\n * @requires foundation.util.box\n * @requires foundation.util.mediaQuery\n * @requires foundation.util.triggers",
        "* Creates a new instance of a Tooltip.\n   * @class\n   * @fires Tooltip#init\n   * @param {jQuery} element - jQuery object to attach a tooltip to.\n   * @param {Object} options - object to extend the default configuration.",
        "* Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n   * @private",
        "* Grabs the current positioning class, if present, and returns the value or an empty string.\n   * @private",
        "* builds the tooltip element, adds attributes, and returns the template.\n   * @private",
        "* Function that gets called if a collision event is detected.\n   * @param {String} position - positioning class to try\n   * @private",
        "* sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n   * if the tooltip is larger than the screen width, default to full width - any user selected margin\n   * @private",
        "* reveals the tooltip, and fires an event to close any other open tooltips on the page\n   * @fires Tooltip#closeme\n   * @fires Tooltip#show\n   * @function",
        "* Fires to close all other open tooltips on the page\n     * @event Closeme#tooltip",
        "* Fires when the tooltip is shown\n     * @event Tooltip#show",
        "* Hides the current tooltip, and resets the positioning class if it was changed due to collision\n   * @fires Tooltip#hide\n   * @function",
        "* fires when the tooltip is hidden\n     * @event Tooltip#hide",
        "* adds event listeners for the tooltip and its anchor\n   * TODO combine some of the listeners like focus and mouseenter, etc.\n   * @private",
        "* adds a toggle method, in addition to the static show() & hide() functions\n   * @function",
        "* Destroys an instance of tooltip, removes template element from the view.\n   * @function",
        "* Time, in ms, before a tooltip should open on hover.\n   * @option\n   * @type {number}\n   * @default 200",
        "* Time, in ms, a tooltip should take to fade into view.\n   * @option\n   * @type {number}\n   * @default 150",
        "* Time, in ms, a tooltip should take to fade out of view.\n   * @option\n   * @type {number}\n   * @default 150",
        "* Disables hover events from opening the tooltip if set to true\n   * @option\n   * @type {boolean}\n   * @default false",
        "* Optional addtional classes to apply to the tooltip template on init.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n   * @option\n   * @type {string}\n   * @default 'tooltip'",
        "* Class applied to the tooltip anchor element.\n   * @option\n   * @type {string}\n   * @default 'has-tip'",
        "* Minimum breakpoint size at which to open the tooltip.\n   * @option\n   * @type {string}\n   * @default 'small'",
        "* Custom template to be used to generate markup for tooltip.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Text displayed in the tooltip template on open.\n   * @option\n   * @type {string}\n   * @default ''",
        "* Allows the tooltip to remain open if triggered with a click or touch event.\n   * @option\n   * @type {boolean}\n   * @default true",
        "* Additional positioning classes, set by the JS\n   * @option\n   * @type {string}\n   * @default ''",
        "* Distance, in pixels, the template should push away from the anchor on the Y axis.\n   * @option\n   * @type {number}\n   * @default 10",
        "* Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n   * @option\n   * @type {number}\n   * @default 12",
        "* Allow HTML in tooltip. Warning: If you are loading user-generated content into tooltips,\n   * allowing HTML may open yourself up to XSS attacks.\n   * @option\n   * @type {boolean}\n   * @default false",
        "* TODO utilize resize event trigger"
    ],
    "functions": [
        "functionName",
        "parseValue",
        "hyphenate",
        "ImNotTouchingYou",
        "GetDimensions",
        "GetOffsets",
        "getKeyCodes",
        "parseStyleToObject",
        "Move",
        "move",
        "animate",
        "finish",
        "reset",
        "Timer",
        "onImagesLoaded",
        "singleImageLoaded",
        "onTouchEnd",
        "onTouchMove",
        "onTouchStart",
        "init",
        "teardown",
        "checkListeners",
        "closemeListener",
        "resizeListener",
        "scrollListener",
        "eventsListener",
        "defineProperties",
        "_classCallCheck",
        "Abide",
        "defineProperties",
        "_classCallCheck",
        "Accordion",
        "defineProperties",
        "_classCallCheck",
        "AccordionMenu",
        "defineProperties",
        "_classCallCheck",
        "Drilldown",
        "defineProperties",
        "_classCallCheck",
        "Dropdown",
        "defineProperties",
        "_classCallCheck",
        "DropdownMenu",
        "defineProperties",
        "_classCallCheck",
        "Equalizer",
        "defineProperties",
        "_classCallCheck",
        "Interchange",
        "defineProperties",
        "_classCallCheck",
        "Magellan",
        "defineProperties",
        "_classCallCheck",
        "OffCanvas",
        "defineProperties",
        "_classCallCheck",
        "Orbit",
        "defineProperties",
        "_classCallCheck",
        "ResponsiveMenu",
        "defineProperties",
        "_classCallCheck",
        "ResponsiveToggle",
        "defineProperties",
        "_classCallCheck",
        "Reveal",
        "addRevealOpenClasses",
        "finishUp",
        "iPhoneSniff",
        "androidSniff",
        "mobileSniff",
        "defineProperties",
        "_classCallCheck",
        "Slider",
        "percent",
        "absPosition",
        "baseLog",
        "defineProperties",
        "_classCallCheck",
        "Sticky",
        "emCalc",
        "defineProperties",
        "_classCallCheck",
        "Tabs",
        "defineProperties",
        "_classCallCheck",
        "Toggler",
        "defineProperties",
        "_classCallCheck",
        "Tooltip"
    ],
    "classes": []
}