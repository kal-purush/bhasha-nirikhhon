{
    "identifiers": [
        "com",
        "diffplug",
        "gradle",
        "spotless",
        "java",
        "io",
        "org",
        "junit",
        "Test",
        "Test",
        "setFile",
        "toLines",
        "setFile",
        "toResource",
        "gradleRunner",
        "withArguments",
        "build",
        "assertFile",
        "sameAsResource",
        "Test",
        "setFile",
        "toLines",
        "setFile",
        "toLines",
        "gradleRunner",
        "forwardOutput",
        "withArguments",
        "build",
        "assertFile",
        "hasLines"
    ],
    "literals": [
        "\"build.gradle\"",
        "\"plugins { id 'com.diffplug.spotless' }\"",
        "\"import com.diffplug.gradle.spotless.JavaExtension\"",
        "\"spotless {\"",
        "\"  format 'customJava', JavaExtension, {\"",
        "\"    target '*.java'\"",
        "\"    googleJavaFormat('1.2')\"",
        "\"  }\"",
        "\"}\"",
        "\"test.java\"",
        "\"java/googlejavaformat/JavaCodeUnformatted.test\"",
        "\"spotlessApply\"",
        "\"test.java\"",
        "\"java/googlejavaformat/JavaCodeFormatted.test\"",
        "\"build.gradle\"",
        "\"plugins { id 'com.diffplug.spotless' }\"",
        "\"import com.diffplug.gradle.spotless.JavaExtension\"",
        "\"spotless {\"",
        "\"  format 'docs', {\"",
        "\"    target '*.md'\"",
        "\"    withinBlocks 'toLower', '\\\\n```lower\\\\n', '\\\\n```\\\\n', {\"",
        "\"      it.custom 'lowercase', { str -> str.toLowerCase() }\"",
        "\"    }\"",
        "\"    withinBlocks 'java only', '\\\\n```java\\\\n', '\\\\n```\\\\n', JavaExtension, {\"",
        "\"      it.googleJavaFormat()\"",
        "\"    }\"",
        "\"  }\"",
        "\"}\"",
        "\"test.md\"",
        "\"Some stuff\"",
        "\"```lower\"",
        "\" A B C\"",
        "\"D E F\"",
        "\"```\"",
        "\"And some java stuff\"",
        "\"```java\"",
        "\" public class SomeClass { public void method() {}}\"",
        "\"```\"",
        "\"And MORE!\"",
        "\"spotlessApply\"",
        "\"--stacktrace\"",
        "\"test.md\"",
        "\"Some stuff\"",
        "\"```lower\"",
        "\" a b c\"",
        "\"d e f\"",
        "\"```\"",
        "\"And some java stuff\"",
        "\"```java\"",
        "\"public class SomeClass {\"",
        "\"  public void method() {}\"",
        "\"}\"",
        "\"\"",
        "\"```\"",
        "\"And MORE!\""
    ],
    "variables": [],
    "comments": [
        "make sure that the \"typed-generic\" closure works",
        "it does, and it doesn't need `it`",
        "but down here, we need `it`, or it will bind to the parent context, why?"
    ],
    "docstrings": [
        "* Copyright 2020 DiffPlug\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License."
    ],
    "functions": [
        "genericFormatTest",
        "withinBlocksTourDeForce"
    ],
    "classes": [
        "WithinBlockTest"
    ]
}