{
    "identifiers": [
        "Collections",
        "Generic",
        "Threading",
        "Tasks",
        "FluentAssertions",
        "Moq",
        "NUnit",
        "Framework",
        "OffiRent",
        "API",
        "Domain",
        "Models",
        "OffiRent",
        "API",
        "Domain",
        "Repositories",
        "OffiRent",
        "API",
        "Domain",
        "Services",
        "Communications",
        "OffiRent",
        "API",
        "Services",
        "OffiRent",
        "API",
        "Test",
        "SetUp",
        "Test",
        "GetDefaultICategoryRepositoryInstance",
        "mockCategoryRepository",
        "Setup",
        "r",
        "ListAsync",
        "ReturnsAsync",
        "Category",
        "GetDefaultIUnitOfWorkInstance",
        "CategoryService",
        "mockCategoryRepository",
        "mockUnitOfWork",
        "Category",
        "Category",
        "service",
        "ListAsync",
        "categories",
        "Count",
        "categoriesCount",
        "Should",
        "Equals",
        "Test",
        "GetDefaultICategoryRepositoryInstance",
        "mockCategoryRepository",
        "Setup",
        "r",
        "FindById",
        "categoryId",
        "Returns",
        "FromResult",
        "Category",
        "GetDefaultIUnitOfWorkInstance",
        "CategoryService",
        "mockCategoryRepository",
        "mockUnitOfWork",
        "service",
        "GetByIdAsync",
        "categoryId",
        "response",
        "Message",
        "message",
        "Should",
        "Be",
        "Mock",
        "ICategoryRepository",
        "Mock",
        "ICategoryRepository",
        "Mock",
        "IUnitOfWork",
        "Mock",
        "IUnitOfWork"
    ],
    "literals": [
        "\"Category not found\""
    ],
    "variables": [
        "mockCategoryRepository",
        "mockUnitOfWork",
        "service",
        "categories",
        "categoriesCount",
        "mockCategoryRepository",
        "categoryId",
        "mockUnitOfWork",
        "service",
        "CategoryResponse",
        "response",
        "message"
    ],
    "comments": [
        "Arrange",
        "Act",
        "Assert",
        "Arrange",
        "Act",
        "Assert"
    ],
    "docstrings": [],
    "functions": [
        "Setup",
        "GetAllAsyncWhenNoCategoriesReturnsEmptyCollection",
        "GetByIdAsyncWhenInvalidIdReturnsCategoryNotFoundReResponse",
        "GetDefaultICategoryRepositoryInstance",
        "GetDefaultIUnitOfWorkInstance"
    ],
    "classes": [
        "CategoryServiceTest"
    ]
}