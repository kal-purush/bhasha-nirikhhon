{
    "identifiers": [
        "Microsoft",
        "Extensions",
        "Logging",
        "LoggerFilterOptions",
        "options",
        "Type",
        "providerType",
        "category",
        "LogLevel",
        "minLevel",
        "Func",
        "LogLevel",
        "minLevel",
        "options",
        "MinLevel",
        "rule",
        "options",
        "Rules",
        "IsBetter",
        "rule",
        "current",
        "category",
        "current",
        "rule",
        "current",
        "current",
        "Filter",
        "minLevel",
        "current",
        "LogLevel",
        "LoggerFilterRule",
        "rule",
        "LoggerFilterRule",
        "current",
        "logger",
        "category",
        "rule",
        "ProviderName",
        "rule",
        "ProviderName",
        "logger",
        "rule",
        "CategoryName",
        "category",
        "StartsWith",
        "rule",
        "CategoryName",
        "StringComparison",
        "OrdinalIgnoreCase",
        "current",
        "ProviderName",
        "rule",
        "ProviderName",
        "rule",
        "ProviderName",
        "current",
        "CategoryName",
        "rule",
        "CategoryName",
        "current",
        "CategoryName",
        "Length",
        "rule",
        "CategoryName",
        "Length"
    ],
    "literals": [],
    "variables": [
        "LoggerFilterRule",
        "current"
    ],
    "comments": [
        "Copyright (c) .NET Foundation. All rights reserved.",
        "Licensed under the MIT License. See License.txt in the project root for license information.",
        "This file is modified copy of:",
        "https://github.com/aspnet/Logging/blob/cc350d7ef616ef292c1b4ae7130b8c2b45fc1164/src/Microsoft.Extensions.Logging/LoggerRuleSelector.cs.",
        "Filter rule selection:",
        "1. Select rules for current logger type, if there is none, select ones without logger type specified",
        "2. Select rules with longest matching categories",
        "3. If there nothing matched by category take all rules without category",
        "3. If there is only one rule use it's level and filter",
        "4. If there are multiple rules use last",
        "5. If there are no applicable rules use global minimal level",
        "Skip rules with inapplicable type or category",
        "We want to skip category check when going from no provider to having provider"
    ],
    "docstrings": [],
    "functions": [
        "Select",
        "IsBetter"
    ],
    "classes": [
        "LoggerRuleSelector"
    ]
}