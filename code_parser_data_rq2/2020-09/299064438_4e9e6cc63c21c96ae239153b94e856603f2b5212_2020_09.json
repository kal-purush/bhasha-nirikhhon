{
    "identifiers": [
        "acme",
        "specs",
        "acme",
        "types",
        "acme",
        "wrappers",
        "dm_env",
        "numpy",
        "np",
        "tree",
        "EnvironmentWrapper",
        "environment",
        "dm_env",
        "Environment",
        "clip",
        "environment",
        "environment",
        "action_spec",
        "clip",
        "action",
        "types",
        "NestedArray",
        "dm_env",
        "TimeStep",
        "_scale_nested_action",
        "action",
        "_action_spec",
        "_clip",
        "_environment",
        "step",
        "scaled_action",
        "_convert_spec",
        "_environment",
        "action_spec",
        "nested_spec",
        "types",
        "NestedSpec",
        "types",
        "NestedSpec",
        "spec",
        "specs",
        "specs",
        "isinstance",
        "spec",
        "specs",
        "BoundedArray",
        "spec",
        "replace",
        "minimum",
        "np",
        "ones",
        "spec",
        "shape",
        "maximum",
        "np",
        "ones",
        "spec",
        "shape",
        "spec",
        "tree",
        "map_structure",
        "_convert_single_spec",
        "nested_spec",
        "nested_action",
        "types",
        "NestedArray",
        "nested_spec",
        "types",
        "NestedSpec",
        "clip",
        "types",
        "NestedArray",
        "action",
        "np",
        "ndarray",
        "spec",
        "specs",
        "isinstance",
        "spec",
        "specs",
        "BoundedArray",
        "spec",
        "maximum",
        "spec",
        "minimum",
        "spec",
        "minimum",
        "clip",
        "np",
        "clip",
        "action",
        "action",
        "action",
        "scale",
        "action",
        "offset",
        "action",
        "tree",
        "map_structure",
        "_scale_action",
        "nested_action",
        "nested_spec"
    ],
    "literals": [],
    "variables": [
        "_action_spec",
        "_clip",
        "scaled_action",
        "scale",
        "offset",
        "action",
        "action"
    ],
    "comments": [
        "python3",
        "Copyright 2018 DeepMind Technologies Limited. All rights reserved.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "Get scale and offset of output action spec.",
        "Maybe clip the action.",
        "Map action to [0, 1].",
        "Map action to [spec.minimum, spec.maximum]."
    ],
    "docstrings": [
        "\"\"\"Environment wrapper that converts environments to use canonical action specs.\n\nThis only affects action specs of type `specs.BoundedArray`.\n\nFor bounded action specs, we refer to a canonical action spec as the bounding\nbox [-1, 1]^d where d is the dimensionality of the spec. So the shape and dtype\nof the spec is unchanged, while the maximum/minimum values are set to +/- 1.\n\"\"\"",
        "\"\"\"Wrapper which converts environments to use canonical action specs.\n\n  This only affects action specs of type `specs.BoundedArray`.\n\n  For bounded action specs, we refer to a canonical action spec as the bounding\n  box [-1, 1]^d where d is the dimensionality of the spec. So the shape and\n  dtype of the spec is unchanged, while the maximum/minimum values are set\n  to +/- 1.\n  \"\"\"",
        "\"\"\"Converts all bounded specs in nested spec to the canonical scale.\"\"\"",
        "\"\"\"Converts a single spec to canonical if bounded.\"\"\"",
        "\"\"\"Converts a canonical nested action back to the given nested action spec.\"\"\"",
        "\"\"\"Converts a single canonical action back to the given action spec.\"\"\""
    ],
    "functions": [
        "step",
        "action_spec",
        "_convert_spec",
        "_convert_single_spec",
        "_scale_nested_action",
        "_scale_action"
    ],
    "classes": [
        "CanonicalSpecWrapper"
    ]
}