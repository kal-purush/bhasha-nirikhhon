{
    "identifiers": [
        "org",
        "apache",
        "druid",
        "data",
        "input",
        "impl",
        "com",
        "fasterxml",
        "jackson",
        "annotation",
        "JsonCreator",
        "com",
        "fasterxml",
        "jackson",
        "annotation",
        "JsonProperty",
        "com",
        "google",
        "common",
        "Preconditions",
        "org",
        "apache",
        "druid",
        "data",
        "input",
        "AbstractInputSource",
        "org",
        "apache",
        "druid",
        "data",
        "input",
        "InputFormat",
        "org",
        "apache",
        "druid",
        "data",
        "input",
        "InputSource",
        "org",
        "apache",
        "druid",
        "data",
        "input",
        "InputSplit",
        "org",
        "apache",
        "druid",
        "data",
        "input",
        "SplitHintSpec",
        "org",
        "apache",
        "druid",
        "java",
        "util",
        "common",
        "Pair",
        "javax",
        "annotation",
        "java",
        "io",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "stream",
        "Stream",
        "delegates",
        "JsonCreator",
        "JsonProperty",
        "delegates",
        "Preconditions",
        "checkArgument",
        "delegates",
        "delegates",
        "isEmpty",
        "delegates",
        "delegates",
        "JsonProperty",
        "delegates",
        "Override",
        "inputFormat",
        "splitHintSpec",
        "delegates",
        "stream",
        "flatMap",
        "inputSource",
        "inputSource",
        "createSplits",
        "inputFormat",
        "splitHintSpec",
        "inputsplit",
        "Pair",
        "of",
        "inputSource",
        "inputsplit",
        "e",
        "e",
        "Override",
        "inputFormat",
        "splitHintSpec",
        "delegates",
        "stream",
        "mapToInt",
        "inputSource",
        "inputSource",
        "estimateNumSplits",
        "inputFormat",
        "splitHintSpec",
        "e",
        "e",
        "sum",
        "Override",
        "split",
        "inputSourceWithSplit",
        "split",
        "get",
        "inputSourceWithSplit",
        "lhs",
        "withSplit",
        "inputSourceWithSplit",
        "rhs",
        "Override",
        "delegates",
        "stream",
        "anyMatch",
        "SplittableInputSource",
        "needsFormat",
        "Override",
        "o",
        "o",
        "o",
        "getClass",
        "o",
        "getClass",
        "that",
        "o",
        "delegates",
        "equals",
        "that",
        "delegates",
        "Override",
        "Objects",
        "hash",
        "delegates"
    ],
    "literals": [
        "\"delegates\"",
        "\"Must specify atleast one delegate inputSource\""
    ],
    "variables": [
        "delegates"
    ],
    "comments": [
        "This is called only when ParallelIndexIngestionSpec needs to decide if either inputformat vs parserspec is required.",
        "So if at least one of the delegate inputSources needsFormat, we set this to true.",
        "All other needsFormat calls will be made against the delegate inputSources."
    ],
    "docstrings": [
        "* Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* InputSource that combines data from multiple inputSources. The delegate inputSources must be splittable.\n * The splits for this inputSource are created from the {@link SplittableInputSource#createSplits} of the delegate inputSources.\n * Each inputSplit is paired up with its respective delegate inputSource so that during split,\n * {@link SplittableInputSource#withSplit}is called against the correct inputSource for each inputSplit.\n * This inputSource presently only supports a single {@link InputFormat}."
    ],
    "functions": [
        "CombiningInputSource",
        "getDelegates",
        "createSplits",
        "estimateNumSplits",
        "InputSource",
        "withSplit",
        "needsFormat",
        "equals",
        "hashCode"
    ],
    "classes": [
        "CombiningInputSource"
    ]
}