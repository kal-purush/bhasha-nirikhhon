{
    "identifiers": [
        "Flexagonator",
        "describe",
        "makeAtomicFlexes",
        "input",
        "flexes",
        "log",
        "log",
        "flexes",
        "atomicPatternToString",
        "input",
        "flexes",
        "flex",
        "atomics",
        "flex",
        "input",
        "isAtomicPatternError",
        "result",
        "result",
        "input",
        "result",
        "log",
        "flex",
        "atomicPatternToString",
        "input",
        "input",
        "it",
        "stringToAtomicPattern",
        "applyFlexes",
        "input",
        "isAtomicPatternError",
        "result",
        "fail",
        "result",
        "atomicPatternToString",
        "result",
        "expect",
        "asString",
        "it",
        "stringToAtomicPattern",
        "applyFlexes",
        "input",
        "isAtomicPatternError",
        "result",
        "fail",
        "result",
        "atomicPatternToString",
        "result",
        "expect",
        "asString"
    ],
    "literals": [
        "'makeAtomicFlexes'",
        "string",
        "'\\n---- applying flexes:'",
        "'------'",
        "'\\t\\t'",
        "' '",
        "'\\t'",
        "'\\t'",
        "\"should compose to create the exchange flex\"",
        "\"a 1 > / [-3,2] > b\"",
        "\"Ur > ^ Ur' ^\"",
        "'failed to apply flex: '",
        "\"-a [2,-1] > / 3 > -b\"",
        "\"should compose to create the pocket flex\"",
        "\"a [-2,1] > -3 > / [5,-4] > b\"",
        "\"Ur > ^ Ur' > Ul ^\"",
        "'failed to apply flex: '",
        "\"a 1 < 2 > / [-4,3] > -5 > -b\""
    ],
    "variables": [
        "atomics",
        "result",
        "input",
        "result",
        "asString",
        "input",
        "result",
        "asString"
    ],
    "comments": [
        "Ex = Ur > ^ Ur' ^",
        "a 1 > / [-3,2] > b  ->  -a [2,-1] > / 3 > -b",
        "K = Ur > ^ Ur' > Ul ^",
        "a [-2,1] > -3 > / [5,-4] > b  ->  a 1 < 2 > / [-4,3] > -5 > -b"
    ],
    "docstrings": [],
    "functions": [
        "applyFlexes"
    ],
    "classes": []
}