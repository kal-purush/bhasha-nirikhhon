{
    "identifiers": [
        "RemoteGraphQLDataSource",
        "fetch",
        "Request",
        "Headers",
        "isObject",
        "FormData",
        "_",
        "RemoteGraphQLDataSource",
        "args",
        "request",
        "fileVariables",
        "args",
        "fileVariables",
        "args",
        "fileVariables",
        "FormData",
        "_",
        "request",
        "fileVariables",
        "_",
        "variables",
        "variableName",
        "request",
        "form",
        "operations",
        "fileVariables",
        "file",
        "variableName",
        "contents",
        "resolvedFiles",
        "i",
        "i",
        "variableName",
        "form",
        "fileMap",
        "resolvedFiles",
        "i",
        "createReadStream",
        "readStream",
        "form",
        "i",
        "buffer",
        "mimetype",
        "request",
        "request",
        "Headers",
        "form",
        "err",
        "length",
        "headers",
        "length",
        "form",
        "headers",
        "k",
        "value",
        "request",
        "request",
        "form",
        "Request",
        "request",
        "options",
        "fetch",
        "httpRequest",
        "httpResponse",
        "isObject",
        "body",
        "body",
        "body",
        "httpResponse",
        "response",
        "error",
        "error",
        "httpRequest",
        "error",
        "obj",
        "_extract",
        "obj",
        "keys",
        "obj",
        "keys",
        "keys",
        "k",
        "k",
        "value",
        "files",
        "key",
        "value",
        "value",
        "_extract",
        "value",
        "key",
        "_extract",
        "obj",
        "files",
        "readStream",
        "resolve",
        "reject",
        "readStream",
        "data",
        "buffers",
        "data",
        "readStream",
        "Buffer",
        "buffers",
        "resolve",
        "actualContents",
        "readStream",
        "err",
        "reject",
        "err",
        "FileUploadDataSource",
        "config",
        "config",
        "config",
        "context",
        "context",
        "request",
        "apiTokens",
        "request",
        "context"
    ],
    "literals": [
        "'@apollo/gateway'",
        "'apollo-server-env'",
        "'@apollo/gateway/dist/utilities/predicates'",
        "'form-data'",
        "'lodash'",
        "'operations'",
        "variables.${variableName}",
        "'map'",
        "'Content-Length'",
        "'POST'",
        "Expected JSON response body, but received: ${body}",
        "${keys}.${k}",
        "'data'",
        "'end'",
        "'error'",
        "string",
        "\"Authorization\"",
        "\"Bearer \"",
        "\"Accept-Language\""
    ],
    "variables": [
        "args",
        "fileVariables",
        "form",
        "variables",
        "variableName",
        "operations",
        "resolvedFiles",
        "variableName",
        "file",
        "contents",
        "fileMap",
        "variableName",
        "contents",
        "contents",
        "readStream",
        "buffer",
        "headers",
        "k",
        "value",
        "options",
        "httpRequest",
        "httpResponse",
        "body",
        "response",
        "files",
        "_extract",
        "k",
        "value",
        "key",
        "buffers",
        "actualContents",
        "apiTokens"
    ],
    "comments": [
        "cannot mutate the request object",
        "e.g. { \"0\": [\"variables.file\"] }",
        "TODO: Buffers performance issues? may be better solution.",
        "Respect incoming http headers (eg, apollo-federation-include-trace).",
        "TODO: support arrays of files",
        "Make the class accept \"name\" property",
        "(context as any) due to typescript-related bug in apollo-gateway:",
        "https://github.com/apollographql/apollo-server/issues/3307"
    ],
    "docstrings": [
        "* Custom class wrapper that allows passing files to downstream services.\n * \n * Follows [graphql-multipart-request-spec](https://github.com/jaydenseric/graphql-multipart-request-spec)\n * Based on [this gist](https://gist.github.com/bl42/881d85ee0dd92bbe68e93dcd0c99cfdb)\n * \n * If apollo-server at some point implements the same logic, this custom wrapper can be dropped.",
        "* Custom class wrapper that holds authentication logic."
    ],
    "functions": [
        "process",
        "processFileUpload",
        "extract",
        "willSendRequest"
    ],
    "classes": [
        "FileUploadDataSource",
        "AuthenticatedDataSource"
    ]
}