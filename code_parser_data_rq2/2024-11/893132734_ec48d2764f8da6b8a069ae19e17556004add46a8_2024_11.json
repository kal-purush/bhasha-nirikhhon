{
    "identifiers": [
        "streamlit",
        "st",
        "PIL",
        "Image",
        "matplotlib",
        "pyplot",
        "plt",
        "base64",
        "io",
        "langchain_core",
        "messages",
        "HumanMessage",
        "st",
        "set_page_config",
        "page_title",
        "page_icon",
        "layout",
        "st",
        "markdown",
        "unsafe_allow_html",
        "st",
        "session_state",
        "st",
        "file_uploader",
        "label",
        "key",
        "st",
        "session_state",
        "st",
        "file_uploader",
        "label",
        "disabled",
        "image",
        "st",
        "session_state",
        "image",
        "st",
        "columns",
        "gap",
        "vertical_alignment",
        "col1",
        "st",
        "button",
        "label",
        "use_container_width",
        "col2",
        "st",
        "button",
        "label",
        "use_container_width",
        "col3",
        "st",
        "button",
        "label",
        "use_container_width",
        "st",
        "session_state",
        "clear",
        "st",
        "rerun",
        "open",
        "file",
        "read",
        "langchain_google_genai",
        "ChatGoogleGenerativeAI",
        "ChatGoogleGenerativeAI",
        "google_api_key",
        "key",
        "model",
        "btn1",
        "Image",
        "open",
        "image",
        "io",
        "BytesIO",
        "img",
        "save",
        "img_bytes1",
        "format",
        "base64",
        "b64encode",
        "img_bytes1",
        "getvalue",
        "decode",
        "HumanMessage",
        "content",
        "base64_image",
        "chat_model",
        "invoke",
        "message",
        "st",
        "write",
        "response",
        "content",
        "st",
        "columns",
        "st",
        "image",
        "image",
        "btn2",
        "Image",
        "open",
        "image",
        "io",
        "BytesIO",
        "img",
        "save",
        "buffered1",
        "format",
        "base64",
        "b64encode",
        "buffered1",
        "getvalue",
        "decode",
        "img_data",
        "chat_model",
        "invoke",
        "message",
        "langchain_core",
        "output_parsers",
        "StrOutputParser",
        "StrOutputParser",
        "parser",
        "parse",
        "response",
        "content",
        "st",
        "write",
        "parsed_output",
        "st",
        "columns",
        "st",
        "image",
        "image"
    ],
    "literals": [
        "\"Helper\"",
        "\"ðŸ˜µ\"",
        "\"centered\"",
        "'imageinput'",
        "'**Upload your image here**'",
        "'imageinput'",
        "'imageinput'",
        "'**Image already uploaded**'",
        "'imageinput'",
        "'medium'",
        "'center'",
        "'**Scene understanding**'",
        "'primary'",
        "'**Obstacle detection**'",
        "'primary'",
        "'**Clear input**'",
        "'secondary'",
        "\"keys/geminiapi.txt\"",
        "\"gemini-1.5-flash\"",
        "'JPEG'",
        "'utf-8'",
        "\"type\"",
        "\"text\"",
        "\"text\"",
        "\"Please describe the content of this image.\"",
        "\"type\"",
        "\"image_url\"",
        "\"image_url\"",
        "\"url\"",
        "f\"data:image/jpeg;base64,{base64_image}\"",
        "\"JPEG\"",
        "\"utf-8\"",
        "f\"Identify and describe any obstacles in this image:\\n\\n![Image](data:image/jpeg;base64,{img_data})\"",
        "\"role\"",
        "\"user\"",
        "\"type\"",
        "\"text\"",
        "\"content\""
    ],
    "variables": [
        "image",
        "image",
        "btn1",
        "btn2",
        "col1",
        "col2",
        "col3",
        "btn1",
        "btn2",
        "file",
        "key",
        "chat_model",
        "btn1",
        "img",
        "img_bytes1",
        "base64_image",
        "message",
        "response",
        "btn2",
        "img",
        "buffered1",
        "img_data",
        "message",
        "response",
        "parser",
        "parsed_output"
    ],
    "comments": [
        "Set page configuration",
        "Title of the app",
        "user input image",
        "buttons for app features",
        "loading api key",
        "MODELLING",
        "Set the OpenAI Key and initialize a ChatModel"
    ],
    "docstrings": [
        "'''\n    <h1 style=\"\n        font-family: 'Arial', sans-serif;\n        text-align: center;\n        color: #4B0082;\n        font-size: 3em;\n        margin: 20px 0;\n    \">\n    Image insights generator    \n    </h1>\n    '''"
    ],
    "functions": [],
    "classes": []
}