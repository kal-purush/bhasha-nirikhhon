{
    "identifiers": [
        "urllib",
        "typing",
        "Optional",
        "requests",
        "typing",
        "TYPE_CHECKING",
        "TYPE_CHECKING",
        "fhirclient",
        "server",
        "FHIRServer",
        "fhirclient",
        "models",
        "bundle",
        "Bundle",
        "bundle",
        "server",
        "Optional",
        "next_link",
        "_get_next_link",
        "bundle",
        "_execute_pagination_request",
        "next_link",
        "server",
        "bundle",
        "Optional",
        "bundle",
        "link",
        "link",
        "bundle",
        "link",
        "link",
        "relation",
        "_sanitize_next_link",
        "link",
        "url",
        "next_link",
        "urllib",
        "parse",
        "urlparse",
        "next_link",
        "parsed_url",
        "scheme",
        "ValueError",
        "parsed_url",
        "netloc",
        "ValueError",
        "next_link",
        "sanitized_url",
        "server",
        "fhirclient",
        "models",
        "bundle",
        "Bundle",
        "Bundle",
        "read_from",
        "sanitized_url",
        "server",
        "first_bundle",
        "server",
        "Optional",
        "Bundle",
        "first_bundle",
        "bundle",
        "bundle",
        "_fetch_next_page",
        "bundle",
        "server"
    ],
    "literals": [
        "'Bundle'",
        "'FHIRServer'",
        "'Bundle'",
        "'Bundle'",
        "\"next\"",
        "\"http\"",
        "\"https\"",
        "\"Invalid URL scheme in `next` link.\"",
        "\"Invalid URL domain in `next` link.\"",
        "'FHIRServer'",
        "'Bundle'",
        "'Bundle'",
        "'FHIRServer'",
        "'Bundle'"
    ],
    "variables": [
        "parsed_url",
        "bundle",
        "bundle"
    ],
    "comments": [
        "Use forward references to avoid circular imports",
        "Validate scheme and netloc (domain)",
        "Since _fetch_next_page can return None"
    ],
    "docstrings": [
        "\"\"\"\n    Fetch the next page of results using the `next` link provided in the bundle.\n\n    Args:\n        bundle (Bundle): The FHIR Bundle containing the `next` link.\n        server (FHIRServer): The FHIR server instance for handling requests and authentication.\n\n    Returns:\n        Optional[Bundle]: The next page of results as a FHIR Bundle, or None if no \"next\" link is found.\n    \"\"\"",
        "\"\"\"\n    Extract the `next` link from the Bundle's links.\n\n    Args:\n        bundle (Bundle): The FHIR Bundle containing pagination links.\n\n    Returns:\n        Optional[str]: The URL of the next page if available, None otherwise.\n    \"\"\"",
        "\"\"\"\n    Sanitize the `next` link by validating its scheme and hostname against the origin server.\n\n    This function ensures the `next` link URL uses a valid scheme (`http` or `https`) and that it contains a\n    hostname. This provides a basic safeguard against malformed URLs without overly restricting flexibility.\n\n    Args:\n        next_link (str): The raw `next` link URL.\n\n    Returns:\n        str: The validated URL.\n\n    Raises:\n        ValueError: If the URL's scheme is not `http` or `https`, or if the hostname does not match the origin server.\n    \"\"\"",
        "\"\"\"\n    Execute the request to retrieve the next page using the sanitized URL via Bundle.read_from.\n\n    Args:\n        sanitized_url (str): The sanitized URL to fetch the next page.\n        server (FHIRServer): The FHIR server instance to perform the request.\n\n    Returns:\n        Bundle: The next page of results as a FHIR Bundle.\n\n    Raises:\n        HTTPError: If the request fails due to network issues or server errors.\n    \"\"\"",
        "\"\"\"\n    Iterator that yields each page of results as a FHIR Bundle.\n\n    Args:\n        first_bundle (Optional[Bundle]): The first Bundle to start pagination.\n        server (FHIRServer): The FHIR server instance to perform the request.\n\n    Yields:\n        Bundle: Each page of results as a FHIR Bundle.\n    \"\"\""
    ],
    "functions": [
        "_fetch_next_page",
        "_get_next_link",
        "_sanitize_next_link",
        "_execute_pagination_request",
        "iter_pages"
    ],
    "classes": []
}