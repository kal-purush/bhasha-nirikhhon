{
    "identifiers": [
        "HashAlgoType",
        "SignAlgoType"
    ],
    "literals": [
        "'./algo-types'",
        "'moonpay'",
        "'coinbase'",
        "'passkey'",
        "'google_drive'",
        "'seed_phrase'",
        "'keystore'",
        "'private_key'",
        "'multi-backup'",
        "'seed-phrase'",
        "'private_key'",
        "'KeyStore'",
        "'device_backup'",
        "'flow'",
        "'evm'",
        "'child'",
        "'coa'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'biometric'",
        "'pin'",
        "'none'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [],
    "comments": [
        "General Events",
        "Error message of the script, e.g., Rate limit exceeded",
        "Script name from script API, e.g. checkCoaLink",
        "Address of the account that delegated",
        "ID of the node that was delegated to",
        "Amount of FLOW. e.g. 200.12",
        "The on ramp platform the user choose e.g. moonpay or coinbase",
        "The transaction ID",
        "",
        "Any error message",
        "Backup Events",
        "Address of the account that set up multi-backup",
        "Providers used in the multi-backup, GoogleDrive, iCloud, Seed e.g. google_drive  icloud seed_phrase",
        "Address of the account that set up multi-backup",
        "Providers used in the multi-backup, GoogleDrive, iCloud, Seed e.g. google_drive  icloud seed_phrase",
        "Transaction Events",
        "SHA256 Hashed Cadence that was signed.",
        "String of the transaction ID.",
        "Comma separated list of authorizer account address in the transaction",
        "Address of the transactions proposer.",
        "Payer of the transaction.",
        "Boolean of if the transaction was sent successful or not. true/false",
        "Boolean of if the transaction was sent successful or not. true/false",
        "Address of the account that signed the transaction",
        "EVM Address of the account that signed the transaction",
        "transaction id",
        "Address of the account that transferred the FT",
        "Address of the account that received the FT",
        "Type of FT sent (e.g., \"FLOW\", \"USDf\")",
        "The amount of FT",
        "The identifier of fungible token",
        "Address of the account that transferred the FT",
        "Address of the account that received the FT",
        "The identifier of non fungible token",
        "ID of the NFT that was transferred",
        "The type of from address whether it's flow, child account, coa or evm account.",
        "The type of to address whether it's flow, child account, coa or evm account.",
        "The transfer flow is triggerred from Move account",
        "The transaction id",
        "If the transaction is successful",
        "Error message of transaction",
        "Account Events",
        "The public key used for creating the new account",
        "The key type of the account (if available)",
        "Signature algorithm of the key",
        "Hash algo Hash algorithm of the key",
        "Timing Events",
        "Address that was recovered",
        "The way the account was recovered",
        "Array of providers used in the multi-backup, GoogleDrive, iCloud, Seed"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}