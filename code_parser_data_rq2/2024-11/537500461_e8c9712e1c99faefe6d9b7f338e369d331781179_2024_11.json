{
    "identifiers": [
        "functools",
        "partial",
        "pyomo",
        "environ",
        "Block",
        "PositiveReals",
        "units",
        "pyunits",
        "Var",
        "pyomo",
        "network",
        "Port",
        "pyomo",
        "common",
        "config",
        "ConfigBlock",
        "ConfigValue",
        "In",
        "idaes",
        "core",
        "declare_process_block_class",
        "UnitModelBlockData",
        "useDefault",
        "idaes",
        "core",
        "util",
        "config",
        "is_physical_parameter_block",
        "idaes",
        "core",
        "var_like_expression",
        "VarLikeExpression",
        "idaes",
        "core",
        "util",
        "tables",
        "create_stream_table_dataframe",
        "idaes",
        "core",
        "util",
        "scaling",
        "iscale",
        "idaes",
        "logger",
        "idaeslog",
        "idaes",
        "models",
        "unit_models",
        "feed",
        "FeedInitializer",
        "StreamScalerInitializer",
        "idaeslog",
        "getLogger",
        "declare_process_block_class",
        "UnitModelBlockData",
        "StreamScalerInitializer",
        "ConfigBlock",
        "CONFIG",
        "ConfigValue",
        "domain",
        "In",
        "description",
        "doc",
        "CONFIG",
        "ConfigValue",
        "domain",
        "In",
        "description",
        "doc",
        "CONFIG",
        "ConfigValue",
        "useDefault",
        "domain",
        "is_physical_parameter_block",
        "description",
        "doc",
        "CONFIG",
        "ConfigBlock",
        "description",
        "doc",
        "StreamScalerData",
        "build",
        "config",
        "property_package_args",
        "_get_property_package",
        "_get_indexing_sets",
        "config",
        "property_package",
        "build_state_block",
        "flowsheet",
        "time",
        "doc",
        "tmp_dict",
        "Block",
        "Var",
        "initialize",
        "domain",
        "PositiveReals",
        "units",
        "pyunits",
        "dimensionless",
        "doc",
        "add_inlet_port",
        "name",
        "block",
        "properties",
        "Port",
        "doc",
        "b",
        "args",
        "multiplier",
        "args",
        "b",
        "args",
        "args",
        "var_name",
        "inlet",
        "vars",
        "keys",
        "getattr",
        "inlet",
        "var_name",
        "var_name",
        "partial",
        "rule_scale_var",
        "partial",
        "rule_no_scale_var",
        "scaled_expressions",
        "add_component",
        "var_name",
        "VarLikeExpression",
        "index_set",
        "rule",
        "rule",
        "getattr",
        "scaled_expressions",
        "var_name",
        "outlet",
        "add",
        "expr",
        "var_name",
        "blk",
        "outlvl",
        "idaeslog",
        "NOTSET",
        "optarg",
        "solver",
        "hold_state",
        "blk",
        "properties",
        "initialize",
        "outlvl",
        "outlvl",
        "optarg",
        "optarg",
        "solver",
        "solver",
        "hold_state",
        "hold_state",
        "flags",
        "blk",
        "release_state",
        "flags",
        "outlvl",
        "outlvl",
        "blk",
        "flags",
        "outlvl",
        "idaeslog",
        "NOTSET",
        "blk",
        "properties",
        "release_state",
        "flags",
        "outlvl",
        "outlvl",
        "time_point",
        "inlet",
        "create_stream_table_dataframe",
        "io_dict",
        "time_point",
        "time_point",
        "calculate_scaling_factors",
        "multiplier",
        "value",
        "multiplier",
        "value",
        "iscale",
        "get_scaling_factor",
        "multiplier",
        "warning",
        "var_name",
        "inlet",
        "vars",
        "keys",
        "getattr",
        "inlet",
        "var_name",
        "getattr",
        "outlet",
        "var_name",
        "key",
        "subvar",
        "items",
        "iscale",
        "get_scaling_factor",
        "subvar",
        "warning",
        "iscale",
        "set_scaling_factor",
        "outlet_expr",
        "key",
        "scale",
        "sf"
    ],
    "literals": [
        "\"Douglas Allan, Tanner Polley\"",
        "\"StreamScaler\"",
        "\"dynamic\"",
        "\"Dynamic model flag - must be False\"",
        "\"has_holdup\"",
        "\"Holdup construction flag - must be False\"",
        "\"Scaler blocks do not contain holdup, thus this must be False.\"",
        "\"property_package\"",
        "\"Property package to use for StreamScaler\"",
        "\"property_package_args\"",
        "\"Arguments to use for constructing property packages\"",
        "\"has_phase_equilibrium\"",
        "\"defined_state\"",
        "\"Material properties at inlet\"",
        "\"Factor by which to scale dimensionless streams\"",
        "\"inlet\"",
        "\"Outlet port\"",
        "\"flow\"",
        "\"Inlet\""
    ],
    "variables": [
        "__author__",
        "_log",
        "default_initializer",
        "CONFIG",
        "tmp_dict",
        "tmp_dict",
        "tmp_dict",
        "properties",
        "scaled_expressions",
        "multiplier",
        "outlet",
        "rule",
        "rule",
        "expr",
        "flags",
        "io_dict",
        "scale",
        "outlet_expr",
        "sf"
    ],
    "comments": [
        "",
        "The Institute for the Design of Advanced Energy Systems Integrated Platform",
        "Framework (IDAES IP) was produced under the DOE Institute for the",
        "Design of Advanced Energy Systems (IDAES).",
        "",
        "Copyright (c) 2018-2023 by the software owners: The Regents of the",
        "University of California, through Lawrence Berkeley National Laboratory,",
        "National Technology & Engineering Solutions of Sandia, LLC, Carnegie Mellon",
        "University, West Virginia University Research Corporation, et al.",
        "All rights reserved.  Please see the files COPYRIGHT.md and LICENSE.md",
        "for full copyright and license information.",
        "",
        "Set up logger",
        "Call super.build()",
        "Call setup methods from ControlVolumeBlockData",
        "Create solver",
        "Initialize inlet state blocks",
        "\"Outlet\": self.outlet,",
        "Scaling factors for the property block are calculated automatically",
        "Need to pass on scaling factors from the property block to the outlet",
        "VarLikeExpressions so arcs get scaled right"
    ],
    "docstrings": [
        "\"\"\"\nUnit model to adjust size of streams to represent, for example, a stream being split across several identical units,\nwhich are then all modeled as a single IDAES unit\n\"\"\"",
        "\"\"\"\n    Unit model to adjust size of streams to represent, for example, a stream being split across several identical units,\n    which are then all modeled as a single IDAES unit\n    \"\"\"",
        "\"\"\"Indicates whether this model will be dynamic or not,\n                **default** = False. Scaler blocks are always steady-state.\"\"\"",
        "\"\"\"Property parameter object used to define property\ncalculations, **default** - useDefault.\n**Valid values:** {\n**useDefault** - use default package from parent model or flowsheet,\n**PropertyParameterObject** - a PropertyParameterBlock object.}\"\"\"",
        "\"\"\"A ConfigBlock with arguments to be passed to a property\nblock(s) and used when constructing these,\n**default** - None.\n**Valid values:** {\nsee property package for documentation.}\"\"\"",
        "\"\"\"\n        General build method for StreamScalerData. This method calls a number\n        of sub-methods which automate the construction of expected attributes\n        of unit models.\n\n        Inheriting models should call `super().build`.\n\n        Args:\n            None\n\n        Returns:\n            None\n        \"\"\"",
        "\"\"\"\n        Initialization routine for StreamScaler.\n\n        Keyword Arguments:\n            outlvl : sets output level of initialization routine\n            optarg : solver options dictionary object (default=None, use\n                     default solver options)\n            solver : str indicating which solver to use during\n                     initialization (default = None, use default solver)\n            hold_state : flag indicating whether the initialization routine\n                     should unfix any state variables fixed during\n                     initialization, **default** - False. **Valid values:**\n                     **True** - states variables are not unfixed, and a dict of\n                     returned containing flags for which states were fixed\n                     during initialization, **False** - state variables are\n                     unfixed after initialization by calling the release_state\n                     method.\n\n        Returns:\n            If hold_states is True, returns a dict containing flags for which\n            states were fixed during initialization.\n        \"\"\"",
        "\"\"\"\n        Method to release state variables fixed during initialization.\n\n        Keyword Arguments:\n            flags : dict containing information of which state variables\n                    were fixed during initialization, and should now be\n                    unfixed. This dict is returned by initialize if\n                    hold_state = True.\n            outlvl : sets output level of logging\n\n        Returns:\n            None\n        \"\"\""
    ],
    "functions": [
        "build",
        "rule_scale_var",
        "rule_no_scale_var",
        "initialize_build",
        "release_state",
        "_get_stream_table_contents",
        "calculate_scaling_factors"
    ],
    "classes": [
        "StreamScalerData"
    ]
}