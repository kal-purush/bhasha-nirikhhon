{
    "identifiers": [
        "parse",
        "loadSchema",
        "compileToIR",
        "loadSchema",
        "require",
        "describe",
        "it",
        "parse",
        "compileToIR",
        "schema",
        "expect",
        "operations",
        "expect",
        "operations",
        "expect",
        "operations",
        "expect",
        "operations",
        "expect",
        "operations"
    ],
    "literals": [
        "\"graphql\"",
        "\"../../loading\"",
        "\"../\"",
        "\"../../../../../__fixtures__/starwars/schema.json\"",
        "\"Compiling query documents to modern IR with typeNodes\"",
        "should print IR with typeNodes on fields",
        "query HeroName($episode: Episode) {\n        hero(episode: $episode) {\n          name\n          ...withId\n        }\n      }\n\n      query Search($text: String!) {\n        search(text: $text) {\n          ... on Character {\n            name\n          }\n        }\n      }\n\n      mutation CreateReviewForEpisode($episode: Episode!, $review: ReviewInput!) {\n        createReview(episode: $episode, review: $review) {\n          stars\n          commentary\n        }\n      }\n\n      fragment withId on Character {\n        id\n      }",
        "\"HeroName\"",
        "\"NonNullType\"",
        "\"NamedType\"",
        "\"Name\"",
        "\"String\"",
        "\"HeroName\"",
        "\"NamedType\"",
        "\"Name\"",
        "\"Episode\"",
        "\"Search\"",
        "\"NonNullType\"",
        "\"NamedType\"",
        "\"Name\"",
        "\"String\"",
        "\"Search\"",
        "\"NamedType\"",
        "\"Name\"",
        "\"Character\"",
        "\"CreateReviewForEpisode\"",
        "\"NonNullType\"",
        "\"NamedType\"",
        "\"Name\"",
        "\"Int\""
    ],
    "variables": [
        "schema"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}