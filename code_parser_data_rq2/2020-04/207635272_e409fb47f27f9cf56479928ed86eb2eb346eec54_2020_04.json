{
    "identifiers": [
        "functools",
        "reduce",
        "re",
        "s",
        "i",
        "len",
        "s",
        "s",
        "i",
        "part",
        "c",
        "c",
        "balance",
        "c",
        "balance",
        "c",
        "balance",
        "s",
        "i",
        "part",
        "strip",
        "parts",
        "append",
        "part",
        "len",
        "part",
        "parts",
        "append",
        "part",
        "strip",
        "parts",
        "on_pseudolayer",
        "keycodes_hash",
        "has_counter",
        "value1",
        "value2",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "has_counter",
        "output_buffer",
        "index",
        "index",
        "output_buffer",
        "index",
        "keycodes_hash",
        "on_pseudolayer",
        "index",
        "counter_link",
        "value1",
        "value2",
        "index",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode1",
        "keycode2",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode1",
        "keycode2",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "from_pseudolayer",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "from_pseudolayer",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "keycode",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "to_pseudolayer",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "string_input",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "number_of_strings",
        "output_buffer",
        "index",
        "a",
        "b",
        "number_of_strings",
        "strings",
        "string_input",
        "on_pseudolayer",
        "keycodes_hash",
        "value1",
        "value2",
        "fnc",
        "output_buffer",
        "index",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "value1",
        "value2",
        "fnc",
        "output_buffer",
        "index",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "on_pseudolayer",
        "keycodes_hash",
        "definition",
        "output_buffer",
        "index",
        "len",
        "definition",
        "split",
        "output_buffer",
        "index",
        "output_buffer",
        "output_buffer",
        "i",
        "l",
        "definition",
        "split",
        "i",
        "strip",
        "expand_keycode_fnc",
        "val",
        "output_buffer",
        "code",
        "output_buffer",
        "output_buffer",
        "i",
        "l",
        "definition",
        "split",
        "i",
        "strip",
        "expand_keycode_fnc",
        "val",
        "output_buffer",
        "code",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "i",
        "l",
        "definition",
        "split",
        "i",
        "strip",
        "expand_keycode_fnc",
        "val",
        "output_buffer",
        "code",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "index",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "DEFINITION",
        "output_buffer",
        "index",
        "len",
        "DEFINITION",
        "split",
        "output_buffer",
        "index",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "i",
        "l",
        "DEFINITION",
        "split",
        "i",
        "strip",
        "expand_keycode_fnc",
        "val",
        "output_buffer",
        "i",
        "output_buffer",
        "code",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "i",
        "l",
        "DEFINITION",
        "split",
        "i",
        "strip",
        "expand_keycode_fnc",
        "val",
        "output_buffer",
        "i",
        "output_buffer",
        "code",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "i",
        "l",
        "DEFINITION",
        "split",
        "i",
        "strip",
        "expand_keycode_fnc",
        "val",
        "output_buffer",
        "i",
        "output_buffer",
        "code",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "output_buffer",
        "new_chord",
        "on_pseudolayer",
        "keycodes_hash",
        "index",
        "output_buffer",
        "index",
        "on_pseudolayer",
        "keycodes_hash",
        "DEFINITION",
        "output_buffer",
        "index",
        "DEFINITION",
        "OSK",
        "on_pseudolayer",
        "keycodes_hash",
        "DEFINITION",
        "output_buffer",
        "index",
        "OSL",
        "on_pseudolayer",
        "keycodes_hash",
        "DEFINITION",
        "output_buffer",
        "index",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "DEFINITION",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "DEFINITION",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "DEFINITION",
        "split",
        "split",
        "strip",
        "len",
        "split",
        "LOCK",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "AT",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "CMD",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "LEAD",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "DM_RECORD",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "DM_NEXT",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "DM_END",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "DM_PLAY",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "CLEAR",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "RESET",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "output_buffer",
        "index",
        "expand_keycode_fnc",
        "KC",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "code",
        "output_buffer",
        "index",
        "split",
        "strip",
        "expand_keycode_fnc",
        "val",
        "O",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "code",
        "output_buffer",
        "index",
        "D",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val",
        "output_buffer",
        "index",
        "MK",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val",
        "output_buffer",
        "index",
        "val",
        "split",
        "strip",
        "val",
        "split",
        "strip",
        "val",
        "split",
        "strip",
        "M",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val1",
        "val2",
        "fnc",
        "output_buffer",
        "index",
        "val",
        "split",
        "strip",
        "expand_keycode_fnc",
        "val1",
        "val",
        "split",
        "strip",
        "expand_keycode_fnc",
        "val2",
        "KK",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "code1",
        "code2",
        "output_buffer",
        "index",
        "val",
        "split",
        "strip",
        "expand_keycode_fnc",
        "val1",
        "val",
        "split",
        "strip",
        "KL",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "code1",
        "val2",
        "output_buffer",
        "index",
        "val",
        "split",
        "strip",
        "expand_keycode_fnc",
        "val1",
        "val",
        "split",
        "strip",
        "expand_keycode_fnc",
        "val2",
        "KM",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "code1",
        "code2",
        "output_buffer",
        "index",
        "expand_keycode_fnc",
        "val",
        "AS",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "code",
        "output_buffer",
        "index",
        "val",
        "MO",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val",
        "output_buffer",
        "index",
        "val",
        "split",
        "strip",
        "val",
        "split",
        "strip",
        "MO_alt",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val1",
        "val2",
        "output_buffer",
        "index",
        "DF",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val",
        "output_buffer",
        "index",
        "TO",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val",
        "output_buffer",
        "index",
        "STR",
        "PSEUDOLAYER",
        "KEYCODES_HASH",
        "val",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "DEFINITION",
        "FUNCTION",
        "list_of_leader_combos",
        "append",
        "DEFINITION",
        "FUNCTION",
        "PSEUDOLAYER",
        "INPUT_STRING",
        "TYPE",
        "data",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "data",
        "TYPE",
        "top_level_split",
        "INPUT_STRING",
        "word",
        "chord",
        "separated_string",
        "chord_set",
        "reduce",
        "x",
        "y",
        "x",
        "y",
        "key",
        "key",
        "chord",
        "add_key",
        "PSEUDOLAYER",
        "chord_hash",
        "word",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "PSEUDOLAYER",
        "keycodes",
        "array",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "chord",
        "array",
        "word",
        "key",
        "chord",
        "keycodes",
        "word",
        "hash",
        "key",
        "hash",
        "hash",
        "add_key",
        "PSEUDOLAYER",
        "hash",
        "chord",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "PSEUDOLAYER",
        "ACTION",
        "INPUT_STRING",
        "data",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "top_level_split",
        "INPUT_STRING",
        "word",
        "key",
        "separated_string",
        "data",
        "word",
        "hash",
        "key",
        "hash",
        "hash",
        "add_key",
        "PSEUDOLAYER",
        "hash",
        "ACTION",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings"
    ],
    "literals": [
        "\"\"",
        "'('",
        "')'",
        "','",
        "','",
        "\"\"",
        "\"NULL\"",
        "\"uint8_t state_\"",
        "\" = IDLE;\\n\"",
        "\"uint8_t counter_\"",
        "\" = 0;\\n\"",
        "\"&counter_\"",
        "\"const struct Chord chord_\"",
        "\" PROGMEM = {\"",
        "\", \"",
        "\", &state_\"",
        "\", \"",
        "\", \"",
        "\", \"",
        "\", \"",
        "\"};\\n\"",
        "\"single_dance\"",
        "\"autoshift_dance\"",
        "\"autoshift_toggle\"",
        "\"key_layer_dance\"",
        "\"key_key_dance\"",
        "\"key_mod_dance\"",
        "\"temp_pseudolayer\"",
        "\"temp_pseudolayer_alt\"",
        "\"lock\"",
        "\"perm_pseudolayer\"",
        "\"switch_layer\"",
        "\"one_shot_key\"",
        "\"one_shot_layer\"",
        "\"command\"",
        "\"dynamic_macro_record\"",
        "\"dynamic_macro_next\"",
        "\"dynamic_macro_end\"",
        "\"dynamic_macro_play\"",
        "\"leader\"",
        "\"clear\"",
        "\"reset\"",
        "\"string_in\"",
        "\"`\"",
        "\"GRAVE\"",
        "\"-\"",
        "\"MINUS\"",
        "\"=\"",
        "\"EQUAL\"",
        "\"[\"",
        "\"LBRACKET\"",
        "\"]\"",
        "\"RBRACKET\"",
        "\"\\\\\"",
        "\"BSLASH\"",
        "\";\"",
        "\"SCOLON\"",
        "\"'\"",
        "\"QUOTE\"",
        "\",\"",
        "\"COMMA\"",
        "\".\"",
        "\"DOT\"",
        "\"/\"",
        "\"SLASH\"",
        "\"~\"",
        "\"TILDE\"",
        "\"*\"",
        "\"ASTERISK\"",
        "\"+\"",
        "\"PLUS\"",
        "\"(\"",
        "\"LEFT_PAREN\"",
        "\")\"",
        "\"RIGHT_PAREN\"",
        "\"<\"",
        "\"LEFT_ANGLE_BRACKET\"",
        "\">\"",
        "\"RIGHT_ANGLE_BRACKET\"",
        "\"{\"",
        "\"LEFT_CURLY_BRACE\"",
        "\"}\"",
        "\"RIGHT_CURLY_BRACE\"",
        "\"?\"",
        "\"QUESTION\"",
        "\"~\"",
        "\"TILDE\"",
        "\":\"",
        "\"COLON\"",
        "\"_\"",
        "\"UNDERSCORE\"",
        "'\"'",
        "\"DOUBLE_QUOTE\"",
        "\"@\"",
        "\"AT\"",
        "\"#\"",
        "\"HASH\"",
        "\"$\"",
        "\"DOLLAR\"",
        "\"!\"",
        "\"EXCLAIM\"",
        "\"%\"",
        "\"PERCENT\"",
        "\"^\"",
        "\"CIRCUMFLEX\"",
        "\"&\"",
        "\"AMPERSAND\"",
        "\"|\"",
        "\"PIPE\"",
        "\"A\"",
        "\"a\"",
        "\"B\"",
        "\"b\"",
        "\"C\"",
        "\"c\"",
        "\"D\"",
        "\"d\"",
        "\"E\"",
        "\"e\"",
        "\"F\"",
        "\"f\"",
        "\"G\"",
        "\"g\"",
        "\"H\"",
        "\"h\"",
        "\"I\"",
        "\"i\"",
        "\"J\"",
        "\"j\"",
        "\"K\"",
        "\"k\"",
        "\"L\"",
        "\"l\"",
        "\"M\"",
        "\"m\"",
        "\"N\"",
        "\"n\"",
        "\"O\"",
        "\"o\"",
        "\"P\"",
        "\"p\"",
        "\"Q\"",
        "\"q\"",
        "\"R\"",
        "\"r\"",
        "\"S\"",
        "\"s\"",
        "\"T\"",
        "\"t\"",
        "\"U\"",
        "\"u\"",
        "\"V\"",
        "\"v\"",
        "\"W\"",
        "\"w\"",
        "\"X\"",
        "\"x\"",
        "\"Y\"",
        "\"y\"",
        "\"Z\"",
        "\"z\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "\"6\"",
        "\"7\"",
        "\"8\"",
        "\"9\"",
        "\"0\"",
        "\"F1\"",
        "\"F2\"",
        "\"F3\"",
        "\"F4\"",
        "\"F5\"",
        "\"F6\"",
        "\"F7\"",
        "\"F8\"",
        "\"F9\"",
        "\"F10\"",
        "\"F11\"",
        "\"F12\"",
        "\"F13\"",
        "\"F14\"",
        "\"F15\"",
        "\"F16\"",
        "\"F17\"",
        "\"F18\"",
        "\"F19\"",
        "\"F20\"",
        "\"F21\"",
        "\"F22\"",
        "\"F23\"",
        "\"F24\"",
        "\"ENTER\"",
        "\"ENT\"",
        "\"ESCAPE\"",
        "\"ESC\"",
        "\"BSPACE\"",
        "\"BSPC\"",
        "\"TAB\"",
        "\"SPACE\"",
        "\"SPC\"",
        "\"NONUS_HASH\"",
        "\"NUHS\"",
        "\"NONUS_BSLASH\"",
        "\"NUBS\"",
        "\"COMMA\"",
        "\"COMM\"",
        "\"DOT\"",
        "\"SLASH\"",
        "\"SLSH\"",
        "\"TILDE\"",
        "\"TILD\"",
        "\"EXCLAIM\"",
        "\"EXLM\"",
        "\"AT\"",
        "\"HASH\"",
        "\"DOLLAR\"",
        "\"DLR\"",
        "\"PERCENT\"",
        "\"PERC\"",
        "\"CIRCUMFLEX\"",
        "\"CIRC\"",
        "\"AMPERSAND\"",
        "\"AMPR\"",
        "\"ASTERISK\"",
        "\"ASTR\"",
        "\"LEFT_PAREN\"",
        "\"LPRN\"",
        "\"RIGHT_PAREN\"",
        "\"RPRN\"",
        "\"UNDERSCORE\"",
        "\"UNDS\"",
        "\"PLUS\"",
        "\"LEFT_CURLY_BRACE\"",
        "\"LCBR\"",
        "\"RIGHT_CURLY_BRACE\"",
        "\"RCBR\"",
        "\"PIPE\"",
        "\"COLON\"",
        "\"COLN\"",
        "\"DOUBLE_QUOTE\"",
        "\"DQUO\"",
        "\"DQT\"",
        "\"LEFT_ANGLE_BRACKET\"",
        "\"LABK\"",
        "\"LT\"",
        "\"RIGHT_ANGLE_BRACKET\"",
        "\"RABK\"",
        "\"GT\"",
        "\"QUESTION\"",
        "\"QUES\"",
        "\"SCOLON\"",
        "\"SCLN\"",
        "\"QUOTE\"",
        "\"QUOT\"",
        "\"LBRACKET\"",
        "\"LBRC\"",
        "\"RBRACKET\"",
        "\"RBRC\"",
        "\"BSLASH\"",
        "\"BSLS\"",
        "\"MINUS\"",
        "\"MINS\"",
        "\"EQUAL\"",
        "\"EQL\"",
        "\"GRAVE\"",
        "\"GRV\"",
        "\"ZKHK\"",
        "\"CAPSLOCK\"",
        "\"CLCK\"",
        "\"CAPS\"",
        "\"SCROLLOCK\"",
        "\"SLCK\"",
        "\"BRMD\"",
        "\"NUMLOCK\"",
        "\"NLCK\"",
        "\"LOCKING_CAPS\"",
        "\"LCAP\"",
        "\"LOCKING_NUM\"",
        "\"LNUM\"",
        "\"LOCKING_SCROLL\"",
        "\"LSCR\"",
        "\"LCTRL\"",
        "\"LCTL\"",
        "\"LSHIFT\"",
        "\"LSFT\"",
        "\"LALT\"",
        "\"LGUI\"",
        "\"LCMD\"",
        "\"LWIN\"",
        "\"RCTRL\"",
        "\"RCTL\"",
        "\"RSHIFT\"",
        "\"RSFT\"",
        "\"RALT\"",
        "\"RGUI\"",
        "\"RCMD\"",
        "\"RWIN\"",
        "\"INT1\"",
        "\"RO\"",
        "\"INT2\"",
        "\"KANA\"",
        "\"INT3\"",
        "\"JYEN\"",
        "\"INT4\"",
        "\"HENK\"",
        "\"INT5\"",
        "\"MHEN\"",
        "\"INT6\"",
        "\"INT7\"",
        "\"INT8\"",
        "\"INT9\"",
        "\"LANG1\"",
        "\"HAEN\"",
        "\"LANG2\"",
        "\"HANJ\"",
        "\"LANG3\"",
        "\"LANG4\"",
        "\"LANG5\"",
        "\"LANG6\"",
        "\"LANG7\"",
        "\"LANG8\"",
        "\"LANG9\"",
        "\"PSCREEN\"",
        "\"PSCR\"",
        "\"PAUSE\"",
        "\"PAUS\"",
        "\"BRK\"",
        "\"BRMU\"",
        "\"INSERT\"",
        "\"INS\"",
        "\"HOME\"",
        "\"PGUP\"",
        "\"DELETE\"",
        "\"DEL\"",
        "\"END\"",
        "\"PGDOWN\"",
        "\"PGDN\"",
        "\"RIGHT\"",
        "\"RGHT\"",
        "\"LEFT\"",
        "\"DOWN\"",
        "\"UP\"",
        "\"APPLICATION\"",
        "\"APP\"",
        "\"POWER\"",
        "\"EXECUTE\"",
        "\"EXEC\"",
        "\"HELP\"",
        "\"MENU\"",
        "\"SELECT\"",
        "\"SLCT\"",
        "\"STOP\"",
        "\"AGAIN\"",
        "\"AGIN\"",
        "\"UNDO\"",
        "\"CUT\"",
        "\"COPY\"",
        "\"PASTE\"",
        "\"PSTE\"",
        "\"FIND\"",
        "\"MUTE\"",
        "\"VOLUP\"",
        "\"VOLDOWN\"",
        "\"ALT_ERASE\"",
        "\"ERAS\"",
        "\"SYSREQ\"",
        "\"CANCEL\"",
        "\"CLEAR\"",
        "\"CLR\"",
        "\"PRIOR\"",
        "\"RETURN\"",
        "\"SEPARATOR\"",
        "\"OUT\"",
        "\"OPER\"",
        "\"CLEAR_AGAIN\"",
        "\"CRSEL\"",
        "\"EXSEL\"",
        "\"SYSTEM_POWER\"",
        "\"PWR\"",
        "\"SYSTEM_SLEEP\"",
        "\"SLEP\"",
        "\"SYSTEM_WAKE\"",
        "\"WAKE\"",
        "\"AUDIO_MUTE\"",
        "\"MUTE\"",
        "\"AUDIO_VOL_UP\"",
        "\"VOLU\"",
        "\"AUDIO_VOL_DOWN\"",
        "\"VOLD\"",
        "\"MEDIA_NEXT_TRACK\"",
        "\"MNXT\"",
        "\"MEDIA_PREV_TRACK\"",
        "\"MPRV\"",
        "\"CPRV\"",
        "\"MEDIA_STOP\"",
        "\"MSTP\"",
        "\"MEDIA_PLAY_PAUSE\"",
        "\"MPLY\"",
        "\"MEDIA_SELECT\"",
        "\"MSEL\"",
        "\"MEDIA_EJECT\"",
        "\"EJCT\"",
        "\"MAIL\"",
        "\"CALCULATOR\"",
        "\"CALC\"",
        "\"MY_COMPUTER\"",
        "\"MYCM\"",
        "\"WWW_SEARCH\"",
        "\"WSCH\"",
        "\"WWW_HOME\"",
        "\"WHOM\"",
        "\"WWW_BACK\"",
        "\"WBAK\"",
        "\"WWW_FORWARD\"",
        "\"WFWD\"",
        "\"WWW_STOP\"",
        "\"WSTP\"",
        "\"WWW_REFRESH\"",
        "\"WREF\"",
        "\"WWW_FAVORITES\"",
        "\"WFAV\"",
        "\"MEDIA_FAST_FORWARD\"",
        "\"MFFD\"",
        "\"MEDIA_REWIND\"",
        "\"MRWD\"",
        "\"BRIGHTNESS_UP\"",
        "\"BRIU\"",
        "\"BRIGHTNESS_DOWN\"",
        "\"BRID\"",
        "\"KP_SLASH\"",
        "\"PSLS\"",
        "\"KP_ASTERISK\"",
        "\"PAST\"",
        "\"KP_MINUS\"",
        "\"PMNS\"",
        "\"KP_PLUS\"",
        "\"PPLS\"",
        "\"KP_ENTER\"",
        "\"PENT\"",
        "\"KP_1\"",
        "\"P1\"",
        "\"KP_2\"",
        "\"P2\"",
        "\"KP_3\"",
        "\"P3\"",
        "\"KP_4\"",
        "\"P4\"",
        "\"KP_5\"",
        "\"P5\"",
        "\"KP_6\"",
        "\"P6\"",
        "\"KP_7\"",
        "\"P7\"",
        "\"KP_8\"",
        "\"P8\"",
        "\"KP_9\"",
        "\"P9\"",
        "\"KP_0\"",
        "\"P0\"",
        "\"KP_DOT\"",
        "\"PDOT\"",
        "\"KP_EQUAL\"",
        "\"PEQL\"",
        "\"KP_COMMA\"",
        "\"PCMM\"",
        "\"MS_BTN1\"",
        "\"BTN1\"",
        "\"MS_BTN2\"",
        "\"BTN2\"",
        "\"MS_BTN3\"",
        "\"BTN3\"",
        "\"MS_BTN4\"",
        "\"BTN4\"",
        "\"MS_BTN5\"",
        "\"BTN5\"",
        "\"MS_BTN6\"",
        "\"BTN6\"",
        "\"MS_LEFT\"",
        "\"MS_L\"",
        "\"MS_DOWN\"",
        "\"MS_D\"",
        "\"MS_UP\"",
        "\"MS_U\"",
        "\"MS_RIGHT\"",
        "\"MS_R\"",
        "\"MS_WH_UP\"",
        "\"WH_U\"",
        "\"MS_WH_DOWN\"",
        "\"WH_D\"",
        "\"MS_WH_LEFT\"",
        "\"MS_WH_L\"",
        "\"MS_WH_RIGHT\"",
        "\"MS_WH_R\"",
        "\"KC_MS_ACCEL0\"",
        "\"ACL0\"",
        "\"KC_MS_ACCEL1\"",
        "\"ACL1\"",
        "\"KC_MS_ACCEL2\"",
        "\"ACL2\"",
        "\"KC_\"",
        "', '",
        "\"void function_\"",
        "\"(const struct Chord* self) {\\n\"",
        "\"    switch (*self->state) {\\n\"",
        "\"        case ACTIVATED:\\n\"",
        "','",
        "\"            key_in(\"",
        "\");\\n\"",
        "\"            break;\\n\"",
        "\"        case DEACTIVATED:\\n\"",
        "','",
        "\"            key_out(\"",
        "\");\\n\"",
        "\"            *self->state = IDLE;\\n\"",
        "\"            break;\\n\"",
        "\"        case RESTART:\\n\"",
        "','",
        "\"            key_out(\"",
        "\");\\n\"",
        "\"            break;\\n\"",
        "\"        default:\\n\"",
        "\"            break;\\n\"",
        "\"    };\\n\"",
        "\"}\\n\"",
        "\"function_\"",
        "','",
        "\"void function_\"",
        "\"(const struct Chord* self) {\\n\"",
        "\"    switch (*self->state) {\\n\"",
        "\"        case ACTIVATED:\\n\"",
        "\"            *self->counter = *self->counter + 1;\\n\"",
        "\"            break;\\n\"",
        "\"        case PRESS_FROM_ACTIVE:\\n\"",
        "\"            switch (*self->counter) {\\n\"",
        "','",
        "\"                case \"",
        "\":\\n\"",
        "\"                    key_in( \"",
        "\");\\n\"",
        "\"                    break;\\n\"",
        "\"                default:\\n\"",
        "\"                    break;\\n\"",
        "\"            }\\n\"",
        "\"            *self->state = FINISHED_FROM_ACTIVE;\\n\"",
        "\"            break;\\n\"",
        "\"        case FINISHED:\\n\"",
        "\"            switch (*self->counter) {\\n\"",
        "','",
        "\"                case \"",
        "\":\\n\"",
        "\"                    tap_key( \"",
        "\");\\n\"",
        "\"                    break;\\n\"",
        "\"                default:\\n\"",
        "\"                    break;\\n\"",
        "\"            }\\n\"",
        "\"            *self->counter = 0;\\n\"",
        "\"            *self->state = IDLE;\\n\"",
        "\"            break;\\n\"",
        "\"        case RESTART:\\n\"",
        "\"            switch (*self->counter) {\\n\"",
        "','",
        "\"                case \"",
        "\":\\n\"",
        "\"                    key_out( \"",
        "\");\\n\"",
        "\"                    break;\\n\"",
        "\"                default:\\n\"",
        "\"                    break;\\n\"",
        "\"            }\\n\"",
        "\"            *self->counter = 0;\\n\"",
        "\"            break;\\n\"",
        "\"        default:\\n\"",
        "\"            break;\\n\"",
        "\"    }\\n\"",
        "\"}\\n\"",
        "\"function_\"",
        "\"KC_\"",
        "\"\"",
        "\"(\"",
        "\"LOCK\"",
        "\"AT\"",
        "\"CMD\"",
        "\"LEAD\"",
        "\"DM_RECORD\"",
        "\"DM_NEXT\"",
        "\"DM_END\"",
        "\"DM_PLAY\"",
        "\"CLEAR_KB\"",
        "\"RESET\"",
        "\"O\"",
        "\"D\"",
        "\"MK\"",
        "\"M\"",
        "','",
        "','",
        "','",
        "\"KK\"",
        "','",
        "','",
        "\"KL\"",
        "','",
        "','",
        "\"KM\"",
        "','",
        "','",
        "\"AS\"",
        "\"MO\"",
        "','",
        "','",
        "','",
        "\"DF\"",
        "\"TO\"",
        "\"STR\"",
        "\"chord_sets\"",
        "\"name\"",
        "\"chords\"",
        "\" + \"",
        "\"H_\"",
        "\"\"",
        "\"X\"",
        "\" + H_\"",
        "\"\"",
        "\"\"",
        "\"keys\"",
        "\"X\"",
        "\" + H_\"",
        "\"\""
    ],
    "variables": [
        "strings",
        "number_of_strings",
        "balance",
        "parts",
        "part",
        "c",
        "part",
        "part",
        "counter_link",
        "counter_link",
        "a",
        "b",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "DEFINITION",
        "l",
        "val",
        "code",
        "val",
        "code",
        "val",
        "code",
        "l",
        "val",
        "code",
        "val",
        "code",
        "val",
        "code",
        "split",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "code",
        "output_buffer",
        "index",
        "val",
        "code",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "fnc",
        "val1",
        "val2",
        "output_buffer",
        "index",
        "val1",
        "code1",
        "val2",
        "code2",
        "output_buffer",
        "index",
        "val1",
        "code1",
        "val2",
        "output_buffer",
        "index",
        "val1",
        "code1",
        "val2",
        "code2",
        "output_buffer",
        "index",
        "code",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "val1",
        "val2",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "chord_set",
        "chord_set",
        "separated_string",
        "chord_hash",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "hash",
        "hash",
        "hash",
        "output_buffer",
        "index",
        "number_of_strings",
        "strings",
        "separated_string",
        "hash",
        "hash",
        "hash"
    ],
    "comments": [
        "Parse the string tracking whether the current character is within",
        "parentheses.",
        "Capture last part",
        "if \"= {\" + KEYCODES_HASH + \", \" + PSEUDOLAYER in output_buffer:",
        "KEYCODES_HASH = re.sub('H_', '', KEYCODES_HASH)",
        "raise Exception(\"You are trying to register a chord that you already registered (\" + KEYCODES_HASH + \", \" + PSEUDOLAYER + \")\")"
    ],
    "docstrings": [
        "\"\"\"\n    Split `s` by top-level commas only. Commas within parentheses are ignored.\n    \"\"\""
    ],
    "functions": [
        "top_level_split",
        "new_chord",
        "KC",
        "AS",
        "AT",
        "KL",
        "KK",
        "KM",
        "MO",
        "MO_alt",
        "LOCK",
        "DF",
        "TO",
        "OSK",
        "OSL",
        "CMD",
        "DM_RECORD",
        "DM_NEXT",
        "DM_END",
        "DM_PLAY",
        "LEAD",
        "CLEAR",
        "RESET",
        "STR",
        "M",
        "expand_keycode_fnc",
        "MK",
        "D",
        "O",
        "add_key",
        "add_leader_combo",
        "add_chord_set",
        "add_dictionary",
        "secret_chord"
    ],
    "classes": []
}