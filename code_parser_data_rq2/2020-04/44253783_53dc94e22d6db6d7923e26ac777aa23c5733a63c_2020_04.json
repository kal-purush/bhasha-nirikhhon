{
    "identifiers": [
        "com",
        "adaptris",
        "core",
        "http",
        "oauth",
        "org",
        "apache",
        "commons",
        "lang3",
        "StringUtils",
        "isBlank",
        "javax",
        "validation",
        "constraints",
        "NotBlank",
        "com",
        "adaptris",
        "annotation",
        "AdvancedConfig",
        "com",
        "adaptris",
        "annotation",
        "AffectsMetadata",
        "com",
        "adaptris",
        "annotation",
        "ComponentProfile",
        "com",
        "adaptris",
        "annotation",
        "DisplayOrder",
        "com",
        "adaptris",
        "annotation",
        "InputFieldDefault",
        "com",
        "adaptris",
        "core",
        "AdaptrisMessage",
        "com",
        "adaptris",
        "core",
        "util",
        "Args",
        "com",
        "thoughtworks",
        "xstream",
        "annotations",
        "XStreamAlias",
        "XStreamAlias",
        "ComponentProfile",
        "summary",
        "since",
        "DisplayOrder",
        "order",
        "NotBlank",
        "AffectsMetadata",
        "InputFieldDefault",
        "value",
        "tokenKey",
        "AffectsMetadata",
        "AdvancedConfig",
        "tokenExpiryKey",
        "AffectsMetadata",
        "AdvancedConfig",
        "refreshTokenKey",
        "setTokenKey",
        "Override",
        "token",
        "msg",
        "tokenMetadataValue",
        "format",
        "token",
        "getType",
        "token",
        "getToken",
        "msg",
        "addMessageHeader",
        "getTokenKey",
        "tokenMetadataValue",
        "isBlank",
        "getTokenExpiryKey",
        "isBlank",
        "token",
        "getExpiry",
        "msg",
        "addMessageHeader",
        "getTokenExpiryKey",
        "token",
        "getExpiry",
        "isBlank",
        "getRefreshTokenKey",
        "isBlank",
        "token",
        "getRefreshToken",
        "msg",
        "addMessageHeader",
        "getRefreshTokenKey",
        "token",
        "getRefreshToken",
        "b",
        "setTokenKey",
        "b",
        "tokenKey",
        "key",
        "tokenKey",
        "Args",
        "notBlank",
        "key",
        "b",
        "setTokenExpiryKey",
        "b",
        "tokenExpiryKey",
        "key",
        "tokenExpiryKey",
        "key",
        "refreshMetadataKey",
        "setRefreshTokenKey",
        "refreshMetadataKey",
        "refreshTokenKey",
        "key",
        "refreshTokenKey",
        "key"
    ],
    "literals": [
        "\"oauth-access-token-to-metadata\"",
        "\"Write the OAUTH token to metadata\"",
        "\"3.10.1\"",
        "\"tokenKey\"",
        "\"tokenExpiryKey\"",
        "\"refreshTokenKey\"",
        "\"Authorization\"",
        "\"Authorization\"",
        "\"%s %s\"",
        "\"tokenMetadataKey\""
    ],
    "variables": [
        "tokenKey",
        "tokenExpiryKey",
        "refreshTokenKey"
    ],
    "comments": [],
    "docstrings": [
        "* Write the token to metadata.\n * \n * @config oauth-access-token-to-metadata",
        "* Set the metadata to store the token against.\n   * \n   * @param key the key.",
        "* Set the metadata key for storing the expiry.\n   * <p>\n   * In some cases, there is no expiry date for a token, in which case, the metadata key will never be set even if configured.\n   * Depending on how you have configured your expiry token, this might be an absolute ISO8601 date, or relative time in seconds.\n   * </p>\n   * \n   * @param key key.",
        "* Set the metadata key for storing the refresh token.\n   * <p>\n   * In some cases, there is no refresh token, in which case, the metadata key will never be set even if configured.\n   * </p>\n   * \n   * @param key key."
    ],
    "functions": [
        "MetadataAccessTokenWriter",
        "apply",
        "MetadataAccessTokenWriter",
        "withTokenKey",
        "getTokenKey",
        "setTokenKey",
        "MetadataAccessTokenWriter",
        "withTokenExpiryKey",
        "getTokenExpiryKey",
        "setTokenExpiryKey",
        "MetadataAccessTokenWriter",
        "withRefreshTokenKey",
        "getRefreshTokenKey",
        "setRefreshTokenKey"
    ],
    "classes": [
        "MetadataAccessTokenWriter"
    ]
}