{
    "identifiers": [
        "KubernetesObject",
        "fs",
        "tmp",
        "CommandOption",
        "CommandText",
        "CliChannel",
        "ClusterType",
        "KubernetesConsole",
        "Oc",
        "Oc",
        "resourceType",
        "CliChannel",
        "Oc",
        "resourceType",
        "result",
        "resourceType",
        "resourceName",
        "CliChannel",
        "Oc",
        "resourceType",
        "resourceName",
        "result",
        "CliChannel",
        "Oc",
        "result",
        "resourceType",
        "resourceName",
        "CliChannel",
        "Oc",
        "resourceType",
        "resourceName",
        "spec",
        "spec",
        "resolve",
        "reject",
        "tmp",
        "err",
        "name",
        "err",
        "reject",
        "err",
        "resolve",
        "name",
        "fs",
        "tempJsonFile",
        "jsonString",
        "CliChannel",
        "CommandText",
        "CommandOption",
        "tempJsonFile",
        "fs",
        "tempJsonFile",
        "file",
        "CliChannel",
        "CommandText",
        "CommandOption",
        "file",
        "CliChannel",
        "CommandText",
        "result",
        "CliChannel",
        "CommandText",
        "result",
        "CliChannel",
        "CommandText",
        "result",
        "componentName",
        "CliChannel",
        "CommandText",
        "CommandOption",
        "componentName",
        "CliChannel",
        "CommandText",
        "getUrlObj",
        "ClusterType",
        "consoleUrl",
        "ignore",
        "CliChannel",
        "CommandText",
        "serverUrl",
        "ClusterType",
        "consoleUrl",
        "clusterURL",
        "username",
        "password",
        "CliChannel",
        "CommandText",
        "clusterURL",
        "CommandOption",
        "username",
        "CommandOption",
        "password",
        "CommandOption",
        "result",
        "result",
        "clusterURL",
        "token",
        "CliChannel",
        "CommandText",
        "clusterURL",
        "CommandOption",
        "token",
        "CommandOption",
        "result",
        "result",
        "CliChannel",
        "CommandText",
        "contextName",
        "CliChannel",
        "CommandText",
        "contextName",
        "contextName",
        "CliChannel",
        "CommandText",
        "contextName",
        "username",
        "CliChannel",
        "CommandText",
        "username",
        "cluster",
        "CliChannel",
        "CommandText",
        "cluster",
        "CliChannel",
        "CommandText",
        "result",
        "e",
        "resourceType",
        "resourceType",
        "CommandOption",
        "args",
        "CommandOption",
        "CommandText",
        "resourceType",
        "args",
        "resourceType",
        "resourceName",
        "resourceType",
        "CommandOption",
        "args",
        "CommandOption",
        "CommandText",
        "resourceType",
        "resourceName",
        "args",
        "resourceType",
        "resourceName",
        "resourceType",
        "resourceName",
        "args",
        "CommandOption",
        "CommandText",
        "resourceType",
        "resourceName",
        "args"
    ],
    "literals": [
        "'@kubernetes/client-node/dist/types'",
        "'fs/promises'",
        "'tmp'",
        "'../base/command'",
        "'../cli'",
        "'./types'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "'all'",
        "string",
        "string",
        "string",
        "string",
        "'.json'",
        "'oc'",
        "'create'",
        "'-f'",
        "string",
        "'oc'",
        "'create'",
        "'-f'",
        "string",
        "'oc'",
        "'whoami'",
        "string",
        "'oc'",
        "'whoami -t'",
        "'oc'",
        "'auth can-i create pod'",
        "'yes'",
        "string",
        "'oc'",
        "'delete deployment'",
        "'-l'",
        "component='${componentName}'",
        "'oc'",
        "'get configmaps console-public -n openshift-config-managed -o json'",
        "'oc'",
        "'whoami --show-server'",
        "${serverUrl.stdout}/console",
        "string",
        "string",
        "string",
        "'oc'",
        "login ${clusterURL}",
        "'-u'",
        "'-p'",
        "'--insecure-skip-tls-verify'",
        "string",
        "string",
        "'oc'",
        "login ${clusterURL}",
        "'--token'",
        "'--insecure-skip-tls-verify'",
        "'oc'",
        "'logout'",
        "string",
        "'oc'",
        "config use-context ${contextName}",
        "string",
        "'oc'",
        "config delete-context ${contextName}",
        "string",
        "'oc'",
        "config delete-user ${username}",
        "string",
        "'oc'",
        "config delete-cluster ${cluster}",
        "'oc api-resources | grep openshift'",
        "string",
        "string",
        "'Must pass the resource type to get'",
        "'-o'",
        "'json'",
        "'--namespace'",
        "'oc'",
        "get ${resourceType}",
        "string",
        "string",
        "string",
        "'Must pass the resource type to get'",
        "'-o'",
        "'json'",
        "'--namespace'",
        "'oc'",
        "get ${resourceType} ${resourceName}",
        "string",
        "string",
        "string",
        "'Must pass the resource type and resource name'",
        "'--namespace'",
        "'oc'",
        "delete ${resourceType} ${resourceName}"
    ],
    "variables": [
        "result",
        "result",
        "result",
        "jsonString",
        "tempJsonFile",
        "result",
        "result",
        "result",
        "getUrlObj",
        "consoleUrl",
        "serverUrl",
        "consoleUrl",
        "result",
        "result",
        "result",
        "args",
        "args",
        "args"
    ],
    "comments": [
        "-----------------------------------------------------------------------------------------------\n *  Copyright (c) Red Hat, Inc. All rights reserved.\n *  Licensed under the MIT License. See LICENSE file in the project root for license information.\n *-----------------------------------------------------------------------------------------------",
        "call oc create -f path/to/file until odo does support creating services without component",
        "ignore",
        "only works on OpenShift",
        "probably no"
    ],
    "docstrings": [
        "* A wrapper around the `oc` CLI tool.\n *\n * This class is a stateless singleton.\n * This makes it easier to stub its methods than if it were a bunch of directly exported functions.",
        "* Returns a list of all resources of the given type in the given namespace.\n     *\n     * If no namespace is supplied, the current namespace is used.\n     *\n     * @param resourceType the type of resource to get a list of\n     * @param namespace the namespace to list the resources of (defaults to the current namespace if none is provided)\n     * @returns a list of all resources of the given type in the given namespace",
        "* Returns the Kubernetes resource with the given name and type in the given namespace.\n     *\n     * If no namespace is supplied, the current namespace is used.\n     *\n     * @param resourceType the type of resource to get\n     * @param resourceType the name of the resource to get\n     * @param namespace the namespace to list the resources of (defaults to the current namespace if none is provided)\n     * @returns the Kubernetes resource with the given name and type in the given namespace",
        "* Delete the given Kubernetes resource\n     *\n     * @param resourceType the type of the Kubernetes resource to delete\n     * @param resourceName the name of the Kubernetes resource to delete\n     * @param namespace the namespace that the Kubernetes resource to delete is in. If not provided, the current namespace will be used",
        "* Create a Kubernetes object from the given spec.\n     *\n     * @param spec the spec of the kubernetes object to create",
        "* Create a Kubernetes object from the given file.\n     *\n     * @param file the file containing the spec of the kubernetes object to create",
        "* Returns the username of the current user.\n     *\n     * @returns the username of the current user",
        "* Returns the token for the current user.\n     *\n     * @returns the token for the current user\n     * @throws if no user is logged in",
        "* Returns true if the current user is authorized to create a pod in the current namespace on the cluster, and false otherwise.\n     *\n     * @returns true if the current user is authorized to create a pod in the current namespace on the cluster, and false otherwise",
        "* Deletes all deployments in the current namespace that have a label \"component\" with a value `componentName`.\n     *\n     * @param componentName the value of the component label to match",
        "* Returns the url and type of the console for the current cluster.\n     *\n     * @returns the url and type of the console for the current cluster",
        "* Log into the given OpenShift cluster using the given username and password.\n     *\n     * @param clusterURL the URL of the cluster to log in to\n     * @param username the username to use when logging in\n     * @param password the password to use when logging in",
        "* Log into the given OpenShift cluster using the provided token.\n     *\n     * @param clusterURL the URL of the cluster to log in to\n     * @param token the token to use to log in to the cluster",
        "* Log out of the current OpenShift cluster.\n     *\n     * @throws if you are not currently logged into an OpenShift cluster",
        "* Switches the current Kubernetes context to the given named context.\n     *\n     * @param contextName the name of the context to switch to",
        "* Deletes the given Kubernetes context from the kube config.\n     *\n     * @param contextName the name of the context to delete",
        "* Deletes the given user from the kube config.\n     *\n     * @param username the user to delete",
        "* Deletes the given cluster from the kube config.\n     *\n     * @param cluster the name of the cluster to delete",
        "* Returns true if the current cluster is an OpenShift cluster, and false otherwise\n     *\n     * @returns true if the current cluster is an OpenShift cluster, and false otherwise",
        "* Returns the oc command to list all resources of the given type in the given (or current) namespace\n     *\n     * @param resourceType the resource type to get\n     * @param namespace the namespace from which to get all the stateful sets\n     * @returns the oc command to list all resources of the given type in the given (or current) namespace"
    ],
    "functions": [
        "Instance",
        "getKubernetesObjects",
        "getKubernetesObject",
        "getAllKubernetesObjects",
        "deleteKubernetesObject",
        "createKubernetesObjectFromSpec",
        "createKubernetesObjectFromFile",
        "getCurrentUser",
        "getCurrentUserToken",
        "canCreatePod",
        "deleteDeploymentByComponentLabel",
        "getConsoleInfo",
        "loginWithUsernamePassword",
        "loginWithToken",
        "logout",
        "setContext",
        "deleteContext",
        "deleteUser",
        "deleteCluster",
        "isOpenShiftCluster",
        "getKubernetesObjectCommand",
        "getSingleKubernetesObjectCommand",
        "deleteKubernetesObjectCommand"
    ],
    "classes": [
        "Oc"
    ]
}