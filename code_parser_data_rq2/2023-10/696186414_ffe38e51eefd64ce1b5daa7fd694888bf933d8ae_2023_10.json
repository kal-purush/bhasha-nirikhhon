{
    "identifiers": [
        "require",
        "RED",
        "config",
        "RED",
        "config",
        "RED",
        "config",
        "config",
        "msg",
        "msg",
        "msg",
        "Buffer",
        "authHeader",
        "axios",
        "ticketId",
        "ticketData",
        "axiosConfig",
        "response",
        "node",
        "response",
        "error",
        "error",
        "node",
        "error",
        "error",
        "node",
        "error",
        "node",
        "error",
        "msg",
        "node",
        "msg",
        "RED",
        "FreshdeskUpdateTicketByIDNode"
    ],
    "literals": [
        "'axios'",
        "Basic ${Buffer.from(this.apiKey + ':X').toString('base64')}",
        "':X'",
        "'base64'",
        "'Authorization'",
        "'Content-Type'",
        "'application/json'",
        "https://${this.domain}.freshdesk.com/api/v2/tickets/${ticketId}",
        "'Failed to update ticket: '",
        "' '",
        "'Response data: '",
        "'Failed to update ticket: '",
        "'input'",
        "'freshdesk-update-ticket-by-id'"
    ],
    "variables": [
        "axios",
        "node",
        "ticketData",
        "ticketId",
        "authHeader",
        "axiosConfig"
    ],
    "comments": [
        "Retrieve configuration values from node",
        "Define the function to call the Freshdesk API directly",
        "Access the data in the msg object",
        "Set up the Axios request with Basic Authentication header and config",
        "Make a POST request to create a contact in Freshdesk",
        "Send the response to the next node",
        "Handle errors here and log the response",
        "Handle incoming messages",
        "Call the function to create a ticket when a message is received"
    ],
    "docstrings": [],
    "functions": [
        "FreshdeskUpdateTicketByIDNode"
    ],
    "classes": []
}