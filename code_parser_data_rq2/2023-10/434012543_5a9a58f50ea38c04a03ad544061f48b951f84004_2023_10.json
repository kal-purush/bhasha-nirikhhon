{
    "identifiers": [
        "factory",
        "exports",
        "factory",
        "define",
        "define",
        "define",
        "factory",
        "globalThis",
        "globalThis",
        "factory",
        "mode",
        "DrawContext",
        "on",
        "selector",
        "fn",
        "handlers",
        "handlers",
        "selector",
        "fn",
        "render",
        "id",
        "DrawContext",
        "id",
        "eventName",
        "handlers",
        "eventName",
        "handles",
        "iHandle",
        "handles",
        "iHandle",
        "handle",
        "handle",
        "ctx",
        "skipRender",
        "DrawContext",
        "DrawContext",
        "mode",
        "ctx",
        "mode",
        "stop",
        "mode",
        "mode",
        "trash",
        "mode",
        "mode",
        "DrawContext",
        "combineFeatures",
        "mode",
        "mode",
        "uncombineFeatures",
        "mode",
        "mode",
        "drag",
        "click",
        "mousemove",
        "mousedown",
        "mouseup",
        "mouseout",
        "keydown",
        "keyup",
        "touchstart",
        "touchmove",
        "touchend",
        "tap",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "n",
        "n",
        "n",
        "n",
        "f",
        "a",
        "a",
        "args",
        "args",
        "arguments",
        "f",
        "args",
        "Ctor",
        "f",
        "arguments",
        "a",
        "f",
        "a",
        "a",
        "n",
        "k",
        "n",
        "k",
        "a",
        "k",
        "d",
        "d",
        "n",
        "k",
        "a",
        "wgs84$1",
        "wgs84$1",
        "wgs84$1",
        "geojsonArea",
        "geometry",
        "geojsonArea",
        "ringArea",
        "_",
        "_",
        "polygonArea",
        "_",
        "i",
        "i",
        "_",
        "i",
        "area",
        "polygonArea",
        "_",
        "i",
        "area",
        "i",
        "i",
        "_",
        "i",
        "area",
        "geometry",
        "_",
        "i",
        "area",
        "coords",
        "coords",
        "coords",
        "area",
        "ringArea",
        "coords",
        "i",
        "coords",
        "i",
        "area",
        "ringArea",
        "coords",
        "i",
        "area",
        "coords",
        "coords",
        "coordsLength",
        "i",
        "i",
        "coordsLength",
        "i",
        "i",
        "coordsLength",
        "lowerIndex",
        "coordsLength",
        "middleIndex",
        "coordsLength",
        "upperIndex",
        "i",
        "coordsLength",
        "lowerIndex",
        "coordsLength",
        "middleIndex",
        "upperIndex",
        "lowerIndex",
        "i",
        "middleIndex",
        "i",
        "upperIndex",
        "i",
        "p1",
        "coords",
        "lowerIndex",
        "p2",
        "coords",
        "middleIndex",
        "p3",
        "coords",
        "upperIndex",
        "area",
        "rad",
        "p3",
        "rad",
        "p1",
        "rad",
        "p2",
        "area",
        "area",
        "wgs84",
        "wgs84",
        "area",
        "_",
        "_",
        "classes",
        "sources",
        "cursors",
        "types$1",
        "geojsonTypes",
        "modes$1",
        "events$1",
        "updateActions",
        "meta",
        "activeStates",
        "interactions",
        "LAT_MIN$1",
        "LAT_RENDERED_MIN$1",
        "LAT_MAX$1",
        "LAT_RENDERED_MAX$1",
        "LNG_MIN$1",
        "LNG_MAX$1",
        "a",
        "b",
        "FEATURE_SORT_RANKS",
        "a",
        "FEATURE_SORT_RANKS",
        "b",
        "score",
        "a",
        "geojsonTypes",
        "a",
        "b",
        "score",
        "features",
        "features",
        "feature",
        "feature",
        "geojsonTypes",
        "feature",
        "geojsonArea",
        "geojsonTypes",
        "feature",
        "feature",
        "comparator",
        "feature",
        "feature",
        "feature",
        "mapEvent",
        "buffer",
        "buffer",
        "buffer",
        "mapEvent",
        "buffer",
        "mapEvent",
        "buffer",
        "mapEvent",
        "buffer",
        "mapEvent",
        "buffer",
        "items",
        "items",
        "items",
        "items",
        "items",
        "i",
        "l",
        "i",
        "items",
        "i",
        "items",
        "i",
        "items",
        "i",
        "items",
        "i",
        "i",
        "items",
        "i",
        "i",
        "StringSet",
        "x",
        "x",
        "x",
        "x",
        "x",
        "StringSet",
        "x",
        "x",
        "x",
        "x",
        "StringSet",
        "x",
        "x",
        "x",
        "x",
        "x",
        "StringSet",
        "k",
        "values",
        "k",
        "this$1$1",
        "k",
        "k",
        "values",
        "k",
        "this$1$1",
        "k",
        "values",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "StringSet",
        "meta",
        "meta",
        "meta",
        "featuresAtClick",
        "featuresAtTouch",
        "bbox",
        "ctx",
        "featuresAt$1",
        "bbox",
        "ctx",
        "ctx",
        "bbox",
        "ctx",
        "featuresAt$1",
        "bbox",
        "ctx",
        "ctx",
        "bbox",
        "ctx",
        "buffer",
        "ctx",
        "mapEventToBoundingBox",
        "buffer",
        "bbox",
        "ctx",
        "queryParams",
        "ctx",
        "s",
        "s",
        "id",
        "ctx",
        "id",
        "ctx",
        "box",
        "queryParams",
        "feature",
        "META_TYPES",
        "feature",
        "StringSet",
        "features",
        "feature",
        "feature",
        "featureIds",
        "featureId",
        "featureIds",
        "featureId",
        "uniqueFeatures",
        "feature",
        "sortFeatures",
        "uniqueFeatures",
        "ctx",
        "featuresAt",
        "ctx",
        "cursors",
        "features",
        "classes",
        "features",
        "activeStates",
        "cursors",
        "cursors",
        "classes",
        "features",
        "ctx",
        "classes",
        "cursors",
        "ctx",
        "classes",
        "ctx",
        "features",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "x",
        "x",
        "y",
        "y",
        "start",
        "end",
        "options",
        "options",
        "options",
        "options",
        "options",
        "FINE_TOLERANCE",
        "options",
        "options",
        "GROSS_TOLERANCE",
        "options",
        "options",
        "INTERVAL",
        "options",
        "options",
        "FINE_INTERVAL",
        "start",
        "start",
        "end",
        "start",
        "start",
        "end",
        "euclideanDistance",
        "start",
        "end",
        "moveDistance",
        "fineTolerance",
        "end",
        "start",
        "fineInterval",
        "moveDistance",
        "grossTolerance",
        "end",
        "start",
        "interval",
        "start",
        "end",
        "options",
        "options",
        "options",
        "options",
        "options",
        "TAP_TOLERANCE",
        "options",
        "options",
        "TAP_INTERVAL",
        "start",
        "start",
        "end",
        "start",
        "start",
        "end",
        "euclideanDistance",
        "start",
        "end",
        "moveDistance",
        "tolerance",
        "end",
        "start",
        "interval",
        "hat$2",
        "bits",
        "bits",
        "bits",
        "bits",
        "bits",
        "digits",
        "Infinity",
        "i",
        "digits",
        "bits",
        "i",
        "i",
        "digits",
        "digits",
        "i",
        "digits",
        "i",
        "res",
        "x",
        "res",
        "rem",
        "rem",
        "b",
        "res",
        "x",
        "res",
        "parseInt",
        "res",
        "parsed",
        "Infinity",
        "parsed",
        "bits",
        "hat",
        "bits",
        "res",
        "hat",
        "bits",
        "expandBy",
        "data",
        "iters",
        "expandBy",
        "bits",
        "expandBy",
        "hat",
        "bits",
        "hats",
        "id",
        "hats",
        "id",
        "data",
        "id",
        "fn",
        "fn",
        "id",
        "fn",
        "id",
        "fn",
        "id",
        "value",
        "fn",
        "id",
        "value",
        "fn",
        "fn",
        "bits",
        "fn",
        "fn",
        "hat$2",
        "getDefaultExportFromCjs",
        "hatExports",
        "ctx",
        "geojson",
        "ctx",
        "geojson",
        "geojson",
        "geojson",
        "hat$1",
        "geojson",
        "Feature",
        "Feature",
        "coords",
        "coords",
        "Feature",
        "coords",
        "coords",
        "Feature",
        "Feature",
        "property",
        "value",
        "property",
        "value",
        "Feature",
        "geojsonTypes",
        "Feature",
        "mode",
        "meta",
        "activeStates",
        "mode",
        "name",
        "properties",
        "name",
        "name",
        "geojsonTypes",
        "properties",
        "ctx",
        "geojson",
        "Feature",
        "ctx",
        "geojson",
        "Point$2",
        "Feature",
        "Point$2",
        "Point$2",
        "pathOrLng",
        "lngOrLat",
        "lat",
        "arguments",
        "lngOrLat",
        "lat",
        "pathOrLng",
        "lngOrLat",
        "Point$2",
        "ctx",
        "geojson",
        "Feature",
        "ctx",
        "geojson",
        "LineString",
        "Feature",
        "LineString",
        "LineString",
        "path",
        "lng",
        "lat",
        "parseInt",
        "path",
        "id",
        "lng",
        "lat",
        "LineString",
        "path",
        "parseInt",
        "path",
        "id",
        "LineString",
        "path",
        "parseInt",
        "path",
        "LineString",
        "path",
        "lng",
        "lat",
        "parseInt",
        "path",
        "id",
        "lng",
        "lat",
        "ctx",
        "geojson",
        "Feature",
        "ctx",
        "geojson",
        "ring",
        "ring",
        "Polygon",
        "Feature",
        "Polygon",
        "ring",
        "ring",
        "Polygon",
        "coords",
        "coords",
        "ring",
        "ring",
        "Polygon",
        "coords",
        "coords",
        "Polygon",
        "path",
        "lng",
        "lat",
        "path",
        "x",
        "parseInt",
        "x",
        "ids",
        "ring",
        "ids",
        "lng",
        "lat",
        "Polygon",
        "path",
        "path",
        "x",
        "parseInt",
        "x",
        "ids",
        "ring",
        "ring",
        "ids",
        "ring",
        "ids",
        "Polygon",
        "path",
        "path",
        "x",
        "parseInt",
        "x",
        "ids",
        "ring",
        "ids",
        "Polygon",
        "coords",
        "coords",
        "coords",
        "Polygon",
        "path",
        "lng",
        "lat",
        "path",
        "parseInt",
        "parts",
        "parseInt",
        "parts",
        "ringId",
        "ringId",
        "ringId",
        "coordId",
        "lng",
        "lat",
        "Point$2",
        "LineString",
        "Polygon",
        "features",
        "action",
        "path",
        "lng",
        "lat",
        "path",
        "parseInt",
        "parts",
        "parts",
        "parts",
        "features",
        "idx",
        "action",
        "tail",
        "lng",
        "lat",
        "ctx",
        "geojson",
        "Feature",
        "ctx",
        "geojson",
        "models",
        "geojson",
        "geojson",
        "geojson",
        "MultiFeature",
        "Feature",
        "MultiFeature",
        "coordinates",
        "coordinates",
        "coords",
        "Model",
        "this$1$1",
        "hat$1",
        "geojsonTypes",
        "coords",
        "this$1$1",
        "MultiFeature",
        "f",
        "f",
        "MultiFeature",
        "coords",
        "coords",
        "MultiFeature",
        "path",
        "takeAction",
        "path",
        "MultiFeature",
        "f",
        "f",
        "geojsonTypes",
        "f",
        "f",
        "MultiFeature",
        "path",
        "lng",
        "lat",
        "takeAction",
        "path",
        "lng",
        "lat",
        "MultiFeature",
        "path",
        "lng",
        "lat",
        "takeAction",
        "path",
        "lng",
        "lat",
        "MultiFeature",
        "path",
        "takeAction",
        "path",
        "MultiFeature",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ModeInterface",
        "features",
        "features",
        "ModeInterface",
        "coords",
        "coords",
        "coords",
        "m",
        "c",
        "m",
        "c",
        "m",
        "c",
        "this$1$1",
        "c",
        "m",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "id",
        "id",
        "ModeInterface",
        "id",
        "id",
        "ModeInterface",
        "id",
        "id",
        "ModeInterface",
        "id",
        "id",
        "ModeInterface",
        "id",
        "opts",
        "opts",
        "opts",
        "id",
        "opts",
        "ModeInterface",
        "feature",
        "feature",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "actions",
        "actions",
        "actions",
        "actions",
        "actions",
        "actions",
        "newSet",
        "ModeInterface",
        "mode",
        "opts",
        "eventOpts",
        "opts",
        "opts",
        "eventOpts",
        "eventOpts",
        "mode",
        "opts",
        "eventOpts",
        "ModeInterface",
        "opts",
        "opts",
        "ModeInterface",
        "name",
        "name",
        "ModeInterface",
        "bbox",
        "bufferType",
        "bufferType",
        "bufferType",
        "bufferType",
        "bufferType",
        "featuresAt",
        "bufferType",
        "bbox",
        "ModeInterface",
        "geojson",
        "geojson",
        "geojsonTypes",
        "Point$2",
        "geojson",
        "geojsonTypes",
        "LineString",
        "geojson",
        "geojsonTypes",
        "Polygon",
        "geojson",
        "MultiFeature",
        "geojson",
        "ModeInterface",
        "feature",
        "geojsonTypes",
        "feature",
        "Point$2",
        "geojsonTypes",
        "feature",
        "LineString",
        "geojsonTypes",
        "feature",
        "Polygon",
        "feature",
        "MultiFeature",
        "ModeInterface",
        "id",
        "id",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "ModeInterface",
        "eventMapper",
        "modeObject",
        "modeObject",
        "ctx",
        "startOpts",
        "startOpts",
        "startOpts",
        "modeObjectKeys",
        "m",
        "k",
        "m",
        "k",
        "modeObject",
        "k",
        "m",
        "ModeInterface",
        "ctx",
        "eh",
        "e",
        "mode",
        "eh",
        "state",
        "e",
        "start",
        "state",
        "mode",
        "startOpts",
        "eventKeys",
        "key",
        "eventMapper",
        "key",
        "modeObject",
        "modeHandler",
        "selector",
        "this$1$1",
        "key",
        "selector",
        "wrapper",
        "modeHandler",
        "stop",
        "mode",
        "state",
        "trash",
        "mode",
        "state",
        "combineFeatures",
        "mode",
        "state",
        "uncombineFeatures",
        "mode",
        "state",
        "render",
        "geojson",
        "push",
        "mode",
        "state",
        "geojson",
        "push",
        "ctx",
        "ctx",
        "m",
        "k",
        "m",
        "k",
        "objectToMode",
        "ctx",
        "k",
        "m",
        "events",
        "isDrag",
        "isDrag",
        "ctx",
        "cursors",
        "currentMode",
        "events",
        "events",
        "endInfo",
        "isClick",
        "mouseDownInfo",
        "endInfo",
        "events",
        "events",
        "endInfo",
        "isTap",
        "touchStartInfo",
        "endInfo",
        "events",
        "button",
        "events",
        "getFeatureAtAndSetCursors",
        "ctx",
        "target",
        "currentMode",
        "events",
        "mouseDownInfo",
        "getFeatureAtAndSetCursors",
        "ctx",
        "target",
        "currentMode",
        "events",
        "getFeatureAtAndSetCursors",
        "ctx",
        "target",
        "isClick",
        "mouseDownInfo",
        "currentMode",
        "currentMode",
        "events",
        "currentMode",
        "events",
        "ctx",
        "touchStartInfo",
        "featuresAt",
        "ctx",
        "target",
        "currentMode",
        "events",
        "ctx",
        "currentMode",
        "events",
        "events",
        "ctx",
        "featuresAt",
        "ctx",
        "target",
        "isTap",
        "touchStartInfo",
        "currentMode",
        "currentMode",
        "code",
        "code",
        "code",
        "code",
        "code",
        "events",
        "isMapElement",
        "ctx",
        "currentMode",
        "isKeyModeValid",
        "currentMode",
        "ctx",
        "changeMode",
        "modes$1",
        "ctx",
        "changeMode",
        "modes$1",
        "ctx",
        "changeMode",
        "modes$1",
        "events",
        "isKeyModeValid",
        "currentMode",
        "events",
        "ctx",
        "events",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "options",
        "style",
        "style",
        "hasLayers",
        "setup",
        "store",
        "store",
        "modename",
        "nextModeOptions",
        "eventOptions",
        "eventOptions",
        "eventOptions",
        "currentMode",
        "modes",
        "modename",
        "modebuilder",
        "modename",
        "currentModeName",
        "modename",
        "modebuilder",
        "ctx",
        "nextModeOptions",
        "currentMode",
        "ModeHandler",
        "mode",
        "ctx",
        "eventOptions",
        "ctx",
        "events$1",
        "modename",
        "ctx",
        "ctx",
        "actions",
        "actions",
        "action",
        "actionState",
        "action",
        "actionState",
        "action",
        "actions",
        "action",
        "changed",
        "actionState",
        "action",
        "actions",
        "action",
        "changed",
        "ctx",
        "events$1",
        "actionState",
        "start",
        "currentModeName",
        "ctx",
        "currentMode",
        "ModeHandler",
        "modes",
        "currentModeName",
        "ctx",
        "ctx",
        "changeMode",
        "actionable",
        "currentModeName$1",
        "currentModeName",
        "currentModeRender",
        "geojson",
        "push",
        "currentMode",
        "geojson",
        "push",
        "fire",
        "name",
        "events",
        "name",
        "events",
        "name",
        "addEventListeners",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "ctx",
        "events",
        "ctx",
        "events",
        "removeEventListeners",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "events",
        "ctx",
        "ctx",
        "events",
        "ctx",
        "events",
        "trash",
        "options",
        "currentMode",
        "options",
        "combineFeatures",
        "currentMode",
        "uncombineFeatures",
        "currentMode",
        "getMode",
        "currentModeName",
        "api",
        "x",
        "x",
        "y",
        "y",
        "store",
        "store",
        "sources",
        "mapExists",
        "cleanup",
        "store",
        "store",
        "mode",
        "store",
        "newColdIds",
        "store",
        "newHotIds",
        "store",
        "id",
        "store",
        "id",
        "newColdIds",
        "store",
        "geojson",
        "geojson",
        "newHotIds",
        "geojson",
        "store",
        "geojson",
        "geojson",
        "geojson",
        "store",
        "store",
        "store",
        "store",
        "store",
        "geojson",
        "geojson",
        "geojson",
        "newHotIds",
        "id",
        "lastColdCount",
        "store",
        "newColdIds",
        "newHotIds",
        "id",
        "renderFeature",
        "id",
        "newColdIds",
        "id",
        "renderFeature",
        "id",
        "id",
        "source",
        "store",
        "id",
        "feature",
        "mode",
        "store",
        "featureInternal",
        "geojson",
        "store",
        "source",
        "geojson",
        "coldChanged",
        "store",
        "sources",
        "geojsonTypes",
        "store",
        "store",
        "sources",
        "geojsonTypes",
        "store",
        "store",
        "store",
        "events$1",
        "store",
        "feature",
        "feature",
        "store",
        "coordinate",
        "geojsonTypes",
        "geojsonTypes",
        "coordinate",
        "store",
        "store",
        "store",
        "feature",
        "feature",
        "store",
        "store",
        "events$1",
        "geojsonToEmit",
        "cleanup",
        "store",
        "events$1",
        "store",
        "store",
        "ctx",
        "StringSet",
        "StringSet",
        "StringSet",
        "ctx",
        "renderRequest",
        "renderRequest",
        "requestAnimationFrame",
        "renderRequest",
        "render",
        "this$1$1",
        "Store",
        "numRenders",
        "this$1$1",
        "holdRender",
        "numRenders",
        "this$1$1",
        "Store",
        "Store",
        "featureId",
        "featureId",
        "Store",
        "Store",
        "Store",
        "Store",
        "feature",
        "feature",
        "feature",
        "feature",
        "feature",
        "Store",
        "featureIds",
        "options",
        "options",
        "options",
        "toDenseArray",
        "featureIds",
        "id",
        "this$1$1",
        "id",
        "this$1$1",
        "id",
        "this$1$1",
        "id",
        "options",
        "this$1$1",
        "this$1$1",
        "id",
        "this$1$1",
        "this$1$1",
        "id",
        "this$1$1",
        "id",
        "this$1$1",
        "refreshSelectedCoordinates",
        "options",
        "Store",
        "id",
        "id",
        "Store",
        "id",
        "this$1$1",
        "id",
        "Store",
        "featureIds",
        "options",
        "options",
        "options",
        "toDenseArray",
        "featureIds",
        "id",
        "this$1$1",
        "id",
        "this$1$1",
        "id",
        "this$1$1",
        "id",
        "options",
        "this$1$1",
        "Store",
        "featureIds",
        "options",
        "options",
        "options",
        "toDenseArray",
        "featureIds",
        "id",
        "this$1$1",
        "id",
        "this$1$1",
        "id",
        "this$1$1",
        "id",
        "options",
        "this$1$1",
        "refreshSelectedCoordinates",
        "options",
        "Store",
        "options",
        "options",
        "options",
        "options",
        "Store",
        "featureIds",
        "options",
        "options",
        "options",
        "featureIds",
        "toDenseArray",
        "featureIds",
        "id",
        "featureIds",
        "id",
        "options",
        "featureIds",
        "id",
        "this$1$1",
        "id",
        "options",
        "Store",
        "coordinates",
        "coordinates",
        "Store",
        "Store",
        "Store",
        "id",
        "this$1$1",
        "id",
        "Store",
        "coordinate",
        "this$1$1",
        "coordinate",
        "feature",
        "coordinate",
        "selected",
        "Store",
        "featureId",
        "featureId",
        "Store",
        "featureId",
        "property",
        "value",
        "featureId",
        "property",
        "value",
        "featureId",
        "store",
        "options",
        "store",
        "point",
        "store",
        "point",
        "store",
        "newSelectedCoordinates",
        "options",
        "store",
        "store",
        "newSelectedCoordinates",
        "Store",
        "interactions",
        "interaction",
        "this$1$1",
        "interaction",
        "interactionSet",
        "this$1$1",
        "interaction",
        "this$1$1",
        "interaction",
        "Store",
        "key",
        "this$1$1",
        "key",
        "value",
        "this$1$1",
        "key",
        "this$1$1",
        "key",
        "Store",
        "interaction",
        "interaction",
        "interaction",
        "i",
        "arguments",
        "i",
        "arguments$1",
        "i",
        "key",
        "source",
        "hasOwnProperty$1",
        "source",
        "key",
        "target",
        "key",
        "source",
        "key",
        "target",
        "getDefaultExportFromCjs",
        "immutable",
        "ctx",
        "queueMapClasses",
        "updateMapClasses",
        "options",
        "nextMapClasses",
        "xtend",
        "nextMapClasses",
        "options",
        "ctx",
        "classTypes",
        "nextMapClasses",
        "currentMapClasses",
        "classesToRemove",
        "currentMapClasses",
        "nextMapClasses",
        "classesToAdd",
        "nextMapClasses",
        "classesToRemove",
        "ctx",
        "classesToRemove",
        "classesToAdd",
        "ref$1",
        "ctx",
        "ref$1",
        "classesToAdd",
        "currentMapClasses",
        "xtend",
        "currentMapClasses",
        "nextMapClasses",
        "id",
        "options",
        "options",
        "options",
        "button",
        "classes",
        "options",
        "button",
        "options",
        "options",
        "button",
        "button",
        "e",
        "e",
        "e",
        "e",
        "clickedButton",
        "activeButton",
        "deactivateButtons",
        "options",
        "setActiveButton",
        "id",
        "options",
        "button",
        "activeButton",
        "activeButton",
        "classes",
        "activeButton",
        "id",
        "deactivateButtons",
        "buttonElements",
        "id",
        "button",
        "button",
        "id",
        "button",
        "classes",
        "activeButton",
        "button",
        "ctx",
        "controlGroup",
        "classes",
        "classes",
        "controls",
        "controlGroup",
        "controls",
        "types$1",
        "buttonElements",
        "types$1",
        "createControlButton",
        "types$1",
        "controlGroup",
        "classes",
        "ctx",
        "ctx",
        "modes$1",
        "ctx",
        "controls",
        "types$1",
        "buttonElements",
        "types$1",
        "createControlButton",
        "types$1",
        "controlGroup",
        "classes",
        "ctx",
        "ctx",
        "modes$1",
        "ctx",
        "controls",
        "types$1",
        "buttonElements",
        "types$1",
        "createControlButton",
        "types$1",
        "controlGroup",
        "classes",
        "ctx",
        "ctx",
        "modes$1",
        "ctx",
        "controls",
        "buttonElements",
        "createControlButton",
        "controlGroup",
        "classes",
        "ctx",
        "controls",
        "buttonElements",
        "createControlButton",
        "controlGroup",
        "classes",
        "ctx",
        "controls",
        "buttonElements",
        "createControlButton",
        "controlGroup",
        "classes",
        "ctx",
        "controlGroup",
        "buttonElements",
        "buttonId",
        "buttonElements",
        "buttonId",
        "button",
        "button",
        "button",
        "buttonElements",
        "buttonId",
        "setActiveButton",
        "queueMapClasses",
        "updateMapClasses",
        "clearMapClasses",
        "addButtons",
        "removeButtons",
        "ctx",
        "onRemove",
        "ctx",
        "setup",
        "clearInterval",
        "mapLoadedInterval",
        "setup",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "controlContainer",
        "controlContainer",
        "controlContainer",
        "controlContainer",
        "controlContainer",
        "connect",
        "ctx",
        "setup",
        "clearInterval",
        "mapLoadedInterval",
        "setup",
        "ctx",
        "ctx",
        "onAdd",
        "_fire",
        "arguments",
        "args",
        "xtend",
        "_fire",
        "args",
        "ctx",
        "ctx",
        "events",
        "ctx",
        "ctx",
        "ui",
        "ctx",
        "ctx",
        "ctx",
        "Store",
        "ctx",
        "controlContainer",
        "ctx",
        "ctx",
        "ctx",
        "setup",
        "setup",
        "mapLoadedInterval",
        "setInterval",
        "setup",
        "ctx",
        "controlContainer",
        "addLayers",
        "ctx",
        "sources",
        "geojsonTypes",
        "ctx",
        "sources",
        "geojsonTypes",
        "ctx",
        "style",
        "ctx",
        "style",
        "ctx",
        "ctx",
        "removeLayers",
        "ctx",
        "style",
        "ctx",
        "style",
        "ctx",
        "style",
        "ctx",
        "sources",
        "ctx",
        "sources",
        "ctx",
        "sources",
        "ctx",
        "sources",
        "ctx",
        "setup",
        "setup",
        "e",
        "e",
        "featureTarget",
        "featureTarget",
        "featureTarget",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "activeStates",
        "e",
        "meta",
        "e",
        "e",
        "e",
        "e",
        "activeStates",
        "e",
        "meta",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "meta",
        "e",
        "e",
        "featureTarget",
        "featureTarget",
        "featureTarget",
        "meta",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "isOfMetaType",
        "isShiftMousedown",
        "isActiveFeature",
        "isInactiveFeature",
        "noTarget",
        "isFeature",
        "isVertex$1",
        "isShiftDown",
        "isEscapeKey",
        "isEnterKey",
        "isTrue",
        "x",
        "y",
        "x",
        "y",
        "Point",
        "Point",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "k",
        "k",
        "k",
        "k",
        "a",
        "a",
        "a",
        "p",
        "a",
        "p",
        "m",
        "m",
        "other",
        "other",
        "other",
        "p",
        "p",
        "p",
        "p",
        "p",
        "dx",
        "dx",
        "dy",
        "dy",
        "b",
        "b",
        "b",
        "b",
        "b",
        "b",
        "x",
        "y",
        "y",
        "x",
        "x",
        "y",
        "m",
        "m",
        "m",
        "m",
        "m",
        "x",
        "y",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "k",
        "k",
        "k",
        "k",
        "k",
        "k",
        "p",
        "p",
        "p",
        "p",
        "p",
        "p",
        "y",
        "angle",
        "angle",
        "angle",
        "cos",
        "sin",
        "sin",
        "cos",
        "x",
        "y",
        "angle",
        "p",
        "angle",
        "angle",
        "p",
        "cos",
        "p",
        "sin",
        "p",
        "p",
        "sin",
        "p",
        "cos",
        "p",
        "x",
        "y",
        "Point",
        "a",
        "a",
        "Point",
        "a",
        "a",
        "Point",
        "a",
        "a",
        "a",
        "getDefaultExportFromCjs",
        "pointGeometry",
        "mouseEvent",
        "container",
        "container",
        "Point$1",
        "mouseEvent",
        "rect",
        "container",
        "mouseEvent",
        "rect",
        "container",
        "parentId",
        "coordinates",
        "path",
        "selected",
        "geojsonTypes",
        "meta",
        "parentId",
        "path",
        "selected",
        "activeStates",
        "activeStates",
        "geojsonTypes",
        "coordinates",
        "parent",
        "startVertex",
        "endVertex",
        "startVertex",
        "endVertex",
        "startCoord",
        "LAT_RENDERED_MAX$1",
        "startCoord",
        "LAT_RENDERED_MIN$1",
        "endCoord",
        "LAT_RENDERED_MAX$1",
        "endCoord",
        "LAT_RENDERED_MIN$1",
        "startCoord",
        "endCoord",
        "startCoord",
        "endCoord",
        "geojsonTypes",
        "meta",
        "parent",
        "mid",
        "mid",
        "endVertex",
        "geojsonTypes",
        "mid",
        "mid",
        "geojson",
        "options",
        "basePath",
        "options",
        "options",
        "basePath",
        "basePath",
        "geojson",
        "geojson",
        "geojson",
        "geojsonTypes",
        "supplementaryPoints",
        "createVertex",
        "featureId",
        "coordinates",
        "basePath",
        "isSelectedPath",
        "basePath",
        "geojsonTypes",
        "coordinates",
        "line",
        "lineIndex",
        "processLine",
        "line",
        "basePath",
        "basePath",
        "lineIndex",
        "lineIndex",
        "geojsonTypes",
        "processLine",
        "coordinates",
        "basePath",
        "geojsonTypes",
        "processMultiGeometry",
        "line",
        "lineBasePath",
        "line",
        "point",
        "pointIndex",
        "lineBasePath",
        "lineBasePath",
        "lineBasePath",
        "pointIndex",
        "pointIndex",
        "createVertex",
        "featureId",
        "point",
        "pointPath",
        "isSelectedPath",
        "pointPath",
        "options",
        "lastVertex",
        "createMidpoint",
        "featureId",
        "lastVertex",
        "vertex",
        "midpoint",
        "supplementaryPoints",
        "midpoint",
        "lastVertex",
        "vertex",
        "point",
        "firstPointString",
        "stringifiedPoint",
        "supplementaryPoints",
        "vertex",
        "pointIndex",
        "firstPointString",
        "stringifiedPoint",
        "path",
        "options",
        "options",
        "path",
        "geojsonTypes",
        "coordinates",
        "subCoordinates",
        "index",
        "geojsonTypes",
        "geojson",
        "subType",
        "subCoordinates",
        "supplementaryPoints",
        "supplementaryPoints",
        "createSupplementaryPoints",
        "subFeature",
        "options",
        "index",
        "supplementaryPoints",
        "enable",
        "ctx",
        "setTimeout",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "disable",
        "ctx",
        "setTimeout",
        "ctx",
        "ctx",
        "ctx",
        "gj",
        "gj",
        "gj",
        "types",
        "gj",
        "gj",
        "gj",
        "gj",
        "getDefaultExportFromCjs",
        "geojsonNormalize$1",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "r",
        "t",
        "e",
        "r",
        "t",
        "t",
        "e",
        "t",
        "e",
        "t",
        "e",
        "t",
        "r",
        "t",
        "r",
        "t",
        "t",
        "e",
        "e",
        "t",
        "e",
        "e",
        "t",
        "e",
        "e",
        "t",
        "e",
        "e",
        "t",
        "e",
        "t",
        "t",
        "e",
        "getAugmentedNamespace",
        "index_es",
        "flatten",
        "_flatten",
        "acc",
        "item",
        "item",
        "item",
        "acc",
        "_flatten",
        "item",
        "acc",
        "item",
        "acc",
        "geojsonFlatten",
        "geojsonFlatten",
        "geojsonFlatten",
        "_",
        "_",
        "geojsonFlatten",
        "geojsonNormalize",
        "_",
        "normalized",
        "feature",
        "feature",
        "coordinates",
        "coordinates",
        "flatten",
        "feature",
        "coordinates",
        "traverse$2",
        "obj",
        "Traverse",
        "obj",
        "obj",
        "obj",
        "Traverse",
        "ps",
        "i",
        "ps",
        "i",
        "ps",
        "i",
        "node",
        "hasOwnProperty",
        "node",
        "key",
        "node",
        "node",
        "node",
        "key",
        "node",
        "Traverse",
        "ps",
        "i",
        "ps",
        "i",
        "ps",
        "i",
        "node",
        "hasOwnProperty",
        "node",
        "key",
        "node",
        "node",
        "key",
        "Traverse",
        "ps",
        "value",
        "i",
        "ps",
        "i",
        "ps",
        "i",
        "hasOwnProperty",
        "node",
        "key",
        "node",
        "key",
        "node",
        "node",
        "key",
        "node",
        "ps",
        "i",
        "value",
        "value",
        "Traverse",
        "cb",
        "walk",
        "cb",
        "Traverse",
        "cb",
        "walk",
        "cb",
        "Traverse",
        "cb",
        "init",
        "arguments",
        "skip",
        "init",
        "x",
        "skip",
        "acc",
        "cb",
        "acc",
        "x",
        "acc",
        "Traverse",
        "x",
        "acc",
        "acc",
        "Traverse",
        "x",
        "acc",
        "acc",
        "Traverse",
        "clone",
        "src",
        "i",
        "parents",
        "i",
        "parents",
        "i",
        "src",
        "nodes",
        "i",
        "src",
        "src",
        "copy",
        "src",
        "parents",
        "src",
        "nodes",
        "dst",
        "forEach",
        "objectKeys",
        "src",
        "key",
        "dst",
        "key",
        "clone",
        "src",
        "key",
        "parents",
        "nodes",
        "dst",
        "src",
        "root",
        "cb",
        "immutable",
        "walker",
        "node_",
        "immutable",
        "copy",
        "node_",
        "node_",
        "node",
        "node_",
        "path",
        "parents",
        "parents",
        "parents",
        "path",
        "path",
        "path",
        "x",
        "stopHere",
        "state",
        "state",
        "state",
        "x",
        "state",
        "x",
        "stopHere",
        "keepGoing",
        "stopHere",
        "state",
        "state",
        "stopHere",
        "keepGoing",
        "stopHere",
        "isArray",
        "state",
        "state",
        "state",
        "state",
        "state",
        "stopHere",
        "keepGoing",
        "f",
        "modifiers",
        "f",
        "f",
        "modifiers",
        "f",
        "f",
        "modifiers",
        "f",
        "f",
        "modifiers",
        "f",
        "alive",
        "keepGoing",
        "alive",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "objectKeys",
        "state",
        "state",
        "state",
        "i",
        "parents",
        "i",
        "parents",
        "i",
        "node_",
        "state",
        "parents",
        "i",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "updateState",
        "cb",
        "state",
        "state",
        "ret",
        "state",
        "state",
        "ret",
        "modifiers",
        "modifiers",
        "state",
        "state",
        "keepGoing",
        "state",
        "state",
        "state",
        "state",
        "parents",
        "state",
        "updateState",
        "forEach",
        "state",
        "key",
        "i",
        "path",
        "key",
        "modifiers",
        "modifiers",
        "state",
        "state",
        "key",
        "key",
        "walker",
        "state",
        "key",
        "immutable",
        "hasOwnProperty",
        "state",
        "key",
        "state",
        "key",
        "child",
        "child",
        "i",
        "state",
        "child",
        "i",
        "modifiers",
        "modifiers",
        "state",
        "child",
        "path",
        "parents",
        "modifiers",
        "modifiers",
        "state",
        "state",
        "state",
        "root",
        "src",
        "src",
        "src",
        "isArray",
        "src",
        "dst",
        "isDate",
        "src",
        "dst",
        "src",
        "src",
        "src",
        "isRegExp",
        "src",
        "dst",
        "src",
        "isError",
        "src",
        "dst",
        "src",
        "isBoolean",
        "src",
        "dst",
        "src",
        "isNumber",
        "src",
        "dst",
        "src",
        "isString",
        "src",
        "dst",
        "src",
        "dst",
        "src",
        "src",
        "dst",
        "src",
        "src",
        "src",
        "T",
        "proto",
        "dst",
        "T",
        "forEach",
        "objectKeys",
        "src",
        "key",
        "dst",
        "key",
        "src",
        "key",
        "dst",
        "src",
        "keys",
        "obj",
        "key",
        "obj",
        "res",
        "key",
        "res",
        "obj",
        "obj",
        "obj",
        "toS",
        "obj",
        "obj",
        "toS",
        "obj",
        "obj",
        "toS",
        "obj",
        "obj",
        "toS",
        "obj",
        "obj",
        "toS",
        "obj",
        "obj",
        "toS",
        "obj",
        "isArray",
        "xs",
        "xs",
        "xs",
        "fn",
        "xs",
        "xs",
        "fn",
        "i",
        "xs",
        "i",
        "fn",
        "xs",
        "i",
        "i",
        "xs",
        "forEach",
        "objectKeys",
        "Traverse",
        "key",
        "traverse$1",
        "key",
        "obj",
        "arguments",
        "Traverse",
        "obj",
        "t",
        "key",
        "t",
        "args",
        "obj",
        "key",
        "key",
        "obj",
        "traverse$2",
        "bbox",
        "Extent",
        "Extent",
        "bbox",
        "bbox",
        "Infinity",
        "Infinity",
        "Infinity",
        "Infinity",
        "bbox",
        "Extent",
        "ll",
        "ll",
        "ll",
        "ll",
        "ll",
        "Extent",
        "_",
        "_",
        "Extent",
        "other",
        "_",
        "other",
        "_",
        "other",
        "other",
        "other",
        "other",
        "Extent",
        "_",
        "Extent",
        "_",
        "_",
        "Extent",
        "other",
        "_",
        "other",
        "_",
        "other",
        "other",
        "other",
        "other",
        "Extent",
        "Extent",
        "ll",
        "ll",
        "ll",
        "ll",
        "lon",
        "lat",
        "lon",
        "lat",
        "Extent",
        "_",
        "_",
        "Extent",
        "other",
        "_",
        "other",
        "_",
        "other",
        "other",
        "other",
        "other",
        "Extent",
        "body",
        "Extent",
        "geojsonTypesByDataAttributes",
        "geojsonExtent",
        "_",
        "getExtent",
        "_",
        "geojsonExtent",
        "_",
        "getExtent",
        "_",
        "geojsonExtent",
        "_",
        "traverse",
        "_",
        "value",
        "value",
        "dataAttributes",
        "attribute",
        "value",
        "attribute",
        "geojsonTypesByDataAttributes",
        "attribute",
        "value",
        "isValid",
        "value",
        "getExtent",
        "value",
        "value",
        "_",
        "extent",
        "geojsonCoords",
        "_",
        "i",
        "coords",
        "i",
        "ext",
        "coords",
        "i",
        "ext",
        "geojsonExtent",
        "getDefaultExportFromCjs",
        "geojsonExtentExports",
        "geojsonFeatures",
        "delta",
        "geojsonFeatures",
        "feature",
        "extent$1",
        "feature",
        "bounds",
        "bounds",
        "bounds",
        "bounds",
        "featureSouthEdge",
        "northInnerEdge",
        "northInnerEdge",
        "featureSouthEdge",
        "featureNorthEdge",
        "southInnerEdge",
        "southInnerEdge",
        "featureNorthEdge",
        "featureNorthEdge",
        "northOuterEdge",
        "northOuterEdge",
        "featureNorthEdge",
        "featureSouthEdge",
        "southOuterEdge",
        "southOuterEdge",
        "featureSouthEdge",
        "featureWestEdge",
        "westEdge",
        "westEdge",
        "featureWestEdge",
        "featureEastEdge",
        "eastEdge",
        "eastEdge",
        "featureEastEdge",
        "northInnerEdge",
        "constrainedDelta",
        "LAT_RENDERED_MAX",
        "constrainedDelta",
        "LAT_RENDERED_MAX",
        "northInnerEdge",
        "northOuterEdge",
        "constrainedDelta",
        "LAT_MAX",
        "constrainedDelta",
        "LAT_MAX",
        "northOuterEdge",
        "southInnerEdge",
        "constrainedDelta",
        "LAT_RENDERED_MIN",
        "constrainedDelta",
        "LAT_RENDERED_MIN",
        "southInnerEdge",
        "southOuterEdge",
        "constrainedDelta",
        "LAT_MIN",
        "constrainedDelta",
        "LAT_MIN",
        "southOuterEdge",
        "westEdge",
        "constrainedDelta",
        "LNG_MIN",
        "constrainedDelta",
        "constrainedDelta",
        "eastEdge",
        "constrainedDelta",
        "LNG_MAX",
        "constrainedDelta",
        "constrainedDelta",
        "constrainedDelta",
        "features",
        "delta",
        "constrainFeatureMovement",
        "features",
        "feature",
        "feature",
        "delta",
        "features",
        "feature",
        "feature",
        "coord",
        "coord",
        "constrainedDelta",
        "coord",
        "constrainedDelta",
        "point",
        "point",
        "ring",
        "ring",
        "coord",
        "moveCoordinate",
        "coord",
        "multi",
        "multi",
        "ring",
        "moveRing",
        "ring",
        "feature",
        "geojsonTypes",
        "nextCoordinates",
        "moveCoordinate",
        "currentCoordinates",
        "feature",
        "geojsonTypes",
        "feature",
        "geojsonTypes",
        "nextCoordinates",
        "currentCoordinates",
        "moveCoordinate",
        "feature",
        "geojsonTypes",
        "feature",
        "geojsonTypes",
        "nextCoordinates",
        "currentCoordinates",
        "moveRing",
        "feature",
        "geojsonTypes",
        "nextCoordinates",
        "currentCoordinates",
        "moveMultiPolygon",
        "feature",
        "nextCoordinates",
        "SimpleSelect",
        "opts",
        "opts",
        "state",
        "id",
        "this$1$1",
        "id",
        "state",
        "SimpleSelect",
        "events$1",
        "updateActions",
        "f",
        "f",
        "SimpleSelect",
        "selectedFeatures",
        "feature",
        "this$1$1",
        "feature",
        "selectedFeatures",
        "combineFeatures",
        "selectedFeatures",
        "selectedFeatures",
        "feature",
        "feature",
        "featureType",
        "combineFeatures",
        "multiFeatures",
        "selectedFeatures",
        "combineFeatures",
        "uncombineFeatures",
        "trash",
        "SimpleSelect",
        "allFeatures",
        "allFeatures",
        "allFeatures",
        "s",
        "s",
        "id",
        "id",
        "memo",
        "id",
        "memo",
        "id",
        "memo",
        "StringSet",
        "ids",
        "SimpleSelect",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "state",
        "SimpleSelect",
        "doubleClickZoom",
        "SimpleSelect",
        "state",
        "e",
        "isFeature",
        "e",
        "isFeature$1",
        "state",
        "state",
        "SimpleSelect",
        "state",
        "state",
        "SimpleSelect",
        "SimpleSelect",
        "state",
        "e",
        "noTarget",
        "e",
        "state",
        "e",
        "isOfMetaType",
        "meta",
        "e",
        "state",
        "e",
        "isFeature",
        "e",
        "state",
        "e",
        "SimpleSelect",
        "state",
        "wasSelected",
        "wasSelected",
        "id",
        "this$1$1",
        "id",
        "doubleClickZoom",
        "state",
        "SimpleSelect",
        "state",
        "e",
        "modes$1",
        "e",
        "e",
        "e",
        "cursors",
        "SimpleSelect",
        "state",
        "e",
        "state",
        "e",
        "state",
        "state",
        "e",
        "SimpleSelect",
        "state",
        "e",
        "doubleClickZoom",
        "state",
        "isShiftDown",
        "e",
        "e",
        "featureId",
        "isShiftClick",
        "isFeatureSelected",
        "featureId",
        "geojsonTypes",
        "modes$1",
        "featureId",
        "isFeatureSelected",
        "isShiftClick",
        "featureId",
        "cursors",
        "selectedFeatureIds",
        "doubleClickZoom",
        "isFeatureSelected",
        "isShiftClick",
        "featureId",
        "cursors",
        "isFeatureSelected",
        "isShiftClick",
        "selectedFeatureIds",
        "id",
        "this$1$1",
        "id",
        "featureId",
        "cursors",
        "featureId",
        "SimpleSelect",
        "state",
        "e",
        "isActiveFeature",
        "e",
        "state",
        "e",
        "isShiftMousedown",
        "e",
        "state",
        "e",
        "SimpleSelect",
        "state",
        "e",
        "state",
        "state",
        "mouseEventPoint",
        "e",
        "state",
        "SimpleSelect",
        "state",
        "e",
        "isActiveFeature",
        "e",
        "state",
        "e",
        "SimpleSelect",
        "state",
        "e",
        "state",
        "state",
        "e",
        "state",
        "state",
        "e",
        "SimpleSelect",
        "state",
        "e",
        "state",
        "cursors",
        "state",
        "state",
        "state",
        "classes",
        "state",
        "mouseEventPoint",
        "e",
        "state",
        "current",
        "state",
        "current",
        "state",
        "current",
        "state",
        "current",
        "minX",
        "minY",
        "state",
        "translateValue",
        "state",
        "translateValue",
        "state",
        "maxX",
        "minX",
        "state",
        "maxY",
        "minY",
        "SimpleSelect",
        "state",
        "e",
        "state",
        "e",
        "e",
        "state",
        "e",
        "state",
        "moveFeatures",
        "delta",
        "state",
        "e",
        "SimpleSelect",
        "SimpleSelect",
        "state",
        "e",
        "state",
        "state",
        "state",
        "mouseEventPoint",
        "e",
        "bbox",
        "featuresInBox",
        "id",
        "this$1$1",
        "id",
        "idsToSelect",
        "idsToSelect",
        "idsToSelect",
        "id",
        "this$1$1",
        "id",
        "cursors",
        "state",
        "SimpleSelect",
        "state",
        "geojson",
        "display",
        "geojson",
        "geojson",
        "activeStates",
        "activeStates",
        "display",
        "geojson",
        "geojson",
        "activeStates",
        "geojson",
        "geojsonTypes",
        "createSupplementaryPoints",
        "geojson",
        "display",
        "SimpleSelect",
        "SimpleSelect",
        "selectedFeatures",
        "selectedFeatures",
        "selectedFeatures",
        "i",
        "selectedFeatures",
        "i",
        "selectedFeatures",
        "i",
        "feature",
        "featureType",
        "feature",
        "feature",
        "subcoords",
        "coordinates",
        "subcoords",
        "coordinates",
        "feature",
        "featuresCombined",
        "feature",
        "featuresCombined",
        "geojsonTypes",
        "featuresCombined",
        "featureType",
        "coordinates",
        "multiFeature",
        "multiFeature",
        "events$1",
        "multiFeature",
        "featuresCombined",
        "SimpleSelect",
        "selectedFeatures",
        "i",
        "selectedFeatures",
        "i",
        "this$1$1",
        "feature",
        "feature",
        "subFeature",
        "this$1$1",
        "subFeature",
        "subFeature",
        "feature",
        "createdFeatures",
        "subFeature",
        "this$1$1",
        "subFeature",
        "this$1$1",
        "feature",
        "featuresUncombined",
        "feature",
        "i",
        "selectedFeatures",
        "i",
        "loop",
        "i",
        "createdFeatures",
        "events$1",
        "createdFeatures",
        "featuresUncombined",
        "isOfMetaType",
        "meta",
        "isOfMetaType",
        "meta",
        "DirectSelect",
        "events$1",
        "updateActions",
        "f",
        "f",
        "DirectSelect",
        "state",
        "state",
        "DirectSelect",
        "state",
        "e",
        "state",
        "state",
        "e",
        "DirectSelect",
        "state",
        "state",
        "state",
        "state",
        "DirectSelect",
        "state",
        "e",
        "state",
        "e",
        "e",
        "state",
        "about",
        "isShiftDown",
        "e",
        "selectedIndex",
        "state",
        "about",
        "isShiftDown",
        "e",
        "selectedIndex",
        "state",
        "about",
        "state",
        "state",
        "selectedCoordinates",
        "DirectSelect",
        "state",
        "e",
        "state",
        "e",
        "e",
        "state",
        "about",
        "about",
        "about",
        "state",
        "about",
        "DirectSelect",
        "featureId",
        "paths",
        "paths",
        "coord_path",
        "featureId",
        "coord_path",
        "DirectSelect",
        "state",
        "e",
        "state",
        "state",
        "e",
        "state",
        "DirectSelect",
        "state",
        "e",
        "delta",
        "moveFeatures",
        "delta",
        "state",
        "e",
        "DirectSelect",
        "state",
        "e",
        "delta",
        "state",
        "coord_path",
        "state",
        "coord_path",
        "selectedCoords",
        "coords",
        "geojsonTypes",
        "geojsonTypes",
        "coords",
        "constrainFeatureMovement",
        "selectedCoordPoints",
        "delta",
        "i",
        "selectedCoords",
        "i",
        "selectedCoords",
        "i",
        "state",
        "state",
        "i",
        "coord",
        "constrainedDelta",
        "coord",
        "constrainedDelta",
        "DirectSelect",
        "modes$1",
        "DirectSelect",
        "modes$1",
        "DirectSelect",
        "state",
        "state",
        "state",
        "DirectSelect",
        "opts",
        "opts",
        "featureId",
        "feature",
        "feature",
        "geojsonTypes",
        "featureId",
        "feature",
        "opts",
        "opts",
        "opts",
        "featureId",
        "state",
        "featureId",
        "doubleClickZoom",
        "state",
        "DirectSelect",
        "doubleClickZoom",
        "DirectSelect",
        "state",
        "geojson",
        "push",
        "state",
        "geojson",
        "geojson",
        "activeStates",
        "push",
        "geojson",
        "createSupplementaryPoints",
        "geojson",
        "state",
        "push",
        "geojson",
        "activeStates",
        "push",
        "geojson",
        "state",
        "DirectSelect",
        "state",
        "state",
        "a",
        "b",
        "b",
        "a",
        "id",
        "state",
        "id",
        "state",
        "state",
        "state",
        "state",
        "modes$1",
        "DirectSelect",
        "state",
        "e",
        "isActiveFeature",
        "e",
        "isVertex",
        "e",
        "isMidpoint",
        "e",
        "state",
        "isFeature",
        "noCoords",
        "cursors",
        "onVertex",
        "noCoords",
        "cursors",
        "cursors",
        "onVertex",
        "isFeature",
        "isMidPoint",
        "isDraggableItem",
        "state",
        "state",
        "DirectSelect",
        "state",
        "state",
        "DirectSelect",
        "DirectSelect",
        "state",
        "e",
        "isVertex",
        "e",
        "state",
        "e",
        "isActiveFeature",
        "e",
        "state",
        "e",
        "isMidpoint",
        "e",
        "state",
        "e",
        "DirectSelect",
        "state",
        "e",
        "state",
        "state",
        "e",
        "e",
        "state",
        "e",
        "state",
        "state",
        "state",
        "e",
        "delta",
        "state",
        "e",
        "delta",
        "state",
        "e",
        "DirectSelect",
        "state",
        "e",
        "noTarget",
        "e",
        "state",
        "e",
        "isActiveFeature",
        "e",
        "state",
        "e",
        "isInactiveFeature",
        "e",
        "state",
        "e",
        "state",
        "DirectSelect",
        "state",
        "e",
        "noTarget",
        "e",
        "state",
        "e",
        "isActiveFeature",
        "e",
        "state",
        "e",
        "isInactiveFeature",
        "e",
        "state",
        "e",
        "DirectSelect",
        "DirectSelect",
        "state",
        "state",
        "state",
        "DrawPoint",
        "geojsonTypes",
        "geojsonTypes",
        "point",
        "cursors",
        "types$1",
        "point",
        "DrawPoint",
        "state",
        "state",
        "modes$1",
        "DrawPoint",
        "DrawPoint",
        "state",
        "e",
        "cursors",
        "state",
        "e",
        "e",
        "events$1",
        "state",
        "modes$1",
        "state",
        "DrawPoint",
        "state",
        "state",
        "state",
        "DrawPoint",
        "state",
        "geojson",
        "display",
        "geojson",
        "state",
        "geojson",
        "isActivePoint",
        "activeStates",
        "activeStates",
        "isActivePoint",
        "display",
        "geojson",
        "DrawPoint",
        "DrawPoint",
        "DrawPoint",
        "state",
        "e",
        "isEscapeKey",
        "e",
        "isEnterKey",
        "e",
        "state",
        "e",
        "coordinates",
        "coordinates",
        "coordinates",
        "DrawPolygon",
        "geojsonTypes",
        "geojsonTypes",
        "polygon",
        "doubleClickZoom",
        "cursors",
        "types$1",
        "polygon",
        "DrawPolygon",
        "state",
        "e",
        "state",
        "isEventAtCoordinates",
        "e",
        "state",
        "state",
        "modes$1",
        "state",
        "cursors",
        "state",
        "state",
        "e",
        "e",
        "state",
        "state",
        "state",
        "e",
        "e",
        "DrawPolygon",
        "state",
        "modes$1",
        "state",
        "DrawPolygon",
        "state",
        "e",
        "state",
        "state",
        "e",
        "e",
        "isVertex$1",
        "e",
        "cursors",
        "DrawPolygon",
        "DrawPolygon",
        "state",
        "e",
        "isVertex$1",
        "e",
        "state",
        "e",
        "state",
        "e",
        "DrawPolygon",
        "state",
        "e",
        "isEscapeKey",
        "e",
        "state",
        "modes$1",
        "isEnterKey",
        "e",
        "modes$1",
        "state",
        "DrawPolygon",
        "state",
        "cursors",
        "doubleClickZoom",
        "state",
        "state",
        "state",
        "state",
        "events$1",
        "state",
        "state",
        "modes$1",
        "DrawPolygon",
        "state",
        "geojson",
        "display",
        "geojson",
        "state",
        "geojson",
        "isActivePolygon",
        "activeStates",
        "activeStates",
        "isActivePolygon",
        "display",
        "geojson",
        "geojson",
        "geojson",
        "coordinateCount",
        "geojson",
        "meta",
        "display",
        "createVertex",
        "state",
        "geojson",
        "coordinateCount",
        "geojson",
        "display",
        "createVertex",
        "state",
        "geojson",
        "endPos",
        "endPos",
        "coordinateCount",
        "geojson",
        "geojson",
        "geojson",
        "geojson",
        "display",
        "geojsonTypes",
        "geojson",
        "lineCoordinates",
        "geojsonTypes",
        "coordinateCount",
        "display",
        "geojson",
        "DrawPolygon",
        "state",
        "state",
        "modes$1",
        "DrawLineString",
        "opts",
        "opts",
        "opts",
        "opts",
        "featureId",
        "line",
        "featureId",
        "line",
        "opts",
        "line",
        "line",
        "lastCoord",
        "line",
        "lastCoord",
        "currentVertexPosition",
        "lastCoord",
        "line",
        "line",
        "currentVertexPosition",
        "line",
        "lastCoord",
        "line",
        "line",
        "direction",
        "currentVertexPosition",
        "line",
        "line",
        "currentVertexPosition",
        "line",
        "line",
        "geojsonTypes",
        "geojsonTypes",
        "currentVertexPosition",
        "line",
        "doubleClickZoom",
        "cursors",
        "types$1",
        "line",
        "currentVertexPosition",
        "direction",
        "DrawLineString",
        "state",
        "e",
        "state",
        "isEventAtCoordinates",
        "e",
        "state",
        "state",
        "state",
        "isEventAtCoordinates",
        "e",
        "state",
        "state",
        "modes$1",
        "state",
        "cursors",
        "state",
        "state",
        "e",
        "e",
        "state",
        "state",
        "state",
        "state",
        "e",
        "e",
        "state",
        "e",
        "e",
        "DrawLineString",
        "state",
        "modes$1",
        "state",
        "DrawLineString",
        "state",
        "e",
        "state",
        "state",
        "e",
        "e",
        "isVertex$1",
        "e",
        "cursors",
        "DrawLineString",
        "DrawLineString",
        "state",
        "e",
        "isVertex$1",
        "e",
        "state",
        "e",
        "state",
        "e",
        "DrawLineString",
        "state",
        "e",
        "isEnterKey",
        "e",
        "modes$1",
        "state",
        "isEscapeKey",
        "e",
        "state",
        "modes$1",
        "DrawLineString",
        "state",
        "doubleClickZoom",
        "state",
        "state",
        "state",
        "state",
        "events$1",
        "state",
        "state",
        "modes$1",
        "DrawLineString",
        "state",
        "state",
        "modes$1",
        "DrawLineString",
        "state",
        "geojson",
        "display",
        "geojson",
        "state",
        "geojson",
        "isActiveLine",
        "activeStates",
        "activeStates",
        "isActiveLine",
        "display",
        "geojson",
        "geojson",
        "geojson",
        "meta",
        "display",
        "createVertex",
        "state",
        "geojson",
        "state",
        "geojson",
        "state",
        "geojson",
        "display",
        "geojson",
        "SimpleSelect",
        "DirectSelect",
        "DrawPoint",
        "DrawPolygon",
        "DrawLineString",
        "modes$1",
        "styles",
        "modes",
        "styles",
        "sourceBucket",
        "styles",
        "style",
        "style",
        "style",
        "xtend",
        "style",
        "style",
        "sourceBucket",
        "sourceBucket",
        "sources",
        "sources",
        "options",
        "options",
        "options",
        "xtend",
        "options",
        "options",
        "withDefaults",
        "options",
        "withDefaults",
        "xtend",
        "hideControls",
        "options",
        "withDefaults",
        "xtend",
        "showControls",
        "options",
        "withDefaults",
        "xtend",
        "defaultOptions",
        "withDefaults",
        "withDefaults",
        "addSources",
        "withDefaults",
        "addSources",
        "withDefaults",
        "withDefaults",
        "lodash_isequal",
        "exports",
        "typedArrayTags",
        "float32Tag",
        "typedArrayTags",
        "float64Tag",
        "typedArrayTags",
        "int8Tag",
        "typedArrayTags",
        "int16Tag",
        "typedArrayTags",
        "int32Tag",
        "typedArrayTags",
        "uint8Tag",
        "typedArrayTags",
        "uint8ClampedTag",
        "typedArrayTags",
        "uint16Tag",
        "typedArrayTags",
        "uint32Tag",
        "typedArrayTags",
        "argsTag",
        "typedArrayTags",
        "arrayTag",
        "typedArrayTags",
        "arrayBufferTag",
        "typedArrayTags",
        "boolTag",
        "typedArrayTags",
        "dataViewTag",
        "typedArrayTags",
        "dateTag",
        "typedArrayTags",
        "errorTag",
        "typedArrayTags",
        "funcTag",
        "typedArrayTags",
        "mapTag",
        "typedArrayTags",
        "numberTag",
        "typedArrayTags",
        "objectTag",
        "typedArrayTags",
        "regexpTag",
        "typedArrayTags",
        "setTag",
        "typedArrayTags",
        "stringTag",
        "typedArrayTags",
        "weakMapTag",
        "freeGlobal",
        "freeSelf",
        "exports",
        "exports",
        "exports",
        "freeExports",
        "freeModule",
        "freeModule",
        "freeExports",
        "moduleExports",
        "freeGlobal",
        "freeProcess",
        "freeProcess",
        "freeProcess",
        "e",
        "nodeUtil",
        "nodeUtil",
        "array",
        "predicate",
        "array",
        "array",
        "index",
        "length",
        "array",
        "index",
        "predicate",
        "value",
        "index",
        "array",
        "result",
        "resIndex",
        "value",
        "result",
        "array",
        "values",
        "values",
        "array",
        "index",
        "length",
        "array",
        "offset",
        "index",
        "values",
        "index",
        "array",
        "array",
        "predicate",
        "array",
        "array",
        "index",
        "length",
        "predicate",
        "array",
        "index",
        "index",
        "array",
        "n",
        "iteratee",
        "n",
        "index",
        "n",
        "result",
        "index",
        "iteratee",
        "index",
        "result",
        "func",
        "value",
        "func",
        "value",
        "cache",
        "key",
        "cache",
        "key",
        "key",
        "key",
        "value",
        "key",
        "result",
        "index",
        "key",
        "value",
        "result",
        "func",
        "transform",
        "arg",
        "func",
        "transform",
        "arg",
        "value",
        "result",
        "index",
        "value",
        "result",
        "root",
        "funcProto",
        "objectProto",
        "coreJsData",
        "coreJsData",
        "coreJsData",
        "uid",
        "uid",
        "objectProto",
        "funcToString",
        "hasOwnProperty",
        "reRegExpChar",
        "moduleExports",
        "root",
        "root",
        "root",
        "objectProto",
        "arrayProto",
        "Buffer",
        "Buffer",
        "overArg",
        "getNative",
        "root",
        "getNative",
        "root",
        "getNative",
        "root",
        "getNative",
        "root",
        "getNative",
        "root",
        "getNative",
        "toSource",
        "DataView",
        "toSource",
        "toSource",
        "toSource",
        "toSource",
        "symbolProto",
        "symbolProto",
        "entries",
        "entries",
        "entries",
        "index",
        "length",
        "entries",
        "index",
        "entry",
        "entry",
        "nativeCreate",
        "nativeCreate",
        "key",
        "key",
        "key",
        "result",
        "result",
        "key",
        "nativeCreate",
        "data",
        "key",
        "result",
        "HASH_UNDEFINED",
        "result",
        "hasOwnProperty",
        "data",
        "key",
        "data",
        "key",
        "key",
        "nativeCreate",
        "data",
        "key",
        "hasOwnProperty",
        "data",
        "key",
        "key",
        "value",
        "key",
        "data",
        "key",
        "nativeCreate",
        "value",
        "HASH_UNDEFINED",
        "value",
        "Hash",
        "hashClear",
        "Hash",
        "hashDelete",
        "Hash",
        "hashGet",
        "Hash",
        "hashHas",
        "Hash",
        "hashSet",
        "entries",
        "entries",
        "entries",
        "index",
        "length",
        "entries",
        "index",
        "entry",
        "entry",
        "key",
        "assocIndexOf",
        "data",
        "key",
        "index",
        "data",
        "index",
        "lastIndex",
        "data",
        "splice",
        "data",
        "index",
        "key",
        "assocIndexOf",
        "data",
        "key",
        "index",
        "data",
        "index",
        "key",
        "assocIndexOf",
        "key",
        "key",
        "value",
        "assocIndexOf",
        "data",
        "key",
        "index",
        "data",
        "key",
        "value",
        "data",
        "index",
        "value",
        "ListCache",
        "listCacheClear",
        "ListCache",
        "listCacheDelete",
        "ListCache",
        "listCacheGet",
        "ListCache",
        "listCacheHas",
        "ListCache",
        "listCacheSet",
        "entries",
        "entries",
        "entries",
        "index",
        "length",
        "entries",
        "index",
        "entry",
        "entry",
        "Hash",
        "ListCache",
        "Hash",
        "key",
        "getMapData",
        "key",
        "key",
        "result",
        "result",
        "key",
        "getMapData",
        "key",
        "key",
        "key",
        "getMapData",
        "key",
        "key",
        "key",
        "value",
        "getMapData",
        "key",
        "data",
        "data",
        "key",
        "value",
        "data",
        "size",
        "MapCache",
        "mapCacheClear",
        "MapCache",
        "mapCacheDelete",
        "MapCache",
        "mapCacheGet",
        "MapCache",
        "mapCacheHas",
        "MapCache",
        "mapCacheSet",
        "values",
        "values",
        "values",
        "MapCache",
        "index",
        "length",
        "values",
        "index",
        "value",
        "value",
        "HASH_UNDEFINED",
        "value",
        "value",
        "SetCache",
        "SetCache",
        "setCacheAdd",
        "SetCache",
        "setCacheHas",
        "entries",
        "ListCache",
        "entries",
        "data",
        "ListCache",
        "key",
        "data",
        "key",
        "data",
        "result",
        "key",
        "key",
        "key",
        "key",
        "key",
        "value",
        "data",
        "ListCache",
        "data",
        "pairs",
        "LARGE_ARRAY_SIZE",
        "pairs",
        "key",
        "value",
        "data",
        "data",
        "MapCache",
        "pairs",
        "data",
        "key",
        "value",
        "data",
        "stackClear",
        "stackDelete",
        "stackGet",
        "stackHas",
        "stackSet",
        "value",
        "inherited",
        "isArray",
        "value",
        "isArr",
        "isArguments",
        "value",
        "isArr",
        "isArg",
        "isBuffer",
        "value",
        "isArr",
        "isArg",
        "isBuff",
        "isTypedArray",
        "value",
        "isArr",
        "isArg",
        "isBuff",
        "isType",
        "skipIndexes",
        "baseTimes",
        "value",
        "result",
        "key",
        "value",
        "inherited",
        "hasOwnProperty",
        "value",
        "key",
        "skipIndexes",
        "key",
        "isBuff",
        "key",
        "key",
        "isType",
        "key",
        "key",
        "key",
        "isIndex",
        "key",
        "length",
        "result",
        "key",
        "result",
        "array",
        "key",
        "array",
        "length",
        "eq",
        "array",
        "length",
        "key",
        "length",
        "keysFunc",
        "symbolsFunc",
        "keysFunc",
        "isArray",
        "result",
        "arrayPush",
        "result",
        "symbolsFunc",
        "value",
        "value",
        "value",
        "undefinedTag",
        "nullTag",
        "symToStringTag",
        "symToStringTag",
        "value",
        "getRawTag",
        "value",
        "objectToString",
        "value",
        "value",
        "isObjectLike",
        "value",
        "baseGetTag",
        "value",
        "argsTag",
        "value",
        "other",
        "bitmask",
        "customizer",
        "stack",
        "value",
        "other",
        "value",
        "other",
        "isObjectLike",
        "value",
        "isObjectLike",
        "other",
        "value",
        "value",
        "other",
        "other",
        "baseIsEqualDeep",
        "value",
        "other",
        "bitmask",
        "customizer",
        "baseIsEqual",
        "stack",
        "other",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "isArray",
        "isArray",
        "other",
        "objIsArr",
        "arrayTag",
        "getTag",
        "othIsArr",
        "arrayTag",
        "getTag",
        "other",
        "objTag",
        "objTag",
        "argsTag",
        "objectTag",
        "objTag",
        "othTag",
        "othTag",
        "argsTag",
        "objectTag",
        "othTag",
        "objTag",
        "objectTag",
        "othTag",
        "objectTag",
        "objTag",
        "othTag",
        "isSameTag",
        "isBuffer",
        "isBuffer",
        "other",
        "objIsArr",
        "objIsObj",
        "isSameTag",
        "objIsObj",
        "stack",
        "stack",
        "objIsArr",
        "isTypedArray",
        "equalArrays",
        "other",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "equalByTag",
        "other",
        "objTag",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "bitmask",
        "COMPARE_PARTIAL_FLAG",
        "objIsObj",
        "hasOwnProperty",
        "othIsObj",
        "hasOwnProperty",
        "other",
        "objIsWrapped",
        "othIsWrapped",
        "objIsWrapped",
        "othIsWrapped",
        "other",
        "other",
        "stack",
        "stack",
        "equalFunc",
        "objUnwrapped",
        "othUnwrapped",
        "bitmask",
        "customizer",
        "stack",
        "isSameTag",
        "stack",
        "stack",
        "equalObjects",
        "other",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "value",
        "isObject",
        "value",
        "isMasked",
        "value",
        "isFunction",
        "value",
        "reIsNative",
        "reIsHostCtor",
        "pattern",
        "toSource",
        "value",
        "value",
        "isObjectLike",
        "value",
        "isLength",
        "value",
        "typedArrayTags",
        "baseGetTag",
        "value",
        "isPrototype",
        "nativeKeys",
        "key",
        "hasOwnProperty",
        "key",
        "key",
        "result",
        "key",
        "result",
        "array",
        "other",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "bitmask",
        "COMPARE_PARTIAL_FLAG",
        "array",
        "other",
        "arrLength",
        "othLength",
        "isPartial",
        "othLength",
        "arrLength",
        "stack",
        "array",
        "stacked",
        "stack",
        "other",
        "stacked",
        "other",
        "bitmask",
        "COMPARE_UNORDERED_FLAG",
        "SetCache",
        "stack",
        "array",
        "other",
        "stack",
        "other",
        "array",
        "index",
        "arrLength",
        "array",
        "index",
        "other",
        "index",
        "customizer",
        "isPartial",
        "customizer",
        "othValue",
        "arrValue",
        "index",
        "other",
        "array",
        "stack",
        "customizer",
        "arrValue",
        "othValue",
        "index",
        "array",
        "other",
        "stack",
        "compared",
        "compared",
        "result",
        "seen",
        "arraySome",
        "other",
        "othValue",
        "othIndex",
        "cacheHas",
        "seen",
        "othIndex",
        "arrValue",
        "othValue",
        "equalFunc",
        "arrValue",
        "othValue",
        "bitmask",
        "customizer",
        "stack",
        "seen",
        "othIndex",
        "result",
        "arrValue",
        "othValue",
        "equalFunc",
        "arrValue",
        "othValue",
        "bitmask",
        "customizer",
        "stack",
        "result",
        "stack",
        "array",
        "stack",
        "other",
        "result",
        "other",
        "tag",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "tag",
        "dataViewTag",
        "other",
        "other",
        "other",
        "other",
        "arrayBufferTag",
        "other",
        "equalFunc",
        "Uint8Array",
        "Uint8Array",
        "other",
        "boolTag",
        "dateTag",
        "numberTag",
        "eq",
        "other",
        "errorTag",
        "other",
        "other",
        "regexpTag",
        "stringTag",
        "other",
        "mapTag",
        "setTag",
        "bitmask",
        "COMPARE_PARTIAL_FLAG",
        "convert",
        "convert",
        "setToArray",
        "other",
        "isPartial",
        "stack",
        "stacked",
        "stacked",
        "other",
        "bitmask",
        "COMPARE_UNORDERED_FLAG",
        "stack",
        "other",
        "equalArrays",
        "convert",
        "convert",
        "other",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "stack",
        "result",
        "symbolTag",
        "symbolValueOf",
        "symbolValueOf",
        "symbolValueOf",
        "other",
        "other",
        "bitmask",
        "customizer",
        "equalFunc",
        "stack",
        "bitmask",
        "COMPARE_PARTIAL_FLAG",
        "getAllKeys",
        "objProps",
        "getAllKeys",
        "other",
        "othProps",
        "objLength",
        "othLength",
        "isPartial",
        "index",
        "objProps",
        "index",
        "isPartial",
        "key",
        "other",
        "hasOwnProperty",
        "other",
        "key",
        "stack",
        "stacked",
        "stack",
        "other",
        "stacked",
        "other",
        "stack",
        "other",
        "stack",
        "other",
        "index",
        "objLength",
        "key",
        "objProps",
        "index",
        "key",
        "other",
        "key",
        "customizer",
        "isPartial",
        "customizer",
        "othValue",
        "objValue",
        "key",
        "other",
        "stack",
        "customizer",
        "objValue",
        "othValue",
        "key",
        "other",
        "stack",
        "compared",
        "objValue",
        "othValue",
        "equalFunc",
        "objValue",
        "othValue",
        "bitmask",
        "customizer",
        "stack",
        "compared",
        "result",
        "skipCtor",
        "skipCtor",
        "key",
        "result",
        "skipCtor",
        "other",
        "objCtor",
        "othCtor",
        "other",
        "objCtor",
        "objCtor",
        "objCtor",
        "othCtor",
        "othCtor",
        "othCtor",
        "result",
        "stack",
        "stack",
        "other",
        "result",
        "baseGetAllKeys",
        "keys",
        "getSymbols",
        "key",
        "isKeyable",
        "key",
        "data",
        "key",
        "data",
        "key",
        "getValue",
        "key",
        "baseIsNative",
        "value",
        "value",
        "value",
        "hasOwnProperty",
        "value",
        "symToStringTag",
        "value",
        "symToStringTag",
        "value",
        "symToStringTag",
        "e",
        "nativeObjectToString",
        "value",
        "unmasked",
        "isOwn",
        "value",
        "symToStringTag",
        "tag",
        "value",
        "symToStringTag",
        "result",
        "nativeGetSymbols",
        "stubArray",
        "arrayFilter",
        "nativeGetSymbols",
        "symbol",
        "propertyIsEnumerable",
        "symbol",
        "DataView",
        "getTag",
        "DataView",
        "ArrayBuffer",
        "dataViewTag",
        "getTag",
        "mapTag",
        "getTag",
        "promiseTag",
        "getTag",
        "setTag",
        "getTag",
        "weakMapTag",
        "getTag",
        "value",
        "baseGetTag",
        "value",
        "result",
        "objectTag",
        "value",
        "Ctor",
        "toSource",
        "Ctor",
        "ctorString",
        "ctorString",
        "dataViewCtorString",
        "dataViewTag",
        "mapCtorString",
        "mapTag",
        "promiseCtorString",
        "promiseTag",
        "setCtorString",
        "setTag",
        "weakMapCtorString",
        "weakMapTag",
        "result",
        "value",
        "length",
        "length",
        "length",
        "MAX_SAFE_INTEGER",
        "length",
        "length",
        "value",
        "reIsUint",
        "value",
        "value",
        "value",
        "value",
        "length",
        "value",
        "value",
        "value",
        "value",
        "func",
        "maskSrcKey",
        "maskSrcKey",
        "func",
        "value",
        "value",
        "value",
        "Ctor",
        "Ctor",
        "objectProto",
        "value",
        "proto",
        "value",
        "nativeObjectToString",
        "value",
        "func",
        "func",
        "funcToString",
        "func",
        "e",
        "func",
        "e$1",
        "value",
        "other",
        "value",
        "other",
        "value",
        "value",
        "other",
        "other",
        "baseIsArguments",
        "arguments",
        "baseIsArguments",
        "value",
        "isObjectLike",
        "value",
        "hasOwnProperty",
        "value",
        "propertyIsEnumerable",
        "value",
        "value",
        "value",
        "isLength",
        "value",
        "isFunction",
        "value",
        "nativeIsBuffer",
        "stubFalse",
        "value",
        "other",
        "baseIsEqual",
        "value",
        "other",
        "value",
        "isObject",
        "value",
        "baseGetTag",
        "value",
        "tag",
        "funcTag",
        "tag",
        "genTag",
        "tag",
        "asyncTag",
        "tag",
        "proxyTag",
        "value",
        "value",
        "value",
        "value",
        "value",
        "MAX_SAFE_INTEGER",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "nodeIsTypedArray",
        "baseUnary",
        "nodeIsTypedArray",
        "baseIsTypedArray",
        "isArrayLike",
        "arrayLikeKeys",
        "baseKeys",
        "isEqual",
        "lodash_isequal",
        "lodash_isequal",
        "lodash_isequal",
        "getDefaultExportFromCjs",
        "lodash_isequalExports",
        "a",
        "b",
        "a",
        "b",
        "a",
        "id",
        "id",
        "b",
        "id",
        "id",
        "Polygon",
        "LineString",
        "Point$2",
        "MultiFeature",
        "MultiFeature",
        "MultiFeature",
        "ctx",
        "api",
        "api",
        "modes$1",
        "api",
        "point",
        "featuresAt",
        "point",
        "ctx",
        "features",
        "feature",
        "feature",
        "api",
        "ctx",
        "api",
        "geojsonTypes",
        "ctx",
        "id",
        "ctx",
        "id",
        "feature",
        "feature",
        "api",
        "geojsonTypes",
        "ctx",
        "coordinate",
        "geojsonTypes",
        "geojsonTypes",
        "coordinate",
        "api",
        "featureCollection",
        "featureCollection",
        "featureCollection",
        "geojsonTypes",
        "featureCollection",
        "ctx",
        "ctx",
        "api",
        "featureCollection",
        "StringSet",
        "newIds",
        "toDelete",
        "toDelete",
        "id",
        "newIdsLookup",
        "id",
        "toDelete",
        "api",
        "toDelete",
        "renderBatch",
        "newIds",
        "api",
        "geojson",
        "normalize$1",
        "geojson",
        "featureCollection",
        "feature",
        "feature",
        "feature",
        "hat$1",
        "feature",
        "ctx",
        "feature",
        "ctx",
        "feature",
        "feature",
        "featureTypes",
        "feature",
        "Model",
        "feature",
        "Model",
        "ctx",
        "feature",
        "ctx",
        "internalFeature",
        "ctx",
        "feature",
        "internalFeature$1",
        "feature",
        "isEqual",
        "internalFeature$1",
        "feature",
        "ctx",
        "internalFeature$1",
        "isEqual",
        "internalFeature$1",
        "feature",
        "internalFeature$1",
        "feature",
        "feature",
        "ctx",
        "ids",
        "api",
        "id",
        "ctx",
        "id",
        "feature",
        "feature",
        "api",
        "geojsonTypes",
        "ctx",
        "feature",
        "feature",
        "api",
        "featureIds",
        "ctx",
        "featureIds",
        "api",
        "modes$1",
        "ctx",
        "ctx",
        "modes$1",
        "ctx",
        "api",
        "api",
        "ctx",
        "ctx",
        "api",
        "modes$1",
        "ctx",
        "modes$1",
        "ctx",
        "api",
        "api",
        "mode",
        "modeOptions",
        "modeOptions",
        "modeOptions",
        "mode",
        "modes$1",
        "api",
        "modes$1",
        "stringSetsAreEqual",
        "modeOptions",
        "ctx",
        "api",
        "ctx",
        "modeOptions",
        "ctx",
        "api",
        "mode",
        "modes$1",
        "api",
        "modes$1",
        "modeOptions",
        "ctx",
        "api",
        "ctx",
        "mode",
        "modeOptions",
        "api",
        "api",
        "ctx",
        "api",
        "ctx",
        "api",
        "api",
        "ctx",
        "api",
        "api",
        "ctx",
        "api",
        "api",
        "featureId",
        "property",
        "value",
        "ctx",
        "featureId",
        "property",
        "value",
        "api",
        "api",
        "common_selectors",
        "constrainFeatureMovement",
        "createMidpoint",
        "createSupplementaryPoints",
        "createVertex",
        "doubleClickZoom",
        "euclideanDistance",
        "featuresAt",
        "getFeatureAtAndSetCursors",
        "isClick",
        "isEventAtCoordinates",
        "isTap",
        "mapEventToBoundingBox",
        "ModeHandler",
        "moveFeatures",
        "sortFeatures",
        "stringSetsAreEqual",
        "StringSet",
        "styles",
        "toDenseArray",
        "options",
        "api",
        "options",
        "setupOptions",
        "options",
        "options",
        "api",
        "setupAPI",
        "ctx",
        "api",
        "ctx",
        "api",
        "runSetup",
        "ctx",
        "api",
        "setup",
        "api",
        "setup",
        "api",
        "types$1",
        "api",
        "options",
        "api",
        "options",
        "setupDraw",
        "options",
        "MapboxDraw",
        "modes",
        "MapboxDraw",
        "Constants",
        "MapboxDraw",
        "lib",
        "MapboxDraw"
    ],
    "literals": [
        "'object'",
        "'undefined'",
        "'function'",
        "'undefined'",
        "'use strict'",
        "\"Invalid event type: \"",
        "'drag'",
        "'click'",
        "'mousemove'",
        "'mousedown'",
        "'mouseup'",
        "'mouseout'",
        "'keydown'",
        "'keyup'",
        "'touchstart'",
        "'touchmove'",
        "'touchend'",
        "'tap'",
        "'default'",
        "'default'",
        "\"function\"",
        "'__esModule'",
        "'Polygon'",
        "'MultiPolygon'",
        "'Point'",
        "'MultiPoint'",
        "'LineString'",
        "'MultiLineString'",
        "'GeometryCollection'",
        "'mapboxgl-ctrl'",
        "'mapboxgl-ctrl-'",
        "'mapbox-gl-draw_ctrl-draw-btn'",
        "'mapbox-gl-draw_line'",
        "'mapbox-gl-draw_polygon'",
        "'mapbox-gl-draw_point'",
        "'mapbox-gl-draw_trash'",
        "'mapbox-gl-draw_combine'",
        "'mapbox-gl-draw_uncombine'",
        "'mapboxgl-ctrl-group'",
        "'mapboxgl-ctrl-attrib'",
        "'active'",
        "'mapbox-gl-draw_boxselect'",
        "'mapbox-gl-draw-hot'",
        "'mapbox-gl-draw-cold'",
        "'add'",
        "'move'",
        "'drag'",
        "'pointer'",
        "'none'",
        "'polygon'",
        "'line_string'",
        "'point'",
        "'Feature'",
        "'Polygon'",
        "'LineString'",
        "'Point'",
        "'FeatureCollection'",
        "'Multi'",
        "'MultiPoint'",
        "'MultiLineString'",
        "'MultiPolygon'",
        "'draw_line_string'",
        "'draw_polygon'",
        "'draw_point'",
        "'simple_select'",
        "'direct_select'",
        "'static'",
        "'draw.create'",
        "'draw.delete'",
        "'draw.update'",
        "'draw.selectionchange'",
        "'draw.modechange'",
        "'draw.actionable'",
        "'draw.render'",
        "'draw.combine'",
        "'draw.uncombine'",
        "'move'",
        "'change_coordinates'",
        "'feature'",
        "'midpoint'",
        "'vertex'",
        "'true'",
        "'false'",
        "'scrollZoom'",
        "'boxZoom'",
        "'dragRotate'",
        "'dragPan'",
        "'keyboard'",
        "'doubleClickZoom'",
        "'touchZoomRotate'",
        "'string'",
        "'string'",
        "'string'",
        "'number'",
        "'draw'",
        "'0'",
        "''",
        "'too many ID collisions, use more bits'",
        "'meta:type'",
        "\"user_\"",
        "'number'",
        "'number'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "'.'",
        "\" is not a valid type\"",
        "'Multi'",
        "''",
        "'getCoordinate'",
        "'updateCoordinate'",
        "'addCoordinate'",
        "'removeCoordinate'",
        "'click'",
        "'click'",
        "'touch'",
        "'invalid buffer type'",
        "'MultiFeature'",
        "\"Unknown feature class: \"",
        "'You must overwrite toDisplayFeatures'",
        "'onDrag'",
        "'onClick'",
        "'onMouseMove'",
        "'onMouseDown'",
        "'onMouseUp'",
        "'onMouseOut'",
        "'onKeyUp'",
        "'onKeyDown'",
        "'onTouchStart'",
        "'onTouchMove'",
        "'onTouchEnd'",
        "'onTap'",
        "'mapboxgl-canvas'",
        "'style'",
        "\" is not valid\"",
        "'Invalid action type'",
        "'mousemove'",
        "'mousedown'",
        "'mouseup'",
        "'data'",
        "'touchmove'",
        "'touchstart'",
        "'touchend'",
        "'mouseout'",
        "'keydown'",
        "'keyup'",
        "'mousemove'",
        "'mousedown'",
        "'mouseup'",
        "'data'",
        "'touchmove'",
        "'touchstart'",
        "'touchend'",
        "'mouseout'",
        "'keydown'",
        "'keyup'",
        "'hot'",
        "'cold'",
        "'mode'",
        "'feature'",
        "'mouse'",
        "\"-\"",
        "\"-\"",
        "'button'",
        "\" \"",
        "'title'",
        "'click'",
        "'trash'",
        "'div'",
        "\" \"",
        "\"LineString tool \"",
        "'(l)'",
        "''",
        "\"Polygon tool \"",
        "'(p)'",
        "''",
        "\"Marker tool \"",
        "'(m)'",
        "''",
        "'trash'",
        "'Delete'",
        "'combineFeatures'",
        "'Combine'",
        "'uncombineFeatures'",
        "'Uncombine'",
        "'load'",
        "'load'",
        "'load'",
        "'geojson'",
        "'geojson'",
        "'id'",
        "'gl-draw-polygon-fill-inactive'",
        "'type'",
        "'fill'",
        "'filter'",
        "'all'",
        "'=='",
        "'active'",
        "'false'",
        "'=='",
        "'$type'",
        "'Polygon'",
        "'!='",
        "'mode'",
        "'static'",
        "'paint'",
        "'fill-color'",
        "'#3bb2d0'",
        "'fill-outline-color'",
        "'#3bb2d0'",
        "'fill-opacity'",
        "'id'",
        "'gl-draw-polygon-fill-active'",
        "'type'",
        "'fill'",
        "'filter'",
        "'all'",
        "'=='",
        "'active'",
        "'true'",
        "'=='",
        "'$type'",
        "'Polygon'",
        "'paint'",
        "'fill-color'",
        "'#fbb03b'",
        "'fill-outline-color'",
        "'#fbb03b'",
        "'fill-opacity'",
        "'id'",
        "'gl-draw-polygon-midpoint'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'$type'",
        "'Point'",
        "'=='",
        "'meta'",
        "'midpoint'",
        "'paint'",
        "'circle-radius'",
        "'circle-color'",
        "'#fbb03b'",
        "'id'",
        "'gl-draw-polygon-stroke-inactive'",
        "'type'",
        "'line'",
        "'filter'",
        "'all'",
        "'=='",
        "'active'",
        "'false'",
        "'=='",
        "'$type'",
        "'Polygon'",
        "'!='",
        "'mode'",
        "'static'",
        "'layout'",
        "'line-cap'",
        "'round'",
        "'line-join'",
        "'round'",
        "'paint'",
        "'line-color'",
        "'#3bb2d0'",
        "'line-width'",
        "'id'",
        "'gl-draw-polygon-stroke-active'",
        "'type'",
        "'line'",
        "'filter'",
        "'all'",
        "'=='",
        "'active'",
        "'true'",
        "'=='",
        "'$type'",
        "'Polygon'",
        "'layout'",
        "'line-cap'",
        "'round'",
        "'line-join'",
        "'round'",
        "'paint'",
        "'line-color'",
        "'#fbb03b'",
        "'line-dasharray'",
        "'line-width'",
        "'id'",
        "'gl-draw-line-inactive'",
        "'type'",
        "'line'",
        "'filter'",
        "'all'",
        "'=='",
        "'active'",
        "'false'",
        "'=='",
        "'$type'",
        "'LineString'",
        "'!='",
        "'mode'",
        "'static'",
        "'layout'",
        "'line-cap'",
        "'round'",
        "'line-join'",
        "'round'",
        "'paint'",
        "'line-color'",
        "'#3bb2d0'",
        "'line-width'",
        "'id'",
        "'gl-draw-line-active'",
        "'type'",
        "'line'",
        "'filter'",
        "'all'",
        "'=='",
        "'$type'",
        "'LineString'",
        "'=='",
        "'active'",
        "'true'",
        "'layout'",
        "'line-cap'",
        "'round'",
        "'line-join'",
        "'round'",
        "'paint'",
        "'line-color'",
        "'#fbb03b'",
        "'line-dasharray'",
        "'line-width'",
        "'id'",
        "'gl-draw-polygon-and-line-vertex-stroke-inactive'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'meta'",
        "'vertex'",
        "'=='",
        "'$type'",
        "'Point'",
        "'!='",
        "'mode'",
        "'static'",
        "'paint'",
        "'circle-radius'",
        "'circle-color'",
        "'#fff'",
        "'id'",
        "'gl-draw-polygon-and-line-vertex-inactive'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'meta'",
        "'vertex'",
        "'=='",
        "'$type'",
        "'Point'",
        "'!='",
        "'mode'",
        "'static'",
        "'paint'",
        "'circle-radius'",
        "'circle-color'",
        "'#fbb03b'",
        "'id'",
        "'gl-draw-point-point-stroke-inactive'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'active'",
        "'false'",
        "'=='",
        "'$type'",
        "'Point'",
        "'=='",
        "'meta'",
        "'feature'",
        "'!='",
        "'mode'",
        "'static'",
        "'paint'",
        "'circle-radius'",
        "'circle-opacity'",
        "'circle-color'",
        "'#fff'",
        "'id'",
        "'gl-draw-point-inactive'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'active'",
        "'false'",
        "'=='",
        "'$type'",
        "'Point'",
        "'=='",
        "'meta'",
        "'feature'",
        "'!='",
        "'mode'",
        "'static'",
        "'paint'",
        "'circle-radius'",
        "'circle-color'",
        "'#3bb2d0'",
        "'id'",
        "'gl-draw-point-stroke-active'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'$type'",
        "'Point'",
        "'=='",
        "'active'",
        "'true'",
        "'!='",
        "'meta'",
        "'midpoint'",
        "'paint'",
        "'circle-radius'",
        "'circle-color'",
        "'#fff'",
        "'id'",
        "'gl-draw-point-active'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'$type'",
        "'Point'",
        "'!='",
        "'meta'",
        "'midpoint'",
        "'=='",
        "'active'",
        "'true'",
        "'paint'",
        "'circle-radius'",
        "'circle-color'",
        "'#fbb03b'",
        "'id'",
        "'gl-draw-polygon-fill-static'",
        "'type'",
        "'fill'",
        "'filter'",
        "'all'",
        "'=='",
        "'mode'",
        "'static'",
        "'=='",
        "'$type'",
        "'Polygon'",
        "'paint'",
        "'fill-color'",
        "'#404040'",
        "'fill-outline-color'",
        "'#404040'",
        "'fill-opacity'",
        "'id'",
        "'gl-draw-polygon-stroke-static'",
        "'type'",
        "'line'",
        "'filter'",
        "'all'",
        "'=='",
        "'mode'",
        "'static'",
        "'=='",
        "'$type'",
        "'Polygon'",
        "'layout'",
        "'line-cap'",
        "'round'",
        "'line-join'",
        "'round'",
        "'paint'",
        "'line-color'",
        "'#404040'",
        "'line-width'",
        "'id'",
        "'gl-draw-line-static'",
        "'type'",
        "'line'",
        "'filter'",
        "'all'",
        "'=='",
        "'mode'",
        "'static'",
        "'=='",
        "'$type'",
        "'LineString'",
        "'layout'",
        "'line-cap'",
        "'round'",
        "'line-join'",
        "'round'",
        "'paint'",
        "'line-color'",
        "'#404040'",
        "'line-width'",
        "'id'",
        "'gl-draw-point-static'",
        "'type'",
        "'circle'",
        "'filter'",
        "'all'",
        "'=='",
        "'mode'",
        "'static'",
        "'=='",
        "'$type'",
        "'Point'",
        "'paint'",
        "'circle-radius'",
        "'circle-color'",
        "'#404040'",
        "\".\"",
        "''",
        "\".\"",
        "''",
        "'doubleClickZoom'",
        "'geometry'",
        "'geometry'",
        "'geometry'",
        "'geometry'",
        "'geometry'",
        "'geometry'",
        "'geometry'",
        "'feature'",
        "'featurecollection'",
        "'geometry'",
        "'FeatureCollection'",
        "'Feature'",
        "'feature'",
        "'FeatureCollection'",
        "'featurecollection'",
        "\"FeatureCollection\"",
        "\"Feature\"",
        "\"Feature\"",
        "\"MultiPoint\"",
        "\"Point\"",
        "\"MultiPolygon\"",
        "\"Polygon\"",
        "\"MultiLineString\"",
        "\"LineString\"",
        "\"GeometryCollection\"",
        "\"Point\"",
        "\"Polygon\"",
        "\"LineString\"",
        "'default'",
        "'number'",
        "'object'",
        "'delete'",
        "'object'",
        "'object'",
        "'object'",
        "'[object Date]'",
        "'[object RegExp]'",
        "'[object Error]'",
        "'[object Boolean]'",
        "'[object Number]'",
        "'[object String]'",
        "'[object Array]'",
        "'return null;'",
        "'return '",
        "'<= ll[0] &&'",
        "'<= ll[1] &&'",
        "'>= ll[0] &&'",
        "'>= ll[1]'",
        "'ll'",
        "'Polygon'",
        "'FeatureCollection'",
        "'Point'",
        "'MultiPoint'",
        "'LineString'",
        "'MultiLineString'",
        "'Polygon'",
        "'MultiPolygon'",
        "'Feature'",
        "'GeometryCollection'",
        "'MultiFeature'",
        "'Multi'",
        "''",
        "'Multi'",
        "''",
        "'div'",
        "\"translate(\"",
        "\"px, \"",
        "\"px)\"",
        "\"px\"",
        "\"px\"",
        "'click'",
        "'Multi'",
        "''",
        "'Multi'",
        "''",
        "'Multi'",
        "\"Multi\"",
        "'MultiFeature'",
        "'You must provide a featureId to enter direct_select mode'",
        "'direct_select mode doesn\\'t handle point features'",
        "'en'",
        "''",
        "\"0.\"",
        "\"0.\"",
        "\"0.\"",
        "\"0.\"",
        "'0.0'",
        "\"0.\"",
        "'forward'",
        "'Could not find a feature with the provided featureId'",
        "'Feature'",
        "'Point'",
        "'Point'",
        "'Please use the `from` property to indicate which point to continue the line from'",
        "'backwards'",
        "'`from` should match the point at either the start or the end of the provided LineString'",
        "'backwards'",
        "'forward'",
        "\"\"",
        "'forward'",
        "\"\"",
        "'forward'",
        "\".\"",
        "'hot'",
        "'cold'",
        "'hot'",
        "'__lodash_hash_undefined__'",
        "'[object Arguments]'",
        "'[object Array]'",
        "'[object AsyncFunction]'",
        "'[object Boolean]'",
        "'[object Date]'",
        "'[object Error]'",
        "'[object Function]'",
        "'[object GeneratorFunction]'",
        "'[object Map]'",
        "'[object Number]'",
        "'[object Null]'",
        "'[object Object]'",
        "'[object Promise]'",
        "'[object Proxy]'",
        "'[object RegExp]'",
        "'[object Set]'",
        "'[object String]'",
        "'[object Symbol]'",
        "'[object Undefined]'",
        "'[object WeakMap]'",
        "'[object ArrayBuffer]'",
        "'[object DataView]'",
        "'[object Float32Array]'",
        "'[object Float64Array]'",
        "'[object Int8Array]'",
        "'[object Int16Array]'",
        "'[object Int32Array]'",
        "'[object Uint8Array]'",
        "'[object Uint8ClampedArray]'",
        "'[object Uint16Array]'",
        "'[object Uint32Array]'",
        "'object'",
        "'object'",
        "'return this'",
        "'object'",
        "'object'",
        "'util'",
        "'__core-js_shared__'",
        "''",
        "'Symbol(src)_1.'",
        "''",
        "'^'",
        "'\\\\$&'",
        "'$1.*?'",
        "'$'",
        "'DataView'",
        "'Map'",
        "'Promise'",
        "'Set'",
        "'WeakMap'",
        "'create'",
        "'delete'",
        "'delete'",
        "'hash'",
        "'map'",
        "'string'",
        "'delete'",
        "'delete'",
        "'delete'",
        "'delete'",
        "'length'",
        "'offset'",
        "'parent'",
        "'buffer'",
        "'byteLength'",
        "'byteOffset'",
        "'__wrapped__'",
        "'__wrapped__'",
        "'constructor'",
        "'delete'",
        "'delete'",
        "''",
        "'delete'",
        "'constructor'",
        "'constructor'",
        "'constructor'",
        "'function'",
        "'function'",
        "'delete'",
        "'delete'",
        "'string'",
        "'string'",
        "'hash'",
        "''",
        "'number'",
        "'string'",
        "'number'",
        "'symbol'",
        "'boolean'",
        "'__proto__'",
        "'function'",
        "''",
        "''",
        "'callee'",
        "'callee'",
        "'number'",
        "'object'",
        "'function'",
        "'object'",
        "'Invalid FeatureCollection'",
        "'Invalid geometry: null'",
        "\"Invalid geometry type: \"",
        "\".\""
    ],
    "variables": [
        "ModeHandler",
        "handlers",
        "ctx",
        "handles",
        "iHandle",
        "handle",
        "skipRender",
        "f",
        "a",
        "args",
        "Ctor",
        "d",
        "geojsonArea",
        "wgs84$1",
        "wgs84",
        "wgs84$1",
        "area",
        "i",
        "area",
        "i",
        "p1",
        "p2",
        "p3",
        "lowerIndex",
        "middleIndex",
        "upperIndex",
        "i",
        "area",
        "coordsLength",
        "classes",
        "sources",
        "cursors",
        "types$1",
        "geojsonTypes",
        "modes$1",
        "events$1",
        "updateActions",
        "meta",
        "activeStates",
        "interactions",
        "LAT_MIN$1",
        "LAT_RENDERED_MIN$1",
        "LAT_MAX$1",
        "LAT_RENDERED_MAX$1",
        "LNG_MIN$1",
        "LNG_MAX$1",
        "Constants",
        "FEATURE_SORT_RANKS",
        "score",
        "i",
        "l",
        "this$1$1",
        "values",
        "META_TYPES",
        "featuresAt",
        "box",
        "queryParams",
        "features",
        "featureIds",
        "uniqueFeatures",
        "featureId",
        "features",
        "classes",
        "x",
        "y",
        "FINE_TOLERANCE",
        "GROSS_TOLERANCE",
        "INTERVAL",
        "FINE_INTERVAL",
        "fineTolerance",
        "grossTolerance",
        "interval",
        "fineInterval",
        "moveDistance",
        "TAP_TOLERANCE",
        "TAP_INTERVAL",
        "tolerance",
        "interval",
        "moveDistance",
        "hat$2",
        "hat",
        "digits",
        "i",
        "rem",
        "res",
        "i",
        "x",
        "b",
        "x",
        "parsed",
        "fn",
        "iters",
        "id",
        "hats",
        "hatExports",
        "hat$1",
        "Feature",
        "properties",
        "Point$2",
        "LineString",
        "id",
        "id",
        "id",
        "Polygon",
        "ids",
        "ring",
        "ids",
        "ring",
        "ids",
        "ring",
        "parts",
        "ringId",
        "coordId",
        "models",
        "takeAction",
        "parts",
        "idx",
        "tail",
        "MultiFeature",
        "this$1$1",
        "Model",
        "this$1$1",
        "newSet",
        "eventMapper",
        "eventKeys",
        "modeObjectKeys",
        "state",
        "mode",
        "this$1$1",
        "modeHandler",
        "selector",
        "modes",
        "mouseDownInfo",
        "touchStartInfo",
        "events",
        "currentModeName",
        "currentMode",
        "button",
        "target",
        "target",
        "target",
        "target",
        "target",
        "isKeyModeValid",
        "isMapElement",
        "setup",
        "options",
        "store",
        "hasLayers",
        "modebuilder",
        "mode",
        "actionState",
        "changed",
        "api",
        "store",
        "mapExists",
        "mode",
        "newHotIds",
        "newColdIds",
        "lastColdCount",
        "id",
        "coldChanged",
        "feature",
        "featureInternal",
        "geojsonToEmit",
        "this$1$1",
        "renderRequest",
        "this$1$1",
        "holdRender",
        "numRenders",
        "this$1$1",
        "this$1$1",
        "this$1$1",
        "this$1$1",
        "this$1$1",
        "this$1$1",
        "this$1$1",
        "selected",
        "feature",
        "newSelectedCoordinates",
        "this$1$1",
        "interactionSet",
        "this$1$1",
        "value",
        "immutable",
        "extend",
        "hasOwnProperty$1",
        "arguments$1",
        "arguments",
        "target",
        "i",
        "source",
        "xtend",
        "classTypes",
        "buttonElements",
        "activeButton",
        "currentMapClasses",
        "nextMapClasses",
        "ref$1",
        "classesToRemove",
        "classesToAdd",
        "button",
        "clickedButton",
        "button",
        "controls",
        "controlGroup",
        "button",
        "controlContainer",
        "mapLoadedInterval",
        "setup",
        "_fire",
        "args",
        "arguments",
        "styles",
        "featureTarget",
        "featureTarget",
        "common_selectors",
        "pointGeometry",
        "Point",
        "dx",
        "dy",
        "x",
        "y",
        "y",
        "cos",
        "sin",
        "x",
        "y",
        "cos",
        "sin",
        "x",
        "y",
        "Point$1",
        "rect",
        "startCoord",
        "endCoord",
        "mid",
        "coordinates",
        "featureId",
        "supplementaryPoints",
        "firstPointString",
        "lastVertex",
        "pointPath",
        "vertex",
        "midpoint",
        "stringifiedPoint",
        "subType",
        "subFeature",
        "doubleClickZoom",
        "geojsonExtent",
        "geojsonNormalize$1",
        "normalize",
        "types",
        "normalize$1",
        "r",
        "index_es",
        "require$$1",
        "flatten$1",
        "geojsonNormalize",
        "geojsonNormalize$1",
        "geojsonFlatten",
        "require$$1",
        "flatten",
        "flatten$1",
        "geojsonCoords$1",
        "normalized",
        "coordinates",
        "traverse$2",
        "traverse$1",
        "node",
        "i",
        "key",
        "node",
        "i",
        "key",
        "node",
        "i",
        "key",
        "skip",
        "acc",
        "acc",
        "acc",
        "parents",
        "nodes",
        "i",
        "dst",
        "path",
        "parents",
        "alive",
        "node",
        "modifiers",
        "keepGoing",
        "state",
        "i",
        "ret",
        "child",
        "dst",
        "proto",
        "T",
        "objectKeys",
        "res",
        "isArray",
        "forEach",
        "i",
        "args",
        "t",
        "hasOwnProperty",
        "traverseExports",
        "extent$2",
        "Extent",
        "other",
        "other",
        "lon",
        "lat",
        "other",
        "body",
        "geojsonCoords",
        "geojsonCoords$1",
        "traverse",
        "traverseExports",
        "extent",
        "extent$2",
        "geojsonTypesByDataAttributes",
        "dataAttributes",
        "isValid",
        "ext",
        "coords",
        "i",
        "geojsonExtentExports",
        "extent$1",
        "LAT_MIN",
        "LAT_MIN$1",
        "LAT_MAX",
        "LAT_MAX$1",
        "LAT_RENDERED_MIN",
        "LAT_RENDERED_MIN$1",
        "LAT_RENDERED_MAX",
        "LAT_RENDERED_MAX$1",
        "LNG_MIN",
        "LNG_MIN$1",
        "LNG_MAX",
        "LNG_MAX$1",
        "northInnerEdge",
        "LAT_MIN",
        "southInnerEdge",
        "LAT_MAX",
        "northOuterEdge",
        "LAT_MIN",
        "southOuterEdge",
        "LAT_MAX",
        "westEdge",
        "LNG_MAX",
        "eastEdge",
        "LNG_MIN",
        "bounds",
        "featureSouthEdge",
        "featureNorthEdge",
        "featureWestEdge",
        "featureEastEdge",
        "constrainedDelta",
        "delta",
        "constrainedDelta",
        "currentCoordinates",
        "moveCoordinate",
        "point",
        "moveRing",
        "moveMultiPolygon",
        "nextCoordinates",
        "SimpleSelect",
        "this$1$1",
        "state",
        "this$1$1",
        "selectedFeatures",
        "multiFeatures",
        "combineFeatures",
        "featureType",
        "uncombineFeatures",
        "trash",
        "ids",
        "isFeature$1",
        "this$1$1",
        "wasSelected",
        "this$1$1",
        "isShiftClick",
        "selectedFeatureIds",
        "featureId",
        "isFeatureSelected",
        "current",
        "minX",
        "maxX",
        "minY",
        "maxY",
        "translateValue",
        "delta",
        "this$1$1",
        "bbox",
        "featuresInBox",
        "idsToSelect",
        "selectedFeatures",
        "coordinates",
        "featuresCombined",
        "featureType",
        "i",
        "feature",
        "multiFeature",
        "this$1$1",
        "selectedFeatures",
        "createdFeatures",
        "featuresUncombined",
        "loop",
        "feature",
        "i",
        "isVertex",
        "isMidpoint",
        "DirectSelect",
        "about",
        "selectedIndex",
        "selectedCoordinates",
        "about",
        "selectedCoords",
        "selectedCoordPoints",
        "constrainedDelta",
        "i",
        "coord",
        "featureId",
        "feature",
        "state",
        "isFeature",
        "onVertex",
        "isMidPoint",
        "noCoords",
        "isDraggableItem",
        "delta",
        "DrawPoint",
        "point",
        "isActivePoint",
        "DrawPolygon",
        "polygon",
        "isActivePolygon",
        "coordinateCount",
        "endPos",
        "lineCoordinates",
        "DrawLineString",
        "featureId",
        "line",
        "currentVertexPosition",
        "direction",
        "lastCoord",
        "isActiveLine",
        "modes",
        "defaultOptions",
        "showControls",
        "hideControls",
        "withDefaults",
        "lodash_isequal",
        "LARGE_ARRAY_SIZE",
        "HASH_UNDEFINED",
        "COMPARE_PARTIAL_FLAG",
        "COMPARE_UNORDERED_FLAG",
        "MAX_SAFE_INTEGER",
        "argsTag",
        "arrayTag",
        "asyncTag",
        "boolTag",
        "dateTag",
        "errorTag",
        "funcTag",
        "genTag",
        "mapTag",
        "numberTag",
        "nullTag",
        "objectTag",
        "promiseTag",
        "proxyTag",
        "regexpTag",
        "setTag",
        "stringTag",
        "symbolTag",
        "undefinedTag",
        "weakMapTag",
        "arrayBufferTag",
        "dataViewTag",
        "float32Tag",
        "float64Tag",
        "int8Tag",
        "int16Tag",
        "int32Tag",
        "uint8Tag",
        "uint8ClampedTag",
        "uint16Tag",
        "uint32Tag",
        "reRegExpChar",
        "reIsHostCtor",
        "reIsUint",
        "typedArrayTags",
        "freeGlobal",
        "freeSelf",
        "root",
        "freeExports",
        "freeModule",
        "moduleExports",
        "freeProcess",
        "nodeUtil",
        "nodeIsTypedArray",
        "index",
        "length",
        "resIndex",
        "result",
        "value",
        "index",
        "length",
        "offset",
        "index",
        "length",
        "index",
        "result",
        "index",
        "result",
        "index",
        "result",
        "arrayProto",
        "funcProto",
        "objectProto",
        "coreJsData",
        "funcToString",
        "hasOwnProperty",
        "maskSrcKey",
        "uid",
        "nativeObjectToString",
        "reIsNative",
        "Buffer",
        "Uint8Array",
        "propertyIsEnumerable",
        "splice",
        "symToStringTag",
        "nativeGetSymbols",
        "nativeIsBuffer",
        "nativeKeys",
        "DataView",
        "nativeCreate",
        "dataViewCtorString",
        "mapCtorString",
        "promiseCtorString",
        "setCtorString",
        "weakMapCtorString",
        "symbolProto",
        "symbolValueOf",
        "index",
        "length",
        "entry",
        "result",
        "data",
        "result",
        "data",
        "data",
        "index",
        "length",
        "entry",
        "data",
        "index",
        "lastIndex",
        "data",
        "index",
        "data",
        "index",
        "index",
        "length",
        "entry",
        "result",
        "data",
        "size",
        "index",
        "length",
        "data",
        "data",
        "result",
        "data",
        "pairs",
        "isArr",
        "isArg",
        "isBuff",
        "isType",
        "skipIndexes",
        "result",
        "length",
        "length",
        "result",
        "objIsArr",
        "othIsArr",
        "objTag",
        "othTag",
        "objIsObj",
        "othIsObj",
        "isSameTag",
        "objIsWrapped",
        "othIsWrapped",
        "objUnwrapped",
        "othUnwrapped",
        "pattern",
        "result",
        "isPartial",
        "arrLength",
        "othLength",
        "stacked",
        "index",
        "result",
        "seen",
        "arrValue",
        "othValue",
        "compared",
        "convert",
        "mapToArray",
        "isPartial",
        "stacked",
        "result",
        "isPartial",
        "objProps",
        "objLength",
        "othProps",
        "othLength",
        "index",
        "objLength",
        "key",
        "stacked",
        "result",
        "skipCtor",
        "isPartial",
        "objValue",
        "othValue",
        "compared",
        "objCtor",
        "othCtor",
        "data",
        "value",
        "isOwn",
        "tag",
        "unmasked",
        "result",
        "getSymbols",
        "getTag",
        "baseGetTag",
        "result",
        "Ctor",
        "ctorString",
        "Ctor",
        "proto",
        "isArguments",
        "isArray",
        "isBuffer",
        "tag",
        "isTypedArray",
        "lodash_isequalExports",
        "isEqual",
        "featureTypes",
        "features",
        "renderBatch",
        "toDelete",
        "newIds",
        "newIdsLookup",
        "featureCollection",
        "ids",
        "Model",
        "internalFeature",
        "internalFeature$1",
        "feature",
        "lib",
        "setupDraw",
        "ctx",
        "setup"
    ],
    "comments": [
        "ensure an event is only handled once",
        "we do this to let modes have multiple overlapping selectors",
        "and relay on order of oppertations to filter",
        "i = N-2",
        "i = N-1",
        "i = 0 to N-3",
        "#__PURE__",
        "Sort in the order above, then sort polygons by area ascending.",
        "Requires either event or bbox",
        "@__PURE__",
        "Expects valid geoJSON polygon geometry: first and last positions must be equivalent.",
        "Does NOT expect valid geoJSON polygon geometry: first and last positions should not be equivalent.",
        "this should set ui buttons",
        "Adds event handlers for all event options",
        "add sets the selector to false for all",
        "handlers that are not present in the mode",
        "to reduce on render calls for functions that",
        "have no logic",
        "Prevent emulated mouse events because we will fully handle the touch here.",
        "This does not stop the touch events from propogating to mapbox though.",
        "8 - Backspace",
        "46 - Delete",
        "we only handle events on the map",
        "eslint-disable-next-line no-invalid-this",
        "Deduplicate requests to render and tie them to animation frames.",
        "Deselect any features not in the new selection",
        "Select any features in the new selection that were not already selected",
        "This needs to be set to whatever the default is for that interaction",
        "It seems to be true for all cases currently, so let's send back `true`.",
        "@__PURE__",
        "e.g. mode-direct_select",
        "e.g. feature-vertex",
        "e.g. mouse-move",
        "Stop connect attempt in the event that control is removed before map is loaded",
        "Monkey patch to resolve breaking change to `fire` introduced by",
        "mapbox-gl-js. See mapbox/mapbox-gl-draw/issues/766.",
        "eslint-disable-next-line",
        "Need to toggle dragPan on and off or else first",
        "dragPan disable attempt in simple_select doesn't work",
        "drawn features style",
        "hot features style",
        "Check for layers and sources before attempting to remove",
        "If user adds draw control and removes it before the map is loaded, layers and sources will be missing",
        "#__PURE__",
        "@__PURE__",
        "If a coordinate exceeds the projection, we can't calculate a midpoint,",
        "so run away",
        "For points, just create a vertex",
        "Cycle through a Polygon's rings and",
        "process each line",
        "If we're creating midpoints, check if there was a",
        "vertex before this one. If so, add a midpoint",
        "between that vertex and this one.",
        "A Polygon line's last point is the same as the first point. If we're on the last",
        "point, we want to draw a midpoint before it but not another vertex on it",
        "(since we already a vertex there, from the first point).",
        "Split a multi-geometry into constituent",
        "geometries, and accumulate the supplementary points",
        "for each of those constituents",
        "First check we've got a map and some context.",
        "Now check initial state wasn't false (we leave it disabled if so)",
        "Always disable here, as it's necessary in some cases.",
        "@__PURE__",
        "#__PURE__",
        "@__PURE__",
        "use return values to update if defined",
        "W, S",
        "E, S",
        "E, N",
        "W, N",
        "W, S",
        "@__PURE__",
        "Ensure that we do not drag north-south far enough for",
        "- any part of any feature to exceed the poles",
        "- any feature to be completely lost in the space between the projection's",
        "edge and the poles, such that it couldn't be re-selected and moved back",
        "\"inner edge\" = a feature's latitude closest to the equator",
        "\"outer edge\" = a feature's latitude furthest from the equator",
        "These changes are not mutually exclusive: we might hit the inner",
        "edge but also have hit the outer edge and therefore need",
        "another readjustment",
        "turn the opts into state.",
        "On mousemove that is not a drag, stop extended interactions.",
        "This is useful if you drag off the canvas, release the button,",
        "then move the mouse back over the canvas --- we don't allow the",
        "interaction to continue then, but we do let it continue if you held",
        "the mouse button that whole time",
        "Skip render",
        "As soon as you mouse leaves the canvas, update the feature",
        "Skip render",
        "Click (with or without shift) on no feature",
        "also tap",
        "tap",
        "Clear the re-render selection",
        "Enter direct select mode",
        "Stop any already-underway extended interactions",
        "Disable map.dragPan immediately so it can't start",
        "Re-render it and enable drag move",
        "Set up the state for drag moving",
        "Stop everything",
        "Click (without shift) on any selected feature but a point",
        "Enter direct select mode",
        "Shift-click on a selected feature",
        "Deselect it",
        "Shift-click on an unselected feature",
        "Add it to the selection",
        "Click (without shift) on an unselected feature",
        "Make it the only selected feature",
        "No matter what, re-render the clicked feature",
        "Enable box select",
        "Create the box node if it doesn't exist",
        "Adjust the box node's width and xy position",
        "Dragging when drag move is enabled",
        "End any extended interactions",
        "INTERNAL FUCNTIONS",
        "EXTERNAL FUNCTIONS",
        "Uses number-aware sorting to make sure '9' < '10'. Comparison is reversed because we want them",
        "in reverse order so that we can remove by index safely.",
        "On mousemove that is not a drag, stop vertex movement.",
        "Skip render",
        "As soon as you mouse leaves the canvas, update the feature",
        "Skip render",
        "Never render the point we're drawing",
        "check to see if we've deleted this feature",
        "remove last added coordinate",
        "Don't render a polygon until it has two positions",
        "(and a 3rd which is just the first repeated)",
        "2 coordinates after selecting a draw type",
        "3 after creating the first point",
        "Add a start position marker to the map, clicking on this will finish the feature",
        "This should only be shown when we're in a valid spot",
        "If we've only drawn two positions (plus the closer),",
        "make a LineString instead of a Polygon",
        "create an initial vertex so that we can track the first point on mobile devices",
        "render the Polygon",
        "add one new coordinate to continue from",
        "add one new coordinate to continue from",
        "check to see if we've deleted this feature",
        "remove last added coordinate",
        "Only render the line if it has at least one real coordinate",
        "Layers with a shared source should be adjacent for performance reasons",
        "Used as the size to enable large array optimizations.",
        "Used to stand-in for `undefined` hash values.",
        "Used to compose bitmasks for value comparisons.",
        "Used as references for various `Number` constants.",
        "`Object#toString` result references.",
        "Used to detect host constructors (Safari).",
        "Used to detect unsigned integer values.",
        "Used to identify `toStringTag` values of typed arrays.",
        "Detect free variable `global` from Node.js.",
        "Detect free variable `self`.",
        "Used as a reference to the global object.",
        "Detect free variable `exports`.",
        "Detect free variable `module`.",
        "Detect the popular CommonJS extension `module.exports`.",
        "Detect free variable `process` from Node.js.",
        "Used to access faster Node.js helpers.",
        "Node.js helper references.",
        "Used for built-in method references.",
        "Used to detect overreaching core-js shims.",
        "Used to resolve the decompiled source of functions.",
        "Used to check objects for own properties.",
        "Used to detect methods masquerading as native.",
        "Used to detect if a method is native.",
        "Built-in value references.",
        "Built-in method references for those with the same name as other `lodash` methods.",
        "Built-in method references that are verified to be native.",
        "Used to detect maps, sets, and weakmaps.",
        "Used to convert symbols to primitives and strings.",
        "Add methods to `Hash`.",
        "Add methods to `ListCache`.",
        "Add methods to `MapCache`.",
        "Add methods to `SetCache`.",
        "Add methods to `Stack`.",
        "Safari 9 has enumerable `arguments.length` in strict mode.",
        "Node.js 0.10 has enumerable non-index properties on buffers.",
        "PhantomJS 2 has enumerable non-index properties on typed arrays.",
        "Skip index properties.",
        "Assume cyclic values are equal.",
        "Ignore non-index properties.",
        "Recursively compare arrays (susceptible to call stack limits).",
        "Coerce booleans to `1` or `0` and dates to milliseconds.",
        "Invalid dates are coerced to `NaN`.",
        "Coerce regexes to strings and treat strings, primitives and objects,",
        "as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring",
        "for more details.",
        "Assume cyclic values are equal.",
        "Recursively compare objects (susceptible to call stack limits).",
        "Assume cyclic values are equal.",
        "Recursively compare objects (susceptible to call stack limits).",
        "Non `Object` object instances with different constructors are not equal.",
        "Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.",
        "The use of `Object#toString` avoids issues with the `typeof` operator",
        "in Safari 9 which returns 'object' for typed arrays and other constructors.",
        "@__PURE__",
        "If the feature has not yet been created ...",
        "If a feature of that id has already been created, and we are swapping it out ...",
        "If we were in direct select mode and our selected feature no longer exists",
        "(because it was deleted), we need to get out of that mode.",
        "If we were in direct select mode, now our selected feature no longer exists,",
        "so escape that mode.",
        "Avoid changing modes just to re-select what's already selected",
        "And if we are changing the selection within simple_select mode, just change the selection,",
        "instead of stopping and re-starting the mode",
        "#__PURE__",
        "# sourceMappingURL=mapbox-gl-draw-unminified.js.map"
    ],
    "docstrings": [
        "* Calculate the approximate area of the polygon were it projected onto\n *     the earth.  Note that this area will be positive if ring is oriented\n *     clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n *     Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n *     Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * Returns:\n * {float} The approximate signed geodesic area of the polygon in square\n *     meters.",
        "* Returns a bounding box representing the event's location.\n *\n * @param {Event} mapEvent - Mapbox GL JS map event, with a point properties.\n * @return {Array<Array<number>>} Bounding box.",
        "* Sets Draw's interal selected state\n * @name this.setSelected\n * @param {DrawFeature[]} - whats selected as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)",
        "* Sets Draw's internal selected coordinate state\n * @name this.setSelectedCoordinates\n * @param {Object[]} coords - a array of {coord_path: 'string', feature_id: 'string'}",
        "* Get all selected features as a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.getSelected\n * @returns {DrawFeature[]}",
        "* Get the ids of all currently selected features\n * @name this.getSelectedIds\n * @returns {String[]}",
        "* Check if a feature is selected\n * @name this.isSelected\n * @param {String} id - a feature id\n * @returns {Boolean}",
        "* Get a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) by its id\n * @name this.getFeature\n * @param {String} id - a feature id\n * @returns {DrawFeature}",
        "* Add a feature to draw's internal selected state\n * @name this.select\n * @param {String} id",
        "* Remove a feature from draw's internal selected state\n * @name this.delete\n * @param {String} id",
        "* Delete a feature from draw\n * @name this.deleteFeature\n * @param {String} id - a feature id",
        "* Add a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) to draw.\n * See `this.newFeature` for converting geojson into a DrawFeature\n * @name this.addFeature\n * @param {DrawFeature} feature - the feature to add",
        "* Clear all selected features",
        "* Clear all selected coordinates",
        "* Indicate if the different action are currently possible with your mode\n * See [draw.actionalbe](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#drawactionable) for a list of possible actions. All undefined actions are set to **false** by default\n * @name this.setActionableState\n * @param {Object} actions",
        "* Trigger a mode change\n * @name this.changeMode\n * @param {String} mode - the mode to transition into\n * @param {Object} opts - the options object to pass to the new mode\n * @param {Object} eventOpts - used to control what kind of events are emitted.",
        "* Update the state of draw map classes\n * @name this.updateUIClasses\n * @param {Object} opts",
        "* If a name is provided it makes that button active, else if makes all buttons inactive\n * @name this.activateUIButton\n * @param {String?} name - name of the button to make active, leave as undefined to set buttons to be inactive",
        "* Get the features at the location of an event object or in a bbox\n * @name this.featuresAt\n * @param {Event||NULL} event - a mapbox-gl event object\n * @param {BBOX||NULL} bbox - the area to get features from\n * @param {String} bufferType - is this `click` or `tap` event, defaults to click",
        "* Create a new [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js) from geojson\n * @name this.newFeature\n * @param {GeoJSONFeature} geojson\n * @returns {DrawFeature}",
        "* Check is an object is an instance of a [DrawFeature](https://github.com/mapbox/mapbox-gl-draw/blob/main/src/feature_types/feature.js)\n * @name this.isInstanceOf\n * @param {String} type - `Point`, `LineString`, `Polygon`, `MultiFeature`\n * @param {Object} feature - the object that needs to be checked\n * @returns {Boolean}",
        "* Force draw to rerender the feature of the provided id\n * @name this.doRender\n * @param {String} id - a feature id",
        "* Triggered while a mode is being transitioned into.\n * @param opts {Object} - this is the object passed via `draw.changeMode('mode', opts)`;\n * @name MODE.onSetup\n * @returns {Object} - this object will be passed to all other life cycle functions",
        "* Triggered when a drag event is detected on the map\n * @name MODE.onDrag\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when the mouse is clicked\n * @name MODE.onClick\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered with the mouse is moved\n * @name MODE.onMouseMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when the mouse button is pressed down\n * @name MODE.onMouseDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when the mouse button is released\n * @name MODE.onMouseUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when the mouse leaves the map's container\n * @name MODE.onMouseOut\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when a key up event is detected\n * @name MODE.onKeyUp\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when a key down event is detected\n * @name MODE.onKeyDown\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when a touch event is started\n * @name MODE.onTouchStart\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when one drags thier finger on a mobile device\n * @name MODE.onTouchMove\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when one removes their finger from the map\n * @name MODE.onTouchEnd\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when one quicly taps the map\n * @name MODE.onTap\n * @param state {Object} - a mutible state object created by onSetup\n * @param e {Object} - the captured event that is triggering this life cycle event",
        "* Triggered when the mode is being exited, to be used for cleaning up artifacts such as invalid features\n * @name MODE.onStop\n * @param state {Object} - a mutible state object created by onSetup",
        "* Triggered when [draw.trash()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#trash-draw) is called.\n * @name MODE.onTrash\n * @param state {Object} - a mutible state object created by onSetup",
        "* Triggered when [draw.combineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#combinefeatures-draw) is called.\n * @name MODE.onCombineFeature\n * @param state {Object} - a mutible state object created by onSetup",
        "* Triggered when [draw.uncombineFeatures()](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#uncombinefeatures-draw) is called.\n * @name MODE.onUncombineFeature\n * @param state {Object} - a mutible state object created by onSetup",
        "* Triggered per feature on render to convert raw features into set of features for display on the map\n * See [styling draw](https://github.com/mapbox/mapbox-gl-draw/blob/main/API.md#styling-draw) for information about what geojson properties Draw uses as part of rendering.\n * @name MODE.toDisplayFeatures\n * @param state {Object} - a mutible state object created by onSetup\n * @param geojson {Object} - a geojson being evaulated. To render, pass to `display`.\n * @param display {Function} - all geojson objects passed to this be rendered onto the map",
        "* Derive a dense array (no `undefined`s) from a single value or array.\n *\n * @param {any} x\n * @return {Array<any>}",
        "* Delays all rendering until the returned function is invoked\n * @return {Function} renderBatch",
        "* Sets the store's state to dirty.\n * @return {Store} this",
        "* Sets a feature's state to changed.\n * @param {string} featureId\n * @return {Store} this",
        "* Gets the ids of all features currently in changed state.\n * @return {Store} this",
        "* Sets all features to unchanged state.\n * @return {Store} this",
        "* Gets the ids of all features in the store.\n * @return {Store} this",
        "* Adds a feature to the store.\n * @param {Object} feature\n *\n * @return {Store} this",
        "* Deletes a feature or array of features from the store.\n * Cleans up after the deletion by deselecting the features.\n * If changes were made, sets the state to the dirty\n * and fires an event.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this",
        "* Returns a feature in the store matching the specified value.\n * @return {Object | undefined} feature",
        "* Returns all features in the store.\n * @return {Array<Object>}",
        "* Adds features to the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this",
        "* Deletes features from the current selection.\n * @param {string | Array<string>} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this",
        "* Clears the current selection.\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this",
        "* Sets the store's selection, clearing any prior values.\n * If no feature ids are passed, the store is just cleared.\n * @param {string | Array<string> | undefined} featureIds\n * @param {Object} [options]\n * @param {Object} [options.silent] - If `true`, this invocation will not fire an event.\n * @return {Store} this",
        "* Sets the store's coordinates selection, clearing any prior values.\n * @param {Array<Array<string>>} coordinates\n * @return {Store} this",
        "* Clears the current coordinates selection.\n * @param {Object} [options]\n * @return {Store} this",
        "* Returns the ids of features in the current selection.\n * @return {Array<string>} Selected feature ids.",
        "* Returns features in the current selection.\n * @return {Array<Object>} Selected features.",
        "* Returns selected coordinates in the currently selected feature.\n * @return {Array<Object>} Selected coordinates.",
        "* Indicates whether a feature is selected.\n * @param {string} featureId\n * @return {boolean} `true` if the feature is selected, `false` if not.",
        "* Sets a property on the given feature\n * @param {string} featureId\n * @param {string} property property\n * @param {string} property value",
        "* Stores the initial config for a map, so that we can set it again after we're done.",
        "* Restores the initial config for a map, ensuring all is well.",
        "* Returns the initial state of an interaction setting.\n * @param {string} interaction\n * @return {boolean} `true` if the interaction is enabled, `false` if not.\n * Defaults to `true`. (Todo: include defaults.)",
        "* A standalone point geometry with useful accessor, comparison, and\n * modification methods.\n *\n * @class Point\n * @param {Number} x the x-coordinate. this could be longitude or screen\n * pixels, or any other sort of unit.\n * @param {Number} y the y-coordinate. this could be latitude or screen\n * pixels, or any other sort of unit.\n * @example\n * var point = new Point(-77, 38);",
        "* Clone this point, returning a new point that can be modified\n     * without affecting the old one.\n     * @return {Point} the clone",
        "* Add this point's x & y coordinates to another point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point",
        "* Subtract this point's x & y coordinates to from point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point",
        "* Multiply this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point",
        "* Divide this point's x & y coordinates by point,\n     * yielding a new point.\n     * @param {Point} p the other point\n     * @return {Point} output point",
        "* Multiply this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point",
        "* Divide this point's x & y coordinates by a factor,\n     * yielding a new point.\n     * @param {Point} k factor\n     * @return {Point} output point",
        "* Rotate this point around the 0, 0 origin by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @return {Point} output point",
        "* Rotate this point around p point by an angle a,\n     * given in radians\n     * @param {Number} a angle to rotate around, in radians\n     * @param {Point} p Point to rotate around\n     * @return {Point} output point",
        "* Multiply this point by a 4x1 transformation matrix\n     * @param {Array<Number>} m transformation matrix\n     * @return {Point} output point",
        "* Calculate this point but as a unit vector from 0, 0, meaning\n     * that the distance from the resulting point to the 0, 0\n     * coordinate will be equal to 1 and the angle from the resulting\n     * point to the 0, 0 coordinate will be the same as before.\n     * @return {Point} unit vector point",
        "* Compute a perpendicular point, where the new y coordinate\n     * is the old x coordinate and the new x coordinate is the old y\n     * coordinate multiplied by -1\n     * @return {Point} perpendicular point",
        "* Return a version of this point with the x & y coordinates\n     * rounded to integers.\n     * @return {Point} rounded point",
        "* Return the magitude of this point: this is the Euclidean\n     * distance from the 0, 0 coordinate to this point's x and y\n     * coordinates.\n     * @return {Number} magnitude",
        "* Judge whether this point is equal to another point, returning\n     * true or false.\n     * @param {Point} other the other point\n     * @return {boolean} whether the points are equal",
        "* Calculate the distance from this point to another point\n     * @param {Point} p the other point\n     * @return {Number} distance",
        "* Calculate the distance from this point to another point,\n     * without the square root step. Useful if you're comparing\n     * relative distances.\n     * @param {Point} p the other point\n     * @return {Number} distance",
        "* Get the angle from the 0, 0 coordinate to this point, in radians\n     * coordinates.\n     * @return {Number} angle",
        "* Get the angle from this point to another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle",
        "* Get the angle between this point and another point, in radians\n     * @param {Point} b the other point\n     * @return {Number} angle",
        "* Find the angle of the two vectors, solving the formula for\n     * the cross product a x b = |a||b|sin(θ) for θ.\n     * @param {Number} x the x-coordinate\n     * @param {Number} y the y-coordinate\n     * @return {Number} the angle in radians",
        "* Construct a point from an array if necessary, otherwise if the input\n * is already a Point, or an unknown type, return it unchanged\n * @param {Array<Number>|Point|*} a any kind of input value\n * @return {Point} constructed point, or passed-through value.\n * @example\n * // this\n * var point = Point.convert([0, 1]);\n * // is equivalent to\n * var point = new Point(0, 1);",
        "* Returns a Point representing a mouse event's position\n * relative to a containing element.\n *\n * @param {MouseEvent} mouseEvent\n * @param {Node} container\n * @returns {Point}",
        "* Returns GeoJSON for a Point representing the\n * vertex of another feature.\n *\n * @param {string} parentId\n * @param {Array<number>} coordinates\n * @param {string} path - Dot-separated numbers indicating exactly\n *   where the point exists within its parent feature's coordinates.\n * @param {boolean} selected\n * @return {GeoJSON} Point",
        "* Normalize a GeoJSON feature into a FeatureCollection.\n *\n * @param {object} gj geojson data\n * @returns {object} normalized geojson data",
        "* Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors",
        "* Used to match `RegExp`\n\t * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).",
        "* A specialized version of `_.filter` for arrays without support for\n\t * iteratee shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {Array} Returns the new filtered array.",
        "* Appends the elements of `values` to `array`.\n\t *\n\t * @private\n\t * @param {Array} array The array to modify.\n\t * @param {Array} values The values to append.\n\t * @returns {Array} Returns `array`.",
        "* A specialized version of `_.some` for arrays without support for iteratee\n\t * shorthands.\n\t *\n\t * @private\n\t * @param {Array} [array] The array to iterate over.\n\t * @param {Function} predicate The function invoked per iteration.\n\t * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t *  else `false`.",
        "* The base implementation of `_.times` without support for iteratee shorthands\n\t * or max array length checks.\n\t *\n\t * @private\n\t * @param {number} n The number of times to invoke `iteratee`.\n\t * @param {Function} iteratee The function invoked per iteration.\n\t * @returns {Array} Returns the array of results.",
        "* The base implementation of `_.unary` without support for storing metadata.\n\t *\n\t * @private\n\t * @param {Function} func The function to cap arguments for.\n\t * @returns {Function} Returns the new capped function.",
        "* Checks if a `cache` value for `key` exists.\n\t *\n\t * @private\n\t * @param {Object} cache The cache to query.\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.",
        "* Gets the value at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} [object] The object to query.\n\t * @param {string} key The key of the property to get.\n\t * @returns {*} Returns the property value.",
        "* Converts `map` to its key-value pairs.\n\t *\n\t * @private\n\t * @param {Object} map The map to convert.\n\t * @returns {Array} Returns the key-value pairs.",
        "* Creates a unary function that invokes `func` with its argument transformed.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {Function} transform The argument transform.\n\t * @returns {Function} Returns the new function.",
        "* Converts `set` to an array of its values.\n\t *\n\t * @private\n\t * @param {Object} set The set to convert.\n\t * @returns {Array} Returns the values.",
        "* Used to resolve the\n\t * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t * of values.",
        "* Creates a hash object.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.",
        "* Removes all key-value entries from the hash.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf Hash",
        "* Removes `key` and its value from the hash.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf Hash\n\t * @param {Object} hash The hash to modify.\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.",
        "* Gets the hash value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf Hash\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.",
        "* Checks if a hash value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf Hash\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.",
        "* Sets the hash `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf Hash\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the hash instance.",
        "* Creates an list cache object.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.",
        "* Removes all key-value entries from the list cache.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf ListCache",
        "* Removes `key` and its value from the list cache.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.",
        "* Gets the list cache value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.",
        "* Checks if a list cache value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf ListCache\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.",
        "* Sets the list cache `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf ListCache\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the list cache instance.",
        "* Creates a map cache object to store key-value pairs.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.",
        "* Removes all key-value entries from the map.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf MapCache",
        "* Removes `key` and its value from the map.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.",
        "* Gets the map value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.",
        "* Checks if a map value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf MapCache\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.",
        "* Sets the map `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf MapCache\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the map cache instance.",
        "*\n\t * Creates an array cache object to store unique values.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [values] The values to cache.",
        "* Adds `value` to the array cache.\n\t *\n\t * @private\n\t * @name add\n\t * @memberOf SetCache\n\t * @alias push\n\t * @param {*} value The value to cache.\n\t * @returns {Object} Returns the cache instance.",
        "* Checks if `value` is in the array cache.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf SetCache\n\t * @param {*} value The value to search for.\n\t * @returns {number} Returns `true` if `value` is found, else `false`.",
        "* Creates a stack cache object to store key-value pairs.\n\t *\n\t * @private\n\t * @constructor\n\t * @param {Array} [entries] The key-value pairs to cache.",
        "* Removes all key-value entries from the stack.\n\t *\n\t * @private\n\t * @name clear\n\t * @memberOf Stack",
        "* Removes `key` and its value from the stack.\n\t *\n\t * @private\n\t * @name delete\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to remove.\n\t * @returns {boolean} Returns `true` if the entry was removed, else `false`.",
        "* Gets the stack value for `key`.\n\t *\n\t * @private\n\t * @name get\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to get.\n\t * @returns {*} Returns the entry value.",
        "* Checks if a stack value for `key` exists.\n\t *\n\t * @private\n\t * @name has\n\t * @memberOf Stack\n\t * @param {string} key The key of the entry to check.\n\t * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.",
        "* Sets the stack `key` to `value`.\n\t *\n\t * @private\n\t * @name set\n\t * @memberOf Stack\n\t * @param {string} key The key of the value to set.\n\t * @param {*} value The value to set.\n\t * @returns {Object} Returns the stack cache instance.",
        "* Creates an array of the enumerable property names of the array-like `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @param {boolean} inherited Specify returning inherited property names.\n\t * @returns {Array} Returns the array of property names.",
        "* Gets the index at which the `key` is found in `array` of key-value pairs.\n\t *\n\t * @private\n\t * @param {Array} array The array to inspect.\n\t * @param {*} key The key to search for.\n\t * @returns {number} Returns the index of the matched value, else `-1`.",
        "* The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t * symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {Function} keysFunc The function to get the keys of `object`.\n\t * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t * @returns {Array} Returns the array of property names and symbols.",
        "* The base implementation of `getTag` without fallbacks for buggy environments.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.",
        "* The base implementation of `_.isArguments`.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,",
        "* The base implementation of `_.isEqual` which supports partial comparisons\n\t * and tracks traversed objects.\n\t *\n\t * @private\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @param {boolean} bitmask The bitmask flags.\n\t *  1 - Unordered comparison\n\t *  2 - Partial comparison\n\t * @param {Function} [customizer] The function to customize comparisons.\n\t * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.",
        "* A specialized version of `baseIsEqual` for arrays and objects which performs\n\t * deep comparisons and tracks traversed objects enabling objects with circular\n\t * references to be compared.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.",
        "* The base implementation of `_.isNative` without bad shim checks.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a native function,\n\t *  else `false`.",
        "* The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.",
        "* The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.",
        "* A specialized version of `baseIsEqualDeep` for arrays with support for\n\t * partial deep comparisons.\n\t *\n\t * @private\n\t * @param {Array} array The array to compare.\n\t * @param {Array} other The other array to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.",
        "* A specialized version of `baseIsEqualDeep` for comparing objects of\n\t * the same `toStringTag`.\n\t *\n\t * **Note:** This function only supports comparing values with tags of\n\t * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {string} tag The `toStringTag` of the objects to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.",
        "* A specialized version of `baseIsEqualDeep` for objects with support for\n\t * partial deep comparisons.\n\t *\n\t * @private\n\t * @param {Object} object The object to compare.\n\t * @param {Object} other The other object to compare.\n\t * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t * @param {Function} customizer The function to customize comparisons.\n\t * @param {Function} equalFunc The function to determine equivalents of values.\n\t * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.",
        "* Creates an array of own enumerable property names and symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names and symbols.",
        "* Gets the data for `map`.\n\t *\n\t * @private\n\t * @param {Object} map The map to query.\n\t * @param {string} key The reference key.\n\t * @returns {*} Returns the map data.",
        "* Gets the native function at `key` of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @param {string} key The key of the method to get.\n\t * @returns {*} Returns the function if it's native, else `undefined`.",
        "* A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the raw `toStringTag`.",
        "* Creates an array of the own enumerable symbols of `object`.\n\t *\n\t * @private\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of symbols.",
        "* Gets the `toStringTag` of `value`.\n\t *\n\t * @private\n\t * @param {*} value The value to query.\n\t * @returns {string} Returns the `toStringTag`.",
        "* Checks if `value` is a valid array-like index.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.",
        "* Checks if `value` is suitable for use as unique object key.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is suitable, else `false`.",
        "* Checks if `func` has its source masked.\n\t *\n\t * @private\n\t * @param {Function} func The function to check.\n\t * @returns {boolean} Returns `true` if `func` is masked, else `false`.",
        "* Checks if `value` is likely a prototype object.\n\t *\n\t * @private\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.",
        "* Converts `value` to a string using `Object.prototype.toString`.\n\t *\n\t * @private\n\t * @param {*} value The value to convert.\n\t * @returns {string} Returns the converted string.",
        "* Converts `func` to its source code.\n\t *\n\t * @private\n\t * @param {Function} func The function to convert.\n\t * @returns {string} Returns the source code.",
        "* Performs a\n\t * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t * comparison between two values to determine if they are equivalent.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t * var other = { 'a': 1 };\n\t *\n\t * _.eq(object, object);\n\t * // => true\n\t *\n\t * _.eq(object, other);\n\t * // => false\n\t *\n\t * _.eq('a', 'a');\n\t * // => true\n\t *\n\t * _.eq('a', Object('a'));\n\t * // => false\n\t *\n\t * _.eq(NaN, NaN);\n\t * // => true",
        "* Checks if `value` is likely an `arguments` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t *  else `false`.\n\t * @example\n\t *\n\t * _.isArguments(function() { return arguments; }());\n\t * // => true\n\t *\n\t * _.isArguments([1, 2, 3]);\n\t * // => false",
        "* Checks if `value` is classified as an `Array` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t * @example\n\t *\n\t * _.isArray([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArray(document.body.children);\n\t * // => false\n\t *\n\t * _.isArray('abc');\n\t * // => false\n\t *\n\t * _.isArray(_.noop);\n\t * // => false",
        "* Checks if `value` is array-like. A value is considered array-like if it's\n\t * not a function and has a `value.length` that's an integer greater than or\n\t * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t * @example\n\t *\n\t * _.isArrayLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isArrayLike(document.body.children);\n\t * // => true\n\t *\n\t * _.isArrayLike('abc');\n\t * // => true\n\t *\n\t * _.isArrayLike(_.noop);\n\t * // => false",
        "* Checks if `value` is a buffer.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.3.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t * @example\n\t *\n\t * _.isBuffer(new Buffer(2));\n\t * // => true\n\t *\n\t * _.isBuffer(new Uint8Array(2));\n\t * // => false",
        "* Performs a deep comparison between two values to determine if they are\n\t * equivalent.\n\t *\n\t * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t * by their own, not inherited, enumerable properties. Functions and DOM\n\t * nodes are compared by strict equality, i.e. `===`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to compare.\n\t * @param {*} other The other value to compare.\n\t * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t * @example\n\t *\n\t * var object = { 'a': 1 };\n\t * var other = { 'a': 1 };\n\t *\n\t * _.isEqual(object, other);\n\t * // => true\n\t *\n\t * object === other;\n\t * // => false",
        "* Checks if `value` is classified as a `Function` object.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t * @example\n\t *\n\t * _.isFunction(_);\n\t * // => true\n\t *\n\t * _.isFunction(/abc/);\n\t * // => false",
        "* Checks if `value` is a valid array-like length.\n\t *\n\t * **Note:** This method is loosely based on\n\t * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t * @example\n\t *\n\t * _.isLength(3);\n\t * // => true\n\t *\n\t * _.isLength(Number.MIN_VALUE);\n\t * // => false\n\t *\n\t * _.isLength(Infinity);\n\t * // => false\n\t *\n\t * _.isLength('3');\n\t * // => false",
        "* Checks if `value` is the\n\t * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 0.1.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t * @example\n\t *\n\t * _.isObject({});\n\t * // => true\n\t *\n\t * _.isObject([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObject(_.noop);\n\t * // => true\n\t *\n\t * _.isObject(null);\n\t * // => false",
        "* Checks if `value` is object-like. A value is object-like if it's not `null`\n\t * and has a `typeof` result of \"object\".\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t * @example\n\t *\n\t * _.isObjectLike({});\n\t * // => true\n\t *\n\t * _.isObjectLike([1, 2, 3]);\n\t * // => true\n\t *\n\t * _.isObjectLike(_.noop);\n\t * // => false\n\t *\n\t * _.isObjectLike(null);\n\t * // => false",
        "* Checks if `value` is classified as a typed array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 3.0.0\n\t * @category Lang\n\t * @param {*} value The value to check.\n\t * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t * @example\n\t *\n\t * _.isTypedArray(new Uint8Array);\n\t * // => true\n\t *\n\t * _.isTypedArray([]);\n\t * // => false",
        "* Creates an array of the own enumerable property names of `object`.\n\t *\n\t * **Note:** Non-object values are coerced to objects. See the\n\t * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t * for more details.\n\t *\n\t * @static\n\t * @since 0.1.0\n\t * @memberOf _\n\t * @category Object\n\t * @param {Object} object The object to query.\n\t * @returns {Array} Returns the array of property names.\n\t * @example\n\t *\n\t * function Foo() {\n\t *   this.a = 1;\n\t *   this.b = 2;\n\t * }\n\t *\n\t * Foo.prototype.c = 3;\n\t *\n\t * _.keys(new Foo);\n\t * // => ['a', 'b'] (iteration order is not guaranteed)\n\t *\n\t * _.keys('hi');\n\t * // => ['0', '1']",
        "* This method returns a new empty array.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.13.0\n\t * @category Util\n\t * @returns {Array} Returns the new empty array.\n\t * @example\n\t *\n\t * var arrays = _.times(2, _.stubArray);\n\t *\n\t * console.log(arrays);\n\t * // => [[], []]\n\t *\n\t * console.log(arrays[0] === arrays[1]);\n\t * // => false",
        "* This method returns `false`.\n\t *\n\t * @static\n\t * @memberOf _\n\t * @since 4.13.0\n\t * @category Util\n\t * @returns {boolean} Returns `false`.\n\t * @example\n\t *\n\t * _.times(2, _.stubFalse);\n\t * // => [false, false]"
    ],
    "functions": [
        "getDefaultExportFromCjs",
        "getAugmentedNamespace",
        "geometry",
        "polygonArea",
        "ringArea",
        "rad",
        "comparator",
        "sortFeatures",
        "mapEventToBoundingBox",
        "StringSet",
        "featuresAtClick",
        "featuresAtTouch",
        "featuresAt$1",
        "getFeatureAtAndSetCursors",
        "euclideanDistance",
        "isClick",
        "isTap",
        "ModeInterface",
        "objectToMode",
        "wrapper",
        "events",
        "changeMode",
        "actionable",
        "toDenseArray",
        "render",
        "renderFeature",
        "cleanup",
        "Store",
        "refreshSelectedCoordinates",
        "extend",
        "ui",
        "clearMapClasses",
        "queueMapClasses",
        "updateMapClasses",
        "createControlButton",
        "deactivateButtons",
        "setActiveButton",
        "addButtons",
        "removeButtons",
        "runSetup",
        "isOfMetaType",
        "isShiftMousedown",
        "isActiveFeature",
        "isInactiveFeature",
        "noTarget",
        "isFeature",
        "isVertex$1",
        "isShiftDown",
        "isEscapeKey",
        "isEnterKey",
        "isTrue",
        "Point",
        "mouseEventPoint",
        "createVertex",
        "createMidpoint",
        "createSupplementaryPoints",
        "processLine",
        "isSelectedPath",
        "processMultiGeometry",
        "normalize",
        "e",
        "_flatten",
        "Traverse",
        "walk",
        "updateState",
        "copy",
        "toS",
        "isDate",
        "isRegExp",
        "isError",
        "isBoolean",
        "isNumber",
        "isString",
        "Extent",
        "getExtent",
        "constrainFeatureMovement",
        "moveFeatures",
        "isEventAtCoordinates",
        "addSources",
        "setupOptions",
        "arrayFilter",
        "arrayPush",
        "arraySome",
        "baseTimes",
        "baseUnary",
        "cacheHas",
        "getValue",
        "mapToArray",
        "overArg",
        "setToArray",
        "Hash",
        "hashClear",
        "hashDelete",
        "hashGet",
        "hashHas",
        "hashSet",
        "ListCache",
        "listCacheClear",
        "listCacheDelete",
        "listCacheGet",
        "listCacheHas",
        "listCacheSet",
        "MapCache",
        "mapCacheClear",
        "mapCacheDelete",
        "mapCacheGet",
        "mapCacheHas",
        "mapCacheSet",
        "SetCache",
        "setCacheAdd",
        "setCacheHas",
        "stackClear",
        "stackDelete",
        "stackGet",
        "stackHas",
        "stackSet",
        "arrayLikeKeys",
        "assocIndexOf",
        "baseGetAllKeys",
        "baseGetTag",
        "baseIsArguments",
        "baseIsEqual",
        "baseIsEqualDeep",
        "baseIsNative",
        "baseIsTypedArray",
        "baseKeys",
        "equalArrays",
        "equalByTag",
        "equalObjects",
        "getAllKeys",
        "getMapData",
        "getNative",
        "getRawTag",
        "isIndex",
        "isKeyable",
        "isMasked",
        "isPrototype",
        "objectToString",
        "toSource",
        "eq",
        "isArrayLike",
        "isEqual",
        "isFunction",
        "isLength",
        "isObject",
        "isObjectLike",
        "keys",
        "stubArray",
        "stubFalse",
        "stringSetsAreEqual",
        "setupAPI",
        "MapboxDraw"
    ],
    "classes": []
}