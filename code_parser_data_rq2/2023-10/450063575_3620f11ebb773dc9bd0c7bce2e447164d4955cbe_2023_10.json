{
    "identifiers": [
        "org",
        "springframework",
        "rabbit",
        "stream",
        "config",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "java",
        "util",
        "BiFunction",
        "org",
        "springframework",
        "util",
        "StringUtils",
        "arguments",
        "name",
        "partitions",
        "routingKeyStrategy",
        "name",
        "builder",
        "builder",
        "name",
        "name",
        "builder",
        "name",
        "partitions",
        "superStream",
        "name",
        "partitions",
        "partitions",
        "maxAge",
        "withArgument",
        "maxAge",
        "withArgument",
        "withArgument",
        "count",
        "withArgument",
        "count",
        "key",
        "value",
        "equals",
        "key",
        "equals",
        "value",
        "arguments",
        "put",
        "key",
        "value",
        "name",
        "name",
        "name",
        "partitions",
        "partitions",
        "partitions",
        "routingKeyStrategy",
        "routingKeyStrategy",
        "routingKeyStrategy",
        "StringUtils",
        "hasText",
        "name",
        "partitions",
        "format",
        "partitions",
        "routingKeyStrategy",
        "name",
        "partitions",
        "arguments",
        "name",
        "partitions",
        "routingKeyStrategy",
        "arguments"
    ],
    "literals": [
        "\"x-max-age\"",
        "\"max-length-bytes\"",
        "\"x-stream-max-segment-size-bytes\"",
        "\"x-initial-cluster-size\"",
        "\"x-queue-type\"",
        "\"stream\"",
        "\"Changing x-queue-type argument is not permitted\"",
        "\"Stream name can't be empty\"",
        "\"Partitions number should be great then zero. Current value; %d\""
    ],
    "variables": [
        "name",
        "routingKeyStrategy"
    ],
    "comments": [],
    "docstrings": [
        "* Copyright 2021-2023 the original author or authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Builds a Spring AMQP Super Stream using a fluent API.\n * Based on <a href=\"https://www.rabbitmq.com/streams.html\">Streams documentation</a>\n *\n * @author Sergei Kurenchuk\n * @since 3.1",
        "* Creates a builder for Super Stream.\n\t * @param name stream name\n\t * @return the builder",
        "* Creates a builder for Super Stream.\n\t * @param name stream name\n\t * @param partitions partitions number\n\t * @return the builder",
        "* Set the maximum age retention per stream, which will remove the oldest data.\n\t * @param maxAge valid units: Y, M, D, h, m, s. For example: \"7D\" for a week\n\t * @return the builder",
        "* Set the maximum log size as the retention configuration for each stream,\n\t * which will truncate the log based on the data size.\n\t * @param bytes the max total size in bytes\n\t * @return the builder",
        "* Set the maximum size limit for segment file.\n\t * @param bytes the max segments size in bytes\n\t * @return the builder",
        "* Set initial replication factor for each partition.\n\t * @param count number of nodes per partition\n\t * @return the builder",
        "* Set extra argument which is not covered by builder's methods.\n\t * @param key argument name\n\t * @param value argument value\n\t * @return the builder",
        "* Set the stream name.\n\t * @param name the stream name.\n\t * @return the builder",
        "* Set the partitions number.\n\t * @param partitions the partitions number\n\t * @return the builder",
        "* Set a strategy to determine routing keys to use for the\n\t * partitions. The first parameter is the queue name, the second the number of\n\t * partitions, the returned list must have a size equal to the partitions.\n\t * @param routingKeyStrategy the strategy\n\t * @return the builder",
        "* Builds a final Super Stream.\n\t * @return the Super Stream instance"
    ],
    "functions": [
        "SuperStreamBuilder",
        "superStream",
        "SuperStreamBuilder",
        "superStream",
        "SuperStreamBuilder",
        "maxAge",
        "SuperStreamBuilder",
        "maxLength",
        "SuperStreamBuilder",
        "maxSegmentSize",
        "SuperStreamBuilder",
        "initialClusterSize",
        "SuperStreamBuilder",
        "withArgument",
        "SuperStreamBuilder",
        "name",
        "SuperStreamBuilder",
        "partitions",
        "SuperStreamBuilder",
        "routingKeyStrategy",
        "SuperStream",
        "build"
    ],
    "classes": [
        "SuperStreamBuilder"
    ]
}