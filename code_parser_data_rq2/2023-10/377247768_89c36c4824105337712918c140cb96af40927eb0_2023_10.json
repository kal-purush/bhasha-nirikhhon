{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "tape",
        "test",
        "t",
        "t",
        "__filename",
        "t",
        "kstest",
        "t",
        "tape",
        "test",
        "t",
        "values",
        "NaN",
        "noop",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "values",
        "i",
        "t",
        "value",
        "badValue",
        "kstest",
        "value",
        "tape",
        "test",
        "t",
        "values",
        "NaN",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "values",
        "i",
        "t",
        "value",
        "badValue",
        "kstest",
        "value",
        "tape",
        "test",
        "t",
        "values",
        "NaN",
        "noop",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "values",
        "i",
        "t",
        "value",
        "badValue",
        "kstest",
        "value",
        "tape",
        "test",
        "t",
        "values",
        "NaN",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "t",
        "value",
        "badValue",
        "kstest",
        "value",
        "tape",
        "test",
        "t",
        "values",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "RangeError",
        "values",
        "i",
        "t",
        "value",
        "badValue",
        "kstest",
        "value",
        "tape",
        "test",
        "t",
        "kstest",
        "data",
        "expected",
        "twosided",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "expected",
        "twosided",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "kstest",
        "data",
        "uniformCDF",
        "expected",
        "twosided",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "expected",
        "twosided",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "t",
        "tape",
        "test",
        "t",
        "x",
        "kstest",
        "x",
        "expected",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "expected",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "t",
        "tape",
        "test",
        "t",
        "x",
        "Float64Array",
        "kstest",
        "x",
        "expected",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "expected",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "t",
        "tape",
        "test",
        "t",
        "kstest",
        "data",
        "expected",
        "less",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "expected",
        "less",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "kstest",
        "data",
        "expected",
        "greater",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "expected",
        "greater",
        "delta",
        "abs",
        "expected",
        "tol",
        "EPS",
        "abs",
        "expected",
        "t",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "t",
        "tape",
        "test",
        "t",
        "actual",
        "kstest",
        "table",
        "actual",
        "t",
        "table",
        "t",
        "tape",
        "test",
        "t",
        "runif",
        "uniform",
        "x",
        "i",
        "i",
        "x",
        "i",
        "x",
        "i",
        "runif",
        "kstest",
        "x",
        "table",
        "kstest",
        "x",
        "table",
        "t",
        "table",
        "t",
        "tape",
        "test",
        "t",
        "kstest",
        "table",
        "t",
        "table",
        "t",
        "tape",
        "test",
        "t",
        "kstest",
        "table",
        "t",
        "table",
        "t",
        "contains",
        "table",
        "t",
        "tape",
        "test",
        "t",
        "kstest",
        "table",
        "t",
        "table",
        "t",
        "tape",
        "test",
        "t",
        "kstest",
        "values",
        "NaN",
        "noop",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "values",
        "i",
        "t",
        "value",
        "badValue",
        "value",
        "tape",
        "test",
        "t",
        "kstest",
        "values",
        "NaN",
        "noop",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "values",
        "i",
        "t",
        "value",
        "badValue",
        "value",
        "tape",
        "test",
        "t",
        "kstest",
        "values",
        "NaN",
        "noop",
        "i",
        "i",
        "values",
        "i",
        "t",
        "badValue",
        "values",
        "i",
        "values",
        "i",
        "t",
        "value",
        "badValue",
        "value"
    ],
    "literals": [
        "'use strict'",
        "'tape'",
        "'@stdlib/assert-contains'",
        "'@stdlib/random-base-uniform'",
        "'@stdlib/stats-base-dists-uniform-cdf'",
        "'@stdlib/math-base-special-abs'",
        "'@stdlib/array-float64'",
        "'@stdlib/constants-float64-eps'",
        "'./../../dist'",
        "'./../..xtures/r/data.json'",
        "'./../..xtures/r/less.json'",
        "'./../..xtures/r/greater.json'",
        "'./../..xtures/r/twosided.json'",
        "'main export is a function'",
        "'function'",
        "'main export is a function'",
        "'the function throws an error if the `x` argument is not a numeric array'",
        "'5'",
        "'5'",
        "'throws an error when provided '",
        "'normal'",
        "'the function throws an error if the `y` argument is not a string or function'",
        "'throws an error when provided '",
        "'the function throws an error if the supplied distribution parameter(s) are not numeric values'",
        "'5'",
        "'throws an error when provided '",
        "'exponential'",
        "'the function throws an error if provided an invalid option'",
        "'throws an error when provided '",
        "'not one of less, greater or two-sided'",
        "'throws an error when provided not less, greater or two-sided'",
        "'uniform'",
        "'alternative'",
        "'the function throws an error if the `alpha` option is a numeric value outside `[0,1]`'",
        "'throws an error when provided '",
        "'uniform'",
        "'alpha'",
        "'the function correctly computes the two-sided Kolmogorov-Smirnov test'",
        "'uniform'",
        "'within tolerance. p-value: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'within tolerance. test statistic: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'within tolerance. p-value: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'within tolerance. test statistic: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'the function correctly computes the two-sided Kolmogorov-Smirnov test for an already sorted array'",
        "'uniform'",
        "'sorted'",
        "'within tolerance. p-value: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'within tolerance. test statistic: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'the function correctly computes the two-sided Kolmogorov-Smirnov test for an already sorted typed array'",
        "'uniform'",
        "'sorted'",
        "'within tolerance. p-value: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'within tolerance. test statistic: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'the function correctly computes a one-sided Kolmogorov-Smirnov test'",
        "'uniform'",
        "'alternative'",
        "'less'",
        "'within tolerance. p-value: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'within tolerance. test statistic: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'uniform'",
        "'alternative'",
        "'greater'",
        "'within tolerance. p-value: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'within tolerance. test statistic: '",
        "'. E: '",
        "' Δ: '",
        "'. tol: '",
        "'the `.print()` method allows printing a formatted output table'",
        "'uniform'",
        "'string'",
        "'returns a string'",
        "'the `.print()` method allows printing a formatted output table for a one-sided Kolmogorov-Smirnov test'",
        "'seed'",
        "'uniform'",
        "'alternative'",
        "'less'",
        "'uniform'",
        "'alternative'",
        "'greater'",
        "'string'",
        "'returns a string'",
        "'the function returns an object with a `.print()` method that accepts a `digits` option to control the number of decimal digits displayed'",
        "'uniform'",
        "'digits'",
        "'string'",
        "'returns a pretty-printed table'",
        "'the function returns an object with a `.print()` method that accepts a `decision` option to control whether the test result should be displayed'",
        "'uniform'",
        "'decision'",
        "'string'",
        "'returns a pretty-printed table'",
        "'Test Decision'",
        "'table does not contain test decision'",
        "'the function returns an object with a `.print()` method that accepts an `options` object'",
        "'uniform'",
        "'string'",
        "'returns a pretty-printed table'",
        "'the function returns an object with a `.print()` method that throws an error if `options` is not a simple object'",
        "'uniform'",
        "'abc'",
        "'throws an error when provided '",
        "'the function returns an object with a `.print()` method that throws an error if the `digits` option is not a positive integer'",
        "'uniform'",
        "'abc'",
        "'throws an error when provided '",
        "'digits'",
        "'the function returns an object with a `.print()` method that throws an error if the `decision` option is not a boolean primitive'",
        "'uniform'",
        "'abc'",
        "'throws an error when provided '",
        "'decision'"
    ],
    "variables": [
        "tape",
        "contains",
        "uniform",
        "uniformCDF",
        "abs",
        "Float64Array",
        "EPS",
        "kstest",
        "data",
        "less",
        "greater",
        "twosided",
        "values",
        "i",
        "values",
        "i",
        "values",
        "i",
        "values",
        "i",
        "values",
        "i",
        "expected",
        "delta",
        "tol",
        "expected",
        "delta",
        "tol",
        "x",
        "expected",
        "delta",
        "tol",
        "x",
        "expected",
        "delta",
        "tol",
        "actual",
        "table",
        "table",
        "runif",
        "i",
        "x",
        "table",
        "table",
        "table",
        "values",
        "i",
        "values",
        "i",
        "values",
        "i"
    ],
    "comments": [
        "MODULES //",
        "FIXTURES //",
        "TESTS //",
        "Choosing the CDF via a string...",
        "Tested against R:",
        "Directly passing the CDF...",
        "Tested against R:",
        "Tested against R:",
        "eslint-disable-line max-len",
        "Tested against R:",
        "Tested against R:",
        "Tested against R:",
        "returns\n\t\tKolmogorov-Smirnov goodness-of-fit test\n\n\t\tNull hypothesis: the CDF of `x` is equal to the reference CDF\n\n\t\t\tpValue: 0.9722\n\t\t\tstatistic: 0.25\n\n\t\tTest Decision: Fail to reject null in favor of alternative at 5% significance level",
        "returns\n\t\tKolmogorov-Smirnov goodness-of-fit test\n\n\t\tNull hypothesis: the CDF of `x` is greater than or equal to the reference CDF\n\n\t\t\tpValue: 0.783\n\t\t\tstatistic: 0.0334\n\n\t\tTest Decision: Fail to reject null in favor of alternative at 5% significance level",
        "returns\n\t\tKolmogorov-Smirnov goodness-of-fit test\n\n\t\tNull hypothesis: the CDF of `x` is less than or equal to the reference CDF\n\n\t\t\tpValue: 0\n\t\t\tstatistic: 1\n\n\t\tTest Decision: Reject null in favor of alternative at 5% significance level",
        "returns\n\t\tKolmogorov-Smirnov goodness-of-fit test\n\n\t\tNull hypothesis: the CDF of `x` is equal to the reference CDF\n\n\t\t\tpValue: 0.972222\n\t\t\tstatistic: 0.25\n\n\t\tTest Decision: Fail to reject null in favor of alternative at 5% significance level",
        "returns\n\t\tKolmogorov-Smirnov goodness-of-fit test\n\n\t\tNull hypothesis: the CDF of `x` is equal to the reference CDF\n\n\t\t\tpValue: 0.9722\n\t\t\tstatistic: 0.25"
    ],
    "docstrings": [
        "* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License."
    ],
    "functions": [
        "badValue",
        "badValue",
        "badValue",
        "badValue",
        "badValue",
        "badValue",
        "badValue",
        "badValue"
    ],
    "classes": []
}