{
    "identifiers": [
        "os",
        "eth2spec",
        "phase0",
        "spec",
        "open",
        "f",
        "BeaconState",
        "deserialize",
        "f",
        "os",
        "stat",
        "st_size",
        "genesis_state",
        "latest_block_header",
        "copy",
        "genesis_state",
        "hash_tree_root",
        "genesis_state",
        "latest_block_header",
        "state_root",
        "Bytes32",
        "genesis_state",
        "genesis_time",
        "genesis_state",
        "hash_tree_root",
        "hex",
        "genesis_state",
        "latest_block_header",
        "slot",
        "genesis_state",
        "latest_block_header",
        "proposer_index",
        "genesis_state",
        "latest_block_header",
        "parent_root",
        "hex",
        "genesis_state",
        "latest_block_header",
        "state_root",
        "hex",
        "genesis_state",
        "latest_block_header",
        "body_root",
        "hex",
        "genesis_state",
        "latest_block_header",
        "hash_tree_root",
        "hex",
        "updated_header",
        "hash_tree_root",
        "hex",
        "genesis_state",
        "validators",
        "hash_tree_root",
        "hex",
        "genesis_state",
        "validators",
        "length",
        "len",
        "get_active_validator_indices",
        "genesis_state",
        "Epoch",
        "get_total_active_balance",
        "genesis_state",
        "sum",
        "genesis_state",
        "balances",
        "readonly_iter",
        "genesis_state",
        "eth1_data",
        "deposit_root",
        "hex",
        "genesis_state",
        "eth1_data",
        "deposit_count",
        "genesis_state",
        "eth1_data",
        "block_hash",
        "hex",
        "genesis_state",
        "eth1_deposit_index",
        "genesis_state",
        "fork",
        "current_version",
        "hex",
        "compute_fork_digest",
        "genesis_state",
        "fork",
        "current_version",
        "genesis_state",
        "validators",
        "hash_tree_root",
        "hex",
        "compute_fork_digest",
        "genesis_state",
        "fork",
        "current_version",
        "Root",
        "hex"
    ],
    "literals": [
        "'genesis.ssz'",
        "'rb'",
        "'genesis.ssz'",
        "f\"\"\"\ngenesis_time: {genesis_state.genesis_time}\ngenesis_state_root: 0x{genesis_state.hash_tree_root().hex()}\ngenesis_latest_block_header:\n  slot: {genesis_state.latest_block_header.slot}\n  proposer_index: {genesis_state.latest_block_header.proposer_index}\n  parent_root: 0x{genesis_state.latest_block_header.parent_root.hex()}\n  state_root: 0x{genesis_state.latest_block_header.state_root.hex()}\n  body_root: 0x{genesis_state.latest_block_header.body_root.hex()}\ngenesis_block_root_no_state_root: 0x{genesis_state.latest_block_header.hash_tree_root().hex()}\ngenesis_block_root_updated_state_root: 0x{updated_header.hash_tree_root().hex()}\ngenesis_validators_root: 0x{genesis_state.validators.hash_tree_root().hex()}\ngenesis_validators_count: {genesis_state.validators.length()}\ngenesis_active_validators_count: {len(get_active_validator_indices(genesis_state, Epoch(0)))}\ngenesis_total_active_stake_gwei: {get_total_active_balance(genesis_state)}\ngenesis_total_balance_gwei: {sum(genesis_state.balances.readonly_iter())}\neth1_data:\n  deposit_root: 0x{genesis_state.eth1_data.deposit_root.hex()}\n  deposit_count: {genesis_state.eth1_data.deposit_count}\n  block_hash: 0x{genesis_state.eth1_data.block_hash.hex()}\ndeposit index: {genesis_state.eth1_deposit_index}\ngenesis_fork_version: 0x{genesis_state.fork.current_version.hex()}\ngenesis_fork_digest: 0x{compute_fork_digest(genesis_state.fork.current_version, genesis_state.validators.hash_tree_root()).hex()}\npre_genesis_fork_digest: 0x{compute_fork_digest(genesis_state.fork.current_version, Root()).hex()}\n\"\"\""
    ],
    "variables": [
        "genesis_state",
        "updated_header",
        "updated_header",
        "state_root"
    ],
    "comments": [
        "from eth2spec.altair.spec import *",
        "from eth2spec.merge.spec import *"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}