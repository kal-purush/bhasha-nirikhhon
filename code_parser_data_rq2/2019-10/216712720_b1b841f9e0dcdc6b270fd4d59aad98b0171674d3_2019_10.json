{
    "identifiers": [
        "java",
        "io",
        "java",
        "io",
        "PrintStream",
        "java",
        "nio",
        "charset",
        "Charset",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Path",
        "java",
        "nio",
        "file",
        "Paths",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "org",
        "tensorflow",
        "DataType",
        "org",
        "tensorflow",
        "Graph",
        "org",
        "tensorflow",
        "Output",
        "org",
        "tensorflow",
        "Session",
        "org",
        "tensorflow",
        "Tensor",
        "org",
        "tensorflow",
        "TensorFlow",
        "org",
        "tensorflow",
        "types",
        "UInt8",
        "s",
        "url",
        "s",
        "s",
        "s",
        "TensorFlow",
        "version",
        "s",
        "s",
        "s",
        "s",
        "s",
        "s",
        "url",
        "s",
        "args",
        "args",
        "length",
        "printUsage",
        "err",
        "exit",
        "modelDir",
        "args",
        "imageFile",
        "args",
        "graphDef",
        "readAllBytesOrExit",
        "Paths",
        "get",
        "modelDir",
        "labels",
        "readAllLinesOrExit",
        "Paths",
        "get",
        "modelDir",
        "imageBytes",
        "readAllBytesOrExit",
        "Paths",
        "get",
        "imageFile",
        "image",
        "constructAndExecuteGraphToNormalizeImage",
        "imageBytes",
        "labelProbabilities",
        "executeInceptionGraph",
        "graphDef",
        "image",
        "bestLabelIdx",
        "maxIndex",
        "labelProbabilities",
        "format",
        "labels",
        "get",
        "bestLabelIdx",
        "labelProbabilities",
        "bestLabelIdx",
        "imageBytes",
        "g",
        "b",
        "g",
        "H",
        "W",
        "mean",
        "scale",
        "input",
        "b",
        "constant",
        "imageBytes",
        "output",
        "b",
        "div",
        "b",
        "sub",
        "b",
        "resizeBilinear",
        "b",
        "expandDims",
        "b",
        "cast",
        "b",
        "decodeJpeg",
        "input",
        "b",
        "constant",
        "b",
        "constant",
        "H",
        "W",
        "b",
        "constant",
        "mean",
        "b",
        "constant",
        "scale",
        "s",
        "g",
        "s",
        "runner",
        "fetch",
        "output",
        "op",
        "name",
        "run",
        "get",
        "expect",
        "graphDef",
        "image",
        "g",
        "g",
        "importGraphDef",
        "graphDef",
        "s",
        "g",
        "result",
        "s",
        "runner",
        "feed",
        "image",
        "fetch",
        "run",
        "get",
        "expect",
        "rshape",
        "result",
        "shape",
        "result",
        "numDimensions",
        "rshape",
        "format",
        "Arrays",
        "toString",
        "rshape",
        "nlabels",
        "rshape",
        "result",
        "copyTo",
        "nlabels",
        "probabilities",
        "best",
        "i",
        "i",
        "probabilities",
        "length",
        "i",
        "probabilities",
        "i",
        "probabilities",
        "best",
        "best",
        "i",
        "best",
        "path",
        "Files",
        "readAllBytes",
        "path",
        "e",
        "err",
        "path",
        "e",
        "getMessage",
        "exit",
        "path",
        "Files",
        "readAllLines",
        "path",
        "Charset",
        "forName",
        "e",
        "err",
        "path",
        "e",
        "getMessage",
        "exit",
        "g",
        "g",
        "g",
        "x",
        "y",
        "binaryOp",
        "x",
        "y",
        "x",
        "y",
        "binaryOp",
        "x",
        "y",
        "images",
        "size",
        "binaryOp3",
        "images",
        "size",
        "input",
        "dim",
        "binaryOp3",
        "input",
        "dim",
        "value",
        "dtype",
        "DataType",
        "fromClass",
        "g",
        "opBuilder",
        "addInput",
        "value",
        "setAttr",
        "dtype",
        "build",
        "output",
        "contents",
        "channels",
        "g",
        "opBuilder",
        "addInput",
        "contents",
        "setAttr",
        "channels",
        "build",
        "output",
        "name",
        "value",
        "t",
        "Tensor",
        "create",
        "value",
        "g",
        "opBuilder",
        "name",
        "setAttr",
        "DataType",
        "fromClass",
        "setAttr",
        "t",
        "build",
        "output",
        "name",
        "value",
        "constant",
        "name",
        "value",
        "name",
        "value",
        "constant",
        "name",
        "value",
        "name",
        "value",
        "constant",
        "name",
        "value",
        "name",
        "value",
        "constant",
        "name",
        "value",
        "in1",
        "in2",
        "g",
        "opBuilder",
        "addInput",
        "in1",
        "addInput",
        "in2",
        "build",
        "output",
        "in1",
        "in2",
        "g",
        "opBuilder",
        "addInput",
        "in1",
        "addInput",
        "in2",
        "build",
        "output",
        "g"
    ],
    "literals": [
        "\"https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip\"",
        "\"Java program that uses a pre-trained Inception model (http://arxiv.org/abs/1512.00567)\"",
        "\"to label JPEG images.\"",
        "\"TensorFlow version: \"",
        "\"Usage: label_image <model dir> <image file>\"",
        "\"Where:\"",
        "\"<model dir> is a directory containing the unzipped contents of the inception model\"",
        "\"            (from \"",
        "\")\"",
        "\"<image file> is the path to a JPEG image file\"",
        "\"tensorflow_inception_graph.pb\"",
        "\"imagenet_comp_graph_label_strings.txt\"",
        "\"BEST MATCH: %s (%.2f%% likely)\"",
        "\"input\"",
        "\"make_batch\"",
        "\"size\"",
        "\"mean\"",
        "\"scale\"",
        "\"input\"",
        "\"output\"",
        "\"Expected model to produce a [1 N] shaped tensor where N is the number of labels, instead it produced one with shape %s\"",
        "\"Failed to read [\"",
        "\"]: \"",
        "\"UTF-8\"",
        "\"Failed to read [\"",
        "\"]: \"",
        "\"Div\"",
        "\"Sub\"",
        "\"ResizeBilinear\"",
        "\"ExpandDims\"",
        "\"Cast\"",
        "\"Cast\"",
        "\"DstT\"",
        "\"DecodeJpeg\"",
        "\"DecodeJpeg\"",
        "\"channels\"",
        "\"Const\"",
        "\"dtype\"",
        "\"value\""
    ],
    "variables": [
        "g"
    ],
    "comments": [
        "Some constants specific to the pre-trained model at:",
        "https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip",
        "",
        "- The model was trained with images scaled to 224x224 pixels.",
        "- The colors, represented as R, G, B in 1-byte each were converted to",
        "float using (value - Mean)/Scale.",
        "Since the graph is being constructed once per execution here, we can use a constant for the",
        "input image. If the graph were to be re-used for multiple input images, a placeholder would",
        "have been more appropriate.",
        "Generally, there may be multiple output tensors, all of them must be closed to prevent resource leaks.",
        "Generally, there may be multiple output tensors, all of them must be closed to prevent resource leaks.",
        "In the fullness of time, equivalents of the methods of this class should be auto-generated from",
        "the OpDefs linked into libtensorflow_jni.so. That would match what is done in other languages",
        "like Python, C++ and Go."
    ],
    "docstrings": [
        "Sample use of the TensorFlow Java API to label images using a pre-trained model."
    ],
    "functions": [
        "printUsage",
        "main",
        "constructAndExecuteGraphToNormalizeImage",
        "executeInceptionGraph",
        "maxIndex",
        "readAllBytesOrExit",
        "readAllLinesOrExit",
        "GraphBuilder",
        "div",
        "sub",
        "resizeBilinear",
        "expandDims",
        "cast",
        "decodeJpeg",
        "constant",
        "constant",
        "constant",
        "constant",
        "constant",
        "binaryOp",
        "binaryOp3"
    ],
    "classes": [
        "HelloTensorflow",
        "GraphBuilder"
    ]
}