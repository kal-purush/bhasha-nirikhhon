{
    "identifiers": [
        "React",
        "withRouter",
        "get",
        "isArrayLikeObject",
        "toLower",
        "PropTypes",
        "styled",
        "compose",
        "injectState",
        "jwtDecode",
        "reactStringReplace",
        "FacebookLogin",
        "GoogleLogin",
        "OrcidLogin",
        "OrcidRedirect",
        "RedirectLogin",
        "ModalWarning",
        "Box",
        "Column",
        "ExternalLink",
        "PromptMessageContainer",
        "PromptMessageContent",
        "withApi",
        "logoutAll",
        "trackUserInteraction",
        "TRACKING_EVENTS",
        "googleLogin",
        "facebookLogin",
        "getProfile",
        "createProfile",
        "getUser",
        "getCavaticaUser",
        "allRedirectUris",
        "egoApiRoot",
        "orcidAuthAppId",
        "FENCES",
        "CAVATICA",
        "GOOGLE",
        "FACEBOOK",
        "ORCID",
        "LOGIN_ERROR_DETAILS",
        "getAccessToken",
        "createExampleQueries",
        "store",
        "loginSuccess",
        "loginFailure",
        "isAdminToken",
        "validatedPayload",
        "get",
        "validatedPayload",
        "jwtUser",
        "jwtUser",
        "roles",
        "roles",
        "isArrayLikeObject",
        "roles",
        "roles",
        "validateJWT",
        "jwt",
        "jwtDecode",
        "jwt",
        "validatedPayload",
        "get",
        "validatedPayload",
        "isAdminToken",
        "status",
        "toLower",
        "isCurrent",
        "isApproved",
        "validatedPayload",
        "initProfile",
        "api",
        "user",
        "egoId",
        "createProfile",
        "api",
        "user",
        "createExampleQueries",
        "api",
        "egoId",
        "profileCreation",
        "sampleQueryCreation",
        "x",
        "handleJWT",
        "validateJWT",
        "jwtData",
        "setToken",
        "store",
        "loginFailure",
        "setToken",
        "jwt",
        "jwtData",
        "jwtData",
        "getProfile",
        "api",
        "existingProfile",
        "initProfile",
        "api",
        "user",
        "egoId",
        "existingProfile",
        "newProfile",
        "user",
        "user",
        "setUser",
        "loggedInUser",
        "onFinish",
        "onFinish",
        "loggedInUser",
        "store",
        "loginSuccess",
        "loggedInUser",
        "err",
        "err",
        "store",
        "loginFailure",
        "jwtData",
        "fetchIntegrationTokens",
        "getCavaticaUser",
        "userData",
        "setIntegrationToken",
        "CAVATICA",
        "userData",
        "error",
        "error",
        "FENCES",
        "fence",
        "getAccessToken",
        "api",
        "fence",
        "key",
        "setIntegrationToken",
        "fence",
        "key",
        "res",
        "res",
        "React",
        "PropTypes",
        "PropTypes",
        "PropTypes",
        "handler",
        "token",
        "error",
        "error",
        "response",
        "handleJWT",
        "response",
        "success",
        "success",
        "provider",
        "fetchIntegrationTokens",
        "logoutAll",
        "error",
        "logoutAll",
        "label",
        "pathname",
        "TRACKING_EVENTS",
        "TRACKING_EVENTS",
        "trackUserInteraction",
        "actionType",
        "actionType",
        "errorField",
        "errorField",
        "compose",
        "injectState",
        "withRouter",
        "withApi",
        "LoginContainer"
    ],
    "literals": [
        "'react'",
        "'react-router-dom'",
        "'lodash'",
        "'prop-types'",
        "'react-emotion'",
        "'recompose'",
        "'freactal'",
        "'jwt-decode'",
        "'react-string-replace'",
        "'components/loginButtons/FacebookLogin'",
        "'components/loginButtons/GoogleLogin'",
        "'components/loginButtons/OrcidLogin'",
        "'components/Login/OrcidRedirect'",
        "'components/loginButtons/RedirectLogin'",
        "'components/Modal'",
        "'uikit/Core'",
        "'uikit/Column'",
        "'uikit/ExternalLink'",
        "'uikit/PromptMessage'",
        "'services/api'",
        "'services/login'",
        "'services/analyticsTracking'",
        "'services/login'",
        "'services/profiles'",
        "'services/cavatica'",
        "'common/injectGlobals'",
        "'common/constants'",
        "'services/fence'",
        "'services/riffQueries'",
        "'../store'",
        "'../store/actionCreators/user'",
        "'context.user'",
        "'ADMIN'",
        "'ADMIN'",
        "'context.user.status'",
        "''",
        "'approved'",
        "'Error during login'",
        "'Error getting Gen3 API Key'",
        "'Network Error'",
        "'/join'",
        "${actionType} with Provider"
    ],
    "variables": [
        "isAdminToken",
        "jwtUser",
        "roles",
        "validateJWT",
        "validatedPayload",
        "isCurrent",
        "status",
        "isApproved",
        "initProfile",
        "profileCreation",
        "sampleQueryCreation",
        "x",
        "handleJWT",
        "jwtData",
        "user",
        "egoId",
        "existingProfile",
        "newProfile",
        "loggedInUser",
        "fetchIntegrationTokens",
        "response",
        "actionType"
    ],
    "comments": [
        "TODO extract into another file",
        "maintain backward compatibility",
        "clear the user details in the redux store",
        "store the user details in the redux store",
        "clear the user details in the redux store",
        "Could not retrieve cavatica user info, nothing to do.",
        "Get Gen3 Secret here"
    ],
    "docstrings": [
        "* fetchIntegrationTokens\n * For all SERVICES listed in common/constants, call the key-store to retrieve any keys stored\n *  for the user.\n * Each call to key-store is resolved separately and asynchronously. Their value will be added\n *  to state once returned."
    ],
    "functions": [
        "render"
    ],
    "classes": [
        "LoginContainer"
    ]
}