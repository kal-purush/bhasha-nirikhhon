{
    "identifiers": [
        "functools",
        "wraps",
        "typing",
        "Optional",
        "Callable",
        "Union",
        "Any",
        "app",
        "wrapper",
        "models",
        "device",
        "Device",
        "schemes",
        "device_not_found",
        "permission_denied",
        "device_powered_off",
        "error",
        "error",
        "errors",
        "Callable",
        "Callable",
        "f",
        "Callable",
        "Callable",
        "wraps",
        "f",
        "data",
        "user",
        "data",
        "user",
        "func",
        "errors",
        "Union",
        "Any",
        "func",
        "args",
        "MicroserviceException",
        "exception",
        "exception",
        "error",
        "isinstance",
        "result",
        "result",
        "data",
        "user",
        "result",
        "f",
        "args",
        "errors",
        "inner",
        "deco",
        "data",
        "user",
        "Device",
        "Optional",
        "Device",
        "wrapper",
        "session",
        "query",
        "Device",
        "get",
        "data",
        "device",
        "MicroserviceException",
        "device_not_found",
        "device",
        "data",
        "user",
        "device",
        "Device",
        "Device",
        "device",
        "check_access",
        "user",
        "MicroserviceException",
        "permission_denied",
        "device",
        "data",
        "user",
        "device",
        "Device",
        "Device",
        "device",
        "powered_on",
        "MicroserviceException",
        "device_powered_off",
        "device"
    ],
    "literals": [
        "\"device_uuid\""
    ],
    "variables": [
        "error",
        "args",
        "result",
        "result",
        "args",
        "inner",
        "__errors__",
        "device"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "register_errors",
        "deco",
        "inner",
        "device_exists",
        "can_access_device",
        "device_powered_on"
    ],
    "classes": [
        "MicroserviceException"
    ]
}