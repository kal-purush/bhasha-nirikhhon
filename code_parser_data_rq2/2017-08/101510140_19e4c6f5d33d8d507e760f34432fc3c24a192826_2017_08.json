{
    "identifiers": [
        "modules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "installedModules",
        "moduleId",
        "moduleId",
        "modules",
        "moduleId",
        "__webpack_require__",
        "__webpack_require__",
        "modules",
        "__webpack_require__",
        "installedModules",
        "__webpack_require__",
        "exports",
        "name",
        "getter",
        "__webpack_require__",
        "exports",
        "name",
        "exports",
        "name",
        "getter",
        "__webpack_require__",
        "getDefault",
        "getModuleExports",
        "__webpack_require__",
        "getter",
        "getter",
        "getter",
        "__webpack_require__",
        "property",
        "property",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "ProgressBar",
        "rainbowBarColors",
        "element",
        "element",
        "Demo",
        "progress",
        "progress",
        "Demo",
        "Demo",
        "Demo",
        "progressEventHandler",
        "Demo",
        "parseInt",
        "targetElement",
        "progress",
        "progress",
        "progress",
        "DEFAULT_SPOTIFY_COLOR",
        "SECONDARY_COLOR",
        "progress",
        "rainbowColor",
        "SECONDARY_COLOR",
        "Demo",
        "demoInstance",
        "initialLoad",
        "__webpack_exports__",
        "__webpack_require__",
        "__webpack_require__",
        "DEFAULT_PRIMARY_COLOR",
        "DEFAULT_SECONDARY_COLOR",
        "selector",
        "selector",
        "selector",
        "elem",
        "selector",
        "elem",
        "selector",
        "HTMLElement",
        "selector",
        "selector",
        "options",
        "options",
        "DEFAULT_PROGRESS_WIDTH",
        "options",
        "DEFAULT_PROGRESS_HEIGHT",
        "options",
        "options",
        "options",
        "defaultBarColors",
        "getValidSelector",
        "options",
        "ProgressBar",
        "create",
        "container",
        "container",
        "container",
        "container",
        "container",
        "progressBarBg",
        "progressBarFg",
        "ProgressBar",
        "_attachEmitter",
        "mitt",
        "emitter",
        "ProgressBar",
        "setProgress",
        "progress",
        "progress",
        "progress",
        "progress",
        "progress",
        "ProgressBar",
        "progressEvents",
        "ProgressBar",
        "_setProgressColors",
        "fgColor",
        "bgColor",
        "ProgressBar",
        "_setSize",
        "ProgressBar",
        "show",
        "isVisible",
        "isVisible",
        "ProgressBar",
        "exports",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "__webpack_require__",
        "exports",
        "__webpack_require__",
        "__dirname",
        "__webpack_require__",
        "path",
        "__dirname",
        "exports",
        "exports",
        "__webpack_require__",
        "process",
        "parts",
        "allowAboveRoot",
        "parts",
        "i",
        "i",
        "parts",
        "i",
        "last",
        "parts",
        "i",
        "last",
        "parts",
        "i",
        "up",
        "up",
        "parts",
        "i",
        "up",
        "allowAboveRoot",
        "up",
        "up",
        "parts",
        "parts",
        "filename",
        "splitPathRe",
        "filename",
        "exports",
        "arguments",
        "i",
        "resolvedAbsolute",
        "i",
        "i",
        "arguments",
        "i",
        "process",
        "path",
        "path",
        "resolvedPath",
        "path",
        "resolvedPath",
        "resolvedAbsolute",
        "path",
        "resolvedPath",
        "normalizeArray",
        "resolvedPath",
        "p",
        "p",
        "resolvedAbsolute",
        "resolvedAbsolute",
        "resolvedPath",
        "exports",
        "path",
        "exports",
        "path",
        "substr",
        "path",
        "path",
        "normalizeArray",
        "path",
        "p",
        "p",
        "isAbsolute",
        "path",
        "isAbsolute",
        "path",
        "path",
        "trailingSlash",
        "path",
        "isAbsolute",
        "path",
        "exports",
        "path",
        "path",
        "exports",
        "arguments",
        "exports",
        "paths",
        "p",
        "index",
        "p",
        "p",
        "exports",
        "to",
        "exports",
        "to",
        "exports",
        "to",
        "arr",
        "start",
        "arr",
        "start",
        "arr",
        "start",
        "arr",
        "end",
        "end",
        "arr",
        "end",
        "start",
        "end",
        "arr",
        "start",
        "end",
        "start",
        "trim",
        "trim",
        "to",
        "fromParts",
        "toParts",
        "i",
        "length",
        "i",
        "fromParts",
        "i",
        "toParts",
        "i",
        "samePartsLength",
        "i",
        "i",
        "fromParts",
        "i",
        "outputParts",
        "outputParts",
        "outputParts",
        "toParts",
        "samePartsLength",
        "outputParts",
        "exports",
        "exports",
        "exports",
        "path",
        "splitPath",
        "path",
        "result",
        "result",
        "root",
        "dir",
        "dir",
        "dir",
        "dir",
        "dir",
        "root",
        "dir",
        "exports",
        "path",
        "ext",
        "splitPath",
        "path",
        "ext",
        "f",
        "ext",
        "ext",
        "f",
        "f",
        "f",
        "ext",
        "f",
        "exports",
        "path",
        "splitPath",
        "path",
        "xs",
        "f",
        "xs",
        "xs",
        "f",
        "i",
        "xs",
        "i",
        "f",
        "xs",
        "i",
        "i",
        "xs",
        "res",
        "xs",
        "i",
        "res",
        "start",
        "len",
        "start",
        "len",
        "start",
        "len",
        "start",
        "start",
        "start",
        "start",
        "len",
        "exports",
        "__webpack_require__",
        "exports",
        "setTimeout",
        "cachedSetTimeout",
        "setTimeout",
        "cachedSetTimeout",
        "defaultSetTimout",
        "e",
        "cachedSetTimeout",
        "defaultSetTimout",
        "clearTimeout",
        "cachedClearTimeout",
        "clearTimeout",
        "cachedClearTimeout",
        "defaultClearTimeout",
        "e",
        "cachedClearTimeout",
        "defaultClearTimeout",
        "fun",
        "cachedSetTimeout",
        "setTimeout",
        "setTimeout",
        "fun",
        "cachedSetTimeout",
        "defaultSetTimout",
        "cachedSetTimeout",
        "setTimeout",
        "cachedSetTimeout",
        "setTimeout",
        "setTimeout",
        "fun",
        "cachedSetTimeout",
        "fun",
        "e",
        "cachedSetTimeout",
        "fun",
        "e",
        "cachedSetTimeout",
        "fun",
        "marker",
        "cachedClearTimeout",
        "clearTimeout",
        "clearTimeout",
        "marker",
        "cachedClearTimeout",
        "defaultClearTimeout",
        "cachedClearTimeout",
        "clearTimeout",
        "cachedClearTimeout",
        "clearTimeout",
        "clearTimeout",
        "marker",
        "cachedClearTimeout",
        "marker",
        "e",
        "cachedClearTimeout",
        "marker",
        "e",
        "cachedClearTimeout",
        "marker",
        "draining",
        "currentQueue",
        "draining",
        "currentQueue",
        "queue",
        "currentQueue",
        "queue",
        "queueIndex",
        "queue",
        "drainQueue",
        "draining",
        "runTimeout",
        "cleanUpNextTick",
        "draining",
        "queue",
        "len",
        "currentQueue",
        "queue",
        "queue",
        "queueIndex",
        "len",
        "currentQueue",
        "currentQueue",
        "queueIndex",
        "queueIndex",
        "len",
        "queue",
        "currentQueue",
        "draining",
        "runClearTimeout",
        "timeout",
        "process",
        "fun",
        "arguments",
        "arguments",
        "i",
        "arguments",
        "i",
        "args",
        "i",
        "arguments",
        "i",
        "queue",
        "Item",
        "fun",
        "args",
        "queue",
        "draining",
        "runTimeout",
        "drainQueue",
        "fun",
        "array",
        "fun",
        "array",
        "Item",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "noop",
        "process",
        "name",
        "process",
        "name",
        "process",
        "process",
        "dir",
        "process",
        "__webpack_exports__",
        "__webpack_require__",
        "__webpack_exports__",
        "all",
        "all",
        "all",
        "on",
        "handler",
        "all",
        "all",
        "handler",
        "off",
        "handler",
        "all",
        "all",
        "all",
        "handler",
        "emit",
        "evt",
        "all",
        "handler",
        "handler",
        "evt",
        "all",
        "handler",
        "handler",
        "evt",
        "__webpack_exports__",
        "mitt"
    ],
    "literals": [
        "'default'",
        "'a'",
        "\"\"",
        "'.bar-goes-here'",
        "'190px'",
        "'6px'",
        "'.progress .value'",
        "'.complete .value'",
        "'.progress-controls .control'",
        "'click'",
        "'updateprogress'",
        "'complete'",
        "'%'",
        "'Yes indeed'",
        "'#1db954'",
        "'#292929'",
        "\"hsl(\"",
        "\",80%,50%)\"",
        "\"use strict\"",
        "'90px'",
        "'4px'",
        "'#1db954'",
        "'#292929'",
        "'string'",
        "'No element for the given `selector`'",
        "'`selector` is not of valid type'",
        "'div'",
        "'progress-bar'",
        "<div class=\"progress-bar__bg\">\n            <div class=\"progress-bar__fg\"></div>\n        </div>",
        "'div.progress-bar__bg'",
        "'div.progress-bar__fg'",
        "'%'",
        "'complete'",
        "'updateprogress'",
        "''",
        "'none'",
        "'./index.js'",
        "'bundle.js'",
        "'dist'",
        "\"/\"",
        "'.'",
        "'..'",
        "'..'",
        "''",
        "'string'",
        "'Arguments to path.resolve must be strings'",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "'/'",
        "''",
        "'.'",
        "'/'",
        "'/'",
        "'/'",
        "'.'",
        "'/'",
        "'/'",
        "''",
        "'/'",
        "'string'",
        "'Arguments to path.join must be strings'",
        "'/'",
        "''",
        "''",
        "'/'",
        "'/'",
        "'..'",
        "'/'",
        "'/'",
        "':'",
        "'.'",
        "'ab'",
        "'b'",
        "'setTimeout has not been defined'",
        "'clearTimeout has not been defined'",
        "'function'",
        "'function'",
        "'browser'",
        "''",
        "'process.binding is not supported'",
        "'/'",
        "'process.chdir is not supported'",
        "\"use strict\"",
        "\"__esModule\"",
        "'*'",
        "\"default\""
    ],
    "variables": [
        "installedModules",
        "getter",
        "ProgressBar",
        "targetElement",
        "DEFAULT_SPOTIFY_COLOR",
        "SECONDARY_COLOR",
        "rainbowColor",
        "demoInstance",
        "mitt",
        "DEFAULT_PROGRESS_WIDTH",
        "DEFAULT_PROGRESS_HEIGHT",
        "DEFAULT_PRIMARY_COLOR",
        "DEFAULT_SECONDARY_COLOR",
        "INITIAL_CONTAINER_STYLES",
        "INITIAL_PROGRESS_BAR_FOREGROUND",
        "INITIAL_PROGRESS_BAR_BACKGROUND",
        "elem",
        "container",
        "progressBarBg",
        "progressBarFg",
        "emitter",
        "fgColor",
        "bgColor",
        "path",
        "up",
        "i",
        "last",
        "splitPathRe",
        "splitPath",
        "resolvedPath",
        "resolvedAbsolute",
        "i",
        "path",
        "isAbsolute",
        "trailingSlash",
        "paths",
        "start",
        "end",
        "fromParts",
        "toParts",
        "length",
        "samePartsLength",
        "length",
        "i",
        "outputParts",
        "i",
        "samePartsLength",
        "result",
        "root",
        "dir",
        "f",
        "res",
        "i",
        "substr",
        "process",
        "cachedSetTimeout",
        "cachedClearTimeout",
        "queue",
        "draining",
        "currentQueue",
        "queueIndex",
        "timeout",
        "len",
        "args",
        "i"
    ],
    "comments": [
        "webpackBootstrap",
        "The module cache",
        "The require function",
        "Check if module is in cache",
        "Create a new module (and put it into the cache)",
        "Execute the module function",
        "Flag the module as loaded",
        "Return the exports of the module",
        "expose the modules object (__webpack_modules__)",
        "expose the module cache",
        "define getter function for harmony exports",
        "getDefaultExport function for compatibility with non-harmony modules",
        "Object.prototype.hasOwnProperty.call",
        "__webpack_public_path__",
        "Load entry module and return exports",
        "0",
        "",
        "Make use of EventEmitter afterwards",
        "Right now the ProgressBar is created for us,",
        "in future, there can be a dedicated demo to do this for us",
        "Attaching the change progress listener to all of the controls",
        "Listening for logs emitted from the event emitter with ProgressBar",
        "Calling for the first time with initial progress",
        "",
        "1",
        "",
        "this._emitter = mitt();",
        "this.on   = this._emitter.on;",
        "this.off  = this._emitter.off;",
        "this.emit = this._emitter.emit;",
        "Initialization to display the progress bar appropriately",
        "Initializes the progress specified or the default one",
        "Assigning all the emitter properties to emitter",
        "",
        "2",
        "",
        "",
        "3",
        "4",
        "",
        "WEBPACK VAR INJECTION",
        "WEBPACK VAR INJECTION",
        "",
        "5",
        "",
        "WEBPACK VAR INJECTION",
        "Copyright Joyent, Inc. and other Node contributors.",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a",
        "copy of this software and associated documentation files (the",
        "\"Software\"), to deal in the Software without restriction, including",
        "without limitation the rights to use, copy, modify, merge, publish,",
        "distribute, sublicense, and/or sell copies of the Software, and to permit",
        "persons to whom the Software is furnished to do so, subject to the",
        "following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included",
        "in all copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS",
        "OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF",
        "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN",
        "NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,",
        "DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR",
        "OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE",
        "USE OR OTHER DEALINGS IN THE SOFTWARE.",
        "resolves . and .. elements in a path array with directory names there",
        "must be no slashes, empty elements, or device names (c:\\) in the array",
        "(so also no leading and trailing slashes - it does not distinguish",
        "relative and absolute paths)",
        "if the path tries to go above the root, `up` ends up > 0",
        "if the path is allowed to go above the root, restore leading ..s",
        "Split a filename into [root, dir, basename, ext], unix version",
        "'root' is just a slash, or nothing.",
        "path.resolve([from ...], to)",
        "posix version",
        "Skip empty and invalid entries",
        "At this point the path should be resolved to a full absolute path, but",
        "handle relative paths to be safe (might happen when process.cwd() fails)",
        "Normalize the path",
        "path.normalize(path)",
        "posix version",
        "Normalize the path",
        "posix version",
        "posix version",
        "path.relative(from, to)",
        "posix version",
        "No dirname whatsoever",
        "It has a dirname, strip trailing slash",
        "TODO: make this comparison case-insensitive on windows?",
        "String.prototype.substr - negative index don't work in IE8",
        "WEBPACK VAR INJECTION",
        "",
        "6",
        "",
        "shim for using process in browser",
        "cached from whatever global is present so that test runners that stub it",
        "don't break things.  But we need to wrap it in a try catch in case it is",
        "wrapped in strict mode code which doesn't define any globals.  It's inside a",
        "function because try/catches deoptimize in certain engines.",
        "normal enviroments in sane situations",
        "if setTimeout wasn't available but was latter defined",
        "when when somebody has screwed with setTimeout but no I.E. maddness",
        "When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally",
        "same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error",
        "normal enviroments in sane situations",
        "if clearTimeout wasn't available but was latter defined",
        "when when somebody has screwed with setTimeout but no I.E. maddness",
        "When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally",
        "same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.",
        "Some versions of I.E. have different rules for clearTimeout vs setTimeout",
        "v8 likes predictible objects",
        "empty string to avoid regexp issues",
        "",
        "7",
        "",
        "",
        "An event handler can take an optional event argument",
        "and should not return a value",
        "An array of all currently registered event handlers for a type",
        "A map of event types and their corresponding event handlers.",
        "Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}",
        "harmony default export",
        "# sourceMappingURL=mitt.es.js.map",
        ""
    ],
    "docstrings": [
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "***",
        "*********************************************************************",
        "***",
        "* Instance of Demo Class to call the Functions related \n * to increasing the progress",
        "* Controls for the progress within the JavaScript Application",
        "* Sets the progress in percentage",
        "* Sets the Value of complete Log",
        "*",
        "* Change progress of the function based on the click",
        "* Custom function to display different barColors on different \n * progress that's happening",
        "* Making APIs more extensible by letting the API consumer \n * extend the interfaces \n * for own purpose.\n * \n * Doing it by using callbacks at first within a ProgressBar\n * \n * ProgressBar that contains an argument map\n * containing the following options\n * - width\n * - height\n * - selector\n * \n * Displays a progress bar and based on the progress of the progress bar also allows\n * us to set the color of the bar",
        "* Returns a valid selector for the passed argument\n * based on certain validations",
        "* Validation not important since defaults are there",
        "* Progress in percentage",
        "* Callback for letting the developers change the color of par dynamiclly based on progress\n     * \n     * function with barColor, accept a percentage and provide\n     * an array of two colors primary and secondary",
        "* Method is private and is inaccessible from the outside",
        "* Method `create` creates the progress bar with the elements\n * that are required",
        "* Container for the Progress Bar\n     * Separate elements are found in the future using (querySelector)s",
        "* Add default styling here for the progress bar\n     * to make them look beautiful when they first\n     * appear on our front end",
        "* Attaches the EventEmitter to the progress bar",
        "* Sets the progress for ProgressBar",
        "* Sets the color for the progress bar",
        "* Toggles the display of the ProgressBar",
        "* Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt",
        "* Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt",
        "* Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberof mitt",
        "***"
    ],
    "functions": [
        "__webpack_require__",
        "Demo",
        "rainbowBarColors",
        "initialLoad",
        "defaultBarColors",
        "getValidSelector",
        "ProgressBar",
        "normalizeArray",
        "trim",
        "defaultSetTimout",
        "defaultClearTimeout",
        "runTimeout",
        "runClearTimeout",
        "cleanUpNextTick",
        "drainQueue",
        "Item",
        "noop",
        "mitt"
    ],
    "classes": []
}