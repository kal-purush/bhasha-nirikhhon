{
    "identifiers": [
        "io",
        "github",
        "eclipseironworks",
        "mc",
        "eclipseraces",
        "io",
        "github",
        "eclipseironworks",
        "mc",
        "eclipseraces",
        "Properties",
        "Effects",
        "IRacialEffect",
        "io",
        "github",
        "eclipseironworks",
        "mc",
        "eclipseraces",
        "events",
        "RaceChangeEvent",
        "org",
        "spongepowered",
        "api",
        "Sponge",
        "org",
        "spongepowered",
        "api",
        "command",
        "CommandSource",
        "org",
        "spongepowered",
        "api",
        "entity",
        "living",
        "player",
        "Player",
        "org",
        "spongepowered",
        "api",
        "cause",
        "Cause",
        "org",
        "spongepowered",
        "api",
        "text",
        "Text",
        "java",
        "util",
        "ECharacter",
        "race",
        "cause",
        "e",
        "e",
        "uuid",
        "player",
        "race",
        "raceID",
        "activeEffects",
        "raceSetAtStart",
        "builder",
        "player",
        "builder",
        "player",
        "raceID",
        "builder",
        "raceID",
        "uuid",
        "builder",
        "uuid",
        "Override",
        "Override",
        "uuid",
        "Override",
        "player",
        "Override",
        "race",
        "raceID",
        "Override",
        "raceSetAtStart",
        "newRace",
        "cause",
        "e",
        "activeEffects",
        "remove",
        "e",
        "e",
        "newRace",
        "getEffects",
        "apply",
        "e",
        "Sponge",
        "getEventManager",
        "post",
        "player",
        "race",
        "newRace",
        "cause",
        "race",
        "newRace",
        "raceID",
        "newRace",
        "getRacialID",
        "Override",
        "newRace",
        "cause",
        "reason",
        "cause",
        "first",
        "reason",
        "isPresent",
        "reason",
        "get",
        "COMMAND",
        "raceSetAtStart",
        "player",
        "sendMessage",
        "Text",
        "of",
        "player",
        "sendMessage",
        "Text",
        "of",
        "changeRace",
        "newRace",
        "cause",
        "ADMIN_COMMAND",
        "sourceOptional",
        "cause",
        "first",
        "sourceOptional",
        "isPresent",
        "source",
        "sourceOptional",
        "get",
        "source",
        "player",
        "sendMessage",
        "Text",
        "of",
        "source",
        "getName",
        "player",
        "sendMessage",
        "Text",
        "of",
        "changeRace",
        "newRace",
        "cause",
        "QUEST",
        "player",
        "sendMessage",
        "Text",
        "of",
        "Override",
        "e",
        "activeEffects",
        "contains",
        "e",
        "activeEffects",
        "add",
        "e",
        "e",
        "onApply",
        "player",
        "e",
        "activeEffects",
        "remove",
        "e",
        "e",
        "onRemove",
        "player",
        "uuid",
        "uuid",
        "uuid",
        "p",
        "player",
        "p",
        "uuid",
        "p",
        "getUniqueId",
        "race",
        "race",
        "race",
        "i",
        "raceID",
        "i"
    ],
    "literals": [
        "\"You may not change your race.\"",
        "\"A fine choice indeed.\"",
        "\" has changed your race.\"",
        "\"Something has changed your race.\"",
        "\"How in the hell, this wasn't implemented.\""
    ],
    "variables": [
        "uuid",
        "player",
        "race",
        "raceID"
    ],
    "comments": [
        "ICharacterHealth getHealth();",
        "protected ICharacterHealth health;"
    ],
    "docstrings": [
        "@Override\n            public ICharacterHealth getHealth()\n            {\n                return health;\n            }",
        "public Builder health(ICharacterHealth health)\n        {\n            this.health = health;\n            return this;\n        }"
    ],
    "functions": [
        "UUID",
        "getUUID",
        "Player",
        "getPlayer",
        "Race",
        "getRace",
        "setRace",
        "apply",
        "remove",
        "getRaceID",
        "hasChosenCharacter",
        "isReal",
        "DefaultCharacter",
        "DefaultCharacter",
        "isReal",
        "UUID",
        "getUUID",
        "Player",
        "getPlayer",
        "Race",
        "getRace",
        "getRaceID",
        "hasChosenCharacter",
        "changeRace",
        "setRace",
        "apply",
        "remove",
        "Builder",
        "builder",
        "Builder",
        "Builder",
        "uuid",
        "Builder",
        "player",
        "Builder",
        "race",
        "Builder",
        "raceID",
        "ECharacter",
        "build"
    ],
    "classes": [
        "Hidden",
        "DefaultCharacter",
        "Builder"
    ]
}