{
    "identifiers": [
        "mongodb",
        "config",
        "mongodb",
        "mongodb",
        "config",
        "config",
        "MongoDbConfigStorage",
        "collectionName",
        "connectionString",
        "resultMongoDbStorage",
        "resultMongoDbStorage",
        "collectionName",
        "connectionString",
        "currentTimestampInSeconds",
        "timestampKey",
        "entry",
        "entry",
        "entry",
        "currentTimestampInSeconds",
        "newTimestamp",
        "timestampKey",
        "timestampKey",
        "newTimestamp",
        "entry",
        "key",
        "key",
        "key",
        "key",
        "entry",
        "entry",
        "key",
        "entry",
        "entry",
        "entry",
        "entry",
        "entry",
        "key",
        "key",
        "key",
        "key",
        "mongodb",
        "e",
        "e"
    ],
    "literals": [
        "\"mongodb\"",
        "\"config\"",
        "\"timestamp\"",
        "\"mongoDb.configCollection\"",
        "\"mongoDb.connectionString\"",
        "string",
        "string",
        "\"key\"",
        "\"key\"",
        "string",
        "\"key\"",
        "\"key\"",
        "string",
        "\"key\""
    ],
    "variables": [
        "timestampKey",
        "collectionName",
        "connectionString",
        "resultMongoDbStorage",
        "currentTimestampInSeconds",
        "entry",
        "entry",
        "entry"
    ],
    "comments": [
        "Replacable storage system.",
        "public static async createConnection(): Promise<MongoDbSOEQuestionStorage> {",
        "let collectionName = config.get(\"mongoDb.soeQuestionCollection\");",
        "let connectionString = config.get(\"mongoDb.connectionString\");",
        "let resultMongoDbStorage = new MongoDbSOEQuestionStorage(collectionName, connectionString);",
        "await resultMongoDbStorage.initialize();",
        "return resultMongoDbStorage;",
        "}",
        "await resultMongoDbStorage.initialize();",
        "need to send current timestamp in seconds",
        "this is the situation where there was no match",
        "thus, we need to send current timestamp in seconds",
        "Reads in data from storage",
        "this is the situation where there was no match",
        "thus, we need to create the start of an entry that will be saved",
        "Writes out data from storage",
        "Deletes data from storage",
        "Close the connection to the database",
        "Initialize this instance"
    ],
    "docstrings": [],
    "functions": [
        "createConnection",
        "getTimestampConfigAsync",
        "saveTimestampConfigAsync",
        "getGenericConfigAsync",
        "saveGenericConfigAsync",
        "deleteConfigAsync",
        "close",
        "initialize"
    ],
    "classes": [
        "MongoDbConfigStorage"
    ]
}