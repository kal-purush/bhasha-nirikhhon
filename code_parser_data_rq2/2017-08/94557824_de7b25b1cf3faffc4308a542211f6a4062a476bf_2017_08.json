{
    "identifiers": [
        "api",
        "address",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "get_object_status",
        "nodes",
        "address",
        "bigsuds",
        "OperationFailed",
        "e",
        "e",
        "result",
        "api",
        "address",
        "name",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "create",
        "nodes",
        "name",
        "addresses",
        "address",
        "limits",
        "bigsuds",
        "OperationFailed",
        "e",
        "e",
        "result",
        "desc",
        "api",
        "name",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "get_address",
        "nodes",
        "name",
        "api",
        "address",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "delete_node_address",
        "nodes",
        "address",
        "bigsuds",
        "OperationFailed",
        "e",
        "e",
        "result",
        "desc",
        "api",
        "name",
        "description",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "set_description",
        "nodes",
        "name",
        "descriptions",
        "description",
        "api",
        "name",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "get_description",
        "nodes",
        "name",
        "api",
        "name",
        "session_state",
        "session_state",
        "strip",
        "upper",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "set_session_enabled_state",
        "nodes",
        "name",
        "states",
        "session_state",
        "api",
        "name",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "get_session_status",
        "nodes",
        "name",
        "result",
        "split",
        "lower",
        "result",
        "api",
        "name",
        "monitor_state",
        "monitor_state",
        "strip",
        "upper",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "set_monitor_state",
        "nodes",
        "name",
        "states",
        "monitor_state",
        "api",
        "name",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "get_monitor_status",
        "nodes",
        "name",
        "result",
        "split",
        "lower",
        "result",
        "api",
        "name",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "get_monitor_rule",
        "nodes",
        "name",
        "result",
        "split",
        "lower",
        "result",
        "result",
        "monitor_type",
        "quorum",
        "monitor_templates",
        "api",
        "name",
        "monitor_type",
        "quorum",
        "monitor_templates",
        "monitor_type",
        "strip",
        "upper",
        "monitor_type",
        "quorum",
        "monitor_templates",
        "api",
        "LocalLB",
        "NodeAddressV2",
        "set_monitor_rule",
        "nodes",
        "name",
        "monitor_rules",
        "monitor_rule",
        "f5_argument_spec",
        "session_state",
        "choices",
        "monitor_state",
        "choices",
        "name",
        "required",
        "host",
        "aliases",
        "description",
        "monitor_type",
        "choices",
        "monitor_type_choices",
        "quorum",
        "monitors",
        "argument_spec",
        "update",
        "meta_args",
        "AnsibleModule",
        "argument_spec",
        "argument_spec",
        "supports_check_mode",
        "ssl",
        "hasattr",
        "ssl",
        "fail_json",
        "msg",
        "fq_name",
        "partition",
        "name",
        "monitor_type",
        "monitor_type",
        "lower",
        "monitors",
        "monitor",
        "monitors",
        "append",
        "fq_name",
        "partition",
        "monitor",
        "state",
        "host",
        "fail_json",
        "msg",
        "monitors",
        "len",
        "monitors",
        "len",
        "monitors",
        "monitor_type",
        "fail_json",
        "msg",
        "monitor_type",
        "quorum",
        "fail_json",
        "msg",
        "monitor_type",
        "monitor_type",
        "fail_json",
        "msg",
        "quorum",
        "fail_json",
        "msg",
        "bigip_api",
        "server",
        "user",
        "password",
        "validate_certs",
        "port",
        "server_port",
        "state",
        "node_exists",
        "api",
        "address",
        "check_mode",
        "delete_node_address",
        "api",
        "address",
        "deleted",
        "fail_json",
        "msg",
        "desc",
        "state",
        "node_exists",
        "api",
        "address",
        "host",
        "fail_json",
        "msg",
        "check_mode",
        "create_node_address",
        "api",
        "address",
        "host",
        "name",
        "address",
        "created",
        "fail_json",
        "msg",
        "desc",
        "session_state",
        "set_node_session_enabled_state",
        "api",
        "address",
        "session_state",
        "monitor_state",
        "set_node_monitor_state",
        "api",
        "address",
        "monitor_state",
        "description",
        "set_node_description",
        "api",
        "address",
        "description",
        "monitors",
        "set_monitors",
        "api",
        "address",
        "monitor_type",
        "quorum",
        "monitors",
        "host",
        "get_node_address",
        "api",
        "address",
        "host",
        "fail_json",
        "msg",
        "session_state",
        "get_node_session_status",
        "api",
        "address",
        "session_state",
        "session_status",
        "check_mode",
        "set_node_session_enabled_state",
        "api",
        "address",
        "session_state",
        "session_state",
        "session_status",
        "check_mode",
        "set_node_session_enabled_state",
        "api",
        "address",
        "session_state",
        "monitor_state",
        "get_node_monitor_status",
        "api",
        "address",
        "monitor_state",
        "monitor_status",
        "check_mode",
        "set_node_monitor_state",
        "api",
        "address",
        "monitor_state",
        "monitor_state",
        "monitor_status",
        "check_mode",
        "set_node_monitor_state",
        "api",
        "address",
        "monitor_state",
        "description",
        "get_node_description",
        "api",
        "address",
        "description",
        "check_mode",
        "set_node_description",
        "api",
        "address",
        "description",
        "monitors",
        "get_monitors",
        "api",
        "address",
        "t_monitor_type",
        "monitor_type",
        "t_quorum",
        "quorum",
        "t_monitor_templates",
        "monitors",
        "check_mode",
        "set_monitors",
        "api",
        "address",
        "monitor_type",
        "quorum",
        "monitors",
        "e",
        "fail_json",
        "msg",
        "e",
        "exit_json",
        "result",
        "ansible",
        "module_utils",
        "basic",
        "ansible",
        "module_utils",
        "f5_utils",
        "main"
    ],
    "literals": [
        "'status'",
        "'preview'",
        "'supported_by'",
        "'community'",
        "'metadata_version'",
        "'1.0'",
        "\"was not found\"",
        "\"\"",
        "\"already exists\"",
        "\"referenced name or IP already in use\"",
        "\"\"",
        "\"is referenced by a member of pool\"",
        "\"node referenced by pool\"",
        "\"STATE_%s\"",
        "\"SESSION_STATUS_\"",
        "\"STATE_%s\"",
        "\"MONITOR_STATUS_\"",
        "'type'",
        "\"MONITOR_RULE_TYPE_\"",
        "'quorum'",
        "'monitor_templates'",
        "\"MONITOR_RULE_TYPE_%s\"",
        "'type'",
        "'quorum'",
        "'monitor_templates'",
        "'and_list'",
        "'m_of_n'",
        "'str'",
        "'enabled'",
        "'disabled'",
        "'str'",
        "'enabled'",
        "'disabled'",
        "'str'",
        "'str'",
        "'address'",
        "'ip'",
        "'str'",
        "'str'",
        "'int'",
        "'list'",
        "'validate_certs'",
        "'SSLContext'",
        "'bigsuds does not support verifying certificates with python < 2.7.9.  Either update python or set validate_certs=False on the task'",
        "'server'",
        "'server_port'",
        "'user'",
        "'password'",
        "'state'",
        "'partition'",
        "'validate_certs'",
        "'session_state'",
        "'monitor_state'",
        "'host'",
        "'name'",
        "'description'",
        "'monitor_type'",
        "'quorum'",
        "'monitors'",
        "'monitors'",
        "'absent'",
        "\"host parameter invalid when state=absent\"",
        "'single'",
        "\"monitor_type required for monitors > 1\"",
        "'m_of_n'",
        "\"quorum value required for monitor_type m_of_n\"",
        "'m_of_n'",
        "\"monitor_type require monitors parameter\"",
        "\"quorum requires monitors parameter\"",
        "'changed'",
        "'absent'",
        "\"unable to delete: %s\"",
        "'changed'",
        "'changed'",
        "'present'",
        "\"host parameter required when \"",
        "\"state=present and node does not exist\"",
        "\"unable to create: %s\"",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "'changed'",
        "\"Changing the node address is \"",
        "\"not supported by the API; \"",
        "\"delete and recreate the node.\"",
        "'enabled'",
        "'forced_disabled'",
        "'changed'",
        "'disabled'",
        "'force_disabled'",
        "'changed'",
        "'enabled'",
        "'forced_down'",
        "'changed'",
        "'disabled'",
        "'forced_down'",
        "'changed'",
        "'changed'",
        "'changed'",
        "\"received exception: %s\"",
        "'__main__'"
    ],
    "variables": [
        "ANSIBLE_METADATA",
        "DOCUMENTATION",
        "EXAMPLES",
        "result",
        "result",
        "result",
        "result",
        "desc",
        "result",
        "desc",
        "result",
        "desc",
        "result",
        "desc",
        "session_state",
        "result",
        "result",
        "monitor_state",
        "result",
        "result",
        "result",
        "monitor_type",
        "quorum",
        "monitor_templates",
        "monitor_type",
        "monitor_rule",
        "monitor_type_choices",
        "argument_spec",
        "meta_args",
        "server",
        "server_port",
        "user",
        "password",
        "state",
        "partition",
        "validate_certs",
        "session_state",
        "monitor_state",
        "host",
        "name",
        "address",
        "description",
        "monitor_type",
        "monitor_type",
        "quorum",
        "monitors",
        "monitors",
        "quorum",
        "monitor_type",
        "quorum",
        "api",
        "result",
        "deleted",
        "desc",
        "result",
        "result",
        "created",
        "desc",
        "result",
        "result",
        "result",
        "result",
        "result",
        "session_status",
        "result",
        "result",
        "monitor_status",
        "result",
        "result",
        "result",
        "t_monitor_type",
        "t_quorum",
        "t_monitor_templates",
        "result"
    ],
    "comments": [
        "!/usr/bin/python",
        "-*- coding: utf-8 -*-",
        "",
        "(c) 2013, Matt Hite <mhite@hotmail.com>",
        "",
        "This file is part of Ansible",
        "",
        "Ansible is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "Ansible is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with Ansible.  If not, see <http://www.gnu.org/licenses/>.",
        "hack to determine if node exists",
        "genuine exception",
        "genuine exception",
        "genuine exception",
        "sanity check user supplied values",
        "set default required values for single monitor",
        "no monitors specified but monitor_type exists",
        "no monitors specified but quorum exists",
        "default",
        "check-mode return value",
        "check-mode return value",
        "node exists -- potentially modify attributes"
    ],
    "docstrings": [
        "'''\n---\nmodule: _bigip_node\nshort_description: \"Manages F5 BIG-IP LTM nodes\"\ndeprecated: Deprecated in 2.5. Use the bigip_node module instead.\ndescription:\n  - \"Manages F5 BIG-IP LTM nodes via iControl SOAP API\"\nversion_added: \"1.4\"\nauthor:\n  - Matt Hite (@mhite)\n  - Tim Rupp (@caphrim007)\nnotes:\n  - \"Requires BIG-IP software version >= 11\"\n  - \"F5 developed module 'bigsuds' required (see http://devcentral.f5.com)\"\n  - \"Best run as a local_action in your playbook\"\nrequirements:\n  - bigsuds\noptions:\n  state:\n    description:\n      - Pool member state\n    required: true\n    default: present\n    choices: ['present', 'absent']\n    aliases: []\n  session_state:\n    description:\n      - Set new session availability status for node\n    version_added: \"1.9\"\n    required: false\n    default: null\n    choices: ['enabled', 'disabled']\n    aliases: []\n  monitor_state:\n    description:\n      - Set monitor availability status for node\n    version_added: \"1.9\"\n    required: false\n    default: null\n    choices: ['enabled', 'disabled']\n    aliases: []\n  partition:\n    description:\n      - Partition\n    required: false\n    default: 'Common'\n    choices: []\n    aliases: []\n  name:\n    description:\n      - \"Node name\"\n    required: false\n    default: null\n    choices: []\n  monitor_type:\n    description:\n      - Monitor rule type when monitors > 1\n    version_added: \"2.2\"\n    required: False\n    default: null\n    choices: ['and_list', 'm_of_n']\n    aliases: []\n  quorum:\n    description:\n      - Monitor quorum value when monitor_type is m_of_n\n    version_added: \"2.2\"\n    required: False\n    default: null\n    choices: []\n    aliases: []\n  monitors:\n    description:\n      - Monitor template name list. Always use the full path to the monitor.\n    version_added: \"2.2\"\n    required: False\n    default: null\n    choices: []\n    aliases: []\n  host:\n    description:\n      - \"Node IP. Required when state=present and node does not exist. Error when state=absent.\"\n    required: true\n    default: null\n    choices: []\n    aliases: ['address', 'ip']\n  description:\n    description:\n      - \"Node description.\"\n    required: false\n    default: null\n    choices: []\nextends_documentation_fragment: f5\n'''",
        "'''\n- name: Add node\n  bigip_node:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"secret\"\n      state: \"present\"\n      partition: \"Common\"\n      host: \"10.20.30.40\"\n      name: \"10.20.30.40\"\n\n# Note that the BIG-IP automatically names the node using the\n# IP address specified in previous play's host parameter.\n# Future plays referencing this node no longer use the host\n# parameter but instead use the name parameter.\n# Alternatively, you could have specified a name with the\n# name parameter when state=present.\n\n- name: Add node with a single 'ping' monitor\n  bigip_node:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"secret\"\n      state: \"present\"\n      partition: \"Common\"\n      host: \"10.20.30.40\"\n      name: \"mytestserver\"\n      monitors:\n        - /Common/icmp\n  delegate_to: localhost\n\n- name: Modify node description\n  bigip_node:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"secret\"\n      state: \"present\"\n      partition: \"Common\"\n      name: \"10.20.30.40\"\n      description: \"Our best server yet\"\n  delegate_to: localhost\n\n- name: Delete node\n  bigip_node:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"secret\"\n      state: \"absent\"\n      partition: \"Common\"\n      name: \"10.20.30.40\"\n\n# The BIG-IP GUI doesn't map directly to the API calls for \"Node ->\n# General Properties -> State\". The following states map to API monitor\n# and session states.\n#\n# Enabled (all traffic allowed):\n# monitor_state=enabled, session_state=enabled\n# Disabled (only persistent or active connections allowed):\n# monitor_state=enabled, session_state=disabled\n# Forced offline (only active connections allowed):\n# monitor_state=disabled, session_state=disabled\n#\n# See https://devcentral.f5.com/questions/icontrol-equivalent-call-for-b-node-down\n\n- name: Force node offline\n  bigip_node:\n      server: \"lb.mydomain.com\"\n      user: \"admin\"\n      password: \"mysecret\"\n      state: \"present\"\n      session_state: \"disabled\"\n      monitor_state: \"disabled\"\n      partition: \"Common\"\n      name: \"10.20.30.40\"\n'''"
    ],
    "functions": [
        "node_exists",
        "create_node_address",
        "get_node_address",
        "delete_node_address",
        "set_node_description",
        "get_node_description",
        "set_node_session_enabled_state",
        "get_node_session_status",
        "set_node_monitor_state",
        "get_node_monitor_status",
        "get_monitors",
        "set_monitors",
        "main"
    ],
    "classes": []
}