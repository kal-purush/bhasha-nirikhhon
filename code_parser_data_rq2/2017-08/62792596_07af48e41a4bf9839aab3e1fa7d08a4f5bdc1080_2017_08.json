{
    "identifiers": [
        "socket",
        "logging",
        "json",
        "pyHS100",
        "TPLinkSmartHomeProtocol",
        "SmartPlug",
        "SmartBulb",
        "logging",
        "getLogger",
        "staticmethod",
        "protocol",
        "port",
        "timeout",
        "protocol",
        "TPLinkSmartHomeProtocol",
        "socket",
        "socket",
        "socket",
        "AF_INET",
        "socket",
        "SOCK_DGRAM",
        "sock",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_BROADCAST",
        "sock",
        "setsockopt",
        "socket",
        "SOL_SOCKET",
        "socket",
        "SO_REUSEADDR",
        "sock",
        "settimeout",
        "timeout",
        "json",
        "dumps",
        "discovery_query",
        "_LOGGER",
        "debug",
        "target",
        "port",
        "protocol",
        "encrypt",
        "req",
        "sock",
        "sendto",
        "encrypted_req",
        "target",
        "port",
        "_LOGGER",
        "debug",
        "timeout",
        "sock",
        "recvfrom",
        "addr",
        "json",
        "loads",
        "protocol",
        "decrypt",
        "data",
        "info",
        "info",
        "info",
        "sysinfo",
        "sysinfo",
        "sysinfo",
        "sysinfo",
        "_LOGGER",
        "error",
        "_LOGGER",
        "error",
        "lower",
        "SmartPlug",
        "ip",
        "lower",
        "SmartBulb",
        "ip",
        "socket",
        "timeout",
        "_LOGGER",
        "debug",
        "ex",
        "_LOGGER",
        "error",
        "ex",
        "exc_info",
        "devices"
    ],
    "literals": [
        "\"system\"",
        "\"get_sysinfo\"",
        "\"emeter\"",
        "\"get_realtime\"",
        "\"255.255.255.255\"",
        "\"Sending discovery to %s:%s\"",
        "\"Waiting %s seconds for responses...\"",
        "\"system\"",
        "\"get_sysinfo\"",
        "\"system\"",
        "\"system\"",
        "\"get_sysinfo\"",
        "\"type\"",
        "\"type\"",
        "\"mic_type\"",
        "\"mic_type\"",
        "\"Unable to find the device type field!\"",
        "\"UNKNOWN\"",
        "\"No 'system' nor 'get_sysinfo' in response\"",
        "\"smartplug\"",
        "\"smartbulb\"",
        "\"Got socket timeout, which is okay.\"",
        "\"Got exception %s\""
    ],
    "variables": [
        "_LOGGER",
        "protocol",
        "discovery_query",
        "target",
        "sock",
        "req",
        "encrypted_req",
        "devices",
        "data",
        "addr",
        "ip",
        "port",
        "info",
        "sysinfo",
        "devices",
        "ip",
        "devices",
        "ip"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n        Sends discovery message to 255.255.255.255:9999 in order\n        to detect available supported devices in the local network,\n        and waits for given timeout for answers from devices.\n\n        :param timeout: How long to wait for responses, defaults to 5\n        :param port: port to send broadcast messages, defaults to 9999.\n        :rtype: dict\n        :return: Array of json objects {\"ip\", \"port\", \"sys_info\"}\n        \"\"\""
    ],
    "functions": [
        "discover"
    ],
    "classes": [
        "Discover"
    ]
}