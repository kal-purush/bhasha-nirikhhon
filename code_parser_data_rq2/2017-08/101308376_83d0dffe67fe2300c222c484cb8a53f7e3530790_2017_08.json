{
    "identifiers": [
        "datetime",
        "logging",
        "google",
        "appengine",
        "api",
        "app_identity",
        "google",
        "appengine",
        "api",
        "oauth",
        "google",
        "appengine",
        "ext",
        "ndb",
        "flask",
        "request",
        "dateutil",
        "parser",
        "parse",
        "werkzeug",
        "exceptions",
        "BadRequest",
        "Forbidden",
        "Unauthorized",
        "config",
        "datetime",
        "datetime",
        "utcfromtimestamp",
        "PTC",
        "HEALTHPRO",
        "PTC",
        "HEALTHPRO",
        "role_whitelist",
        "role_whitelist",
        "role_whitelist",
        "role_whitelist",
        "func",
        "args",
        "kwargs",
        "app_identity",
        "get_application_id",
        "_is_self_request",
        "request",
        "scheme",
        "lower",
        "appid",
        "Unauthorized",
        "appid",
        "check_auth",
        "role_whitelist",
        "func",
        "args",
        "kwargs",
        "wrapped",
        "auth_required_wrapper",
        "func",
        "args",
        "kwargs",
        "check_cron",
        "func",
        "args",
        "kwargs",
        "wrapped",
        "func",
        "args",
        "kwargs",
        "config",
        "getSettingJson",
        "config",
        "ALLOW_NONPROD_REQUESTS",
        "Forbidden",
        "func",
        "args",
        "kwargs",
        "wrapped",
        "role_whitelist",
        "get_validated_user_info",
        "user_info",
        "get",
        "role_whitelist",
        "logging",
        "info",
        "format",
        "user_email",
        "user_info",
        "get",
        "role_whitelist",
        "Forbidden",
        "oauth",
        "get_current_user",
        "SCOPE",
        "email",
        "oauth",
        "e",
        "logging",
        "error",
        "format",
        "e",
        "user_email",
        "request",
        "headers",
        "get",
        "logging",
        "info",
        "logging",
        "info",
        "format",
        "get_oauth_id",
        "Forbidden",
        "user_email",
        "config",
        "getSettingJson",
        "config",
        "USER_INFO",
        "get",
        "user_email",
        "request",
        "remote_addr",
        "config",
        "getSettingJson",
        "config",
        "ALLOW_NONPROD_REQUESTS",
        "request",
        "headers",
        "get",
        "get_oauth_id",
        "request",
        "headers",
        "get",
        "app_identity",
        "get_application_id",
        "user_email",
        "Unauthorized",
        "lookup_user_info",
        "user_email",
        "user_info",
        "enforce_ip_whitelisted",
        "request",
        "remote_addr",
        "get_whitelisted_ips",
        "user_info",
        "enforce_appid_whitelisted",
        "request",
        "headers",
        "get",
        "get_whitelisted_appids",
        "user_info",
        "logging",
        "info",
        "user_email",
        "user_email",
        "user_info",
        "logging",
        "info",
        "user_email",
        "Forbidden",
        "user_info",
        "user_info",
        "get",
        "netaddr",
        "IPNetwork",
        "rng",
        "rng",
        "user_info",
        "user_info",
        "request_ip",
        "whitelisted_ips",
        "whitelisted_ips",
        "logging",
        "info",
        "format",
        "whitelisted_ips",
        "netaddr",
        "IPAddress",
        "request_ip",
        "rng",
        "whitelisted_ips",
        "ip",
        "rng",
        "logging",
        "info",
        "format",
        "ip",
        "Forbidden",
        "format",
        "ip",
        "logging",
        "info",
        "format",
        "ip",
        "user_info",
        "user_info",
        "get",
        "request_app_id",
        "whitelisted_appids",
        "whitelisted_appids",
        "request_app_id",
        "request_app_id",
        "whitelisted_appids",
        "logging",
        "info",
        "format",
        "request_app_id",
        "logging",
        "info",
        "format",
        "request_app_id",
        "whitelisted_appids",
        "logging",
        "info",
        "format",
        "whitelisted_appids",
        "Forbidden",
        "old_model",
        "new_model",
        "k",
        "v",
        "new_model",
        "to_dict",
        "iteritems",
        "getattr",
        "new_model",
        "k",
        "ndb",
        "ComputedProperty",
        "v",
        "setattr",
        "old_model",
        "k",
        "v",
        "date_str",
        "date_format",
        "date_only",
        "date_format",
        "datetime",
        "datetime",
        "strptime",
        "date_str",
        "date_format",
        "parse",
        "date_str",
        "date_obj",
        "utcoffset",
        "date_obj",
        "replace",
        "tzinfo",
        "date_obj",
        "utcoffset",
        "date_obj",
        "replace",
        "tzinfo",
        "date_only",
        "date_obj",
        "datetime",
        "datetime",
        "combine",
        "date_obj",
        "date",
        "datetime",
        "datetime",
        "min",
        "time",
        "BadRequest",
        "date_obj",
        "obj",
        "field_name",
        "date_format",
        "field_name",
        "obj",
        "parse_date",
        "obj",
        "field_name",
        "date_format",
        "obj",
        "field_name",
        "date_format",
        "field_name",
        "obj",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "date_format",
        "obj",
        "field_name",
        "strftime",
        "date_format",
        "obj",
        "field_name",
        "isoformat",
        "obj",
        "field_name",
        "field_name",
        "len",
        "field_name",
        "obj",
        "get",
        "field_name",
        "value",
        "dao",
        "code_dao",
        "CodeDao",
        "CodeDao",
        "get",
        "value",
        "code",
        "mapped",
        "code",
        "value",
        "UNMAPPED",
        "obj",
        "field_name",
        "UNSET",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "dao",
        "hpo_dao",
        "HPODao",
        "HPODao",
        "get",
        "obj",
        "field_name",
        "name",
        "UNSET",
        "dt",
        "dt",
        "EPOCH",
        "total_seconds",
        "obj",
        "field_name",
        "enum_cls",
        "field_name",
        "obj",
        "obj",
        "field_name",
        "enum_cls",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "field_name",
        "obj",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "UNSET",
        "dict_",
        "field_name",
        "field_name",
        "dict_",
        "dict_",
        "field_name",
        "str_",
        "str_",
        "str_",
        "str_",
        "str_",
        "lower",
        "translate",
        "punctuation"
    ],
    "literals": [
        "'https://www.googleapis.com/auth/userinfo.email'",
        "\"ptc\"",
        "\"healthpro\"",
        "\"Can't call `auth_required` with empty role_whitelist.\"",
        "'https'",
        "'None'",
        "'testbed-test'",
        "'testapp'",
        "'HTTPS is required for %r'",
        "'Request not allowed in production environment (according to config).'",
        "'roles'",
        "'User {} has roles {}, but {} is required'",
        "'roles'",
        "'OAuth failure: {}'",
        "'X-Appengine-Cron'",
        "'Appengine-Cron ALLOWED for cron endpoint.'",
        "'User {} NOT ALLOWED for cron endpoint'",
        "'unauthenticated'",
        "'unauthenticated'",
        "'None'",
        "'No OAuth user found.'",
        "'X-Appengine-Inbound-Appid'",
        "'User %r ALLOWED'",
        "'User %r NOT ALLOWED'",
        "'whitelisted_ip_ranges'",
        "'whitelisted_ip_ranges'",
        "'ip6'",
        "'whitelisted_ip_ranges'",
        "'ip4'",
        "'IP RANGES ALLOWED: {}'",
        "'IP {} NOT ALLOWED'",
        "'Client IP not whitelisted: {}'",
        "'IP {} ALLOWED'",
        "'whitelisted_appids'",
        "'APP ID {} ALLOWED'",
        "'APP ID {} NOT FOUND IN {}'",
        "'NO APP ID FOUND WHEN REQUIRED TO BE ONE OF: {}'",
        "'Date contains non zero time fields'"
    ],
    "variables": [
        "SCOPE",
        "EPOCH",
        "PTC",
        "HEALTHPRO",
        "PTC_AND_HEALTHPRO",
        "ALL_ROLES",
        "role_whitelist",
        "appid",
        "user_email",
        "user_info",
        "user_email",
        "user_email",
        "user_email",
        "user_email",
        "user_info",
        "ip",
        "date_obj",
        "date_obj",
        "date_obj",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "field_without_id",
        "value",
        "code",
        "obj",
        "field_without_id",
        "obj",
        "field_without_id",
        "obj",
        "field_without_id",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "obj",
        "field_name",
        "str_"
    ],
    "comments": [
        "Role constants; used with role_whitelist in auth_required below.",
        "Only enforce HTTPS and auth for external requests; requests made for data generation",
        "are allowed through (when enabled).",
        "Allow clients to simulate an unauthentiated request (for testing)",
        "becaues we haven't found another way to create an unauthenticated request",
        "when using dev_appserver. When client tests are checking to ensure that an",
        "unauthenticated requests gets rejected, they helpfully add this header.",
        "The `application_id` check ensures this feature only works in dev_appserver.",
        "No whitelist means \"don't apply restrictions\"",
        "No whitelist means \"don't apply restrictions\""
    ],
    "docstrings": [
        "\"\"\"Utilities used by the API definition, and authentication/authorization/roles.\"\"\"",
        "\"\"\"A decorator that keeps the function from being called without auth.\n    role_whitelist can be a string or list of strings specifying one or\n    more roles that are allowed to call the function. \"\"\"",
        "\"\"\"A decorator that ensures that the user is a cron job.\"\"\"",
        "\"\"\"The decorated function may never run in environments without config.ALLOW_NONPROD_REQUESTS.\"\"\"",
        "\"\"\"Raises Unauthorized or Forbidden if the current user is not allowed.\"\"\"",
        "\"\"\"Returns user email ID if OAUTH token present, or None.\"\"\"",
        "\"\"\"Raises Forbidden if the current user is not a cron job.\"\"\"",
        "\"\"\"Returns a valid (user email, user info), or raises Unauthorized or Forbidden.\"\"\"",
        "\"\"\"Updates a model.\n    For all fields that are set in new_model, copy them into old_model.\n\n    Args:\n      old_model: The ndb model object retrieved from the datastore.\n      new_model_dict: A json object containing the new values.\n    \"\"\"",
        "\"\"\"Parses JSON dates.\n\n    Args:\n      date_format: If specified, use this date format, otherwise uses the proto\n        converter's date handling logic.\n     date_only: If specified, and true, will raise an exception if the parsed\n       timestamp isn't midnight.\n    \"\"\"",
        "\"\"\"Converts a field of a dictionary from a string to a datetime.\"\"\"",
        "\"\"\"Converts a field of a dictionary from a datetime to a string.\"\"\"",
        "\"\"\"Converts a field of a dictionary from a string to an enum.\"\"\"",
        "\"\"\"Converts a field of a dictionary from a enum to an string.\"\"\"",
        "\"\"\"Removes a field from the dict if it exists.\"\"\"",
        "\"\"\"Takes a string, and returns a searchable representation.\n\n    The string is lowercased and punctuation is removed.\n    \"\"\""
    ],
    "functions": [
        "auth_required",
        "auth_required_wrapper",
        "wrapped",
        "auth_required_cron",
        "wrapped",
        "nonprod",
        "wrapped",
        "check_auth",
        "get_oauth_id",
        "check_cron",
        "lookup_user_info",
        "_is_self_request",
        "get_validated_user_info",
        "get_whitelisted_ips",
        "enforce_ip_whitelisted",
        "get_whitelisted_appids",
        "enforce_appid_whitelisted",
        "update_model",
        "parse_date",
        "parse_json_date",
        "format_json_date",
        "format_json_code",
        "format_json_hpo",
        "unix_time_millis",
        "parse_json_enum",
        "format_json_enum",
        "remove_field",
        "searchable_representation"
    ],
    "classes": []
}