{
    "identifiers": [
        "describe",
        "it",
        "expect",
        "v",
        "expect",
        "v",
        "it",
        "v1",
        "expect",
        "v2",
        "v1",
        "expect",
        "v2",
        "expect",
        "v2",
        "it",
        "v",
        "expect",
        "v",
        "v",
        "expect",
        "v",
        "v",
        "expect",
        "v",
        "v",
        "expect",
        "v",
        "v",
        "expect",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "it",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "it",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "it",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "v",
        "expect",
        "limitPrecision",
        "v",
        "expect",
        "limitPrecision",
        "v"
    ],
    "literals": [
        "\"Vector\"",
        "\"should construct a new vector\"",
        "\"should make a copy of itself\"",
        "\"should calculate 2D distance\"",
        "\"should add two vectors\"",
        "\"should substract two vectors\"",
        "\"should scale a vecor by constant multiplier\""
    ],
    "variables": [
        "v",
        "v1",
        "v2",
        "v",
        "v",
        "v",
        "v"
    ],
    "comments": [
        "Project: Arena game\n  Author:  Copyright (C) 2015, Atanas Laskov\n\n  License: BSD license, see LICENSE.md for more details.\n\n  http://www.atanaslaskov.com/arena/",
        "<reference path=\"../src/vector.ts\" />",
        "(v2 should be a new instance)"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}