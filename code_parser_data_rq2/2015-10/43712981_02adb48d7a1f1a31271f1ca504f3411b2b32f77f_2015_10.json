{
    "identifiers": [
        "OFFLINE_ANALYTICS_DB_NAME",
        "db",
        "db",
        "url",
        "originalTimestamp",
        "originalTimestamp",
        "url",
        "timeDelta",
        "replayUrl",
        "replayUrl",
        "response",
        "response",
        "Response",
        "replayUrl",
        "db",
        "url",
        "error",
        "timeDelta",
        "EXPIRATION_TIME_DELTA",
        "error",
        "db",
        "url",
        "error",
        "request",
        "request",
        "OFFLINE_ANALYTICS_DB_NAME",
        "db",
        "db",
        "request",
        "request",
        "request",
        "response",
        "response",
        "Response",
        "response",
        "queueFailedAnalyticsRequest",
        "request",
        "handleAnalyticsCollectionRequest",
        "ORIGIN",
        "ORIGIN",
        "replayQueuedAnalyticsRequests"
    ],
    "literals": [
        "'offline-analytics'",
        "'&qt='",
        "'About to replay:'",
        "'Replay succeeded:'",
        "'Replay failed, but the original request is too old to retry any '",
        "'further. Error:'",
        "'Replay failed, and will be retried the next time the service worker '",
        "'starts. Error:'",
        "'Queueing failed request:'",
        "'/collect'",
        "'/analytics.js'"
    ],
    "variables": [
        "OFFLINE_ANALYTICS_DB_NAME",
        "EXPIRATION_TIME_DELTA",
        "ORIGIN",
        "timeDelta",
        "replayUrl"
    ],
    "comments": [
        "One day, in milliseconds.",
        "See https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#qt",
        "This will cause the promise to reject, triggering the .catch() function.",
        "After a while, Google Analytics will no longer accept an old ping with a qt=",
        "parameter. The advertised time is ~4 hours, but we'll attempt to resend up to 24",
        "hours. This logic also prevents the requests from being queued indefinitely.",
        "This will cause the promise to reject, triggering the .catch() function.",
        "It will also result in a generic HTTP error being returned to the controlled page."
    ],
    "docstrings": [
        "* @license\n * Copyright (c) 2015 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt"
    ],
    "functions": [
        "replayQueuedAnalyticsRequests",
        "queueFailedAnalyticsRequest",
        "handleAnalyticsCollectionRequest"
    ],
    "classes": []
}