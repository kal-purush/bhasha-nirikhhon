{
    "identifiers": [
        "subprocess",
        "glob",
        "os",
        "fnmatch",
        "pip",
        "commands",
        "show",
        "search_packages_info",
        "re",
        "shutil",
        "do_git",
        "os",
        "path",
        "exists",
        "pcl_dir",
        "pcl_dir",
        "subprocess",
        "Popen",
        "cwd",
        "pcl_dir",
        "pr",
        "communicate",
        "subprocess",
        "Popen",
        "pcl_dir",
        "pr",
        "communicate",
        "pattern",
        "root_path",
        "path",
        "dirs",
        "files",
        "os",
        "walk",
        "os",
        "path",
        "abspath",
        "root_path",
        "filename",
        "fnmatch",
        "files",
        "pattern",
        "os",
        "path",
        "join",
        "path",
        "filename",
        "path",
        "path",
        "dirs",
        "files",
        "os",
        "walk",
        "os",
        "path",
        "abspath",
        "path",
        "filename",
        "files",
        "append",
        "os",
        "path",
        "join",
        "path",
        "filename",
        "include",
        "search_dirs",
        "dir",
        "search_dirs",
        "readAllFiles",
        "dir",
        "f",
        "files",
        "re",
        "match",
        "include",
        "f",
        "matches",
        "append",
        "f",
        "len",
        "matches",
        "sys",
        "exit",
        "len",
        "matches",
        "matches",
        "pattern",
        "search_paths",
        "p",
        "search_paths",
        "m",
        "locate",
        "pattern",
        "p",
        "matches",
        "append",
        "m",
        "matches",
        "pcl_dir",
        "pcl_dir",
        "includePathToFullPath",
        "source_origin",
        "search_mod",
        "exp",
        "fname",
        "open",
        "fname",
        "re",
        "compile",
        "exp",
        "line",
        "f",
        "line",
        "regex",
        "match",
        "line",
        "matches",
        "append",
        "line",
        "matches",
        "fname",
        "open",
        "fname",
        "fp",
        "fp",
        "read",
        "re",
        "findall",
        "lines",
        "fname",
        "open",
        "fname",
        "fp",
        "fp",
        "read",
        "re",
        "findall",
        "lines",
        "len",
        "tocheck",
        "tocheck",
        "pop",
        "file",
        "os",
        "path",
        "splitext",
        "file",
        "file_extension",
        "os",
        "path",
        "split",
        "filename",
        "splits",
        "ascpp",
        "includePathToFullPath",
        "ascpp",
        "search_mod",
        "full_cpp",
        "ascpp",
        "tocheck",
        "append",
        "ascpp",
        "includePathToFullPath",
        "file",
        "search_mod",
        "append",
        "file",
        "full_file",
        "full_list",
        "append",
        "file",
        "full_file",
        "extract_h",
        "full_file",
        "extract_hpp",
        "full_file",
        "full_file",
        "hs",
        "hpps",
        "h",
        "hs",
        "re",
        "match",
        "h",
        "h",
        "tocheck",
        "append",
        "h",
        "hpp",
        "hpps",
        "re",
        "match",
        "hpp",
        "hpp",
        "tocheck",
        "append",
        "hpp",
        "os",
        "path",
        "exists",
        "minipcl_name",
        "shutil",
        "rmtree",
        "minipcl_name",
        "inc",
        "file",
        "full_list",
        "inc",
        "os",
        "path",
        "exists",
        "file",
        "file",
        "os",
        "path",
        "split",
        "inc",
        "minipcl_name",
        "path",
        "os",
        "makedirs",
        "full",
        "exist_ok",
        "full",
        "fname",
        "shutil",
        "copy",
        "file",
        "full_with_name",
        "pcl_dir",
        "cpp",
        "additional_cpp",
        "shutil",
        "copy",
        "cpp",
        "minipcl_name",
        "shutil",
        "copy"
    ],
    "literals": [
        "\"pcl.git\"",
        "\"found pcl git dir in: \"",
        "\"Not cloning, just pulling!\"",
        "\"git\"",
        "\"pull\"",
        "\"origin\"",
        "\"master\"",
        "\"cannot find pcl git dir, going to do a shallow clone\"",
        "\"git\"",
        "\"clone\"",
        "\"https://github.com/PointCloudLibrary/pcl.git\"",
        "\"--depth=1\"",
        "'.*'",
        "\"FOUND SEVERAL POTETENTIAL HEADERS!!!\"",
        "\"No matches found. returning None\"",
        "\"auto_io.cpp\"",
        "'/common'",
        "'/io'",
        "\"r\"",
        "r'\\s*#include\\s*[<\"]\\s*(.*.h)\\s*[>\"]\\s*'",
        "r'\\s*#include\\s*[<\"]\\s*(.*.hpp)\\s*[>\"]\\s*'",
        "\"src/auto_io.cpp\"",
        "\".h\"",
        "\"src/\"",
        "'.cpp'",
        "\"-->>> verifying: \"",
        "\"For File: \"",
        "\" found:\"",
        "\"Headers: \"",
        "\"hpp: \"",
        "\"\\n\\n\"",
        "'pcl.*'",
        "'pcl.*'",
        "\"minipcl\"",
        "\"Verify \"",
        "\"FILE NOT FOUND: \"",
        "\"OK\"",
        "\"/\"",
        "\"/\"",
        "\"/io/src/ply/ply_parser.cpp\"",
        "\"/src/\"",
        "\"pcl_config.h\"",
        "\"minipcl/pcl/pcl_config.h\""
    ],
    "variables": [
        "pcl_dir",
        "do_git",
        "pr",
        "error",
        "pr",
        "error",
        "matches",
        "files",
        "matches",
        "source_origin",
        "search_mod",
        "full_source_origin",
        "matches",
        "f",
        "regex",
        "lines",
        "lines",
        "tocheck",
        "full_list",
        "file",
        "filename",
        "file_extension",
        "splits",
        "ascpp",
        "full_cpp",
        "full_file",
        "hs",
        "hpps",
        "minipcl_name",
        "path",
        "fname",
        "full",
        "full_with_name",
        "additional_cpp"
    ],
    "comments": [
        "!/usr/bin/python",
        "source_origin_full = getMatches(source_origin, search_mod)",
        "if (len(found) != 1):",
        "import sys",
        "sys.exit(\"Too many matches!\")",
        "",
        "def hasCPP(fname):",
        "out = fname.replace('.h', '.cpp')",
        "return os._exists(out)",
        "os.makedirs(minipcl_name)"
    ],
    "docstrings": [],
    "functions": [
        "locate",
        "readAllFiles",
        "includePathToFullPath",
        "getMatches",
        "extract_lines",
        "extract_h",
        "extract_hpp"
    ],
    "classes": []
}