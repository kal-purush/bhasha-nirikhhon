{
    "identifiers": [
        "org",
        "zaproxy",
        "zap",
        "model",
        "java",
        "util",
        "regex",
        "Pattern",
        "net",
        "sf",
        "json",
        "JSONObject",
        "org",
        "zaproxy",
        "zap",
        "utils",
        "Enableable",
        "Type",
        "DataDrivenNode",
        "StructuralParameter",
        "CONFIG_NAME",
        "CONFIG_TYPE",
        "CONFIG_PATTERN",
        "pattern",
        "name",
        "pattern",
        "name",
        "pattern",
        "pattern",
        "name",
        "name",
        "config",
        "json",
        "JSONObject",
        "fromObject",
        "config",
        "name",
        "json",
        "getString",
        "CONFIG_NAME",
        "Type",
        "valueOf",
        "json",
        "getString",
        "CONFIG_TYPE",
        "json",
        "containsKey",
        "CONFIG_TYPE",
        "pattern",
        "Pattern",
        "compile",
        "json",
        "getString",
        "CONFIG_PATTERN",
        "pattern",
        "pattern",
        "pattern",
        "pattern",
        "name",
        "name",
        "name",
        "name",
        "Override",
        "Pattern",
        "compile",
        "pattern",
        "toString",
        "name",
        "json",
        "json",
        "put",
        "CONFIG_TYPE",
        "getType",
        "name",
        "json",
        "put",
        "CONFIG_NAME",
        "getName",
        "getPattern",
        "json",
        "put",
        "CONFIG_PATTERN",
        "getPattern",
        "pattern",
        "json",
        "toString"
    ],
    "literals": [
        "\"name\"",
        "\"type\"",
        "\"pattern\""
    ],
    "variables": [
        "type",
        "pattern",
        "name"
    ],
    "comments": [],
    "docstrings": [
        "* Zed Attack Proxy (ZAP) and its related class files.\n * \n * ZAP is an HTTP/HTTPS proxy for assessing web application security.\n * \n * Copyright The ZAP Development Team\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\"); \n * you may not use this file except in compliance with the License. \n * You may obtain a copy of the License at \n * \n *   http://www.apache.org/licenses/LICENSE-2.0 \n *   \n * Unless required by applicable law or agreed to in writing, software \n * distributed under the License is distributed on an \"AS IS\" BASIS, \n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. \n * See the License for the specific language governing permissions and \n * limitations under the License.",
        "* Represents a rule for modifying the structure of an app as it is represented in the Sites tree\n * \n * Data driven nodes are nodes that represent URL path elements that come from a database\n * For example with http://www.example.com/a/b/c we normally assume that 'a', 'b' and 'c' are part of the \n * structure of the application. However if 'b' is actually a value retrieved from a db then we should treat \n * all such nodes as the same, so:\n * \thttp://www.example.com/a/b/c\n * \thttp://www.example.com/a/ddd/c\n * \thttp://www.example.com/a/eee/c\n * are the same as far as the application structure is concerned - theres no point attacking all 3 as the same code\n * will be behind them.\n * \n * Structural parameters are parameters (as opposed to URL path elements) that actually define part of the\n * structure of an app. These are most commonly found in 'single page apps' where:\n * \thttp://www.example.com/a/b?page=c\n * \thttp://www.example.com/a/b?page=d\n * \thttp://www.example.com/a/b?page=e\n * all represent different pages with different functionality.\n * In this case the 'page' parameter should be treated as being 'structural' rather than data\n * \n * @author simon\n * @since TODO add version"
    ],
    "functions": [
        "StructuralNodeModifier",
        "StructuralNodeModifier",
        "Type",
        "getType",
        "Pattern",
        "getPattern",
        "setPattern",
        "getName",
        "setName",
        "StructuralNodeModifier",
        "clone",
        "getConfig"
    ],
    "classes": [
        "StructuralNodeModifier"
    ]
}