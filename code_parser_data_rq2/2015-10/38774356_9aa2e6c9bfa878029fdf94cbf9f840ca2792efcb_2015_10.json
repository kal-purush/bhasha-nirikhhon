{
    "identifiers": [
        "numpy",
        "np",
        "ScatterPlotChecker",
        "axis",
        "axis",
        "plot",
        "x0",
        "y0",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_num_points",
        "axis",
        "plot",
        "x1",
        "y1",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_num_points",
        "axis",
        "scatter",
        "x2",
        "y2",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_num_points",
        "axis",
        "scatter",
        "x3",
        "y3",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_num_points",
        "np",
        "array",
        "np",
        "array",
        "axis",
        "plot",
        "x4",
        "T",
        "y4",
        "T",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_num_points",
        "axis",
        "axis",
        "plot",
        "x0",
        "y0",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_x_data_equal",
        "x0",
        "pc",
        "assert_y_data_equal",
        "y0",
        "axis",
        "plot",
        "x1",
        "y1",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_x_data_equal",
        "np",
        "concatenate",
        "x0",
        "x1",
        "pc",
        "assert_y_data_equal",
        "np",
        "concatenate",
        "y0",
        "y1",
        "axis",
        "scatter",
        "x2",
        "y2",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_x_data_equal",
        "np",
        "concatenate",
        "x0",
        "x1",
        "x2",
        "pc",
        "assert_y_data_equal",
        "np",
        "concatenate",
        "y0",
        "y1",
        "y2",
        "axis",
        "scatter",
        "x3",
        "y3",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_x_data_equal",
        "np",
        "concatenate",
        "x0",
        "x1",
        "x2",
        "x3",
        "pc",
        "assert_y_data_equal",
        "np",
        "concatenate",
        "y0",
        "y1",
        "y2",
        "y3",
        "np",
        "array",
        "np",
        "array",
        "axis",
        "plot",
        "x4",
        "T",
        "y4",
        "T",
        "ScatterPlotChecker",
        "axis",
        "pc",
        "assert_x_data_equal",
        "np",
        "concatenate",
        "x0",
        "x1",
        "x4",
        "ravel",
        "x2",
        "x3",
        "pc",
        "assert_y_data_equal",
        "np",
        "concatenate",
        "y0",
        "y1",
        "y4",
        "ravel",
        "y2",
        "y3",
        "axes",
        "np",
        "random",
        "rand",
        "np",
        "random",
        "rand",
        "axes",
        "plot",
        "x",
        "y",
        "color",
        "ms",
        "axes",
        "scatter",
        "x",
        "y",
        "s",
        "linewidth",
        "axes",
        "plot",
        "x",
        "y",
        "color",
        "ms",
        "axes",
        "scatter",
        "x",
        "y",
        "s",
        "linewidth",
        "ax",
        "axes",
        "ScatterPlotChecker",
        "ax",
        "pc",
        "assert_x_data_equal",
        "x",
        "pc",
        "assert_y_data_equal",
        "y",
        "pc",
        "assert_colors_equal",
        "pc",
        "assert_edgecolors_equal",
        "pc",
        "assert_edgewidths_equal",
        "pc",
        "assert_sizes_equal",
        "pc",
        "assert_markersizes_equal",
        "pc",
        "assert_alphas_equal",
        "pc",
        "assert_markers_equal",
        "axes",
        "np",
        "random",
        "rand",
        "np",
        "random",
        "rand",
        "np",
        "random",
        "rand",
        "np",
        "random",
        "rand",
        "i",
        "axes",
        "plot",
        "x",
        "i",
        "y",
        "i",
        "color",
        "colors",
        "i",
        "ms",
        "sizes",
        "i",
        "axes",
        "scatter",
        "x",
        "y",
        "c",
        "colors",
        "s",
        "sizes",
        "linewidth",
        "i",
        "axes",
        "scatter",
        "x",
        "i",
        "y",
        "i",
        "c",
        "colors",
        "i",
        "s",
        "sizes",
        "i",
        "linewidth",
        "ax",
        "axes",
        "ScatterPlotChecker",
        "ax",
        "pc",
        "assert_x_data_equal",
        "x",
        "pc",
        "assert_y_data_equal",
        "y",
        "pc",
        "assert_colors_equal",
        "colors",
        "pc",
        "assert_edgecolors_equal",
        "pc",
        "assert_edgewidths_equal",
        "pc",
        "assert_sizes_equal",
        "sizes",
        "pc",
        "assert_markersizes_equal",
        "sizes",
        "pc",
        "assert_alphas_equal",
        "colors",
        "pc",
        "assert_markers_equal"
    ],
    "literals": [
        "'o'",
        "'o'",
        "'o'",
        "'o'",
        "'o'",
        "'o'",
        "'o'",
        "'b'",
        "'o'",
        "'b'",
        "'b'",
        "'k'",
        "'o'",
        "'o'",
        "'k'",
        "'o'"
    ],
    "variables": [
        "x0",
        "y0",
        "pc",
        "x1",
        "y1",
        "pc",
        "x2",
        "y2",
        "pc",
        "x3",
        "y3",
        "pc",
        "x4",
        "y4",
        "pc",
        "x0",
        "y0",
        "pc",
        "x1",
        "y1",
        "pc",
        "x2",
        "y2",
        "pc",
        "x3",
        "y3",
        "pc",
        "x4",
        "y4",
        "pc",
        "x",
        "y",
        "pc",
        "x",
        "y",
        "colors",
        "sizes",
        "pc"
    ],
    "comments": [
        "first just try for a single set of points",
        "now plot another line",
        "do it with scatter",
        "plot some more things with scatter",
        "and now two more lines (six points), plotted at the same time",
        "first just try for a single set of points",
        "now plot another line",
        "do it with scatter",
        "plot some more things with scatter",
        "and now two more lines (six points), plotted at the same time",
        "create a scatter plot with plot",
        "create a scatter plot with scatter",
        "create a scatter plot with plot *and* scatter!",
        "can't actually check markers, since they are unrecoverable",
        "from plt.scatter :(",
        "choose some random colors and sizes",
        "create a scatter plot with plot, using a loop",
        "create a scatter plot with scatter",
        "create a scatter plot with scatter, using a loop",
        "can't actually check markers, since they are unrecoverable",
        "from plt.scatter :("
    ],
    "docstrings": [
        "\"\"\"Are the number of points correct?\"\"\"",
        "\"\"\"Are the x and y values correct?\"\"\""
    ],
    "functions": [
        "test_num_points",
        "test_data",
        "test_example_1",
        "test_example_2"
    ],
    "classes": []
}