{
    "identifiers": [
        "binascii",
        "a2b_hex",
        "b2a_hex",
        "datetime",
        "datetime",
        "socket",
        "socket",
        "timeout",
        "AF_INET",
        "SOCK_STREAM",
        "socket",
        "error",
        "socket_error",
        "pack",
        "unpack",
        "sys",
        "ssl",
        "select",
        "time",
        "collections",
        "itertools",
        "logging",
        "threading",
        "ssl",
        "wrap_socket",
        "SSLError",
        "ImportError",
        "socket",
        "ssl",
        "wrap_socket",
        "sslerror",
        "SSLError",
        "_ssl",
        "SSL_ERROR_WANT_READ",
        "SSL_ERROR_WANT_WRITE",
        "json",
        "ImportError",
        "simplejson",
        "json",
        "logging",
        "getLogger",
        "use_sandbox",
        "cert_file",
        "key_file",
        "enhanced",
        "pyAPNs",
        "use_sandbox",
        "cert_file",
        "key_file",
        "enhanced",
        "staticmethod",
        "num",
        "pack",
        "num",
        "staticmethod",
        "num",
        "pack",
        "num",
        "staticmethod",
        "unpack",
        "staticmethod",
        "num",
        "pack",
        "num",
        "staticmethod",
        "unpack",
        "staticmethod",
        "unpack",
        "property",
        "_feedback_connection",
        "FeedbackConnection",
        "use_sandbox",
        "use_sandbox",
        "cert_file",
        "cert_file",
        "key_file",
        "key_file",
        "_feedback_connection",
        "property",
        "_gateway_connection",
        "GatewayConnection",
        "use_sandbox",
        "use_sandbox",
        "cert_file",
        "cert_file",
        "key_file",
        "key_file",
        "enhanced",
        "enhanced",
        "_gateway_connection",
        "cert_file",
        "key_file",
        "timeout",
        "enhanced",
        "pyAPNsConnection",
        "cert_file",
        "key_file",
        "timeout",
        "enhanced",
        "_disconnect",
        "_logger",
        "debug",
        "__class__",
        "i",
        "xrange",
        "socket",
        "AF_INET",
        "SOCK_STREAM",
        "_socket",
        "settimeout",
        "timeout",
        "_socket",
        "connect",
        "server",
        "port",
        "timeout",
        "enhanced",
        "time",
        "time",
        "_socket",
        "setblocking",
        "wrap_socket",
        "_socket",
        "key_file",
        "cert_file",
        "do_handshake_on_connect",
        "_ssl",
        "do_handshake",
        "ssl",
        "SSLError",
        "err",
        "ssl",
        "SSL_ERROR_WANT_READ",
        "err",
        "args",
        "select",
        "select",
        "_ssl",
        "ssl",
        "SSL_ERROR_WANT_WRITE",
        "err",
        "args",
        "select",
        "select",
        "_ssl",
        "i",
        "xrange",
        "wrap_socket",
        "_socket",
        "key_file",
        "cert_file",
        "SSLError",
        "ex",
        "ex",
        "args",
        "SSL_ERROR_WANT_READ",
        "sys",
        "exc_clear",
        "ex",
        "args",
        "SSL_ERROR_WANT_WRITE",
        "sys",
        "exc_clear",
        "_logger",
        "debug",
        "__class__",
        "connection_alive",
        "_socket",
        "_socket",
        "close",
        "_ssl",
        "_ssl",
        "close",
        "_logger",
        "info",
        "__class__",
        "_ssl",
        "connection_alive",
        "_connect",
        "_ssl",
        "n",
        "_connection",
        "read",
        "n",
        "enhanced",
        "time",
        "time",
        "select",
        "select",
        "_connection",
        "WAIT_WRITE_TIMEOUT_SEC",
        "len",
        "wlist",
        "_connection",
        "sendall",
        "length",
        "_logger",
        "debug",
        "length",
        "_logger",
        "warning",
        "WAIT_WRITE_TIMEOUT_SEC",
        "_connection",
        "write",
        "body",
        "action_loc_key",
        "loc_key",
        "loc_args",
        "launch_image",
        "pyPayloadAlert",
        "body",
        "action_loc_key",
        "loc_key",
        "loc_args",
        "launch_image",
        "body",
        "body",
        "action_loc_key",
        "action_loc_key",
        "loc_key",
        "loc_key",
        "loc_args",
        "loc_args",
        "launch_image",
        "launch_image",
        "d",
        "payload_size",
        "pyPayloadTooLargeError",
        "payload_size",
        "alert",
        "badge",
        "sound",
        "category",
        "custom",
        "content_available",
        "pyPayload",
        "alert",
        "badge",
        "sound",
        "category",
        "custom",
        "content_available",
        "_check_size",
        "alert",
        "isinstance",
        "alert",
        "pyPayloadAlert",
        "alert",
        "alert",
        "sound",
        "sound",
        "badge",
        "badge",
        "category",
        "category",
        "content_available",
        "d",
        "update",
        "d",
        "d",
        "update",
        "custom",
        "d",
        "json",
        "dumps",
        "separators",
        "ensure_ascii",
        "encode",
        "len",
        "json",
        "payload_length",
        "MAX_PAYLOAD_LENGTH",
        "pyPayloadTooLargeError",
        "payload_length",
        "join",
        "n",
        "getattr",
        "n",
        "n",
        "attrs",
        "__class__",
        "args",
        "frame_data",
        "token_hex",
        "payload",
        "identifier",
        "expiry",
        "priority",
        "frame_data",
        "extend",
        "pyAPNs",
        "packed_uint_big_endian",
        "item_len",
        "a2b_hex",
        "token_hex",
        "pyAPNs",
        "packed_ushort_big_endian",
        "len",
        "token_bin",
        "token_length_bin",
        "token_bin",
        "frame_data",
        "extend",
        "token_item",
        "item_len",
        "len",
        "token_item",
        "payload",
        "json",
        "pyAPNs",
        "packed_ushort_big_endian",
        "len",
        "payload_json",
        "payload_length_bin",
        "payload_json",
        "frame_data",
        "extend",
        "payload_item",
        "item_len",
        "len",
        "payload_item",
        "pyAPNs",
        "packed_uint_big_endian",
        "identifier",
        "pyAPNs",
        "packed_ushort_big_endian",
        "len",
        "identifier_bin",
        "identifier_length_bin",
        "identifier_bin",
        "frame_data",
        "extend",
        "identifier_item",
        "item_len",
        "len",
        "identifier_item",
        "pyAPNs",
        "packed_uint_big_endian",
        "expiry",
        "pyAPNs",
        "packed_ushort_big_endian",
        "len",
        "expiry_bin",
        "expiry_length_bin",
        "expiry_bin",
        "frame_data",
        "extend",
        "expiry_item",
        "item_len",
        "len",
        "expiry_item",
        "pyAPNs",
        "packed_uchar",
        "priority",
        "pyAPNs",
        "packed_ushort_big_endian",
        "len",
        "priority_bin",
        "priority_length_bin",
        "priority_bin",
        "frame_data",
        "extend",
        "priority_item",
        "item_len",
        "len",
        "priority_item",
        "frame_data",
        "item_len",
        "item_len",
        "pyAPNs",
        "packed_uint_big_endian",
        "item_len",
        "notification_data",
        "append",
        "token_hex",
        "payload",
        "identifier",
        "expiry",
        "priority",
        "gateway_connection",
        "x",
        "gateway_connection",
        "_get_enhanced_notification",
        "x",
        "x",
        "x",
        "x",
        "x",
        "notification_data",
        "notifications",
        "frame_data",
        "pyAPNsConnection",
        "use_sandbox",
        "kwargs",
        "FeedbackConnection",
        "kwargs",
        "use_sandbox",
        "read",
        "BUF_SIZE",
        "data",
        "data",
        "chunk",
        "_chunks",
        "buff",
        "chunk",
        "buff",
        "len",
        "buff",
        "len",
        "buff",
        "pyAPNs",
        "unpacked_ushort_big_endian",
        "buff",
        "token_length",
        "len",
        "buff",
        "bytes_to_read",
        "pyAPNs",
        "unpacked_uint_big_endian",
        "buff",
        "datetime",
        "utcfromtimestamp",
        "fail_time_unix",
        "b2a_hex",
        "buff",
        "bytes_to_read",
        "token",
        "fail_time",
        "buff",
        "bytes_to_read",
        "pyAPNsConnection",
        "use_sandbox",
        "kwargs",
        "GatewayConnection",
        "kwargs",
        "use_sandbox",
        "enhanced",
        "time",
        "time",
        "threading",
        "RLock",
        "collections",
        "deque",
        "maxlen",
        "SENT_BUFFER_QTY",
        "threading",
        "RLock",
        "ErrorResponseHandlerWorker",
        "apns_connection",
        "_error_response_handler_worker",
        "start",
        "_logger",
        "debug",
        "token_hex",
        "payload",
        "a2b_hex",
        "token_hex",
        "pyAPNs",
        "packed_ushort_big_endian",
        "len",
        "token_bin",
        "payload",
        "json",
        "pyAPNs",
        "packed_ushort_big_endian",
        "len",
        "payload_json",
        "sys",
        "version_info",
        "zero_byte",
        "zero_byte",
        "token_length_bin",
        "token_bin",
        "payload_length_bin",
        "payload_json",
        "notification",
        "token_hex",
        "payload",
        "identifier",
        "expiry",
        "a2b_hex",
        "token_hex",
        "payload",
        "json",
        "ENHANCED_NOTIFICATION_FORMAT",
        "len",
        "payload",
        "pack",
        "fmt",
        "ENHANCED_NOTIFICATION_COMMAND",
        "identifier",
        "expiry",
        "TOKEN_LENGTH",
        "token",
        "len",
        "payload",
        "payload",
        "notification",
        "token_hex",
        "payload",
        "identifier",
        "expiry",
        "enhanced",
        "time",
        "time",
        "_get_enhanced_notification",
        "token_hex",
        "payload",
        "identifier",
        "expiry",
        "i",
        "xrange",
        "WRITE_RETRY",
        "_send_lock",
        "_make_sure_error_response_handler_worker_alive",
        "write",
        "message",
        "_sent_notifications",
        "append",
        "identifier",
        "message",
        "socket_error",
        "e",
        "i",
        "_logger",
        "exception",
        "identifier",
        "e",
        "e",
        "i",
        "delay",
        "time",
        "sleep",
        "delay",
        "write",
        "_get_notification",
        "token_hex",
        "payload",
        "_error_response_handler_worker",
        "_error_response_handler_worker",
        "is_alive",
        "_init_error_response_handler_worker",
        "_",
        "xrange",
        "TIMEOUT_SEC",
        "_error_response_handler_worker",
        "is_alive",
        "_logger",
        "debug",
        "time",
        "sleep",
        "_logger",
        "warning",
        "TIMEOUT_SEC",
        "frame",
        "_sent_notifications",
        "frame",
        "get_notifications",
        "write",
        "frame",
        "get_frame",
        "response_listener",
        "response_listener",
        "_error_response_handler_worker",
        "_error_response_handler_worker",
        "close",
        "time",
        "time",
        "_last_activity_time",
        "TIMEOUT_IDLE",
        "threading",
        "apns_connection",
        "threading",
        "name",
        "__class__",
        "apns_connection",
        "_close_signal",
        "_logger",
        "debug",
        "_apns_connection",
        "_is_idle_timeout",
        "time",
        "time",
        "_apns_connection",
        "_last_activity_time",
        "_logger",
        "debug",
        "idled_time",
        "_apns_connection",
        "connection_alive",
        "time",
        "sleep",
        "select",
        "select",
        "_apns_connection",
        "_connection",
        "WAIT_READ_TIMEOUT_SEC",
        "len",
        "rlist",
        "_apns_connection",
        "_send_lock",
        "_apns_connection",
        "read",
        "ERROR_RESPONSE_LENGTH",
        "len",
        "buff",
        "ERROR_RESPONSE_LENGTH",
        "unpack",
        "ERROR_RESPONSE_FORMAT",
        "buff",
        "command",
        "status",
        "identifier",
        "_apns_connection",
        "_response_listener",
        "_apns_connection",
        "_response_listener",
        "Util",
        "convert_error_response_to_dict",
        "error_response",
        "_logger",
        "info",
        "error_response",
        "_apns_connection",
        "_disconnect",
        "_resend_notifications_by_id",
        "identifier",
        "len",
        "buff",
        "_logger",
        "warning",
        "_apns_connection",
        "_disconnect",
        "socket_error",
        "e",
        "_logger",
        "exception",
        "e",
        "e",
        "_apns_connection",
        "_disconnect",
        "time",
        "sleep",
        "_apns_connection",
        "_disconnect",
        "_logger",
        "debug",
        "failed_identifier",
        "Util",
        "getListIndexFromID",
        "_apns_connection",
        "_sent_notifications",
        "failed_identifier",
        "_resend_notification_by_range",
        "fail_idx",
        "len",
        "_apns_connection",
        "_sent_notifications",
        "start_idx",
        "end_idx",
        "_apns_connection",
        "collections",
        "deque",
        "itertools",
        "islice",
        "_apns_connection",
        "_sent_notifications",
        "start_idx",
        "end_idx",
        "_logger",
        "info",
        "len",
        "_apns_connection",
        "_sent_notifications",
        "sent_notification",
        "_apns_connection",
        "_sent_notifications",
        "_logger",
        "debug",
        "sent_notification",
        "_apns_connection",
        "write",
        "sent_notification",
        "socket_error",
        "e",
        "_logger",
        "exception",
        "sent_notification",
        "e",
        "e",
        "time",
        "sleep",
        "DELAY_RESEND_SEC",
        "classmethod",
        "this_class",
        "the_list",
        "identifier",
        "next",
        "index",
        "index",
        "d",
        "the_list",
        "d",
        "identifier",
        "classmethod",
        "this_class",
        "error_response_tuple",
        "ER_STATUS",
        "error_response_tuple",
        "ER_IDENTIFER",
        "error_response_tuple"
    ],
    "literals": [
        "'!'",
        "'B'",
        "'H'",
        "'32s'",
        "'H'",
        "'%ds'",
        "'!'",
        "'B'",
        "'I'",
        "'I'",
        "'H'",
        "'32s'",
        "'H'",
        "'%ds'",
        "'!'",
        "'B'",
        "'B'",
        "'I'",
        "'status'",
        "'identifier'",
        "'>B'",
        "'>H'",
        "'>H'",
        "'>I'",
        "'>I'",
        "'c'",
        "\"%s APNS connection establishing...\"",
        "\"%s APNS connection established\"",
        "\" %s APNS connection closed\"",
        "\"sent length: %d\"",
        "\"write socket descriptor is not ready after \"",
        "'body'",
        "'action-loc-key'",
        "'loc-key'",
        "'loc-args'",
        "'launch-image'",
        "'alert'",
        "'alert'",
        "'sound'",
        "'badge'",
        "'category'",
        "'content-available'",
        "'aps'",
        "','",
        "':'",
        "'utf-8'",
        "\"alert\"",
        "\"badge\"",
        "\"sound\"",
        "\"category\"",
        "\"custom\"",
        "\", \"",
        "\"%s=%r\"",
        "\"%s(%s)\"",
        "'\\2'",
        "'\\1'",
        "'\\2'",
        "'\\3'",
        "'\\4'",
        "'\\5'",
        "'token'",
        "'payload'",
        "'identifier'",
        "'expiry'",
        "\"priority\"",
        "'id'",
        "'identifier'",
        "'message'",
        "'token'",
        "'payload'",
        "'identifier'",
        "'expiry'",
        "'feedback.push.apple.com'",
        "'feedback.sandbox.push.apple.com'",
        "''",
        "'gateway.push.apple.com'",
        "'gateway.sandbox.push.apple.com'",
        "\"initialized error-response handler worker\"",
        "'\\0'",
        "'utf-8'",
        "'id'",
        "'message'",
        "\"sending notification with id:\"",
        "\" to APNS failed: \"",
        "\": \"",
        "\" in \"",
        "\"th attempt, will wait \"",
        "\" secs for next action\"",
        "\"error response handler worker is running\"",
        "\"error response handler worker is not started after %s secs\"",
        "\"received close thread signal\"",
        "\"connection idle after %d secs\"",
        "\"got error-response from APNS:\"",
        "\"read socket got 0 bytes data\"",
        "\"exception occur when reading APNS error-response: \"",
        "\": \"",
        "\"error-response handler worker closed\"",
        "\"resending %s notifications to APNS\"",
        "\"resending notification with id:\"",
        "'id'",
        "\" to APNS\"",
        "'message'",
        "\"resending notification with id:\"",
        "'id'",
        "\" failed: \"",
        "\": \"",
        "'id'"
    ],
    "variables": [
        "_logger",
        "MAX_PAYLOAD_LENGTH",
        "NOTIFICATION_COMMAND",
        "ENHANCED_NOTIFICATION_COMMAND",
        "NOTIFICATION_FORMAT",
        "ENHANCED_NOTIFICATION_FORMAT",
        "ERROR_RESPONSE_FORMAT",
        "TOKEN_LENGTH",
        "ERROR_RESPONSE_LENGTH",
        "DELAY_RESEND_SEC",
        "SENT_BUFFER_QTY",
        "WAIT_WRITE_TIMEOUT_SEC",
        "WAIT_READ_TIMEOUT_SEC",
        "WRITE_RETRY",
        "ER_STATUS",
        "ER_IDENTIFER",
        "use_sandbox",
        "cert_file",
        "key_file",
        "_feedback_connection",
        "_gateway_connection",
        "enhanced",
        "_feedback_connection",
        "_gateway_connection",
        "cert_file",
        "key_file",
        "timeout",
        "_socket",
        "_ssl",
        "enhanced",
        "connection_alive",
        "_socket",
        "_last_activity_time",
        "_ssl",
        "_ssl",
        "connection_alive",
        "connection_alive",
        "_last_activity_time",
        "_",
        "wlist",
        "_",
        "length",
        "body",
        "action_loc_key",
        "loc_key",
        "loc_args",
        "launch_image",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "payload_size",
        "alert",
        "badge",
        "sound",
        "category",
        "custom",
        "content_available",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "payload_length",
        "attrs",
        "args",
        "frame_data",
        "notification_data",
        "item_len",
        "token_bin",
        "token_length_bin",
        "token_item",
        "payload_json",
        "payload_length_bin",
        "payload_item",
        "identifier_bin",
        "identifier_length_bin",
        "identifier_item",
        "expiry_bin",
        "expiry_length_bin",
        "expiry_item",
        "priority_bin",
        "priority_length_bin",
        "priority_item",
        "notifications",
        "server",
        "port",
        "BUF_SIZE",
        "data",
        "buff",
        "token_length",
        "bytes_to_read",
        "fail_time_unix",
        "fail_time",
        "token",
        "buff",
        "server",
        "port",
        "_last_activity_time",
        "_send_lock",
        "_error_response_handler_worker",
        "_response_listener",
        "_sent_notifications",
        "_send_lock",
        "_error_response_handler_worker",
        "token_bin",
        "token_length_bin",
        "payload_json",
        "payload_length_bin",
        "zero_byte",
        "zero_byte",
        "notification",
        "token",
        "payload",
        "fmt",
        "notification",
        "_last_activity_time",
        "message",
        "delay",
        "TIMEOUT_SEC",
        "_response_listener",
        "TIMEOUT_IDLE",
        "_apns_connection",
        "_close_signal",
        "_close_signal",
        "idled_time",
        "rlist",
        "_",
        "_",
        "buff",
        "command",
        "status",
        "identifier",
        "error_response",
        "fail_idx",
        "_sent_notifications"
    ],
    "comments": [
        "PypyAPNs was developed by Simon Whitaker <simon@goosoftware.co.uk>",
        "Source available at https://github.com/simonwhitaker/PypyAPNs",
        "",
        "PypyAPNs is distributed under the terms of the MIT license.",
        "",
        "Copyright (c) 2011 Goo Software Ltd",
        "",
        "Permission is hereby granted, free of charge, to any person obtaining a copy of",
        "this software and associated documentation files (the \"Software\"), to deal in",
        "the Software without restriction, including without limitation the rights to",
        "use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies",
        "of the Software, and to permit persons to whom the Software is furnished to do",
        "so, subject to the following conditions:",
        "",
        "The above copyright notice and this permission notice shall be included in all",
        "copies or substantial portions of the Software.",
        "",
        "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
        "IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
        "FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",
        "AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
        "LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",
        "OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE",
        "SOFTWARE.",
        "network big-endian",
        "command",
        "token length",
        "token",
        "payload length",
        "payload",
        "network big-endian",
        "command",
        "identifier",
        "expiry",
        "token length",
        "token",
        "payload length",
        "payload",
        "network big-endian",
        "command",
        "status",
        "identifier",
        "Establish an SSL connection",
        "Fallback for socket timeout.",
        "Fallback for 'SSLError: _ssl.c:489: The handshake operation timed out'",
        "nonblocking socket",
        "DEBUG",
        "blocking socket",
        "Alert can be either a string or a pyPayloadAlert",
        "object",
        "Quit if there's no more data to read",
        "Sanity check: after a socket read we should always have at least",
        "6 bytes in the buffer",
        "Remove data for current token from buffer",
        "break out of inner while loop - i.e. go and fetch",
        "some more data and append to buffer",
        "start error-response monitoring thread",
        "wait potential error-response to be read",
        "there's some data from pyAPNs",
        "there is error response from APNS",
        "DEBUG",
        "APNS close connection arbitrarily",
        "DEBUG",
        "avoid crazy loop if something bad happened. e.g. using invalid certificate",
        "DEBUG",
        "pop-out success notifications till failed one",
        "DEBUG",
        "DEBUG",
        "DEBUG",
        "DEBUG"
    ],
    "docstrings": [
        "\"\"\"A class representing an Apple Push Notification service connection\"\"\"",
        "\"\"\"\n        Set use_sandbox to True to use the sandbox (test) pyAPNs servers.\n        Default is False.\n        \"\"\"",
        "\"\"\"\n        Returns an unsigned char in packed form\n        \"\"\"",
        "\"\"\"\n        Returns an unsigned short in packed big-endian (network) form\n        \"\"\"",
        "\"\"\"\n        Returns an unsigned short from a packed big-endian (network) byte\n        array\n        \"\"\"",
        "\"\"\"\n        Returns an unsigned int in packed big-endian (network) form\n        \"\"\"",
        "\"\"\"\n        Returns an unsigned int from a packed big-endian (network) byte array\n        \"\"\"",
        "\"\"\"\n        Returns an unsigned char from a packed big-endian (network) byte array\n        \"\"\"",
        "\"\"\"\n    A generic connection class for communicating with the pyAPNs\n    \"\"\"",
        "\"\"\"A class representing an pyAPNs message payload\"\"\"",
        "\"\"\"Returns the payload as a regular Python dictionary\"\"\"",
        "\"\"\"A class representing an pyAPNs message frame for multiple sending\"\"\"",
        "\"\"\"Add a notification message to the frame\"\"\"",
        "\"\"\"Get the frame buffer\"\"\"",
        "\"\"\"\n    A class representing a connection to the pyAPNs Feedback server\n    \"\"\"",
        "\"\"\"\n        A generator that yields (token_hex, fail_time) pairs retrieved from\n        the pyAPNs feedback server\n        \"\"\"",
        "\"\"\"\n    A class that represents a connection to the pyAPNs gateway server\n    \"\"\"",
        "\"\"\"\n        Takes a token as a hex string and a payload as a Python dict and sends\n        the notification\n        \"\"\"",
        "\"\"\"\n        form notification data in an enhanced format\n        \"\"\"",
        "\"\"\"\n        in enhanced mode, send_notification may return error response from pyAPNs if any\n        \"\"\""
    ],
    "functions": [
        "packed_uchar",
        "packed_ushort_big_endian",
        "unpacked_ushort_big_endian",
        "packed_uint_big_endian",
        "unpacked_uint_big_endian",
        "unpacked_char_big_endian",
        "feedback_server",
        "gateway_server",
        "__del__",
        "_connect",
        "_disconnect",
        "_connection",
        "read",
        "write",
        "json",
        "_check_size",
        "__repr__",
        "get_frame",
        "add_item",
        "get_notifications",
        "__str__",
        "_chunks",
        "items",
        "_init_error_response_handler_worker",
        "_get_notification",
        "_get_enhanced_notification",
        "send_notification",
        "_make_sure_error_response_handler_worker_alive",
        "send_notification_multiple",
        "register_response_listener",
        "force_close",
        "_is_idle_timeout",
        "close",
        "run",
        "_resend_notifications_by_id",
        "_resend_notification_by_range",
        "getListIndexFromID",
        "convert_error_response_to_dict"
    ],
    "classes": [
        "pyAPNs",
        "pyAPNsConnection",
        "pyPayloadAlert",
        "pyPayloadTooLargeError",
        "pyPayload",
        "pyFrame",
        "FeedbackConnection",
        "GatewayConnection",
        "ErrorResponseHandlerWorker",
        "Util"
    ]
}