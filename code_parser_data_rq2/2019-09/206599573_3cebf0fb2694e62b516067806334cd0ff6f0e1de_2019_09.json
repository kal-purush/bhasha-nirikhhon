{
    "identifiers": [
        "java",
        "util",
        "java",
        "io",
        "java",
        "io",
        "FileOutputStream",
        "java",
        "net",
        "DatagramPacket",
        "java",
        "net",
        "InetAddress",
        "java",
        "net",
        "DatagramSocket",
        "java",
        "net",
        "SocketException",
        "java",
        "net",
        "UnknownHostException",
        "java",
        "net",
        "SocketTimeoutException",
        "java",
        "io",
        "File",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "java",
        "net",
        "MulticastSocket",
        "directory",
        "port",
        "name",
        "broadcastPort",
        "files",
        "socket",
        "server",
        "name",
        "port",
        "name",
        "name",
        "port",
        "parseInt",
        "port",
        "directory",
        "getProperty",
        "name",
        "files",
        "server",
        "broadcastPort",
        "server",
        "start",
        "directory",
        "port",
        "name",
        "files",
        "size",
        "m",
        "files",
        "entrySet",
        "m",
        "getKey",
        "m",
        "getValue",
        "broadcastMessage",
        "address",
        "peer",
        "socket",
        "socket",
        "setBroadcast",
        "buffer",
        "broadcastMessage",
        "peer",
        "getPort",
        "getBytes",
        "packet",
        "buffer",
        "buffer",
        "length",
        "address",
        "broadcastPort",
        "peer",
        "socket",
        "send",
        "packet",
        "socket",
        "close",
        "args",
        "p",
        "args",
        "args",
        "scan",
        "input",
        "scan",
        "nextLine",
        "input",
        "equals",
        "input",
        "startsWith",
        "parts",
        "input",
        "split",
        "p",
        "directory",
        "p",
        "files",
        "put",
        "parts",
        "p",
        "directory",
        "p",
        "showFiles",
        "input",
        "startsWith",
        "broadcast",
        "input",
        "split",
        "InetAddress",
        "getByName",
        "p",
        "input",
        "equals",
        "p",
        "showFiles",
        "input",
        "scan",
        "nextLine",
        "p",
        "server",
        "terminate",
        "receive",
        "res",
        "port",
        "portBroadcast",
        "DpReceive",
        "socket",
        "peer",
        "run",
        "receiveFlag",
        "port",
        "peer",
        "peer",
        "peer",
        "portBroadcast",
        "port",
        "port",
        "peer",
        "getPort",
        "socket",
        "portBroadcast",
        "e",
        "e",
        "e",
        "getMessage",
        "receive",
        "run",
        "receiveFlag",
        "run",
        "receiveFlag",
        "DpReceive",
        "receive",
        "receive",
        "length",
        "socket",
        "setSoTimeout",
        "e",
        "receiveFlag",
        "socket",
        "receive",
        "DpReceive",
        "receiveFlag",
        "e",
        "run",
        "address",
        "DpReceive",
        "getAddress",
        "appendByte",
        "receive",
        "toString",
        "portReceived",
        "parseInt",
        "appendByte",
        "receive",
        "toString",
        "split",
        "fileName",
        "appendByte",
        "receive",
        "toString",
        "split",
        "peer",
        "files",
        "containsKey",
        "fileName",
        "portReceived",
        "port",
        "peer",
        "fileName",
        "peer",
        "getPort",
        "res",
        "res",
        "fileName",
        "peer",
        "getPort",
        "getBytes",
        "dSend",
        "res",
        "res",
        "length",
        "address",
        "portReceived",
        "socket",
        "send",
        "dSend",
        "e",
        "e",
        "getMessage",
        "receive",
        "socket",
        "close",
        "a",
        "a",
        "ret",
        "i",
        "a",
        "i",
        "ret",
        "append",
        "a",
        "i",
        "i",
        "ret",
        "peer",
        "ds",
        "DPSend",
        "port",
        "ip",
        "receive",
        "send",
        "peer",
        "receive",
        "peer",
        "peer",
        "port",
        "peer",
        "getPort",
        "ds",
        "port",
        "ds",
        "setSoTimeout",
        "e",
        "e",
        "getMessage",
        "ip",
        "InetAddress",
        "getLocalHost",
        "start",
        "receive",
        "send",
        "receive",
        "receivePacket",
        "receive",
        "receive",
        "length",
        "ds",
        "receive",
        "receivePacket",
        "e",
        "e",
        "getMessage",
        "e",
        "e",
        "getMessage",
        "receive",
        "ds",
        "close",
        "ds",
        "port",
        "appendByte",
        "receive",
        "toString",
        "fileName",
        "appendByte",
        "receive",
        "toString",
        "split",
        "portPacket",
        "appendByte",
        "receive",
        "toString",
        "split",
        "address",
        "receivePacket",
        "getAddress",
        "send",
        "fileName",
        "peer",
        "getPort",
        "getBytes",
        "DPSend",
        "send",
        "send",
        "length",
        "address",
        "parseInt",
        "portPacket",
        "ds",
        "send",
        "DPSend",
        "receive",
        "receivePacket",
        "receive",
        "receive",
        "length",
        "ds",
        "receive",
        "receivePacket",
        "e",
        "e",
        "getMessage",
        "e",
        "e",
        "getMessage",
        "appendByte",
        "receive",
        "toString",
        "file",
        "appendByte",
        "receive",
        "toString",
        "split",
        "f",
        "file",
        "check",
        "appendByte",
        "receive",
        "toString",
        "split",
        "check",
        "length",
        "peer",
        "files",
        "put",
        "f",
        "peer",
        "getDirectory",
        "receiveFile",
        "ds",
        "f",
        "peer",
        "getDirectory",
        "port",
        "address",
        "e",
        "e",
        "getMessage",
        "e",
        "e",
        "getMessage",
        "ds",
        "close",
        "e",
        "e",
        "getMessage",
        "ds",
        "fileName",
        "dir",
        "portReceive",
        "ip",
        "ip",
        "portReceive",
        "directory",
        "dir",
        "fileName",
        "socketReceive",
        "ds",
        "n",
        "fileLength",
        "n",
        "DpReceive",
        "fileLength",
        "fileLength",
        "length",
        "socketReceive",
        "receive",
        "DpReceive",
        "e",
        "e",
        "getMessage",
        "fileSize",
        "i",
        "i",
        "n",
        "i",
        "fileSize",
        "fileLength",
        "i",
        "pow",
        "i",
        "fileSize",
        "maxSize",
        "maxSize",
        "numberOfPackets",
        "fileSize",
        "maxSize",
        "numberOfPackets",
        "lastPacketSize",
        "fileSize",
        "maxSize",
        "lastPacketSize",
        "fileContent",
        "fileSize",
        "lossCounter",
        "t",
        "numberOfPackets",
        "t",
        "socketReceive",
        "setSoTimeout",
        "t",
        "e",
        "e",
        "getMessage",
        "i",
        "i",
        "numberOfPackets",
        "i",
        "i",
        "arr",
        "maxSize",
        "DpReceive",
        "arr",
        "arr",
        "length",
        "socketReceive",
        "receive",
        "DpReceive",
        "e",
        "lossCounter",
        "e",
        "e",
        "getMessage",
        "j",
        "j",
        "maxSize",
        "j",
        "fileContent",
        "j",
        "i",
        "maxSize",
        "arr",
        "j",
        "arr",
        "lastPacketSize",
        "DpReceive",
        "arr",
        "arr",
        "length",
        "socketReceive",
        "receive",
        "DpReceive",
        "e",
        "lossCounter",
        "e",
        "e",
        "getMessage",
        "socketReceive",
        "close",
        "i",
        "i",
        "fileSize",
        "maxSize",
        "i",
        "fileContent",
        "i",
        "numberOfPackets",
        "maxSize",
        "arr",
        "i",
        "fos",
        "directory",
        "fos",
        "write",
        "fileContent",
        "e",
        "lossCounter",
        "a",
        "a",
        "ret",
        "i",
        "a",
        "i",
        "ret",
        "append",
        "a",
        "i",
        "i",
        "ret",
        "peer",
        "port",
        "ds",
        "DpReceive",
        "DpSend",
        "receive",
        "send",
        "peer",
        "peer",
        "peer",
        "port",
        "peer",
        "getPort",
        "start",
        "receive",
        "send",
        "DpReceive",
        "receive",
        "receive",
        "length",
        "ds",
        "port",
        "ds",
        "setSoTimeout",
        "ds",
        "receive",
        "DpReceive",
        "appendByte",
        "receive",
        "toString",
        "fileName",
        "appendByte",
        "receive",
        "toString",
        "split",
        "portPacket",
        "appendByte",
        "receive",
        "toString",
        "split",
        "address",
        "DpReceive",
        "getAddress",
        "send",
        "fileName",
        "getBytes",
        "DpSend",
        "send",
        "send",
        "length",
        "address",
        "parseInt",
        "portPacket",
        "ds",
        "send",
        "DpSend",
        "fileName",
        "sendFile",
        "ds",
        "fileName",
        "peer",
        "getDirectory",
        "parseInt",
        "portPacket",
        "address",
        "ds",
        "close",
        "e",
        "e",
        "getMessage",
        "ds",
        "close",
        "ds",
        "fileName",
        "address",
        "portSend",
        "ip",
        "ip",
        "portSend",
        "directory",
        "address",
        "fileName",
        "file",
        "file",
        "directory",
        "fileContent",
        "fileContent",
        "Files",
        "readAllBytes",
        "file",
        "toPath",
        "e",
        "fileSize",
        "fileContent",
        "length",
        "fileSize",
        "maxSize",
        "maxSize",
        "numberOfPackets",
        "fileSize",
        "maxSize",
        "numberOfPackets",
        "lastPacketSize",
        "fileSize",
        "maxSize",
        "lastPacketSize",
        "t",
        "numberOfPackets",
        "t",
        "n",
        "fileLength",
        "n",
        "n",
        "fileLength",
        "n",
        "fileSize",
        "pow",
        "n",
        "fileSize",
        "fileLength",
        "n",
        "pow",
        "n",
        "n",
        "DpSend",
        "fileLength",
        "fileLength",
        "length",
        "ip",
        "portSend",
        "ds",
        "send",
        "DpSend",
        "e",
        "e",
        "getMessage",
        "i",
        "i",
        "numberOfPackets",
        "i",
        "arr",
        "maxSize",
        "j",
        "j",
        "maxSize",
        "j",
        "arr",
        "j",
        "fileContent",
        "j",
        "i",
        "maxSize",
        "sleep",
        "t",
        "e",
        "DpSend",
        "arr",
        "arr",
        "length",
        "ip",
        "portSend",
        "ds",
        "send",
        "DpSend",
        "e",
        "e",
        "getMessage",
        "sleep",
        "t",
        "e",
        "arr",
        "lastPacketSize",
        "i",
        "i",
        "lastPacketSize",
        "i",
        "arr",
        "i",
        "fileContent",
        "i",
        "numberOfPackets",
        "maxSize",
        "DpSend",
        "arr",
        "arr",
        "length",
        "ip",
        "portSend",
        "ds",
        "send",
        "DpSend",
        "e",
        "t",
        "TimeUnit",
        "MILLISECONDS",
        "sleep",
        "t",
        "a",
        "a",
        "ret",
        "i",
        "a",
        "i",
        "ret",
        "append",
        "a",
        "i",
        "i",
        "ret"
    ],
    "literals": [
        "\"user.dir\"",
        "\"/../Dirs/\"",
        "\"/\"",
        "\" \"",
        "\" \"",
        "\"New peer joined!\"",
        "\"terminate\"",
        "\"p2p -serve\"",
        "\" \"",
        "\"p2p -receive\"",
        "\" \"",
        "\"255.255.255.255\"",
        "\"p2p -show\"",
        "\"Server: Thread terminated\"",
        "\"Server: The peer is listening to the broadcast messages\"",
        "\"Server: Socket Exception Occurred\"",
        "\"Server: Broadcast message received\"",
        "\"Server: message = \"",
        "\" \"",
        "\" \"",
        "\"Server: File Found :) = \"",
        "\" \"",
        "\" \"",
        "\"Server: Sorry I don't have this file !\"",
        "\"Server: broadcast socket closed\"",
        "\"Client: Socket Exception Occurred: \"",
        "\"Client: Waiting for other peers to respond\"",
        "\"Client: first try timeout: \"",
        "\"Client: first try null reference: \"",
        "\"Client: Response Received = \"",
        "\" \"",
        "\" \"",
        "\" \"",
        "\"Client: second try timeout: \"",
        "\"Client: second try null reference: \"",
        "\"Client: receiving completed: \"",
        "\" \"",
        "\" \"",
        "\"UDP connection failed\"",
        "\"Client: error getting the file\"",
        "\"Client: datagram socket closed successfully\"",
        "\"Client: error closing datagram socket: \"",
        "\"Client: action done\"",
        "\"receiveFile method executed\"",
        "\"ip = \"",
        "\"port = \"",
        "\"Requested File Size = \"",
        "\"Max Size sending via UDP = \"",
        "\"Number of packets = \"",
        "\"Last packet size = \"",
        "\"Packet \"",
        "\" is receiving ...\"",
        "\"Packet Loss occurred!\"",
        "\"Last packet Loss!\"",
        "\" packets lost\"",
        "\"Sender: New Sender is admitted\"",
        "\"Sender: Request message received = \"",
        "\" \"",
        "\" \"",
        "\"Sender: File Sent = \"",
        "\"Sender: done\"",
        "\"Sender: socket closed\"",
        "\"Sender: Timeout\"",
        "\"sendFile method invoked\"",
        "\"IP = \"",
        "\"Port = \"",
        "\"Requested File Size = \"",
        "\"Max Size sending via UDP = \"",
        "\"Number of packets = \"",
        "\"Last packet size = \"",
        "\"Sender IO problem2\"",
        "\"got interrupted!\"",
        "\"Sender IO problem3\"",
        "\"got interrupted!\"",
        "\"Sender IO problem4\""
    ],
    "variables": [
        "directory",
        "port",
        "name",
        "files",
        "server",
        "receive",
        "res",
        "port",
        "portBroadcast",
        "socket",
        "peer",
        "peer",
        "ds",
        "port",
        "ip",
        "receive",
        "send",
        "peer",
        "port",
        "ds",
        "receive",
        "send",
        "file"
    ],
    "comments": [
        "unique directory for each peer",
        "unique port for each peer",
        "unique name for each peer",
        "this port is bond to broadcast",
        "saving name and location of files",
        "this socket is used when we want to broadcast",
        "dedicated thread",
        "the directory to save files",
        "all the peers are listening to the broadcast port",
        "starts listening to the broadcast port",
        "this peer catches all the offers from other peers who have desired file",
        "p.files.put(parts[3], parts[5]);",
        "showing all the files that the peer can serve",
        "p2p -receive hello.txt",
        "terminates the peer's thread",
        "result",
        "checks thread status",
        "while the thread is alive",
        "System.out.println(\"Time out\");",
        "close command entered by the peer",
        "processing the broadcast message",
        "avoid sending broadcast message to itself",
        "[fileName + portNumber] to Client",
        "create a client from a peer",
        "receive buffer",
        "sent buffer",
        "maximum size of 2 to the power of 16",
        "in case that requested file does not exist in network",
        "second try",
        "close datagram socket and create new one",
        "to Sender",
        "receiving size of the requested file",
        "changing base of the size from 128 to 10",
        "assembling packets to form a file",
        "number of packet loss",
        "receiving packets",
        "appending packets",
        "receiving the last packet",
        "closing the socket",
        "appending the last packet",
        "create sender from a peer",
        "receive buffer",
        "sent buffer",
        "when file has sent by another peer",
        "System.out.println(\"S1\");",
        "changing base of the size from 10 to 128",
        "sending packets"
    ],
    "docstrings": [
        "* constructor\n     * @param name is the name of the peer\n     * @param port is the port of the peer",
        "TODO: create Dirs directory next to the folder containing this code and then create proper subfolders\n            for each peer if it does not exist",
        "* shows the peer's files name and location",
        "*\n     * @param broadcastMessage contains the desired file\n     * @param address ip to create packet\n     * @param peer is sent to get its port\n     * @throws IOException if anything went wrong",
        "TODO: run Peer.java in terminal with two arguments name and port\n            java Peer.java 1 8080",
        "TODO: if you want to specify the path for each part comment out the line below\n                    sample input:\n                    p2p -serve -name <file_name> -path <file_path>",
        "TODO: otherwise sample input will be like:\n                    p2p -serve -name <file_name>\n                    and file path will be the directory of the peer",
        "* These commands will be executed in new thread",
        "* these commands will be executed in new thread",
        "* these commands will be executed in new thread"
    ],
    "functions": [
        "Peer",
        "getDirectory",
        "getPort",
        "getName",
        "showFiles",
        "broadcast",
        "main",
        "Server",
        "terminate",
        "run",
        "StringBuilder",
        "appendByte",
        "Client",
        "run",
        "receiveFile",
        "StringBuilder",
        "appendByte",
        "Sender",
        "run",
        "sendFile",
        "sleep",
        "StringBuilder",
        "appendByte"
    ],
    "classes": [
        "Peer",
        "Server",
        "Client",
        "Sender"
    ]
}