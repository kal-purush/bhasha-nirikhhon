{
    "identifiers": [
        "com",
        "redhat",
        "vertx",
        "pipeline",
        "com",
        "redhat",
        "ResourceUtils",
        "com",
        "redhat",
        "vertx",
        "Engine",
        "io",
        "vertx",
        "core",
        "json",
        "JsonObject",
        "io",
        "vertx",
        "junit5",
        "VertxExtension",
        "io",
        "vertx",
        "junit5",
        "VertxTestContext",
        "io",
        "vertx",
        "reactivex",
        "core",
        "Vertx",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "junit",
        "jupiter",
        "api",
        "extension",
        "ExtendWith",
        "java",
        "util",
        "concurrent",
        "TimeUnit",
        "org",
        "assertj",
        "core",
        "api",
        "Assertions",
        "assertThat",
        "ExtendWith",
        "Test",
        "vertx",
        "testContext",
        "e",
        "ResourceUtils",
        "fileContentsFromResource",
        "vertx",
        "rxDeployVerticle",
        "e",
        "blockingGet",
        "inputDoc",
        "put",
        "newDoc",
        "e",
        "execute",
        "inputDoc",
        "timeout",
        "TimeUnit",
        "SECONDS",
        "blockingGet",
        "assertThat",
        "newDoc",
        "getString",
        "isEqualTo",
        "assertThat",
        "newDoc",
        "getString",
        "isEqualTo",
        "assertThat",
        "newDoc",
        "containsKey",
        "isFalse",
        "assertThat",
        "newDoc",
        "containsKey",
        "isFalse",
        "testContext",
        "completeNow"
    ],
    "literals": [
        "\"com/redhat/vertx/pipeline/incomplete-pipeline-test.yaml\"",
        "\"q\"",
        "\"foo\"",
        "\"q\"",
        "\"foo\"",
        "\"r\"",
        "\"foo\"",
        "\"absent\"",
        "\"x\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [],
    "functions": [
        "testIncompletePipeline"
    ],
    "classes": [
        "IncompletePipelineTest"
    ]
}