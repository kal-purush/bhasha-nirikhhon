{
    "identifiers": [
        "os",
        "glob",
        "matplotlib",
        "image",
        "mpimg",
        "cv2",
        "image_dir",
        "im_type",
        "image_types",
        "file",
        "glob",
        "glob",
        "os",
        "path",
        "join",
        "image_dir",
        "im_type",
        "mpimg",
        "imread",
        "file",
        "im",
        "im_list",
        "append",
        "im",
        "im_type",
        "im_list",
        "image",
        "cv2",
        "resize",
        "image",
        "standard_im",
        "label",
        "label",
        "numerical_val",
        "image_list",
        "item",
        "image_list",
        "item",
        "item",
        "standardize_input",
        "image",
        "encode",
        "label",
        "standard_list",
        "append",
        "standardized_im",
        "binary_label",
        "standard_list"
    ],
    "literals": [
        "\"day\"",
        "\"night\"",
        "\"*\"",
        "'day'"
    ],
    "variables": [
        "im_list",
        "image_types",
        "im",
        "standard_im",
        "numerical_val",
        "numerical_val",
        "standard_list",
        "image",
        "label",
        "standardized_im",
        "binary_label"
    ],
    "comments": [
        "Helper functions",
        "library for loading images from a directory",
        "This function loads in images and their labels and places them in a list",
        "The list contains all images and their associated labels",
        "For example, after data is loaded, im_list[0][:] will be the first image-label pair in the list",
        "Populate this empty image list",
        "Iterate through each color folder",
        "Iterate through each image file in each image_type folder",
        "glob reads in any image with the extension \"image_dir/im_type/*\"",
        "Read in the image",
        "Check if the image exists/if it's been correctly read-in",
        "Append the image, and it's type (red, green, yellow) to the image list",
        "Standardize the input images",
        "Resize each image to the desired input size: 600x1100px (hxw).",
        "Standardize the output",
        "With each loaded image, we also specify the expected output.",
        "For this, we use binary numerical values 0/1 = night/day.",
        "This function should take in an RGB image and return a new, standardized version",
        "600 height x 1100 width image size (px x px)",
        "Resize image and pre-process so that all \"standard\" images are the same size",
        "Examples:",
        "encode(\"day\") should return: 1",
        "encode(\"night\") should return: 0",
        "else it is night and can stay 0",
        "using both functions above, standardize the input images and output labels",
        "Empty image data array",
        "Iterate through all the image-label pairs",
        "Standardize the image",
        "Create a numerical label",
        "Append the image, and it's one hot encoded label to the full, processed list of image data"
    ],
    "docstrings": [],
    "functions": [
        "load_dataset",
        "standardize_input",
        "encode",
        "standardize"
    ],
    "classes": []
}