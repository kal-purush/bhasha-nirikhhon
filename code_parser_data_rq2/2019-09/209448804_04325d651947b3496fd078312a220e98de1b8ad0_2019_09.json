{
    "identifiers": [
        "Collections",
        "Generic",
        "IO",
        "Linq",
        "Net",
        "Security",
        "Claims",
        "Threading",
        "Tasks",
        "Amazon",
        "S3",
        "AspNet",
        "Security",
        "OAuth",
        "Validation",
        "AttorneyJournal",
        "Data",
        "AttorneyJournal",
        "Helpers",
        "AttorneyJournal",
        "Models",
        "AttorneyJournal",
        "Models",
        "AccountViewModels",
        "AttorneyJournal",
        "Models",
        "ResourceModels",
        "AttorneyJournal",
        "Services",
        "Microsoft",
        "AspNetCore",
        "Authorization",
        "Microsoft",
        "AspNetCore",
        "Builder",
        "Microsoft",
        "AspNetCore",
        "Identity",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Microsoft",
        "AspNetCore",
        "Mvc",
        "Rendering",
        "Microsoft",
        "EntityFrameworkCore",
        "Microsoft",
        "Extensions",
        "Options",
        "Stripe",
        "AttorneyJournal",
        "Controllers",
        "Authorize",
        "Controller",
        "UserManager",
        "ApplicationUser",
        "SignInManager",
        "ApplicationUser",
        "UserManager",
        "ApplicationUser",
        "userManager",
        "SignInManager",
        "ApplicationUser",
        "signInManager",
        "IEmailSender",
        "emailSender",
        "ISmsSender",
        "smsSender",
        "ApplicationDbContext",
        "applicationDbContext",
        "IOptions",
        "IdentityOptions",
        "identityOptions",
        "IAmazonS3",
        "amazonS3",
        "_userManager",
        "userManager",
        "_signInManager",
        "signInManager",
        "_emailSender",
        "emailSender",
        "_smsSender",
        "smsSender",
        "_applicationDbContext",
        "applicationDbContext",
        "_amazonS3",
        "amazonS3",
        "HttpGet",
        "AllowAnonymous",
        "returnUrl",
        "ViewData",
        "returnUrl",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "LoginViewModel",
        "model",
        "returnUrl",
        "EnsureDatabaseCreated",
        "_applicationDbContext",
        "ViewData",
        "returnUrl",
        "ModelState",
        "IsValid",
        "_signInManager",
        "PasswordSignInAsync",
        "model",
        "Email",
        "model",
        "Password",
        "model",
        "RememberMe",
        "result",
        "Succeeded",
        "RedirectToLocal",
        "returnUrl",
        "result",
        "RequiresTwoFactor",
        "RedirectToAction",
        "nameof",
        "SendCode",
        "ReturnUrl",
        "returnUrl",
        "model",
        "RememberMe",
        "result",
        "IsLockedOut",
        "View",
        "ModelState",
        "AddModelError",
        "Empty",
        "View",
        "model",
        "View",
        "model",
        "HttpPost",
        "AllowAnonymous",
        "StripeConfiguration",
        "ApiKey",
        "PaymentIntentService",
        "PaymentIntentCreateOptions",
        "Amount",
        "Currency",
        "PaymentMethodTypes",
        "ReceiptEmail",
        "paymentIntentService",
        "Create",
        "createOptions",
        "Ok",
        "HttpGet",
        "AllowAnonymous",
        "returnUrl",
        "Unauthorized",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "RegisterViewModel",
        "model",
        "returnUrl",
        "Unauthorized",
        "EnsureDatabaseCreated",
        "_applicationDbContext",
        "ViewData",
        "returnUrl",
        "ModelState",
        "IsValid",
        "ApplicationUser",
        "UserName",
        "model",
        "Email",
        "Email",
        "model",
        "Email",
        "_userManager",
        "CreateAsync",
        "user",
        "model",
        "Password",
        "result",
        "Succeeded",
        "_userManager",
        "GenerateEmailConfirmationTokenAsync",
        "user",
        "Url",
        "Action",
        "userId",
        "user",
        "Id",
        "code",
        "Request",
        "Scheme",
        "_emailSender",
        "SendEmailAsync",
        "model",
        "Email",
        "callbackUrl",
        "_signInManager",
        "SignInAsync",
        "user",
        "RedirectToLocal",
        "returnUrl",
        "AddErrors",
        "result",
        "View",
        "model",
        "HttpPost",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "_signInManager",
        "SignOutAsync",
        "RedirectToAction",
        "nameof",
        "HomeController",
        "Index",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "provider",
        "returnUrl",
        "EnsureDatabaseCreated",
        "_applicationDbContext",
        "Url",
        "Action",
        "ReturnUrl",
        "returnUrl",
        "_signInManager",
        "ConfigureExternalAuthenticationProperties",
        "provider",
        "redirectUrl",
        "ChallengeResult",
        "provider",
        "properties",
        "HttpGet",
        "AllowAnonymous",
        "IActionResult",
        "returnUrl",
        "_signInManager",
        "GetExternalLoginInfoAsync",
        "info",
        "RedirectToAction",
        "nameof",
        "Login",
        "_signInManager",
        "ExternalLoginSignInAsync",
        "info",
        "LoginProvider",
        "info",
        "ProviderKey",
        "isPersistent",
        "result",
        "Succeeded",
        "RedirectToLocal",
        "returnUrl",
        "result",
        "RequiresTwoFactor",
        "RedirectToAction",
        "nameof",
        "SendCode",
        "ReturnUrl",
        "returnUrl",
        "result",
        "IsLockedOut",
        "View",
        "ViewData",
        "returnUrl",
        "ViewData",
        "info",
        "LoginProvider",
        "info",
        "Principal",
        "FindFirstValue",
        "ClaimTypes",
        "Email",
        "View",
        "ExternalLoginConfirmationViewModel",
        "Email",
        "email",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "ExternalLoginConfirmationViewModel",
        "model",
        "returnUrl",
        "ModelState",
        "IsValid",
        "_signInManager",
        "GetExternalLoginInfoAsync",
        "info",
        "View",
        "ApplicationUser",
        "UserName",
        "model",
        "Email",
        "Email",
        "model",
        "Email",
        "_userManager",
        "CreateAsync",
        "user",
        "result",
        "Succeeded",
        "result",
        "_userManager",
        "AddLoginAsync",
        "user",
        "info",
        "result",
        "Succeeded",
        "_signInManager",
        "SignInAsync",
        "user",
        "RedirectToLocal",
        "returnUrl",
        "AddErrors",
        "result",
        "ViewData",
        "returnUrl",
        "View",
        "model",
        "HttpGet",
        "AllowAnonymous",
        "IActionResult",
        "userId",
        "code",
        "userId",
        "code",
        "View",
        "_userManager",
        "FindByIdAsync",
        "userId",
        "user",
        "View",
        "_userManager",
        "ConfirmEmailAsync",
        "user",
        "code",
        "View",
        "result",
        "Succeeded",
        "HttpGet",
        "AllowAnonymous",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "ForgotPasswordViewModel",
        "model",
        "ModelState",
        "IsValid",
        "_userManager",
        "FindByNameAsync",
        "model",
        "Email",
        "user",
        "_userManager",
        "IsEmailConfirmedAsync",
        "user",
        "View",
        "View",
        "model",
        "HttpGet",
        "AllowAnonymous",
        "View",
        "HttpGet",
        "AllowAnonymous",
        "code",
        "code",
        "View",
        "View",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "ResetPasswordViewModel",
        "model",
        "ModelState",
        "IsValid",
        "View",
        "model",
        "_userManager",
        "FindByNameAsync",
        "model",
        "Email",
        "user",
        "RedirectToAction",
        "nameof",
        "ResetPasswordConfirmation",
        "_userManager",
        "ResetPasswordAsync",
        "user",
        "model",
        "Code",
        "model",
        "Password",
        "result",
        "Succeeded",
        "RedirectToAction",
        "nameof",
        "ResetPasswordConfirmation",
        "AddErrors",
        "result",
        "View",
        "HttpGet",
        "AllowAnonymous",
        "View",
        "HttpGet",
        "AllowAnonymous",
        "ActionResult",
        "returnUrl",
        "rememberMe",
        "_signInManager",
        "GetTwoFactorAuthenticationUserAsync",
        "user",
        "View",
        "_userManager",
        "GetValidTwoFactorProvidersAsync",
        "user",
        "userFactors",
        "Select",
        "SelectListItem",
        "Text",
        "purpose",
        "Value",
        "purpose",
        "ToList",
        "View",
        "SendCodeViewModel",
        "Providers",
        "factorOptions",
        "ReturnUrl",
        "returnUrl",
        "RememberMe",
        "rememberMe",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "SendCodeViewModel",
        "model",
        "ModelState",
        "IsValid",
        "View",
        "_signInManager",
        "GetTwoFactorAuthenticationUserAsync",
        "user",
        "View",
        "_userManager",
        "GenerateTwoFactorTokenAsync",
        "user",
        "model",
        "SelectedProvider",
        "IsNullOrWhiteSpace",
        "code",
        "View",
        "code",
        "model",
        "SelectedProvider",
        "_emailSender",
        "SendEmailAsync",
        "_userManager",
        "GetEmailAsync",
        "user",
        "message",
        "model",
        "SelectedProvider",
        "_smsSender",
        "SendSmsAsync",
        "_userManager",
        "GetPhoneNumberAsync",
        "user",
        "message",
        "RedirectToAction",
        "nameof",
        "VerifyCode",
        "Provider",
        "model",
        "SelectedProvider",
        "model",
        "ReturnUrl",
        "model",
        "RememberMe",
        "HttpGet",
        "AllowAnonymous",
        "IActionResult",
        "provider",
        "rememberMe",
        "returnUrl",
        "_signInManager",
        "GetTwoFactorAuthenticationUserAsync",
        "user",
        "View",
        "View",
        "VerifyCodeViewModel",
        "Provider",
        "provider",
        "ReturnUrl",
        "returnUrl",
        "RememberMe",
        "rememberMe",
        "HttpPost",
        "AllowAnonymous",
        "ValidateAntiForgeryToken",
        "IActionResult",
        "VerifyCodeViewModel",
        "model",
        "ModelState",
        "IsValid",
        "View",
        "model",
        "_signInManager",
        "TwoFactorSignInAsync",
        "model",
        "Provider",
        "model",
        "Code",
        "model",
        "RememberMe",
        "model",
        "RememberBrowser",
        "result",
        "Succeeded",
        "RedirectToLocal",
        "model",
        "ReturnUrl",
        "result",
        "IsLockedOut",
        "View",
        "ModelState",
        "AddModelError",
        "View",
        "model",
        "ApplicationDbContext",
        "context",
        "_databaseChecked",
        "_databaseChecked",
        "context",
        "Database",
        "EnsureCreated",
        "IdentityResult",
        "result",
        "error",
        "result",
        "Errors",
        "ModelState",
        "AddModelError",
        "Empty",
        "error",
        "Description",
        "ApplicationUser",
        "_userManager",
        "GetUserAsync",
        "User",
        "returnUrl",
        "Url",
        "IsLocalUrl",
        "returnUrl",
        "Redirect",
        "returnUrl",
        "RedirectToAction",
        "nameof",
        "HomeController",
        "Index",
        "AllowAnonymous",
        "HttpPost",
        "Produces",
        "Route",
        "IActionResult",
        "FromBody",
        "RegisterViewModel",
        "model",
        "ModelState",
        "IsValid",
        "ApplicationUser",
        "UserName",
        "model",
        "Email",
        "Email",
        "model",
        "Email",
        "DateOfAccident",
        "model",
        "DateOfAccident",
        "Name",
        "model",
        "Name",
        "Surname",
        "model",
        "Surname",
        "_userManager",
        "CreateAsync",
        "user",
        "model",
        "Password",
        "result",
        "Succeeded",
        "Guid",
        "NewGuid",
        "IsNullOrWhiteSpace",
        "model",
        "ProfileImage",
        "Convert",
        "FromBase64String",
        "model",
        "ProfileImage",
        "Path",
        "GetTempFileName",
        "FileStream",
        "targetFilePath",
        "FileMode",
        "Create",
        "imageFile",
        "Write",
        "Length",
        "imageFile",
        "Flush",
        "AmazonS3Helper",
        "_amazonS3",
        "amazonClient",
        "UploadFileAsync",
        "targetFilePath",
        "profileObjectKey",
        "user",
        "ProfilePictureKey",
        "profileObjectKey",
        "_emailSender",
        "SendEmailAsync",
        "model",
        "Email",
        "model",
        "Name",
        "model",
        "Surname",
        "_applicationDbContext",
        "SaveChangesAsync",
        "Json",
        "SetResponseAndReturn",
        "statusCode",
        "HttpStatusCode",
        "Created",
        "Json",
        "SetResponseAndReturn",
        "result",
        "Errors",
        "Select",
        "x",
        "Code",
        "x",
        "Description",
        "ToList",
        "HttpStatusCode",
        "BadRequest",
        "Json",
        "SetResponseAndReturn",
        "statusCode",
        "HttpStatusCode",
        "BadRequest",
        "AllowAnonymous",
        "HttpGet",
        "Route",
        "IActionResult",
        "mail",
        "_userManager",
        "FindByNameAsync",
        "mail",
        "user",
        "NotFound",
        "_userManager",
        "GeneratePasswordResetTokenAsync",
        "user",
        "Url",
        "Action",
        "userId",
        "user",
        "Id",
        "code",
        "HttpContext",
        "Request",
        "Scheme",
        "_emailSender",
        "SendEmailAsync",
        "mail",
        "callbackUrl",
        "user",
        "Name",
        "user",
        "Surname",
        "Json",
        "result"
    ],
    "literals": [
        "\"ReturnUrl\"",
        "\"ReturnUrl\"",
        "\"Lockout\"",
        "\"Invalid login attempt.\"",
        "\"sk_test_slG5nYGhZM40uMPptHs7GTzL00ptIeUVTT\"",
        "\"usd\"",
        "\"card\"",
        "\"abc.rosen@example.com\"",
        "\"ReturnUrl\"",
        "\"ConfirmEmail\"",
        "\"Account\"",
        "\"\"",
        "\"Confirm your account\"",
        "\"Please confirm your account by clicking this link: <a href=\\\"\"",
        "\"\\\">link</a>\"",
        "\"Home\"",
        "\"ExternalLoginCallback\"",
        "\"Account\"",
        "\"Lockout\"",
        "\"ReturnUrl\"",
        "\"LoginProvider\"",
        "\"ExternalLoginConfirmation\"",
        "\"ExternalLoginFailure\"",
        "\"ReturnUrl\"",
        "\"Error\"",
        "\"Error\"",
        "\"ConfirmEmail\"",
        "\"Error\"",
        "\"ForgotPasswordConfirmation\"",
        "\"Error\"",
        "\"Account\"",
        "\"Account\"",
        "\"Error\"",
        "\"Error\"",
        "\"Error\"",
        "\"Your security code is: \"",
        "\"Email\"",
        "\"\"",
        "\"Security Code\"",
        "\"Phone\"",
        "\"Error\"",
        "\"Lockout\"",
        "\"\"",
        "\"Invalid code.\"",
        "\"Home\"",
        "\"application/json\"",
        "\"api/registerWithCode\"",
        "\"Welcome to Visual Evidence Recorder\"",
        "\"Welcome to Visual Evidence Recorder.\"",
        "\"api/forgotPassword/{mail}\"",
        "\"ResetPassword\"",
        "\"Account\"",
        "\"Reset Password\"",
        "\"Please reset your password by clicking here: <a href=\\\"\"",
        "\"\\\">link</a>\""
    ],
    "variables": [
        "_userManager",
        "_signInManager",
        "IEmailSender",
        "_emailSender",
        "ISmsSender",
        "_smsSender",
        "IAmazonS3",
        "_amazonS3",
        "ApplicationDbContext",
        "_applicationDbContext",
        "_databaseChecked",
        "result",
        "paymentIntentService",
        "createOptions",
        "user",
        "result",
        "code",
        "callbackUrl",
        "redirectUrl",
        "properties",
        "info",
        "result",
        "email",
        "info",
        "user",
        "result",
        "user",
        "result",
        "user",
        "user",
        "result",
        "user",
        "userFactors",
        "factorOptions",
        "user",
        "code",
        "message",
        "user",
        "result",
        "user",
        "result",
        "profileObjectKey",
        "targetFilePath",
        "imageFile",
        "amazonClient",
        "user",
        "code",
        "callbackUrl"
    ],
    "comments": [
        "",
        "GET: /Account/Login",
        "",
        "POST: /Account/Login",
        "This doesn't count login failures towards account lockout",
        "To enable password failures to trigger account lockout, set lockoutOnFailure: true",
        "If we got this far, something failed, redisplay form",
        "",
        "GET: /Account/Register",
        "ViewData[\"ReturnUrl\"] = returnUrl;",
        "return View();",
        "",
        "POST: /Account/Register",
        "For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=532713",
        "Send an email with this link",
        "If we got this far, something failed, redisplay form",
        "",
        "POST: /Account/Logout",
        "",
        "POST: /Account/ExternalLogin",
        "Request a redirect to the external login provider.",
        "",
        "GET: /Account/ExternalLoginCallback",
        "Sign in the user with this external login provider if the user already has a login.",
        "If the user does not have an account, then ask the user to create an account.",
        "",
        "POST: /Account/ExternalLoginConfirmation",
        "Get the information about the user from the external login provider",
        "GET: /Account/ConfirmEmail",
        "",
        "GET: /Account/ForgotPassword",
        "",
        "POST: /Account/ForgotPassword",
        "Don't reveal that the user does not exist or is not confirmed",
        "For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=532713",
        "Send an email with this link",
        "var code = await _userManager.GeneratePasswordResetTokenAsync(user);",
        "var callbackUrl = Url.Action(\"ResetPassword\", \"Account\", new { userId = user.Id, code = code }, protocol: Context.Request.Scheme);",
        "await _emailSender.SendEmailAsync(model.Email, \"Reset Password\",",
        "\"Please reset your password by clicking here: <a href=\\\"\" + callbackUrl + \"\\\">link</a>\");",
        "return View(\"ForgotPasswordConfirmation\");",
        "If we got this far, something failed, redisplay form",
        "",
        "GET: /Account/ForgotPasswordConfirmation",
        "",
        "GET: /Account/ResetPassword",
        "",
        "POST: /Account/ResetPassword",
        "Don't reveal that the user does not exist",
        "",
        "GET: /Account/ResetPasswordConfirmation",
        "",
        "GET: /Account/SendCode",
        "",
        "POST: /Account/SendCode",
        "Generate the token and send it",
        "",
        "GET: /Account/VerifyCode",
        "Require that the user has already logged in via username/password or external login",
        "",
        "POST: /Account/VerifyCode",
        "The following code protects for brute force attacks against the two factor codes.",
        "If a user enters incorrect codes for a specified amount of time then the user account",
        "will be locked out for a specified amount of time.",
        "The following code creates the database and schema if they don't exist.",
        "This is a temporary workaround since deploying database through EF migrations is",
        "not yet supported in this release.",
        "Please see this http://go.microsoft.com/fwlink/?LinkID=615859 for more information on how to do deploy the database",
        "when publishing your application.",
        "Verify validity of RegistrationCode.",
        "</summary>",
        "<param name=\"code\"></param>",
        "<returns></returns>",
        "[AllowAnonymous]",
        "[HttpGet]",
        "[Route(\"api/verifyRegistrationCode/{code}\")]",
        "public async Task<PreRegistrationModel> VerifyRegistrationCode(string code)",
        "{",
        "var found = await _applicationDbContext.RegistrationCodes.FirstOrDefaultAsync(x => x.Code == code && !x.HasBeenUsed);",
        "if (found == null) Response.StatusCode = (int)HttpStatusCode.NotFound;",
        "return found != null",
        "? new PreRegistrationModel { IsSuccess = true, Code = code, Mail = found.Mail, Name = found.Name, Surname = found.Surname }",
        ": new PreRegistrationModel { IsSuccess = false };",
        "}",
        "Registration API.",
        "</summary>",
        "<param name=\"model\"></param>",
        "<returns></returns>",
        "var availableCode = await _applicationDbContext.RegistrationCodes.FirstOrDefaultAsync(x => x.Code == model.RegistrationCode && !x.HasBeenUsed);",
        "if (availableCode == null)",
        "{",
        "ModelState.AddModelError(nameof(model.RegistrationCode), \"Code is not valid or has been already used!\");",
        "return Json(new HttpResponseMessageWithError(null, new List<string> { \"Code is not valid or has been already used!\" }));",
        "}",
        "For more information on how to enable account confirmation and password reset please visit http://go.microsoft.com/fwlink/?LinkID=532713",
        "Send an email with this link",
        "var code = await _userManager.GenerateEmailConfirmationTokenAsync(user);",
        "var callbackUrl = Url.Action(\"ConfirmEmail\", \"Account\", new { userId = user.Id, code }, Request.Scheme);",
        "TODO: cambiare con \"Grazie per esserti registrato",
        "await _emailSender.SendEmailAsync(model.Email, \"Confirm your account\", \"Please confirm your account by clicking this link: <a href=\\\"\" + callbackUrl + \"\\\">link</a>\");",
        "availableCode.HasBeenUsed = true;",
        "availableCode.UserId = user.Id;",
        "var ticket = await AuthorizationController.CreateTicketAsync(_signInManager, _identityOptions, new OpenIdConnectRequest { GrantType = \"password\", ClientId = \"postman\", Username = model.Email, Password = model.Password }, user);",
        "var signInResult = SignIn(ticket.Principal, ticket.Properties, ticket.AuthenticationScheme);",
        "return Json(signInResult);",
        "Password recovery.",
        "</summary>",
        "<param name=\"mail\"></param>",
        "<returns></returns>",
        "var userDetail = await _applicationDbContext.RegistrationCodes.FirstOrDefaultAsync(x => x.UserId == user.Id);"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "AccountController",
        "IActionResult",
        "Login",
        "Login",
        "IActionResult",
        "PaymentStrip",
        "IActionResult",
        "Register",
        "Register",
        "Logout",
        "IActionResult",
        "ExternalLogin",
        "ExternalLoginCallback",
        "ExternalLoginConfirmation",
        "ConfirmEmail",
        "IActionResult",
        "ForgotPassword",
        "ForgotPassword",
        "IActionResult",
        "ForgotPasswordConfirmation",
        "IActionResult",
        "ResetPassword",
        "ResetPassword",
        "IActionResult",
        "ResetPasswordConfirmation",
        "SendCode",
        "SendCode",
        "VerifyCode",
        "VerifyCode",
        "EnsureDatabaseCreated",
        "AddErrors",
        "GetCurrentUserAsync",
        "IActionResult",
        "RedirectToLocal",
        "RegisterWithRegistrationCode",
        "ForgotPasswordMobile"
    ],
    "classes": [
        "AccountController"
    ]
}