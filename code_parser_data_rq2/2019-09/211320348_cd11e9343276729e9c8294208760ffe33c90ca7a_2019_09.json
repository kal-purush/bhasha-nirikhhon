{
    "identifiers": [
        "matplotlib",
        "numpy",
        "np",
        "sklearn",
        "datasets",
        "sklearn",
        "model_selection",
        "train_test_split",
        "matplotlib",
        "pyplot",
        "plt",
        "sklearn",
        "preprocessing",
        "StandardScaler",
        "MinMaxScaler",
        "sklearn",
        "preprocessing",
        "yaml",
        "csv",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "np",
        "array",
        "_entrada",
        "w",
        "np",
        "array",
        "i",
        "_entrada",
        "np",
        "append",
        "w",
        "format",
        "w",
        "_entrada",
        "bias",
        "np",
        "array",
        "np",
        "array",
        "len",
        "_entrada",
        "_bias",
        "_np_entrada",
        "entrada",
        "np",
        "column_stack",
        "_bias",
        "_np_entrada",
        "u",
        "u",
        "u",
        "y_calculado",
        "y_desejado",
        "y_desejado",
        "y_calculado",
        "erro",
        "entrada_com_bias",
        "w",
        "taxa_aprendizado",
        "taxa_aprendizado",
        "erro",
        "entrada_com_bias",
        "np",
        "sum",
        "x_novo",
        "w",
        "axis",
        "inputs",
        "targets",
        "weights",
        "bias",
        "weights",
        "weights",
        "plt",
        "figure",
        "figsize",
        "b",
        "w1",
        "b",
        "w2",
        "y",
        "y",
        "x",
        "plt",
        "scatter",
        "inputs",
        "inputs",
        "c",
        "targets",
        "plt",
        "plot",
        "ponto_x",
        "ponto_y",
        "plt",
        "show",
        "_entrada",
        "_numero_epocas",
        "base_train",
        "base_test",
        "w",
        "epoch",
        "_numero_epocas",
        "np",
        "random",
        "shuffle",
        "_entrada",
        "train_test_split",
        "_entrada",
        "test_size",
        "base_train",
        "base_train",
        "i",
        "len",
        "base_train",
        "entrada_sem_y",
        "i",
        "sum",
        "np",
        "multiply",
        "entrada_atual",
        "w",
        "func_deg",
        "u",
        "verifica_erro",
        "y_calculado",
        "y_desejado",
        "i",
        "atualiza_pesos",
        "erro",
        "entrada_atual",
        "erro",
        "erro_epoch",
        "erro_epoch",
        "format",
        "epoch",
        "realiza_teste",
        "base_test",
        "w",
        "format",
        "base_train",
        "base_test",
        "w",
        "_teste_entrada",
        "_pesos",
        "i",
        "len",
        "_teste_entrada",
        "_teste_entrada",
        "_teste_entrada",
        "entrada_sem_y_teste",
        "i",
        "y_desejado_teste",
        "i",
        "_pesos",
        "reshape",
        "sum",
        "np",
        "dot",
        "entrada_atual_teste",
        "_pesos",
        "func_deg",
        "u",
        "verifica_erro",
        "y_calculado",
        "y_desejado_atual_teste",
        "erro",
        "acertos",
        "format",
        "entrada_atual_teste",
        "format",
        "y_calculado",
        "format",
        "y_desejado_atual_teste",
        "erros",
        "format",
        "entrada_atual_teste",
        "format",
        "y_calculado",
        "format",
        "y_desejado_atual_teste",
        "format",
        "acertos",
        "erros",
        "acertos",
        "acertos",
        "erros",
        "acuracia",
        "append",
        "tx_acerto",
        "open",
        "encoding",
        "read",
        "yaml",
        "load",
        "stream",
        "stream",
        "Loader",
        "yaml",
        "FullLoader",
        "configurations",
        "configurations",
        "configurations",
        "taxa_aprendizado",
        "numero_epocas",
        "input",
        "i",
        "realizacao",
        "opcao",
        "open",
        "newline",
        "csvfile",
        "csv",
        "reader",
        "csvfile",
        "delimiter",
        "linha",
        "arquivo",
        "entrada_arquivo",
        "append",
        "linha",
        "np",
        "array",
        "entrada_arquivo",
        "entrada",
        "len",
        "entrada",
        "inicializa_bias",
        "entrada",
        "add_bias_entrada",
        "bias",
        "entrada",
        "entrada",
        "shape",
        "inicializa_pesos",
        "num_colunas",
        "realiza_treinamento",
        "entrada",
        "numero_epocas",
        "np",
        "entrada",
        "entrada",
        "format",
        "x_entrada",
        "format",
        "y_entrada",
        "plot_data",
        "x_entrada",
        "y_entrada",
        "w",
        "opcao",
        "open",
        "newline",
        "csvfile",
        "csv",
        "reader",
        "csvfile",
        "delimiter",
        "linha",
        "arquivo",
        "entrada_arquivo",
        "append",
        "linha",
        "np",
        "array",
        "entrada_arquivo",
        "entrada",
        "len",
        "entrada",
        "inicializa_bias",
        "entrada",
        "add_bias_entrada",
        "bias",
        "entrada",
        "entrada",
        "shape",
        "inicializa_pesos",
        "num_colunas",
        "realiza_treinamento",
        "entrada",
        "numero_epocas",
        "np",
        "entrada",
        "entrada",
        "format",
        "x_entrada",
        "format",
        "y_entrada",
        "plot_data",
        "x_entrada",
        "y_entrada",
        "w",
        "opcao",
        "datasets",
        "load_iris",
        "iris",
        "data",
        "np",
        "array",
        "iris",
        "target",
        "np",
        "where",
        "y",
        "y",
        "np",
        "column_stack",
        "X",
        "y",
        "len",
        "entrada",
        "inicializa_bias",
        "entrada",
        "add_bias_entrada",
        "bias",
        "entrada",
        "entrada",
        "shape",
        "inicializa_pesos",
        "num_colunas",
        "MinMaxScaler",
        "min_max_scaler",
        "fit_transform",
        "entrada",
        "X_train_norm",
        "shape",
        "realiza_treinamento",
        "X_train_norm",
        "numero_epocas",
        "np",
        "X_train_norm",
        "X_train_norm",
        "plot_data",
        "x_entrada",
        "y_entrada",
        "w",
        "format",
        "np",
        "mean",
        "acuracia",
        "realizacao"
    ],
    "literals": [
        "\"w final: {}\"",
        "\"\\nÉPOCAS UTILIZADAS: {}\"",
        "\"TREINAMENTO: \\n{}\\nTESTE: \\n{}\\nW: \\n{}\"",
        "\"\\nA entrada {} foi classificada corretamente!\"",
        "\"Classificado como: {}\"",
        "\"Deveria ser: {}\"",
        "\"\\n\"",
        "\"Erro ao classificar a entrada {}\"",
        "\"Classificado como: {}\"",
        "\"Deveria ser: {}\"",
        "\"\\nAcertos: {}\\nErros: {}\"",
        "'__main__'",
        "'Configuracoes_iniciais.yml'",
        "'r'",
        "'utf-8'",
        "'taxa_aprendizado'",
        "'numero_epocas'",
        "'realizacao'",
        "\"\\n taxa de aprendizado\"",
        "\"\\n Epocas utilizadas\"",
        "\"\\n\"",
        "\"*************** PERCEPTRON SIMPLES **************\"",
        "\"\\n Escolha o tipo de base a ser executado \\n\"",
        "\"\\n1 - Porta Logica OR \\n2 - PORTA Logica AND \\n3 - Iris\"",
        "'OR.csv'",
        "''",
        "','",
        "\"\\n entrada lida do arquivo atribuido OR \\n\"",
        "\"x_entrada: {}\"",
        "\"y_entrada: {}\"",
        "\"************************************************************\"",
        "'AND.csv'",
        "''",
        "','",
        "\"\\n entrada lida do arquivo atribuido AND \\n\"",
        "\"x_entrada: {}\"",
        "\"y_entrada: {}\"",
        "\"************************************************************\"",
        "\"Acurácia: {}\"",
        "\"Treinamento Finalizado\"",
        "\"Numero de realizacoes :\""
    ],
    "variables": [
        "acuracia",
        "base_train",
        "base_test",
        "w",
        "bias",
        "w",
        "w",
        "bias",
        "bias",
        "entrada",
        "x_novo",
        "w",
        "b",
        "w1",
        "w2",
        "b",
        "w1",
        "w2",
        "x",
        "y",
        "d",
        "c",
        "ponto_x",
        "ponto_y",
        "erro_epoch",
        "base_train",
        "base_test",
        "entrada_sem_y",
        "y_desejado",
        "entrada_atual",
        "u",
        "y_calculado",
        "erro",
        "erro_epoch",
        "acertos",
        "erros",
        "tx_acerto",
        "entrada_sem_y_teste",
        "y_desejado_teste",
        "entrada_atual_teste",
        "y_desejado_atual_teste",
        "_pesos",
        "u",
        "y_calculado",
        "erro",
        "acertos",
        "erros",
        "tx_acerto",
        "stream",
        "configurations",
        "taxa_aprendizado",
        "numero_epocas",
        "realizacao",
        "opcao",
        "entrada_arquivo",
        "arquivo",
        "entrada",
        "numero_linhas_entrada",
        "num_colunas",
        "x_entrada",
        "y_entrada",
        "entrada_arquivo",
        "arquivo",
        "entrada",
        "numero_linhas_entrada",
        "num_colunas",
        "x_entrada",
        "y_entrada",
        "iris",
        "X",
        "y",
        "y",
        "entrada",
        "numero_linhas_entrada",
        "num_colunas",
        "min_max_scaler",
        "X_train_norm",
        "num_colunas_X_train_norm",
        "x_entrada",
        "y_entrada"
    ],
    "comments": [
        "entrada = np.array([[0, 0, 0], [0, 1, 1], [1, 0, 1], [1, 1, 1]])",
        "entrada = np.array([[0, 0, 0], [0, 1, 0], [1, 0, 0], [1, 1, 1]])",
        "global y_desejados",
        "y_desejados = entrada_com_bias_completa[:, -1]  # for last column",
        "entrada_com_bias = entrada_com_bias_completa[:, :-1]  # for all but last column",
        "retorna o y",
        "verifica se y calculado = y desejado",
        "w_norm = preprocessing.normalize(weights, norm='l1')",
        "weights = w_norm",
        "weights = (weights / weights.max(axis=0))",
        "[0, x], [y, 0]",
        "print(\"teste_base: \\n{}\".format(base_train))",
        "print(\"tra_base: \\n{}\".format(base_test))",
        "plt.scatter(ponto_x, ponto_y)",
        "plt.show()",
        "A época inicia c/ erro zero",
        "Os dados da entrada são embaralhados",
        "Pego 80% dos dados p/ treinamento e 20% p/ teste",
        "Separo a entrada do valor desejado",
        "TESTE",
        "u = sum(np.multiply(entrada_atual_teste, _pesos))",
        "a = entrada_atual_teste.reshape((-1, 1))",
        "Inicializando os dados lidos do arquivo",
        "lendo as config. iniciais",
        "gerando um imput para o usuario escolher qual base a ser testada",
        "1° opcao carrega o database da Porta logica OR",
        "lendo o arquivo OR",
        "2° opcao carrega o database da Porta logica AND",
        "lendo o arquivo OR",
        "3° opcao carrega o database da Porta logica AND",
        "we only take the first two features.",
        "print(y)",
        "adiciona o y_desejado ao final da entrada",
        "add bias no inicio da entrada",
        "NORMALIZAÇÃO",
        "Mostra a acuracia da base de dados Iris"
    ],
    "docstrings": [
        "'''\nIFCE Maracanaú\nNome : Guilherme Pessoa\n\n---------Perceptron Simples-------------------\n'''"
    ],
    "functions": [
        "inicializa_pesos",
        "inicializa_bias",
        "add_bias_entrada",
        "func_deg",
        "verifica_erro",
        "atualiza_pesos",
        "plot_data",
        "realiza_treinamento",
        "realiza_teste"
    ],
    "classes": []
}