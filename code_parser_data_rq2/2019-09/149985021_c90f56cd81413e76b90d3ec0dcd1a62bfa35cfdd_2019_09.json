{
    "identifiers": [
        "useEffect",
        "handler",
        "useEffect",
        "listener",
        "handler",
        "listener",
        "listener",
        "listener",
        "listener",
        "handler"
    ],
    "literals": [
        "\"react\"",
        "\"mousedown\"",
        "\"touchstart\"",
        "\"mousedown\"",
        "\"touchstart\""
    ],
    "variables": [
        "listener"
    ],
    "comments": [
        "Do nothing if clicking ref's element or descendent elements",
        "Add ref and handler to effect dependencies",
        "It's worth noting that because passed in handler is a new ...",
        "... function on every render that will cause this effect ...",
        "... callback/cleanup to run every render. It's not a big deal ...",
        "... but to optimize you can wrap handler in useCallback before ...",
        "... passing it into this hook."
    ],
    "docstrings": [],
    "functions": [
        "useOnClickOutside"
    ],
    "classes": []
}