{
    "identifiers": [
        "cloneElement",
        "isValidElement",
        "ReactElement",
        "ReactNode",
        "PolyglotT",
        "enhanceT",
        "originalT",
        "t",
        "interpolations",
        "interpolations",
        "originalT",
        "key",
        "interpolations",
        "interpolations",
        "key",
        "isValidElement",
        "interpolations",
        "key",
        "elementCache",
        "interpolations",
        "key",
        "interpolations",
        "key",
        "elementCache",
        "originalT",
        "key",
        "interpolations",
        "elementCache",
        "tString",
        "tString",
        "IDENTIFIER",
        "tChunks",
        "i",
        "tChunks",
        "i",
        "tChunks",
        "parseInt",
        "index",
        "elementCache",
        "currentIndex",
        "renderItems",
        "cloneElement",
        "currentElement",
        "currentIndex",
        "currentElement",
        "trailingString",
        "renderItems",
        "trailingString",
        "renderItems",
        "enhanceT"
    ],
    "literals": [
        "'react'",
        "'./constants'",
        "'number'",
        "<${elementCache.length - 1}/>"
    ],
    "variables": [
        "IDENTIFIER",
        "enhanceT",
        "key",
        "interpolations",
        "elementCache",
        "tString",
        "tChunks",
        "renderItems",
        "i",
        "index",
        "trailingString",
        "currentIndex",
        "currentElement"
    ],
    "comments": [
        "A pseudo-JSX string interpolation identifier",
        "We use a named function here to aid debugging",
        "ReactNode includes all React render-ables, including arrays",
        "ReactElement used because cloneElement requires a proper ReactElement",
        "Store all JSX elements into a array cache for processing later",
        "We can safely return if no element interpolation is needed",
        "Split the string into chunks of strings and interpolation indices",
        "Move the leading string part into the render array and pop it",
        "Interpolate the element",
        "A unique key is needed when rendering an array",
        "Interpolate any trailing string"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}