{
    "identifiers": [
        "express",
        "ExceptionHandler",
        "Router",
        "require",
        "require",
        "app",
        "require",
        "express",
        "require",
        "app",
        "bodyParser",
        "app",
        "bodyParser",
        "app",
        "Router",
        "app",
        "ExceptionHandler",
        "app",
        "req",
        "res",
        "next",
        "err",
        "next",
        "err",
        "app",
        "err",
        "req",
        "res",
        "res",
        "err",
        "res",
        "req",
        "err",
        "res",
        "err",
        "err",
        "app"
    ],
    "literals": [
        "'express'",
        "'./app/Exceptions/exceptionHandler'",
        "'./app/Exceptions/Exception'",
        "\"./router\"",
        "'cors'",
        "'http'",
        "'dotenv'",
        "'body-parser'",
        "\"/\"",
        "'Not Found'",
        "'env'",
        "'development'"
    ],
    "variables": [
        "cors",
        "server",
        "app",
        "bodyParser",
        "err"
    ],
    "comments": [
        "app.set(\"views\", path.join(__dirname, \"views\"));",
        "app.set(\"view engine\", \"ejs\");",
        "app.use(cors());",
        "app.use(function(req, res, next) {",
        "res.header(\"Access-Control-Allow-Origin\", \"*\");",
        "res.header('Access-Control-Allow-Methods', 'DELETE, PUT, GET, POST');",
        "res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");",
        "next();",
        "});",
        "set locals, only providing error in development",
        "render the error page",
        "res.render(\"error\");"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}