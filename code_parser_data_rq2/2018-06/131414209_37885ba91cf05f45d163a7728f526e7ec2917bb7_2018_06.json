{
    "identifiers": [
        "require",
        "DataServiceClient",
        "AssetPair",
        "jest",
        "DataServiceClient",
        "NODE_URL",
        "parser",
        "describe",
        "it",
        "client",
        "ids",
        "expect",
        "fetch",
        "NODE_URL",
        "it",
        "client",
        "ids",
        "expect",
        "fetch",
        "NODE_URL",
        "it",
        "client",
        "ids",
        "expect",
        "fetch",
        "NODE_URL",
        "it",
        "NaN",
        "wrongTypes",
        "t",
        "expect",
        "client",
        "t",
        "describe",
        "it",
        "AssetPair",
        "AssetPair",
        "client",
        "pair1",
        "pair2",
        "expect",
        "fetch",
        "NODE_URL",
        "it",
        "client",
        "pairs",
        "expect",
        "fetch",
        "NODE_URL",
        "it",
        "NaN",
        "wrongTypes",
        "t",
        "expect",
        "client",
        "t",
        "describe",
        "NODE_URL",
        "NODE_URL",
        "NODE_URL",
        "NODE_URL",
        "goodCases",
        "c",
        "i",
        "it",
        "c",
        "client",
        "c",
        "expect",
        "fetch",
        "c",
        "badCases",
        "c",
        "i",
        "it",
        "c",
        "expect",
        "client",
        "c",
        "describe",
        "customFetchMock",
        "jest",
        "fetchMocks",
        "jest",
        "d",
        "d",
        "customTransformer",
        "jest",
        "jest",
        "customTransformer",
        "etc",
        "transformMocks",
        "__type",
        "data",
        "it",
        "DataServiceClient",
        "NODE_URL",
        "parser",
        "customFetchMock",
        "customTransformer",
        "customClient",
        "expect",
        "transformMocks",
        "expect",
        "transformMocks",
        "expect",
        "transformMocks"
    ],
    "literals": [
        "'parse-json-bignumber'",
        "'../index'",
        "'@waves/data-entities'",
        "'{\"data\":[{ \"data\": 1 }]}'",
        "'NODE_URL'",
        "'Asssets endpoint: '",
        "'fetch is called with correct params#1'",
        "'4CYRBpSmNKqmw1PoKFoZADv5FaciyJcusqrHyPrAQ4Ca'",
        "'AENTt5heWujAzcw7PmGXi1ekRc7CAmNm87Q1xZMYXGLa'",
        "${NODE_URL}/assets?ids=4CYRBpSmNKqmw1PoKFoZADv5FaciyJcusqrHyPrAQ4Ca&ids=AENTt5heWujAzcw7PmGXi1ekRc7CAmNm87Q1xZMYXGLa",
        "'fetch is called with correct params#2'",
        "'4CYRBpSmNKqmw1PoKFoZADv5FaciyJcusqrHyPrAQ4Ca'",
        "${NODE_URL}/assets?ids=4CYRBpSmNKqmw1PoKFoZADv5FaciyJcusqrHyPrAQ4Ca",
        "'fetch is called with correct params#3'",
        "${NODE_URL}/assets",
        "'throws, if called with wrong types'",
        "'Pairs endpoint: '",
        "'fetch is called with correct params#1'",
        "'WAVES'",
        "'8LQW8f7P5d5PZM7GtZEBgaqRPGSzS3DfPuiXrURJ4AJS'",
        "'WAVES'",
        "'474jTeYx2r2Va35794tCScAXWJG9hU2HcgxzMowaZUnu'",
        "${NODE_URL}/pairs?pairs=WAVES/8LQW8f7P5d5PZM7GtZEBgaqRPGSzS3DfPuiXrURJ4AJS&pairs=WAVES/474jTeYx2r2Va35794tCScAXWJG9hU2HcgxzMowaZUnu",
        "'fetch is called with correct params#2'",
        "${NODE_URL}/pairs",
        "'throws, if called with wrong types'",
        "''",
        "''",
        "''",
        "'ExchangeTxs endpoint: '",
        "'single string'",
        "'8LQW8f7P5d5PZM7GtZEBgaqRPGSzS3DfPuiXrURJ4AJS'",
        "${NODE_URL}/transactions/exchange/8LQW8f7P5d5PZM7GtZEBgaqRPGSzS3DfPuiXrURJ4AJS",
        "'empty call'",
        "${NODE_URL}/transactions/exchange",
        "'with one filter'",
        "'2016-01-01'",
        "${NODE_URL}/transactions/exchange?timeStart=2016-01-01",
        "'with all filters'",
        "'2016-02-01'",
        "'2016-03-01'",
        "'matcher'",
        "'sender'",
        "'asset1'",
        "'priceAsset'",
        "'-some'",
        "${NODE_URL}/transactions/exchange?timeStart=2016-02-01&timeEnd=2016-03-01&matcher=matcher&sender=sender&amountAsset=asset1&priceAsset=priceAsset&limit=5&sort=-some",
        "'with wrong filters'",
        "''",
        "'with number'",
        "'with null'",
        "works with (${c.label})",
        "fails with (${c.label})",
        "'Custom transformer: '",
        "'list'",
        "'asset'",
        "'asset'",
        "'list'",
        "'pair'",
        "'pair'",
        "'works for list of assets'",
        "'assets'",
        "'1'",
        "'2'"
    ],
    "variables": [
        "parser",
        "fetch",
        "NODE_URL",
        "client",
        "ids",
        "ids",
        "ids",
        "wrongTypes",
        "pair1",
        "pair2",
        "pairs",
        "wrongTypes",
        "goodCases",
        "badCases",
        "result",
        "fetchMocks",
        "customFetchMock",
        "transformMocks",
        "customTransformer",
        "customClient",
        "assets"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [],
    "classes": []
}