{
    "identifiers": [
        "SakTextFieldBase",
        "placeholderTextProperty",
        "placeholderTextColourProperty",
        "isPlaceholderAnimatedProperty",
        "maxlengthProperty",
        "ellipsizeProperty",
        "regexProperty",
        "letterColourProperty",
        "SakTextFieldBase",
        "android",
        "android",
        "textField",
        "textField",
        "placeholderTextProperty",
        "value",
        "value",
        "placeholderTextColourProperty",
        "value",
        "value",
        "android",
        "value",
        "maxlengthProperty",
        "value",
        "value",
        "fArray",
        "android",
        "value",
        "fArray",
        "ellipsizeProperty",
        "value",
        "value",
        "android",
        "letterColourProperty",
        "value",
        "value",
        "android",
        "value",
        "isPlaceholderAnimatedProperty",
        "value",
        "regexProperty",
        "regex",
        "android",
        "s",
        "index",
        "toBeReplaced",
        "addedCount",
        "s",
        "index",
        "replacedCount",
        "addedCount",
        "s",
        "android",
        "regex",
        "regex",
        "s",
        "s",
        "length",
        "java",
        "regex",
        "text",
        "s",
        "length",
        "length"
    ],
    "literals": [
        "\"./sak-textfield.common\"",
        "string",
        "string",
        "string",
        "#${value}",
        "string",
        "string",
        "#${value}",
        "string",
        "string",
        "string",
        "\"\""
    ],
    "variables": [
        "textField",
        "fArray",
        "text",
        "length"
    ],
    "comments": [
        "added for TypeScript intellisense.",
        "textField: android.widget.EditText;",
        "Create new instance of android.widget.EditText.",
        "Attach the owner to nativeView.",
        "When nativeView is tapped we get the owning JS object through this field.",
        "Remove reference from native view to this instance.",
        "If you want to recycle nativeView and have modified the nativeView",
        "without using Property or CssProperty (e.g. outside our property system - 'setNative' callbacks)",
        "you have to reset it to its initial state here.",
        "transfer JS placeholderText value to nativeView.",
        "transfer JS maxlength value to nativeView.",
        "transfer JS ellipsize value to nativeView.",
        "console.log('chegou a cor ' + value + ' : ' + `#${value}`);"
    ],
    "docstrings": [
        "* Creates new native text field.",
        "* Initializes properties/listeners of the native view.",
        "* Clean up references to the native view and resets nativeView to its original state.\n     * If you have changed nativeView in some other way except through setNative callbacks\n     * you have a chance here to revert it back to its original state\n     * so that it could be reused later."
    ],
    "functions": [
        "createNativeView",
        "initNativeView",
        "disposeNativeView",
        "beforeTextChanged",
        "onTextChanged",
        "afterTextChanged"
    ],
    "classes": [
        "SakTextField"
    ]
}