{
    "identifiers": [
        "provider",
        "TargetThread",
        "ThreadProvider",
        "common",
        "read_c_string",
        "HandlerModeThread",
        "core",
        "target",
        "Target",
        "debug",
        "context",
        "DebugContext",
        "coresight",
        "cortex_m",
        "CORE_REGISTER",
        "register_name_to_index",
        "pyOCD",
        "pyDAPAccess",
        "DAPAccess",
        "logging",
        "logging",
        "getLogger",
        "context",
        "ptr",
        "next_offset",
        "context",
        "ptr",
        "next_offset",
        "_context",
        "read32",
        "_list",
        "node",
        "node",
        "_context",
        "read32",
        "node",
        "_list_node_next_offset",
        "DAPAccess",
        "TransferError",
        "log",
        "warning",
        "_list",
        "node",
        "DebugContext",
        "parentContext",
        "thread",
        "ZephyrThreadContext",
        "parentContext",
        "core",
        "parentContext",
        "thread",
        "parentContext",
        "core",
        "has_fpu",
        "reg_list",
        "register_name_to_index",
        "reg",
        "reg",
        "reg_list",
        "_get_ipsr",
        "_thread",
        "is_current",
        "isCurrent",
        "inException",
        "log",
        "debug",
        "_parent",
        "readCoreRegistersRaw",
        "reg_list",
        "_thread",
        "get_stack_pointer",
        "reg",
        "reg_list",
        "reg",
        "reg",
        "sp",
        "exceptionFrame",
        "log",
        "debug",
        "reg",
        "val",
        "reg_vals",
        "append",
        "val",
        "CALLEE_SAVED_OFFSETS",
        "get",
        "reg",
        "calleeOffset",
        "_thread",
        "_base",
        "_thread",
        "_offsets",
        "calleeOffset",
        "_parent",
        "read32",
        "addr",
        "reg_vals",
        "append",
        "val",
        "log",
        "debug",
        "reg",
        "addr",
        "val",
        "DAPAccess",
        "TransferError",
        "reg_vals",
        "append",
        "STACK_FRAME_OFFSETS",
        "get",
        "reg",
        "stackFrameOffset",
        "sp",
        "stackFrameOffset",
        "_parent",
        "read32",
        "addr",
        "reg_vals",
        "append",
        "val",
        "log",
        "debug",
        "reg",
        "addr",
        "val",
        "DAPAccess",
        "TransferError",
        "reg_vals",
        "append",
        "_parent",
        "readCoreRegisterRaw",
        "reg",
        "log",
        "debug",
        "reg",
        "val",
        "reg_vals",
        "append",
        "val",
        "reg_vals",
        "_parent",
        "readCoreRegister",
        "reg_list",
        "data_list",
        "_parent",
        "writeCoreRegistersRaw",
        "reg_list",
        "data_list",
        "TargetThread",
        "READY",
        "PENDING",
        "PRESTART",
        "DEAD",
        "SUSPENDED",
        "POLLING",
        "RUNNING",
        "targetContext",
        "provider",
        "offsets",
        "ZephyrThread",
        "targetContext",
        "provider",
        "ZephyrThreadContext",
        "_target_context",
        "offsets",
        "ZephyrThread",
        "READY",
        "update_info",
        "DAPAccess",
        "TransferError",
        "log",
        "debug",
        "is_current",
        "_target_context",
        "readCoreRegister",
        "_base",
        "_offsets",
        "_target_context",
        "read32",
        "addr",
        "DAPAccess",
        "TransferError",
        "log",
        "debug",
        "addr",
        "sp",
        "_target_context",
        "read8",
        "_base",
        "_offsets",
        "_target_context",
        "read8",
        "_base",
        "_offsets",
        "DAPAccess",
        "TransferError",
        "log",
        "debug",
        "property",
        "_state",
        "state",
        "setter",
        "value",
        "value",
        "property",
        "_priority",
        "property",
        "_base",
        "property",
        "_name",
        "property",
        "STATE_NAMES",
        "state",
        "priority",
        "property",
        "_provider",
        "get_actual_current_thread_id",
        "unique_id",
        "property",
        "_thread_context",
        "id",
        "unique_id",
        "name",
        "ThreadProvider",
        "target",
        "ZephyrThreadProvider",
        "target",
        "symbolProvider",
        "_lookup_symbols",
        "ZEPHYR_SYMBOLS",
        "symbolProvider",
        "_symbols",
        "_update",
        "_target",
        "root_target",
        "subscribe",
        "Target",
        "EVENT_POST_FLASH_PROGRAM",
        "event_handler",
        "_target",
        "subscribe",
        "Target",
        "EVENT_POST_RESET",
        "event_handler",
        "_target_context",
        "read8",
        "_symbols",
        "log",
        "debug",
        "size",
        "size",
        "log",
        "error",
        "index",
        "name",
        "ZEPHYR_OFFSETS",
        "_symbols",
        "index",
        "size",
        "_target_context",
        "read32",
        "offset",
        "log",
        "debug",
        "name",
        "offsets",
        "name",
        "offsets",
        "_get_offsets",
        "_offsets",
        "log",
        "debug",
        "_symbols",
        "_offsets",
        "_symbols",
        "_offsets",
        "log",
        "debug",
        "_all_threads",
        "_curr_thread",
        "notification",
        "notification",
        "Target",
        "EVENT_POST_RESET",
        "log",
        "info",
        "repr",
        "notification",
        "invalidate",
        "notification",
        "Target",
        "EVENT_POST_FLASH_PROGRAM",
        "_update",
        "TargetList",
        "_target_context",
        "_all_threads",
        "_offsets",
        "_target_context",
        "read32",
        "_curr_thread",
        "log",
        "debug",
        "currentThread",
        "threadBase",
        "allThreads",
        "threadBase",
        "_threads",
        "_threads",
        "threadBase",
        "t",
        "update_info",
        "ZephyrThread",
        "_target_context",
        "threadBase",
        "_offsets",
        "threadBase",
        "currentThread",
        "ZephyrThread",
        "RUNNING",
        "log",
        "debug",
        "threadBase",
        "t",
        "name",
        "t",
        "unique_id",
        "t",
        "DAPAccess",
        "TransferError",
        "log",
        "debug",
        "threadBase",
        "get_ipsr",
        "log",
        "debug",
        "HandlerModeThread",
        "_target_context",
        "t",
        "unique_id",
        "t",
        "newThreads",
        "is_enabled",
        "update_threads",
        "_threads",
        "values",
        "threadId",
        "is_enabled",
        "update_threads",
        "_threads",
        "get",
        "threadId",
        "property",
        "_symbols",
        "get_is_running",
        "property",
        "is_enabled",
        "update_threads",
        "get_current_thread_id",
        "_threads",
        "id",
        "KeyError",
        "threadId",
        "is_enabled",
        "update_threads",
        "threadId",
        "_threads",
        "is_enabled",
        "get_ipsr",
        "get_actual_current_thread_id",
        "is_enabled",
        "_target_context",
        "read32",
        "_curr_thread",
        "_symbols",
        "_offsets"
    ],
    "literals": [
        "\"zephyr\"",
        "\"TransferError while reading list elements (list=0x%08x, node=0x%08x), terminating list\"",
        "\"Reading live registers\"",
        "\"Reading register %d = 0x%x\"",
        "\"t_stack_ptr\"",
        "\"Reading callee-saved register %d at 0x%08x = 0x%x\"",
        "\"Reading stack frame register %d at 0x%08x = 0x%x\"",
        "\"Reading live register %d = 0x%x\"",
        "'xpsr'",
        "\"Ready\"",
        "\"Pending\"",
        "\"Prestart\"",
        "\"Dead\"",
        "\"Suspended\"",
        "\"Polling\"",
        "\"Running\"",
        "\"Unnamed\"",
        "\"Transfer error while reading thread info\"",
        "'psp'",
        "\"t_stack_ptr\"",
        "\"Transfer error while reading thread's stack pointer @ 0x%08x\"",
        "\"t_prio\"",
        "\"t_state\"",
        "\"Transfer error while reading thread info\"",
        "\"%s; Priority %d\"",
        "\"<ZephyrThread@0x%08x id=%x name=%s>\"",
        "\"_kernel\"",
        "\"_kernel_openocd_offsets\"",
        "\"_kernel_openocd_size_t_size\"",
        "'version'",
        "'k_curr_thread'",
        "'k_threads'",
        "'t_entry'",
        "'t_next_thread'",
        "'t_state'",
        "'t_user_options'",
        "'t_prio'",
        "'t_stack_ptr'",
        "\"_kernel_openocd_size_t_size\"",
        "\"_kernel_openocd_size_t_size = %d\"",
        "\"Unsupported _kernel_openocd_size_t_size\"",
        "\"_kernel_openocd_offsets\"",
        "\"%s = 0x%04x\"",
        "\"_offsets, _all_threads, and _curr_thread are invalid\"",
        "\"_kernel\"",
        "\"k_threads\"",
        "\"_kernel\"",
        "\"k_curr_thread\"",
        "\"_all_threads = 0x%08x, _curr_thread = 0x%08x\"",
        "\"Invalidating threads list: %s\"",
        "\"t_next_thread\"",
        "\"currentThread = 0x%08x\"",
        "\"Thread 0x%08x (%s)\"",
        "\"TransferError while examining thread 0x%08x\"",
        "\"creating handler mode thread\""
    ],
    "variables": [
        "log",
        "_context",
        "_list",
        "_list_node_next_offset",
        "node",
        "node",
        "node",
        "STACK_FRAME_OFFSETS",
        "CALLEE_SAVED_OFFSETS",
        "_parent",
        "_thread",
        "_has_fpu",
        "reg_list",
        "reg_vals",
        "inException",
        "isCurrent",
        "sp",
        "exceptionFrame",
        "val",
        "calleeOffset",
        "addr",
        "val",
        "stackFrameOffset",
        "addr",
        "val",
        "val",
        "READY",
        "PENDING",
        "PRESTART",
        "DEAD",
        "SUSPENDED",
        "POLLING",
        "RUNNING",
        "STATE_NAMES",
        "_target_context",
        "_provider",
        "_base",
        "_thread_context",
        "_offsets",
        "_state",
        "_priority",
        "_name",
        "sp",
        "addr",
        "sp",
        "_priority",
        "_state",
        "_state",
        "ZEPHYR_SYMBOLS",
        "ZEPHYR_OFFSETS",
        "_symbols",
        "_offsets",
        "_all_threads",
        "_curr_thread",
        "_threads",
        "_symbols",
        "size",
        "offsets",
        "offset",
        "offsets",
        "name",
        "_offsets",
        "_all_threads",
        "_curr_thread",
        "_all_threads",
        "_curr_thread",
        "_threads",
        "allThreads",
        "newThreads",
        "currentThread",
        "t",
        "t",
        "t",
        "state",
        "newThreads",
        "t",
        "newThreads",
        "_threads",
        "id"
    ],
    "comments": [
        "Create a logger for this module.",
        "Read next list node pointer.",
        "@brief",
        "r0",
        "r1",
        "r2",
        "r3",
        "r12",
        "lr",
        "pc",
        "xpsr",
        "r4",
        "r5",
        "r6",
        "r7",
        "r8",
        "r9",
        "r10",
        "r11",
        "r13/sp",
        "If this is the current thread and we're not in an exception, just read the live registers.",
        "If this is a stack pointer register, add an offset to account for the exception stack frame",
        "If this is a callee-saved register, read it from the thread structure",
        "If this is a exception stack frame register, read it from the stack",
        "If we get here, this is a register not in any of the dictionaries",
        "@brief A Zephyr task.",
        "Read live process stack.",
        "Get stack pointer saved in thread struct.",
        "@brief Thread provider for Zephyr.",
        "Required Zephyr symbols.",
        "Lookup required symbols.",
        "Read the kernel and thread structure member offsets",
        "Reuse existing thread objects.",
        "Ask the thread object to update its state and priority.",
        "Set thread state.",
        "Create fake handler mode thread.",
        "TODO"
    ],
    "docstrings": [
        "\"\"\"\n mbed CMSIS-DAP debugger\n Copyright (c) 2016 ARM Limited\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\"\"\""
    ],
    "functions": [
        "__iter__",
        "readCoreRegistersRaw",
        "_get_ipsr",
        "writeCoreRegistersRaw",
        "get_stack_pointer",
        "update_info",
        "state",
        "state",
        "priority",
        "unique_id",
        "name",
        "description",
        "is_current",
        "context",
        "__str__",
        "__repr__",
        "init",
        "_get_offsets",
        "_update",
        "invalidate",
        "event_handler",
        "_build_thread_list",
        "get_threads",
        "get_thread",
        "is_enabled",
        "current_thread",
        "is_valid_thread_id",
        "get_current_thread_id",
        "get_actual_current_thread_id",
        "get_is_running"
    ],
    "classes": [
        "TargetList",
        "ZephyrThreadContext",
        "ZephyrThread",
        "ZephyrThreadProvider"
    ]
}