{
    "identifiers": [
        "Reddit",
        "Inputs",
        "Reddit",
        "Things",
        "Collections",
        "Generic",
        "Threading",
        "Tasks",
        "Reddit",
        "Controllers",
        "BaseController",
        "MeLastUpdated",
        "HasValue",
        "MeLastUpdated",
        "Value",
        "AddMinutes",
        "Now",
        "me",
        "GetMe",
        "me",
        "value",
        "MeLastUpdated",
        "Now",
        "messages",
        "messages",
        "PrivateMessages",
        "Dispatch",
        "messages",
        "messages",
        "value",
        "modmail",
        "Modmail",
        "Dispatch",
        "modmail",
        "value",
        "Dispatch",
        "dispatch",
        "Dispatch",
        "dispatch",
        "Me",
        "User",
        "Dispatch",
        "Dispatch",
        "Account",
        "Me",
        "Me",
        "UserKarma",
        "UserKarmaContainer",
        "Validate",
        "Dispatch",
        "Account",
        "Karma",
        "Data",
        "Validate",
        "Dispatch",
        "Account",
        "Prefs",
        "AccountPrefsSubmit",
        "accountPrefs",
        "Validate",
        "Dispatch",
        "Account",
        "UpdatePrefs",
        "accountPrefs",
        "AccountPrefs",
        "AccountPrefsSubmit",
        "accountPrefs",
        "Dispatch",
        "Account",
        "UpdatePrefsAsync",
        "accountPrefs",
        "res",
        "Award",
        "Dispatch",
        "Account",
        "Trophies",
        "trophyList",
        "trophyList",
        "Data",
        "trophyList",
        "Data",
        "Trophies",
        "Award",
        "Award",
        "AwardContainer",
        "awardContainer",
        "trophyList",
        "Data",
        "Trophies",
        "res",
        "Add",
        "awardContainer",
        "Data",
        "res",
        "UserPrefs",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "UserPrefs",
        "UserPrefs",
        "UserPrefsContainer",
        "userPrefsContainer",
        "Validate",
        "Dispatch",
        "Account",
        "PrefsList",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "res",
        "AddRange",
        "userPrefsContainer",
        "Data",
        "Children",
        "res",
        "UserPrefs",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "UserPrefs",
        "UserPrefs",
        "UserPrefsContainer",
        "userPrefsContainer",
        "Validate",
        "Dispatch",
        "Account",
        "PrefsList",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "res",
        "AddRange",
        "userPrefsContainer",
        "Data",
        "Children",
        "res",
        "UserPrefs",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "Validate",
        "Dispatch",
        "Account",
        "PrefsSingle",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "Data",
        "Children",
        "UserPrefs",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "Validate",
        "Dispatch",
        "Account",
        "PrefsSingle",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "Data",
        "Children",
        "username",
        "Dispatch",
        "Users",
        "DeleteFriend",
        "username",
        "username",
        "Dispatch",
        "Users",
        "DeleteFriendAsync",
        "username",
        "username",
        "Validate",
        "Dispatch",
        "Users",
        "GetFriend",
        "username",
        "username",
        "json",
        "Validate",
        "Dispatch",
        "Users",
        "UpdateFriend",
        "username",
        "json",
        "username",
        "json",
        "Validate",
        "Dispatch",
        "Users",
        "UpdateFriendAsync",
        "username",
        "json",
        "LabeledMulti",
        "expandSrs",
        "LabeledMultiContainer",
        "Dispatch",
        "Multis",
        "Mine",
        "expandSrs",
        "LabeledMulti",
        "LabeledMulti",
        "labeledMultiContainers",
        "LabeledMultiContainer",
        "labeledMultiContainer",
        "labeledMultiContainers",
        "res",
        "Add",
        "labeledMultiContainer",
        "Data",
        "res",
        "Subreddit",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "Lists",
        "GetSubreddits",
        "Dispatch",
        "Subreddits",
        "Mine",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "Dispatch",
        "Subreddit",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "Lists",
        "GetSubreddits",
        "Dispatch",
        "Subreddits",
        "Mine",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "Dispatch",
        "Subreddit",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "Lists",
        "GetSubreddits",
        "Dispatch",
        "Subreddits",
        "Mine",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "Dispatch",
        "Subreddit",
        "limit",
        "after",
        "before",
        "show",
        "srDetail",
        "includeCategories",
        "count",
        "Lists",
        "GetSubreddits",
        "Dispatch",
        "Subreddits",
        "Mine",
        "CategorizedSrListingInput",
        "after",
        "before",
        "count",
        "limit",
        "show",
        "srDetail",
        "includeCategories",
        "Dispatch",
        "ModmailSubreddit",
        "ModmailSubredditContainer",
        "Validate",
        "Dispatch",
        "Modmail",
        "Subreddits",
        "Subreddits",
        "Validate",
        "Dispatch",
        "Modmail",
        "UnreadCount",
        "thread",
        "Validate",
        "Dispatch",
        "LiveThreads",
        "AcceptContributorInvite",
        "thread",
        "thread",
        "Validate",
        "Dispatch",
        "LiveThreads",
        "AcceptContributorInviteAsync",
        "thread",
        "thread",
        "Validate",
        "Dispatch",
        "LiveThreads",
        "LeaveContributor",
        "thread",
        "thread",
        "Validate",
        "Dispatch",
        "LiveThreads",
        "LeaveContributorAsync",
        "thread"
    ],
    "literals": [
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"friends\"",
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"messaging\"",
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"blocked\"",
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"trusted\"",
        "\"{}\"",
        "\"{}\"",
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"subscriber\"",
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"contributor\"",
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"moderator\"",
        "\"\"",
        "\"\"",
        "\"all\"",
        "\"streams\""
    ],
    "variables": [
        "User",
        "Me",
        "User",
        "me",
        "MeLastUpdated",
        "PrivateMessages",
        "Messages",
        "PrivateMessages",
        "messages",
        "Modmail",
        "Modmail",
        "Modmail",
        "modmail",
        "Dispatch",
        "Dispatch",
        "AccountPrefs",
        "res",
        "TrophyList",
        "trophyList",
        "res",
        "res",
        "res",
        "labeledMultiContainers",
        "res"
    ],
    "comments": [
        "Controller class for tasks pertaining to the authenticated user.",
        "</summary>",
        "The authenticated user's data.",
        "</summary>",
        "The authenticated user's private messages.",
        "</summary>",
        "The authenticated user's modmail conversations.",
        "</summary>",
        "Allows direct access to the Models.",
        "</summary>",
        "Creates a new Account instance.  Note that this is already taken care of in the main class.",
        "</summary>",
        "<param name=\"dispatch\"></param>",
        "Returns a User instance with the data returned from a call to the \"me\" endpoint.",
        "</summary>",
        "Return a breakdown of subreddit karma.",
        "</summary>",
        "<returns>A breakdown of subreddit karma.</returns>",
        "Return the preference settings of the logged in user.",
        "</summary>",
        "<returns>The preference settings of the logged in user.</returns>",
        "Update preferences.",
        "</summary>",
        "<param name=\"accountPrefs\">A valid AccountPrefs instance.</param>",
        "<returns>The updated preference settings of the logged in user.</returns>",
        "Update preferences asynchronously.",
        "</summary>",
        "<param name=\"accountPrefs\">A valid AccountPrefs instance.</param>",
        "Return a list of trophies for the current user.",
        "</summary>",
        "<returns>A list of trophies for the current user.</returns>",
        "Get users whom the current user has friended.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of users.</returns>",
        "Get users with whom the current user is messaging.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of users.</returns>",
        "Get users whom the current user has blocked.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of users.</returns>",
        "Get users whom the current user has trusted.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of users.</returns>",
        "Stop being friends with a user.",
        "</summary>",
        "<param name=\"username\">A valid, existing reddit username</param>",
        "Asynchronously stop being friends with a user.",
        "</summary>",
        "<param name=\"username\">A valid, existing reddit username</param>",
        "Get information about a specific 'friend', such as notes.",
        "</summary>",
        "<param name=\"username\">A valid, existing reddit username</param>",
        "<returns>An object containing basic info on the target user and the datetime of this action.</returns>",
        "Create or update a \"friend\" relationship.",
        "This operation is idempotent. It can be used to add a new friend, or update an existing friend (e.g., add/change the note on that friend).",
        "The JSON fields can only be included if you have a Reddit Gold subscription, for some reason.",
        "</summary>",
        "<param name=\"username\">A valid, existing reddit username</param>",
        "<param name=\"json\">{",
        "\"name\": A valid, existing reddit username",
        "\"note\": a string no longer than 300 characters",
        "}</param>",
        "<returns>An object containing basic info on the target user and the datetime of this action.</returns>",
        "Create or update a \"friend\" relationship asynchronously.",
        "This operation is idempotent. It can be used to add a new friend, or update an existing friend (e.g., add/change the note on that friend).",
        "The JSON fields can only be included if you have a Reddit Gold subscription, for some reason.",
        "</summary>",
        "<param name=\"username\">A valid, existing reddit username</param>",
        "<param name=\"json\">{",
        "\"name\": A valid, existing reddit username",
        "\"note\": a string no longer than 300 characters",
        "}</param>",
        "Fetch a list of multis belonging to the current user.",
        "</summary>",
        "<param name=\"expandSrs\">boolean value</param>",
        "<returns>A list of multis.</returns>",
        "Get subreddits that the current user is subscribed to.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of Subreddit objects.</returns>",
        "Get subreddits that the current user is an approved submitter in.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of Subreddit objects.</returns>",
        "Get subreddits that the current user is a moderator of.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of Subreddit objects.</returns>",
        "Get subreddits that the current user is subscribed to that contain hosted video links.",
        "</summary>",
        "<param name=\"limit\">the maximum number of items desired (default: 25, maximum: 100)</param>",
        "<param name=\"after\">fullname of a thing</param>",
        "<param name=\"before\">fullname of a thing</param>",
        "<param name=\"show\">(optional) the string all</param>",
        "<param name=\"srDetail\">(optional) expand subreddits</param>",
        "<param name=\"includeCategories\">boolean value</param>",
        "<param name=\"count\">a positive integer (default: 0)</param>",
        "<returns>A list of Subreddit objects.</returns>",
        "Returns a list of srs that the user moderates that are also enrolled in the new modmail.",
        "</summary>",
        "<returns>A list of subreddits.</returns>",
        "Endpoint to retrieve the unread conversation count by conversation state.",
        "</summary>",
        "<returns>An object with the int properties: highlighted, notifications, archived, new, inprogress, and mod.</returns>",
        "Accept a pending invitation to contribute to a live thread.",
        "</summary>",
        "<param name=\"thread\">id</param>",
        "Asynchronously accept a pending invitation to contribute to a live thread.",
        "</summary>",
        "<param name=\"thread\">id</param>",
        "Abdicate contributorship of the thread.",
        "</summary>",
        "<param name=\"thread\">id</param>",
        "Abdicate contributorship of the thread asynchronously.",
        "</summary>",
        "<param name=\"thread\">id</param>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Account",
        "User",
        "GetMe",
        "Karma",
        "AccountPrefs",
        "Prefs",
        "AccountPrefs",
        "UpdatePrefs",
        "UpdatePrefsAsync",
        "Trophies",
        "Friends",
        "Messaging",
        "Blocked",
        "Trusted",
        "DeleteFriend",
        "DeleteFriendAsync",
        "UserActionResult",
        "GetFriend",
        "UserActionResult",
        "UpdateFriend",
        "UpdateFriendAsync",
        "Multis",
        "MySubscribedSubreddits",
        "MyContributingSubreddits",
        "MyModeratorSubreddits",
        "MyStreamingSubreddits",
        "ModmailSubreddits",
        "ModmailUnreadCount",
        "ModmailUnreadCount",
        "AcceptLiveThreadInvite",
        "AcceptLiveThreadInviteAsync",
        "AbandonLiveThread",
        "AbandonLiveThreadAsync"
    ],
    "classes": [
        "Account"
    ]
}