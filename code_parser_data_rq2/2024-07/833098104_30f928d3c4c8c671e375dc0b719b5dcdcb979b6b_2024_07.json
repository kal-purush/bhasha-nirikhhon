{
    "identifiers": [
        "torch",
        "torch",
        "utils",
        "data",
        "Dataset",
        "skimage",
        "color",
        "transform",
        "os",
        "matplotlib",
        "pyplot",
        "plt",
        "torchvision",
        "transforms",
        "transformers",
        "SegformerFeatureExtractor",
        "Dataset",
        "image_dir",
        "mask_dir",
        "feature_extractor",
        "transform",
        "image_dir",
        "mask_dir",
        "feature_extractor",
        "transform",
        "sorted",
        "os",
        "listdir",
        "image_dir",
        "len",
        "images",
        "idx",
        "images",
        "idx",
        "img_file",
        "split",
        "split",
        "os",
        "path",
        "join",
        "image_dir",
        "img_file",
        "os",
        "path",
        "join",
        "mask_dir",
        "img_number",
        "plt",
        "imread",
        "img_path",
        "plt",
        "imread",
        "mask_path",
        "transform",
        "resize",
        "image",
        "new_size",
        "transform",
        "resize",
        "mask",
        "new_size",
        "image",
        "shape",
        "image",
        "image",
        "ndim",
        "color",
        "rgb2gray",
        "image",
        "mask",
        "ndim",
        "color",
        "rgb2gray",
        "mask",
        "mask",
        "astype",
        "transform",
        "transform",
        "image",
        "transform",
        "mask",
        "feature_extractor",
        "images",
        "image",
        "return_tensors",
        "inputs",
        "squeeze",
        "torch",
        "tensor",
        "mask",
        "dtype",
        "torch",
        "float32",
        "transforms",
        "Compose",
        "transforms",
        "ToTensor",
        "transforms",
        "Normalize",
        "mean",
        "std",
        "SegformerFeatureExtractor",
        "from_pretrained",
        "XRayDataset",
        "image_dir",
        "image_dir",
        "mask_dir",
        "mask_dir",
        "feature_extractor",
        "feature_extractor",
        "transform",
        "get_transform"
    ],
    "literals": [
        "'_'",
        "'.'",
        "f'cxrmask_{img_number}.jpeg'",
        "\"pt\"",
        "'pixel_values'",
        "'bob/Downloads/PKU_summerschool/data/1000_external_data/image'",
        "'bob/Downloads/PKU_summerschool/data/1000_external_data/mask'",
        "\"nvidia/segformer-b0-finetuned-ade-512-512\""
    ],
    "variables": [
        "image_dir",
        "mask_dir",
        "feature_extractor",
        "transform",
        "images",
        "img_file",
        "img_number",
        "img_path",
        "mask_path",
        "image",
        "mask",
        "new_size",
        "image",
        "mask",
        "image",
        "image",
        "mask",
        "mask",
        "image",
        "mask",
        "inputs",
        "image_dir",
        "mask_dir",
        "feature_extractor",
        "dataset"
    ],
    "comments": [
        "load files in a sorted manner",
        "use 'split' to get the specific part in file name that we want",
        "resize",
        "Check the number of image channels, if 4, convert to 3",
        "if RGB, convert to gray",
        "convert mask to binary images",
        "apply feature_extractor",
        "Convert to required input format for SegFormer",
        "Convert images to PyTorch Tensor format and do normalization",
        "set file path"
    ],
    "docstrings": [
        "\"\"\"\n    Load the lung X-ray images with their corresponding masks and set this as a group\n    \"\"\"",
        "\"\"\"\n        Gets the images and masks in the dataset according to the index.\n\n        :return: processed images and masks\n        \"\"\""
    ],
    "functions": [
        "__len__",
        "__getitem__",
        "get_transform"
    ],
    "classes": [
        "XRayDataset"
    ]
}