{
    "identifiers": [
        "io",
        "wren",
        "sqlrewrite",
        "analyzer",
        "decisionpoint",
        "io",
        "trino",
        "sql",
        "tree",
        "ArithmeticBinaryExpression",
        "io",
        "trino",
        "sql",
        "tree",
        "ComparisonExpression",
        "io",
        "trino",
        "sql",
        "tree",
        "DefaultTraversalVisitor",
        "io",
        "trino",
        "sql",
        "tree",
        "Expression",
        "io",
        "trino",
        "sql",
        "tree",
        "Node",
        "io",
        "trino",
        "sql",
        "tree",
        "NodeLocation",
        "java",
        "util",
        "Optional",
        "node",
        "visitor",
        "visitor",
        "process",
        "node",
        "visitor",
        "nodeLocation",
        "nodeLocation",
        "Optional",
        "empty",
        "Override",
        "node",
        "context",
        "nodeLocation",
        "node",
        "getLocation",
        "Override",
        "node",
        "context",
        "nodeLocation",
        "node",
        "getLeft",
        "getLocation",
        "Override",
        "node",
        "context",
        "nodeLocation",
        "node",
        "getLeft",
        "getLocation"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "* Try to find the most left-side location of an expression.\n * For example, the binary expression \"a + b\" will return the location of \"a\".\n * The comparison expression \"a = b\" will return the location of \"a\".\n * The location of the expression itself will be returned if it is not a binary or comparison expression."
    ],
    "functions": [
        "ExpressionLocationAnalyzer",
        "analyze",
        "Void",
        "visitExpression",
        "Void",
        "visitComparisonExpression",
        "Void",
        "visitArithmeticBinary"
    ],
    "classes": [
        "ExpressionLocationAnalyzer",
        "Visitor"
    ]
}