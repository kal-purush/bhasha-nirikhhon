{
    "identifiers": [
        "service",
        "model",
        "Epic",
        "model",
        "Subtask",
        "model",
        "org",
        "junit",
        "jupiter",
        "api",
        "BeforeEach",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "java",
        "io",
        "BufferedWriter",
        "java",
        "io",
        "File",
        "java",
        "io",
        "FileWriter",
        "java",
        "io",
        "java",
        "nio",
        "file",
        "Files",
        "java",
        "nio",
        "file",
        "Paths",
        "org",
        "junit",
        "jupiter",
        "api",
        "Assertions",
        "tmpFile",
        "file",
        "thrown",
        "BeforeEach",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "Test",
        "fileBackedTaskManager",
        "FileBackedTaskManager",
        "loadFromFile",
        "assertNull",
        "fileBackedTaskManager",
        "Test",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "Test",
        "tmpFile2",
        "File",
        "createTempFile",
        "taskManager",
        "tmpFile2",
        "toString",
        "task",
        "epic",
        "subtask",
        "task",
        "taskManager",
        "addTask",
        "task",
        "task",
        "taskManager",
        "addTask",
        "task",
        "epic",
        "taskManager",
        "addEpic",
        "epic",
        "subtask",
        "epic",
        "taskManager",
        "addSubtask",
        "subtask",
        "subtask",
        "epic",
        "taskManager",
        "addSubtask",
        "subtask",
        "subtask",
        "epic",
        "taskManager",
        "addSubtask",
        "subtask",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "assertEquals",
        "Files",
        "mismatch",
        "Paths",
        "get",
        "tmpFile2",
        "toString",
        "Paths",
        "get",
        "tmpFile",
        "toString",
        "e",
        "Test",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "fileBackedTaskManager",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "fileBackedTaskManager",
        "assertEquals",
        "fileBackedTaskManager",
        "getTasks",
        "size",
        "assertEquals",
        "fileBackedTaskManager",
        "getEpics",
        "size",
        "assertEquals",
        "fileBackedTaskManager",
        "getSubtasks",
        "size",
        "Test",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "close",
        "assertDoesNotThrow",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage",
        "tmpFile",
        "File",
        "createTempFile",
        "file",
        "tmpFile",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "write",
        "file",
        "close",
        "thrown",
        "assertThrows",
        "FileBackedTaskManager",
        "loadFromFile",
        "tmpFile",
        "toString",
        "assertNotNull",
        "thrown",
        "getMessage"
    ],
    "literals": [
        "\"tasks\"",
        "\"tmp.csv\"",
        "\"Объект FileBackedTaskManager не должен быть создан если нет указанного \"",
        "\"файла.\"",
        "\"Должно быть исключение с текстом: Файл пустой!\"",
        "\"tasks\"",
        "\"Почистить ковер\"",
        "\"Отвезти в химчистку Ковер-33\"",
        "\"Сварить борщ\"",
        "\"Найти рецепт борща\"",
        "\"Переезд\"",
        "\"Переезд на новую квартиру\"",
        "\"Грузчики\"",
        "\"Найти грузчиков\"",
        "\"Кот\"",
        "\"Поймать кота и упаковать\"",
        "\"Мебель\"",
        "\"Запаковать мебель\"",
        "\"type,id,name,description,status,epic\\n\"",
        "\"TASK,1,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"TASK,2,Сварить борщ,Найти рецепт борща,NEW,\\n\"",
        "\"EPIC,3,Переезд,Переезд на новую квартиру,NEW,\\n\"",
        "\"SUBTASK,4,Грузчики,Найти грузчиков,NEW,3\\n\"",
        "\"SUBTASK,5,Кот,Поймать кота и упаковать,NEW,3\\n\"",
        "\"SUBTASK,6,Мебель,Запаковать мебель,NEW,3\\n\"",
        "\"Ошибка сохранения в файл!\"",
        "\"Ошибка чтения файла!\"",
        "\"type,id,name,description,status,epic\\n\"",
        "\"TASK,1,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"TASK,2,Сварить борщ,Найти рецепт борща,NEW,\\n\"",
        "\"EPIC,3,Переезд,Переезд на новую квартиру,NEW,\\n\"",
        "\"EPIC,7,Помыть окна,Помыть окна после зимы,NEW,\\n\"",
        "\"SUBTASK,4,Грузчики,Найти грузчиков,NEW,3\\n\"",
        "\"SUBTASK,5,Кот,Поймать кота и упаковать,NEW,3\\n\"",
        "\"SUBTASK,6,Мебель,Запаковать мебель,NEW,3\\n\"",
        "\"Объект FileBackedTaskManager не создан.\"",
        "\"Не загрузились задачи.\"",
        "\"Не загрузились эпики.\"",
        "\"Не загрузились подзадачи.\"",
        "\"TASK,1,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"Должно быть исключение с текстом: Поврежден заголовок файла CSV: \"",
        "\"неизвестное поле\"",
        "\"tasks\"",
        "\"type,id,,description,status,epic\\n\"",
        "\"TASK,1,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"Должно быть исключение с текстом: Поврежден заголовок файла CSV: \"",
        "\"неизвестное поле!\"",
        "\"tasks\"",
        "\"type,id,description,status,epic\\n\"",
        "\"TASK,1,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"Должно быть исключение с текстом: не хватает полей!\"",
        "\"tasks\"",
        "\"type,type,id,name,description,status,epic\\n\"",
        "\"Исключения быть не должно!\"",
        "\"tasks\"",
        "\"type,id,description,status,epic\\n\"",
        "\"TASK,один,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"Строка 2: ID задачи должен быть числом!\"",
        "\"tasks\"",
        "\"type,id,description,status,epic\\n\"",
        "\"TASK,-100,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"Строка 2: ID задачи должен быть больше нуля!\"",
        "\"tasks\"",
        "\"type,id,description,status,epic\\n\"",
        "\"TASK,0,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"Строка 2: ID задачи должен быть больше нуля!\"",
        "\"tasks\"",
        "\"type,id,name,description,status,epic\\n\"",
        "\"T1ASK,1,Почистить ковер,Отвезти в химчистку Ковер-33,NEW,\\n\"",
        "\"Должно быть исключение с текстом: Строка 2: не корректно указан тип \"",
        "\"задачи!\"",
        "\"tasks\"",
        "\"type,id,name,description,status,epic\\n\"",
        "\"EPIC,3,Переезд,Переезд на новую квартиру,NEW,\\n\"",
        "\"SUBTASK,4,Грузчики,Найти грузчиков,NEW,3\\n\"",
        "\"SUBTASK,5,Кот,Поймать кота и упаковать,NEW,ТРИ\\n\"",
        "\"SUBTASK,6,Мебель,Запаковать мебель,NEW,3\\n\"",
        "\"Строка 4: ID эпика подзадачи должен быть числом!\"",
        "\"tasks\"",
        "\"type,id,name,description,status,epic\\n\"",
        "\"EPIC,3,Переезд,Переезд на новую квартиру,NEW,\\n\"",
        "\"SUBTASK,4,Грузчики,Найти грузчиков,NEW,3\\n\"",
        "\"SUBTASK,5,Кот,Поймать кота и упаковать,NEW,-3\\n\"",
        "\"SUBTASK,6,Мебель,Запаковать мебель,NEW,3\\n\"",
        "\"ID эпика подзадачи должен быть больше нуля!\""
    ],
    "variables": [
        "tmpFile",
        "file",
        "thrown",
        "task",
        "epic",
        "subtask"
    ],
    "comments": [
        "создадим две задачи",
        "id будет = 1",
        "id будет = 2",
        "создадим эпик с тремя подзадачами",
        "id будет = 3",
        "id будет = 4",
        "id будет = 5",
        "id будет = 6",
        "создадим файл CSV с таким же содержимым",
        "сравним файлы, они должны быть идентичны",
        "нет заголовка файла CSV",
        "пропущено поле в заголовке файла CSV",
        "не все поля в заголовке файла CSV",
        "дублируются поля в заголовке",
        "не должно быть исключения",
        "не корректно указываем ID задачи",
        "указываем ID задачи меньше нуля",
        "указываем ID задачи = 0",
        "портим 2-ю строку файла: меняем тип задачи на не существующий",
        "не корректно указываем номер эпика в подзадаче",
        "указываем отрицательный номер эпика в подзадаче"
    ],
    "docstrings": [],
    "functions": [
        "beforeEach",
        "shouldBeNullWhenFileIsNotExist",
        "shouldBeExceptionWhenFileIsEmpty",
        "saveToFile",
        "loadFromFile",
        "generateExceptionManagerSaveException"
    ],
    "classes": [
        "FileBackedTaskManagerTest"
    ]
}