{
    "identifiers": [
        "sys",
        "argparse",
        "datetime",
        "datetime",
        "os",
        "scripts",
        "utils_forTraining",
        "utils",
        "pandas",
        "pd",
        "numpy",
        "np",
        "EPInformer",
        "models",
        "EPInformer_v2",
        "enhancer_predictor_256bp",
        "scipy",
        "stats",
        "tqdm",
        "tqdm",
        "torch",
        "torch",
        "utils",
        "data",
        "Subset",
        "Dataset",
        "argparse",
        "ArgumentParser",
        "arg",
        "arg",
        "split",
        "parser",
        "add_argument",
        "help",
        "choices",
        "parser",
        "add_argument",
        "list_of_strings",
        "help",
        "parser",
        "add_argument",
        "help",
        "choices",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "choices",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "add_argument",
        "help",
        "action",
        "parser",
        "parse_args",
        "args",
        "cell",
        "args",
        "cuda",
        "args",
        "distance_threshold",
        "args",
        "epochs",
        "args",
        "hic_threshold",
        "hic_threshold",
        "args",
        "model_type",
        "args",
        "model_type",
        "args",
        "model_type",
        "args",
        "use_pretrained_encoder",
        "args",
        "fold",
        "args",
        "n_interact_enc",
        "args",
        "batch_size",
        "args",
        "expr_assay",
        "datetime",
        "now",
        "today",
        "strftime",
        "pd",
        "read_csv",
        "index_col",
        "format",
        "datetime_str",
        "fold_list",
        "fold_list",
        "fi",
        "fold_list",
        "fi",
        "fi",
        "split_df",
        "split_df",
        "fold_i",
        "index",
        "split_df",
        "split_df",
        "fold_i",
        "index",
        "split_df",
        "split_df",
        "fold_i",
        "index",
        "utils",
        "promoter_enhancer_dataset",
        "expr_type",
        "expr_type",
        "cell_type",
        "cell",
        "n_extraFeat",
        "n_extraFeat",
        "usePromoterSignal",
        "n_enhancers",
        "n_enhancers",
        "hic_threshold",
        "hic_threshold",
        "distance_threshold",
        "distance_threshold",
        "eid",
        "decode",
        "eid",
        "all_ds",
        "data_h5",
        "pd",
        "DataFrame",
        "ensid_list",
        "columns",
        "np",
        "arange",
        "len",
        "ensid_list",
        "ensid_df",
        "set_index",
        "ensid_df",
        "loc",
        "train_ensid",
        "ensid_df",
        "loc",
        "valid_ensid",
        "ensid_df",
        "loc",
        "test_ensid",
        "Subset",
        "all_ds",
        "train_idx",
        "Subset",
        "all_ds",
        "valid_idx",
        "Subset",
        "all_ds",
        "test_idx",
        "EPInformer_v2",
        "n_encoder",
        "n_enhancer",
        "n_enhancers",
        "out_dim",
        "n_extraFeat",
        "n_extraFeat",
        "device",
        "device",
        "model",
        "to",
        "device",
        "use_pretrained",
        "enhancer_predictor_256bp",
        "format",
        "cell",
        "torch",
        "load",
        "format",
        "fold_i",
        "pt_model_name",
        "pt_model_name",
        "EPInformer_v2",
        "n_encoder",
        "n_encoder",
        "pre_trained_encoder",
        "pretrained_convNet",
        "encoder",
        "n_enhancer",
        "n_enhancers",
        "out_dim",
        "n_extraFeat",
        "n_extraFeat",
        "device",
        "device",
        "to",
        "device",
        "EPInformer_v2",
        "n_encoder",
        "n_encoder",
        "pre_trained_encoder",
        "n_enhancer",
        "n_enhancers",
        "out_dim",
        "n_extraFeat",
        "n_extraFeat",
        "device",
        "device",
        "to",
        "device",
        "utils",
        "train",
        "model",
        "train_ds",
        "EPOCHS",
        "n_epoch",
        "model_name",
        "model",
        "name",
        "fold_i",
        "fi",
        "batch_size",
        "batch_size",
        "device",
        "device",
        "saved_model_path",
        "saved_model_path",
        "utils",
        "test",
        "model",
        "test_ds",
        "model_name",
        "model",
        "name",
        "saved_model_path",
        "saved_model_path",
        "fold_i",
        "fi",
        "batch_size",
        "batch_size",
        "device",
        "device"
    ],
    "literals": [
        "','",
        "'--cell'",
        "'cell line (support K562 and GM12878)'",
        "'K562'",
        "'GM12878'",
        "\"--fold\"",
        "\"test fold\"",
        "'all'",
        "\"--model_type\"",
        "'EPInformer type'",
        "'EPInformer-PE-Activity'",
        "'EPInformer-PE'",
        "'EPInformer-PE-Activity'",
        "'EPInformer-PE-Activity-HiC'",
        "'--distance_threshold'",
        "'max distance to TSS'",
        "'--hic_threshold'",
        "'hic loop thresold'",
        "'--expr_assay'",
        "'expression_assay'",
        "'CAGE'",
        "'RNA'",
        "'--batch_size'",
        "'batch size'",
        "'--n_interact_enc'",
        "'layers of interaction encoder'",
        "'--epochs'",
        "'training epochs'",
        "'--cuda'",
        "'use cuda'",
        "'store_true'",
        "'--use_pretrained_encoder'",
        "'use pretrained sequence encoder'",
        "'store_true'",
        "'cuda'",
        "'cpu'",
        "'EPInformer-PE'",
        "'EPInformer-PE-Activity'",
        "'EPInformer-PE-Activity-HiC'",
        "\"%Y-%m-%d-%H\"",
        "'./data/leave_chrom_out_crossvalidation_split_18377genes.csv'",
        "'./trained_models/{}/'",
        "'1'",
        "'all'",
        "\"-\"",
        "'fold'",
        "'-'",
        "'fold_'",
        "'train'",
        "'valid'",
        "'test'",
        "'ensid'",
        "'ensid'",
        "'idx'",
        "'ensid'",
        "'idx'",
        "'idx'",
        "'idx'",
        "'{}_seq2activityLog2_leaveChrOut_combinedRS_2bins_bs64_H3K27ac_adamW_erisxdl_r0'",
        "\"./trained_models/pretrained_enhancer_encoder/{}_best_{}_checkpoint.pt\"",
        "'Loading pretrained model ...'"
    ],
    "variables": [
        "parser",
        "args",
        "cell",
        "device",
        "device",
        "distance_threshold",
        "n_epoch",
        "hic_threshold",
        "hic_threshold",
        "n_extraFeat",
        "n_extraFeat",
        "n_extraFeat",
        "use_pretrained",
        "fold_list",
        "n_encoder",
        "batch_size",
        "expr_type",
        "n_enhancers",
        "today",
        "datetime_str",
        "split_df",
        "saved_model_path",
        "fold_list",
        "fold_list",
        "fold_list",
        "fold_i",
        "train_ensid",
        "valid_ensid",
        "test_ensid",
        "all_ds",
        "ensid_list",
        "ensid_df",
        "ensid_df",
        "ensid_df",
        "train_idx",
        "valid_idx",
        "test_idx",
        "train_ds",
        "valid_ds",
        "test_ds",
        "model",
        "model",
        "pretrained_convNet",
        "pt_model_name",
        "checkpoint",
        "net",
        "net",
        "test_df"
    ],
    "comments": [
        "example",
        "python train_EPInformer.py --cell K562  --model_type EPInformer-PE-Activity --expr_assay CAGE --use_pretrained_encoder --batch_size 16",
        "parameter ######",
        "",
        "Get date"
    ],
    "docstrings": [],
    "functions": [
        "list_of_strings"
    ],
    "classes": []
}