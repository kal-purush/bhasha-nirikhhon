{
    "identifiers": [
        "Inject",
        "Injectable",
        "Brackets",
        "SelectQueryBuilder",
        "DI",
        "FollowingsRepository",
        "MiUser",
        "UsersRepository",
        "bindThis",
        "sqlLikeEscape",
        "Config",
        "UserEntityService",
        "Packed",
        "Injectable",
        "Inject",
        "DI",
        "config",
        "Inject",
        "DI",
        "usersRepository",
        "Inject",
        "DI",
        "followingsRepository",
        "userEntityService",
        "bindThis",
        "opts",
        "me",
        "me",
        "me",
        "opts",
        "query",
        "queries",
        "query",
        "limit",
        "resultSet",
        "res",
        "res",
        "x",
        "x",
        "resultSet",
        "resultSet",
        "ids",
        "resultSet",
        "limit",
        "resultSet",
        "limit",
        "me",
        "opts",
        "bindThis",
        "me",
        "defaultActiveThreshold",
        "me",
        "followingUserQuery",
        "activeFollowingUsersQuery",
        "followingUserQuery",
        "followingUserQuery",
        "Brackets",
        "qb",
        "qb",
        "inactiveFollowingUsersQuery",
        "followingUserQuery",
        "followingUserQuery",
        "activeUserQuery",
        "followingUserQuery",
        "followingUserQuery",
        "inactiveUserQuery",
        "followingUserQuery",
        "activeFollowingUsersQuery",
        "inactiveFollowingUsersQuery",
        "activeUserQuery",
        "inactiveUserQuery",
        "bindThis",
        "defaultActiveThreshold",
        "Brackets",
        "qb",
        "qb",
        "activeUserQuery",
        "inactiveUserQuery",
        "bindThis",
        "userQuery",
        "sqlLikeEscape",
        "userQuery",
        "userQuery",
        "sqlLikeEscape",
        "userQuery",
        "userQuery"
    ],
    "literals": [
        "'@nestjs/common'",
        "'typeorm'",
        "'@/di-symbols.js'",
        "'@/models/_.js'",
        "'@/decorators.js'",
        "'@/misc/sql-like-escape.js'",
        "'@/config.js'",
        "'@/core/entities/UserEntityService.js'",
        "'@/misc/json-schema.js'",
        "string",
        "string",
        "'User'",
        "'id'",
        "'user.id'",
        "'user.usernameLower'",
        "'ASC'",
        "'id'",
        "'UserLite'",
        "'UserDetailed'",
        "'UserDetailed'",
        "'UserLite'",
        "string",
        "string",
        "'following'",
        "'following.followeeId'",
        "'following.followerId = :followerId'",
        "user.id IN (${followingUserQuery.getQuery()})",
        "'user.updatedAt > :activeThreshold'",
        "user.id IN (${followingUserQuery.getQuery()})",
        "'user.updatedAt IS NULL'",
        "'user.updatedAt <= :activeThreshold'",
        "user.id NOT IN (${followingUserQuery.getQuery()})",
        "'user.updatedAt > :activeThreshold'",
        "user.id NOT IN (${followingUserQuery.getQuery()})",
        "'user.updatedAt <= :activeThreshold'",
        "string",
        "string",
        "'user.updatedAt IS NULL'",
        "'user.updatedAt > :activeThreshold'",
        "'user.updatedAt <= :activeThreshold'",
        "string",
        "string",
        "'user'",
        "'user.usernameLower LIKE :username'",
        "'%'",
        "'.'",
        "'user.host IS NULL'",
        "'user.host LIKE :host'",
        "'%'",
        "'user.isSuspended = FALSE'"
    ],
    "variables": [
        "queries",
        "resultSet",
        "limit",
        "ids",
        "activeThreshold",
        "followingUserQuery",
        "activeFollowingUsersQuery",
        "inactiveFollowingUsersQuery",
        "activeUserQuery",
        "inactiveUserQuery",
        "activeThreshold",
        "activeUserQuery",
        "inactiveUserQuery",
        "userQuery"
    ],
    "comments": [
        "デフォルト30日以内に更新されたユーザーをアクティブユーザーとする",
        "自分自身がヒットするとしたらここ",
        "デフォルト30日以内に更新されたユーザーをアクティブユーザーとする"
    ],
    "docstrings": [
        "* SPDX-FileCopyrightText: syuilo and misskey-project\n * SPDX-License-Identifier: AGPL-3.0-only",
        "* ユーザ名とホスト名によるユーザ検索を行う.\n\t *\n\t * - 検索結果には優先順位がつけられており、以下の順序で検索が行われる.\n\t *   1. フォローしているユーザのうち、一定期間以内（※）に更新されたユーザ\n\t *   2. フォローしているユーザのうち、一定期間以内に更新されていないユーザ\n\t *   3. フォローしていないユーザのうち、一定期間以内に更新されたユーザ\n\t *   4. フォローしていないユーザのうち、一定期間以内に更新されていないユーザ\n\t * - ログインしていない場合は、以下の順序で検索が行われる.\n\t *   1. 一定期間以内に更新されたユーザ\n\t *   2. 一定期間以内に更新されていないユーザ\n\t * - それぞれの検索結果はユーザ名の昇順でソートされる.\n\t * - 動作的には先に登場した検索結果の登場位置が優先される(条件的にユーザIDが重複することはないが).\n\t *   （1で既にヒットしていた場合、2, 3, 4でヒットしても無視される）\n\t * - ユーザ名とホスト名の検索条件はそれぞれ前方一致で検索される.\n\t * - ユーザ名の検索は大文字小文字を区別しない.\n\t * - ホスト名の検索は大文字小文字を区別しない.\n\t * - 検索結果は最大で {@link opts.limit} 件までとなる.\n\t *\n\t * ※一定期間とは {@link params.activeThreshold} で指定された日時から現在までの期間を指す.\n\t *\n\t * @param params 検索条件.\n\t * @param opts 関数の動作を制御するオプション.\n\t * @param me 検索を実行するユーザの情報. 未ログインの場合は指定しない.\n\t * @see {@link UserSearchService#buildSearchUserQueries}\n\t * @see {@link UserSearchService#buildSearchUserNoLoginQueries}",
        "* ログイン済みユーザによる検索実行時のクエリ一覧を構築する.\n\t * @param me\n\t * @param params\n\t * @private",
        "* ログインしていないユーザによる検索実行時のクエリ一覧を構築する.\n\t * @param params\n\t * @private",
        "* ユーザ検索クエリで共通する抽出条件をあらかじめ設定したクエリビルダを生成する.\n\t * @param params\n\t * @private"
    ],
    "functions": [
        "defaultActiveThreshold",
        "search",
        "buildSearchUserQueries",
        "buildSearchUserNoLoginQueries",
        "generateUserQueryBuilder"
    ],
    "classes": [
        "UserSearchService"
    ]
}