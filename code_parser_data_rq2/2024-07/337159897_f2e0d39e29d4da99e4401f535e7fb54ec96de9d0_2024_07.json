{
    "identifiers": [
        "Globalization",
        "Reflection",
        "Highbyte",
        "DotNet6502",
        "Instrumentation",
        "Highbyte",
        "DotNet6502",
        "Instrumentation",
        "Stats",
        "Highbyte",
        "DotNet6502",
        "Systems",
        "Highbyte",
        "DotNet6502",
        "Systems",
        "Commodore64",
        "Highbyte",
        "DotNet6502",
        "Systems",
        "Commodore64",
        "Video",
        "Highbyte",
        "DotNet6502",
        "Systems",
        "Commodore64",
        "Video",
        "Vic2",
        "Highbyte",
        "DotNet6502",
        "Systems",
        "Commodore64",
        "Video",
        "Vic2ScreenLayouts",
        "Highbyte",
        "DotNet6502",
        "Impl",
        "Skia",
        "Commodore64",
        "Video",
        "v2",
        "IRenderer",
        "C64",
        "SkiaRenderContext",
        "Func",
        "SKCanvas",
        "eightPixels",
        "fgColorCode",
        "eightPixels",
        "fgColorCode",
        "eightPixels",
        "fgColorCode",
        "eightPixels",
        "fgColorCode",
        "eightPixels",
        "fgColorCode",
        "eightPixels",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "eightPixels",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "colorRamCode",
        "SKColors",
        "Orchid",
        "SKColors",
        "DarkOrchid",
        "WithAlpha",
        "SKColors",
        "DarkOliveGreen",
        "SKColors",
        "DarkMagenta",
        "SKColors",
        "DarkOrange",
        "SKColors",
        "DarkKhaki",
        "LOW_PRIO_SPRITE_BLUE",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "SKColor",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "LOW_PRIO_SPRITE_BLUE",
        "SKColor",
        "SKColor",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "SKColor",
        "red",
        "green",
        "blue",
        "HIGH_PRIO_SPRITE_BLUE",
        "ShaderLineData",
        "Bg0_Color",
        "Bg1_Color",
        "Bg2_Color",
        "Bg3_Color",
        "Border_Color",
        "SpriteMultiColor0",
        "SpriteMultiColor1",
        "Sprite0_Color",
        "Sprite1_Color",
        "Sprite2_Color",
        "Sprite3_Color",
        "Sprite4_Color",
        "Sprite5_Color",
        "Sprite6_Color",
        "Sprite7_Color",
        "C64",
        "c64",
        "SkiaRenderContext",
        "skiaRenderContext",
        "_getSkCanvas",
        "skiaRenderContext",
        "GetCanvas",
        "_c64SkiaColors",
        "C64SkiaColors",
        "c64",
        "ColorMapName",
        "InitTextAndSpritesBitmap",
        "c64",
        "InitLineDataBitmap",
        "c64",
        "InitBitPatternToPixelMapsForTextDisplay",
        "c64",
        "InitBitPatternToPixelMapsForBitmapDisplay",
        "InitShader",
        "c64",
        "Instrumentations",
        "Clear",
        "_borderStat",
        "Instrumentations",
        "Add",
        "StatsCategory",
        "ElapsedMillisecondsTimedStatSystem",
        "c64",
        "_textAndBitmapScreenStat",
        "Instrumentations",
        "Add",
        "StatsCategory",
        "ElapsedMillisecondsTimedStatSystem",
        "c64",
        "_spritesStat",
        "Instrumentations",
        "Add",
        "StatsCategory",
        "ElapsedMillisecondsTimedStatSystem",
        "c64",
        "_lineDataImageStat",
        "Instrumentations",
        "Add",
        "StatsCategory",
        "ElapsedMillisecondsTimedStatSystem",
        "c64",
        "_drawCanvasWithShader",
        "Instrumentations",
        "Add",
        "StatsCategory",
        "ElapsedMillisecondsTimedStatSystem",
        "c64",
        "ISystem",
        "system",
        "IRenderContext",
        "renderContext",
        "Init",
        "C64",
        "system",
        "SkiaRenderContext",
        "renderContext",
        "C64",
        "c64",
        "DrawBorderAndScreenToBitmapBackedByPixelArray",
        "c64",
        "_skiaPixelArrayBitmap_TextAndBitmap",
        "PixelArray",
        "DrawSpritesToBitmapBackedByPixelArray",
        "c64",
        "_skiaPixelArrayBitmap_Sprites",
        "PixelArray",
        "WriteLineDataToBitmapBackedByPixelArray",
        "c64",
        "_skiaPixelArrayBitmap_LineData",
        "PixelArray",
        "WriteBitmapToCanvas",
        "_skiaPixelArrayBitmap_TextAndBitmap",
        "Bitmap",
        "_skiaPixelArrayBitmap_Sprites",
        "Bitmap",
        "_skiaPixelArrayBitmap_LineData",
        "Bitmap",
        "_getSkCanvas",
        "c64",
        "ISystem",
        "system",
        "Draw",
        "C64",
        "system",
        "_skiaPixelArrayBitmap_TextAndBitmap",
        "Free",
        "_skiaPixelArrayBitmap_Sprites",
        "Free",
        "_skiaPixelArrayBitmap_LineData",
        "Free",
        "C64",
        "c64",
        "LoadShaderSource",
        "src",
        "ReplaceShaderPlaceholders",
        "src",
        "c64",
        "_sKRuntimeEffect",
        "SKRuntimeEffect",
        "CreateShader",
        "src",
        "error",
        "IsNullOrEmpty",
        "error",
        "DotNet6502Exception",
        "error",
        "_sKRuntimeEffectUniforms",
        "SKRuntimeEffectUniforms",
        "_sKRuntimeEffect",
        "_sKRuntimeEffectChildren",
        "SKRuntimeEffectChildren",
        "_sKRuntimeEffect",
        "_shaderPaint",
        "SKPaint",
        "InitShaderColorValueLookup",
        "AddColorToShaderColorMap",
        "_bg0DrawColor",
        "AddColorToShaderColorMap",
        "_bg0DrawColorActual",
        "AddColorToShaderColorMap",
        "_bg1DrawColor",
        "AddColorToShaderColorMap",
        "_bg2DrawColor",
        "AddColorToShaderColorMap",
        "_bg3DrawColor",
        "AddColorToShaderColorMap",
        "_borderDrawColor",
        "AddColorToShaderColorMap",
        "_spriteLowPrioMultiColor0",
        "AddColorToShaderColorMap",
        "_spriteLowPrioMultiColor1",
        "AddColorToShaderColorMap",
        "_spriteHighPrioMultiColor0",
        "AddColorToShaderColorMap",
        "_spriteHighPrioMultiColor1",
        "spriteColor",
        "_spriteLowPrioColors",
        "Union",
        "_spriteHighPrioColors",
        "AddColorToShaderColorMap",
        "spriteColor",
        "AddColorToShaderColorMap",
        "SKColor",
        "color",
        "_sKColorToShaderColorMap",
        "Add",
        "color",
        "color",
        "Red",
        "color",
        "Green",
        "color",
        "Blue",
        "color",
        "Alpha",
        "src",
        "C64",
        "c64",
        "src",
        "src",
        "Replace",
        "c64",
        "Vic2",
        "Vic2Screen",
        "VisibleHeight",
        "ToString",
        "c64",
        "Vic2",
        "ScreenLayouts",
        "GetLayout",
        "LayoutType",
        "VisibleNormalized",
        "for24RowMode",
        "for38ColMode",
        "visibleMainScreenAreaNormalized",
        "Screen",
        "Start",
        "Y",
        "src",
        "src",
        "Replace",
        "bitmapMainScreenStartLine",
        "ToString",
        "src",
        "src",
        "Replace",
        "bitmapMainScreenStartLine",
        "c64",
        "Vic2",
        "Vic2Screen",
        "DrawableAreaHeight",
        "ToString",
        "src",
        "src",
        "Replace",
        "LOW_PRIO_SPRITE_BLUE_SHADER",
        "ToString",
        "CultureInfo",
        "InvariantCulture",
        "src",
        "src",
        "Replace",
        "HIGH_PRIO_SPRITE_BLUE_SHADER",
        "ToString",
        "CultureInfo",
        "InvariantCulture",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Bg0_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Bg1_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Bg2_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Bg3_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Border_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "SpriteMultiColor0",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "SpriteMultiColor1",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite0_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite1_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite2_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite3_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite4_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite5_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite6_Color",
        "ToString",
        "src",
        "src",
        "Replace",
        "ShaderLineData",
        "Sprite7_Color",
        "ToString",
        "src",
        "shaderFileName",
        "Assembly",
        "GetExecutingAssembly",
        "shaderFileName",
        "assembly",
        "GetManifestResourceStream",
        "resourceName",
        "resourceStream",
        "ArgumentException",
        "resourceName",
        "nameof",
        "shaderFileName",
        "StreamReader",
        "resourceStream",
        "reader",
        "ReadToEnd",
        "C64",
        "c64",
        "c64",
        "Vic2",
        "vic2",
        "Vic2Screen",
        "vic2Screen",
        "VisibleWidth",
        "vic2Screen",
        "VisibleHeight",
        "_skiaPixelArrayBitmap_TextAndBitmap",
        "SkiaBitmapBackedByPixelArray",
        "Create",
        "width",
        "height",
        "_skiaPixelArrayBitmap_Sprites",
        "SkiaBitmapBackedByPixelArray",
        "Create",
        "width",
        "height",
        "C64",
        "c64",
        "c64",
        "Vic2",
        "vic2",
        "Vic2Screen",
        "vic2Screen",
        "VisibleWidth",
        "_oneLineBorderPixels",
        "width",
        "i",
        "_oneLineBorderPixels",
        "Length",
        "i",
        "_oneLineBorderPixels",
        "i",
        "_borderDrawColor",
        "_oneCharLineBg0Pixels",
        "i",
        "_oneCharLineBg0Pixels",
        "Length",
        "i",
        "_oneCharLineBg0Pixels",
        "i",
        "_bg0DrawColor",
        "_bitmapEightPixelsBg0Map",
        "_bitmapEightPixelsBg1Map",
        "_bitmapEightPixelsBg2Map",
        "_bitmapEightPixelsBg3Map",
        "_bitmapEightPixelsMultiColorMap",
        "_bg0DrawColor",
        "_bg1DrawColor",
        "_bg2DrawColor",
        "_bg3DrawColor",
        "pixelPattern",
        "pixelPattern",
        "fgColorCode",
        "fgColorCode",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "fgColorCode",
        "pixelPos",
        "pixelPos",
        "pixelPattern",
        "pixelPos",
        "bitmapPixelsBg0",
        "pixelPos",
        "isBitSet",
        "fgColorVal",
        "bg0ColorVal",
        "bitmapPixelsBg1",
        "pixelPos",
        "isBitSet",
        "fgColorVal",
        "bg1ColorVal",
        "bitmapPixelsBg2",
        "pixelPos",
        "isBitSet",
        "fgColorVal",
        "bg2ColorVal",
        "bitmapPixelsBg3",
        "pixelPos",
        "isBitSet",
        "fgColorVal",
        "bg3ColorVal",
        "_bitmapEightPixelsBg0Map",
        "Add",
        "pixelPattern",
        "fgColorCode",
        "bitmapPixelsBg0",
        "_bitmapEightPixelsBg1Map",
        "Add",
        "pixelPattern",
        "fgColorCode",
        "bitmapPixelsBg1",
        "_bitmapEightPixelsBg2Map",
        "Add",
        "pixelPattern",
        "fgColorCode",
        "bitmapPixelsBg2",
        "_bitmapEightPixelsBg3Map",
        "Add",
        "pixelPattern",
        "fgColorCode",
        "bitmapPixelsBg3",
        "pixelPattern",
        "pixelPattern",
        "fgColorCode",
        "fgColorCode",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "fgColorCode",
        "pixel",
        "pixel",
        "pixelPattern",
        "mask",
        "pixel",
        "pixelPair",
        "bg0ColorVal",
        "bg1ColorVal",
        "bg2ColorVal",
        "fgColorVal",
        "DotNet6502Exception",
        "mask",
        "mask",
        "bitmapPixelsMultiColor",
        "pixel",
        "pairColorVal",
        "bitmapPixelsMultiColor",
        "pixel",
        "pairColorVal",
        "_bitmapEightPixelsMultiColorMap",
        "Add",
        "pixelPattern",
        "fgColorCode",
        "bitmapPixelsMultiColor",
        "_bg0DrawColor",
        "_bitmapEightHiresPixelsActual",
        "_bitmapEightMulticolorPixelsActual",
        "pixelPattern",
        "pixelPattern",
        "bitmapBgColorCode",
        "bitmapBgColorCode",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "bitmapFgColorCode",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "bitmapFgColorCode",
        "pixelPos",
        "pixelPos",
        "pixelPattern",
        "pixelPos",
        "isBitSet",
        "bitmapPixels",
        "pixelPos",
        "bitmapFgColorVal",
        "bitmapPixels",
        "pixelPos",
        "bitmapBgColorVal",
        "_bitmapEightHiresPixelsActual",
        "Add",
        "pixelPattern",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "bitmapPixels",
        "colorRamCode",
        "colorRamCode",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "colorRamCode",
        "pixel",
        "pixel",
        "pixelPattern",
        "mask",
        "pixel",
        "pixelPair",
        "bg0ColorVal",
        "bitmapFgColorVal",
        "bitmapBgColorVal",
        "colorRamVal",
        "DotNet6502Exception",
        "mask",
        "mask",
        "bitmapMulicolorPixels",
        "pixel",
        "pairColorVal",
        "bitmapMulicolorPixels",
        "pixel",
        "pairColorVal",
        "_bitmapEightMulticolorPixelsActual",
        "Add",
        "pixelPattern",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "colorRamCode",
        "bitmapMulicolorPixels",
        "C64",
        "c64",
        "_skiaPixelArrayBitmap_LineData",
        "SkiaBitmapBackedByPixelArray",
        "Create",
        "Enum",
        "GetNames",
        "ShaderLineData",
        "Length",
        "c64",
        "Vic2",
        "Vic2Screen",
        "VisibleHeight",
        "SKBitmap",
        "bitmap",
        "SKBitmap",
        "spritesBitmap",
        "SKBitmap",
        "lineDataBitmap",
        "SKCanvas",
        "canvas",
        "C64",
        "c64",
        "_drawCanvasWithShader",
        "Start",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_bg0DrawColorActual",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_bg1DrawColor",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_bg2DrawColor",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_bg3DrawColor",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_borderDrawColor",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioMultiColor0",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioMultiColor1",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioMultiColor0",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioMultiColor1",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteLowPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "_sKRuntimeEffectUniforms",
        "_sKColorToShaderColorMap",
        "_spriteHighPrioColors",
        "bitmap",
        "ToShader",
        "spritesBitmap",
        "ToShader",
        "lineDataBitmap",
        "ToShader",
        "_sKRuntimeEffectChildren",
        "shaderTexture",
        "_sKRuntimeEffectChildren",
        "spritesTexture",
        "_sKRuntimeEffectChildren",
        "lineDataBitmapShaderTexture",
        "_sKRuntimeEffect",
        "ToShader",
        "_sKRuntimeEffectUniforms",
        "_sKRuntimeEffectChildren",
        "_shaderPaint",
        "Shader",
        "shader",
        "canvas",
        "DrawRect",
        "bitmap",
        "Width",
        "bitmap",
        "Height",
        "_shaderPaint",
        "_drawCanvasWithShader",
        "Stop",
        "C64",
        "c64",
        "pixelArray",
        "_textAndBitmapScreenStat",
        "Start",
        "c64",
        "Vic2",
        "vic2",
        "Vic2Mem",
        "vic2",
        "Vic2Screen",
        "vic2",
        "ScreenLayouts",
        "vic2",
        "BitmapManager",
        "vic2ScreenLayouts",
        "GetLayout",
        "LayoutType",
        "VisibleNormalized",
        "for24RowMode",
        "for38ColMode",
        "vic2ScreenLayouts",
        "GetLayout",
        "LayoutType",
        "VisibleNormalized",
        "vic2Screen",
        "VisibleWidth",
        "vic2Screen",
        "VisibleHeight",
        "vic2Screen",
        "DrawableAreaHeight",
        "vic2",
        "VideoMatrixBaseAddress",
        "bitmapManager",
        "BitmapAddressInVIC2Bank",
        "vic2Screen",
        "TextCols",
        "visibleMainScreenAreaNormalized",
        "Screen",
        "Start",
        "Y",
        "visibleMainScreenAreaNormalized",
        "Screen",
        "Start",
        "X",
        "vic2",
        "CharsetManager",
        "CharacterSetAddressInVIC2Bank",
        "vic2",
        "Vic2Screen",
        "CharacterHeight",
        "vic2",
        "Is38ColumnDisplayEnabled",
        "vic2",
        "Is24RowDisplayEnabled",
        "visibleMainScreenAreaNormalizedClipped",
        "Screen",
        "Start",
        "Y",
        "visibleMainScreenAreaNormalized",
        "Screen",
        "Start",
        "Y",
        "visibleMainScreenAreaNormalizedClipped",
        "Screen",
        "End",
        "Y",
        "visibleMainScreenAreaNormalized",
        "Screen",
        "Start",
        "Y",
        "vic2",
        "DisplayMode",
        "DispMode",
        "Text",
        "vic2",
        "CharacterMode",
        "vic2",
        "BitmapMode",
        "vic2",
        "GetScrollX",
        "vic2",
        "GetScrollY",
        "drawLine",
        "drawableAreaHeight",
        "drawLine",
        "screenStartY",
        "drawLine",
        "drawLine",
        "drawLine",
        "vic2VideoMatrixBaseAddress",
        "characterRow",
        "vic2ScreenTextCols",
        "Vic2Addr",
        "COLOR_RAM_START",
        "characterRow",
        "vic2ScreenTextCols",
        "vic2BitmapBaseAddress",
        "characterRow",
        "vic2ScreenTextCols",
        "characterLine",
        "col",
        "vic2ScreenTextCols",
        "col",
        "vic2Mem",
        "characterAddress",
        "c64",
        "ReadIOStorage",
        "colorRamAddress",
        "screenStartX",
        "col",
        "isTextMode",
        "characterMode",
        "CharMode",
        "Standard",
        "bgColorNumber",
        "characterMode",
        "CharMode",
        "Extended",
        "bgColorNumber",
        "characterCode",
        "characterCode",
        "characterCode",
        "bgColorNumber",
        "fgColorCode",
        "characterMode",
        "CharMode",
        "Standard",
        "fgColorCode",
        "fgColorCode",
        "vic2CharacterSetAddressInVIC2Bank",
        "characterCode",
        "vic2ScreenCharacterHeight",
        "characterLine",
        "vic2Mem",
        "characterSetLineAddress",
        "characterMode",
        "CharMode",
        "Standard",
        "characterMode",
        "CharMode",
        "Extended",
        "bgColorNumber",
        "eightPixels",
        "_bitmapEightPixelsBg0Map",
        "lineData",
        "fgColorCode",
        "bgColorNumber",
        "eightPixels",
        "_bitmapEightPixelsBg1Map",
        "lineData",
        "fgColorCode",
        "bgColorNumber",
        "eightPixels",
        "_bitmapEightPixelsBg2Map",
        "lineData",
        "fgColorCode",
        "bgColorNumber",
        "eightPixels",
        "_bitmapEightPixelsBg3Map",
        "lineData",
        "fgColorCode",
        "NotImplementedException",
        "bgColorNumber",
        "eightPixels",
        "_bitmapEightPixelsMultiColorMap",
        "lineData",
        "fgColorCode",
        "vic2Mem",
        "c64BitMapAddress",
        "characterCode",
        "characterCode",
        "bitmapMode",
        "BitmMode",
        "Standard",
        "eightPixels",
        "_bitmapEightHiresPixelsActual",
        "bitmapLineData",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "eightPixels",
        "_bitmapEightMulticolorPixelsActual",
        "bitmapLineData",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "colorRamCode",
        "scrollX",
        "col",
        "WriteToPixelArray",
        "_oneCharLineBg0Pixels",
        "pixelArray",
        "drawLine",
        "fnLength",
        "scrollX",
        "fnAdjustForScrollX",
        "fnAdjustForScrollY",
        "scrollY",
        "scrollY",
        "drawLine",
        "drawableAreaHeight",
        "i",
        "scrollY",
        "i",
        "WriteToPixelArray",
        "_oneCharLineBg0Pixels",
        "pixelArray",
        "drawLine",
        "i",
        "col",
        "fnLength",
        "fnAdjustForScrollX",
        "fnAdjustForScrollY",
        "scrollY",
        "drawLine",
        "i",
        "scrollY",
        "i",
        "WriteToPixelArray",
        "_oneCharLineBg0Pixels",
        "pixelArray",
        "i",
        "col",
        "fnLength",
        "fnAdjustForScrollX",
        "fnAdjustForScrollY",
        "WriteToPixelArray",
        "eightPixels",
        "pixelArray",
        "drawLine",
        "col",
        "fnLength",
        "fnAdjustForScrollX",
        "fnAdjustForScrollY",
        "WriteToPixelArray",
        "fnEightPixels",
        "fnPixelArray",
        "fnMainScreenY",
        "fnMainScreenX",
        "fnLength",
        "fnAdjustForScrollX",
        "fnAdjustForScrollY",
        "fnMainScreenX",
        "fnAdjustForScrollY",
        "fnMainScreenY",
        "scrollY",
        "fnMainScreenY",
        "scrollY",
        "vic2Screen",
        "DrawableAreaHeight",
        "fnMainScreenY",
        "scrollY",
        "fnAdjustForScrollX",
        "fnMainScreenX",
        "scrollX",
        "lCol",
        "vic2ScreenTextCols",
        "fnLength",
        "scrollX",
        "screenStartY",
        "fnMainScreenY",
        "width",
        "screenStartX",
        "fnMainScreenX",
        "fnEightPixels",
        "fnLength",
        "fnPixelArray",
        "lBitmapIndex",
        "fnLength",
        "source",
        "CopyTo",
        "target",
        "characterAddress",
        "colorRamAddress",
        "c64BitMapAddress",
        "_textAndBitmapScreenStat",
        "Stop",
        "_borderStat",
        "Start",
        "visibleMainScreenAreaNormalizedClipped",
        "LeftBorder",
        "Start",
        "X",
        "visibleMainScreenAreaNormalizedClipped",
        "LeftBorder",
        "End",
        "X",
        "visibleMainScreenAreaNormalizedClipped",
        "LeftBorder",
        "Start",
        "X",
        "visibleMainScreenAreaNormalizedClipped",
        "RightBorder",
        "Start",
        "X",
        "width",
        "visibleMainScreenAreaNormalizedClipped",
        "RightBorder",
        "Start",
        "X",
        "y",
        "borderStartY",
        "height",
        "y",
        "y",
        "visibleMainScreenAreaNormalizedClipped",
        "TopBorder",
        "End",
        "Y",
        "y",
        "visibleMainScreenAreaNormalizedClipped",
        "BottomBorder",
        "Start",
        "Y",
        "y",
        "width",
        "Copy",
        "_oneLineBorderPixels",
        "pixelArray",
        "topBottomBorderLineStartIndex",
        "width",
        "y",
        "width",
        "Copy",
        "_oneLineBorderPixels",
        "leftBorderStartX",
        "pixelArray",
        "lineStartIndex",
        "leftBorderLength",
        "lineStartIndex",
        "visibleMainScreenAreaNormalizedClipped",
        "RightBorder",
        "Start",
        "X",
        "Copy",
        "_oneLineBorderPixels",
        "rightBorderStartX",
        "pixelArray",
        "lineStartIndex",
        "rightBorderLength",
        "_borderStat",
        "Stop",
        "C64",
        "c64",
        "spritesPixelArray",
        "_spritesStat",
        "Start",
        "c64",
        "Vic2",
        "vic2",
        "Vic2Mem",
        "vic2",
        "Vic2Screen",
        "vic2",
        "ScreenLayouts",
        "vic2",
        "SpriteManager",
        "vic2Screen",
        "VisibleWidth",
        "vic2Screen",
        "VisibleHeight",
        "vic2ScreenLayouts",
        "GetLayout",
        "LayoutType",
        "VisibleNormalized",
        "for24RowMode",
        "for38ColMode",
        "Clear",
        "spritesPixelArray",
        "sprite",
        "c64",
        "Vic2",
        "SpriteManager",
        "Sprites",
        "OrderByDescending",
        "s",
        "SpriteNumber",
        "sprite",
        "Visible",
        "sprite",
        "X",
        "visibleMainScreenArea",
        "Screen",
        "Start",
        "X",
        "vic2SpriteManager",
        "ScreenOffsetX",
        "sprite",
        "Y",
        "visibleMainScreenArea",
        "Screen",
        "Start",
        "Y",
        "vic2SpriteManager",
        "ScreenOffsetY",
        "sprite",
        "PriorityOverForeground",
        "sprite",
        "Multicolor",
        "sprite",
        "DoubleWidth",
        "sprite",
        "DoubleHeight",
        "priorityOverForground",
        "spriteForegroundPixelColor",
        "_spriteHighPrioColors",
        "sprite",
        "SpriteNumber",
        "spriteMultiColor0PixelColor",
        "_spriteHighPrioMultiColor0",
        "spriteMultiColor1PixelColor",
        "_spriteHighPrioMultiColor1",
        "spriteForegroundPixelColor",
        "_spriteLowPrioColors",
        "sprite",
        "SpriteNumber",
        "spriteMultiColor0PixelColor",
        "_spriteLowPrioMultiColor0",
        "spriteMultiColor1PixelColor",
        "_spriteLowPrioMultiColor1",
        "spriteRow",
        "sprite",
        "Data",
        "Rows",
        "spriteLinePart",
        "spriteRow",
        "Bytes",
        "isMultiColor",
        "pixel",
        "pixel",
        "spriteLinePart",
        "maskMultiColor1Mask",
        "maskMultiColor1Mask",
        "spriteColor",
        "spriteMultiColor1PixelColor",
        "spriteLinePart",
        "maskSpriteColorMask",
        "maskSpriteColorMask",
        "spriteColor",
        "spriteForegroundPixelColor",
        "spriteLinePart",
        "maskMultiColor0Mask",
        "maskMultiColor0Mask",
        "spriteColor",
        "spriteMultiColor0PixelColor",
        "spriteColor",
        "spriteColor",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "isDoubleWidth",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "isDoubleHeight",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "isDoubleWidth",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteColor",
        "priorityOverForground",
        "maskMultiColor0Mask",
        "maskMultiColor0Mask",
        "maskMultiColor1Mask",
        "maskMultiColor1Mask",
        "maskSpriteColorMask",
        "maskSpriteColorMask",
        "x",
        "isDoubleHeight",
        "pixel",
        "pixel",
        "spriteLinePart",
        "mask",
        "mask",
        "pixelSet",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteForegroundPixelColor",
        "priorityOverForground",
        "isDoubleWidth",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteForegroundPixelColor",
        "priorityOverForground",
        "isDoubleHeight",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteForegroundPixelColor",
        "priorityOverForground",
        "isDoubleWidth",
        "WriteSpritePixelWithAlphaPrio",
        "spriteScreenPosX",
        "x",
        "spriteScreenPosY",
        "y",
        "spriteForegroundPixelColor",
        "priorityOverForground",
        "mask",
        "mask",
        "x",
        "isDoubleHeight",
        "y",
        "isDoubleHeight",
        "WriteSpritePixelWithAlphaPrio",
        "screenPosX",
        "screenPosY",
        "color",
        "priorityOverForground",
        "screenPosX",
        "screenPosX",
        "width",
        "screenPosY",
        "screenPosY",
        "height",
        "openSideBorders",
        "screenPosX",
        "visibleMainScreenArea",
        "Screen",
        "Start",
        "X",
        "screenPosX",
        "visibleMainScreenArea",
        "Screen",
        "End",
        "X",
        "openTopBottomBorders",
        "screenPosY",
        "visibleMainScreenArea",
        "Screen",
        "Start",
        "Y",
        "screenPosY",
        "visibleMainScreenArea",
        "Screen",
        "End",
        "Y",
        "screenPosY",
        "width",
        "screenPosX",
        "priorityOverForground",
        "spritesPixelArray",
        "bitmapIndex",
        "BLUE_COLOR_MASK",
        "HIGH_PRIO_SPRITE_BLUE",
        "spritesPixelArray",
        "bitmapIndex",
        "color",
        "sprite",
        "ClearDirty",
        "_spritesStat",
        "Stop",
        "C64",
        "c64",
        "lineDataPixelArray",
        "_lineDataImageStat",
        "Start",
        "c64",
        "Vic2",
        "ScreenLineIORegisterValues",
        "c64",
        "Vic2",
        "ScreenLayouts",
        "GetLayout",
        "LayoutType",
        "Visible",
        "visibleMainScreenArea",
        "Screen",
        "Start",
        "Y",
        "drawableScreenStartY",
        "c64",
        "Vic2",
        "Vic2Screen",
        "DrawableAreaHeight",
        "Enum",
        "GetNames",
        "ShaderLineData",
        "Length",
        "lineData",
        "c64ScreenLineIORegisterValues",
        "lineData",
        "Key",
        "visibleMainScreenArea",
        "TopBorder",
        "Start",
        "Y",
        "lineData",
        "Key",
        "visibleMainScreenArea",
        "BottomBorder",
        "End",
        "Y",
        "lineData",
        "Key",
        "visibleMainScreenArea",
        "TopBorder",
        "Start",
        "Y",
        "bitmapLine",
        "shaderLineDataValuePerLine",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Border_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "BorderColor",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "SpriteMultiColor0",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "SpriteMultiColor0",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "SpriteMultiColor1",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "SpriteMultiColor1",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite0_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite0Color",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite1_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite1Color",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite2_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite2Color",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite3_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite3Color",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite4_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite4Color",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite5_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite5Color",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite6_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite6Color",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Sprite7_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "Sprite7Color",
        "lineData",
        "Key",
        "drawableScreenStartY",
        "bitmapLine",
        "drawableScreenEndY",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Bg0_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "BackgroundColor0",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Bg1_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "BackgroundColor1",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Bg2_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "BackgroundColor2",
        "lineDataPixelArray",
        "pixelArrayIndex",
        "ShaderLineData",
        "Bg3_Color",
        "_c64SkiaColors",
        "C64ToSkColorMap",
        "lineData",
        "Value",
        "BackgroundColor3",
        "_lineDataImageStat",
        "Stop"
    ],
    "literals": [
        "\"SkiaSharp-Custom\"",
        "\"C64_sksl_shader2.frag\"",
        "\"#VISIBLE_HEIGHT\"",
        "\"#MAIN_SCREEN_START\"",
        "\"#MAIN_SCREEN_END\"",
        "\"#LOW_PRIO_SPRITE_BLUE_SHADER\"",
        "\"#HIGH_PRIO_SPRITE_BLUE_SHADER\"",
        "\"#BG0_COLOR_INDEX\"",
        "\"#BG1_COLOR_INDEX\"",
        "\"#BG2_COLOR_INDEX\"",
        "\"#BG3_COLOR_INDEX\"",
        "\"#BORDER_COLOR_INDEX\"",
        "\"#SPRITE_MULTICOLOR0_INDEX\"",
        "\"#SPRITE_MULTICOLOR1_INDEX\"",
        "\"#SPRITE0_COLOR_INDEX\"",
        "\"#SPRITE1_COLOR_INDEX\"",
        "\"#SPRITE2_COLOR_INDEX\"",
        "\"#SPRITE3_COLOR_INDEX\"",
        "\"#SPRITE4_COLOR_INDEX\"",
        "\"#SPRITE5_COLOR_INDEX\"",
        "\"#SPRITE6_COLOR_INDEX\"",
        "\"#SPRITE7_COLOR_INDEX\"",
        "\"Highbyte.DotNet6502.Impl.Skia.Resources.Shaders\"",
        "\"Invalid pixel pair value.\"",
        "\"Invalid pixel pair value.\"",
        "\"bg0Color\"",
        "\"bg1Color\"",
        "\"bg2Color\"",
        "\"bg3Color\"",
        "\"borderColor\"",
        "\"spriteLowPrioMultiColor0\"",
        "\"spriteLowPrioMultiColor1\"",
        "\"spriteHighPrioMultiColor0\"",
        "\"spriteHighPrioMultiColor1\"",
        "\"sprite0LowPrioColor\"",
        "\"sprite1LowPrioColor\"",
        "\"sprite2LowPrioColor\"",
        "\"sprite3LowPrioColor\"",
        "\"sprite4LowPrioColor\"",
        "\"sprite5LowPrioColor\"",
        "\"sprite6LowPrioColor\"",
        "\"sprite7LowPrioColor\"",
        "\"sprite0HighPrioColor\"",
        "\"sprite1HighPrioColor\"",
        "\"sprite2HighPrioColor\"",
        "\"sprite3HighPrioColor\"",
        "\"sprite4HighPrioColor\"",
        "\"sprite5HighPrioColor\"",
        "\"sprite6HighPrioColor\"",
        "\"sprite7HighPrioColor\"",
        "\"bitmap_texture\"",
        "\"sprites_texture\"",
        "\"line_data_map\""
    ],
    "variables": [
        "_getSkCanvas",
        "SkiaBitmapBackedByPixelArray",
        "_skiaPixelArrayBitmap_TextAndBitmap",
        "SkiaBitmapBackedByPixelArray",
        "_skiaPixelArrayBitmap_Sprites",
        "SkiaBitmapBackedByPixelArray",
        "_skiaPixelArrayBitmap_LineData",
        "SKRuntimeEffect",
        "_sKRuntimeEffect",
        "SKRuntimeEffectUniforms",
        "_sKRuntimeEffectUniforms",
        "SKRuntimeEffectChildren",
        "_sKRuntimeEffectChildren",
        "SKPaint",
        "_shaderPaint",
        "_sKColorToShaderColorMap",
        "C64SkiaColors",
        "_c64SkiaColors",
        "_oneLineBorderPixels",
        "_oneCharLineBg0Pixels",
        "_bitmapEightPixelsBg0Map",
        "_bitmapEightPixelsBg1Map",
        "_bitmapEightPixelsBg2Map",
        "_bitmapEightPixelsBg3Map",
        "_bitmapEightPixelsMultiColorMap",
        "_bitmapEightHiresPixelsActual",
        "_bitmapEightMulticolorPixelsActual",
        "SKColor",
        "_bg0DrawColorActual",
        "SKColor",
        "_bg0DrawColor",
        "SKColor",
        "_bg1DrawColor",
        "SKColor",
        "_bg2DrawColor",
        "SKColor",
        "_bg3DrawColor",
        "SKColor",
        "_borderDrawColor",
        "LOW_PRIO_SPRITE_BLUE",
        "LOW_PRIO_SPRITE_BLUE_SHADER",
        "HIGH_PRIO_SPRITE_BLUE",
        "HIGH_PRIO_SPRITE_BLUE_SHADER",
        "SKColor",
        "_spriteLowPrioMultiColor0",
        "SKColor",
        "_spriteLowPrioMultiColor1",
        "SKColor",
        "_spriteHighPrioMultiColor0",
        "SKColor",
        "_spriteHighPrioMultiColor1",
        "_spriteLowPrioColors",
        "_spriteHighPrioColors",
        "Instrumentations",
        "Instrumentations",
        "StatsCategory",
        "ElapsedMillisecondsTimedStatSystem",
        "_borderStat",
        "ElapsedMillisecondsTimedStatSystem",
        "_textAndBitmapScreenStat",
        "ElapsedMillisecondsTimedStatSystem",
        "_spritesStat",
        "ElapsedMillisecondsTimedStatSystem",
        "_lineDataImageStat",
        "ElapsedMillisecondsTimedStatSystem",
        "_drawCanvasWithShader",
        "src",
        "visibleMainScreenAreaNormalized",
        "bitmapMainScreenStartLine",
        "assembly",
        "resourceName",
        "resourceStream",
        "reader",
        "vic2",
        "vic2Screen",
        "width",
        "height",
        "vic2",
        "vic2Screen",
        "width",
        "i",
        "i",
        "bg0ColorVal",
        "bg1ColorVal",
        "bg2ColorVal",
        "bg3ColorVal",
        "pixelPattern",
        "fgColorCode",
        "fgColorVal",
        "bitmapPixelsBg0",
        "bitmapPixelsBg1",
        "bitmapPixelsBg2",
        "bitmapPixelsBg3",
        "pixelPos",
        "isBitSet",
        "pixelPattern",
        "fgColorCode",
        "fgColorVal",
        "bitmapPixelsMultiColor",
        "mask",
        "pixel",
        "pixelPair",
        "pairColorVal",
        "bg0ColorVal",
        "pixelPattern",
        "bitmapBgColorCode",
        "bitmapBgColorVal",
        "bitmapFgColorCode",
        "bitmapFgColorVal",
        "bitmapPixels",
        "pixelPos",
        "isBitSet",
        "colorRamCode",
        "colorRamVal",
        "bitmapMulicolorPixels",
        "mask",
        "pixel",
        "pixelPair",
        "pairColorVal",
        "shaderTexture",
        "spritesTexture",
        "lineDataBitmapShaderTexture",
        "shader",
        "vic2",
        "vic2Mem",
        "vic2Screen",
        "vic2ScreenLayouts",
        "bitmapManager",
        "visibleMainScreenAreaNormalized",
        "visibleMainScreenAreaNormalizedClipped",
        "width",
        "height",
        "drawableAreaHeight",
        "vic2VideoMatrixBaseAddress",
        "vic2BitmapBaseAddress",
        "vic2ScreenTextCols",
        "screenStartY",
        "screenStartX",
        "vic2CharacterSetAddressInVIC2Bank",
        "vic2ScreenCharacterHeight",
        "vic2Is38ColumnDisplayEnabled",
        "vic2Is24RowDisplayEnabled",
        "vic2LineStart24Rows",
        "vic2LineEnd24Rows",
        "isTextMode",
        "characterMode",
        "bitmapMode",
        "scrollX",
        "scrollY",
        "drawLine",
        "skiaBitmapY",
        "characterRow",
        "characterLine",
        "characterAddress",
        "colorRamAddress",
        "c64BitMapAddress",
        "col",
        "characterCode",
        "colorRamCode",
        "skiaBitmapX",
        "eightPixels",
        "fgColorCode",
        "colorRamCode",
        "bgColorNumber",
        "characterSetLineAddress",
        "lineData",
        "bitmapLineData",
        "bitmapBgColorCode",
        "bitmapFgColorCode",
        "i",
        "i",
        "lCol",
        "lBitmapIndex",
        "source",
        "target",
        "borderStartY",
        "leftBorderStartX",
        "leftBorderLength",
        "rightBorderStartX",
        "rightBorderLength",
        "y",
        "borderStartY",
        "topBottomBorderLineStartIndex",
        "lineStartIndex",
        "vic2",
        "vic2Mem",
        "vic2Screen",
        "vic2ScreenLayouts",
        "vic2SpriteManager",
        "width",
        "height",
        "visibleMainScreenArea",
        "spriteScreenPosX",
        "spriteScreenPosY",
        "priorityOverForground",
        "isMultiColor",
        "isDoubleWidth",
        "isDoubleHeight",
        "spriteForegroundPixelColor",
        "spriteMultiColor0PixelColor",
        "spriteMultiColor1PixelColor",
        "y",
        "x",
        "maskMultiColor0Mask",
        "maskSpriteColorMask",
        "maskMultiColor1Mask",
        "spriteColor",
        "pixel",
        "mask",
        "pixel",
        "pixelSet",
        "openSideBorders",
        "openTopBottomBorders",
        "bitmapIndex",
        "BLUE_COLOR_MASK",
        "c64ScreenLineIORegisterValues",
        "visibleMainScreenArea",
        "drawableScreenStartY",
        "drawableScreenEndY",
        "shaderLineDataValuePerLine",
        "bitmapLine",
        "pixelArrayIndex"
    ],
    "comments": [
        "Renders a C64 system to a SkiaSharp canvas.",
        "",
        "Overview:",
        "- Called once per frame.",
        "- Writes image data to a SKBitmap backed by a pixel array, and uses a shader + generated SKBitmap \"textures\" to do the actual drawing to the SkiaSharp canvas.",
        "- Fast enough to be used for native and browser (WASM) hosts.",
        "",
        "Supports:",
        "- Text mode (Standard, Extended, MultiColor)",
        "- Bitmap mode (Standard/HiRes, MultiColor)",
        "- Colors per raster line",
        "- Fine scroll per frame.",
        "- Sprites (Standard, MultiColor)",
        "",
        "Compared to C64SkiaRenderer:",
        "- A bit slower, but supports Bitmap graphics and still able to run in a browser with Blazor WebAssembly.",
        "</summary>",
        "Shader",
        "Shader uniforms",
        "Shader children (textures)",
        "Lookup table for mapping C64 colors to shader colors",
        "Pre-calculated pixel arrays",
        "pixelArray",
        "pixelArray",
        "8-bit patterns mapped to 8 pixels (1 pixel = 1 uint rgba) that will be replaced in shader to actual color per raster line.",
        "Bitmap mode \"Standard\" (HiRes): 8-bit patterns mapped to 8 pixels (1 pixel = 1 uint rgba) that that are the actual colors, not to be replaced in shader.",
        "Bitmap mode \"Multicolo\": 8-bit patterns mapped to 4 width 2 pixels (1 pixel = 1 uint rgba) that that are the actual colors, not to be replaced in shader (except background color)",
        "Colors to draw border and background colors with on the bitmap. These colors will be replaced by the shader.",
        "Could be any color, but must be different from normal C64 colors (used when drawing foreground colors).",
        "Any color with alpha 0, will make sure _bg0DrawColorActual is used as background color (replace in shader with _bg0DrawColorActual)",
        "51 translates to exactly 0.2 in this texture shader (51/255 = 0.2)",
        "Shader uses 0-1 float values",
        "255 translates to exactly 1.0 in this texture shader (255/255 = 1.0)",
        "Shader uses 0-1 float values",
        "Sprite 0 - 7. Low prio colors have Blue value of 51. Rest of the colors is used to distinguish the sprite.",
        "Sprite 0 - 7. High prio colors have Blue value of 255. Rest of the colors is used to distinguish the sprite.",
        "Values per raster line data to send to shader",
        "Index starts at 0",
        "Instrumentations",
        "Draw border and screen to bitmap",
        "Draw sprites to separate bitmap",
        "Write line data (color values of VIC2 registers per raster line) to separate bitmap. To be used later in the shader to determine colors per raster line.",
        "Draw to a canvas using a shader with texture info from screen and sprite bitmaps, together with line data bitmap",
        "--------------------",
        "Load and compile shader.",
        "--------------------",
        "--------------------",
        "Init lookup dictionary for mapping colors 32 bit unsigned int format (from SKColor) to shader colors (float[4] with RGB and alpha values in 0.0 - 1.0 range)",
        "--------------------",
        "Map 32 bit unsigned int color values (from SKColors drawn on pixelarray/bitmap) to float[4] color values as seen in shader",
        "Read contents of stream to string",
        "Init pixel array to associate with a SKBitmap that is written to a SKCanvas",
        "Array/Bitmap for C64 text and bitmap pixels (border + main screen), excluding sprites",
        "Array/Bitmap for C64 sprites",
        "Create 8 precalculated pixels for each 8 bit pattern of text display, per possible background color.",
        "",
        "The background colors:",
        "- values precalculated here are just placeholders (not the actual colors).",
        "-  will be replaced in the shader by corresponding C64 colors used per scan line.",
        "",
        "The foreground color values here are the actual colors used in the bitmap, will not be replaced in the shader.",
        "--------------------",
        "Init pre-calculated pixel arrays",
        "--------------------",
        "Borders: Pre-calculate entire rows, left/right border only, and one char row of pixels.",
        "Main text screen: Pre-calculate the 8 pixels for each combination of bit pixel pattern and foreground color",
        "(pixelPattern, fgColorIndex) => bitmapPixels",
        "(pixelPattern, fgColorIndex) => bitmapPixels",
        "(pixelPattern, fgColorIndex) => bitmapPixels",
        "(pixelPattern, fgColorIndex) => bitmapPixels",
        "(pixelPattern, fgColorIndex) => bitmapPixels",
        "Note the background color _bg0DrawColor is hardcoded, and will be replaced by shader",
        "Note the background color _bg1DrawColor is hardcoded, and will be replaced by shader",
        "Note the background color _bg2DrawColor is hardcoded, and will be replaced by shader",
        "Note the background color _bg3DrawColor is hardcoded, and will be replaced by shader",
        "Text (Standard and Extended mode) (8 bits -> 8 pixels)",
        "Loop each bit in pixelPattern",
        "If bit is set, use foreground color, else use background color",
        "Text Multicolor mode, double pixel color (8 bits -> 4 pixels)",
        "Only the lower 3 bits are used for foreground color from Color RAM, so only colors 0-7 are possible.",
        "Loop each multi-color pixel pair (4 pixel pairs)",
        "Create 8 precalculated pixels for each 8 bit pattern of bitmap display, per possible background/foreground color combination.",
        "None of these colors will NOT be replaced in the shader, because these colors come text and color RAM areas (and not from special VIC2 color registers).",
        "Thus the colors precalcualted here will be the actual colors used in the bitmap.",
        "Note the background color _bg0DrawColor is hardcoded, and will be replaced by shader",
        "Bitmap Standard (Hires) mode, 8 bits => 8 pixels",
        "Standard (Hires) mode, 8 bits => 8 pixels. 2 \"foreground\" colors (fg color and bg color from text screen). No background color that will be replaced in shader.",
        "If bit is set, use foreground color, else use background color",
        "Multicolor mode, 8 bits => 4 pixels. 3 \"foreground\" colors (bg, fg, and extra from color ram) + normal screen background color (which will be replaced in shader)",
        "Loop each multi-color pixel pair (4 pixel pairs)",
        "Pixel pattern 00 => screen bg color",
        "Pixel pattern 01 (multi color 1) => bitmap fg color (from text screen high 4 bits)",
        "Pixel pattern 10 (multi color 2) => bitmap bg color (from text screen low 4 bits)",
        "Pixel pattern 11 (multi color 3) => color RAM color (for corresponding position in text screen)",
        "Line data to send to shader in form of a texture",
        "shader uniform values",
        "Shader uniform texture sampling values",
        "Convert bitmap (that one have written the C64 screen to) to shader texture",
        "Convert shader bitmap (that one have written the C64 sprites to) to shader texture",
        "Convert other bitmaps to shader texture",
        "Main screen draw area for characters, without consideration to 38 column mode or 24 row mode.",
        "Main screen draw area for characters, with consideration to possible 38 column mode or 24 row mode.",
        "Main screen, copy 8 pixels at a time",
        "Copy settings used in loop to local variables to increase performance",
        "TODO: Check for display mode more than once per frame? How?",
        "TODO: Check for display mode more than once per frame? How?",
        "TODO: Check for bitmap mode more than once per frame? How?",
        "TODO: Check fine scroll more than once per frame? How?",
        "TODO: Check fine scroll more than once per frame? How?",
        "Loop each row line on main text/gfx screen, starting with line 0.",
        "Calculate the y position in the bitmap where the 8 pixels should be drawn",
        "Loop each column on main text/gfx screen, starting with column 0.",
        "Determine character code at current position from video matrix",
        "Calculate the x position in the bitmap where the 8 pixels should be drawn",
        "Determine colors",
        "0-3",
        "Bit 6 and 7 of character byte is used to select background color (0-3)",
        "The actual usable character codes are in the lower 6 bits (0-63)",
        "Asume multicolor mode",
        "When in MultiColor mode, a character can still be displayed in Standard mode depending on the value from color RAM.",
        "If color RAM value is 0-7, normal Standard mode is used (not multi-color)",
        "If displaying in MultiColor mode, the actual color used from color RAM will be values 0-7.",
        "Thus color values 8-15 are transformed to 0-7",
        "Read one line (8 bits/pixels) of character pixel data from character set from the current line of the character code",
        "Get pre-calculated 8 pixels that should be drawn on the bitmap, with correct colors for foreground and background",
        "Get the corresponding array of uints representing the 8 pixels of the character",
        "Asume text multicolor mode",
        "Text multicolor mode color usage (8 bits, 4 pixel pairs)",
        "backgroundColor0 = the color of pixel-pair 00",
        "backgroundColor1 = the color of pixel-pair 01",
        "backgroundColor2 = the color of pixel-pair 10",
        "fgColorCode      = the color of pixel-pair 11",
        "Get the corresponding array of uints representing the 8 pixels of the character",
        "Assume bitmap mode",
        "8 bits of bitmap data for the current line, at the current column",
        "Bg color is picked from text screen, low 4 bits.",
        "Fg color is picked from text screen, high 4 bits.",
        "Bitmap Standard (HiRes) mode, 8 bits => 8 pixels",
        "----------",
        "Pixel not set (bit = 0) => bitmap bg color (from text screen low 4 bits)",
        "Pixel set (bit = 1) => bitmap fg color",
        "Bitmap Multi color mode, 8 bits => 4 pixels",
        "----------",
        "Pixel pattern 00 => screen bg color",
        "Pixel pattern 01 (multi color 1) => bitmap fg color (from text screen high 4 bits)",
        "Pixel pattern 10 (multi color 2) => bitmap bg color (from text screen low 4 bits)",
        "Pixel pattern 11 (multi color 3) => color RAM color (for corresponding position in text screen)",
        "Add additional drawing to compensate for horizontal scrolling",
        "Fill start of column 0 with background color (the number of x pixels scrolled)",
        "Array.Copy(_oneCharLineBg0Pixels, 0, pixelArray, bitmapIndex, scrollX);",
        "Add additional drawing to compensate for horizontal scrolling",
        "Note: The actual vic2 vertical scroll has 3 as default value (no scroll), but the scrollY variable is adjusted to be between -3 and + 4 with default 0 when no scrolling.",
        "If scrolling occured upwards (scrollY < 0) and we are on last line of screen, fill remaining lines with background color",
        "Array.Copy(_oneCharLineBg0Pixels, 0, pixelArray, fillBitMapIndex + scrollX, length);",
        "If scrolling occured downards (scrollY > 0) and we are on first line of screen, fill the line above that was scrolled with background color",
        "Array.Copy(_oneCharLineBg0Pixels, 0, pixelArray, fillBitMapIndex + scrollX, length);",
        "Write the character to the pixel array",
        "Draw 8 pixels (or less) of character on the the pixel array part used for the C64 drawable screen (320x200)",
        "Skip draw entirely if y position is outside drawable screen",
        "Adjust drawing of last character on line to clip when it reaches the right border",
        "Calculate the position in the bitmap where the 8 pixels should be drawn",
        "Copy array with Span",
        "- Seems to be a bit faster on .NET 8 WASM than Array.Copy and Buffer.BlockCopy.",
        "- TODO: Is the extra heap memory allocation of Span objects (which leads to GC pressure) worth the performance gain?",
        "Or Copy array with Array.Copy",
        "Array.Copy(fnEightPixels, 0, fnPixelArray, lBitmapIndex, fnLength);",
        "Or Copy array with Buffer.BlockCopy",
        "Buffer.BlockCopy(fnEightPixels, 0, fnPixelArray, lBitmapIndex * 4, fnLength * 4);   // Note: Buffer.BlockCopy uses byte size, so multiply by 4 to get uint size",
        "Next column",
        "Next line",
        "Borders.",
        "The borders must be drawn last, because it will overwrite parts of the main screen area if 38 column or 24 row modes are enabled (which main screen drawing above does not take in consideration)",
        "Assumption on visibleMainScreenAreaNormalizedClipped:",
        "- Contains dimensions of screen parts with consideration to if 38 column mode or 24 row mode is enabled.",
        "- Is normalized to start at 0,0 (i.e. TopBorder.Start.X = and TopBorder.Start.Y = 0)",
        "Should be 0?",
        "Top or bottom border",
        "Left border",
        "Right border",
        "Main screen, copy 8 pixels at a time",
        "Main screen draw area for characters, without consideration to 38 column mode or 24 row mode.",
        "TODO: Is it faster to track previous frame sprite draw positions, and only clear those pixels instead?",
        "Write sprites to a separate bitmap/pixel array",
        "START TEST",
        "if (sprite.SpriteNumber == 0)",
        "{",
        "spriteScreenPosX = 50 + visibleMainScreenArea.Screen.Start.X - Vic2SpriteManager.SCREEN_OFFSET_X;",
        "spriteScreenPosY = 60 + visibleMainScreenArea.Screen.Start.Y - Vic2SpriteManager.SCREEN_OFFSET_Y;",
        "priorityOverForground = false;",
        "}",
        "if (sprite.SpriteNumber == 1)",
        "{",
        "spriteScreenPosX = 67 + visibleMainScreenArea.Screen.Start.X - Vic2SpriteManager.SCREEN_OFFSET_X;",
        "spriteScreenPosY = 70 + visibleMainScreenArea.Screen.Start.Y - Vic2SpriteManager.SCREEN_OFFSET_Y;",
        "priorityOverForground = true;",
        "}",
        "END TEST",
        "One color per sprite",
        "Shared between all sprites",
        "Shared between all sprites",
        "Top prio sprite pixel",
        "Low prio sprite pixel",
        "Loop each sprite line (21 lines)",
        "Loop each 8-bit part of the sprite line (3 bytes, 24 pixels).",
        "Check if pixel is outside the visible screen area",
        "Check if pixel is within side borders, and if it should be shown there or not.",
        "TODO: Detect if side borders are open? How to?",
        "Check if pixel is within top/bottom borders, and if it should be shown there or not.",
        "TODO: Detect if top/bottom borders are open? How to?",
        "Calculate the position in the bitmap where the pixel should be drawn",
        "If pixel to be set is from a low prio sprite, don't overwrite if current pixel is from high prio sprite",
        "Build array to send to shader with the actual color that should be used differnt types of colors (border, bg0, bg1, bg2, bg3, etc), dependent on the raster line number",
        "Check if in total visisble area, because c64ScreenLineIORegisterValues includes non-visible lines",
        "Check if line is within main screen area, only there are background colors used (? is that really true when borders are open??)"
    ],
    "docstrings": [
        "<summary>"
    ],
    "functions": [
        "C64SkiaRenderer2",
        "Init",
        "Init",
        "Draw",
        "Draw",
        "Cleanup",
        "InitShader",
        "InitShaderColorValueLookup",
        "ReplaceShaderPlaceholders",
        "LoadShaderSource",
        "InitTextAndSpritesBitmap",
        "InitBitPatternToPixelMapsForTextDisplay",
        "InitBitPatternToPixelMapsForBitmapDisplay",
        "InitLineDataBitmap",
        "WriteBitmapToCanvas",
        "DrawBorderAndScreenToBitmapBackedByPixelArray",
        "DrawSpritesToBitmapBackedByPixelArray",
        "WriteLineDataToBitmapBackedByPixelArray"
    ],
    "classes": [
        "C64SkiaRenderer2"
    ]
}