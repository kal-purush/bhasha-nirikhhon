{
    "identifiers": [
        "locale",
        "logging",
        "time",
        "pathlib",
        "Path",
        "esdl",
        "mesido",
        "esdl",
        "esdl_mixin",
        "ESDLMixin",
        "mesido",
        "esdl",
        "esdl_parser",
        "ESDLFileParser",
        "mesido",
        "esdl",
        "profile_parser",
        "ProfileReaderFromFile",
        "mesido",
        "head_loss_class",
        "HeadLossOption",
        "mesido",
        "physics_mixin",
        "PhysicsMixin",
        "mesido",
        "workflows",
        "io",
        "write_output",
        "ScenarioOutput",
        "mesido",
        "workflows",
        "utils",
        "helpers",
        "main_decorator",
        "numpy",
        "np",
        "rtctools",
        "optimization",
        "collocated_integrated_optimization_problem",
        "CollocatedIntegratedOptimizationProblem",
        "rtctools",
        "optimization",
        "goal_programming_mixin",
        "Goal",
        "rtctools",
        "optimization",
        "linearized_order_goal_programming_mixin",
        "LinearizedOrderGoalProgrammingMixin",
        "rtctools",
        "optimization",
        "single_pass_goal_programming_mixin",
        "CachingQPSol",
        "SinglePassGoalProgrammingMixin",
        "rtctools",
        "util",
        "run_optimization_problem",
        "logging",
        "getLogger",
        "logger",
        "setLevel",
        "logging",
        "INFO",
        "locale",
        "setlocale",
        "locale",
        "LC_ALL",
        "Goal",
        "state",
        "target",
        "priority",
        "order",
        "state",
        "target",
        "target",
        "max",
        "target",
        "values",
        "max",
        "target",
        "values",
        "np",
        "median",
        "target",
        "values",
        "priority",
        "order",
        "optimization_problem",
        "ensemble_member",
        "optimization_problem",
        "state",
        "state",
        "Goal",
        "state",
        "target",
        "priority",
        "order",
        "state",
        "target",
        "target",
        "max",
        "target",
        "values",
        "max",
        "target",
        "values",
        "np",
        "median",
        "target",
        "values",
        "priority",
        "order",
        "optimization_problem",
        "ensemble_member",
        "optimization_problem",
        "state",
        "state",
        "Goal",
        "source_variable",
        "prod_priority",
        "func_range_bound",
        "nominal",
        "order",
        "func_range_bound",
        "source_variable",
        "nominal",
        "prod_priority",
        "order",
        "optimization_problem",
        "ensemble_member",
        "optimization_problem",
        "state",
        "source_variable",
        "Goal",
        "demand_variable",
        "prod_priority",
        "func_range_bound",
        "nominal",
        "order",
        "demand_variable",
        "nominal",
        "prod_priority",
        "optimization_problem",
        "ensemble_member",
        "optimization_problem",
        "state",
        "demand_variable",
        "Goal",
        "source_variable",
        "prod_priority",
        "func_range_bound",
        "nominal",
        "order",
        "func_range_bound",
        "func_range_bound",
        "source_variable",
        "nominal",
        "prod_priority",
        "order",
        "optimization_problem",
        "ensemble_member",
        "optimization_problem",
        "state",
        "source_variable",
        "Goal",
        "demand_variable",
        "prod_priority",
        "func_range_bound",
        "nominal",
        "order",
        "func_range_bound",
        "func_range_bound",
        "demand_variable",
        "nominal",
        "prod_priority",
        "order",
        "optimization_problem",
        "ensemble_member",
        "optimization_problem",
        "state",
        "demand_variable",
        "path_goals",
        "copy",
        "type_values",
        "map_demand",
        "items",
        "map_prod",
        "items",
        "asset",
        "energy_system_components",
        "get",
        "asset",
        "type_values",
        "timeseries_name",
        "io",
        "get_timeseries_names",
        "get_timeseries",
        "timeseries_name",
        "asset",
        "type_values",
        "map_demand",
        "keys",
        "goals",
        "append",
        "TargetDemandGoal",
        "state",
        "target",
        "len",
        "_esdl_assets",
        "goals",
        "append",
        "TargetProducerGoal",
        "state",
        "target",
        "priority",
        "goals",
        "ScenarioOutput",
        "_GoalsAndOptions",
        "PhysicsMixin",
        "LinearizedOrderGoalProgrammingMixin",
        "SinglePassGoalProgrammingMixin",
        "ESDLMixin",
        "CollocatedIntegratedOptimizationProblem",
        "args",
        "kwargs",
        "args",
        "kwargs",
        "CachingQPSol",
        "pre",
        "property",
        "esdl_assets",
        "asset",
        "assets",
        "values",
        "asset",
        "attributes",
        "name",
        "asset",
        "attributes",
        "esdl",
        "AssetStateEnum",
        "ENABLED",
        "logger",
        "warning",
        "asset",
        "asset_type",
        "asset",
        "name",
        "assets",
        "asset_types_to_include",
        "assets_without_control",
        "t",
        "split",
        "t",
        "io",
        "get_timeseries_names",
        "group",
        "asset_types",
        "asset_types_to_include",
        "items",
        "asset_type",
        "asset_types",
        "asset",
        "energy_system_components",
        "get",
        "asset_type",
        "asset",
        "available_timeseries",
        "group",
        "assets_to_include",
        "keys",
        "assets_to_include",
        "group",
        "append",
        "asset",
        "asset",
        "type_variable_map",
        "asset_type",
        "asset",
        "a_type",
        "assets_to_include",
        "values",
        "asset",
        "a_type",
        "asset",
        "asset_type",
        "asset",
        "esdl_assets",
        "values",
        "asset",
        "asset_type",
        "assets_without_control",
        "asset",
        "name",
        "assets_list",
        "asset",
        "name",
        "available_timeseries",
        "len",
        "unused_asset",
        "unused_asset",
        "assets_to_include",
        "assets_list",
        "asset_variable_map",
        "asset_info",
        "asset_info",
        "max_value_merit",
        "index_start_of_priority",
        "asset_info",
        "asset_info",
        "asset_info",
        "asset_info",
        "asset",
        "assets_list",
        "asset_merit",
        "index",
        "asset",
        "index_start_of_priority",
        "max_value_merit",
        "asset_merit",
        "index_s",
        "marginal_priority",
        "index_start_of_priority",
        "asset",
        "asset_variable_map",
        "asset",
        "asset",
        "assets_to_include",
        "get",
        "goals",
        "append",
        "MinimizeSourcesGoalMerit",
        "variable_name",
        "marginal_priority",
        "bounds",
        "variable_name",
        "variable_nominal",
        "variable_name",
        "asset",
        "assets_to_include",
        "get",
        "goals",
        "append",
        "MinimizeSourcesGoalMerit",
        "variable_name",
        "marginal_priority",
        "bounds",
        "variable_name",
        "variable_nominal",
        "variable_name",
        "asset",
        "goals",
        "append",
        "MaximizeDemandGoalMerit",
        "variable_name",
        "marginal_priority",
        "bounds",
        "variable_name",
        "variable_nominal",
        "variable_name",
        "asset",
        "assets_to_include",
        "get",
        "goals",
        "append",
        "MaximizeDemandGoalMerit",
        "variable_name",
        "marginal_priority",
        "bounds",
        "variable_name",
        "variable_nominal",
        "variable_name",
        "asset",
        "assets_to_include",
        "get",
        "goals",
        "append",
        "MaximizeStorageGoalMerit",
        "variable_name",
        "marginal_priority",
        "bounds",
        "variable_name",
        "variable_nominal",
        "variable_name",
        "asset_merit",
        "index",
        "asset",
        "index_start_of_priority",
        "max_value_merit",
        "asset_merit",
        "index_s",
        "marginal_priority",
        "index_start_of_priority",
        "asset",
        "asset_variable_map",
        "asset",
        "goals",
        "append",
        "MinimizeStorageGoalMerit",
        "variable_name",
        "marginal_priority",
        "bounds",
        "variable_name",
        "variable_nominal",
        "variable_name",
        "asset",
        "goals",
        "__create_asset_list_controls",
        "asset_types_to_include",
        "assets_without_control",
        "__merit_controls",
        "asset_info",
        "max",
        "asset_info",
        "__create_merit_path_goals",
        "asset_info",
        "max_value_merit",
        "index_start_of_priority",
        "goals",
        "path_goals",
        "copy",
        "goals",
        "extend",
        "__merit_path_goals",
        "goals",
        "energy_system_options",
        "gas_network_settings",
        "HeadLossOption",
        "LINEARIZED_N_LINES_WEAK_INEQUALITY",
        "gas_network_settings",
        "options",
        "ensemble_member",
        "path_constraints",
        "ensemble_member",
        "constraints",
        "ensemble_member",
        "constraints",
        "ensemble_member",
        "constraints",
        "assets_list",
        "esdl_assets",
        "a",
        "assets",
        "values",
        "a",
        "name",
        "assets_list",
        "attributes",
        "append",
        "a",
        "name",
        "attributes",
        "append",
        "a",
        "attributes",
        "marginalCosts",
        "value",
        "AttributeError",
        "attributes",
        "append",
        "a",
        "attributes",
        "marginalChargeCosts",
        "value",
        "attributes",
        "append",
        "a",
        "attributes",
        "marginalDischargeCosts",
        "value",
        "attributes",
        "append",
        "a",
        "name",
        "AttributeError",
        "a",
        "name",
        "attributes",
        "attributes",
        "a",
        "name",
        "last_merit_order",
        "attributes",
        "set_merit",
        "order_prio",
        "sort",
        "order_prio",
        "len",
        "set_merit",
        "map_prio",
        "v",
        "v",
        "attributes",
        "a",
        "attributes",
        "solver_options",
        "_qpsol",
        "options",
        "priority",
        "goal",
        "path_goals",
        "goals",
        "goal",
        "priority",
        "priority",
        "goals_print",
        "update",
        "goal",
        "logger",
        "info",
        "goals_print",
        "priority",
        "time",
        "time",
        "priority_started",
        "priority",
        "priority",
        "priority_completed",
        "priority",
        "time",
        "time",
        "__priority_timer",
        "_priorities_output",
        "append",
        "priority",
        "time_taken",
        "objective_value",
        "solver_stats",
        "logger",
        "info",
        "priority",
        "priority",
        "objective_value",
        "RuntimeError",
        "variable",
        "ensemble_member",
        "alias_relation",
        "canonical_signed",
        "variable",
        "state_vector",
        "canonical",
        "ensemble_member",
        "variable_nominal",
        "canonical",
        "sign",
        "MultiCommoditySimulator",
        "solver_options",
        "options",
        "MultiCommoditySimulator",
        "energy_system_options",
        "gas_network_settings",
        "HeadLossOption",
        "NO_HEADLOSS",
        "gas_network_settings",
        "options",
        "solver_options",
        "options",
        "main_decorator",
        "runinfo_path",
        "log_level",
        "logger",
        "info",
        "run_optimization_problem",
        "MultiCommoditySimulatorHIGHS",
        "esdl_run_info_path",
        "runinfo_path",
        "log_level",
        "log_level",
        "kwargs",
        "tests",
        "models",
        "emerge",
        "src",
        "example",
        "example",
        "Path",
        "example",
        "resolve",
        "parent",
        "parent",
        "run_optimization_problem",
        "MultiCommoditySimulatorNoLosses",
        "base_folder",
        "base_folder",
        "esdl_file_name",
        "esdl_parser",
        "ESDLFileParser",
        "profile_reader",
        "ProfileReaderFromFile",
        "input_timeseries_file"
    ],
    "literals": [
        "\"172.17.0.2\"",
        "\"Warmtenetten\"",
        "\"admin\"",
        "\"admin\"",
        "\"WarmingUP-MPC\"",
        "\"\"",
        "f\"{self.source_variable}\"",
        "f\"{self.demand_variable}\"",
        "f\"{self.source_variable}\"",
        "f\"{self.demand_variable}\"",
        "\"electricity_demand\"",
        "\"target\"",
        "\"target_electricity_demand\"",
        "\"state\"",
        "\"Electricity_demand\"",
        "\"gas_demand\"",
        "\"target\"",
        "\"target_gas_demand\"",
        "\"state\"",
        "\"Gas_demand_mass_flow\"",
        "\"electricity_source\"",
        "\"target\"",
        "\"maximum_electricity_source\"",
        "\"state\"",
        "\"Electricity_source\"",
        "\"gas_source\"",
        "\"target\"",
        "\"maximum_gas_source\"",
        "\"state\"",
        "\"Gas_source_mass_flow\"",
        "f\"{asset}.{type_values['target']}\"",
        "'target'",
        "f\"{asset}.{type_values['state']}\"",
        "'state'",
        "\"state\"",
        "\"OPTIONAL\"",
        "\"state\"",
        "\"The following asset has been specified as OPTIONAL but it has been changed \"",
        "f\"to be included in the simulation, asset type: {asset.asset_type }, asset \"",
        "f\"name: {asset.name}\"",
        "\"electricity_demand\"",
        "\"Electricity_demand\"",
        "\"electricity_source\"",
        "\"Electricity_source\"",
        "\"gas_demand\"",
        "\"Gas_demand_mass_flow\"",
        "\"gas_source\"",
        "\"Gas_source_mass_flow\"",
        "\"gas_tank_storage\"",
        "\"Gas_tank_flow\"",
        "\"electrolyzer\"",
        "\"Power_consumed\"",
        "\".\"",
        "f\"Asset types: {unused_asset} are not included in controls of the simulator\"",
        "\"assets_to_include\"",
        "\"assets_to_include_list\"",
        "\"asset_variable_map\"",
        "\"assets_to_include\"",
        "\"assets_to_include_list\"",
        "\"asset_merit\"",
        "\"asset_variable_map\"",
        "\"asset_name\"",
        "f\"{asset}\"",
        "\"merit_order\"",
        "\"Priorities assigned must be smaller than the total number of producers\"",
        "f\"{asset}.{asset_variable_map[asset]}\"",
        "\"source\"",
        "\"conversion\"",
        "f\"{asset}.Gas_mass_flow_out\"",
        "\"demand\"",
        "\"storage\"",
        "\"asset_name\"",
        "f\"{asset}_discharge\"",
        "\"merit_order\"",
        "\"Priorities assigned must be smaller than the total number of producers\"",
        "f\"{asset}.{asset_variable_map[asset]}\"",
        "f\"No goal was set for {asset}, while a priority was provided. This asset group \"",
        "f\"still has to be added to the goals.\"",
        "\"source\"",
        "\"electricity_source\"",
        "\"gas_source\"",
        "\"demand\"",
        "\"electricity_demand\"",
        "\"gas_demand\"",
        "\"conversion\"",
        "\"electrolyzer\"",
        "\"storage\"",
        "\"gas_tank_storage\"",
        "\"Pipe\"",
        "\"ElectricityCable\"",
        "\"Joint\"",
        "\"Bus\"",
        "\"asset_merit\"",
        "\"assets_to_include_list\"",
        "\"asset_merit\"",
        "\"merit_order\"",
        "\"head_loss_option\"",
        "\"minimize_head_losses\"",
        "\"include_asset_is_switched_on\"",
        "\"asset_name\"",
        "\"merit_order\"",
        "\"asset_name\"",
        "\"merit_order\"",
        "\"costInformation\"",
        "\"merit_order\"",
        "\"controlStrategy\"",
        "\"merit_order\"",
        "\"controlStrategy\"",
        "\"asset_name\"",
        "f\"{a.name}_discharge\"",
        "f\"Asset: {a.name} does not have a merit order specified\"",
        "\"merit_order\"",
        "\"merit_order\"",
        "\"The specified producer usage merit order must be a \"",
        "f\"positve integer value, producer name:{a.name}, current \"",
        "f\"specified merit value: {last_merit_order}\"",
        "\"merit_order\"",
        "\"merit_order\"",
        "\"merit_order\"",
        "\"casadi_solver\"",
        "f\"{goals_print}\"",
        "f\"Goal with priority {priority} has been completed\"",
        "\"The heating demand is not matched\"",
        "\"solver\"",
        "\"highs\"",
        "\"head_loss_option\"",
        "\"minimize_head_losses\"",
        "\"include_electric_cable_power_loss\"",
        "\"solver\"",
        "\"highs\"",
        "\"highs\"",
        "\"presolve\"",
        "\"off\"",
        "\"Run Network Simulator\"",
        "\"write_result_db_profiles\"",
        "\"influxdb_host\"",
        "\"localhost\"",
        "\"influxdb_port\"",
        "\"influxdb_username\"",
        "\"influxdb_password\"",
        "\"influxdb_ssl\"",
        "\"influxdb_verify_ssl\"",
        "\"__main__\"",
        "\"emerge_priorities_withoutstorage.esdl\"",
        "\"timeseries.csv\""
    ],
    "variables": [
        "DB_HOST",
        "DB_PORT",
        "DB_NAME",
        "DB_USER",
        "DB_PASSWORD",
        "logger",
        "WATT_TO_MEGA_WATT",
        "WATT_TO_KILO_WATT",
        "state",
        "target_min",
        "target_max",
        "function_range",
        "function_nominal",
        "priority",
        "order",
        "state",
        "target_min",
        "target_max",
        "function_range",
        "function_nominal",
        "priority",
        "order",
        "target_max",
        "function_range",
        "source_variable",
        "function_nominal",
        "priority",
        "order",
        "demand_variable",
        "function_nominal",
        "priority",
        "order",
        "target_min",
        "target_max",
        "function_range",
        "source_variable",
        "function_nominal",
        "priority",
        "order",
        "target_min",
        "function_range",
        "demand_variable",
        "function_nominal",
        "priority",
        "order",
        "goals",
        "map_demand",
        "map_prod",
        "timeseries_name",
        "target",
        "state",
        "priority",
        "_qpsol",
        "_priorities_output",
        "_qpsol",
        "assets",
        "type_variable_map",
        "assets_to_include",
        "asset_variable_map",
        "available_timeseries",
        "assets_to_include",
        "group",
        "asset_variable_map",
        "asset",
        "assets_list",
        "unused_asset",
        "asset_info",
        "goals",
        "assets_to_include",
        "assets_list",
        "asset_merit",
        "asset_variable_map",
        "index_s",
        "marginal_priority",
        "variable_name",
        "variable_name",
        "index_s",
        "marginal_priority",
        "variable_name",
        "asset_types_to_include",
        "assets_without_control",
        "asset_info",
        "asset_info",
        "max_value_merit",
        "index_start_of_priority",
        "goals",
        "goals",
        "options",
        "options",
        "constraints",
        "constraints",
        "attributes",
        "assets",
        "last_merit_order",
        "set_merit",
        "order_prio",
        "map_prio",
        "a",
        "attributes",
        "options",
        "options",
        "goals_print",
        "__priority",
        "__priority_timer",
        "_hot_start",
        "time_taken",
        "canonical",
        "sign",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "highs_options",
        "options",
        "highs_options",
        "kwargs",
        "_",
        "base_folder",
        "solution"
    ],
    "comments": [
        "-------------------------------------------------------------------------------------------------",
        "Step 1:",
        "Match the target demand specified",
        "-------------------------------------------------------------------------------------------------",
        "Step 2:",
        "Match the maximum producer profiles",
        "-------------------------------------------------------------------------------------------------",
        "Step 3:",
        "The merit order of the sources and consumers (something like [3, 1, 2]), determine the priority",
        "in which the source is available for use and the consumer to consume.",
        "The priorities are determined based on the marginal costs provided in ESDL. For producer, the",
        "lower the marginal costs, the more the producer should be used (e.g. cheap to use). For consumers",
        "the opposite is true, the higher the marginal costs (e.g. more revenue), the more energy should",
        "be delivered to that consumer.",
        "Minimize the source use with lowest priority 3 (highest marginal costs), then the source with",
        "priority 2 etc, while the consumers are maximised starting with the highest marginal costs.",
        "func_range_bound[0]",
        "func_range_bound[0]",
        "-------------------------------------------------------------------------------------------------",
        "Demand and producer matching",
        "-------------------------------------------------------------------------------------------------",
        "Overwrite all assets marked as optional to be used",
        "TODO: should use separate variable for charging and discharging",
        "charging acts as consumer",
        "Marginal costs for discharging > marginal cost for charging",
        "discharging acts as producer",
        "Marginal costs for discharging should be larger than marginal cost for charging",
        "TODO: add check on the marginal costs for charging/discharging",
        "TODO: improve the asset_types_to_include and esdl_assets_to_include",
        "TODO also include other assets than producers, e.g. storage, conversion and possible",
        "demand for the ones without a profile",
        "TODO exclude producers from merit order if they have a profile, even if a marginal cost",
        "is set",
        "Storage: charge priority should be higher than discharge priority",
        "Priority 1 & 2 reserved for target demand goal & additional goal like matching",
        "producer profile (without merit order)",
        "TODO: cyclic constraints",
        "update merit order to be integers and have maximumally one step in priority",
        "TODO: post will be created later",
        "def post(self):",
        "super().post()",
        "self._write_updated_esdl(self.get_energy_system_copy(), optimizer_sim=True)",
        "-------------------------------------------------------------------------------------------------",
        "For some cases the presolve of the HIGHS solver makes this problem infeasible, therefore",
        "the presolve is turned off.",
        "-------------------------------------------------------------------------------------------------",
        "main()"
    ],
    "docstrings": [
        "\"\"\"\n    Apply constraints to enforce esdl specified milp producer merit order usage\n    \"\"\"",
        "\"\"\"\n    Apply constraints to enforce maximisation of consumption, priority is based on the marginal\n    costs\n    \"\"\"",
        "\"\"\"\n    Apply constraints to enforce minimisation of charging of storage, priority is based on the\n    marginal costs\n    \"\"\"",
        "\"\"\"\n    Apply constraints to enforce maximisation of discharging of storage, priority is based on the\n    marginal costs\n    \"\"\"",
        "\"\"\"\n    This workflow allows for the simulation of (combined) hydrogen and electricity networks,\n    containing consumers, producers and conversion assets.\n    The priority of the consumers, producers and conversion assets is set using the marginal costs\n    in the ESDL file, allowing for flexible customised operation. Producers with the lowest marginal\n    costs are maximised in operation before other consumers are used, while consumers with the\n    highest marginal costs are maximised before other consumers are satisfied. In case both profiles\n    and marginal costs are provided for producers or consumers, then the marginal costs are ignored\n    and the profiles will be matched. always are preferred over the\n    To obtain this workflow the objective functions are setup according to the scheme described\n    below.\n\n    Goal priorities are:\n    1. Match target demand specified\n    2. Producers with highest marginal costs are minimised and Consumers with highest marginal\n    costs are maximised first, working back towards the lower marginal costs.\n    3. Producers with a production profile will be matched at end. This goal should be obsolete, as\n     the bound is set towards the production profile and other producers are first minimised.\n\n    Notes:\n    - Currently all demand profiles can be used, however the length of the simulation is based on\n    the length and timestep of these profiles. Too long timehorizons might results in too big\n    problems for the solver.\n    - No cyclic constraints are yet applied to storages as this workflow solely functions as a\n    simulator.\n    - TODO: When the number of assets become larger, the simulator might be applied in stages with\n    consecutive parts of the time horizon.\n    \"\"\"",
        "\"\"\"\n        This function creates the lists and dictionaries of assets to include in the optimization\n        based on the marginal costs, e.g. priorities. It excludes the assets who already have\n        assigned timeseries for demand or production.\n        Furthermore, it creates a map of the variables that are required for every asset.\n        :param asset_types_to_include:\n        :param assets_without_control:\n        :return:\n        \"\"\"",
        "\"\"\"\n        This method creates the goals for every asset that is based on the marginal cost and the\n        relevant variable for that asset. Depending on the type of asset, the goal is a minimisation\n        or maximisation.\n        :param asset_info:\n        :param max_value_merit:\n        :param index_start_of_priority:\n        :return:\n        \"\"\"",
        "\"\"\"\n        This method organizes the goals and assigns their priorities\n        The first two priorities are reserved for matching of demand. Thereby the priorities of the\n         other goals to maximize specific producers and minimize demand, start at priority 3.\n        :return:\n        \"\"\"",
        "\"\"\"\n        Constraints to limit producer production in case timeseries for the production exist,\n        relevant when the first goals is not to match profile.\n        \"\"\"",
        "\"\"\"\n        Add equality constraints to enforce a cyclic energy balance [J] between the end and the\n        start of the time horizon used as well an inequality constraint to enforce no milp supply\n        [W] to the netwok in the 1st time step\n        \"\"\""
    ],
    "functions": [
        "path_goals",
        "pre",
        "esdl_assets",
        "__create_asset_list_controls",
        "__create_merit_path_goals",
        "__merit_path_goals",
        "path_goals",
        "energy_system_options",
        "path_constraints",
        "constraints",
        "__merit_controls",
        "solver_options",
        "priority_started",
        "priority_completed",
        "__state_vector_scaled",
        "solver_options",
        "energy_system_options",
        "solver_options",
        "main"
    ],
    "classes": [
        "TargetDemandGoal",
        "TargetProducerGoal",
        "MinimizeSourcesGoalMerit",
        "MaximizeDemandGoalMerit",
        "MinimizeStorageGoalMerit",
        "MaximizeStorageGoalMerit",
        "_GoalsAndOptions",
        "MultiCommoditySimulator",
        "MultiCommoditySimulatorHIGHS",
        "MultiCommoditySimulatorNoLosses"
    ]
}