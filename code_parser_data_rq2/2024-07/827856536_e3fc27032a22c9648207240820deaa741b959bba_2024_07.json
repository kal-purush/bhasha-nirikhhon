{
    "identifiers": [
        "random",
        "gtts",
        "gTTS",
        "os",
        "pygame",
        "speech_recognition",
        "sr",
        "pyttsx3",
        "sr",
        "Recognizer",
        "command",
        "pyttsx3",
        "init",
        "engine",
        "say",
        "command",
        "engine",
        "runAndWait",
        "x",
        "prompt",
        "guess",
        "x",
        "prompt",
        "random",
        "randint",
        "len",
        "arr",
        "arr",
        "resp",
        "SpeakText",
        "myobj",
        "SpeakText",
        "sr",
        "Microphone",
        "source2",
        "r",
        "adjust_for_ambient_noise",
        "source2",
        "duration",
        "r",
        "listen",
        "source2",
        "r",
        "recognize_google",
        "audio2",
        "MyText",
        "lower",
        "MyText",
        "MyText",
        "SpeakText",
        "responses",
        "MyText",
        "sr",
        "RequestError",
        "e",
        "format",
        "e",
        "sr",
        "UnknownValueError"
    ],
    "literals": [
        "'en'",
        "\"hello boss\"",
        "\"hello sir\"",
        "\"how may i help you boss\"",
        "\"good evening boss\"",
        "\"hello there\"",
        "\"hey there\"",
        "\"how may i help you today\"",
        "\"hii\"",
        "\"hey\"",
        "\"hello\"",
        "\"sorry i have not quite learnt about this yet. please try again with another querry\"",
        "'end program'",
        "\"ok boss see you later\"",
        "\"Could not request results; {0}\"",
        "\"unknown error occurred\""
    ],
    "variables": [
        "r",
        "engine",
        "language",
        "arr",
        "guess",
        "resp",
        "myobj",
        "audio2",
        "MyText",
        "MyText"
    ],
    "comments": [
        "Initialize the engine",
        "array containing the responses assistant should give",
        "the array which contains the possible prompts given by the user",
        "myobj=gTTS(text=arr[resp], lang=language, slow=False)",
        "myobj.save('first.mp3')",
        "pygame.mixer.init()",
        "pygame.mixer.music.load(\"first.mp3\")",
        "pygame.mixer.music.play()",
        "wait for the audio to finish",
        "while pygame.mixer.music.get_busy():",
        "pygame.time.Clock().tick(10)",
        "# remove the file for new audio generation",
        "pygame.mixer.music.stop()  # Stop the music to release the file",
        "pygame.mixer.quit()  # Quit mixer to release resources",
        "os.remove(\"first.mp3\")",
        "while True:",
        "y=input()",
        "responses(y)",
        "if y=='end':",
        "break",
        "Exception handling to handle",
        "exceptions at the runtime",
        "use the microphone as source for input.",
        "wait for a second to let the recognizer",
        "adjust the energy threshold based on",
        "the surrounding noise level",
        "listens for the user's input",
        "Using google to recognize audio"
    ],
    "docstrings": [],
    "functions": [
        "SpeakText",
        "responses"
    ],
    "classes": []
}