{
    "identifiers": [
        "unittest",
        "sys",
        "functools",
        "contextlib",
        "contextmanager",
        "os",
        "io",
        "StringIO",
        "BytesIO",
        "rsa",
        "rsa",
        "cli",
        "sys",
        "version_info",
        "BytesIO",
        "StringIO",
        "contextmanager",
        "IOClass",
        "IOClass",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "new_out",
        "new_err",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "sys",
        "stdout",
        "sys",
        "stderr",
        "old_out",
        "old_err",
        "contextmanager",
        "new_argv",
        "sys",
        "argv",
        "sys",
        "argv",
        "arg",
        "arg",
        "new_argv",
        "sys",
        "argv",
        "old_args",
        "filenames",
        "fname",
        "filenames",
        "os",
        "path",
        "exists",
        "fname",
        "os",
        "unlink",
        "fname",
        "func",
        "functools",
        "wraps",
        "func",
        "args",
        "kwargs",
        "remove",
        "func",
        "args",
        "kwargs",
        "remove",
        "wrapper",
        "decorator",
        "unittest",
        "TestCase",
        "status_code",
        "func",
        "args",
        "kwargs",
        "func",
        "args",
        "kwargs",
        "SystemExit",
        "ex",
        "status_code",
        "ex",
        "code",
        "fail",
        "func",
        "ex",
        "code",
        "status_code",
        "fail",
        "func",
        "AbstractCliTest",
        "cli_args",
        "assertExits",
        "rsa",
        "cli",
        "keygen",
        "captured_output",
        "err",
        "cli_args",
        "rsa",
        "cli",
        "keygen",
        "getvalue",
        "splitlines",
        "assertEqual",
        "lines",
        "assertEqual",
        "lines",
        "assertTrue",
        "err",
        "getvalue",
        "cleanup_files",
        "captured_output",
        "err",
        "cli_args",
        "rsa",
        "cli",
        "keygen",
        "assertTrue",
        "err",
        "getvalue",
        "assertTrue",
        "err",
        "getvalue",
        "open",
        "pemfile",
        "rsa",
        "PrivateKey",
        "load_pkcs1",
        "pemfile",
        "read",
        "cleanup_files",
        "captured_output",
        "err",
        "cli_args",
        "rsa",
        "cli",
        "keygen",
        "assertTrue",
        "err",
        "getvalue",
        "assertTrue",
        "err",
        "getvalue",
        "open",
        "derfile",
        "rsa",
        "PrivateKey",
        "load_pkcs1",
        "derfile",
        "read",
        "format",
        "cleanup_files",
        "captured_output",
        "err",
        "cli_args",
        "rsa",
        "cli",
        "keygen",
        "assertTrue",
        "err",
        "getvalue",
        "assertTrue",
        "err",
        "getvalue",
        "assertTrue",
        "err",
        "getvalue",
        "open",
        "pemfile",
        "rsa",
        "PublicKey",
        "load_pkcs1",
        "pemfile",
        "read"
    ],
    "literals": [
        "'SystemExit() raised by %r, but exited with code %i, expected %i'",
        "'SystemExit() not raised by %r'",
        "'-----BEGIN RSA PRIVATE KEY-----'",
        "'-----END RSA PRIVATE KEY-----'",
        "'128-bit key'",
        "'test_cli_privkey_out.pem'",
        "'--out=test_cli_privkey_out.pem'",
        "'--form=PEM'",
        "'128-bit key'",
        "'test_cli_privkey_out.pem'",
        "'test_cli_privkey_out.pem'",
        "'rb'",
        "'test_cli_privkey_out.der'",
        "'--out=test_cli_privkey_out.der'",
        "'--form=DER'",
        "'128-bit key'",
        "'test_cli_privkey_out.der'",
        "'test_cli_privkey_out.der'",
        "'rb'",
        "'DER'",
        "'test_cli_privkey_out.pem'",
        "'test_cli_pubkey_out.pem'",
        "'--out=test_cli_privkey_out.pem'",
        "'--pubout=test_cli_pubkey_out.pem'",
        "'--form=PEM'",
        "'256-bit key'",
        "'test_cli_privkey_out.pem'",
        "'test_cli_pubkey_out.pem'",
        "'test_cli_pubkey_out.pem'",
        "'rb'"
    ],
    "variables": [
        "IOClass",
        "IOClass",
        "new_out",
        "new_err",
        "old_out",
        "old_err",
        "old_args",
        "lines"
    ],
    "comments": [
        "The key size should be shown on stderr",
        "The key size should be shown on stderr",
        "The output file should be shown on stderr",
        "If we can load the file as PEM, it's good enough.",
        "The key size should be shown on stderr",
        "The output file should be shown on stderr",
        "If we can load the file as der, it's good enough.",
        "The key size should be shown on stderr",
        "The output files should be shown on stderr",
        "If we can load the file as PEM, it's good enough."
    ],
    "docstrings": [
        "\"\"\"\nUnit tests for CLI entry points.\n\"\"\"",
        "\"\"\"Captures output to stdout and stderr\"\"\"",
        "\"\"\"Updates sys.argv[1:] for a single test.\"\"\"",
        "\"\"\"Makes sure the files don't exist when the test runs, and deletes them afterward.\"\"\""
    ],
    "functions": [
        "captured_output",
        "cli_args",
        "cleanup_files",
        "remove",
        "decorator",
        "wrapper",
        "assertExits",
        "test_keygen_no_args",
        "test_keygen_priv_stdout",
        "test_keygen_priv_out_pem",
        "test_keygen_priv_out_der",
        "test_keygen_pub_out_pem"
    ],
    "classes": [
        "AbstractCliTest",
        "KeygenTest"
    ]
}