{
    "identifiers": [
        "com",
        "google",
        "code",
        "sbt",
        "compiler",
        "sbt013",
        "scala",
        "Function1",
        "scala",
        "Function1$class",
        "scala",
        "runtime",
        "BoxedUnit",
        "Override",
        "value",
        "Function1$class",
        "apply$mcDD$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcDF$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcDI$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcDJ$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcFD$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcFF$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcFI$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcFJ$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcID$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcIF$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcII$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcIJ$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcJD$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcJF$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcJI$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcJJ$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcVD$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcVF$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcVI$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcVJ$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcZD$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcZF$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcZI$sp",
        "value",
        "Override",
        "value",
        "Function1$class",
        "apply$mcZJ$sp",
        "value",
        "Override",
        "g",
        "Function1$class",
        "andThen",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcDD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcDF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcDI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcDJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcFD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcFF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcFI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcFJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcID$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcIF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcII$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcIJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcJD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcJF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcJI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcJJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcVD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcVF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcVI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcVJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcZD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcZF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcZI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "andThen$mcZJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcDD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcDF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcDI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcDJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcFD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcFF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcFI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcFJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcID$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcIF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcII$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcIJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcJD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcJF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcJI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcJJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcVD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcVF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcVI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcVJ$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcZD$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcZF$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcZI$sp",
        "g",
        "Override",
        "g",
        "Function1$class",
        "compose$mcZJ$sp",
        "g"
    ],
    "literals": [],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2013-2016 Grzegorz Slowikowski (gslowikowski at gmail dot com)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.",
        "* Base <a href=\"https://github.com/scala/scala/blob/v2.10.5/src/library/scala/Function1.scala\">scala.Function1</a>\n * trait Java implementation\n *\n * @param <T1> function return value class\n * @param <R> function parameter class\n * \n * @author <a href=\"mailto:gslowikowski@gmail.com\">Grzegorz Slowikowski</a>"
    ],
    "functions": [
        "apply$mcDD$sp",
        "apply$mcDF$sp",
        "apply$mcDI$sp",
        "apply$mcDJ$sp",
        "apply$mcFD$sp",
        "apply$mcFF$sp",
        "apply$mcFI$sp",
        "apply$mcFJ$sp",
        "apply$mcID$sp",
        "apply$mcIF$sp",
        "apply$mcII$sp",
        "apply$mcIJ$sp",
        "apply$mcJD$sp",
        "apply$mcJF$sp",
        "apply$mcJI$sp",
        "apply$mcJJ$sp",
        "apply$mcVD$sp",
        "apply$mcVF$sp",
        "apply$mcVI$sp",
        "apply$mcVJ$sp",
        "apply$mcZD$sp",
        "apply$mcZF$sp",
        "apply$mcZI$sp",
        "apply$mcZJ$sp",
        "andThen",
        "andThen$mcDD$sp",
        "andThen$mcDF$sp",
        "andThen$mcDI$sp",
        "andThen$mcDJ$sp",
        "andThen$mcFD$sp",
        "andThen$mcFF$sp",
        "andThen$mcFI$sp",
        "andThen$mcFJ$sp",
        "andThen$mcID$sp",
        "andThen$mcIF$sp",
        "andThen$mcII$sp",
        "andThen$mcIJ$sp",
        "andThen$mcJD$sp",
        "andThen$mcJF$sp",
        "andThen$mcJI$sp",
        "andThen$mcJJ$sp",
        "andThen$mcVD$sp",
        "andThen$mcVF$sp",
        "andThen$mcVI$sp",
        "andThen$mcVJ$sp",
        "andThen$mcZD$sp",
        "andThen$mcZF$sp",
        "andThen$mcZI$sp",
        "andThen$mcZJ$sp",
        "compose",
        "compose$mcDD$sp",
        "compose$mcDF$sp",
        "compose$mcDI$sp",
        "compose$mcDJ$sp",
        "compose$mcFD$sp",
        "compose$mcFF$sp",
        "compose$mcFI$sp",
        "compose$mcFJ$sp",
        "compose$mcID$sp",
        "compose$mcIF$sp",
        "compose$mcII$sp",
        "compose$mcIJ$sp",
        "compose$mcJD$sp",
        "compose$mcJF$sp",
        "compose$mcJI$sp",
        "compose$mcJJ$sp",
        "compose$mcVD$sp",
        "compose$mcVF$sp",
        "compose$mcVI$sp",
        "compose$mcVJ$sp",
        "compose$mcZD$sp",
        "compose$mcZF$sp",
        "compose$mcZI$sp",
        "compose$mcZJ$sp"
    ],
    "classes": [
        "AbstractFunction1Impl"
    ]
}