{
    "identifiers": [
        "bms",
        "bms",
        "a",
        "a",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "n",
        "n",
        "n",
        "n",
        "dd",
        "mm",
        "yyyy",
        "yyyy",
        "mm",
        "dd",
        "d",
        "id",
        "d",
        "gy",
        "d",
        "gm",
        "d",
        "gd",
        "d",
        "d",
        "d",
        "N",
        "Y",
        "parseInt",
        "Y",
        "Y",
        "n",
        "az",
        "n",
        "Public_Constants",
        "n",
        "Public_Constants",
        "n",
        "j",
        "az",
        "j",
        "N",
        "w",
        "Public_Constants",
        "w",
        "Public_Constants",
        "w",
        "d",
        "format",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "d",
        "format",
        "format",
        "p",
        "p",
        "reg",
        "p",
        "format",
        "format",
        "reg",
        "p",
        "format",
        "format",
        "d",
        "age",
        "id",
        "d",
        "isFinite",
        "parseInt",
        "age",
        "gy",
        "d",
        "age",
        "gm",
        "d",
        "gd",
        "d",
        "gy",
        "d",
        "age",
        "gm",
        "d",
        "gd",
        "d",
        "parseInt",
        "gy",
        "d",
        "age",
        "s",
        "e",
        "id",
        "s",
        "id",
        "e",
        "s",
        "e",
        "e",
        "s",
        "s",
        "e",
        "s",
        "e",
        "e",
        "s",
        "p1",
        "p2",
        "p1",
        "p2",
        "id",
        "p1",
        "id",
        "p1",
        "id",
        "p2",
        "id",
        "p2",
        "p1",
        "p2",
        "p1",
        "p2",
        "overlap",
        "min",
        "p1",
        "p2",
        "max",
        "p1",
        "p2",
        "overlap",
        "p",
        "min",
        "max",
        "overlap",
        "d",
        "sep",
        "id",
        "d",
        "sep",
        "gd",
        "d",
        "Public_Constants",
        "gm",
        "d",
        "gy",
        "d",
        "gd",
        "d",
        "sep",
        "gm",
        "d",
        "sep",
        "gy",
        "d",
        "Public_Constants",
        "d",
        "cg",
        "cf",
        "df",
        "a",
        "p",
        "po"
    ],
    "literals": [
        "\"use strict\"",
        "\"janvier\"",
        "\"février\"",
        "\"mars\"",
        "\"avril\"",
        "\"mai\"",
        "\"juin\"",
        "\"juillet\"",
        "\"août\"",
        "\"septembre\"",
        "\"octobre\"",
        "\"novembre\"",
        "\"décembre\"",
        "\"janv.\"",
        "\"févr.\"",
        "\"mars\"",
        "\"avr.\"",
        "\"mai\"",
        "\"juin\"",
        "\"juil.\"",
        "\"août\"",
        "\"sept.\"",
        "\"oct.\"",
        "\"nov.\"",
        "\"déc.\"",
        "\"lundi\"",
        "\"mardi\"",
        "\"mercredi\"",
        "\"jeudi\"",
        "\"vendredi\"",
        "\"samedi\"",
        "\"dimanche\"",
        "\"lun.\"",
        "\"mar.\"",
        "\"mer.\"",
        "\"jeu.\"",
        "\"ven.\"",
        "\"sam.\"",
        "\"dim.\"",
        "\"0\"",
        "\"{j} {F} {Y}\"",
        "\"{\"",
        "\"}\"",
        "\"g\"",
        "\"\"",
        "\"s\"",
        "\"e\"",
        "\"y\"",
        "\"s\"",
        "\"e\"",
        "\"l\"",
        "\" \"",
        "\" \""
    ],
    "variables": [
        "bms",
        "Public_Constants",
        "id",
        "gy",
        "gm",
        "gd",
        "az",
        "d",
        "cg",
        "Y",
        "n",
        "j",
        "N",
        "w",
        "cf",
        "p",
        "reg",
        "a",
        "p",
        "po",
        "overlap",
        "min",
        "max",
        "df"
    ],
    "comments": [
        "",
        "Constantes publiques (déclarés à la fin du script, dans le bloc return) //",
        "",
        "",
        "Méthodes utilitaires privées //",
        "",
        "",
        "méthodes publiques (déclarés à la fin du script, dans le bloc return) //",
        "",
        "",
        "Public declarations //",
        ""
    ],
    "docstrings": [
        "* Bannière générée automatiquement pour jsdoc\n * Modifier la bannière dans Gruntfile.js concat:options:banner",
        "* Constantes publiques\n     * @type {Object}\n     * @property {array} m - mois en texte, version longue\n     * @property {array} ma - mois en texte, version courte\n     * @property {array} d - jour de la semaine en texte, version longue\n     * @property {array} da - jour de la semaine en texte, version courte\n     * @public",
        "* Utilitaire : Vérifier si l'argument est une instance de l'objet Date.\n         * @memberof  bms\n         * @param  {string|number|array|object} un argument\n         * @return {boolean}   vrai ou faux\n         * @private\n         * @since  0.0.1",
        "* Utilitaire : Récupérer l'année depuis un objet Date.\n         * @memberof  bms\n         * @param  {object} d un objet `Date`\n         * @return {number}   une année sur 4 chiffres\n         * @private\n         * @since  0.0.1",
        "* Utilitaire : Récupérer le mois depuis un objet Date.\n         * @memberof  bms\n         * @param  {object} d un objet `Date`\n         * @return {number}   un mois sur 2 chiffres (1-12)\n         * @private\n         * @since  0.0.1",
        "* Utilitaire : Récupérer le jour depuis un objet Date.\n         * @memberof  bms\n         * @param  {object} d un objet `Date`\n         * @return {number}   un jour sur 2 chiffres (1-31)\n         * @private\n         * @since  0.0.1",
        "* Utilitaire : Ajouter un préfixe 0 à un chiffre.\n         * @memberof  bms\n         * @param  {number} n un chiffre (0-9)\n         * @return {string|number}   un Nombre sur 2 chiffres (00-09)\n         * @private\n         * @since  0.0.1",
        "* Méthode pour créer un objet javascript `Date` à partir d'une date du calendrier grégorien français.\n         * @memberof  bms\n         * @public\n         * @since  0.0.0\n         * @param  {number} dd   jour sur 2 chiffres (01-31)\n         * @param  {number} mm   mois sur 2 chiffres (01-12)\n         * @param  {number} yyyy année sur 4 chiffres\n         * @return {object}      un objet `Date`\n         * @example <pre>\n<strong>> bms.d(21, 4, 2014);</strong>\n<em>Date {Mon Apr 21 2014 00:00:00 GMT+0200 (CEST)}</em>\n</pre>",
        "* Méthode pour convertir un objet `Date` en objet `Calendrier` (sans l'heure) au format grégorien. La nomenclature est inspirée de la fonction PHP `date()`.\n         * @memberof  bms\n         * @public\n         * @since 0.0.1\n         * @param  {object} d   un objet `Date`\n         * @returns {object.<number, string>} un objet `Calendrier Grégorien`,<br>\n         * @returns {number} Y - année sur 4 chiffres,<br>\n         * @returns {number} y - année sur 2 chiffres,<br>\n         * @returns {number} n - mois en chiffres sans le zéro (1-12),<br>\n         * @returns {number} m - mois en chiffres avec le zéro  (01-12),<br>\n         * @returns {string} F - mois en texte, version longue,<br>\n         * @returns {string} M - mois en texte, version courte,<br>\n         * @returns {number} j - jour du mois en chiffres sans le zéro (1-31),<br>\n         * @returns {number} d - jour du mois en chiffres avec le zéro (01-31),<br>\n         * @returns {number} N - jour de la semaine en chiffres au format ISO-8601 (1 pour Dimanche, 7 pour Samedi),<br>\n         * @returns {number} w - jour de la semaine en chiffres (0 pour Dimanche, 6 pour Samedi),<br>\n         * @returns {string} l - jour de la semaine en texte, version longue,<br>\n         * @returns {string} D - jour de la semaine en texte, version courte.\n         * @example <pre>\n<strong>> var date = bms.d(21,4,2014);\n> bms.cg(date);</strong>\n<em>Object {\n    D = \"lun.\"\n    F = \"avril\"\n    M = \"avr.\"\n    N = 1\n    Y = 2014\n    d = 21\n    j = 21\n    l = \"lundi\"\n    m = \"04\"\n    n = 4\n    w = 0\n    y = 14\n}</em>\n<strong>> bms.cg(date).Y;</strong>\n<em>2014</em>\n</pre>",
        "* Méthode pour formater un objet `Calendrier` en texte lisible, à partir d'un masque.\n         * @memberof  bms\n         * @public\n         * @param  {object} d   un objet `Date`\n         * @param  {string} [format] un masque défini par l'utilisateur (optionnel) et correspondant aux propriétés de l'objet `Calendrier`\n         * @return {string}     une date formatée\n         * @since 0.0.1\n         * @example <pre>\n<strong>> var date = bms.d(21,4,2014);\n> var greg = bms.cg(date);\n> bms.cf(greg);</strong>\n<em>\"21 avril 2014\"</em>\n<strong>> bms.cf(greg,\"{l} {J} {F} {Y}\");</strong>\n<em>\"lundi 21 avril 2014\"</em>\n<strong>> bms.cf(greg,\"{J}/{m}/{Y}\");</strong>\n<em>\"21/04/2014\"</em>\n</pre>",
        "* Méthode pour créer un objet `Acte` à partir de la date de l'acte et des ages mentionnés dans l'acte.\n         * @memberof  bms\n         * @public\n         * @since  0.0.0\n         * @param  {object} d   un objet `Date`\n         * @param  {number} age un age mentionné sur l'acte\n         * @returns {object.<object,number>} un objet `Acte`<br>\n         * @returns {object} s - la date de naissance minimale<br>\n         * @returns {object} e - la date de naissance maximale<br>\n         * @returns {number} y - l'année de naissance sur 4 chiffres\n         * @example <pre>\n<strong>> var date = bms.d(21, 4, 2016);\n> bms.a(date, 2);</strong>\n<em>Object {\n   s=Date {Mon Apr 22 2013 00:00:00 GMT+0200 (CEST)},\n   e=Date {Mon Apr 20 2015 00:00:00 GMT+0200 (CEST)},\n   y=2014\n}</em>\n<strong>> bms.a(date, 2).y;</strong>\n<em>2014</em>\n</pre>",
        "* Méthode pour créer un objet `Période`contenant le nombre de jours entre 2 objets `Date`.\n        * @memberof  bms\n        * @public\n        * @since  0.0.0\n        * @param  {object} s un objet `Date` (de début)\n        * @param  {object} e un objet `Date` (de fin)\n        * @returns {object.<object,number>} un objet `Période`<br>\n        * @returns {object} s - un objet `Date` de départ (le plus petit)<br>\n        * @returns {object} e - un objet `Date` de fin (le plus grand)<br>\n        * @returns {number} l - la durée de la période en jours\n        * @example <pre>\n<strong>> var date1 = bms.d(20, 4, 2015);</strong>\n<strong>> var date2 = bms.d(22, 4, 2013);</strong>\n<strong>> bms.p(date1, date2);</strong>\n<em>Object {\n    s = Date {Mon Apr 22 2013 00:00:00 GMT+0200 (CEST)},\n    e = Date {Mon Apr 20 2015 00:00:00 GMT+0200 (CEST)},\n    l = 729\n}</em>\n<strong>> bms.p(date1, date2).l</strong>\n<em>729</em>\n</pre>",
        "* Méthode pour créer un objet `Chevauchement` contenant le nombre de jours communs à 2 objets `Période`.\n        * @memberof  bms\n        * @public\n        * @since  0.0.0\n        * @param  {object} p1 un premier objet `Période`ou `Acte`\n        * @param  {object} p2 un second objet `Période`ou `Acte`\n        * @returns {object.<object,number>} un objet `Chevauchement`<br>\n        * @returns {object} s - un objet `Date` de départ du chevauchement (le plus petit)<br>\n        * @returns {object} e - un objet `Date` de fin du chevauchement (le plus grand)<br>\n        * @returns {number} l - la durée du chevauchement en jours\n        * @example <pre>\n<strong>> var date1 = bms.d(20, 4, 2015);\n> var date2 = bms.d(22, 4, 2013);\n> var date3 = bms.d(20, 4, 2015);\n> var periode1 = bms.p(date1, date2);\n> var acte1 = bms.a(date3, 2);\n> bms.po(periode1, acte1);</strong>\n<em>Object {\n    s = Date {Mon Apr 22 2013 00:00:00 GMT+0200 (CEST)},\n    e = Date {Sat Apr 19 2014 00:00:00 GMT+0200 (CEST)},\n    l = 363\n}</em>\n<strong>> bms.po(periode1, acte1).l;</strong>\n<em>363</em>\n</pre>",
        "* Méthode pour formater un objet `Date` (sans l'heure) en texte lisible.<br>\nCette méthode a été remplacée par [bms.cf(d, [format])](#bms.cf).\n         * @deprecated en version 0.0.1, replacée par `bms.cf`, à retirer en version 1.0.0\n         * @memberof  bms\n         * @public\n         * @since 0.0.0\n         * @param  {object} d   un objet `Date`\n         * @param  {string} [sep] un caractère de séparation (optionnel)\n         * @return {string}     une date formatée\n         * @example <pre>\n<strong>> var date = bms.d(21, 4, 2014);\n> bms.df(date);</strong>\n<em>\"21 avril 2014\"</em>\n<strong>> bms.df(date, '/');</strong>\n<em>\"21/4/2014\"</em>\n<strong>> bms.df(date, '-');</strong>\n<em>\"21-4-2014\"</em>\n</pre>"
    ],
    "functions": [],
    "classes": []
}