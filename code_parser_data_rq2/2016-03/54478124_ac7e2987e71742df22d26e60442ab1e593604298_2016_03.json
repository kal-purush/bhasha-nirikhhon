{
    "identifiers": [
        "name",
        "graph",
        "get",
        "name",
        "update",
        "name",
        "start",
        "end",
        "end",
        "end",
        "graph",
        "get",
        "start",
        "graph",
        "update",
        "start",
        "end",
        "graph",
        "get",
        "start",
        "el",
        "end",
        "a",
        "add",
        "el",
        "addNode",
        "x",
        "x",
        "end",
        "node",
        "graph",
        "get",
        "node",
        "start",
        "end",
        "graph",
        "get",
        "start",
        "a",
        "end",
        "a",
        "x",
        "x",
        "graph",
        "keys",
        "key",
        "graph",
        "keys",
        "val",
        "graph",
        "get",
        "x",
        "ret",
        "append",
        "key",
        "val",
        "ret"
    ],
    "literals": [
        "''"
    ],
    "variables": [
        "graph",
        "end",
        "a",
        "a",
        "ret"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "need to implement as much graph algorithm as possible (DFS, distance, etc ...)"
    ],
    "docstrings": [
        "\"\"\"Representaion of a Graph of pages\"\"\"",
        "\"\"\"\n        :param name: name of the Node\n        \"\"\"",
        "\"\"\"\n        :param name: name of the starting node\n        :param ends: name of the ending point or set of names\n        \"\"\"",
        "\"\"\"\n        :param name: name of the Node\n        :return: True if the graph has the Node\n        \"\"\"",
        "\"\"\"\n        :param start: start point of the edge\n        :param end: end point of the edge\n        :return: True if the graph has the Edge\n        \"\"\"",
        "\"\"\"\n        :return: set of all Node\n        \"\"\"",
        "\"\"\"\n        :return: set of all Node\n        \"\"\""
    ],
    "functions": [
        "addNode",
        "addConnexions",
        "hasNode",
        "hasEdge",
        "nodes",
        "edges"
    ],
    "classes": [
        "Graph"
    ]
}