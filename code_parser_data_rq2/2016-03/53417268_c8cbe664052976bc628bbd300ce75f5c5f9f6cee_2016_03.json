{
    "identifiers": [
        "absolute_import",
        "division",
        "print_function",
        "unicode_literals",
        "six",
        "numpy",
        "np",
        "skimage",
        "filters",
        "threshold_otsu",
        "skimage",
        "measure",
        "find_contours",
        "numpy",
        "testing",
        "assert_allclose",
        "algebraic",
        "fit_ellipse",
        "image",
        "image",
        "mode",
        "min_length",
        "image",
        "ndim",
        "threshold_otsu",
        "image",
        "image",
        "thresh",
        "find_contours",
        "binary",
        "fully_connected",
        "len",
        "contours",
        "ValueError",
        "c",
        "c",
        "contours",
        "len",
        "c",
        "min_length",
        "np",
        "nan",
        "c",
        "contours",
        "xr",
        "yr",
        "xc",
        "yc",
        "fit_ellipse",
        "c",
        "T",
        "mode",
        "mode",
        "np",
        "np",
        "isnan",
        "xr",
        "yr",
        "xc",
        "yc",
        "c",
        "T",
        "np",
        "sum",
        "xc",
        "x",
        "xr",
        "yc",
        "y",
        "yr",
        "len",
        "c",
        "residual",
        "r",
        "residual",
        "xr",
        "yr",
        "xc",
        "yc",
        "r",
        "np",
        "linalg",
        "LinAlgError",
        "result",
        "image3d",
        "center_atol",
        "image3d",
        "ndim",
        "np",
        "mean",
        "image3d",
        "axis",
        "find_ellipse",
        "image",
        "mode",
        "np",
        "mean",
        "image3d",
        "axis",
        "find_ellipse",
        "image",
        "mode",
        "center_atol",
        "np",
        "mean",
        "image3d",
        "axis",
        "find_ellipse",
        "image",
        "mode",
        "assert_allclose",
        "xc",
        "yc",
        "zc",
        "xc2",
        "yc2",
        "zc2",
        "rtol",
        "atol",
        "center_atol",
        "err_msg",
        "zr",
        "yr",
        "xr",
        "zc",
        "yc",
        "xc"
    ],
    "literals": [
        "'ellipse_aligned'",
        "'high'",
        "'No contours found'",
        "'ellipse_aligned'",
        "'ellipse_aligned'",
        "'ellipse_aligned'",
        "'Found centers have inconsistent values.'"
    ],
    "variables": [
        "thresh",
        "binary",
        "contours",
        "contours",
        "result",
        "residual",
        "_",
        "x",
        "y",
        "r",
        "result",
        "residual",
        "image",
        "yr",
        "xr",
        "yc",
        "xc",
        "image",
        "zr",
        "xr2",
        "zc",
        "xc2",
        "image",
        "zr2",
        "yr2",
        "zc2",
        "yc2"
    ],
    "comments": [
        "eliminate short contours",
        "fit circles to the rest, keep the one with lowest residual deviation",
        "Y, X projection, use y radius because resonant scanning in x direction.",
        "Z, X projection",
        "Z, Y projection (noisy with resonant scanning)"
    ],
    "docstrings": [
        "\"\"\" Thresholds the image, finds the longest contour and fits an ellipse\n    to this contour.\n\n    Parameters\n    ----------\n    image : 2D numpy array of numbers\n    mode : {'ellipse', 'ellipse_aligned', 'circle'}\n    min_length : number\n        minimum length of contour\n\n    Returns\n    -------\n    yr, xr, yc, xc when dimension order was y, x (common)\n    xr, yr, xc, yc when dimension order was x, y\n    \"\"\"",
        "\"\"\" Finds ellipses in all three projections of the 3D image and returns\n    center coordinates and priciple radii.\n\n    The function uses the YX projection for the yr, xr, yc, xc and the ZX\n    projection for zr, xc. The ZY projection can be used for sanity checking\n    the found center.\n\n    Parameters\n    ----------\n    image3d : 3D numpy array of numbers\n    center_atol : float, optional\n        the maximum absolute tolerance for the difference between the found\n        centers, Default None\n\n    Returns\n    -------\n    zr, yr, xr, zc, yc, xc\n    \"\"\""
    ],
    "functions": [
        "find_disks",
        "find_ellipse",
        "find_ellipsoid"
    ],
    "classes": []
}