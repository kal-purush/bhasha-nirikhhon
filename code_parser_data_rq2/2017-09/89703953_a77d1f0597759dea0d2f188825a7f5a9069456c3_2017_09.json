{
    "identifiers": [
        "selinon",
        "StoragePool",
        "f8a_jobs",
        "handlers",
        "BaseHandler",
        "f8a_worker",
        "storages",
        "AmazonS3",
        "BaseHandler",
        "repositories",
        "ecosystem",
        "bucket_name",
        "object_key",
        "StoragePool",
        "get_connected_storage",
        "repo",
        "repositories",
        "repo",
        "repo",
        "ValueError",
        "log",
        "error",
        "format",
        "config",
        "repo",
        "format",
        "e",
        "repo_ecosystem",
        "repo_name",
        "repo_name",
        "replace",
        "s3",
        "retrieve_dict",
        "obj",
        "dependency_snapshot",
        "get",
        "get",
        "x",
        "get",
        "x",
        "dependencies",
        "packages",
        "package_list",
        "append",
        "packages",
        "e",
        "log",
        "error",
        "format",
        "repo_name",
        "repo_name",
        "reason",
        "e",
        "ecosystem",
        "package_list",
        "log",
        "info",
        "AmazonS3",
        "bucket_name",
        "bucket_name",
        "s3_dest",
        "connect",
        "s3_dest",
        "store_dict",
        "results",
        "object_key"
    ],
    "literals": [
        "'S3GitHubManifestMetadata'",
        "'ecosystem'",
        "'repo_name'",
        "'Invalid configuration, skipping: {config}'",
        "'{e}/{repo_name}/dependency_snapshot.json'",
        "'/'",
        "':'",
        "'details'",
        "'runtime'",
        "'name'",
        "'Unable to collect dependencies for {repo_name}: {reason}'",
        "'ecosystem'",
        "'package_list'",
        "\"Storing aggregated list of packages in S3\""
    ],
    "variables": [
        "s3",
        "package_list",
        "repo_ecosystem",
        "repo_name",
        "obj",
        "dependency_snapshot",
        "dependencies",
        "packages",
        "results",
        "s3_dest"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\" Aggregate package names from GitHub manifests.\n\n        :param repositories: a list of repositories\n        :param ecosystem: ecosystem, will appear in the resulting JSON file\n        :param bucket_name: name of the bucket where to put the resulting JSON file\n        :param object_key: object key of the resulting JSON file\n        \"\"\""
    ],
    "functions": [
        "execute"
    ],
    "classes": [
        "AggregateGitHubManifestPackages"
    ]
}