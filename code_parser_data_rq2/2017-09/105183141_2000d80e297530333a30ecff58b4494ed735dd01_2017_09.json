{
    "identifiers": [
        "Text",
        "Security",
        "Cryptography",
        "MirzaCryptoHelpers",
        "Cryptography",
        "plainBytes",
        "password",
        "plainBytes",
        "ArgumentNullException",
        "nameof",
        "plainBytes",
        "IsNullOrEmpty",
        "password",
        "ArgumentNullException",
        "nameof",
        "password",
        "AesCryptoServiceProvider",
        "aes",
        "Key",
        "CreatePassword",
        "password",
        "aes",
        "IV",
        "_iv",
        "aes",
        "CreateEncryptor",
        "result",
        "crypto",
        "TransformFinalBlock",
        "plainBytes",
        "plainBytes",
        "Length",
        "result",
        "result",
        "cipherBytes",
        "password",
        "cipherBytes",
        "ArgumentNullException",
        "nameof",
        "cipherBytes",
        "IsNullOrEmpty",
        "password",
        "ArgumentNullException",
        "nameof",
        "password",
        "AesCryptoServiceProvider",
        "aes",
        "Key",
        "CreatePassword",
        "password",
        "aes",
        "IV",
        "_iv",
        "aes",
        "CreateDecryptor",
        "result",
        "crypto",
        "TransformFinalBlock",
        "cipherBytes",
        "cipherBytes",
        "Length",
        "result",
        "result",
        "plainText",
        "password",
        "IsNullOrEmpty",
        "plainText",
        "ArgumentNullException",
        "nameof",
        "plainText",
        "IsNullOrEmpty",
        "password",
        "ArgumentNullException",
        "nameof",
        "password",
        "Encrypt",
        "GetUTF8Bytes",
        "plainText",
        "password",
        "resultBytes",
        "Convert",
        "ToBase64String",
        "resultBytes",
        "result",
        "cipherText",
        "password",
        "IsNullOrEmpty",
        "cipherText",
        "ArgumentNullException",
        "nameof",
        "cipherText",
        "IsNullOrEmpty",
        "password",
        "ArgumentNullException",
        "nameof",
        "password",
        "Decrypt",
        "Convert",
        "FromBase64String",
        "cipherText",
        "password",
        "resultBytes",
        "GetUTF8String",
        "resultBytes",
        "result",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "MD5",
        "Create",
        "md5",
        "ComputeHash",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetMd5",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "SHA1",
        "Create",
        "sha1",
        "ComputeHash",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha1",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "SHA256",
        "Create",
        "sha256",
        "ComputeHash",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha256",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "SHA384",
        "Create",
        "sha384",
        "ComputeHash",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha384",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "SHA512",
        "Create",
        "sha512",
        "ComputeHash",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha512",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "Convert",
        "ToBase64String",
        "GetMd5",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetMd5ToBase64",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "Convert",
        "ToBase64String",
        "GetSha1",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha1ToBase64",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "Convert",
        "ToBase64String",
        "GetSha256",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha256ToBase64",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "Convert",
        "ToBase64String",
        "GetSha384",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha384ToBase64",
        "GetUTF8Bytes",
        "text",
        "data",
        "data",
        "ArgumentNullException",
        "nameof",
        "data",
        "Convert",
        "ToBase64String",
        "GetSha512",
        "data",
        "text",
        "IsNullOrEmpty",
        "text",
        "ArgumentNullException",
        "nameof",
        "text",
        "GetSha512ToBase64",
        "GetUTF8Bytes",
        "text",
        "input",
        "UTF32Encoding",
        "UTF8",
        "GetBytes",
        "input",
        "input",
        "UTF32Encoding",
        "UTF8",
        "GetString",
        "input",
        "password",
        "iteration",
        "Rfc2898DeriveBytes",
        "password",
        "GetSha256",
        "password",
        "iteration",
        "rfc",
        "GetBytes"
    ],
    "literals": [
        "\"method: Encrypt; input cannot be null!\"",
        "\"method: Encrypt; password cannot be null!\"",
        "\"method: Decrypt; input cannot be null!\"",
        "\"method: Decrypt; password cannot be null!\"",
        "\"method: Encrypt; input cannot be null!\"",
        "\"method: Encrypt; password cannot be null!\"",
        "\"method: Decrypt; input cannot be null!\"",
        "\"method: Decrypt; password cannot be null!\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\"",
        "\"input cannot be null\""
    ],
    "variables": [
        "_iv",
        "result",
        "AesCryptoServiceProvider",
        "aes",
        "ICryptoTransform",
        "crypto",
        "result",
        "AesCryptoServiceProvider",
        "aes",
        "ICryptoTransform",
        "crypto",
        "resultBytes",
        "result",
        "resultBytes",
        "result",
        "MD5",
        "md5",
        "SHA1",
        "sha1",
        "SHA256",
        "sha256",
        "SHA384",
        "sha384",
        "SHA512",
        "sha512",
        "Rfc2898DeriveBytes",
        "rfc"
    ],
    "comments": [
        "16-Bytes Static IV",
        "</summary>",
        "Encrypt plain bytes using AES Crypto Algorithm",
        "</summary>",
        "<param name=\"plainBytes\">Plain input in bytes as target encryption</param>",
        "<param name=\"password\">Password to encrypt</param>",
        "<returns>Encrypted plain bytes (cipher bytes). Returns null if failed</returns>",
        "<exception cref=\"ArgumentNullException\">plainBytes param cannot be null</exception>",
        "<exception cref=\"ArgumentNullException\">password param cannot be null</exception>",
        "Decrypt cipher bytes using AES Crypto Algorithm",
        "</summary>",
        "<param name=\"cipherBytes\">Cipher bytes data to decrypt</param>",
        "<param name=\"password\">Password to decrypt</param>",
        "<returns>Decrypted data / Plain bytes. Returns null if failed</returns>",
        "<exception cref=\"ArgumentNullException\">cipherBytes param cannot be null</exception>",
        "<exception cref=\"ArgumentNullException\">password param cannot be null</exception>",
        "Encrypt plain text using AES Crypto Algorithm",
        "</summary>",
        "<param name=\"plainText\">Plain input as target encryption</param>",
        "<param name=\"password\">Password to encrypt</param>",
        "<returns>Ciphertext in base64 string format. Returns null if failed</returns>",
        "<exception cref=\"ArgumentNullException\">plainText param cannot be null</exception>",
        "<exception cref=\"ArgumentNullException\">password param cannot be null</exception>",
        "Decrypt base64 string cipher text to plain text",
        "</summary>",
        "<param name=\"cipherText\">Base64 string cipher text</param>",
        "<param name=\"password\">Password to decrypt</param>",
        "<returns>Plain text. Returns null if failed</returns>",
        "<exception cref=\"ArgumentNullException\">cipherText param cannot be null</exception>",
        "<exception cref=\"ArgumentNullException\">password param cannot be null</exception>",
        "Get MD5 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get MD5 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-1 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-1 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-256 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-256 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-384 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-384 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-512 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-512 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get MD5 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get MD5 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-1 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-1 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-256 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-256 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-384 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-384 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes in base64 string</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Get SHA-512 hash from input bytes",
        "</summary>",
        "<param name=\"data\">Data in bytes</param>",
        "<returns>Hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">data param cannot be null</exception>",
        "Get SHA-512 hash from input string",
        "</summary>",
        "<param name=\"text\">Normal string</param>",
        "<returns>UTF-8 hashed bytes in base64 encoded string</returns>",
        "<exception cref=\"ArgumentNullException\">text param cannot be null</exception>",
        "Convert string to UTF8 bytes",
        "</summary>",
        "<param name=\"input\">String to convert</param>",
        "<returns>Utf-8 bytes</returns>",
        "Convert utf-8 bytes to string",
        "</summary>",
        "<param name=\"input\">Utf-8 bytes</param>",
        "<returns>Normal string</returns>",
        "Generate AES Key from password, salted using password hash",
        "and iterated using iteration counter",
        "</summary>",
        "<param name=\"password\">Normal string password</param>",
        "<param name=\"iteration\">Iteration counter. Recommended counter is 10,000</param>",
        "<returns>32 Bytes password generated by RFC2898 Derive Bytes</returns>",
        "size for MAX_AES_KEY"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "Encrypt",
        "Decrypt",
        "Encrypt",
        "Decrypt",
        "GetMd5",
        "GetMd5",
        "GetSha1",
        "GetSha1",
        "GetSha256",
        "GetSha256",
        "GetSha384",
        "GetSha384",
        "GetSha512",
        "GetSha512",
        "GetMd5ToBase64",
        "GetMd5ToBase64",
        "GetSha1ToBase64",
        "GetSha1ToBase64",
        "GetSha256ToBase64",
        "GetSha256ToBase64",
        "GetSha384ToBase64",
        "GetSha384ToBase64",
        "GetSha512ToBase64",
        "GetSha512ToBase64",
        "GetUTF8Bytes",
        "GetUTF8String",
        "CreatePassword"
    ],
    "classes": [
        "SymmetricCryptoHelpers"
    ]
}