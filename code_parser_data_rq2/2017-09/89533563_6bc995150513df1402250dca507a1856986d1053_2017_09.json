{
    "identifiers": [
        "os",
        "re",
        "sys",
        "logging",
        "pickle",
        "argparse",
        "pip",
        "pip",
        "get_installed_distributions",
        "item",
        "project_name",
        "item",
        "installed",
        "name",
        "name",
        "install_list",
        "need_install",
        "append",
        "name",
        "len",
        "need_install",
        "sys",
        "exit",
        "join",
        "need_install",
        "nltk",
        "numpy",
        "np",
        "tqdm",
        "tqdm",
        "scipy",
        "spatial",
        "distance",
        "cosine",
        "gensim",
        "models",
        "word2vec",
        "Word2Vec",
        "nltk",
        "tokenize",
        "sent_tokenize",
        "word_tokenize",
        "nltk",
        "corpus",
        "stopwords",
        "bs4",
        "BeautifulSoup",
        "bs",
        "logging",
        "basicConfig",
        "format",
        "level",
        "logging",
        "INFO",
        "os",
        "chdir",
        "Word2Vec",
        "load",
        "np",
        "load",
        "open",
        "lv_c",
        "pickle",
        "load",
        "lv_c",
        "lv_c",
        "close",
        "open",
        "ec",
        "pickle",
        "load",
        "ec",
        "ec",
        "close",
        "open",
        "g",
        "pickle",
        "load",
        "g",
        "g",
        "close",
        "os",
        "chdir",
        "xmlfile",
        "open",
        "xmlfile",
        "read",
        "bs",
        "text",
        "soup",
        "select",
        "x",
        "text",
        "strip",
        "x",
        "fulltext",
        "join",
        "sentences",
        "re",
        "sub",
        "case_report_text",
        "re",
        "sub",
        "case_report_text",
        "re",
        "sub",
        "case_report_text",
        "case_report_text",
        "soup",
        "select",
        "text",
        "pmid",
        "case_report_text",
        "IndexError",
        "word",
        "re",
        "findall",
        "value_regex",
        "word",
        "word",
        "replace",
        "value",
        "unit",
        "replace",
        "split",
        "RepresentsNum",
        "word",
        "unit",
        "unit",
        "word",
        "word",
        "upper",
        "different_words",
        "different_words",
        "features",
        "stopwords",
        "words",
        "s",
        "s",
        "replace",
        "replace",
        "ValueError",
        "sentence",
        "sentence",
        "sentence",
        "replace",
        "split",
        "sentence",
        "replace",
        "split",
        "word",
        "model",
        "word",
        "KeyError",
        "value",
        "unit",
        "value",
        "lower",
        "sample_substance_counts",
        "sample_substance_counts",
        "value",
        "lower",
        "cosine",
        "model",
        "value",
        "center",
        "model",
        "wv",
        "similarity",
        "value",
        "unit",
        "features",
        "word_list",
        "np",
        "array",
        "each",
        "word_list",
        "np",
        "append",
        "similarities",
        "cosine",
        "center",
        "model",
        "each",
        "KeyError",
        "np",
        "append",
        "similarities",
        "np",
        "array",
        "word_list",
        "similarities",
        "argmax",
        "case_report",
        "isinstance",
        "case_report",
        "is_dict",
        "case_report",
        "case_report",
        "case_report",
        "sentence",
        "sentence",
        "sent_tokenize",
        "report",
        "len",
        "sentence",
        "sentence",
        "sentences",
        "get_phrases",
        "sentence",
        "phrase",
        "phrases",
        "value",
        "value",
        "re",
        "findall",
        "lab_value_regex",
        "phrase",
        "lab_value_classifier",
        "classify",
        "classification_features",
        "value",
        "lv",
        "lv",
        "pos",
        "pos",
        "nltk",
        "pos_tag",
        "word_tokenize",
        "phrase",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "len",
        "pos",
        "pos",
        "lab_value",
        "word",
        "word",
        "phrase_words",
        "get_word_vector",
        "word",
        "re",
        "sub",
        "value_regex",
        "lab_value",
        "model",
        "unit",
        "strip",
        "word",
        "features_for_training",
        "word",
        "unit",
        "strip",
        "word",
        "phrase_words",
        "word",
        "entity_classifier",
        "classify",
        "feature",
        "word",
        "feature",
        "words_with_features",
        "word",
        "word",
        "words_with_labels",
        "word",
        "possible_substances",
        "word",
        "entity_classifier",
        "prob_classify",
        "feature",
        "prob",
        "word",
        "feature",
        "words_with_features",
        "word",
        "word",
        "words_with_probabilities",
        "probabilities",
        "phrase_words",
        "np",
        "argmax",
        "probabilities",
        "join",
        "possible_substances",
        "phrase_words",
        "most_similar_to_substance_center",
        "phrase_words",
        "lab_value",
        "substance",
        "lab_values",
        "append",
        "labValue",
        "is_dict",
        "pmid",
        "lab_values",
        "lab_values",
        "argparse",
        "ArgumentParser",
        "parser",
        "add_argument",
        "help",
        "parser",
        "parse_args",
        "sys",
        "exit",
        "args",
        "parse_args",
        "args",
        "extract",
        "args",
        "extract",
        "sys",
        "exit",
        "os",
        "listdir",
        "folder",
        "file_list",
        "sys",
        "exit",
        "os",
        "chdir",
        "folder",
        "each",
        "tqdm",
        "file_list",
        "xml_files",
        "append",
        "xml_to_text",
        "each",
        "each",
        "each",
        "xml_files",
        "each",
        "os",
        "chdir",
        "sent_tokenize",
        "each",
        "each",
        "tqdm",
        "xml_files",
        "sentence",
        "each",
        "case_report_sentences",
        "sentence",
        "each",
        "word_tokenize",
        "sentence",
        "sentence",
        "tqdm",
        "sentences",
        "model",
        "build_vocab",
        "sentence_words",
        "update",
        "each",
        "tqdm",
        "xml_files",
        "all_lab_values",
        "append",
        "get_lab_values",
        "each",
        "open",
        "encoding",
        "f",
        "each",
        "all_lab_values",
        "f",
        "write",
        "each",
        "value",
        "each",
        "key",
        "value",
        "value",
        "items",
        "f",
        "write",
        "key",
        "value",
        "f",
        "write",
        "f",
        "close",
        "sys",
        "exit",
        "main"
    ],
    "literals": [
        "r'([\\d.,]*[\\/]?[\\d.,]+)'",
        "'[^A-Za-z\\d]([\\d]+[\\d.,\\/]* ?[α-ωΑ-Ω\\w\\/]+( ?[A-Zα-ωΑ-Ω][a-zα-ωΑ-Ω]+)?( ?per \\w+)?)'",
        "\"numpy\"",
        "\"nltk\"",
        "\"scipy\"",
        "\"gensim\"",
        "\"tqdm\"",
        "\"beautifulsoup4\"",
        "\"Please install these Python packages first:\\n%s\"",
        "\"\\n\"",
        "'%(asctime)s : %(levelname)s : %(message)s'",
        "'files_to_be_loaded'",
        "'word_embedding'",
        "'center_of_drugs.npy'",
        "\"Lab_Value_Classifier.pickle\"",
        "\"rb\"",
        "\"Entity_Classifier.pickle\"",
        "\"rb\"",
        "'sample_substance_counts.pickle'",
        "'rb'",
        "'..'",
        "'xml'",
        "'p'",
        "' '",
        "'\\[[\\S]+\\]'",
        "''",
        "'[\\s]{2,}'",
        "' '",
        "'This is an Open Access article distributed '",
        "'under the terms of the Creative Commons Attribution '",
        "'License \\(\\), which permits unrestricted use, '",
        "'distribution, and reproduction in any medium, '",
        "'provided the original work is properly cited\\. '",
        "''",
        "'article-id'",
        "'PMID'",
        "'text'",
        "''",
        "'/'",
        "' '",
        "'starts_with_num'",
        "'has_divison'",
        "'/'",
        "'per'",
        "'ends_with_capital'",
        "'keyword'",
        "'none'",
        "'keyword'",
        "'english'",
        "'/'",
        "''",
        "','",
        "''",
        "';'",
        "' and '",
        "';'",
        "';'",
        "' and '",
        "', '",
        "', '",
        "'count'",
        "'count'",
        "'similarity_to_substance_center'",
        "'similarity_to_unit'",
        "'PMID'",
        "'text'",
        "'lab value'",
        "'NN'",
        "'NNS'",
        "'NNP'",
        "'JJ'",
        "'RBR'",
        "''",
        "''",
        "'positive'",
        "'positive'",
        "'-'",
        "''",
        "'lab value'",
        "'measured'",
        "'--extract'",
        "'EXTRACT is the name of a folder containing '",
        "'XML files of case reports to extract lab values from.'",
        "'No folder entered, please provide a folder containing XML files '",
        "'in the form of --extract FOLDER_NAME after extract_lab_values.py'",
        "'No such folder found or no files inside folder, exiting.'",
        "'Reading XML files'",
        "'..'",
        "'Preparing new files for training'",
        "'text'",
        "'extracting lab values\\n'",
        "'writing lab values to file\\n'",
        "'Lab Values.txt'",
        "'w'",
        "'utf-8'",
        "'PMID: '",
        "'\\n'",
        "'%s:\\t%s\\n'",
        "'\\n\\n'",
        "'__main__'"
    ],
    "variables": [
        "value_regex",
        "lab_value_regex",
        "installed",
        "install_list",
        "need_install",
        "model",
        "center",
        "lab_value_classifier",
        "entity_classifier",
        "sample_substance_counts",
        "text",
        "soup",
        "fulltext",
        "sentences",
        "case_report_text",
        "case_report_text",
        "case_report_text",
        "case_report_text",
        "pmid",
        "features",
        "value",
        "unit",
        "different_words",
        "features",
        "features",
        "features",
        "features",
        "features",
        "stop_words",
        "features",
        "features",
        "features",
        "features",
        "features",
        "similarities",
        "similarities",
        "similarities",
        "is_dict",
        "pmid",
        "report",
        "report",
        "lab_values",
        "sentences",
        "phrases",
        "lv",
        "lab_value",
        "phrase_words",
        "phrase_words",
        "substance",
        "unit",
        "check_embedding_exists",
        "words_with_features",
        "words_with_labels",
        "possible_substances",
        "words_with_probabilities",
        "probabilities",
        "substance",
        "substance",
        "substance",
        "substance",
        "labValue",
        "parser",
        "args",
        "args",
        "folder",
        "file_list",
        "check_if_folder_contains_file",
        "xml_files",
        "xml_files",
        "case_report_sentences",
        "sentences",
        "sentence_words",
        "all_lab_values"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "regular expression to extract the numeric value of a lab value",
        "regular expression to find potential lab values",
        "Just using it to check on installed packages",
        "Set up logging",
        "Load in pre-configured files",
        "Load in the pre-trained word2vec model",
        "Load in the vector most similar to the highest number of lab value substances",
        "Load in the classifier to determine whether or not something is a lab value.",
        "Load in the classifier to determine which word/s are being measured by the lab value found.",
        "A dictionary whose values are used for features in classification",
        "Stop words (the, and, to, of, etc.) to remove from being considered as substances",
        "remove any slashes and commas",
        "Check the format of the input",
        "Initialize the object to return",
        "Split up article into sentences that contain at least 6 characters.",
        "Split case report into sentences, split sentences into phrases, and search for lab values in each phrase",
        "Do the following if a lab value is found withing a phrase.",
        "Narrow down the possible words for what the lab value is measuring",
        "Narrow down further into words that have an embedding",
        "Find the unit the lab value is measured in",
        "Check if the unit has an embedding",
        "End up with the words that are classified as entities being measured by the specific lab value",
        "If no words have over 50% probability of being the measured entity, find the word with the highest probability",
        "Join all possible entities with '-'",
        "If there is no word embedding for the lab value unit, then find the word in the phrase most similar to 'center1'",
        "Main"
    ],
    "docstrings": [
        "\"\"\"\nCreated on Fri Aug 18 11:25:06 2017\n\n@author: Jack\n\"\"\"",
        "\"\"\"\n    This function takes a case report in XML format and extracts the PubMed ID\n    and the full text of the case report.\n    \"\"\"",
        "\"\"\"\n    Features used for classifying lab values.\n    \"\"\"",
        "\"\"\"\n    Determines whether or not a string represents a pure numeric value.\n    \n    \"\"\"",
        "\"\"\"\n    Separates a sentence into phrases using separators such as semicolons\n    (if semicolons are found), commas (if no semicolons are found), and 'and'.\n    \"\"\"",
        "\"\"\"\n    Features used for classifying whether or not a word is the entity being \n    measured by a specific lab value.\n    \"\"\"",
        "\"\"\"\n    Finds the most similar word to the substance_center vector from a list of words.\n    \n    \"word_list\" is a list of words that contains the most similar word to substance_center.\n    \n    \"\"\"",
        "\"\"\"\n    Returns a list of lab values, their units, and the substances they describe.\n    Prints \"No lab values found in report\" if no lab values are found.\n    \n    Input \"case_report\" is an article in a string format or a dictionary with \n    key 'PMID' containing the PubMed ID and key 'text' containing the full_text \n    in string format.\n    \n    \"\"\""
    ],
    "functions": [
        "xml_to_text",
        "classification_features",
        "RepresentsNum",
        "get_phrases",
        "get_word_vector",
        "features_for_training",
        "most_similar_to_substance_center",
        "get_lab_values",
        "parse_args",
        "main"
    ],
    "classes": []
}