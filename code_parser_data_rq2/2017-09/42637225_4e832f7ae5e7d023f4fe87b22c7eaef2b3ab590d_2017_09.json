{
    "identifiers": [
        "print_function",
        "logging",
        "logging",
        "getLogger",
        "gi",
        "gi",
        "require_version",
        "gi",
        "repository",
        "Gtk",
        "Gdk",
        "GLib",
        "time",
        "pympress",
        "ui",
        "widget",
        "name",
        "issubclass",
        "widget",
        "Gtk",
        "Actionable",
        "Gdk",
        "EventType",
        "KEY_PRESS",
        "name",
        "Gdk",
        "keyval_name",
        "keyval",
        "name",
        "upper",
        "shortcut_key",
        "Gdk",
        "EventType",
        "BUTTON_PRESS",
        "widget",
        "event_box",
        "editing",
        "editing",
        "swap_label_for_entry",
        "restore_current_label",
        "NotImplementedError",
        "name",
        "NotImplementedError",
        "widget",
        "editing",
        "Gdk",
        "EventType",
        "KEY_PRESS",
        "Gdk",
        "keyval_name",
        "keyval",
        "lower",
        "replace",
        "name",
        "name",
        "validate",
        "restore_label",
        "name",
        "cancel",
        "restore_label",
        "more_actions",
        "name",
        "NotImplementedError",
        "NotImplementedError",
        "editing",
        "swap_label_for_entry",
        "editing",
        "restore_label",
        "EditableLabel",
        "builder",
        "PageNumber",
        "builder",
        "load_widgets",
        "hb_cur",
        "remove",
        "spin_cur",
        "eb_cur",
        "num_pages",
        "num_pages",
        "label_last",
        "set_text",
        "format",
        "num_pages",
        "spin_cur",
        "set_range",
        "num_pages",
        "spin_cur",
        "get_buffer",
        "get_text",
        "spin_cur",
        "get_value",
        "ui",
        "UI",
        "_instance",
        "doc",
        "page_nb",
        "GLib",
        "idle_add",
        "ui",
        "UI",
        "notify_page_change",
        "name",
        "name",
        "spin_cur",
        "set_value",
        "name",
        "spin_cur",
        "set_value",
        "max_page_number",
        "name",
        "spin_cur",
        "set_value",
        "spin_cur",
        "get_value",
        "name",
        "spin_cur",
        "set_value",
        "spin_cur",
        "get_value",
        "Gtk",
        "SpinButton",
        "do_key_press_event",
        "spin_cur",
        "widget",
        "editing",
        "Gtk",
        "SpinButton",
        "do_scroll_event",
        "spin_cur",
        "ui",
        "UI",
        "stop_editing_time",
        "hb_cur",
        "remove",
        "label_cur",
        "spin_cur",
        "show",
        "hb_cur",
        "add",
        "spin_cur",
        "hb_cur",
        "reorder_child",
        "spin_cur",
        "spin_cur",
        "grab_focus",
        "spin_cur",
        "set_value",
        "label_cur",
        "get_text",
        "spin_cur",
        "select_region",
        "label_cur",
        "hb_cur",
        "hb_cur",
        "remove",
        "spin_cur",
        "hb_cur",
        "pack_start",
        "label_cur",
        "hb_cur",
        "reorder_child",
        "label_cur",
        "cur_nb",
        "cur_nb",
        "label_cur",
        "set_text",
        "cur",
        "restore_label",
        "EditableLabel",
        "Gtk",
        "Entry",
        "builder",
        "ett",
        "EstimatedTalkTime",
        "builder",
        "load_widgets",
        "label_ett",
        "set_text",
        "format",
        "divmod",
        "ett",
        "eb_ett",
        "entry_ett",
        "get_text",
        "n",
        "strip",
        "n",
        "text",
        "split",
        "t",
        "t",
        "ValueError",
        "logger",
        "error",
        "_",
        "format",
        "text",
        "IndexError",
        "m",
        "s",
        "label_ett",
        "set_text",
        "format",
        "divmod",
        "est_time",
        "name",
        "Gtk",
        "Entry",
        "do_key_press_event",
        "entry_ett",
        "ui",
        "UI",
        "stop_editing_slide",
        "entry_ett",
        "set_text",
        "format",
        "divmod",
        "est_time",
        "entry_ett",
        "select_region",
        "eb_ett",
        "remove",
        "label_ett",
        "eb_ett",
        "add",
        "entry_ett",
        "entry_ett",
        "show",
        "entry_ett",
        "grab_focus",
        "eb_ett",
        "get_child",
        "child",
        "label_ett",
        "eb_ett",
        "remove",
        "child",
        "eb_ett",
        "add",
        "label_ett"
    ],
    "literals": [
        "'Gtk'",
        "'3.0'",
        "''",
        "'kp_'",
        "''",
        "'return'",
        "'enter'",
        "'escape'",
        "'G'",
        "\"/{}\"",
        "'home'",
        "'end'",
        "'left'",
        "'right'",
        "\"{:02}:{:02}\"",
        "'T'",
        "\"0\"",
        "':'",
        "\"Invalid time (mm or mm:ss expected), got \\\"{}\\\"\"",
        "\"{:02}:{:02}\"",
        "\"{:02}:{:02}\""
    ],
    "variables": [
        "logger",
        "shortcut_key",
        "event_box",
        "editing",
        "name",
        "name",
        "label_cur",
        "label_last",
        "eb_cur",
        "hb_cur",
        "spin_cur",
        "max_page_number",
        "shortcut_key",
        "event_box",
        "max_page_number",
        "page_nb",
        "page_nb",
        "editing",
        "editing",
        "cur",
        "label_time",
        "label_ett",
        "eb_ett",
        "est_time",
        "entry_ett",
        "shortcut_key",
        "event_box",
        "text",
        "t",
        "m",
        "s",
        "s",
        "est_time",
        "editing",
        "child",
        "editing"
    ],
    "comments": [
        "page_number.py",
        "",
        "Copyright 2017 Cimbali <me@cimba.li>",
        "",
        "This program is free software; you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation; either version 2 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program; if not, write to the Free Software",
        "Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,",
        "MA 02110-1301, USA.",
        ": single uppercase character `str` containing the key used as a shortcut for editing this button",
        ": :class:`~Gtk.EventBox` around the label, used to sense clicks",
        ": `bool` tracking whether we are currently editing the label.",
        "A button or menu item, etc. directly connected to this action",
        "If we clicked on the Event Box then don't toggle, just enable.",
        "Perform the state toggle",
        ": Slide counter :class:`~Gtk.Label` for the current slide.",
        ": Slide counter :class:`~Gtk.Label` for the last slide.",
        ": :class:`~Gtk.EventBox` associated with the slide counter label in the Presenter window.",
        ": :class:`~Gtk.HBox` containing the slide counter label in the Presenter window.",
        ": :class:`~Gtk.SpinButton` used to switch to another slide by typing its number.",
        ": `int` holding the maximum page number in the document",
        "Initially (from XML) both the spinner and the current page label are visible.",
        "TODO setup a better callback",
        "Replace label with entry",
        ": Elapsed time :class:`~Gtk.Label`.",
        ": Estimated talk time :class:`~Gtk.Label` for the talk.",
        ": :class:`~Gtk.EventBox` associated with the estimated talk time.",
        ": Estimated talk time, `int` in seconds.",
        ": :class:`~Gtk.Entry` used to set the estimated talk time.",
        "TODO a callback for timer?",
        "Set entry text",
        "Replace label with entry"
    ],
    "docstrings": [
        "\"\"\"\n:mod:`pympress.editable_label` -- A label that can be swapped out for an editable entry\n---------------------------------------------------------------------------------------\n\"\"\"",
        "\"\"\" Manage events on the current slide label/entry.\n\n        This function triggers replacing the label with an entry when clicked or otherwise toggled.\n\n        Args:\n            widget (:class:`~Gtk.Widget`):  the widget in which the event occured\n            event (:class:`~Gtk.Event` or None):  the event that occured, None if tf we called from a menu item\n            name (`str`): name of the key in the casae of a key press\n\n        Returns:\n            `bool`: whether the event was consumed\n        \"\"\"",
        "\"\"\" Manage key presses for the editable label.\n\n        If we are editing the label, intercept some key presses (to validate or cancel editing or other specific behaviour),\n        otherwise pass the key presses on to the button for normal behaviour.\n\n        Args:\n            widget (:class:`~Gtk.Widget`):  the widget which has received the event.\n            event (:class:`~Gdk.Event`):  the GTK event.\n\n        Returns:\n            `bool`: whether the event was consumed\n        \"\"\"",
        "\"\"\" Perform the actual work of starting the editing.\n        \"\"\"",
        "\"\"\" Make sure that the editable label is not in entry mode.\n        If it is an entry, then replace it with the label.\n        \"\"\"",
        "\"\"\" Start the editing of the label if it is disabled.\n        \"\"\"",
        "\"\"\" Disable the editing of the label if it was enabled.\n        \"\"\"",
        "\"\"\" Load all the widgets we need from the spinner.\n\n        Args:\n            builder (:class:`~pympress.builder.Builder`): A builder from which to load widgets\n        \"\"\"",
        "\"\"\" Set the max number of pages, both on display and as the range of values for the spinner.\n\n        Args:\n            num_pages (`int`): The maximum page number\n        \"\"\"",
        "\"\"\" Get the page number from the spinner and go to that page\n        \"\"\"",
        "\"\"\" Make the UI re-display the pages from before editing the current page.\n        \"\"\"",
        "\"\"\" Implement directions (left/right/home/end) keystrokes, otherwise pass on to :func:`~Gtk.SpinButton.do_key_press_event()`\n        \"\"\"",
        "\"\"\" Scroll event. Pass it on to the spin button if we're currently editing the page number.\n\n        Args:\n            widget (:class:`~Gtk.Widget`):  the widget which has received the event.\n            event (:class:`~Gdk.Event`):  the GTK event.\n\n        Returns:\n            `bool`: whether the event was consumed\n        \"\"\"",
        "\"\"\" Perform the actual work of starting the editing.\n        \"\"\"",
        "\"\"\" Make sure that the current page number is displayed in a label and not in an entry.\n        If it is an entry, then replace it with the label.\n        \"\"\"",
        "\"\"\" Update the displayed page numbers.\n\n        Args:\n            cur_nb (`int`): The current page number, in documentation numbering (range [0..max - 1])\n        \"\"\"",
        "\"\"\" Setup the talk time.\n\n        Args:\n            builder (builder.Builder): The builder from which to load widgets.\n            ett (`int`): the estimated time for the talk, in seconds.\n        \"\"\"",
        "\"\"\" Update estimated talk time from the input/\n        \"\"\"",
        "\"\"\" Pass on keystrokes to :func:`~Gtk.Entry.do_key_press_event()`\n        \"\"\"",
        "\"\"\" Perform the actual work of starting the editing.\n        \"\"\"",
        "\"\"\" Make sure that the current page number is displayed in a label and not in an entry.\n        If it is an entry, then replace it with the label.\n        \"\"\""
    ],
    "functions": [
        "on_label_event",
        "validate",
        "cancel",
        "more_actions",
        "on_keypress",
        "swap_label_for_entry",
        "restore_label",
        "start_editing",
        "stop_editing",
        "set_last",
        "validate",
        "cancel",
        "more_actions",
        "on_scroll",
        "swap_label_for_entry",
        "restore_label",
        "update_page_numbers",
        "validate",
        "more_actions",
        "swap_label_for_entry",
        "restore_label"
    ],
    "classes": [
        "EditableLabel",
        "PageNumber",
        "EstimatedTalkTime"
    ]
}