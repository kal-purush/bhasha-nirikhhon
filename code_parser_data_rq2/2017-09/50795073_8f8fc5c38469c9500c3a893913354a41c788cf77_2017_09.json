{
    "identifiers": [
        "os",
        "time",
        "sqlite3",
        "logging",
        "logging",
        "getLogger",
        "database",
        "tableName",
        "columns",
        "database",
        "connect",
        "tableName",
        "columns",
        "join",
        "s",
        "s",
        "columns",
        "tableName",
        "columnString",
        "cursor",
        "execute",
        "executeString",
        "sqlite3",
        "OperationalError",
        "cursor",
        "execute",
        "cursor",
        "execute",
        "close",
        "sqlite3",
        "connect",
        "database_file",
        "database",
        "cursor",
        "cursor",
        "close",
        "database",
        "close",
        "cursor",
        "database",
        "key",
        "key",
        "keys",
        "join",
        "k",
        "key",
        "k",
        "k",
        "key",
        "keys",
        "format",
        "tableName",
        "format",
        "selection",
        "connect",
        "i",
        "cursor",
        "execute",
        "selectionString",
        "o",
        "o",
        "obj",
        "close",
        "objs",
        "sqlite3",
        "DatabaseError",
        "e",
        "logger",
        "info",
        "logger",
        "info",
        "i",
        "close",
        "connect",
        "time",
        "sleep",
        "close",
        "e",
        "key",
        "getObjects",
        "key",
        "obj",
        "objs",
        "o",
        "append",
        "c",
        "v",
        "c",
        "v",
        "columns",
        "obj",
        "o",
        "key",
        "getObjects",
        "key",
        "len",
        "objs",
        "key",
        "getObjects",
        "key",
        "objs",
        "IndexError",
        "key",
        "value",
        "save",
        "overwriteOldest",
        "key",
        "keys",
        "key",
        "values",
        "value",
        "time",
        "time",
        "len",
        "key",
        "keys",
        "len",
        "columns",
        "ValueError",
        "join",
        "columns",
        "format",
        "tableName",
        "format",
        "join",
        "columns",
        "format",
        "join",
        "i",
        "i",
        "values",
        "connect",
        "i",
        "cursor",
        "execute",
        "selectionString",
        "database",
        "commit",
        "logger",
        "info",
        "value",
        "close",
        "sqlite3",
        "OperationalError",
        "e",
        "logger",
        "info",
        "time",
        "sleep",
        "sqlite3",
        "DatabaseError",
        "e",
        "logger",
        "info",
        "logger",
        "info",
        "i",
        "close",
        "connect",
        "time",
        "sleep",
        "close",
        "e",
        "os",
        "path",
        "isfile",
        "database_file",
        "os",
        "remove",
        "database_file",
        "database_file",
        "tableName",
        "columns"
    ],
    "literals": [
        "\"value\"",
        "\", \"",
        "\" text\"",
        "\"value\"",
        "\"time_stamp\"",
        "\" AND \"",
        "\"%s = '%s'\"",
        "\"SELECT * FROM {} \"",
        "\" WHERE {} \"",
        "\" ORDER BY time_stamp\"",
        "\"There seems to be an issue with the database, trying to read again.\"",
        "\"Attempt no %i\"",
        "\"value\"",
        "\"time_stamp\"",
        "\"The length of the given key doesn't match the number of columns in the table. The following columns (excluding value and time_stamp) are part of the table: %s\"",
        "\", \"",
        "\"INSERT INTO {} \"",
        "\" ({}) \"",
        "\", \"",
        "\" VALUES ({})\"",
        "\", \"",
        "\"'%s'\"",
        "\"Added value %s to database\"",
        "\"Database locked, waiting.\"",
        "\"There seems to be an issue with the database, trying to write again.\"",
        "\"Attempt no %i\""
    ],
    "variables": [
        "logger",
        "database_file",
        "tableName",
        "columns",
        "columnString",
        "executeString",
        "database",
        "cursor",
        "columns",
        "selection",
        "selectionString",
        "obj",
        "objs",
        "objs",
        "o",
        "objs",
        "objs",
        "columns",
        "values",
        "selectionString"
    ],
    "comments": [
        "Standard imports",
        "Logger",
        "try to aviod database malform problems",
        "WAL doesn't work on network filesystems",
        "check if number of columns matches. By default, there is no error if not, but better be save than sorry."
    ],
    "docstrings": [
        "'''\nImplementation for CMS analyses\n'''",
        "'''\n        Will create a table with name tableName, with the provided columns (as a list) and two additional columns: value and time_stamp\n        '''",
        "'''CREATE TABLE %s (%s, time_stamp real )'''",
        "'''PRAGMA journal_mode = DELETE'''",
        "'''PRAGMA synchronus = 2'''",
        "'''\n        Get all entries in the database matching the provided key.\n        '''",
        "'''\n        new DB structure. key needs to be a python dictionary\n        '''"
    ],
    "functions": [
        "connect",
        "close",
        "getObjects",
        "getDicts",
        "contains",
        "getObject",
        "add",
        "resetDatabase"
    ],
    "classes": [
        "database"
    ]
}