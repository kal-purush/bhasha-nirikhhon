{
    "identifiers": [
        "Collections",
        "Generic",
        "Linq",
        "Microsoft",
        "Extensions",
        "Primitives",
        "Microsoft",
        "Extensions",
        "Configuration",
        "IConfigurationProvider",
        "ChainedConfigurationSource",
        "source",
        "source",
        "ArgumentNullException",
        "nameof",
        "source",
        "source",
        "Configuration",
        "ArgumentNullException",
        "nameof",
        "source",
        "Configuration",
        "_config",
        "source",
        "Configuration",
        "key",
        "value",
        "value",
        "_config",
        "key",
        "IsNullOrEmpty",
        "value",
        "key",
        "value",
        "_config",
        "key",
        "value",
        "_config",
        "GetReloadToken",
        "earlierKeys",
        "parentPath",
        "parentPath",
        "_config",
        "_config",
        "GetSection",
        "parentPath",
        "section",
        "GetChildren",
        "keys",
        "AddRange",
        "children",
        "Select",
        "c",
        "Key",
        "keys",
        "Concat",
        "earlierKeys",
        "OrderBy",
        "k",
        "ConfigurationKeyComparer",
        "Instance"
    ],
    "literals": [],
    "variables": [
        "IConfiguration",
        "_config",
        "section",
        "children",
        "keys"
    ],
    "comments": [
        "Copyright (c) .NET Foundation. All rights reserved.",
        "Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information.",
        "Chained implementation of <see cref=\"IConfigurationProvider\"/>",
        "</summary>",
        "Initialize a new instance from the source configuration.",
        "</summary>",
        "<param name=\"source\">The source configuration.</param>",
        "Tries to get a configuration value for the specified key.",
        "</summary>",
        "<param name=\"key\">The key.</param>",
        "<param name=\"value\">The value.</param>",
        "<returns><c>True</c> if a value for the specified key was found, otherwise <c>false</c>.</returns>",
        "Sets a configuration value for the specified key.",
        "</summary>",
        "<param name=\"key\">The key.</param>",
        "<param name=\"value\">The value.</param>",
        "Returns a change token if this provider supports change tracking, null otherwise.",
        "</summary>",
        "<returns></returns>",
        "Loads configuration values from the source represented by this <see cref=\"IConfigurationProvider\"/>.",
        "</summary>",
        "Returns the immediate descendant configuration keys for a given parent path based on this",
        "<see cref=\"IConfigurationProvider\"/>'s data and the set of keys returned by all the preceding",
        "<see cref=\"IConfigurationProvider\"/>s.",
        "</summary>",
        "<param name=\"earlierKeys\">The child keys returned by the preceding providers for the same parent path.</param>",
        "<param name=\"parentPath\">The parent path.</param>",
        "<returns>The child keys.</returns>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "ChainedConfigurationProvider",
        "TryGet",
        "IChangeToken",
        "GetReloadToken",
        "Load",
        "GetChildKeys"
    ],
    "classes": [
        "ChainedConfigurationProvider"
    ]
}