{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "random",
        "rd",
        "itertools",
        "permutations",
        "n",
        "vmax",
        "len",
        "villes",
        "n",
        "rd",
        "randrange",
        "vmax",
        "rd",
        "randrange",
        "vmax",
        "x",
        "y",
        "villes",
        "villes",
        "append",
        "x",
        "y",
        "np",
        "array",
        "villes",
        "chemin",
        "n",
        "elem",
        "chemin",
        "elem",
        "n",
        "elem",
        "normal",
        "normal",
        "append",
        "elem",
        "k",
        "n",
        "k",
        "normal",
        "normal",
        "append",
        "k",
        "normal",
        "pts",
        "i",
        "j",
        "np",
        "sqrt",
        "pts",
        "i",
        "pts",
        "j",
        "pts",
        "i",
        "pts",
        "j",
        "chemin",
        "d",
        "len",
        "chemin",
        "matrice_distances",
        "n",
        "chemin",
        "k",
        "n",
        "s",
        "matrice_distances",
        "chemin",
        "k",
        "chemin",
        "k",
        "s",
        "villes",
        "len",
        "villes",
        "villes",
        "i",
        "j",
        "j",
        "i",
        "n",
        "ville_origine",
        "pts",
        "append",
        "x",
        "y",
        "distance",
        "pts",
        "i",
        "j",
        "j",
        "n",
        "i",
        "n",
        "m",
        "d",
        "len",
        "d",
        "i",
        "i",
        "k",
        "i",
        "m",
        "L",
        "len",
        "N",
        "rd",
        "randint",
        "len",
        "N",
        "chemin",
        "append",
        "N",
        "pop",
        "j",
        "population",
        "append",
        "chemin",
        "longueur_chemin",
        "chemin",
        "d",
        "population",
        "p",
        "e",
        "p",
        "ordre",
        "append",
        "e",
        "np",
        "array",
        "ordre",
        "argsort",
        "p",
        "i",
        "len",
        "p",
        "p",
        "pop",
        "e",
        "arg",
        "len",
        "arg",
        "p",
        "append",
        "p_tri",
        "e",
        "c",
        "rd",
        "randint",
        "len",
        "c",
        "rd",
        "randint",
        "len",
        "c",
        "c",
        "i",
        "c",
        "j",
        "c",
        "j",
        "c",
        "i",
        "p",
        "proba",
        "d",
        "i",
        "len",
        "p",
        "rd",
        "random",
        "proba",
        "muter_chemin",
        "p",
        "i",
        "p",
        "i",
        "longueur_chemin",
        "p",
        "i",
        "d",
        "c1",
        "c2",
        "i",
        "len",
        "c1",
        "c",
        "append",
        "c1",
        "i",
        "i",
        "len",
        "c2",
        "len",
        "c2",
        "c",
        "append",
        "c2",
        "i",
        "normaliser_chemin",
        "c",
        "n",
        "c",
        "p",
        "d",
        "i",
        "len",
        "p",
        "croiser",
        "p",
        "i",
        "p",
        "i",
        "p",
        "append",
        "croisement",
        "longueur_chemin",
        "croisement",
        "d",
        "villes",
        "m",
        "proba",
        "g",
        "creer_population",
        "m",
        "matrice_distances",
        "plt",
        "ion",
        "e",
        "pop",
        "l",
        "append",
        "e",
        "l",
        "sort",
        "plt",
        "ylabel",
        "plt",
        "xlabel",
        "plt",
        "title",
        "plt",
        "gca",
        "ax",
        "plot",
        "l",
        "c",
        "i",
        "g",
        "generation",
        "reduire",
        "pop",
        "nouvelle_generation",
        "pop",
        "matrice_distances",
        "muter_population",
        "pop",
        "matrice_distances",
        "e",
        "pop",
        "l",
        "append",
        "e",
        "plt",
        "gca",
        "l",
        "sort",
        "ax",
        "plot",
        "l",
        "c",
        "plt",
        "draw",
        "plt",
        "pause",
        "wframe",
        "pop",
        "liste",
        "remove",
        "liste",
        "l",
        "generer_villes",
        "n",
        "calculer_distances",
        "villes",
        "creer_population",
        "matrice_distances",
        "algo_genetique",
        "villes"
    ],
    "literals": [
        "'lengh of paths'",
        "'<--- faster              paths            longer ----->'",
        "\"Travelling salesman genetic\"",
        "'b'",
        "'b'"
    ],
    "variables": [
        "villes",
        "x",
        "y",
        "normal",
        "n",
        "s",
        "n",
        "pts",
        "x",
        "y",
        "population",
        "k",
        "L",
        "N",
        "chemin",
        "j",
        "ordre",
        "arg",
        "p_tri",
        "i",
        "j",
        "p",
        "i",
        "c",
        "c",
        "croisement",
        "pop",
        "generation",
        "l",
        "ax",
        "wframe",
        "l",
        "ax",
        "wframe",
        "liste",
        "n",
        "villes",
        "matrice_distances",
        "pop",
        "t"
    ],
    "comments": [
        "-*- coding: utf-8 -*-",
        "Copyright (C) 2017 Lucas Robidou",
        "",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see <http://www.gnu.org/licenses/>.",
        "PS: For any question or any suggestion, please contact me at:",
        "luc.robidou@gmail.com",
        "but du programme:",
        "determiner, par un algorithme genetique, le meilleur moyen de passer",
        "par n points points de passage",
        "----- import des modules necessaires ---------------------------------",
        "----- definition des fonctions ---------------------------------------",
        "on complete",
        "nombre de points",
        "liste des points",
        "on \"vide\" p",
        "Ã©quipe bleue",
        "----- corps du programme principal -----------------------------------"
    ],
    "docstrings": [
        "\"\"\"\n        Return an array that contain list like [x,y] where x and y are \n        the coordinates of one city.\n    \n        :param a: Number of cities.\n        :param b: The maximum each coordinate can take.\n        :type a: integer\n        :type b: integer\n        :return: The coorinates of cities\n        :rtype: array\n    \"\"\"",
        "\"\"\"\n    but: generer une position initiale\n    entree: rien\n    sortie: tuple\n    \"\"\"",
        "\"\"\"\n    but: creer un chemin valide de taille n\n    entree: liste, entier\n    sortie: liste\n    \"\"\"",
        "\"\"\"\n    but: caluler la distance entre deux points\n    entree: liste, entier, entier\n    sortie: entier\n    \"\"\"",
        "\"\"\"\n    but: calculer la longueur d'un chemin\n    entree: liste, liste de liste\n    sortie: entier\n    \"\"\"",
        "\"\"\"\n    but: calculer la matrice representant les distances de villes\n    entree: liste\n    sortie: liste de liste\n    \"\"\""
    ],
    "functions": [
        "generer_villes",
        "ville_origine",
        "normaliser_chemin",
        "distance",
        "longueur_chemin",
        "calculer_distances",
        "creer_population",
        "reduire",
        "muter_chemin",
        "muter_population",
        "croiser",
        "nouvelle_generation",
        "algo_genetique"
    ],
    "classes": []
}