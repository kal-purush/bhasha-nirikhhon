{
    "identifiers": [
        "sys",
        "textwrap",
        "args",
        "args",
        "len",
        "args",
        "args",
        "__doc__",
        "args",
        "ValueError",
        "footnotes",
        "EXPLANATION",
        "code",
        "KeyError",
        "format",
        "code",
        "short_form",
        "textwrap",
        "dedent",
        "explanation",
        "rstrip",
        "sys",
        "exit",
        "main",
        "sys",
        "argv"
    ],
    "literals": [
        "'100 Continue'",
        "'101 Switching Protocols'",
        "'102 Processing'",
        "'200 OK'",
        "'201 Created'",
        "'202 Accepted'",
        "'203 Non-Authoritative Information (since HTTP/1.1)'",
        "'204 No Content'",
        "'205 Reset Content'",
        "'206 Partial Content (RFC 7233)'",
        "'207 Multi-Status (WebDAV; RFC 4918)'",
        "'208 Already Reported (WebDAV; RFC 5842)'",
        "'226 IM Used (RFC 3229)'",
        "'300 Multiple Choices'",
        "'301 Moved Permanently '",
        "'302 Found '",
        "'303 See Other  (since HTTP/1.1)'",
        "'304 Not Modified (RFC 7232)'",
        "'305 Use Proxy (since HTTP/1.1)'",
        "'306 Switch Proxy'",
        "'307 Temporary Redirect (since HTTP/1.1)'",
        "'308 Permanent Redirect (RFC 7538)'",
        "'400 Bad Request'",
        "'401 Unauthorized (RFC 7235)'",
        "'402 Payment Required'",
        "'403 Forbidden '",
        "'404 Not Found '",
        "'405 Method Not Allowed'",
        "'406 Not Acceptable'",
        "'407 Proxy Authentication Required (RFC 7235'",
        "'408 Request Timeout'",
        "'409 Conflict'",
        "'410 Gone'",
        "'411 Length Required'",
        "'412 Precondition Failed (RFC 7232)'",
        "'413 Payload Too Large (RFC 7231)'",
        "'414 URI Too Long (RFC 7231)'",
        "'415 Unsupported Media Type'",
        "'416 Range Not Satisfiable (RFC 7233)'",
        "'417 Expectation Failed'",
        "\"418 I'm a teapot (RFC 2324)\"",
        "'421 Misdirected Request (RFC 7540)'",
        "'422 Unprocessable Entity (WebDAV; RFC 4918)'",
        "'423 Locked (WebDAV; RFC 4918)'",
        "'424 Failed Dependency (WebDAV; RFC 4918)'",
        "'426 Upgrade Required'",
        "'428 Precondition Required (RFC 6585)'",
        "'429 Too Many Requests (RFC 6585)'",
        "'431 Request Header Fields Too Large (RFC 6585)'",
        "'451 Unavailable For Legal Reasons'",
        "'500 Internal Server Error'",
        "'501 Not Implemented'",
        "'502 Bad Gateway'",
        "'503 Service Unavailable'",
        "'504 Gateway Timeout'",
        "'505 HTTP Version Not Supported'",
        "'506 Variant Also Negotiates (RFC 2295)'",
        "'507 Insufficient Storage (WebDAV; RFC 4918)'",
        "'508 Loop Detected (WebDAV; RFC 5842)'",
        "'510 Not Extended (RFC 2774)'",
        "'511 Network Authentication Required (RFC 6585)'",
        "'103 Checkpoint'",
        "'420 Method Failure (Spring Framework) or Enhance Your Calm (Twitter)'",
        "'450 Blocked by Windows Parental Controls (Microsoft)'",
        "'498 Invalid Token (Esri)'",
        "'499 Token Required (Esri)'",
        "'509 Bandwidth Limit Exceeded (Apache Web Server)'",
        "'530 Site is frozen'",
        "'598 (Informal convention) Network read timeout error'",
        "'440 Login Time-out'",
        "'449 Retry With or (nginx) 449 Client Closed Request'",
        "'444 No Response'",
        "'495 SSL Certificate Error'",
        "'496 SSL Certificate Required'",
        "'497 HTTP Request Sent to HTTPS Port'",
        "'520 Unknown Error'",
        "'521 Web Server Is Down'",
        "'522 Connection Timed Out'",
        "'523 Origin Is Unreachable'",
        "'524 A Timeout Occurred'",
        "'525 SSL Handshake Failed'",
        "'526 Invalid SSL Certificate'",
        "'527 Railgun Error'",
        "'-h'",
        "'--help'",
        "'-help'",
        "'Argument must be an integer, and HTTP code'",
        "'Sorry, HTTP code {} is not recognised'",
        "'__main__'"
    ],
    "variables": [
        "EXPLANATION",
        "code",
        "short_form",
        "explanation"
    ],
    "comments": [
        "! /usr/bin/env python3",
        "A dictionary of HTTP code to [<short form>, <explanation>]",
        "vim: set tabstop=8 softtabstop=4 shiftwidth=4 expandtab:"
    ],
    "docstrings": [
        "\"\"\"Usage: httpcode <code>\n\nFor instance:\n\n    httpcode 401\n\nTODO: support -s/--short to just give the short form\nTODO: support multiple HTTP codes on the same command line\n\nNote: the texts presented by this program have been taken from\n  https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\nwhich itself is licensed under a Creative Commons Attribution Share-Alike 3.0\nUnsupported License. There is, of course, more information available at that\npage than we present here.\n\nCC-Attr-ShareAlike-3.0:\nhttps://en.wikipedia.org/wiki/Wikipedia:Text_of_Creative_Commons_Attribution-ShareAlike_3.0_Unported_License\n\"\"\"",
        "\"\"\"\\\n    The server has received the request headers and the client should\n    proceed to send the request body (in the case of a request for which\n    a body needs to be sent; for example, a POST request). Sending a\n    large request body to a server after a request has been rejected for\n    inappropriate headers would be inefficient. To have a server check\n    the request's headers, a client must send |Expect: 100-continue| as\n    a header in its initial request and receive a |100 Continue| status\n    code in response before sending the body. The response |417 Expectation\n    Failed| indicates the request should not be continued.\n    \"\"\"",
        "\"\"\"\\\n    The requester has asked the server to switch protocols and the\n    server has agreed to do so.\n    \"\"\"",
        "\"\"\"\\\n    A WebDAV request may contain many sub-requests involving file operations,\n    requiring a long time to complete the request. This code indicates that the\n    server has received and is processing the request, but no response is\n    available yet.  This prevents the client from timing out and assuming\n    the request was lost.\n    \"\"\"",
        "\"\"\"\\\n    Standard response for successful HTTP requests. The actual response\n    will depend on the request method used. In a GET request, the\n    response will contain an entity corresponding to the requested\n    resource. In a POST request, the response will contain an entity\n    describing or containing the result of the action.\n    \"\"\"",
        "\"\"\"\\\n    The request has been fulfilled, resulting in the creation of a new\n    resource.\n    \"\"\"",
        "\"\"\"\\\n    The request has been accepted for processing, but the processing has\n    not been completed. The request might or might not be eventually\n    acted upon, and may be disallowed when processing occurs.\n    \"\"\"",
        "\"\"\"\\\n    The server is a transforming proxy (e.g. a Web accelerator) that received a\n    200 OK from its origin, but is returning a modified version of the origin's\n    response.\n    \"\"\"",
        "\"\"\"\\\n    The server successfully processed the request and is not returning\n    any content.\n    \"\"\"",
        "\"\"\"\\\n    The server successfully processed the request, but is not returning\n    any content. Unlike a 204 response, this response requires that the\n    requester reset the document view.\n    \"\"\"",
        "\"\"\"\\\n    The server is delivering only part of the resource (byte serving) due to a\n    range header sent by the client. The range header is used by HTTP clients\n    to enable resuming of interrupted downloads, or split a download into\n    multiple simultaneous streams.\n    \"\"\"",
        "\"\"\"\\\n    The message body that follows is an XML message and can contain a number of\n    separate response codes, depending on how many sub-requests were made.\n    \"\"\"",
        "\"\"\"\\\n    The members of a DAV binding have already been enumerated in a preceding\n    part of the (multistatus) response, and are not being included again.\n    \"\"\"",
        "\"\"\"\\\n    The server has fulfilled a request for the resource, and the\n    response is a representation of the result of one or more\n    instance-manipulations applied to the current instance.\n    \"\"\"",
        "\"\"\"\\\n    Indicates multiple options for the resource from which the client\n    may choose (via agent-driven content negotiation).\n    For example, this code could be used to present multiple video format\n    options, to list files with different filename extensions , or to suggest\n    word-sense disambiguation.\n    \"\"\"",
        "\"\"\"\\\n    This and all future requests should be directed to the given URI.\n    \"\"\"",
        "\"\"\"\\\n    This is an example of industry practice contradicting the standard.\n    The HTTP/1.0 specification (RFC 1945) required the client to perform\n    a temporary redirect (the original describing phrase was \"Moved\n    Temporarily\"),  but popular browsers implemented 302 with the functionality\n    of a 303 See Other.  Therefore, HTTP/1.1 added status codes 303 and 307 to\n    distinguish between the two behaviours.  However, some Web applications and\n    frameworks use the 302 status code as if it were the 303.\n    \"\"\"",
        "\"\"\"\\\n    The response to the request can be found under another URI using a GET\n    method. When received in response to a POST (or PUT/DELETE), the\n    client should presume that the server has received the data and\n    should issue a redirect with a separate GET message.\n    \"\"\"",
        "\"\"\"\\\n    Indicates that the resource has not been modified since the version\n    specified by the request headers If-Modified-Since or If-None-Match. In\n    such case, there is no need to retransmit the resource since the client\n    still has a previously-downloaded copy.\n    \"\"\"",
        "\"\"\"\\\n    The requested resource is available only through a proxy, the address for\n    which is provided in the response. Many HTTP clients (such as Mozilla and\n    Internet Explorer) do not correctly handle responses with this status\n    code, primarily for security reasons.\n    \"\"\"",
        "\"\"\"\\\n    No longer used. Originally meant \"Subsequent requests should use the\n    specified proxy.\"\n    \"\"\"",
        "\"\"\"\\\n    In this case, the request should be repeated with another URI;\n    however, future requests should still use the original URI. In\n    contrast to how 302 was historically implemented, the request method\n    is not allowed to be changed when reissuing the original request.\n    For example, a POST request should be repeated using another POST\n    request.\n    \"\"\"",
        "\"\"\"\\\n    The request and all future requests should be repeated using another\n    URI. 307 and 308 parallel the behaviors of 302 and 301, but /do not\n    allow the HTTP method to change/. So, for example, submitting a form\n    to a permanently redirected resource may continue smoothly.\n    \"\"\"",
        "\"\"\"\\\n    The server cannot or will not process the request due to an apparent\n    client error (e.g., malformed request syntax, size too large,\n    invalid request message framing, or deceptive request routing).\n    \"\"\"",
        "\"\"\"\\\n    Similar to /403 Forbidden/, but specifically for use when\n    authentication is required and has failed or has not yet been\n    provided. The response must include a WWW-Authenticate header field\n    containing a challenge applicable to the requested resource. See\n    Basic access authentication and Digest access authentication.\n    401 semantically means \"unauthenticated\", i.e. the user does not have the\n    necessary credentials.\n    Note: Some sites issue HTTP 401 when an IP address is banned from the\n    website (usually the website domain) and that specific address is\n    refused permission to access a website.\n    \"\"\"",
        "\"\"\"\\\n    Reserved for future use. The original intention was that this code\n    might be used as part of some form of digital cash or micropayment scheme,\n    as proposed for example by GNU Taler, but that has not yet happened, and\n    this code is not usually used. Google Developers API uses this status if a\n    particular developer has exceeded the daily limit on requests.\n    \"\"\"",
        "\"\"\"\\\n    The request was valid, but the server is refusing action. The user\n    might not have the necessary permissions for a resource, or may need\n    an account of some sort.\n    \"\"\"",
        "\"\"\"\\\n    The requested resource could not be found but may be available in\n    the future. Subsequent requests by the client are permissible.\n    \"\"\"",
        "\"\"\"\\\n    A request method is not supported for the requested resource; for\n    example, a GET request on a form that requires data to be presented\n    via POST , or a PUT request on a read-only resource.\n    \"\"\"",
        "\"\"\"\\\n    The requested resource is capable of generating only content not\n    acceptable according to the Accept headers sent in the request.\n    See Content negotiation.\n    \"\"\"",
        "\"\"\"\\\n   )\n    The client must first authenticate itself with the proxy.\n    \"\"\"",
        "\"\"\"\\\n    The server timed out waiting for the request. According to HTTP\n    specifications: \"The client did not produce a request within the\n    time that the server was prepared to wait. The client MAY repeat the\n    request without modifications at any later time.\"\n    \"\"\"",
        "\"\"\"\\\n    Indicates that the request could not be processed because of\n    conflict in the request, such as an edit conflict between multiple\n    simultaneous updates.\n    \"\"\"",
        "\"\"\"\\\n    Indicates that the resource requested is no longer available and\n    will not be available again. This should be used when a resource has\n    been intentionally removed and the resource should be purged. Upon\n    receiving a 410 status code, the client should not request the\n    resource in the future. Clients such as search engines should remove\n    the resource from their indices.  Most use cases do not require clients and\n    search engines to purge the resource, and a \"404 Not Found\" may be used\n    instead.\n    \"\"\"",
        "\"\"\"\\\n    The request did not specify the length of its content, which is\n    required by the requested resource.\n    \"\"\"",
        "\"\"\"\\\n    The server does not meet one of the preconditions that the requester\n    put on the request.\n    \"\"\"",
        "\"\"\"\\\n    The request is larger than the server is willing or able to process.\n    Previously called \"Request Entity Too Large\".\n    \"\"\"",
        "\"\"\"\\\n    The URI  provided was too long for the server to process. Often the result\n    of too much data being encoded as a query-string of a GET request, in which\n    case it should be converted to a POST request.  Called \"Request-URI Too\n    Long\" previously.\n    \"\"\"",
        "\"\"\"\\\n    The request entity has a media type which the server or resource does not\n    support. For example, the client uploads an image as image/svg+xml, but the\n    server requires that images use a different format.\n    \"\"\"",
        "\"\"\"\\\n    The client has asked for a portion of the file (byte serving), but the\n    server cannot supply that portion. For example, if the client asked for a\n    part of the file that lies beyond the end of the file.\n    Called \"Requested Range Not Satisfiable\" previously.\n    \"\"\"",
        "\"\"\"\\\n    The server cannot meet the requirements of the Expect request-header\n    field.\n    \"\"\"",
        "\"\"\"\\\n    This code was defined in 1998 as one of the traditional IETF April Fools'\n    jokes, in RFC 2324 , /Hyper Text Coffee Pot Control Protocol/,\n    and is not expected to be implemented by actual HTTP servers. The\n    RFC specifies this code should be returned by teapots requested to\n    brew coffee. This HTTP status is used as an Easter egg in some websites,\n    including Google.com.\n    \"\"\"",
        "\"\"\"\\\n    The request was directed at a server that is not able to produce a\n    response (for example because of a connection reuse).\n    \"\"\"",
        "\"\"\"\\\n    The request was well-formed but was unable to be followed due to semantic\n    errors.\n    \"\"\"",
        "\"\"\"\\\n    The resource that is being accessed is locked.\n    \"\"\"",
        "\"\"\"\\\n    The request failed due to failure of a previous request (e.g., a PROPPATCH).\n    \"\"\"",
        "\"\"\"\\\n    The client should switch to a different protocol such as TLS/1.0, given in\n    the Upgrade header field.\n    \"\"\"",
        "\"\"\"\\\n    The origin server requires the request to be conditional. Intended to\n    prevent the 'lost update' problem, where a client GETs a resource's state,\n    modifies it, and PUTs it back to the server, when meanwhile a third party\n    has modified the state on the server, leading to a conflict.\"\n    \"\"\"",
        "\"\"\"\\\n    The user has sent too many requests in a given amount of time.\n    Intended for use with rate-limiting schemes.\n    \"\"\"",
        "\"\"\"\\\n    The server is unwilling to process the request because either an\n    individual header field, or all the header fields collectively, are\n    too large.\n    \"\"\"",
        "\"\"\"\\\n    (RFC 7725) A server operator has received a legal demand to deny access to a\n    resource or to a set of resources that includes the requested\n    resource.  The code 451 was chosen as a\n    reference to the novel /Fahrenheit 451 /.\n\n    Also used as \"451 Redirect\" in Exchange ActiveSync when either a more\n    efficient server is available or the server cannot access the users'\n    mailbox. The client is expected to re-run the HTTP AutoDiscover operation\n    to find a more appropriate server.\n    \"\"\"",
        "\"\"\"\\\n    A generic error message, given when an unexpected condition was\n    encountered and no more specific message is suitable.\n    \"\"\"",
        "\"\"\"\\\n    The server either does not recognize the request method, or it lacks\n    the ability to fulfil the request. Usually this implies future\n    availability (e.g., a new feature of a web-service API).\n    \"\"\"",
        "\"\"\"\\\n    The server was acting as a gateway or proxy and received an invalid\n    response from the upstream server.\n    \"\"\"",
        "\"\"\"\\\n    The server is currently unavailable (because it is overloaded or\n    down for maintenance). Generally, this is a temporary state.\n    \"\"\"",
        "\"\"\"\\\n    The server was acting as a gateway or proxy and did not receive a\n    timely response from the upstream server.\n    \"\"\"",
        "\"\"\"\\\n    The server does not support the HTTP protocol version used in the\n    request.\n    \"\"\"",
        "\"\"\"\\\n    Transparent content negotiation for the request results in a circular\n    reference.\n    \"\"\"",
        "\"\"\"\\\n    The server is unable to store the representation needed to complete\n    the request.\n    \"\"\"",
        "\"\"\"\\\n    The server detected an infinite loop while processing the request\n    (sent in lieu of 208 Already Reported).\n    \"\"\"",
        "\"\"\"\\\n    Further extensions to the request are required for the server to\n    fulfil it.\n    \"\"\"",
        "\"\"\"\\\n    The client needs to authenticate to gain network access. Intended\n    for use by intercepting proxies used to control access to the\n    network (e.g., \"captive portals\" used to require agreement to Terms of\n    Service before granting full Internet access via a Wi-Fi hotspot).\n    \"\"\"",
        "\"\"\"\\\n    Used in the resumable requests proposal to resume aborted PUT or POST\n    requests.\n\n    Also used as \"103 Early Hints\" to return some response headers before\n    entire HTTP response.\n    \"\"\"",
        "\"\"\"\\\n    420 Method Failure (Spring Framework)\n    A deprecated response used by the Spring Framework when a method has\n    failed.\n\n    420 Enhance Your Calm (Twitter)\n    Returned by version 1 of the Twitter Search and Trends API when the\n    client is being rate limited; versions 1.1 and later use the 429 Too\n    Many Requests  response code instead.\n    \"\"\"",
        "\"\"\"\\\n    The Microsoft extension code indicated when Windows Parental\n    Controls are turned on and are blocking access to the requested\n    webpage.\n    \"\"\"",
        "\"\"\"\\\n    Returned by ArcGIS for Server. Code 498 indicates an expired or otherwise\n    invalid token.\n    \"\"\"",
        "\"\"\"\\\n    Returned by ArcGIS for Server. Code 499 indicates that a token is required\n    but was not submitted.\n    \"\"\"",
        "\"\"\"\\\n    The server has exceeded the bandwidth specified by the server\n    administrator; this is often used by shared hosting providers to\n    limit the bandwidth of customers.\n    \"\"\"",
        "\"\"\"\\\n    Used by the Pantheon web platform to indicate a site that has been frozen\n    due to inactivity.\n    \"\"\"",
        "\"\"\"\\\n    Used by some HTTP proxies to signal a network read timeout behind\n    the proxy to a client in front of the proxy.\n    \"\"\"",
        "\"\"\"\\\n    The client's session has expired and must log in again.\n    \"\"\"",
        "\"\"\"\\\n    The server cannot honour the request because the user has not provided the\n    required information.\n\n    nginx Uses 449 when the client has closed the request before the server\n    could send a response.\n    \"\"\"",
        "\"\"\"\\\n    nginx: Used to indicate that the server has returned no information to the\n    client and closed the connection.\n    \"\"\"",
        "\"\"\"\\\n    nginx: An expansion of the 400 Bad Request  response code, used when\n    the client has provided an invalid client certificate.\n    \"\"\"",
        "\"\"\"\\\n    nginx: An expansion of the 400 Bad Request  response code, used when\n    a client certificate is required but not provided.\n    \"\"\"",
        "\"\"\"\\\n    nginx:  An expansion of the 400 Bad Request  response code, used when\n    the client has made a HTTP request to a port listening for HTTPS\n    requests.\n    \"\"\"",
        "\"\"\"\\\n    Cloudfare: The 520 error is used as a \"catch-all response for when the origin\n    server returns something unexpected\", listing connection resets,\n    large headers, and empty or invalid responses as common triggers.\n    \"\"\"",
        "\"\"\"\\\n    The origin server has refused the connection from Cloudflare.\n    \"\"\"",
        "\"\"\"\\\n    Cloudflare could not negotiate a TCP handshake with the origin server.\n    \"\"\"",
        "\"\"\"\\\n    Cloudflare could not reach the origin server; for example, if the\n    DNS records  for the origin server are incorrect.\n    \"\"\"",
        "\"\"\"\\\n    Cloudflare was able to complete a TCP connection to the origin\n    server, but did not receive a timely HTTP response.\n    \"\"\"",
        "\"\"\"\\\n    Cloudflare could not negotiate a SSL/TLS handshake with the origin server.\n    \"\"\"",
        "\"\"\"\\\n    Cloudflare could not validate the SSL/TLS certificate that the\n    origin server presented.\n    \"\"\"",
        "\"\"\"\\\n    Cloudfare: Error 527 indicates that the request timed out or failed after\n    the WAN connection had been established.\n    \"\"\""
    ],
    "functions": [
        "main"
    ],
    "classes": []
}