{
    "identifiers": [
        "Injectable",
        "Http",
        "Response",
        "RequestOptions",
        "URLSearchParams",
        "Systemunitmap",
        "Observable",
        "APP_SETTINGS",
        "Injectable",
        "http",
        "id",
        "RequestOptions",
        "APP_SETTINGS",
        "APP_SETTINGS",
        "id",
        "options",
        "res",
        "res",
        "searchArgs",
        "RequestOptions",
        "APP_SETTINGS",
        "searchArgs",
        "APP_SETTINGS",
        "options",
        "res",
        "res",
        "systemunitmap",
        "systemunitmap",
        "RequestOptions",
        "APP_SETTINGS",
        "APP_SETTINGS",
        "body",
        "options",
        "res",
        "res",
        "systemunitmap",
        "systemunitmap",
        "systemunitmap",
        "systemunitmap",
        "RequestOptions",
        "APP_SETTINGS",
        "APP_SETTINGS",
        "id",
        "body",
        "options",
        "res",
        "res",
        "error",
        "error",
        "Observable",
        "error"
    ],
    "literals": [
        "'@angular/core'",
        "'@angular/http'",
        "'./systemunitmap'",
        "'rxjs/Rx'",
        "'rxjs/add/operator/map'",
        "'rxjs/add/operator/catch'",
        "'../app.settings'",
        "string",
        "'/'",
        "'id'",
        "'/'",
        "'Server error'"
    ],
    "variables": [
        "options",
        "options",
        "body",
        "options",
        "id",
        "body",
        "options"
    ],
    "comments": [
        "pull out the ID",
        "TODO figure out a better error handler",
        "in a real world app, we may send the server to some remote logging infrastructure",
        "instead of just logging it to the console"
    ],
    "docstrings": [],
    "functions": [
        "getSystemunitmap",
        "getSystemunitmaps",
        "createSystemunitmap",
        "updateSystemunitmap",
        "handleError"
    ],
    "classes": [
        "SystemunitmapService"
    ]
}