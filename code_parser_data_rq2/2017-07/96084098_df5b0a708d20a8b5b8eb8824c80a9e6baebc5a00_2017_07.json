{
    "identifiers": [
        "ryu",
        "app_manager",
        "ryu",
        "controller",
        "ofp_event",
        "ryu",
        "controller",
        "handler",
        "CONFIG_DISPATCHER",
        "MAIN_DISPATCHER",
        "ryu",
        "controller",
        "handler",
        "set_ev_cls",
        "ryu",
        "ofproto",
        "ofproto_v1_3",
        "ryu",
        "lib",
        "packet",
        "packet",
        "ryu",
        "lib",
        "packet",
        "ethernet",
        "arp",
        "ipv4",
        "icmp",
        "ryu",
        "lib",
        "packet",
        "ether_types",
        "ryu",
        "topology",
        "switches",
        "ryu",
        "topology",
        "api",
        "get_switch",
        "get_link",
        "mapping",
        "host_number",
        "mapping",
        "host_list",
        "mapping",
        "mapping_list",
        "app_manager",
        "RyuApp",
        "ofproto_v1_3",
        "OFP_VERSION",
        "args",
        "kwargs",
        "SimpleSwitch13",
        "args",
        "kwargs",
        "set_ev_cls",
        "EventSwitchEnter",
        "ev",
        "get_switch",
        "topology_api_app",
        "dp_list",
        "switch_obj_list",
        "dp_list",
        "append",
        "dp",
        "get_link",
        "topology_api_app",
        "dp",
        "dp_list",
        "logger",
        "info",
        "dp",
        "id",
        "set_ev_cls",
        "ofp_event",
        "EventOFPSwitchFeatures",
        "CONFIG_DISPATCHER",
        "ev",
        "ev",
        "msg",
        "datapath",
        "datapath",
        "ofproto",
        "datapath",
        "ofproto_parser",
        "parser",
        "OFPMatch",
        "parser",
        "OFPActionOutput",
        "ofproto",
        "OFPP_CONTROLLER",
        "ofproto",
        "OFPCML_NO_BUFFER",
        "add_flow",
        "datapath",
        "match",
        "actions",
        "datapath",
        "priority",
        "match",
        "actions",
        "buffer_id",
        "logger",
        "info",
        "datapath",
        "ofproto",
        "datapath",
        "ofproto_parser",
        "parser",
        "OFPInstructionActions",
        "ofproto",
        "OFPIT_APPLY_ACTIONS",
        "actions",
        "buffer_id",
        "parser",
        "OFPFlowMod",
        "datapath",
        "datapath",
        "buffer_id",
        "buffer_id",
        "priority",
        "priority",
        "match",
        "match",
        "instructions",
        "inst",
        "parser",
        "OFPFlowMod",
        "datapath",
        "datapath",
        "priority",
        "priority",
        "match",
        "match",
        "instructions",
        "inst",
        "logger",
        "info",
        "mod",
        "datapath",
        "send_msg",
        "mod",
        "set_ev_cls",
        "ofp_event",
        "EventOFPPacketIn",
        "MAIN_DISPATCHER",
        "ev",
        "ev",
        "msg",
        "msg_len",
        "ev",
        "msg",
        "total_len",
        "logger",
        "debug",
        "ev",
        "msg",
        "msg_len",
        "ev",
        "msg",
        "total_len",
        "ev",
        "msg",
        "msg",
        "datapath",
        "datapath",
        "ofproto",
        "datapath",
        "ofproto_parser",
        "msg",
        "match",
        "packet",
        "Packet",
        "msg",
        "data",
        "pkt",
        "get_protocol",
        "ethernet",
        "ethernet",
        "pkt_eth",
        "pkt",
        "get_protocol",
        "arp",
        "arp",
        "pkt_arp",
        "logger",
        "info",
        "datapath",
        "id",
        "in_port",
        "pkt_arp",
        "src_ip",
        "pkt_arp",
        "dst_ip",
        "_handle_ingress_arp",
        "datapath",
        "in_port",
        "pkt_eth",
        "pkt_arp",
        "pkt",
        "get_protocol",
        "ipv4",
        "ipv4",
        "pkt",
        "get_protocol",
        "icmp",
        "icmp",
        "pkt_icmp",
        "logger",
        "info",
        "datapath",
        "id",
        "in_port",
        "pkt_ipv4",
        "src",
        "pkt_ipv4",
        "dst",
        "_handle_ingress_icmp",
        "datapath",
        "in_port",
        "pkt_eth",
        "pkt_ipv4",
        "pkt_icmp",
        "datapath",
        "in_port",
        "pkt_eth",
        "pkt_arp",
        "pkt_arp",
        "opcode",
        "arp",
        "ARP_REQUEST",
        "logger",
        "info",
        "host",
        "host_list",
        "host",
        "ip",
        "pkt_arp",
        "dst_ip",
        "host",
        "logger",
        "info",
        "temp_host",
        "ip",
        "temp_host",
        "mac",
        "packet",
        "Packet",
        "pkt",
        "add_protocol",
        "ethernet",
        "ethernet",
        "ethertype",
        "pkt_eth",
        "ethertype",
        "dst",
        "pkt_eth",
        "src",
        "src",
        "temp_host",
        "mac",
        "pkt",
        "add_protocol",
        "arp",
        "arp",
        "opcode",
        "arp",
        "ARP_REPLY",
        "src_mac",
        "temp_host",
        "mac",
        "src_ip",
        "temp_host",
        "ip",
        "dst_mac",
        "pkt_arp",
        "src_mac",
        "dst_ip",
        "pkt_arp",
        "src_ip",
        "_send_packet",
        "datapath",
        "in_port",
        "pkt",
        "datapath",
        "in_port",
        "pkt_eth",
        "pkt_ipv4",
        "pkt_icmp",
        "datapath",
        "ofproto_parser",
        "datapath",
        "id",
        "pkt_ipv4",
        "src",
        "pkt_ipv4",
        "dst",
        "pkt_eth",
        "src",
        "pkt_eth",
        "dst",
        "get_entry",
        "protocol",
        "src_ip",
        "src_mac",
        "dst_ip",
        "dst_mac",
        "entry",
        "vlan",
        "logger",
        "info",
        "entry",
        "protocol",
        "entry",
        "src_ip",
        "entry",
        "dst_ip",
        "entry",
        "src_mac",
        "entry",
        "dst_mac",
        "entry",
        "vlan",
        "parser",
        "OFPMatch",
        "eth_type",
        "eth_dst",
        "dst_mac",
        "eth_src",
        "src_mac",
        "ipv4_src",
        "src_ip",
        "ipv4_dst",
        "dst_ip",
        "parser",
        "OFPMatch",
        "vlan_vid",
        "vlan_id",
        "src_dpid",
        "dst_mac",
        "host_number",
        "dst_mac",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "parser",
        "OFPActionOutput",
        "add_flow",
        "datapath",
        "match",
        "action",
        "parser",
        "OFPActionPushVlan",
        "parser",
        "OFPActionSetField",
        "vlan_vid",
        "vlan_id",
        "parser",
        "OFPActionOutput",
        "parser",
        "OFPActionOutput",
        "parser",
        "OFPActionPopVlan",
        "dst_mac",
        "action_3",
        "append",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "action_3",
        "append",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "action_3",
        "append",
        "parser",
        "OFPActionOutput",
        "get_datapath",
        "get_datapath",
        "add_flow",
        "datapath",
        "match",
        "action_1",
        "add_flow",
        "datapath_2",
        "match_vlan",
        "action_2",
        "add_flow",
        "datapath_3",
        "match",
        "action_3",
        "src_dpid",
        "dst_mac",
        "host_number",
        "dst_mac",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "parser",
        "OFPActionOutput",
        "add_flow",
        "datapath",
        "match",
        "action",
        "parser",
        "OFPActionPushVlan",
        "parser",
        "OFPActionSetField",
        "vlan_vid",
        "vlan_id",
        "parser",
        "OFPActionOutput",
        "parser",
        "OFPActionOutput",
        "parser",
        "OFPActionPopVlan",
        "dst_mac",
        "action_3",
        "append",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "action_3",
        "append",
        "parser",
        "OFPActionOutput",
        "dst_mac",
        "action_3",
        "append",
        "parser",
        "OFPActionOutput",
        "get_datapath",
        "get_datapath",
        "add_flow",
        "datapath",
        "match",
        "action_1",
        "add_flow",
        "datapath_2",
        "match_vlan",
        "action_2",
        "add_flow",
        "datapath_3",
        "match",
        "action_3",
        "datapath",
        "in_port",
        "pkt",
        "logger",
        "info",
        "datapath",
        "ofproto",
        "datapath",
        "ofproto_parser",
        "pkt",
        "serialize",
        "pkt",
        "data",
        "parser",
        "OFPActionOutput",
        "port",
        "in_port",
        "parser",
        "OFPPacketOut",
        "datapath",
        "datapath",
        "buffer_id",
        "ofproto",
        "OFP_NO_BUFFER",
        "in_port",
        "ofproto",
        "OFPP_CONTROLLER",
        "actions",
        "actions",
        "data",
        "data",
        "datapath",
        "send_msg",
        "dpid",
        "dp",
        "dp_list",
        "dp",
        "id",
        "dpid",
        "dp",
        "protocol",
        "src_ip",
        "src_mac",
        "dst_ip",
        "dst_mac",
        "entry",
        "mapping_list",
        "entry",
        "src_ip",
        "src_ip",
        "entry",
        "dst_ip",
        "dst_ip",
        "entry",
        "src_mac",
        "src_mac",
        "entry",
        "dst_mac",
        "dst_mac",
        "entry",
        "protocol",
        "protocol",
        "entry",
        "entry",
        "entry",
        "vlan"
    ],
    "literals": [
        "'dpid=%s'",
        "'in add_flow'",
        "'mod=%s'",
        "\"packet truncated: only %s of %s bytes\"",
        "'in_port'",
        "\"arp packet in, dpid=%s, port=%s, src=%s, dst=%s\"",
        "\"icmp packet in, dpid=%s, port=%s, src=%s, dst=%s\"",
        "\"in arp handler\"",
        "'select host.ip=%s, host.mac=%s'",
        "'icmp'",
        "'match entry.protocol=%s, entry.src_ip=%s, dst_ip=%s, src_mac=%s, dst_mac=%s, vlan=%s'",
        "'00:00:00:00:00:01'",
        "'00:00:00:00:00:02'",
        "'00:00:00:00:00:03'",
        "'00:00:00:00:00:04'",
        "'00:00:00:00:00:05'",
        "'00:00:00:00:00:06'",
        "'00:00:00:00:00:04'",
        "'00:00:00:00:00:05'",
        "'00:00:00:00:00:06'",
        "'00:00:00:00:00:01'",
        "'00:00:00:00:00:02'",
        "'00:00:00:00:00:03'",
        "'in send packet'"
    ],
    "variables": [
        "dp_list",
        "OFP_VERSIONS",
        "topology_api_app",
        "switch_obj_list",
        "link_obj_list",
        "datapath",
        "ofproto",
        "parser",
        "match",
        "actions",
        "ofproto",
        "parser",
        "inst",
        "mod",
        "mod",
        "msg",
        "datapath",
        "ofproto",
        "parser",
        "in_port",
        "pkt",
        "pkt_eth",
        "pkt_arp",
        "pkt_ipv4",
        "pkt_icmp",
        "temp_host",
        "pkt",
        "parser",
        "src_dpid",
        "src_ip",
        "dst_ip",
        "src_mac",
        "dst_mac",
        "protocol",
        "entry",
        "vlan_id",
        "match",
        "match_vlan",
        "action",
        "action",
        "action",
        "action_1",
        "action_2",
        "action_3",
        "datapath_2",
        "datapath_3",
        "action",
        "action",
        "action",
        "action_1",
        "action_2",
        "action_3",
        "datapath_2",
        "datapath_3",
        "ofproto",
        "parser",
        "data",
        "actions"
    ],
    "comments": [
        "Copyright (C) 2011 Nippon Telegraph and Telephone Corporation.",
        "",
        "Licensed under the Apache License, Version 2.0 (the \"License\");",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an \"AS IS\" BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or",
        "implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License.",
        "when a new switch is connected",
        "install table-miss flow entry",
        "",
        "We specify NO BUFFER to max_len of the output action due to",
        "OVS bug. At this moment, if we specify a lesser number, e.g.,",
        "128, OVS will send Packet-In with invalid buffer_id and",
        "truncated packet data. In that case, we cannot output packets",
        "correctly.  The bug has been fixed in OVS v2.1.0.",
        "If you hit this you might want to increase",
        "the \"miss_send_length\" of your switch",
        "self.add_flow(datapath_2, 1, match, action_2)",
        "self.add_flow(datapath_2, 1, match_vlan, [parser.OFPActionOutput(2)])",
        "self.add_flow(datapath_2, 1, match, action_2)",
        "self.add_flow(datapath_2, 1, match_vlan, [parser.OFPActionOutput(1)])"
    ],
    "docstrings": [
        "'''\n        match_1 = parser.OFPMatch(eth_dst='00:00:00:00:00:02')\n        action_1 = [parser.OFPActionOutput(3)]\n        self.add_flow(datapath, 1, match_1, action_1)\n\n        match_2 = parser.OFPMatch(eth_dst='00:00:00:00:00:01')\n        action_2 = [parser.OFPActionOutput(2)]\n        self.add_flow(datapath, 1, match_2, action_2)\n        '''"
    ],
    "functions": [
        "get_topology_data",
        "switch_features_handler",
        "add_flow",
        "_packet_in_handler",
        "_handle_ingress_arp",
        "_handle_ingress_icmp",
        "_send_packet",
        "get_datapath",
        "get_entry",
        "get_vlan_id"
    ],
    "classes": [
        "SimpleSwitch13"
    ]
}