{
    "identifiers": [
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "raw_input",
        "command",
        "command",
        "e",
        "e",
        "os",
        "system",
        "command",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "temp_cmd",
        "os",
        "system",
        "str_install_nginx",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "depend_cmd",
        "os",
        "system",
        "temp_cmd",
        "os",
        "system",
        "temp_cmd",
        "os",
        "system",
        "temp_cmd",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "raw_input",
        "ans",
        "install_nginx_package",
        "ans",
        "install_nginx_source",
        "ans",
        "customs_cmd",
        "ans",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "raw_input",
        "ans",
        "os",
        "system",
        "temp_cmd",
        "ans",
        "customs_cmd",
        "ans",
        "os",
        "system",
        "temp_cmd",
        "raw_input",
        "pwd",
        "os",
        "system",
        "temp_cmd",
        "pwd",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "raw_input",
        "ans",
        "raw_input",
        "temp",
        "os",
        "system",
        "temp_cmd",
        "ans",
        "customs_cmd",
        "ans",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "raw_input",
        "ans",
        "raw_input",
        "temp_name",
        "raw_input",
        "temp_type",
        "raw_input",
        "temp_cffile",
        "temp_name",
        "temp_type",
        "temp_cffile",
        "os",
        "system",
        "temp_cmd",
        "ans",
        "customs_cmd",
        "ans",
        "os",
        "system",
        "temp_cmd",
        "os",
        "system",
        "temp_cmd",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "raw_input",
        "ans",
        "install_nginx",
        "ans",
        "install_httpd",
        "ans",
        "input",
        "i",
        "temp_num",
        "raw_input",
        "raw_input",
        "temp_name",
        "temp_ip",
        "cluster",
        "append",
        "e",
        "k",
        "v",
        "cluster",
        "iteritems",
        "v",
        "k",
        "os",
        "system",
        "temp_cmd",
        "x",
        "cluster",
        "iterkeys",
        "temp",
        "x",
        "os",
        "system",
        "temp",
        "install_pcmk",
        "raw_input",
        "temp_name",
        "os",
        "system",
        "temp_name",
        "temp",
        "os",
        "system",
        "temp_cmd",
        "os",
        "system",
        "os",
        "system",
        "os",
        "system",
        "raw_input",
        "ans",
        "install_pcmk",
        "ans",
        "install_main_webserver",
        "ans",
        "create_cluster",
        "ans",
        "create_resource_Virtual_IP",
        "ans",
        "create_resource_web_cluster",
        "ans",
        "create_constraint_resource",
        "ans",
        "disable_firewall",
        "ans",
        "customs_cmd",
        "ans",
        "e",
        "e",
        "os",
        "os",
        "getuid",
        "main",
        "e",
        "e"
    ],
    "literals": [
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"Enter `exit` to go out...\"",
        "\"[root@127.0.0.1] ~#: \"",
        "\"exit\"",
        "\"sudo\"",
        "\"Forwarding ...\"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"Choose one method to install nginx: \"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"You only can choose 1, 2 or 3.\"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"Choose one a method install: \"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"You only can choose 1, 2 or 3.\"",
        "\"Input new password for user hacluster created: \"",
        "\"echo \"",
        "\" | passwd --stdin hacluster\"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"Choose: \"",
        "\"1\"",
        "\"Input your ip address which you want make it to VIP: \"",
        "\"2\"",
        "\"3\"",
        "\"You only can choose 1, 2 or 3.\"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"Choose: \"",
        "\"1\"",
        "\"Input name's resource (default: Web_Cluster): \"",
        "\"\"",
        "\"Web_Cluster\"",
        "\"Input type's resource (default: ocf:heartbeat:nginx): \"",
        "\"\"",
        "\"ocf:heartbeat:nginx\"",
        "\"Input file config of resource (default: /etc/nginx/nginx.conf): \"",
        "\"\"",
        "\"/etc/nginx/nginx.conf\"",
        "\"2\"",
        "\"3\"",
        "\"You only can choose \"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"Choose: \"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"You only can choose 1, 2 or 3\"",
        "\"\"",
        "\"Input number node in cluster: \"",
        "\"Input name's node: \"",
        "\"Input ip's node: \"",
        "\" \"",
        "\"pcs cluster auth \"",
        "\" -u hacluster -p \"",
        "\"Processing create a cluster\"",
        "\"Input name's cluster (default: ha_cluster): \"",
        "\"\"",
        "\"ha_cluster\"",
        "\"pcs cluster setup --name \"",
        "\" \"",
        "\"Created done. \\n Starting all node ...\"",
        "\"echo =======================================================================================================\"",
        "\"echo ===                                          MAIN                                                   ===\"",
        "\"echo =======================================================================================================\"",
        "\"\\t Choose: \"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"4\"",
        "\"5\"",
        "\"6\"",
        "\"7\"",
        "\"8\"",
        "\"9\"",
        "\"You only can choose 1-9. \"",
        "\"You must run this script with sudo right.\""
    ],
    "variables": [
        "command",
        "temp_cmd",
        "str_install_nginx",
        "depend_cmd",
        "temp_cmd",
        "temp_cmd",
        "temp_cmd",
        "ans",
        "ans",
        "temp_cmd",
        "temp_cmd",
        "pwd",
        "temp_cmd",
        "ans",
        "temp",
        "temp_cmd",
        "ans",
        "temp_name",
        "temp_name",
        "temp_type",
        "temp_type",
        "temp_cffile",
        "temp_cffile",
        "temp_cmd",
        "temp_cmd",
        "temp_cmd",
        "ans",
        "cluster",
        "temp",
        "temp_num",
        "temp_name",
        "temp_ip",
        "e",
        "temp_cmd",
        "temp_name",
        "temp_name",
        "temp_cmd",
        "ans"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\n\techo \"[nginx]\" >> /etc/yum.repos.d/nginx.repo\n\techo \"name=nginx repo\" >> /etc/yum.repos.d/nginx.repo\n\techo \"baseurl=http://nginx.org/packages/mainline/centos/7/x86_64/\" >> /etc/yum.repos.d/nginx.repo\n\techo \"gpgcheck=0\" >> /etc/yum.repos.d/nginx.repo\n\techo \"enabled=1\" >> /etc/yum.repos.d/nginx.repo\n\t\"\"\"",
        "\"\"\"\n\tyum install nginx -y\n\tsystemctl start nginx\n\tsystemctl enable nginx\n\techo 'Install NGINX done.'\n\t\"\"\"",
        "\"\"\"\n\tSystem will being install NGINX version 1.11.13\n\tInstalling NGINX Dependencies\n\t\"\"\"",
        "\"\"\"\n\techo 'Git will being install on system'\n\tyum -y install gcc gcc-c++ make zlib-devel pcre-devel \\\n\topenssl-devel git wget geoip-devel epel-release git\n\t\"\"\"",
        "\"\"\"\n\techo 'Downloading source code of NGINX'\n\tcd /opt/downloads\n\twget http://nginx.org/download/nginx-1.13.0.tar.gz\n\ttar -zxf nginx-1.13.0.tar.gz\n\tcd nginx-1.13.0\n\t\"\"\"",
        "\"\"\"\n\t./configure --user=nginx --group=nginx \\\n\t--prefix=/etc/nginx \\\n\t--sbin-path=/usr/sbin/nginx \\\n\t--conf-path=/etc/nginx/nginx.conf \\\n\t--error-log-path=/var/log/nginx/error.log \\\n\t--http-log-path=/var/log/nginx/access.log \\\n\t--pid-path=/var/run/nginx.pid \\\n\t--lock-path=/var/run/nginx.lock \\\n\t--http-client-body-temp-path=/var/cache/nginx/client_temp \\\n\t--http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n\t--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n\t--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n\t--http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n\t--with-http_ssl_module \\\n\t--with-http_realip_module \\\n\t--with-http_addition_module \\\n\t--with-http_sub_module \\\n\t--with-http_dav_module \\\n\t--with-http_gunzip_module \\\n\t--with-http_gzip_static_module \\\n\t--with-http_random_index_module \\\n\t--with-http_secure_link_module \\\n\t--with-http_stub_status_module \\\n\t--with-mail \\\n\t--with-mail_ssl_module \\\n\t--with-file-aio \\\n\t--with-stream \\\n\t--with-http_geoip_module\n\tmake\n\tmake install\n\t\"\"\"",
        "\"\"\"\n\tuseradd -r nginx\n\tmkdir -p /var/cache/nginx/client_temp/\n\tchown nginx. /var/cache/nginx/client_temp/\n\techo '[Unit]' >> /lib/systemd/system/nginx.service\n\techo 'Description=The NGINX HTTP and reverse proxy server' >> /lib/systemd/system/nginx.service\n\techo 'After=syslog.target network.target remote-fs.target nss-lookup.target' >> /lib/systemd/system/nginx.service\n\techo '[Service]' >> /lib/systemd/system/nginx.service\n\techo 'Type=forking' >> /lib/systemd/system/nginx.service\n\techo 'PIDFile=/run/nginx.pid' >> /lib/systemd/system/nginx.service\n\techo 'ExecStartPre=/usr/sbin/nginx -t' >> /lib/systemd/system/nginx.service\n\techo 'ExecStart=/usr/sbin/nginx' >> /lib/systemd/system/nginx.service\n\techo 'ExecReload=/bin/kill -s HUP $MAINPID' >> /lib/systemd/system/nginx.service\n\techo 'ExecStop=/bin/kill -s QUIT $MAINPID' >> /lib/systemd/system/nginx.service\n\techo 'PrivateTmp=true' >> /lib/systemd/system/nginx.service\n\techo '[Install]' >> /lib/systemd/system/nginx.service\n\techo 'WantedBy=multi-user.target' >> /lib/systemd/system/nginx.service\n\tchmod a+rx /lib/systemd/system/nginx.service\n\tsystemctl start nginx\n\tsystemctl enable nginx\n\techo 'Install NGINX done.'F\n\t\"\"\"",
        "\"\"\"\n\t\t1. Installing from packages\n\t\t2. Installing from source code\n\t\t3. Customs\n\t\t4. Exit\n\t\t\"\"\"",
        "\"\"\"\n\t\t1. Install from packages\n\t\t2. Customs\n\t\t3. Exit\n\t\t\"\"\"",
        "\"\"\"\n\t\t\tclear\n\t\t\tyum update -y\n\t\t\techo 'Installing Apache...'\n\t\t\tyum install httpd -y\n\t\t\techo 'Installed Apache'\n\t\t\t\"\"\"",
        "\"\"\"\n\tclear\n\techo 'Installing pacemaker and corosync with some fence agents'\n\tyum install pcs fence-agents -y\n\tsystemctl start pcsd \n\tsystemctl enable pcsd\n\tsystemctl start corosync \n\tsystemctl enable corosync\n\techo 'Install pacemaker and corosync done.'\n\t\"\"\"",
        "\"\"\"\n\t\t1. Default ( with netmask default is 24)\n\t\t2. Customs\n\t\t3. Exit\n\t\t\"\"\"",
        "\"\"\"\n\t\t\techo 'Creating resource ...'\n\t\t\tpcs resource create Virtual_IP ocf:heartbeat:IPaddr2 ip=\"\"\"",
        "\"\"\" cidr_netmask=24 op monitor interval=30s\n\t\t\techo 'Done'\n\t\t\t\"\"\"",
        "\"\"\"\n\t\t1. Default ()\n\t\t2. Customs\n\t\t3. Exit\n\t\t\"\"\"",
        "\"\"\"\n\t\t\tpcs resource create \"\"\"",
        "\"\"\" \"\"\"",
        "\"\"\" configfile=\"\"\"",
        "\"\"\" status10url op monitor interval=5s\n\t\t\techo 'Done.'\n\t\t\t\"\"\"",
        "\"\"\"\n\tpcs constraint order Virtual_IP then Web_Cluster\n\tpcs constraint colocation add Web_Cluster with Virtual_IP INFINITY\n\techo \"Created done.\"\n\t\"\"\"",
        "\"\"\"\n\tsudo systemctl disable firewalld\n\tsudo systemctl stop firewalld\n\tsed -i 's/SElinux=enforcing/SElinux=disabled/g' /etc/sysconfig/SElinux\n\tsed -i 's/SElinux=enforcing/SElinux=disabled/g' /etc/SElinux/config\n\techo 'Disabled firewall'\n\t\"\"\"",
        "\"\"\"\n\t\t1. Install NGINX\n\t\t2. Install Apache\n\t\t3. Exit\n\t\t\"\"\"",
        "\"\"\"echo \"\"\"",
        "\"\"\"    \"\"\"",
        "\"\"\" >> /etc/hosts\"\"\"",
        "\"\"\"\n\tpcs cluster start --all\n\tpcs cluster enable --all\n\t\"\"\"",
        "\"\"\"\n\t\t\t1. Install pacemaker and corosync\n\t\t\t2. Install nginx, apache\n\t\t\t3. Create a cluster\n\t\t\t4. Create resource Virtual_IP\n\t\t\t5. Create resource Web_Cluster\n\t\t\t6. Create constraint between Virtual_IP with Web_Cluster\n\t\t\t7. Disable firewall (recommend)\n\t\t\t8. Customs\n\t\t\t9. Exit\n\t\t\t\"\"\""
    ],
    "functions": [
        "customs_cmd",
        "install_nginx_package",
        "install_nginx_source",
        "install_nginx",
        "install_httpd",
        "install_pcmk",
        "create_resource_Virtual_IP",
        "create_resource_web_cluster",
        "create_constraint_resource",
        "disable_firewall",
        "install_main_webserver",
        "create_cluster",
        "main"
    ],
    "classes": []
}