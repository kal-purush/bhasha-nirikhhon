{
    "identifiers": [
        "os",
        "random",
        "graphics",
        "graphics",
        "time",
        "os",
        "chdir",
        "response",
        "response",
        "response",
        "newGuess",
        "letter",
        "newGuess",
        "alphabet",
        "alphabetsList",
        "alphabet",
        "letter",
        "center",
        "open",
        "line",
        "rules",
        "readlines",
        "line",
        "end",
        "time",
        "sleep",
        "input",
        "checkZeroOne",
        "demo",
        "Demo",
        "demo",
        "hangMan",
        "demo",
        "wrongGuess",
        "count",
        "chooseWord",
        "time",
        "sleep",
        "rulesCheck",
        "input",
        "checkZeroOne",
        "rulescheck",
        "rulesCheck",
        "rulescheck",
        "Level",
        "rulescheck",
        "confirmQuit",
        "input",
        "level",
        "confirmQuit",
        "level",
        "level",
        "level",
        "confirmChoice",
        "level",
        "Level",
        "level",
        "level",
        "level",
        "level",
        "level",
        "gameLevel",
        "input",
        "checkZeroOne",
        "confirm",
        "confirmChoice",
        "level",
        "confirm",
        "getWord",
        "level",
        "confirm",
        "Level",
        "level",
        "level",
        "open",
        "level",
        "open",
        "level",
        "open",
        "chooseWord",
        "word",
        "word",
        "line",
        "word",
        "readlines",
        "wordList",
        "line",
        "split",
        "random",
        "choice",
        "wordList",
        "start",
        "chooseWord",
        "input",
        "exit",
        "confirmquit",
        "confirmquit",
        "rulesCheck",
        "confirmQuit",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "input",
        "checkZeroOne",
        "quit",
        "forceQuit",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "quit",
        "confirmQuit",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "chooseWord",
        "len",
        "chooseWord",
        "wordLength",
        "b",
        "len",
        "chooseWord",
        "currentStr",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "input",
        "checkInput",
        "newGuess",
        "newGuess",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "newGuess",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "newGuess",
        "forceQuit",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "newGuess",
        "input",
        "confirmGuess",
        "count",
        "checkGuess",
        "newGuess",
        "guessList",
        "chooseWord",
        "wrongGuess",
        "count",
        "currentStr",
        "guessDisplay",
        "repeatchecked",
        "checkRepeatGuess",
        "currentStr",
        "newGuess",
        "guessList",
        "chooseWord",
        "count",
        "wrongGuess",
        "guessDisplay",
        "confirmGuess",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "newGuess",
        "guessList",
        "chooseWord",
        "wrongGuess",
        "count",
        "currentStr",
        "guessDisplay",
        "repeatchecked",
        "repeatchecked",
        "guessList",
        "insert",
        "newGuess",
        "repeatchecked",
        "len",
        "guessList",
        "guessList",
        "insert",
        "last",
        "newGuess",
        "len",
        "newGuess",
        "y",
        "len",
        "chooseWord",
        "chooseWord",
        "y",
        "newGuess",
        "compareAlphabets",
        "updateString",
        "guessList",
        "wrongGuess",
        "newGuess",
        "chooseWord",
        "count",
        "check",
        "last",
        "currentStr",
        "guessDisplay",
        "y",
        "wrong",
        "compareAlphabets",
        "chooseWord",
        "wrong",
        "len",
        "chooseWord",
        "updateString",
        "guessList",
        "wrongGuess",
        "newGuess",
        "chooseWord",
        "count",
        "check",
        "last",
        "currentStr",
        "guessDisplay",
        "y",
        "newGuess",
        "chooseWord",
        "chooseWord",
        "printCurrentStr",
        "currentStr",
        "chooseWord",
        "count",
        "len",
        "guessList",
        "win",
        "count",
        "chooseWord",
        "end",
        "updateString",
        "guessList",
        "wrongGuess",
        "newGuess",
        "chooseWord",
        "count",
        "check",
        "last",
        "currentStr",
        "guessDisplay",
        "y",
        "currentStr",
        "newGuess",
        "guessList",
        "chooseWord",
        "count",
        "wrongGuess",
        "guessDisplay",
        "len",
        "newGuess",
        "checkRepeat",
        "guessList",
        "newGuess",
        "checkRepeat",
        "repeat",
        "repeat",
        "repeatDisplay",
        "newGuess",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "checkGuess",
        "newGuess",
        "guessList",
        "chooseWord",
        "wrongGuess",
        "count",
        "currentStr",
        "guessDisplay",
        "repeatchecked",
        "item",
        "guessList",
        "newGuess",
        "item",
        "repeat",
        "repeat",
        "repeatDisplay",
        "newGuess",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "checkGuess",
        "newGuess",
        "guessList",
        "chooseWord",
        "wrongGuess",
        "count",
        "currentStr",
        "guessDisplay",
        "repeatchecked",
        "guessList",
        "wrongGuess",
        "newGuess",
        "chooseWord",
        "count",
        "check",
        "last",
        "currentStr",
        "guessDisplay",
        "y",
        "check",
        "newGuess",
        "last",
        "check",
        "updateguessDisplay",
        "guessList",
        "printCurrentStr",
        "currentStr",
        "chooseWord",
        "check",
        "updateguessDisplay",
        "guessList",
        "printCurrentStr",
        "currentStr",
        "chooseWord",
        "wrongGuess",
        "hangMan",
        "demo",
        "wrongGuess",
        "count",
        "chooseWord",
        "count",
        "wrongGuess",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "checkempty",
        "currentStr",
        "checkempty",
        "last",
        "check",
        "test",
        "count",
        "game",
        "chooseWord",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "test",
        "count",
        "win",
        "count",
        "chooseWord",
        "end",
        "input",
        "checkZeroOne",
        "ask",
        "end",
        "ask",
        "Level",
        "ask",
        "confirmQuit",
        "count",
        "chooseWord",
        "chooseWord",
        "count",
        "count",
        "chooseWord",
        "chooseWord",
        "answer",
        "end",
        "demo",
        "wrongGuess",
        "count",
        "chooseWord",
        "finish",
        "GraphWin",
        "Rectangle",
        "Point",
        "Point",
        "box",
        "draw",
        "win",
        "Point",
        "Point",
        "Point",
        "Line",
        "Point",
        "Point",
        "Circle",
        "center",
        "Line",
        "Point",
        "neck",
        "Line",
        "Point",
        "neck",
        "Line",
        "lowercenter",
        "neck",
        "Line",
        "Point",
        "lowercenter",
        "Line",
        "Point",
        "lowercenter",
        "Text",
        "Point",
        "text",
        "setStyle",
        "text",
        "setSize",
        "text",
        "draw",
        "win",
        "demo",
        "a",
        "wrongGuess",
        "a",
        "line",
        "draw",
        "win",
        "a",
        "head",
        "draw",
        "win",
        "a",
        "lefthand",
        "draw",
        "win",
        "a",
        "righthand",
        "draw",
        "win",
        "a",
        "body",
        "draw",
        "win",
        "a",
        "leftfeet",
        "draw",
        "win",
        "a",
        "rightfeet",
        "draw",
        "win",
        "demo",
        "line",
        "draw",
        "win",
        "head",
        "draw",
        "win",
        "lefthand",
        "draw",
        "win",
        "righthand",
        "draw",
        "win",
        "body",
        "draw",
        "win",
        "leftfeet",
        "draw",
        "win",
        "rightfeet",
        "draw",
        "win",
        "Text",
        "Point",
        "button",
        "draw",
        "win",
        "Rectangle",
        "Point",
        "Point",
        "r",
        "draw",
        "win",
        "click",
        "win",
        "getMouse",
        "c",
        "getX",
        "c",
        "getY",
        "dx",
        "dx",
        "dy",
        "dy",
        "win",
        "close",
        "finish",
        "lose",
        "count",
        "chooseWord",
        "currentStr",
        "chooseWord",
        "word",
        "currentStr",
        "word",
        "rjust",
        "end",
        "len",
        "chooseWord",
        "underscore",
        "newGuess",
        "newGuess",
        "displayrepeat",
        "guessList",
        "join",
        "guessList",
        "end",
        "displayGuessList",
        "printDisplay",
        "displayGuessList",
        "end",
        "rules",
        "Demo",
        "exit"
    ],
    "literals": [
        "\"/Users/LianSiu/Downloads/COMP1001_Project_14040502D\"",
        "\"a\"",
        "\"b\"",
        "\"c\"",
        "\"d\"",
        "\"e\"",
        "\"f\"",
        "\"g\"",
        "\"h\"",
        "\"i\"",
        "\"j\"",
        "\"k\"",
        "\"l\"",
        "\"m\"",
        "\"n\"",
        "\"o\"",
        "\"p\"",
        "\"q\"",
        "\"r\"",
        "\"s\"",
        "\"t\"",
        "\"u\"",
        "\"v\"",
        "\"w\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"1\"",
        "\"0\"",
        "\"Your input can only be 1 or 0, please enter again!\"",
        "\"Game Rules\"",
        "\"-\"",
        "\"\\n\"",
        "\"rules.txt\"",
        "\"r\"",
        "\"\"",
        "\"\\n\"",
        "\"-\"",
        "\"\\n\"",
        "\"A demo (how the HangMan looks like when you lose the game) is provided.\"",
        "\"Enter 1 to open the demo graph in a new window (recommended!) or enter 0 to \\nskip this demo:\\n\"",
        "\"1\"",
        "\"nil\"",
        "\"nil\"",
        "\"\\n\"",
        "\"#\"",
        "\"\\n*** Please be noted that you can quit this game anytime by entering \\n    the word \\\"quit\\\" as your guesses in the game.\\n\"",
        "\"#\"",
        "\"\\n\"",
        "\"If you are ready, enter 1 to start a new game or enter 0 to quit this game:\\n\"",
        "\"1\"",
        "\"0\"",
        "\"\\nPlease choose the game level to start a new game.\"",
        "\"\\nEnter 1 for Beginner, 2 for Medium, 3 for Expert,or enter 0 to quit this game: \\n\"",
        "\"0\"",
        "\"1\"",
        "\"2\"",
        "\"3\"",
        "\"Your input can only be 0, 1, 2 or 3, please enter again!\"",
        "\"1\"",
        "\"Beginner\"",
        "\"2\"",
        "\"Medium\"",
        "\"3\"",
        "\"Expert\"",
        "\"\\nYour choice is \"",
        "\", the \"",
        "\" level.\"",
        "\"Enter 1 to confirm your choice, or enter 0 to go back:\\n\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"WordLibBeginner.txt\"",
        "\"r\"",
        "\"2\"",
        "\"WordLibMedium.txt\"",
        "\"r\"",
        "\"3\"",
        "\"WordLibExpert.txt\"",
        "\"r\"",
        "\",\"",
        "\"\\nAre you sure you want to quit? \\nEnter yes to quit or enter no to go back to game menu: \"",
        "\"yes\"",
        "\"\\n\"",
        "\"Thank you for playing!\"",
        "\"no\"",
        "\"Your input can only be yes or no, please enter again!\"",
        "\"You cannot get back to this game if you choose to quit!\\nEnter 1 to leave this game or enter 0 to resume:\"",
        "\"1\"",
        "\"The word contains \"",
        "\" alphabets.\"",
        "\" \"",
        "\"Enter your guess (an alphabet or a word, in lowercase): \"",
        "\" \"",
        "\"You cannot input spaces!\"",
        "\"Input should be alphabet(s) in lowercase only!\"",
        "\"\"",
        "\"Empty input is not allowed!\"",
        "\"quit\"",
        "\"Your guess is \"",
        "\".\"",
        "\"Enter 1 to confirm or enter 0 to enter again:\\n\"",
        "\"1\"",
        "\"0\"",
        "\"Your input can only be 0 or 1, please input your guess again!\"",
        "\"wrong\"",
        "\"correct\"",
        "\"Sorry your guess is wrong!\"",
        "\"wrong\"",
        "\"done\"",
        "\"Sorry your guess is wrong!\"",
        "\"wrong\"",
        "\"correct\"",
        "\"done\"",
        "\"Correct guess!\"",
        "\"wrong\"",
        "\" \"",
        "\"done\"",
        "\"Enter 1 to start a new game or enter 0 to quit:\\n\"",
        "\"1\"",
        "\"0\"",
        "\"Bravo! The answer is: \"",
        "\".\"",
        "\"You made the correct guess in \"",
        "\" times!\\nCongradulations!\\n\"",
        "\"Sorry you do not have any chances left, you lose!\"",
        "\"The answer is: \"",
        "\".\"",
        "\"HangMan\"",
        "\"Hang Man\"",
        "\"bold italic\"",
        "\"Close\"",
        "\"\\n\"",
        "\"\"",
        "\"- \"",
        "\"\\n\"",
        "\"'\"",
        "\"'\"",
        "\"You have tried\"",
        "\"already!\"",
        "\", \"",
        "\"You have tried: \"",
        "\"\"",
        "\"\"",
        "\"__main__\"",
        "\"Welcome to the Hang Man game!\\n\"",
        "\"See you next time, bye!\""
    ],
    "variables": [
        "alphabetsList",
        "rules",
        "demo",
        "demo",
        "wrongGuess",
        "count",
        "chooseWord",
        "rulescheck",
        "level",
        "gameLevel",
        "gameLevel",
        "gameLevel",
        "confirm",
        "word",
        "word",
        "word",
        "wordList",
        "chooseWord",
        "confirmquit",
        "exit",
        "quit",
        "wordLength",
        "count",
        "guessList",
        "wrongGuess",
        "currentStr",
        "guessDisplay",
        "newGuess",
        "confirmGuess",
        "repeatchecked",
        "last",
        "wrong",
        "compareAlphabets",
        "last",
        "check",
        "check",
        "last",
        "check",
        "check",
        "currentStr",
        "count",
        "check",
        "y",
        "last",
        "repeat",
        "repeatchecked",
        "repeatchecked",
        "repeatchecked",
        "currentStr",
        "y",
        "demo",
        "test",
        "test",
        "ask",
        "answer",
        "finish",
        "win",
        "box",
        "center",
        "neck",
        "lowercenter",
        "line",
        "head",
        "lefthand",
        "righthand",
        "body",
        "leftfeet",
        "rightfeet",
        "text",
        "finish",
        "button",
        "r",
        "c",
        "dx",
        "dy",
        "underscore",
        "displayrepeat",
        "printDisplay"
    ],
    "comments": [
        "HangManGame.py",
        "A simple single-player text-based implementation of the Hang Man game.",
        "",
        "Author: Siu Lok Man Lian",
        "",
        "No license",
        "Constants ##",
        "set up alphabetsList storing the 26 alphabets for checking if the input is an alphabet",
        "Input validation functions ##",
        "return True if input is one or zero",
        "return False and print error message if input is not one or zero",
        "check every alphabet(s) in the newGuess word",
        "compare letter with every alphabets in alphabetsList",
        "return False if letter is not found in the alphabetsList",
        "Coordinate system functions ##",
        "Formatting the game rules diaplay",
        "open the text file storing the game rules,then read and print out the text using the file handler",
        "program sleep for 10 seconds to let user to read the game rules",
        "ask if user want to see the demo",
        "validate user input",
        "run this part if user choose to see demo",
        "set variable demo as true",
        "call function to display HangMan demo",
        "directly run this part if user don't want to see demo, a reminder about how to quit the game",
        "program sleep for 5 seconds to let user to read the reminder",
        "jump to next part for starting a new game",
        "ask if user is ready for a new game",
        "validate user input",
        "run this part if input is valid",
        "go to next part if user is ready",
        "run this part if user choose to quit",
        "ask user to input a number (1 or 2 or 3) for level selection, or input zero to quit",
        "run this part if user choose to quit",
        "jump to next part for confrming user choice on selected level if input is valid level number",
        "print a error message if input is invalid and ask for input again",
        "assign appropriate string to variable gameLevel according to the level selected",
        "display the selected level to user and ask for confirmation",
        "validate user input",
        "run this part if input is valid",
        "jump to getWord() for getting the file handler of the word list at the selected level from text file",
        "go back to level selection if user want to choose again",
        "get the file handler of the corresponding text file",
        "call chooseWord() to select a word from the word list randomly",
        "read all the words from the text file by file handler and store them in a list named wordList",
        "randomly choose a word from wordList",
        "start a new game with the selected word named chooseWord",
        "ask if user really want to quit the game",
        "if user choose yes, print the goodbye message",
        "exit()",
        "back to game menu if user do not want to quit",
        "print error statement if user input is invalid and ask again",
        "ask if user really want to quit during the game as game cannot be saved",
        "validate user input",
        "run this part if input is valid",
        "run this part if user choose to quit the game",
        "run this part to resume",
        "Game logic functions ##",
        "display the length of the randomloy selected word to the user",
        "set up variables for the game",
        "put spaces into current string for display after each guess",
        "start the game",
        "ask user to input his or her guess in a word or a letter",
        "run this part if the input is or are not alphabet(s)",
        "error message for input with spaces",
        "error message for other non-alphabets inputs",
        "ask for new guess again",
        "run this part if the input is empty, display error message and ask for new input",
        "run this part if user input \"quit\" and call function to ask if user really want to quit",
        "run this part if input is valid",
        "ask user to confirm his or her guess",
        "run this part if user confirmed the guess",
        "run this part if it is the first guess",
        "call checkGuess() to determine the guess is correct or not",
        "run this part if it is not the first guess, call checkRepeatGuess to check if the guess is repeated before calling checkGuess()",
        "go back and ask for a new user input if user want to make another guess",
        "print error message and go back to previous stage if input for guess confirmation is invalid",
        "insert the new guess into the guess list for display according to their positions",
        "insert as the first item if it is the first guess",
        "insert as the last item if it is not the first guess",
        "run this part if the guess is an alphabet",
        "set a new variable wrong to count the wrong result in the comparison with the chooseWord (the answer)",
        "check with every letter in the chooseWord",
        "set variables last and check as indicators on the status of the newGuess",
        "update the value of check and update the string if the newGuess matches any alphabet(s) in chooseWord",
        "add one to wrong whenever the newGuess does not match any alphabets in the chooseWord",
        "run this part if the checking of chooseWord and newGuess reached the end",
        "update the value of last as True to indicate it is the last checking for the current newGuess",
        "display message for wrong guesses and update the value of check as wrong",
        "update the value of check as done if there is correct guess(es)",
        "call function to update the string in currentStr for display",
        "run this part if the guess is a word",
        "run this part if the word newGuess matches the answer of this game",
        "update the currentStr as the answer and print it",
        "add one to count and call function to print the message for winning the game",
        "call function to end the game by asking user want to start another game or quit",
        "run this part if the word newGuess does not match the answer (chooseWord)",
        "print message for wrong guesses",
        "update the value of check as wrong for calling function for hangman display in the next stage",
        "update the value of last as False and call function to update the string for display",
        "set a new variable repeat with value 0",
        "set a new variable repeatChecked with value False",
        "run this part if newGuess is an alphabet",
        "check if newGuess is repeated by comparing every item in guessList",
        "add one to variable repeat to indicate repetition on guesses",
        "if guess is repeated, call function to display error message and ask for new guess from user again",
        "if newGuess is not repeated, update the value of repeatchecked as True, then call function for checking if the guess is correct or not",
        "run this part of newGuess is a word",
        "check if newGuess is repeated by comparing every item in guessList",
        "if newGuess is not repeated, call function to check if it is correct or not",
        "if the value of the variable check is \"correct\", update the corresponding letter position in the current string",
        "if the checking is finished and there is or are correct guess(es), print message for correct guess",
        "update the guessList and print out the currentStr",
        "if it is a wrong guess, update the guessList and print out the currentStr",
        "set demo as False and add one to variable wrong Guess for HangMan display",
        "call function to display the hang man",
        "add one to count and ask for new guesses if wrongGuess has not reached 7 (player will lose if 7 wrong guesses are made)",
        "set a variable test with value True to check if the currentStr is empty",
        "update the value of test as False if there's any spaces in currentStr",
        "run this part if checking is finished and there's at least one correct guess(es)",
        "if there's at least one empty spaces in currentStr, ask for new guess again",
        "if there's no empty spaces in currentStr, function is called to display message as player won the game",
        "ask if user want to start a new game or quit the game",
        "validate user input",
        "run this part if user input is valid",
        "go to game level selection to start a new game",
        "call function to ask for user confirmation on quiting the game",
        "display messages if player won the game",
        "show the number of guesses player used to make a correct guess",
        "display message when player lose",
        "display the answer of the game",
        "call function to ask if user want to start a new game",
        "Display funcions ##",
        "globalize variable finish",
        "set a variable finish with value False to indicate when number of wrongGuess reached 7",
        "build up a window using the graphics module for hang man display",
        "identify every components of the hangman and named them with appropriate variables",
        "add the text \"Hang Man\" in the window of hangman display",
        "run this part if it is not a demo",
        "determine the number of parts in the hangman need to be drawn base on the number of wrongGuess",
        "draw the line",
        "draw the head",
        "draw the left hand",
        "draw the right hand",
        "draw the body",
        "draw the left feet",
        "draw the right feet",
        "update the value of finish as True to indicate the player lose this game",
        "run this part if it is a demo",
        "draw all the parts of the hang man for game demo",
        "set a button for closing the hangman window by clicking it",
        "window will be closed when user clicked within the area of the box with text \"Close\"",
        "call function to display message when player lose if the value of finish is True",
        "print every letter in the currentStr with spaces in between each of them",
        "print the underscores with formatting using the length of chooseWord",
        "print message showing that user guess is repeated",
        "display the updated guess list with comma and a space in between",
        "Main program code ##",
        "print welcoming message",
        "display rules",
        "ask if user wants a demo",
        "print ending message if user choose to quit"
    ],
    "docstrings": [
        "\"\"\"\nDocumentation:\n\nIn this implementation, player needs to enter an alphabets or a word with\nalphabets in every guess input. Besides, all text inputs required are\nnumbers or 'yes' and 'no'. \n\nAfter reading the game rules, player can start a new game by choosing a \ngame level. 3 levels are available, Beginner, Medium, and Expert. There\nare approximately a total of 360 words provided, with 120 words for each \nlevel. The program will randomly choose a word from the 120 words after \nplayer had chose a game level.\n\nWith the randomly chosen word, the game begins with asking player to enter\nhis or her first guess. All guesses can be either an alphabet or a word \nwhich must be alphabets only. Other inputs including empty inputs, spaces, \nnumbers, or other symbols will be rejected.\n\nIf the input for guess is valid, the program will perform algorithms to check\nthat guess is correct or wrong. A result message will be shown after each \nguess no matter it is correct or wrong. \n\nPlayer can make guesses continuously until 7 wrong guesses are made, i.e. the\nwhole hang man is drawn and displayed. The hang man will be displayed only \nwhen wrong guesses are made. Player needs to close the hang man window before\nentering next guess. \n\nDuring the game, player can choose to quit anttime by enterintg the word \"quit\"\nas guess. If player choose to quit, the game will not be saved and player needs\nto start a new game if he or she chose to quit. Confirmation is needed to quit\nthe game program. If player do not want to quit, he or she can choose to go \nback to the game menu to start another game.\n\nPlayer inputs are validate by the 2 input validation functions, which are \ndesigned for the two main types of inputs in this implementation, numbers and\nalphabets. Error message will be displayed when user inputs are in valid.\n\nThere are 9 coordinate system functions, including functions for handling \nthe quit game function, some confirmation functions and some functions before \nstarting the game, like demo display, rule display, choosing game level, etc.\n\nWith these functions, there may be more potential bugs but it also generates\nmore possibilities for the game, which can personalize this common game. \n\nFor the 8 game logic functions, they are more complicated and contains more \ncalculations as there are too many possibilities to predict and too many \nassumptions need to made to prevent from bugs. Therefore, many variables with\nTrue/False values are set to avoid errors in the complicated calculations.\n\nThe 4 display functions are mainly done by graphics and the built-in functions \nof strings and lists. There are almost no GUI components as the hang man game\nneed not to be that fancy and complicated according to my childhood memory. \nTherefore, the style of this game is very simple as you can see, just a\ngraphic window and others are all text and text.\n\nHere are some statistics for reference, there are total of 13 for-loops, 64 if\nor elif-statements, more than 10 variables, 23 working functions, few list, \nstrings, boolean operator. Besides os, I have imported 3 non nuilt-in modules,\nincluding random (for choosing words), graphics (for hang man display), and\ntime (for program sleep). Also, one of the math operation is used for getting\nand calculating mouse click position in the hang man display function. Files\n(for rules display and choose word from the 3 word libraries) are read in rules\nfunction and chooseWord function.\n\nThere are only three lines of codes in the test() as the program is designed \nwith deep linkings between functions. Every functions links each other and bugs\nare already removed and hopefully its number is already minimized.\n\nI believed the explanations commented are clearly stated and understandable.\nHope you enjoy the game!\n\"\"\"",
        "\"\"\"Validate the 1 and 0 inputs\"\"\"",
        "\"\"\"Check if user input is an alphabet or alphabets\"\"\"",
        "\"\"\"Display game rules and call function for game demonstration\"\"\"",
        "\"\"\"Provide game demonstration (showing how the hang man looks like)\"\"\"",
        "\"\"\"Ask if user is ready to start a new game\"\"\"",
        "\"\"\"Start a new game by asking user to choose a game level\"\"\"",
        "\"\"\"Ask user to confirm his or her choice on game level\"\"\"",
        "\"\"\"Get the word list at the level chose by user\"\"\"",
        "\"\"\"Randomly choose a word from the word list\"\"\"",
        "\"\"\"Called when user want to quit the game\"\"\"",
        "\"\"\"Force to quit during the game\"\"\"",
        "\"\"\"Start a new game with a word chosen randomly by computer\"\"\"",
        "\"\"\"Asking user for new guesses\"\"\"",
        "\"\"\"Validate the guess entered by user every times, check if it matches the chosen word\"\"\"",
        "\"\"\"Check if the guess entered by user is repeated\"\"\"",
        "\"\"\"Update the status of guess word after each guess\"\"\"",
        "\"\"\"Called when the game is ended, ask if user want to start a new game or quit\"\"\"",
        "\"\"\"Called when player win the game\"\"\"",
        "\"\"\"Called when user lose the game and display the correct answer of that game\"\"\"",
        "\"\"\"Display the hangman for demo or after each wrong guess\"\"\"",
        "\"\"\"Print the status of the guess word after each guess\"\"\"",
        "\"\"\"Called when user's guess is repeated\"\"\"",
        "\"\"\"Display all the guesses after each guess\"\"\""
    ],
    "functions": [
        "checkZeroOne",
        "checkInput",
        "rules",
        "Demo",
        "rulesCheck",
        "Level",
        "confirmChoice",
        "getWord",
        "chooseWord",
        "confirmQuit",
        "forceQuit",
        "start",
        "game",
        "checkGuess",
        "checkRepeatGuess",
        "updateString",
        "end",
        "win",
        "lose",
        "hangMan",
        "printCurrentStr",
        "repeatDisplay",
        "updateguessDisplay"
    ],
    "classes": []
}