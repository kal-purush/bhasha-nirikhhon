{
    "identifiers": [
        "absolute_import",
        "print_function",
        "veriloggen",
        "thread_stream_multidim",
        "veriloggen",
        "reset",
        "thread_stream_multidim",
        "mkTest",
        "test_module",
        "to_verilog",
        "pyverilog",
        "vparser",
        "parser",
        "VerilogParser",
        "pyverilog",
        "ast_code_generator",
        "codegen",
        "ASTCodeGenerator",
        "VerilogParser",
        "parser",
        "parse",
        "expected_verilog",
        "ASTCodeGenerator",
        "codegen",
        "visit",
        "expected_ast",
        "expected_code",
        "code"
    ],
    "literals": [],
    "variables": [
        "expected_verilog",
        "test_module",
        "code",
        "parser",
        "expected_ast",
        "codegen",
        "expected_code"
    ],
    "comments": [],
    "docstrings": [
        "\"\"\"\nmodule test;\n\n  reg CLK;\n  reg RST;\n  wire [32-1:0] myaxi_awaddr;\n  wire [8-1:0] myaxi_awlen;\n  wire myaxi_awvalid;\n  reg myaxi_awready;\n  wire [32-1:0] myaxi_wdata;\n  wire [4-1:0] myaxi_wstrb;\n  wire myaxi_wlast;\n  wire myaxi_wvalid;\n  reg myaxi_wready;\n  wire [32-1:0] myaxi_araddr;\n  wire [8-1:0] myaxi_arlen;\n  wire myaxi_arvalid;\n  reg myaxi_arready;\n  reg [32-1:0] myaxi_rdata;\n  reg myaxi_rlast;\n  reg myaxi_rvalid;\n  wire myaxi_rready;\n  wire [32-1:0] memory_awaddr;\n  wire [8-1:0] memory_awlen;\n  wire memory_awvalid;\n  reg memory_awready;\n  wire [32-1:0] memory_wdata;\n  wire [4-1:0] memory_wstrb;\n  wire memory_wlast;\n  wire memory_wvalid;\n  reg memory_wready;\n  wire [32-1:0] memory_araddr;\n  wire [8-1:0] memory_arlen;\n  wire memory_arvalid;\n  reg memory_arready;\n  reg [32-1:0] memory_rdata;\n  reg memory_rlast;\n  reg memory_rvalid;\n  wire memory_rready;\n  reg [8-1:0] _memory_mem [0:2**20-1];\n\n  initial begin\n    $readmemh(\"_memory_memimg_.out\", _memory_mem);\n  end\n\n  reg [32-1:0] _memory_fsm;\n  localparam _memory_fsm_init = 0;\n  reg [33-1:0] _write_count;\n  reg [32-1:0] _write_addr;\n  reg [33-1:0] _read_count;\n  reg [32-1:0] _read_addr;\n  reg [33-1:0] _sleep_count;\n  reg [32-1:0] _d1__memory_fsm;\n  reg __memory_fsm_cond_100_0_1;\n  reg __memory_fsm_cond_200_1_1;\n  reg __memory_fsm_cond_211_2_1;\n  assign memory_awaddr = myaxi_awaddr;\n  assign memory_awlen = myaxi_awlen;\n  assign memory_awvalid = myaxi_awvalid;\n  wire _tmp_0;\n  assign _tmp_0 = memory_awready;\n\n  always @(*) begin\n    myaxi_awready = _tmp_0;\n  end\n\n  assign memory_wdata = myaxi_wdata;\n  assign memory_wstrb = myaxi_wstrb;\n  assign memory_wlast = myaxi_wlast;\n  assign memory_wvalid = myaxi_wvalid;\n  wire _tmp_1;\n  assign _tmp_1 = memory_wready;\n\n  always @(*) begin\n    myaxi_wready = _tmp_1;\n  end\n\n  assign memory_araddr = myaxi_araddr;\n  assign memory_arlen = myaxi_arlen;\n  assign memory_arvalid = myaxi_arvalid;\n  wire _tmp_2;\n  assign _tmp_2 = memory_arready;\n\n  always @(*) begin\n    myaxi_arready = _tmp_2;\n  end\n\n\n  always @(*) begin\n    myaxi_rdata <= memory_rdata;\n  end\n\n  wire _tmp_3;\n  assign _tmp_3 = memory_rlast;\n\n  always @(*) begin\n    myaxi_rlast = _tmp_3;\n  end\n\n  wire _tmp_4;\n  assign _tmp_4 = memory_rvalid;\n\n  always @(*) begin\n    myaxi_rvalid = _tmp_4;\n  end\n\n  assign memory_rready = myaxi_rready;\n\n  blinkled\n  uut\n  (\n    .CLK(CLK),\n    .RST(RST),\n    .myaxi_awaddr(myaxi_awaddr),\n    .myaxi_awlen(myaxi_awlen),\n    .myaxi_awvalid(myaxi_awvalid),\n    .myaxi_awready(myaxi_awready),\n    .myaxi_wdata(myaxi_wdata),\n    .myaxi_wstrb(myaxi_wstrb),\n    .myaxi_wlast(myaxi_wlast),\n    .myaxi_wvalid(myaxi_wvalid),\n    .myaxi_wready(myaxi_wready),\n    .myaxi_araddr(myaxi_araddr),\n    .myaxi_arlen(myaxi_arlen),\n    .myaxi_arvalid(myaxi_arvalid),\n    .myaxi_arready(myaxi_arready),\n    .myaxi_rdata(myaxi_rdata),\n    .myaxi_rlast(myaxi_rlast),\n    .myaxi_rvalid(myaxi_rvalid),\n    .myaxi_rready(myaxi_rready)\n  );\n\n\n  initial begin\n    $dumpfile(\"uut.vcd\");\n    $dumpvars(0, uut);\n  end\n\n\n  initial begin\n    CLK = 0;\n    forever begin\n      #5 CLK = !CLK;\n    end\n  end\n\n\n  initial begin\n    RST = 0;\n    memory_awready = 0;\n    memory_wready = 0;\n    memory_arready = 0;\n    memory_rdata = 0;\n    memory_rlast = 0;\n    memory_rvalid = 0;\n    _memory_fsm = _memory_fsm_init;\n    _write_count = 0;\n    _write_addr = 0;\n    _read_count = 0;\n    _read_addr = 0;\n    _sleep_count = 0;\n    _d1__memory_fsm = _memory_fsm_init;\n    __memory_fsm_cond_100_0_1 = 0;\n    __memory_fsm_cond_200_1_1 = 0;\n    __memory_fsm_cond_211_2_1 = 0;\n    #100;\n    RST = 1;\n    #100;\n    RST = 0;\n    #100000;\n    $finish;\n  end\n\n  localparam _memory_fsm_200 = 200;\n  localparam _memory_fsm_201 = 201;\n  localparam _memory_fsm_202 = 202;\n  localparam _memory_fsm_203 = 203;\n  localparam _memory_fsm_204 = 204;\n  localparam _memory_fsm_205 = 205;\n  localparam _memory_fsm_206 = 206;\n  localparam _memory_fsm_207 = 207;\n  localparam _memory_fsm_208 = 208;\n  localparam _memory_fsm_209 = 209;\n  localparam _memory_fsm_210 = 210;\n  localparam _memory_fsm_211 = 211;\n  localparam _memory_fsm_100 = 100;\n  localparam _memory_fsm_101 = 101;\n  localparam _memory_fsm_102 = 102;\n  localparam _memory_fsm_103 = 103;\n  localparam _memory_fsm_104 = 104;\n  localparam _memory_fsm_105 = 105;\n  localparam _memory_fsm_106 = 106;\n  localparam _memory_fsm_107 = 107;\n  localparam _memory_fsm_108 = 108;\n  localparam _memory_fsm_109 = 109;\n  localparam _memory_fsm_110 = 110;\n  localparam _memory_fsm_111 = 111;\n  localparam _memory_fsm_112 = 112;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      _memory_fsm <= _memory_fsm_init;\n      _d1__memory_fsm <= _memory_fsm_init;\n      memory_awready <= 0;\n      _write_addr <= 0;\n      _write_count <= 0;\n      __memory_fsm_cond_100_0_1 <= 0;\n      memory_wready <= 0;\n      memory_arready <= 0;\n      _read_addr <= 0;\n      _read_count <= 0;\n      __memory_fsm_cond_200_1_1 <= 0;\n      memory_rdata[7:0] <= (0 >> 0) & { 8{ 1'd1 } };\n      memory_rdata[15:8] <= (0 >> 8) & { 8{ 1'd1 } };\n      memory_rdata[23:16] <= (0 >> 16) & { 8{ 1'd1 } };\n      memory_rdata[31:24] <= (0 >> 24) & { 8{ 1'd1 } };\n      memory_rvalid <= 0;\n      memory_rlast <= 0;\n      __memory_fsm_cond_211_2_1 <= 0;\n      memory_rdata <= 0;\n      _sleep_count <= 0;\n    end else begin\n      _sleep_count <= _sleep_count + 1;\n      if(_sleep_count == 3) begin\n        _sleep_count <= 0;\n      end \n      _d1__memory_fsm <= _memory_fsm;\n      case(_d1__memory_fsm)\n        _memory_fsm_100: begin\n          if(__memory_fsm_cond_100_0_1) begin\n            memory_awready <= 0;\n          end \n        end\n        _memory_fsm_200: begin\n          if(__memory_fsm_cond_200_1_1) begin\n            memory_arready <= 0;\n          end \n        end\n        _memory_fsm_211: begin\n          if(__memory_fsm_cond_211_2_1) begin\n            memory_rvalid <= 0;\n            memory_rlast <= 0;\n          end \n        end\n      endcase\n      case(_memory_fsm)\n        _memory_fsm_init: begin\n          if(memory_awvalid) begin\n            _memory_fsm <= _memory_fsm_100;\n          end \n          if(memory_arvalid) begin\n            _memory_fsm <= _memory_fsm_200;\n          end \n        end\n        _memory_fsm_100: begin\n          if(memory_awvalid) begin\n            memory_awready <= 1;\n            _write_addr <= memory_awaddr;\n            _write_count <= memory_awlen + 1;\n          end \n          __memory_fsm_cond_100_0_1 <= 1;\n          if(!memory_awvalid) begin\n            _memory_fsm <= _memory_fsm_init;\n          end \n          if(memory_awvalid) begin\n            _memory_fsm <= _memory_fsm_101;\n          end \n        end\n        _memory_fsm_101: begin\n          _memory_fsm <= _memory_fsm_102;\n        end\n        _memory_fsm_102: begin\n          _memory_fsm <= _memory_fsm_103;\n        end\n        _memory_fsm_103: begin\n          _memory_fsm <= _memory_fsm_104;\n        end\n        _memory_fsm_104: begin\n          _memory_fsm <= _memory_fsm_105;\n        end\n        _memory_fsm_105: begin\n          _memory_fsm <= _memory_fsm_106;\n        end\n        _memory_fsm_106: begin\n          _memory_fsm <= _memory_fsm_107;\n        end\n        _memory_fsm_107: begin\n          _memory_fsm <= _memory_fsm_108;\n        end\n        _memory_fsm_108: begin\n          _memory_fsm <= _memory_fsm_109;\n        end\n        _memory_fsm_109: begin\n          _memory_fsm <= _memory_fsm_110;\n        end\n        _memory_fsm_110: begin\n          _memory_fsm <= _memory_fsm_111;\n        end\n        _memory_fsm_111: begin\n          memory_wready <= 1;\n          _memory_fsm <= _memory_fsm_112;\n        end\n        _memory_fsm_112: begin\n          if(memory_wvalid && memory_wstrb[0]) begin\n            _memory_mem[_write_addr + 0] <= memory_wdata[7:0];\n          end \n          if(memory_wvalid && memory_wstrb[1]) begin\n            _memory_mem[_write_addr + 1] <= memory_wdata[15:8];\n          end \n          if(memory_wvalid && memory_wstrb[2]) begin\n            _memory_mem[_write_addr + 2] <= memory_wdata[23:16];\n          end \n          if(memory_wvalid && memory_wstrb[3]) begin\n            _memory_mem[_write_addr + 3] <= memory_wdata[31:24];\n          end \n          if(memory_wvalid && memory_wready) begin\n            _write_addr <= _write_addr + 4;\n            _write_count <= _write_count - 1;\n          end \n          if(_sleep_count == 3) begin\n            memory_wready <= 0;\n          end else begin\n            memory_wready <= 1;\n          end\n          if(memory_wvalid && memory_wready && (_write_count == 1)) begin\n            memory_wready <= 0;\n          end \n          if(memory_wvalid && memory_wready && (_write_count == 1)) begin\n            _memory_fsm <= _memory_fsm_init;\n          end \n        end\n        _memory_fsm_200: begin\n          if(memory_arvalid) begin\n            memory_arready <= 1;\n            _read_addr <= memory_araddr;\n            _read_count <= memory_arlen + 1;\n          end \n          __memory_fsm_cond_200_1_1 <= 1;\n          if(!memory_arvalid) begin\n            _memory_fsm <= _memory_fsm_init;\n          end \n          if(memory_arvalid) begin\n            _memory_fsm <= _memory_fsm_201;\n          end \n        end\n        _memory_fsm_201: begin\n          _memory_fsm <= _memory_fsm_202;\n        end\n        _memory_fsm_202: begin\n          _memory_fsm <= _memory_fsm_203;\n        end\n        _memory_fsm_203: begin\n          _memory_fsm <= _memory_fsm_204;\n        end\n        _memory_fsm_204: begin\n          _memory_fsm <= _memory_fsm_205;\n        end\n        _memory_fsm_205: begin\n          _memory_fsm <= _memory_fsm_206;\n        end\n        _memory_fsm_206: begin\n          _memory_fsm <= _memory_fsm_207;\n        end\n        _memory_fsm_207: begin\n          _memory_fsm <= _memory_fsm_208;\n        end\n        _memory_fsm_208: begin\n          _memory_fsm <= _memory_fsm_209;\n        end\n        _memory_fsm_209: begin\n          _memory_fsm <= _memory_fsm_210;\n        end\n        _memory_fsm_210: begin\n          _memory_fsm <= _memory_fsm_211;\n        end\n        _memory_fsm_211: begin\n          if(memory_rready | !memory_rvalid) begin\n            memory_rdata[7:0] <= _memory_mem[_read_addr + 0];\n          end \n          if(memory_rready | !memory_rvalid) begin\n            memory_rdata[15:8] <= _memory_mem[_read_addr + 1];\n          end \n          if(memory_rready | !memory_rvalid) begin\n            memory_rdata[23:16] <= _memory_mem[_read_addr + 2];\n          end \n          if(memory_rready | !memory_rvalid) begin\n            memory_rdata[31:24] <= _memory_mem[_read_addr + 3];\n          end \n          if((_sleep_count < 3) && (_read_count > 0) && memory_rready | !memory_rvalid) begin\n            memory_rvalid <= 1;\n            _read_addr <= _read_addr + 4;\n            _read_count <= _read_count - 1;\n          end \n          if((_sleep_count < 3) && (_read_count == 1) && memory_rready | !memory_rvalid) begin\n            memory_rlast <= 1;\n          end \n          __memory_fsm_cond_211_2_1 <= 1;\n          if(memory_rvalid && !memory_rready) begin\n            memory_rvalid <= memory_rvalid;\n            memory_rdata <= memory_rdata;\n            memory_rlast <= memory_rlast;\n          end \n          if(memory_rvalid && memory_rready && (_read_count == 0)) begin\n            _memory_fsm <= _memory_fsm_init;\n          end \n        end\n      endcase\n    end\n  end\n\n\nendmodule\n\n\n\nmodule blinkled\n(\n  input CLK,\n  input RST,\n  output reg [32-1:0] myaxi_awaddr,\n  output reg [8-1:0] myaxi_awlen,\n  output reg myaxi_awvalid,\n  input myaxi_awready,\n  output reg [32-1:0] myaxi_wdata,\n  output reg [4-1:0] myaxi_wstrb,\n  output reg myaxi_wlast,\n  output reg myaxi_wvalid,\n  input myaxi_wready,\n  output reg [32-1:0] myaxi_araddr,\n  output reg [8-1:0] myaxi_arlen,\n  output reg myaxi_arvalid,\n  input myaxi_arready,\n  input [32-1:0] myaxi_rdata,\n  input myaxi_rlast,\n  input myaxi_rvalid,\n  output myaxi_rready\n);\n\n  reg [10-1:0] ram_a_0_addr;\n  wire [32-1:0] ram_a_0_rdata;\n  reg [32-1:0] ram_a_0_wdata;\n  reg ram_a_0_wenable;\n\n  ram_a\n  inst_ram_a\n  (\n    .CLK(CLK),\n    .ram_a_0_addr(ram_a_0_addr),\n    .ram_a_0_rdata(ram_a_0_rdata),\n    .ram_a_0_wdata(ram_a_0_wdata),\n    .ram_a_0_wenable(ram_a_0_wenable)\n  );\n\n  reg [10-1:0] ram_b_0_addr;\n  wire [32-1:0] ram_b_0_rdata;\n  reg [32-1:0] ram_b_0_wdata;\n  reg ram_b_0_wenable;\n\n  ram_b\n  inst_ram_b\n  (\n    .CLK(CLK),\n    .ram_b_0_addr(ram_b_0_addr),\n    .ram_b_0_rdata(ram_b_0_rdata),\n    .ram_b_0_wdata(ram_b_0_wdata),\n    .ram_b_0_wenable(ram_b_0_wenable)\n  );\n\n  reg [10-1:0] ram_c_0_addr;\n  wire [32-1:0] ram_c_0_rdata;\n  reg [32-1:0] ram_c_0_wdata;\n  reg ram_c_0_wenable;\n\n  ram_c\n  inst_ram_c\n  (\n    .CLK(CLK),\n    .ram_c_0_addr(ram_c_0_addr),\n    .ram_c_0_rdata(ram_c_0_rdata),\n    .ram_c_0_wdata(ram_c_0_wdata),\n    .ram_c_0_wenable(ram_c_0_wenable)\n  );\n\n  reg [32-1:0] th_comp;\n  localparam th_comp_init = 0;\n  reg signed [32-1:0] _th_comp_offset_0;\n  reg [10-1:0] _tmp_0;\n  reg [32-1:0] _tmp_1;\n  reg [32-1:0] _tmp_2;\n  reg [32-1:0] _tmp_3;\n  reg [32-1:0] _tmp_fsm_0;\n  localparam _tmp_fsm_0_init = 0;\n  reg [9-1:0] _tmp_4;\n  reg _myaxi_cond_0_1;\n  reg [32-1:0] _tmp_5;\n  reg _tmp_6;\n  reg [33-1:0] _tmp_7;\n  reg _tmp_8;\n  wire [32-1:0] _tmp_data_9;\n  wire _tmp_valid_9;\n  wire _tmp_ready_9;\n  assign _tmp_ready_9 = (_tmp_7 > 0) && !_tmp_8;\n  reg _ram_a_cond_0_1;\n  reg _mystream_flag_1;\n  wire [10-1:0] _mystream_req_addr_2;\n  reg [10-1:0] _mystream_offset_0_3;\n  reg [10-1:0] _mystream_offset_1_4;\n  assign _mystream_req_addr_2 = _mystream_offset_1_4 + (_mystream_offset_0_3 + _th_comp_offset_0);\n  reg [32-1:0] _mystream_fsm_5;\n  localparam _mystream_fsm_5_init = 0;\n  reg [3-1:0] _mystream_count_0_6;\n  reg [4-1:0] _mystream_count_1_7;\n  reg _tmp_10;\n  reg _tmp_11;\n  wire _tmp_12;\n  wire _tmp_13;\n  assign _tmp_13 = 1;\n  localparam _tmp_14 = 1;\n  wire [_tmp_14-1:0] _tmp_15;\n  assign _tmp_15 = (_tmp_12 || !_tmp_10) && (_tmp_13 || !_tmp_11);\n  reg [_tmp_14-1:0] __tmp_15_1;\n  wire [32-1:0] _tmp_16;\n  reg [32-1:0] __tmp_16_1;\n  assign _tmp_16 = (__tmp_15_1)? ram_a_0_rdata : __tmp_16_1;\n  reg [5-1:0] _tmp_17;\n  reg _tmp_18;\n  reg _tmp_19;\n  reg _tmp_20;\n  reg _tmp_21;\n  reg _mystream_flag_8;\n  wire [10-1:0] _mystream_req_addr_9;\n  reg [10-1:0] _mystream_offset_0_10;\n  reg [10-1:0] _mystream_offset_1_11;\n  assign _mystream_req_addr_9 = _mystream_offset_1_11 + (_mystream_offset_0_10 + _th_comp_offset_0);\n  reg [32-1:0] _mystream_fsm_12;\n  localparam _mystream_fsm_12_init = 0;\n  reg [3-1:0] _mystream_count_0_13;\n  reg [5-1:0] _mystream_count_1_14;\n  reg [4-1:0] _tmp_22;\n  reg _tmp_23;\n  wire [32-1:0] _tmp_data_24;\n  wire _tmp_valid_24;\n  wire _tmp_ready_24;\n  assign _tmp_ready_24 = (_tmp_22 > 0) && !_tmp_23;\n  reg _ram_c_cond_0_1;\n  reg [10-1:0] _tmp_25;\n  reg [32-1:0] _tmp_26;\n  reg [32-1:0] _tmp_27;\n  reg [32-1:0] _tmp_28;\n  reg [32-1:0] _tmp_fsm_1;\n  localparam _tmp_fsm_1_init = 0;\n  reg [9-1:0] _tmp_29;\n  reg _myaxi_cond_1_1;\n  reg _tmp_30;\n  reg _tmp_31;\n  wire _tmp_32;\n  wire _tmp_33;\n  assign _tmp_33 = 1;\n  localparam _tmp_34 = 1;\n  wire [_tmp_34-1:0] _tmp_35;\n  assign _tmp_35 = (_tmp_32 || !_tmp_30) && (_tmp_33 || !_tmp_31);\n  reg [_tmp_34-1:0] __tmp_35_1;\n  wire [32-1:0] _tmp_36;\n  reg [32-1:0] __tmp_36_1;\n  assign _tmp_36 = (__tmp_35_1)? ram_c_0_rdata : __tmp_36_1;\n  reg [33-1:0] _tmp_37;\n  reg _tmp_38;\n  reg _tmp_39;\n  reg _tmp_40;\n  reg _tmp_41;\n  reg _tmp_42;\n  wire [32-1:0] _tmp_data_43;\n  wire _tmp_valid_43;\n  wire _tmp_ready_43;\n  assign _tmp_ready_43 = (_tmp_fsm_1 == 3) && ((_tmp_29 > 0) && (myaxi_wready || !myaxi_wvalid));\n  reg _myaxi_cond_2_1;\n  reg [10-1:0] _tmp_44;\n  reg [32-1:0] _tmp_45;\n  reg [32-1:0] _tmp_46;\n  reg [32-1:0] _tmp_47;\n  reg [32-1:0] _tmp_fsm_2;\n  localparam _tmp_fsm_2_init = 0;\n  reg [9-1:0] _tmp_48;\n  reg _myaxi_cond_3_1;\n  reg [32-1:0] _tmp_49;\n  reg _tmp_50;\n  reg [33-1:0] _tmp_51;\n  reg _tmp_52;\n  wire [32-1:0] _tmp_data_53;\n  wire _tmp_valid_53;\n  wire _tmp_ready_53;\n  assign _tmp_ready_53 = (_tmp_51 > 0) && !_tmp_52;\n  reg _ram_a_cond_1_1;\n  assign myaxi_rready = (_tmp_fsm_0 == 3) || (_tmp_fsm_2 == 3);\n  reg [32-1:0] th_sequential;\n  localparam th_sequential_init = 0;\n  reg _th_sequential_called;\n  reg signed [32-1:0] _th_sequential_offset_15;\n  reg signed [32-1:0] _th_sequential_offset_16;\n  reg signed [32-1:0] _th_sequential_zpos_17;\n  reg signed [32-1:0] _th_sequential_ypos_18;\n  reg signed [32-1:0] _th_sequential_xpos_19;\n  reg signed [32-1:0] _th_sequential_x_20;\n  reg signed [32-1:0] _th_sequential_y_21;\n  reg signed [32-1:0] _th_sequential_z_22;\n  reg _tmp_54;\n  reg _ram_a_cond_2_1;\n  reg _ram_a_cond_3_1;\n  reg _ram_a_cond_3_2;\n  reg signed [32-1:0] _tmp_55;\n  reg signed [32-1:0] _th_sequential_a_23;\n  reg _ram_c_cond_1_1;\n  reg [10-1:0] _tmp_56;\n  reg [32-1:0] _tmp_57;\n  reg [32-1:0] _tmp_58;\n  reg [32-1:0] _tmp_59;\n  reg [32-1:0] _tmp_fsm_3;\n  localparam _tmp_fsm_3_init = 0;\n  reg [9-1:0] _tmp_60;\n  reg _myaxi_cond_4_1;\n  reg _tmp_61;\n  reg _tmp_62;\n  wire _tmp_63;\n  wire _tmp_64;\n  assign _tmp_64 = 1;\n  localparam _tmp_65 = 1;\n  wire [_tmp_65-1:0] _tmp_66;\n  assign _tmp_66 = (_tmp_63 || !_tmp_61) && (_tmp_64 || !_tmp_62);\n  reg [_tmp_65-1:0] __tmp_66_1;\n  wire [32-1:0] _tmp_67;\n  reg [32-1:0] __tmp_67_1;\n  assign _tmp_67 = (__tmp_66_1)? ram_c_0_rdata : __tmp_67_1;\n  reg [33-1:0] _tmp_68;\n  reg _tmp_69;\n  reg _tmp_70;\n  reg _tmp_71;\n  reg _tmp_72;\n  reg _tmp_73;\n  wire [32-1:0] _tmp_data_74;\n  wire _tmp_valid_74;\n  wire _tmp_ready_74;\n  assign _tmp_ready_74 = (_tmp_fsm_3 == 3) && ((_tmp_60 > 0) && (myaxi_wready || !myaxi_wvalid));\n  reg _myaxi_cond_5_1;\n  reg signed [32-1:0] _th_comp_offset_stream_24;\n  reg signed [32-1:0] _th_comp_offset_seq_25;\n  reg signed [32-1:0] _th_comp_all_ok_26;\n  reg signed [32-1:0] _th_comp_i_27;\n  reg _tmp_75;\n  reg _ram_c_cond_2_1;\n  reg _ram_c_cond_3_1;\n  reg _ram_c_cond_3_2;\n  reg signed [32-1:0] _tmp_76;\n  reg signed [32-1:0] _th_comp_st_28;\n  reg _tmp_77;\n  reg _ram_c_cond_4_1;\n  reg _ram_c_cond_5_1;\n  reg _ram_c_cond_5_2;\n  reg signed [32-1:0] _tmp_78;\n  reg signed [32-1:0] _th_comp_sq_29;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      myaxi_araddr <= 0;\n      myaxi_arlen <= 0;\n      myaxi_arvalid <= 0;\n      _tmp_4 <= 0;\n      _myaxi_cond_0_1 <= 0;\n      myaxi_awaddr <= 0;\n      myaxi_awlen <= 0;\n      myaxi_awvalid <= 0;\n      _tmp_29 <= 0;\n      _myaxi_cond_1_1 <= 0;\n      myaxi_wdata <= 0;\n      myaxi_wvalid <= 0;\n      myaxi_wlast <= 0;\n      myaxi_wstrb <= 0;\n      _tmp_42 <= 0;\n      _myaxi_cond_2_1 <= 0;\n      _tmp_48 <= 0;\n      _myaxi_cond_3_1 <= 0;\n      _tmp_60 <= 0;\n      _myaxi_cond_4_1 <= 0;\n      _tmp_73 <= 0;\n      _myaxi_cond_5_1 <= 0;\n    end else begin\n      if(_myaxi_cond_0_1) begin\n        myaxi_arvalid <= 0;\n      end \n      if(_myaxi_cond_1_1) begin\n        myaxi_awvalid <= 0;\n      end \n      if(_myaxi_cond_2_1) begin\n        myaxi_wvalid <= 0;\n        myaxi_wlast <= 0;\n        _tmp_42 <= 0;\n      end \n      if(_myaxi_cond_3_1) begin\n        myaxi_arvalid <= 0;\n      end \n      if(_myaxi_cond_4_1) begin\n        myaxi_awvalid <= 0;\n      end \n      if(_myaxi_cond_5_1) begin\n        myaxi_wvalid <= 0;\n        myaxi_wlast <= 0;\n        _tmp_73 <= 0;\n      end \n      if((_tmp_fsm_0 == 1) && ((myaxi_arready || !myaxi_arvalid) && (_tmp_4 == 0))) begin\n        myaxi_araddr <= _tmp_1;\n        myaxi_arlen <= _tmp_2 - 1;\n        myaxi_arvalid <= 1;\n        _tmp_4 <= _tmp_2;\n      end \n      _myaxi_cond_0_1 <= 1;\n      if(myaxi_arvalid && !myaxi_arready) begin\n        myaxi_arvalid <= myaxi_arvalid;\n      end \n      if(myaxi_rready && myaxi_rvalid && (_tmp_4 > 0)) begin\n        _tmp_4 <= _tmp_4 - 1;\n      end \n      if((_tmp_fsm_1 == 1) && ((myaxi_awready || !myaxi_awvalid) && (_tmp_29 == 0))) begin\n        myaxi_awaddr <= _tmp_26;\n        myaxi_awlen <= _tmp_27 - 1;\n        myaxi_awvalid <= 1;\n        _tmp_29 <= _tmp_27;\n      end \n      if((_tmp_fsm_1 == 1) && ((myaxi_awready || !myaxi_awvalid) && (_tmp_29 == 0)) && (_tmp_27 == 0)) begin\n        myaxi_awvalid <= 0;\n      end \n      _myaxi_cond_1_1 <= 1;\n      if(myaxi_awvalid && !myaxi_awready) begin\n        myaxi_awvalid <= myaxi_awvalid;\n      end \n      if(_tmp_valid_43 && ((_tmp_fsm_1 == 3) && ((_tmp_29 > 0) && (myaxi_wready || !myaxi_wvalid))) && ((_tmp_29 > 0) && (myaxi_wready || !myaxi_wvalid) && (_tmp_29 > 0))) begin\n        myaxi_wdata <= _tmp_data_43;\n        myaxi_wvalid <= 1;\n        myaxi_wlast <= 0;\n        myaxi_wstrb <= { 4{ 1'd1 } };\n        _tmp_29 <= _tmp_29 - 1;\n      end \n      if(_tmp_valid_43 && ((_tmp_fsm_1 == 3) && ((_tmp_29 > 0) && (myaxi_wready || !myaxi_wvalid))) && ((_tmp_29 > 0) && (myaxi_wready || !myaxi_wvalid) && (_tmp_29 > 0)) && (_tmp_29 == 1)) begin\n        myaxi_wlast <= 1;\n        _tmp_42 <= 1;\n      end \n      _myaxi_cond_2_1 <= 1;\n      if(myaxi_wvalid && !myaxi_wready) begin\n        myaxi_wvalid <= myaxi_wvalid;\n        myaxi_wlast <= myaxi_wlast;\n        _tmp_42 <= _tmp_42;\n      end \n      if((_tmp_fsm_2 == 1) && ((myaxi_arready || !myaxi_arvalid) && (_tmp_48 == 0))) begin\n        myaxi_araddr <= _tmp_45;\n        myaxi_arlen <= _tmp_46 - 1;\n        myaxi_arvalid <= 1;\n        _tmp_48 <= _tmp_46;\n      end \n      _myaxi_cond_3_1 <= 1;\n      if(myaxi_arvalid && !myaxi_arready) begin\n        myaxi_arvalid <= myaxi_arvalid;\n      end \n      if(myaxi_rready && myaxi_rvalid && (_tmp_48 > 0)) begin\n        _tmp_48 <= _tmp_48 - 1;\n      end \n      if((_tmp_fsm_3 == 1) && ((myaxi_awready || !myaxi_awvalid) && (_tmp_60 == 0))) begin\n        myaxi_awaddr <= _tmp_57;\n        myaxi_awlen <= _tmp_58 - 1;\n        myaxi_awvalid <= 1;\n        _tmp_60 <= _tmp_58;\n      end \n      if((_tmp_fsm_3 == 1) && ((myaxi_awready || !myaxi_awvalid) && (_tmp_60 == 0)) && (_tmp_58 == 0)) begin\n        myaxi_awvalid <= 0;\n      end \n      _myaxi_cond_4_1 <= 1;\n      if(myaxi_awvalid && !myaxi_awready) begin\n        myaxi_awvalid <= myaxi_awvalid;\n      end \n      if(_tmp_valid_74 && ((_tmp_fsm_3 == 3) && ((_tmp_60 > 0) && (myaxi_wready || !myaxi_wvalid))) && ((_tmp_60 > 0) && (myaxi_wready || !myaxi_wvalid) && (_tmp_60 > 0))) begin\n        myaxi_wdata <= _tmp_data_74;\n        myaxi_wvalid <= 1;\n        myaxi_wlast <= 0;\n        myaxi_wstrb <= { 4{ 1'd1 } };\n        _tmp_60 <= _tmp_60 - 1;\n      end \n      if(_tmp_valid_74 && ((_tmp_fsm_3 == 3) && ((_tmp_60 > 0) && (myaxi_wready || !myaxi_wvalid))) && ((_tmp_60 > 0) && (myaxi_wready || !myaxi_wvalid) && (_tmp_60 > 0)) && (_tmp_60 == 1)) begin\n        myaxi_wlast <= 1;\n        _tmp_73 <= 1;\n      end \n      _myaxi_cond_5_1 <= 1;\n      if(myaxi_wvalid && !myaxi_wready) begin\n        myaxi_wvalid <= myaxi_wvalid;\n        myaxi_wlast <= myaxi_wlast;\n        _tmp_73 <= _tmp_73;\n      end \n    end\n  end\n\n  assign _tmp_data_9 = _tmp_5;\n  assign _tmp_valid_9 = _tmp_6;\n  assign _tmp_data_53 = _tmp_49;\n  assign _tmp_valid_53 = _tmp_50;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      ram_a_0_addr <= 0;\n      _tmp_7 <= 0;\n      ram_a_0_wdata <= 0;\n      ram_a_0_wenable <= 0;\n      _tmp_8 <= 0;\n      _ram_a_cond_0_1 <= 0;\n      __tmp_15_1 <= 0;\n      __tmp_16_1 <= 0;\n      _tmp_21 <= 0;\n      _tmp_10 <= 0;\n      _tmp_11 <= 0;\n      _tmp_19 <= 0;\n      _tmp_20 <= 0;\n      _tmp_18 <= 0;\n      _tmp_17 <= 0;\n      _tmp_51 <= 0;\n      _tmp_52 <= 0;\n      _ram_a_cond_1_1 <= 0;\n      _ram_a_cond_2_1 <= 0;\n      _tmp_54 <= 0;\n      _ram_a_cond_3_1 <= 0;\n      _ram_a_cond_3_2 <= 0;\n    end else begin\n      if(_ram_a_cond_3_2) begin\n        _tmp_54 <= 0;\n      end \n      if(_ram_a_cond_0_1) begin\n        ram_a_0_wenable <= 0;\n        _tmp_8 <= 0;\n      end \n      if(_ram_a_cond_1_1) begin\n        ram_a_0_wenable <= 0;\n        _tmp_52 <= 0;\n      end \n      if(_ram_a_cond_2_1) begin\n        _tmp_54 <= 1;\n      end \n      _ram_a_cond_3_2 <= _ram_a_cond_3_1;\n      if((_tmp_fsm_0 == 2) && (_tmp_7 == 0)) begin\n        ram_a_0_addr <= _tmp_0 - 1;\n        _tmp_7 <= _tmp_2;\n      end \n      if(_tmp_valid_9 && ((_tmp_7 > 0) && !_tmp_8) && (_tmp_7 > 0)) begin\n        ram_a_0_addr <= ram_a_0_addr + 1;\n        ram_a_0_wdata <= _tmp_data_9;\n        ram_a_0_wenable <= 1;\n        _tmp_7 <= _tmp_7 - 1;\n      end \n      if(_tmp_valid_9 && ((_tmp_7 > 0) && !_tmp_8) && (_tmp_7 == 1)) begin\n        _tmp_8 <= 1;\n      end \n      _ram_a_cond_0_1 <= 1;\n      __tmp_15_1 <= _tmp_15;\n      __tmp_16_1 <= _tmp_16;\n      if((_tmp_12 || !_tmp_10) && (_tmp_13 || !_tmp_11) && _tmp_19) begin\n        _tmp_21 <= 0;\n        _tmp_10 <= 0;\n        _tmp_11 <= 0;\n        _tmp_19 <= 0;\n      end \n      if((_tmp_12 || !_tmp_10) && (_tmp_13 || !_tmp_11) && _tmp_18) begin\n        _tmp_10 <= 1;\n        _tmp_11 <= 1;\n        _tmp_21 <= _tmp_20;\n        _tmp_20 <= 0;\n        _tmp_18 <= 0;\n        _tmp_19 <= 1;\n      end \n      if((_mystream_fsm_5 == 1) && (_tmp_17 == 0) && !_tmp_20 && !_tmp_21) begin\n        ram_a_0_addr <= _mystream_req_addr_2;\n        _tmp_17 <= 7;\n        _tmp_18 <= 1;\n      end \n      if((_tmp_12 || !_tmp_10) && (_tmp_13 || !_tmp_11) && (_tmp_17 > 0)) begin\n        ram_a_0_addr <= ram_a_0_addr + 8;\n        _tmp_17 <= _tmp_17 - 1;\n        _tmp_18 <= 1;\n        _tmp_20 <= 0;\n      end \n      if((_tmp_12 || !_tmp_10) && (_tmp_13 || !_tmp_11) && (_tmp_17 == 1)) begin\n        _tmp_20 <= 1;\n      end \n      if((_tmp_fsm_2 == 2) && (_tmp_51 == 0)) begin\n        ram_a_0_addr <= _tmp_44 - 1;\n        _tmp_51 <= _tmp_46;\n      end \n      if(_tmp_valid_53 && ((_tmp_51 > 0) && !_tmp_52) && (_tmp_51 > 0)) begin\n        ram_a_0_addr <= ram_a_0_addr + 1;\n        ram_a_0_wdata <= _tmp_data_53;\n        ram_a_0_wenable <= 1;\n        _tmp_51 <= _tmp_51 - 1;\n      end \n      if(_tmp_valid_53 && ((_tmp_51 > 0) && !_tmp_52) && (_tmp_51 == 1)) begin\n        _tmp_52 <= 1;\n      end \n      _ram_a_cond_1_1 <= 1;\n      if(th_sequential == 11) begin\n        ram_a_0_addr <= ((_th_sequential_z_22 << 2) << 1) + (_th_sequential_y_21 << 2) + _th_sequential_x_20 + _th_sequential_offset_16;\n      end \n      _ram_a_cond_2_1 <= th_sequential == 11;\n      _ram_a_cond_3_1 <= th_sequential == 11;\n    end\n  end\n\n  assign _tmp_data_24 = _tmp_16;\n  assign _tmp_valid_24 = _tmp_10;\n  assign _tmp_12 = 1 && _tmp_ready_24;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      ram_c_0_addr <= 0;\n      _tmp_22 <= 0;\n      ram_c_0_wdata <= 0;\n      ram_c_0_wenable <= 0;\n      _tmp_23 <= 0;\n      _ram_c_cond_0_1 <= 0;\n      __tmp_35_1 <= 0;\n      __tmp_36_1 <= 0;\n      _tmp_41 <= 0;\n      _tmp_30 <= 0;\n      _tmp_31 <= 0;\n      _tmp_39 <= 0;\n      _tmp_40 <= 0;\n      _tmp_38 <= 0;\n      _tmp_37 <= 0;\n      _ram_c_cond_1_1 <= 0;\n      __tmp_66_1 <= 0;\n      __tmp_67_1 <= 0;\n      _tmp_72 <= 0;\n      _tmp_61 <= 0;\n      _tmp_62 <= 0;\n      _tmp_70 <= 0;\n      _tmp_71 <= 0;\n      _tmp_69 <= 0;\n      _tmp_68 <= 0;\n      _ram_c_cond_2_1 <= 0;\n      _tmp_75 <= 0;\n      _ram_c_cond_3_1 <= 0;\n      _ram_c_cond_3_2 <= 0;\n      _ram_c_cond_4_1 <= 0;\n      _tmp_77 <= 0;\n      _ram_c_cond_5_1 <= 0;\n      _ram_c_cond_5_2 <= 0;\n    end else begin\n      if(_ram_c_cond_3_2) begin\n        _tmp_75 <= 0;\n      end \n      if(_ram_c_cond_5_2) begin\n        _tmp_77 <= 0;\n      end \n      if(_ram_c_cond_0_1) begin\n        ram_c_0_wenable <= 0;\n        _tmp_23 <= 0;\n      end \n      if(_ram_c_cond_1_1) begin\n        ram_c_0_wenable <= 0;\n      end \n      if(_ram_c_cond_2_1) begin\n        _tmp_75 <= 1;\n      end \n      _ram_c_cond_3_2 <= _ram_c_cond_3_1;\n      if(_ram_c_cond_4_1) begin\n        _tmp_77 <= 1;\n      end \n      _ram_c_cond_5_2 <= _ram_c_cond_5_1;\n      if((_mystream_fsm_12 == 1) && (_tmp_22 == 0)) begin\n        ram_c_0_addr <= _mystream_req_addr_9 - 1;\n        _tmp_22 <= 4;\n      end \n      if(_tmp_valid_24 && ((_tmp_22 > 0) && !_tmp_23) && (_tmp_22 > 0)) begin\n        ram_c_0_addr <= ram_c_0_addr + 1;\n        ram_c_0_wdata <= _tmp_data_24;\n        ram_c_0_wenable <= 1;\n        _tmp_22 <= _tmp_22 - 1;\n      end \n      if(_tmp_valid_24 && ((_tmp_22 > 0) && !_tmp_23) && (_tmp_22 == 1)) begin\n        _tmp_23 <= 1;\n      end \n      _ram_c_cond_0_1 <= 1;\n      __tmp_35_1 <= _tmp_35;\n      __tmp_36_1 <= _tmp_36;\n      if((_tmp_32 || !_tmp_30) && (_tmp_33 || !_tmp_31) && _tmp_39) begin\n        _tmp_41 <= 0;\n        _tmp_30 <= 0;\n        _tmp_31 <= 0;\n        _tmp_39 <= 0;\n      end \n      if((_tmp_32 || !_tmp_30) && (_tmp_33 || !_tmp_31) && _tmp_38) begin\n        _tmp_30 <= 1;\n        _tmp_31 <= 1;\n        _tmp_41 <= _tmp_40;\n        _tmp_40 <= 0;\n        _tmp_38 <= 0;\n        _tmp_39 <= 1;\n      end \n      if((_tmp_fsm_1 == 2) && (_tmp_37 == 0) && !_tmp_40 && !_tmp_41) begin\n        ram_c_0_addr <= _tmp_25;\n        _tmp_37 <= _tmp_27 - 1;\n        _tmp_38 <= 1;\n      end \n      if((_tmp_32 || !_tmp_30) && (_tmp_33 || !_tmp_31) && (_tmp_37 > 0)) begin\n        ram_c_0_addr <= ram_c_0_addr + 1;\n        _tmp_37 <= _tmp_37 - 1;\n        _tmp_38 <= 1;\n        _tmp_40 <= 0;\n      end \n      if((_tmp_32 || !_tmp_30) && (_tmp_33 || !_tmp_31) && (_tmp_37 == 1)) begin\n        _tmp_40 <= 1;\n      end \n      if(th_sequential == 13) begin\n        ram_c_0_addr <= _th_sequential_zpos_17 + _th_sequential_ypos_18 + _th_sequential_xpos_19 + _th_sequential_offset_16;\n        ram_c_0_wdata <= _th_sequential_a_23;\n        ram_c_0_wenable <= 1;\n      end \n      _ram_c_cond_1_1 <= th_sequential == 13;\n      __tmp_66_1 <= _tmp_66;\n      __tmp_67_1 <= _tmp_67;\n      if((_tmp_63 || !_tmp_61) && (_tmp_64 || !_tmp_62) && _tmp_70) begin\n        _tmp_72 <= 0;\n        _tmp_61 <= 0;\n        _tmp_62 <= 0;\n        _tmp_70 <= 0;\n      end \n      if((_tmp_63 || !_tmp_61) && (_tmp_64 || !_tmp_62) && _tmp_69) begin\n        _tmp_61 <= 1;\n        _tmp_62 <= 1;\n        _tmp_72 <= _tmp_71;\n        _tmp_71 <= 0;\n        _tmp_69 <= 0;\n        _tmp_70 <= 1;\n      end \n      if((_tmp_fsm_3 == 2) && (_tmp_68 == 0) && !_tmp_71 && !_tmp_72) begin\n        ram_c_0_addr <= _tmp_56;\n        _tmp_68 <= _tmp_58 - 1;\n        _tmp_69 <= 1;\n      end \n      if((_tmp_63 || !_tmp_61) && (_tmp_64 || !_tmp_62) && (_tmp_68 > 0)) begin\n        ram_c_0_addr <= ram_c_0_addr + 1;\n        _tmp_68 <= _tmp_68 - 1;\n        _tmp_69 <= 1;\n        _tmp_71 <= 0;\n      end \n      if((_tmp_63 || !_tmp_61) && (_tmp_64 || !_tmp_62) && (_tmp_68 == 1)) begin\n        _tmp_71 <= 1;\n      end \n      if(th_comp == 23) begin\n        ram_c_0_addr <= _th_comp_i_27 + _th_comp_offset_stream_24;\n      end \n      _ram_c_cond_2_1 <= th_comp == 23;\n      _ram_c_cond_3_1 <= th_comp == 23;\n      if(th_comp == 25) begin\n        ram_c_0_addr <= _th_comp_i_27 + _th_comp_offset_seq_25;\n      end \n      _ram_c_cond_4_1 <= th_comp == 25;\n      _ram_c_cond_5_1 <= th_comp == 25;\n    end\n  end\n\n  assign _tmp_data_43 = _tmp_36;\n  assign _tmp_valid_43 = _tmp_30;\n  assign _tmp_32 = 1 && _tmp_ready_43;\n  assign _tmp_data_74 = _tmp_67;\n  assign _tmp_valid_74 = _tmp_61;\n  assign _tmp_63 = 1 && _tmp_ready_74;\n  localparam th_comp_1 = 1;\n  localparam th_comp_2 = 2;\n  localparam th_comp_3 = 3;\n  localparam th_comp_4 = 4;\n  localparam th_comp_5 = 5;\n  localparam th_comp_6 = 6;\n  localparam th_comp_7 = 7;\n  localparam th_comp_8 = 8;\n  localparam th_comp_9 = 9;\n  localparam th_comp_10 = 10;\n  localparam th_comp_11 = 11;\n  localparam th_comp_12 = 12;\n  localparam th_comp_13 = 13;\n  localparam th_comp_14 = 14;\n  localparam th_comp_15 = 15;\n  localparam th_comp_16 = 16;\n  localparam th_comp_17 = 17;\n  localparam th_comp_18 = 18;\n  localparam th_comp_19 = 19;\n  localparam th_comp_20 = 20;\n  localparam th_comp_21 = 21;\n  localparam th_comp_22 = 22;\n  localparam th_comp_23 = 23;\n  localparam th_comp_24 = 24;\n  localparam th_comp_25 = 25;\n  localparam th_comp_26 = 26;\n  localparam th_comp_27 = 27;\n  localparam th_comp_28 = 28;\n  localparam th_comp_29 = 29;\n  localparam th_comp_30 = 30;\n  localparam th_comp_31 = 31;\n  localparam th_comp_32 = 32;\n  localparam th_comp_33 = 33;\n  localparam th_comp_34 = 34;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      th_comp <= th_comp_init;\n      _th_comp_offset_0 <= 0;\n      _tmp_0 <= 0;\n      _tmp_1 <= 0;\n      _tmp_3 <= 0;\n      _tmp_2 <= 0;\n      _tmp_25 <= 0;\n      _tmp_26 <= 0;\n      _tmp_28 <= 0;\n      _tmp_27 <= 0;\n      _tmp_44 <= 0;\n      _tmp_45 <= 0;\n      _tmp_47 <= 0;\n      _tmp_46 <= 0;\n      _tmp_56 <= 0;\n      _tmp_57 <= 0;\n      _tmp_59 <= 0;\n      _tmp_58 <= 0;\n      _th_comp_offset_stream_24 <= 0;\n      _th_comp_offset_seq_25 <= 0;\n      _th_comp_all_ok_26 <= 0;\n      _th_comp_i_27 <= 0;\n      _tmp_76 <= 0;\n      _th_comp_st_28 <= 0;\n      _tmp_78 <= 0;\n      _th_comp_sq_29 <= 0;\n    end else begin\n      case(th_comp)\n        th_comp_init: begin\n          th_comp <= th_comp_1;\n        end\n        th_comp_1: begin\n          _th_comp_offset_0 <= 0;\n          th_comp <= th_comp_2;\n        end\n        th_comp_2: begin\n          _tmp_0 <= _th_comp_offset_0;\n          _tmp_1 <= 0;\n          _tmp_3 <= 64;\n          th_comp <= th_comp_3;\n        end\n        th_comp_3: begin\n          if(_tmp_3 <= 256) begin\n            _tmp_2 <= _tmp_3;\n            _tmp_3 <= 0;\n          end else begin\n            _tmp_2 <= 256;\n            _tmp_3 <= _tmp_3 - 256;\n          end\n          th_comp <= th_comp_4;\n        end\n        th_comp_4: begin\n          if(_tmp_8) begin\n            _tmp_0 <= _tmp_0 + _tmp_2;\n            _tmp_1 <= _tmp_1 + (_tmp_2 << 2);\n          end \n          if(_tmp_8 && (_tmp_3 > 0)) begin\n            th_comp <= th_comp_3;\n          end \n          if(_tmp_8 && (_tmp_3 == 0)) begin\n            th_comp <= th_comp_5;\n          end \n        end\n        th_comp_5: begin\n          th_comp <= th_comp_6;\n        end\n        th_comp_6: begin\n          if(_mystream_flag_1 && _mystream_flag_8) begin\n            th_comp <= th_comp_7;\n          end \n        end\n        th_comp_7: begin\n          _tmp_25 <= _th_comp_offset_0;\n          _tmp_26 <= 4096;\n          _tmp_28 <= 64;\n          th_comp <= th_comp_8;\n        end\n        th_comp_8: begin\n          if(_tmp_28 <= 256) begin\n            _tmp_27 <= _tmp_28;\n            _tmp_28 <= 0;\n          end else begin\n            _tmp_27 <= 256;\n            _tmp_28 <= _tmp_28 - 256;\n          end\n          th_comp <= th_comp_9;\n        end\n        th_comp_9: begin\n          if(_tmp_42) begin\n            _tmp_25 <= _tmp_25 + _tmp_27;\n            _tmp_26 <= _tmp_26 + (_tmp_27 << 2);\n          end \n          if(_tmp_42 && (_tmp_28 > 0)) begin\n            th_comp <= th_comp_8;\n          end \n          if(_tmp_42 && (_tmp_28 == 0)) begin\n            th_comp <= th_comp_10;\n          end \n        end\n        th_comp_10: begin\n          _th_comp_offset_0 <= 64;\n          th_comp <= th_comp_11;\n        end\n        th_comp_11: begin\n          _tmp_44 <= _th_comp_offset_0;\n          _tmp_45 <= 0;\n          _tmp_47 <= 64;\n          th_comp <= th_comp_12;\n        end\n        th_comp_12: begin\n          if(_tmp_47 <= 256) begin\n            _tmp_46 <= _tmp_47;\n            _tmp_47 <= 0;\n          end else begin\n            _tmp_46 <= 256;\n            _tmp_47 <= _tmp_47 - 256;\n          end\n          th_comp <= th_comp_13;\n        end\n        th_comp_13: begin\n          if(_tmp_52) begin\n            _tmp_44 <= _tmp_44 + _tmp_46;\n            _tmp_45 <= _tmp_45 + (_tmp_46 << 2);\n          end \n          if(_tmp_52 && (_tmp_47 > 0)) begin\n            th_comp <= th_comp_12;\n          end \n          if(_tmp_52 && (_tmp_47 == 0)) begin\n            th_comp <= th_comp_14;\n          end \n        end\n        th_comp_14: begin\n          th_comp <= th_comp_15;\n        end\n        th_comp_15: begin\n          if(th_sequential == 24) begin\n            th_comp <= th_comp_16;\n          end \n        end\n        th_comp_16: begin\n          _tmp_56 <= _th_comp_offset_0;\n          _tmp_57 <= 8192;\n          _tmp_59 <= 64;\n          th_comp <= th_comp_17;\n        end\n        th_comp_17: begin\n          if(_tmp_59 <= 256) begin\n            _tmp_58 <= _tmp_59;\n            _tmp_59 <= 0;\n          end else begin\n            _tmp_58 <= 256;\n            _tmp_59 <= _tmp_59 - 256;\n          end\n          th_comp <= th_comp_18;\n        end\n        th_comp_18: begin\n          if(_tmp_73) begin\n            _tmp_56 <= _tmp_56 + _tmp_58;\n            _tmp_57 <= _tmp_57 + (_tmp_58 << 2);\n          end \n          if(_tmp_73 && (_tmp_59 > 0)) begin\n            th_comp <= th_comp_17;\n          end \n          if(_tmp_73 && (_tmp_59 == 0)) begin\n            th_comp <= th_comp_19;\n          end \n        end\n        th_comp_19: begin\n          _th_comp_offset_stream_24 <= 0;\n          _th_comp_offset_seq_25 <= _th_comp_offset_0;\n          th_comp <= th_comp_20;\n        end\n        th_comp_20: begin\n          _th_comp_all_ok_26 <= 1;\n          th_comp <= th_comp_21;\n        end\n        th_comp_21: begin\n          _th_comp_i_27 <= 0;\n          th_comp <= th_comp_22;\n        end\n        th_comp_22: begin\n          if(_th_comp_i_27 < 64) begin\n            th_comp <= th_comp_23;\n          end else begin\n            th_comp <= th_comp_30;\n          end\n        end\n        th_comp_23: begin\n          if(_tmp_75) begin\n            _tmp_76 <= ram_c_0_rdata;\n          end \n          if(_tmp_75) begin\n            th_comp <= th_comp_24;\n          end \n        end\n        th_comp_24: begin\n          _th_comp_st_28 <= _tmp_76;\n          th_comp <= th_comp_25;\n        end\n        th_comp_25: begin\n          if(_tmp_77) begin\n            _tmp_78 <= ram_c_0_rdata;\n          end \n          if(_tmp_77) begin\n            th_comp <= th_comp_26;\n          end \n        end\n        th_comp_26: begin\n          _th_comp_sq_29 <= _tmp_78;\n          th_comp <= th_comp_27;\n        end\n        th_comp_27: begin\n          if(_th_comp_st_28 != _th_comp_sq_29) begin\n            th_comp <= th_comp_28;\n          end else begin\n            th_comp <= th_comp_29;\n          end\n        end\n        th_comp_28: begin\n          _th_comp_all_ok_26 <= 0;\n          th_comp <= th_comp_29;\n        end\n        th_comp_29: begin\n          _th_comp_i_27 <= _th_comp_i_27 + 1;\n          th_comp <= th_comp_22;\n        end\n        th_comp_30: begin\n          if(_th_comp_all_ok_26) begin\n            th_comp <= th_comp_31;\n          end else begin\n            th_comp <= th_comp_33;\n          end\n        end\n        th_comp_31: begin\n          $display(\"OK\");\n          th_comp <= th_comp_32;\n        end\n        th_comp_32: begin\n          th_comp <= th_comp_34;\n        end\n        th_comp_33: begin\n          $display(\"NG\");\n          th_comp <= th_comp_34;\n        end\n      endcase\n    end\n  end\n\n  localparam _tmp_fsm_0_1 = 1;\n  localparam _tmp_fsm_0_2 = 2;\n  localparam _tmp_fsm_0_3 = 3;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      _tmp_fsm_0 <= _tmp_fsm_0_init;\n      _tmp_6 <= 0;\n      _tmp_5 <= 0;\n    end else begin\n      case(_tmp_fsm_0)\n        _tmp_fsm_0_init: begin\n          if(th_comp == 4) begin\n            _tmp_fsm_0 <= _tmp_fsm_0_1;\n          end \n        end\n        _tmp_fsm_0_1: begin\n          if(myaxi_arready || !myaxi_arvalid) begin\n            _tmp_fsm_0 <= _tmp_fsm_0_2;\n          end \n        end\n        _tmp_fsm_0_2: begin\n          _tmp_fsm_0 <= _tmp_fsm_0_3;\n        end\n        _tmp_fsm_0_3: begin\n          _tmp_6 <= 0;\n          if(myaxi_rready && myaxi_rvalid) begin\n            _tmp_5 <= myaxi_rdata;\n            _tmp_6 <= 1;\n          end \n          if(_tmp_8) begin\n            _tmp_fsm_0 <= _tmp_fsm_0_init;\n          end \n        end\n      endcase\n    end\n  end\n\n  localparam _mystream_fsm_5_1 = 1;\n  localparam _mystream_fsm_5_2 = 2;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      _mystream_fsm_5 <= _mystream_fsm_5_init;\n      _mystream_flag_1 <= 0;\n      _mystream_offset_0_3 <= 0;\n      _mystream_offset_1_4 <= 0;\n      _mystream_count_0_6 <= 0;\n      _mystream_count_1_7 <= 0;\n    end else begin\n      case(_mystream_fsm_5)\n        _mystream_fsm_5_init: begin\n          if(th_comp == 5) begin\n            _mystream_flag_1 <= 0;\n            _mystream_offset_0_3 <= 0;\n            _mystream_offset_1_4 <= 0;\n          end \n          if(th_comp == 5) begin\n            _mystream_fsm_5 <= _mystream_fsm_5_1;\n          end \n        end\n        _mystream_fsm_5_1: begin\n          _mystream_fsm_5 <= _mystream_fsm_5_2;\n        end\n        _mystream_fsm_5_2: begin\n          if(_tmp_21) begin\n            _mystream_count_0_6 <= _mystream_count_0_6 + 1;\n            _mystream_offset_0_3 <= _mystream_offset_0_3 + 4;\n          end \n          if(_tmp_21 && (_mystream_count_0_6 == 1)) begin\n            _mystream_count_0_6 <= 0;\n            _mystream_offset_0_3 <= 0;\n          end \n          if(_tmp_21 && (_mystream_count_0_6 == 1)) begin\n            _mystream_count_1_7 <= _mystream_count_1_7 + 1;\n            _mystream_offset_1_4 <= _mystream_offset_1_4 + 1;\n          end \n          if(_tmp_21 && (_mystream_count_0_6 == 1) && (_mystream_count_1_7 == 3)) begin\n            _mystream_count_1_7 <= 0;\n            _mystream_offset_1_4 <= 0;\n          end \n          if(_tmp_21 && ((_mystream_count_0_6 == 1) && (_mystream_count_1_7 == 3))) begin\n            _mystream_flag_1 <= 1;\n          end \n          if(_tmp_21) begin\n            _mystream_fsm_5 <= _mystream_fsm_5_1;\n          end \n          if(_tmp_21 && ((_mystream_count_0_6 == 1) && (_mystream_count_1_7 == 3))) begin\n            _mystream_fsm_5 <= _mystream_fsm_5_init;\n          end \n        end\n      endcase\n    end\n  end\n\n  localparam _mystream_fsm_12_1 = 1;\n  localparam _mystream_fsm_12_2 = 2;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      _mystream_fsm_12 <= _mystream_fsm_12_init;\n      _mystream_flag_8 <= 0;\n      _mystream_offset_0_10 <= 0;\n      _mystream_offset_1_11 <= 0;\n      _mystream_count_0_13 <= 0;\n      _mystream_count_1_14 <= 0;\n    end else begin\n      case(_mystream_fsm_12)\n        _mystream_fsm_12_init: begin\n          if(th_comp == 5) begin\n            _mystream_flag_8 <= 0;\n            _mystream_offset_0_10 <= 0;\n            _mystream_offset_1_11 <= 0;\n          end \n          if(th_comp == 5) begin\n            _mystream_fsm_12 <= _mystream_fsm_12_1;\n          end \n        end\n        _mystream_fsm_12_1: begin\n          _mystream_fsm_12 <= _mystream_fsm_12_2;\n        end\n        _mystream_fsm_12_2: begin\n          if(_tmp_23) begin\n            _mystream_count_0_13 <= _mystream_count_0_13 + 1;\n            _mystream_offset_0_10 <= _mystream_offset_0_10 + 4;\n          end \n          if(_tmp_23 && (_mystream_count_0_13 == 1)) begin\n            _mystream_count_0_13 <= 0;\n            _mystream_offset_0_10 <= 0;\n          end \n          if(_tmp_23 && (_mystream_count_0_13 == 1)) begin\n            _mystream_count_1_14 <= _mystream_count_1_14 + 1;\n            _mystream_offset_1_11 <= _mystream_offset_1_11 + 8;\n          end \n          if(_tmp_23 && (_mystream_count_0_13 == 1) && (_mystream_count_1_14 == 7)) begin\n            _mystream_count_1_14 <= 0;\n            _mystream_offset_1_11 <= 0;\n          end \n          if(_tmp_23 && ((_mystream_count_0_13 == 1) && (_mystream_count_1_14 == 7))) begin\n            _mystream_flag_8 <= 1;\n          end \n          if(_tmp_23) begin\n            _mystream_fsm_12 <= _mystream_fsm_12_1;\n          end \n          if(_tmp_23 && ((_mystream_count_0_13 == 1) && (_mystream_count_1_14 == 7))) begin\n            _mystream_fsm_12 <= _mystream_fsm_12_init;\n          end \n        end\n      endcase\n    end\n  end\n\n  localparam _tmp_fsm_1_1 = 1;\n  localparam _tmp_fsm_1_2 = 2;\n  localparam _tmp_fsm_1_3 = 3;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      _tmp_fsm_1 <= _tmp_fsm_1_init;\n    end else begin\n      case(_tmp_fsm_1)\n        _tmp_fsm_1_init: begin\n          if(th_comp == 9) begin\n            _tmp_fsm_1 <= _tmp_fsm_1_1;\n          end \n        end\n        _tmp_fsm_1_1: begin\n          if(myaxi_awready || !myaxi_awvalid) begin\n            _tmp_fsm_1 <= _tmp_fsm_1_2;\n          end \n        end\n        _tmp_fsm_1_2: begin\n          _tmp_fsm_1 <= _tmp_fsm_1_3;\n        end\n        _tmp_fsm_1_3: begin\n          if(_tmp_42) begin\n            _tmp_fsm_1 <= _tmp_fsm_1_init;\n          end \n        end\n      endcase\n    end\n  end\n\n  localparam _tmp_fsm_2_1 = 1;\n  localparam _tmp_fsm_2_2 = 2;\n  localparam _tmp_fsm_2_3 = 3;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      _tmp_fsm_2 <= _tmp_fsm_2_init;\n      _tmp_50 <= 0;\n      _tmp_49 <= 0;\n    end else begin\n      case(_tmp_fsm_2)\n        _tmp_fsm_2_init: begin\n          if(th_comp == 13) begin\n            _tmp_fsm_2 <= _tmp_fsm_2_1;\n          end \n        end\n        _tmp_fsm_2_1: begin\n          if(myaxi_arready || !myaxi_arvalid) begin\n            _tmp_fsm_2 <= _tmp_fsm_2_2;\n          end \n        end\n        _tmp_fsm_2_2: begin\n          _tmp_fsm_2 <= _tmp_fsm_2_3;\n        end\n        _tmp_fsm_2_3: begin\n          _tmp_50 <= 0;\n          if(myaxi_rready && myaxi_rvalid) begin\n            _tmp_49 <= myaxi_rdata;\n            _tmp_50 <= 1;\n          end \n          if(_tmp_52) begin\n            _tmp_fsm_2 <= _tmp_fsm_2_init;\n          end \n        end\n      endcase\n    end\n  end\n\n  localparam th_sequential_1 = 1;\n  localparam th_sequential_2 = 2;\n  localparam th_sequential_3 = 3;\n  localparam th_sequential_4 = 4;\n  localparam th_sequential_5 = 5;\n  localparam th_sequential_6 = 6;\n  localparam th_sequential_7 = 7;\n  localparam th_sequential_8 = 8;\n  localparam th_sequential_9 = 9;\n  localparam th_sequential_10 = 10;\n  localparam th_sequential_11 = 11;\n  localparam th_sequential_12 = 12;\n  localparam th_sequential_13 = 13;\n  localparam th_sequential_14 = 14;\n  localparam th_sequential_15 = 15;\n  localparam th_sequential_16 = 16;\n  localparam th_sequential_17 = 17;\n  localparam th_sequential_18 = 18;\n  localparam th_sequential_19 = 19;\n  localparam th_sequential_20 = 20;\n  localparam th_sequential_21 = 21;\n  localparam th_sequential_22 = 22;\n  localparam th_sequential_23 = 23;\n  localparam th_sequential_24 = 24;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      th_sequential <= th_sequential_init;\n      _th_sequential_called <= 0;\n      _th_sequential_offset_15 <= 0;\n      _th_sequential_offset_16 <= 0;\n      _th_sequential_zpos_17 <= 0;\n      _th_sequential_ypos_18 <= 0;\n      _th_sequential_xpos_19 <= 0;\n      _th_sequential_x_20 <= 0;\n      _th_sequential_y_21 <= 0;\n      _th_sequential_z_22 <= 0;\n      _tmp_55 <= 0;\n      _th_sequential_a_23 <= 0;\n    end else begin\n      case(th_sequential)\n        th_sequential_init: begin\n          if(th_comp == 14) begin\n            _th_sequential_called <= 1;\n          end \n          if(th_comp == 14) begin\n            _th_sequential_offset_15 <= _th_comp_offset_0;\n          end \n          if(th_comp == 14) begin\n            th_sequential <= th_sequential_1;\n          end \n        end\n        th_sequential_1: begin\n          _th_sequential_offset_16 <= _th_sequential_offset_15;\n          th_sequential <= th_sequential_2;\n        end\n        th_sequential_2: begin\n          _th_sequential_zpos_17 <= 0;\n          th_sequential <= th_sequential_3;\n        end\n        th_sequential_3: begin\n          _th_sequential_ypos_18 <= 0;\n          th_sequential <= th_sequential_4;\n        end\n        th_sequential_4: begin\n          _th_sequential_xpos_19 <= 0;\n          th_sequential <= th_sequential_5;\n        end\n        th_sequential_5: begin\n          _th_sequential_x_20 <= 0;\n          th_sequential <= th_sequential_6;\n        end\n        th_sequential_6: begin\n          if(_th_sequential_x_20 < 4) begin\n            th_sequential <= th_sequential_7;\n          end else begin\n            th_sequential <= th_sequential_24;\n          end\n        end\n        th_sequential_7: begin\n          _th_sequential_y_21 <= 0;\n          th_sequential <= th_sequential_8;\n        end\n        th_sequential_8: begin\n          if(_th_sequential_y_21 < 2) begin\n            th_sequential <= th_sequential_9;\n          end else begin\n            th_sequential <= th_sequential_23;\n          end\n        end\n        th_sequential_9: begin\n          _th_sequential_z_22 <= 0;\n          th_sequential <= th_sequential_10;\n        end\n        th_sequential_10: begin\n          if(_th_sequential_z_22 < 8) begin\n            th_sequential <= th_sequential_11;\n          end else begin\n            th_sequential <= th_sequential_22;\n          end\n        end\n        th_sequential_11: begin\n          if(_tmp_54) begin\n            _tmp_55 <= ram_a_0_rdata;\n          end \n          if(_tmp_54) begin\n            th_sequential <= th_sequential_12;\n          end \n        end\n        th_sequential_12: begin\n          _th_sequential_a_23 <= _tmp_55;\n          th_sequential <= th_sequential_13;\n        end\n        th_sequential_13: begin\n          th_sequential <= th_sequential_14;\n        end\n        th_sequential_14: begin\n          _th_sequential_xpos_19 <= _th_sequential_xpos_19 + 1;\n          th_sequential <= th_sequential_15;\n        end\n        th_sequential_15: begin\n          if(_th_sequential_xpos_19 == 4) begin\n            th_sequential <= th_sequential_16;\n          end else begin\n            th_sequential <= th_sequential_21;\n          end\n        end\n        th_sequential_16: begin\n          _th_sequential_xpos_19 <= 0;\n          th_sequential <= th_sequential_17;\n        end\n        th_sequential_17: begin\n          _th_sequential_ypos_18 <= _th_sequential_ypos_18 + 4;\n          th_sequential <= th_sequential_18;\n        end\n        th_sequential_18: begin\n          if(_th_sequential_ypos_18 == 8) begin\n            th_sequential <= th_sequential_19;\n          end else begin\n            th_sequential <= th_sequential_21;\n          end\n        end\n        th_sequential_19: begin\n          _th_sequential_ypos_18 <= 0;\n          th_sequential <= th_sequential_20;\n        end\n        th_sequential_20: begin\n          _th_sequential_zpos_17 <= _th_sequential_zpos_17 + 8;\n          th_sequential <= th_sequential_21;\n        end\n        th_sequential_21: begin\n          _th_sequential_z_22 <= _th_sequential_z_22 + 1;\n          th_sequential <= th_sequential_10;\n        end\n        th_sequential_22: begin\n          _th_sequential_y_21 <= _th_sequential_y_21 + 1;\n          th_sequential <= th_sequential_8;\n        end\n        th_sequential_23: begin\n          _th_sequential_x_20 <= _th_sequential_x_20 + 1;\n          th_sequential <= th_sequential_6;\n        end\n      endcase\n    end\n  end\n\n  localparam _tmp_fsm_3_1 = 1;\n  localparam _tmp_fsm_3_2 = 2;\n  localparam _tmp_fsm_3_3 = 3;\n\n  always @(posedge CLK) begin\n    if(RST) begin\n      _tmp_fsm_3 <= _tmp_fsm_3_init;\n    end else begin\n      case(_tmp_fsm_3)\n        _tmp_fsm_3_init: begin\n          if(th_comp == 18) begin\n            _tmp_fsm_3 <= _tmp_fsm_3_1;\n          end \n        end\n        _tmp_fsm_3_1: begin\n          if(myaxi_awready || !myaxi_awvalid) begin\n            _tmp_fsm_3 <= _tmp_fsm_3_2;\n          end \n        end\n        _tmp_fsm_3_2: begin\n          _tmp_fsm_3 <= _tmp_fsm_3_3;\n        end\n        _tmp_fsm_3_3: begin\n          if(_tmp_73) begin\n            _tmp_fsm_3 <= _tmp_fsm_3_init;\n          end \n        end\n      endcase\n    end\n  end\n\n\nendmodule\n\n\n\nmodule ram_a\n(\n  input CLK,\n  input [10-1:0] ram_a_0_addr,\n  output [32-1:0] ram_a_0_rdata,\n  input [32-1:0] ram_a_0_wdata,\n  input ram_a_0_wenable\n);\n\n  reg [10-1:0] ram_a_0_daddr;\n  reg [32-1:0] mem [0:1024-1];\n\n  always @(posedge CLK) begin\n    if(ram_a_0_wenable) begin\n      mem[ram_a_0_addr] <= ram_a_0_wdata;\n    end \n    ram_a_0_daddr <= ram_a_0_addr;\n  end\n\n  assign ram_a_0_rdata = mem[ram_a_0_daddr];\n\nendmodule\n\n\n\nmodule ram_b\n(\n  input CLK,\n  input [10-1:0] ram_b_0_addr,\n  output [32-1:0] ram_b_0_rdata,\n  input [32-1:0] ram_b_0_wdata,\n  input ram_b_0_wenable\n);\n\n  reg [10-1:0] ram_b_0_daddr;\n  reg [32-1:0] mem [0:1024-1];\n\n  always @(posedge CLK) begin\n    if(ram_b_0_wenable) begin\n      mem[ram_b_0_addr] <= ram_b_0_wdata;\n    end \n    ram_b_0_daddr <= ram_b_0_addr;\n  end\n\n  assign ram_b_0_rdata = mem[ram_b_0_daddr];\n\nendmodule\n\n\n\nmodule ram_c\n(\n  input CLK,\n  input [10-1:0] ram_c_0_addr,\n  output [32-1:0] ram_c_0_rdata,\n  input [32-1:0] ram_c_0_wdata,\n  input ram_c_0_wenable\n);\n\n  reg [10-1:0] ram_c_0_daddr;\n  reg [32-1:0] mem [0:1024-1];\n\n  always @(posedge CLK) begin\n    if(ram_c_0_wenable) begin\n      mem[ram_c_0_addr] <= ram_c_0_wdata;\n    end \n    ram_c_0_daddr <= ram_c_0_addr;\n  end\n\n  assign ram_c_0_rdata = mem[ram_c_0_daddr];\n\nendmodule\n\"\"\""
    ],
    "functions": [
        "test"
    ],
    "classes": []
}