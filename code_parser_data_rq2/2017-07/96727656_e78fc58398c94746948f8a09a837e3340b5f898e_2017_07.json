{
    "identifiers": [
        "com",
        "example",
        "songyanjun",
        "myhospital",
        "utils",
        "android",
        "annotation",
        "SuppressLint",
        "android",
        "content",
        "ContentUris",
        "android",
        "content",
        "Context",
        "android",
        "database",
        "Cursor",
        "android",
        "net",
        "Uri",
        "android",
        "os",
        "Build",
        "android",
        "os",
        "Environment",
        "android",
        "provider",
        "DocumentsContract",
        "android",
        "provider",
        "MediaStore",
        "android",
        "util",
        "Log",
        "android",
        "content",
        "ContentValues",
        "TAG",
        "SuppressLint",
        "context",
        "uri",
        "isKitKat",
        "Build",
        "VERSION",
        "SDK_INT",
        "Build",
        "VERSION_CODES",
        "KITKAT",
        "isKitKat",
        "DocumentsContract",
        "isDocumentUri",
        "context",
        "uri",
        "isExternalStorageDocument",
        "uri",
        "docId",
        "DocumentsContract",
        "getDocumentId",
        "uri",
        "split",
        "docId",
        "split",
        "split",
        "equalsIgnoreCase",
        "Environment",
        "getExternalStorageDirectory",
        "split",
        "isDownloadsDocument",
        "uri",
        "id",
        "DocumentsContract",
        "getDocumentId",
        "uri",
        "contentUri",
        "ContentUris",
        "withAppendedId",
        "Uri",
        "parse",
        "valueOf",
        "id",
        "getDataColumn",
        "context",
        "contentUri",
        "isMediaDocument",
        "uri",
        "docId",
        "DocumentsContract",
        "getDocumentId",
        "uri",
        "split",
        "docId",
        "split",
        "split",
        "contentUri",
        "equals",
        "contentUri",
        "MediaStore",
        "Images",
        "Media",
        "EXTERNAL_CONTENT_URI",
        "equals",
        "contentUri",
        "MediaStore",
        "Video",
        "Media",
        "EXTERNAL_CONTENT_URI",
        "equals",
        "contentUri",
        "MediaStore",
        "Audio",
        "Media",
        "EXTERNAL_CONTENT_URI",
        "selection",
        "selectionArgs",
        "split",
        "getDataColumn",
        "context",
        "contentUri",
        "selection",
        "selectionArgs",
        "equalsIgnoreCase",
        "uri",
        "getScheme",
        "getDataColumn",
        "context",
        "uri",
        "equalsIgnoreCase",
        "uri",
        "getScheme",
        "uri",
        "getPath",
        "uriStr",
        "uri",
        "toString",
        "path",
        "uriStr",
        "substring",
        "uriStr",
        "length",
        "path",
        "startsWith",
        "Log",
        "e",
        "TAG",
        "uri",
        "toString",
        "filePathColumn",
        "MediaStore",
        "Images",
        "Media",
        "DATA",
        "cursor",
        "context",
        "getContentResolver",
        "query",
        "uri",
        "filePathColumn",
        "cursor",
        "cursor",
        "moveToFirst",
        "columnIndex",
        "cursor",
        "getColumnIndex",
        "filePathColumn",
        "picturePath",
        "cursor",
        "getString",
        "columnIndex",
        "cursor",
        "close",
        "picturePath",
        "context",
        "uri",
        "selection",
        "selectionArgs",
        "cursor",
        "column",
        "projection",
        "column",
        "cursor",
        "context",
        "getContentResolver",
        "query",
        "uri",
        "projection",
        "selection",
        "selectionArgs",
        "cursor",
        "cursor",
        "moveToFirst",
        "column_index",
        "cursor",
        "getColumnIndexOrThrow",
        "column",
        "cursor",
        "getString",
        "column_index",
        "cursor",
        "cursor",
        "close",
        "uri",
        "equals",
        "uri",
        "getAuthority",
        "uri",
        "equals",
        "uri",
        "getAuthority",
        "uri",
        "equals",
        "uri",
        "getAuthority"
    ],
    "literals": [
        "\"NewApi\"",
        "\":\"",
        "\"primary\"",
        "\"/\"",
        "\"content://downloads/public_downloads\"",
        "\":\"",
        "\"image\"",
        "\"video\"",
        "\"audio\"",
        "\"_id=?\"",
        "\"content\"",
        "\"file\"",
        "\"com.sec.android.gallery3d\"",
        "\"It's auto backup pic path:\"",
        "\"_data\"",
        "\"com.android.externalstorage.documents\"",
        "\"com.android.providers.downloads.documents\"",
        "\"com.android.providers.media.documents\""
    ],
    "variables": [],
    "comments": [
        "DocumentProvider",
        "ExternalStorageProvider",
        "DownloadsProvider",
        "MediaProvider",
        "MediaStore (and general)",
        "File"
    ],
    "docstrings": [
        "* Created by yf on 2016/2/23.",
        "* Get the value of the data column for this Uri. This is useful for\n     * MediaStore Uris, and other file-based ContentProviders.\n     *\n     * @param context       The context.\n     * @param uri           The Uri to query.\n     * @param selection     (Optional) Filter used in the query.\n     * @param selectionArgs (Optional) Selection arguments used in the query.\n     * @return The value of the _data column, which is typically a file path.",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is ExternalStorageProvider.",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is DownloadsProvider.",
        "* @param uri The Uri to check.\n     * @return Whether the Uri authority is MediaProvider."
    ],
    "functions": [
        "getPath",
        "getDataColumn",
        "isExternalStorageDocument",
        "isDownloadsDocument",
        "isMediaDocument"
    ],
    "classes": [
        "CropUtils"
    ]
}