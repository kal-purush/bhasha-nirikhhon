{
    "identifiers": [
        "matplotlib",
        "pyplot",
        "plt",
        "numpy",
        "np",
        "csv",
        "scipy",
        "signal",
        "math",
        "saleae",
        "filename",
        "numHeaders",
        "csv",
        "reader",
        "open",
        "filename",
        "delimiter",
        "row",
        "reader",
        "i",
        "len",
        "row",
        "total",
        "i",
        "append",
        "row",
        "i",
        "col",
        "col",
        "total",
        "len",
        "total",
        "channels",
        "values",
        "np",
        "repeat",
        "np",
        "convolve",
        "values",
        "weights",
        "sma",
        "arr",
        "n",
        "np",
        "append",
        "np",
        "array",
        "np",
        "mean",
        "arr",
        "i",
        "i",
        "n",
        "np",
        "correlate",
        "arr",
        "np",
        "ones",
        "n",
        "dtype",
        "n",
        "signal",
        "np",
        "abs",
        "signal",
        "moving_average",
        "amplitude",
        "n",
        "moving_average",
        "amplitude",
        "sn",
        "np",
        "argmax",
        "shortma",
        "thresh",
        "longma",
        "pingerFrequency",
        "fs",
        "sampleTime",
        "read_file_mat",
        "signal",
        "cheby2",
        "pingerFrequency",
        "fs",
        "pingerFrequency",
        "fs",
        "btype",
        "signal",
        "lfilter",
        "b",
        "a",
        "np",
        "asarray",
        "Matrix",
        "axis",
        "detect_wavefront",
        "fil_ch1",
        "start",
        "start",
        "len",
        "fil_ch1",
        "sampleTime",
        "np",
        "array",
        "np",
        "asarray",
        "Matrix",
        "start",
        "start",
        "ra",
        "np",
        "array",
        "np",
        "asarray",
        "Matrix",
        "start",
        "start",
        "ra",
        "np",
        "array",
        "np",
        "asarray",
        "Matrix",
        "start",
        "start",
        "ra",
        "signal",
        "lfilter",
        "b",
        "a",
        "Channel0",
        "signal",
        "lfilter",
        "b",
        "a",
        "Channel1",
        "signal",
        "lfilter",
        "b",
        "a",
        "Channel2",
        "corr",
        "FiltChannel1",
        "FiltChannel0",
        "fs",
        "pingerFrequency",
        "corr",
        "FiltChannel2",
        "FiltChannel0",
        "fs",
        "pingerFrequency",
        "np",
        "arctan2",
        "diff11",
        "diff12",
        "np",
        "pi",
        "bearing",
        "waveA",
        "waveB",
        "fs",
        "pingerFrequency",
        "fs",
        "pingerFrequency",
        "len",
        "waveA",
        "math",
        "floor",
        "maxLag",
        "i",
        "math",
        "floor",
        "maxLag",
        "corrArray",
        "append",
        "np",
        "corrcoef",
        "waveA",
        "n",
        "waveB",
        "i",
        "n",
        "i",
        "corrArray",
        "index",
        "max",
        "corrArray",
        "maxCorr",
        "maxCorr",
        "maxLag",
        "maxCorr",
        "findBearing",
        "mainFunction"
    ],
    "literals": [
        "','",
        "'valid'",
        "'dat1-left45.csv'",
        "'bandpass'",
        "\"detected wavefront in channel 0 at index %d, %.2fs\"",
        "'starting'",
        "'found bearing: %d'",
        "'done'"
    ],
    "variables": [
        "reader",
        "total",
        "channels",
        "weights",
        "sma",
        "n",
        "sn",
        "thresh",
        "amplitude",
        "longma",
        "shortma",
        "Matrix",
        "b",
        "a",
        "fil_ch1",
        "start",
        "ra",
        "Channel0",
        "Channel1",
        "Channel2",
        "FiltChannel0",
        "FiltChannel1",
        "FiltChannel2",
        "diff11",
        "diff12",
        "bearing",
        "maxLag",
        "n",
        "corrArray",
        "maxCorr",
        "maxCorr"
    ],
    "comments": [
        "tune these two constants to make it more robust / reduce lag (increasing sn will reduce false positives, but increase lag)",
        "tune this to similarly adjust robustness",
        "plt.plot(fil_ch1)",
        "plt.show()",
        "range constant",
        "241925:242005  113920:114000",
        "if all bearings are opposite of expected, switch order of 2 and 1",
        "if all bearings are opposite of expected, switch order of 3 and 1",
        "print(\"bearing is: %.5f\" % bearing)",
        "print(waveA)",
        "print(waveB)",
        "DO YOU NEED TO SUBTRACT ONE?",
        "print(np.corrcoef(waveA[:n,0], waveB[i:n+i,0]))",
        "MAY NEED TO SUBTRACT ONE??",
        "print(corrArray)",
        "This should theoretically be 7.09 to 7.1, but experimentally (Due to speed of sound in different water ) is changed to 7.5.",
        "if maxCorr<-7.09: ##this should also be -7.09",
        "raise(\"error: not possible\")   may not need it",
        "print(maxCorr)",
        "def getPingerData(host='localhost', port=10429, TimerClock=time.time()):",
        "currentTime = time.time()",
        "while currentTime > TimerClock:",
        "TimerClock += 2",
        "time.sleep(TimerClock - currentTime)  # may have to add wake up time",
        "",
        "s = saleae.Saleae()",
        "digital = []",
        "analog = [1, 2, 3]",
        "s.set_active_channels(digital, analog)",
        "s.set_sample_rate((0, 625000))",
        "s.set_capture_seconds(0.3)",
        "s.capture_start()",
        "file_path_on_target_machine = \"/home/robot/salaea_test_data.csv\"",
        "s.export_data2(file_path_on_target_machine,",
        "digital_channels=digital,",
        "analog_channels=analog,",
        "format=\"csv\",",
        "analog_format=\"voltage\"",
        ")",
        "return TimerClock",
        "TimeOfPingOffset = recordFirstListen()",
        "getPingerData(TimerClock=TimeOfPingOffset)",
        "findPhaseDifference(pingerFrequency, 625000)"
    ],
    "docstrings": [],
    "functions": [
        "read_file_mat",
        "movingAverage",
        "moving_average",
        "detect_wavefront",
        "findBearing",
        "corr",
        "mainFunction"
    ],
    "classes": []
}