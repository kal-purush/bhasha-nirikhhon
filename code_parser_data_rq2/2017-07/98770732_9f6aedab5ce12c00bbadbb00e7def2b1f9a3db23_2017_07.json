{
    "identifiers": [],
    "literals": [],
    "variables": [],
    "comments": [
        "prefix: '',",
        "restPrefix: '',",
        "pluralize: false,",
        "populate: true,",
        "autoWatch: true,",
        "defaultLimit: 30"
    ],
    "docstrings": [
        "* Blueprint API Configuration\n * (sails.config.blueprints)\n *\n * These settings are for the global configuration of blueprint routes and\n * request options (which impact the behavior of blueprint actions).\n *\n * You may also override any of these settings on a per-controller basis\n * by defining a '_config' key in your controller definition, and assigning it\n * a configuration object with overrides for the settings in this file.\n * A lot of the configuration options below affect so-called \"CRUD methods\",\n * or your controllers' `find`, `create`, `update`, and `destroy` actions.\n *\n * It's important to realize that, even if you haven't defined these yourself, as long as\n * a model exists with the same name as the controller, Sails will respond with built-in CRUD\n * logic in the form of a JSON API, including support for sort, pagination, and filtering.\n *\n * For more information on the blueprint API, check out:\n * http://sailsjs.org/#!/documentation/reference/blueprint-api\n *\n * For more information on the settings in this file, see:\n * http://sailsjs.org/#!/documentation/reference/sails.config/sails.config.blueprints.html\n *",
        "*************************************************************************\n  *                                                                          *\n  * Action routes speed up the backend development workflow by               *\n  * eliminating the need to manually bind routes. When enabled, GET, POST,   *\n  * PUT, and DELETE routes will be generated for every one of a controller's *\n  * actions.                                                                 *\n  *                                                                          *\n  * If an `index` action exists, additional naked routes will be created for *\n  * it. Finally, all `actions` blueprints support an optional path           *\n  * parameter, `id`, for convenience.                                        *\n  *                                                                          *\n  * `actions` are enabled by default, and can be OK for production--         *\n  * however, if you'd like to continue to use controller/action autorouting  *\n  * in a production deployment, you must take great care not to              *\n  * inadvertently expose unsafe/unintentional controller logic to GET        *\n  * requests.                                                                *\n  *                                                                          *\n  **************************************************************************",
        "*************************************************************************\n  *                                                                          *\n  * RESTful routes (`sails.config.blueprints.rest`)                          *\n  *                                                                          *\n  * REST blueprints are the automatically generated routes Sails uses to     *\n  * expose a conventional REST API on top of a controller's `find`,          *\n  * `create`, `update`, and `destroy` actions.                               *\n  *                                                                          *\n  * For example, a BoatController with `rest` enabled generates the          *\n  * following routes:                                                        *\n  * :::::::::::::::::::::::::::::::::::::::::::::::::::::::                  *\n  *  GET /boat -> BoatController.find                                        *\n  *  GET /boat/:id -> BoatController.findOne                                 *\n  *  POST /boat -> BoatController.create                                     *\n  *  PUT /boat/:id -> BoatController.update                                  *\n  *  DELETE /boat/:id -> BoatController.destroy                              *\n  *                                                                          *\n  * `rest` blueprint routes are enabled by default, and are suitable for use *\n  * in a production scenario, as long you take standard security precautions *\n  * (combine w/ policies, etc.)                                              *\n  *                                                                          *\n  **************************************************************************",
        "*************************************************************************\n  *                                                                          *\n  * Shortcut routes are simple helpers to provide access to a                *\n  * controller's CRUD methods from your browser's URL bar. When enabled,     *\n  * GET, POST, PUT, and DELETE routes will be generated for the              *\n  * controller's`find`, `create`, `update`, and `destroy` actions.           *\n  *                                                                          *\n  * `shortcuts` are enabled by default, but should be disabled in            *\n  * production.                                                              *\n  *                                                                          *\n  **************************************************************************",
        "*************************************************************************\n  *                                                                          *\n  * An optional mount path for all blueprint routes on a controller,         *\n  * including `rest`, `actions`, and `shortcuts`. This allows you to take    *\n  * advantage of blueprint routing, even if you need to namespace your API   *\n  * methods.                                                                 *\n  *                                                                          *\n  * (NOTE: This only applies to blueprint autoroutes, not manual routes from *\n  * `sails.config.routes`)                                                   *\n  *                                                                          *\n  **************************************************************************",
        "*************************************************************************\n   *                                                                          *\n   * An optional mount path for all REST blueprint routes on a controller.    *\n   * And it do not include `actions` and `shortcuts` routes.                  *\n   * This allows you to take advantage of REST blueprint routing,             *\n   * even if you need to namespace your RESTful API methods                   *\n   *                                                                          *\n   **************************************************************************",
        "*************************************************************************\n  *                                                                          *\n  * Whether to pluralize controller names in blueprint routes.               *\n  *                                                                          *\n  * (NOTE: This only applies to blueprint autoroutes, not manual routes from *\n  * `sails.config.routes`)                                                   *\n  *                                                                          *\n  * For example, REST blueprints for `FooController` with `pluralize`        *\n  * enabled:                                                                 *\n  * GET /foos/:id?                                                           *\n  * POST /foos                                                               *\n  * PUT /foos/:id?                                                           *\n  * DELETE /foos/:id?                                                        *\n  *                                                                          *\n  **************************************************************************",
        "*************************************************************************\n  *                                                                          *\n  * Whether the blueprint controllers should populate model fetches with     *\n  * data from other models which are linked by associations                  *\n  *                                                                          *\n  * If you have a lot of data in one-to-many associations, leaving this on   *\n  * may result in very heavy api calls                                       *\n  *                                                                          *\n  **************************************************************************",
        "**************************************************************************\n  *                                                                           *\n  * Whether to run Model.watch() in the find and findOne blueprint actions.   *\n  * Can be overridden on a per-model basis.                                   *\n  *                                                                           *\n  ***************************************************************************",
        "**************************************************************************\n  *                                                                           *\n  * The default number of records to show in the response from a \"find\"       *\n  * action. Doubles as the default size of populated arrays if populate is    *\n  * true.                                                                     *\n  *                                                                           *\n  ***************************************************************************"
    ],
    "functions": [],
    "classes": []
}