{
    "identifiers": [
        "os",
        "random",
        "PIL",
        "Image",
        "torch",
        "torch",
        "utils",
        "data",
        "Dataset",
        "Dataset",
        "split",
        "crop",
        "flip",
        "crop",
        "flip",
        "root",
        "_",
        "filenames",
        "os",
        "walk",
        "os",
        "path",
        "join",
        "split",
        "filename",
        "filenames",
        "os",
        "path",
        "splitext",
        "filename",
        "join",
        "filename",
        "split",
        "os",
        "path",
        "join",
        "split",
        "inputs",
        "append",
        "os",
        "path",
        "join",
        "root",
        "filename_base",
        "targets",
        "append",
        "os",
        "path",
        "join",
        "target_root",
        "filename_base",
        "len",
        "inputs",
        "i",
        "Image",
        "open",
        "inputs",
        "i",
        "Image",
        "open",
        "targets",
        "i",
        "crop",
        "input",
        "size",
        "random",
        "randint",
        "w",
        "crop",
        "random",
        "randint",
        "h",
        "crop",
        "input",
        "crop",
        "x1",
        "y1",
        "x1",
        "crop",
        "y1",
        "crop",
        "target",
        "crop",
        "x1",
        "y1",
        "x1",
        "crop",
        "y1",
        "crop",
        "flip",
        "random",
        "random",
        "input",
        "transpose",
        "Image",
        "FLIP_LEFT_RIGHT",
        "target",
        "transpose",
        "Image",
        "FLIP_LEFT_RIGHT",
        "input",
        "size",
        "torch",
        "ByteTensor",
        "torch",
        "ByteStorage",
        "from_buffer",
        "input",
        "tobytes",
        "view",
        "h",
        "w",
        "permute",
        "div",
        "torch",
        "ByteTensor",
        "torch",
        "ByteStorage",
        "from_buffer",
        "target",
        "tobytes",
        "view",
        "h",
        "w",
        "input",
        "add_",
        "div_",
        "input",
        "add_",
        "div_",
        "input",
        "add_",
        "div_",
        "target",
        "clone",
        "k",
        "v",
        "full_to_train",
        "items",
        "target",
        "k",
        "v",
        "torch",
        "zeros",
        "num_classes",
        "h",
        "w",
        "c",
        "num_classes",
        "target",
        "c",
        "remapped_target",
        "c",
        "input",
        "target",
        "remapped_target"
    ],
    "literals": [
        "'train'",
        "'leftImg8bit_trainvaltest'",
        "'leftImg8bit'",
        "'.png'",
        "'_'",
        "'_'",
        "'gtFine_trainvaltest'",
        "'gtFine'",
        "'_leftImg8bit.png'",
        "'_gtFine_labelIds.png'"
    ],
    "variables": [
        "num_classes",
        "full_to_train",
        "train_to_full",
        "full_to_colour",
        "crop",
        "flip",
        "inputs",
        "targets",
        "filename_base",
        "target_root",
        "input",
        "target",
        "w",
        "h",
        "x1",
        "y1",
        "input",
        "target",
        "input",
        "target",
        "w",
        "h",
        "input",
        "target",
        "remapped_target",
        "remapped_target",
        "target"
    ],
    "comments": [
        "Labels: -1 license plate, 0 unlabeled, 1 ego vehicle, 2 rectification border, 3 out of roi, 4 static, 5 dynamic, 6 ground, 7 road, 8 sidewalk, 9 parking, 10 rail track, 11 building, 12 wall, 13 fence, 14 guard rail, 15 bridge, 16 tunnel, 17 pole, 18 polegroup, 19 traffic light, 20 traffic sign, 21 vegetation, 22 terrain, 23 sky, 24 person, 25 rider, 26 car, 27 truck, 28 bus, 29 caravan, 30 trailer, 31 train, 32 motorcycle, 33 bicycle",
        "Load images and perform augmentations with PIL",
        "Random uniform crop",
        "Random horizontal flip",
        "Convert to tensors",
        "Normalise input",
        "Convert to training labels",
        "Create one-hot encoding",
        "Return x, y (one-hot), y (index)"
    ],
    "docstrings": [],
    "functions": [
        "__len__",
        "__getitem__"
    ],
    "classes": [
        "CityscapesDataset"
    ]
}