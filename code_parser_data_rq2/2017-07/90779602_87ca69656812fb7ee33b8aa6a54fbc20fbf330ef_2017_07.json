{
    "identifiers": [
        "pandas",
        "pd",
        "csv",
        "numpy",
        "np",
        "re",
        "os",
        "fnmatch",
        "os",
        "chdir",
        "work_dir",
        "pattern",
        "path",
        "root",
        "dirs",
        "files",
        "os",
        "walk",
        "path",
        "name",
        "files",
        "fnmatch",
        "fnmatch",
        "name",
        "pattern",
        "result",
        "append",
        "os",
        "path",
        "join",
        "root",
        "name",
        "result",
        "find",
        "work_dir",
        "pd",
        "read_csv",
        "work_dir",
        "pd",
        "DataFrame",
        "pd",
        "DataFrame",
        "file",
        "lang_files",
        "pd",
        "DataFrame",
        "re",
        "search",
        "work_dir",
        "file",
        "m",
        "m",
        "group",
        "re",
        "search",
        "work_dir",
        "file",
        "m",
        "m",
        "group",
        "re",
        "search",
        "work_dir",
        "file",
        "m",
        "m",
        "group",
        "single_test",
        "ix",
        "found",
        "pd",
        "ExcelFile",
        "file",
        "xl",
        "sheet_names",
        "sprdshts",
        "pd",
        "read_excel",
        "file",
        "bnt30",
        "loc",
        "tolist",
        "head",
        "relevant_headers",
        "head",
        "headers",
        "temp_head_errors",
        "append",
        "head",
        "temp_head_errors",
        "bnt30",
        "pd",
        "isnull",
        "bnt30",
        "bnt30_notNaN",
        "pd",
        "isnull",
        "bnt30",
        "isnumeric",
        "headers",
        "bnt30_only_items",
        "bnt30_relevant",
        "set_index",
        "bnt30_only_items",
        "bnt30_relevant",
        "insert",
        "bnt30_relevant",
        "index",
        "tolist",
        "i",
        "items",
        "i",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "pd",
        "DataFrame",
        "temp_list",
        "columns",
        "col",
        "col",
        "cols",
        "columns",
        "col",
        "i",
        "col",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "bnt30_relevant",
        "loc",
        "i",
        "pd",
        "DataFrame",
        "temp_list",
        "columns",
        "col",
        "col",
        "cols",
        "columns",
        "col",
        "i",
        "col",
        "pd",
        "concat",
        "single_test",
        "temp_df",
        "axis",
        "header_error_bnt30",
        "append",
        "file",
        "temp_head_errors",
        "missing_bnt30",
        "append",
        "file",
        "all_test",
        "append",
        "single_test",
        "all_test",
        "to_csv",
        "encoding"
    ],
    "literals": [
        "'/Users/axs97/Desktop/lang_eval_to_redcap-alexs'",
        "'*.xls'",
        "'/Patients/'",
        "'/redcap_headers.csv'",
        "'Subject'",
        "'/Patients/LastNameA_F/(.+?)/'",
        "'/Patients/LastNameG_M/(.+?)/'",
        "'/Patients/LastNameN_Z/(.+?)/'",
        "'Subject'",
        "'BNT30'",
        "'BNT30'",
        "'item'",
        "'Spont correct (1, 0)'",
        "'Verbatim response if incorrect'",
        "'Spont gesture if given (1, 0)'",
        "'Correct w/sem cue (1,0)'",
        "'Verbatim response if incorrect after stim cue'",
        "'Correct w/ph cue (1,0)'",
        "'Verbatim response if incorrect after ph cue'",
        "'Correct w/mult choice (1,0)'",
        "'Response if incorrect'",
        "'Boston Naming Test'",
        "'Boston Naming Test'",
        "'Spont correct (1, 0)'",
        "'Verbatim response if incorrect'",
        "'Spont gesture if given (1, 0)'",
        "'Correct w/sem cue (1,0)'",
        "'Verbatim response if incorrect after stim cue'",
        "'Correct w/ph cue (1,0)'",
        "'Verbatim response if incorrect after ph cue'",
        "'Correct w/mult choice (1,0)'",
        "'Mult choice prompts'",
        "'Response if incorrect'",
        "'item'",
        "'notes'",
        "\"\"",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "''",
        "'bnt30_response_'",
        "'Spont correct (1, 0)'",
        "'Spontaneous'",
        "'Correct w/sem cue (1,0)'",
        "'Semantic cue'",
        "'Correct w/ph cue (1,0)'",
        "'Phonemic cue'",
        "'Not named'",
        "'Spont correct (1, 0)'",
        "'Verbatim response if incorrect'",
        "'Spont gesture if given (1, 0)'",
        "'Correct w/sem cue (1,0)'",
        "'Verbatim response if '",
        "'incorrect after stim cue'",
        "'Correct w/ph cue (1,0)'",
        "'Verbatim response '",
        "'if incorrect after ph cue'",
        "'Correct w/mult '",
        "'choice (1,0)'",
        "'Correct'",
        "'Correct w/mult '",
        "'choice (1,0)'",
        "'Incorrect'",
        "'Response '",
        "'if incorrect'",
        "''",
        "'Response if incorrect'",
        "'Check excel sprdsht'",
        "'bnt30'",
        "'_'",
        "'Spont correct (1, 0)'",
        "'Spontaneous'",
        "'Correct w/sem cue (1,0)'",
        "'Semantic cue'",
        "'Correct w/ph cue (1,0)'",
        "'Phonemic cue'",
        "'Not named'",
        "'Spont correct (1, 0)'",
        "'Verbatim response if incorrect'",
        "'Spont gesture if given (1, 0)'",
        "'Correct w/sem cue (1,0)'",
        "'Verbatim response if '",
        "'incorrect after stim cue'",
        "'Correct w/ph cue (1,0)'",
        "'Verbatim response '",
        "'if incorrect after ph cue'",
        "'Correct w/mult '",
        "'choice (1,0)'",
        "'Correct'",
        "'Correct w/mult '",
        "'choice (1,0)'",
        "'Incorrect'",
        "'Response if incorrect'",
        "''",
        "'Response if incorrect'",
        "'Check excel sprdsht'",
        "'bnt30'",
        "'_'",
        "'BNT30-Final.csv'",
        "'utf-8'"
    ],
    "variables": [
        "work_dir",
        "result",
        "lang_files",
        "data",
        "cols",
        "single_test",
        "count",
        "missing_bnt30",
        "missing_wab_commands",
        "missing_wab_repetition",
        "missing_wab_reading",
        "header_error_bnt30",
        "header_error_wab_reading",
        "missing_transcr",
        "transcr_response_error",
        "all_test",
        "single_test",
        "single_test",
        "m",
        "found",
        "m",
        "found",
        "m",
        "found",
        "xl",
        "sprdshts",
        "bnt30",
        "headers",
        "headers",
        "relevant_headers",
        "temp_head_errors",
        "bnt30_notNaN",
        "bnt30_only_items",
        "bnt30_only_items",
        "columns",
        "bnt30_relevant",
        "bnt30_relevant",
        "items",
        "temp_list",
        "test",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_df",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_list",
        "temp_df",
        "single_test",
        "all_test"
    ],
    "comments": [
        "Capture all subject lang files",
        "Skip spreadsheets that have errors for missing tabs, or ill formatted headers",
        "Create a seperate list for each error with failed subjects/files",
        "lang_files = [work_dir +",
        "'/Patients/LastNameA_F/Adamian_Daniel",
        "/010815/adamian_lang_010815.xls']",
        "cols will be used to build dataframe off of specific Redcap headers",
        "Iterate through every found excel file",
        "Find subject's name from file path",
        "see all sheet names",
        "Boston Naming Test 30",
        "items = bnt30_only_items[NaN].loc()",
        "replace first value with correct string"
    ],
    "docstrings": [],
    "functions": [
        "find"
    ],
    "classes": []
}