{
    "identifiers": [
        "Collections",
        "Threading",
        "Mirror",
        "Sim",
        "Sim",
        "Entities",
        "UnityEngine",
        "UnityEngine",
        "Networking",
        "NetworkManager",
        "OnValidate",
        "Awake",
        "Start",
        "LateUpdate",
        "OnDestroy",
        "ConfigureServerFrameRate",
        "OnApplicationQuit",
        "newSceneName",
        "ServerChangeScene",
        "newSceneName",
        "newSceneName",
        "sceneName",
        "newSceneName",
        "SceneOperation",
        "sceneOperation",
        "customHandling",
        "NetworkConnection",
        "conn",
        "OnClientSceneChanged",
        "conn",
        "NetworkConnection",
        "conn",
        "NetworkConnection",
        "conn",
        "OnServerReady",
        "conn",
        "NetworkConnection",
        "conn",
        "OnServerAddPlayer",
        "conn",
        "NetworkConnection",
        "conn",
        "OnServerDisconnect",
        "conn",
        "NetworkConnection",
        "conn",
        "OnClientConnect",
        "conn",
        "CreateCharacterMessage",
        "userId",
        "characterId",
        "conn",
        "Send",
        "characterMessage",
        "NetworkConnection",
        "conn",
        "OnClientDisconnect",
        "conn",
        "NetworkConnection",
        "conn",
        "NetworkServer",
        "RegisterHandler",
        "CreateCharacterMessage",
        "OnCreateCharacter",
        "NetworkServer",
        "UnregisterHandler",
        "CreateCharacterMessage",
        "NetworkConnection",
        "conn",
        "CreateCharacterMessage",
        "message",
        "Debug",
        "Log",
        "message",
        "characterId",
        "StartCoroutine",
        "SetupCharacterCoroutine",
        "conn",
        "message",
        "userId",
        "Server",
        "NetworkConnection",
        "conn",
        "userId",
        "ApiManager",
        "Instance",
        "RetrieveCharacterRequest",
        "userId",
        "characterRequest",
        "SendWebRequest",
        "characterRequest",
        "responseCode",
        "JsonUtility",
        "FromJson",
        "CharacterResponse",
        "characterRequest",
        "downloadHandler",
        "text",
        "Instantiate",
        "playerPrefab",
        "go",
        "GetComponent",
        "PlayerController",
        "player",
        "CharacterData",
        "characterResponse",
        "Characters",
        "NetworkServer",
        "AddPlayerForConnection",
        "conn",
        "go",
        "Debug",
        "LogError",
        "userId",
        "conn",
        "Disconnect"
    ],
    "literals": [
        "\"60468a435ebca93ebc119758\"",
        "\"6064cd05b9d4fd3afca4a146\""
    ],
    "variables": [
        "CreateCharacterMessage",
        "characterMessage",
        "UnityWebRequest",
        "characterRequest",
        "CharacterResponse",
        "characterResponse",
        "GameObject",
        "go",
        "PlayerController",
        "player"
    ],
    "comments": [
        "Documentation: https://mirror-networking.com/docs/Components/NetworkManager.html\n\tAPI Reference: https://mirror-networking.com/docs/api/Mirror.NetworkManager.html",
        "Runs on both Server and Client",
        "Networking is NOT initialized when this fires",
        "</summary>",
        "Runs on both Server and Client",
        "Networking is NOT initialized when this fires",
        "</summary>",
        "Runs on both Server and Client",
        "</summary>",
        "Runs on both Server and Client",
        "</summary>",
        "Set the frame rate for a headless server.",
        "<para>Override if you wish to disable the behavior or set your own tick rate.</para>",
        "</summary>",
        "called when quitting the application by closing the window / pressing stop in the editor",
        "</summary>",
        "This causes the server to switch scenes and sets the networkSceneName.",
        "<para>Clients that connect to this server will automatically switch to this scene. This is called automatically if onlineScene or offlineScene are set, but it can be called from user code to switch scenes again while the game is in progress. This automatically sets clients to be not-ready. The clients must call NetworkClient.Ready() again to participate in the new scene.</para>",
        "</summary>",
        "<param name=\"newSceneName\"></param>",
        "Called from ServerChangeScene immediately before SceneManager.LoadSceneAsync is executed",
        "<para>This allows server to do work / cleanup / prep before the scene changes.</para>",
        "</summary>",
        "<param name=\"newSceneName\">Name of the scene that's about to be loaded</param>",
        "Called on the server when a scene is completed loaded, when the scene load was initiated by the server with ServerChangeScene().",
        "</summary>",
        "<param name=\"sceneName\">The name of the new scene.</param>",
        "Called from ClientChangeScene immediately before SceneManager.LoadSceneAsync is executed",
        "<para>This allows client to do work / cleanup / prep before the scene changes.</para>",
        "</summary>",
        "<param name=\"newSceneName\">Name of the scene that's about to be loaded</param>",
        "<param name=\"sceneOperation\">Scene operation that's about to happen</param>",
        "<param name=\"customHandling\">true to indicate that scene loading will be handled through overrides</param>",
        "Called on clients when a scene has completed loaded, when the scene load was initiated by the server.",
        "<para>Scene changes can cause player objects to be destroyed. The default implementation of OnClientSceneChanged in the NetworkManager is to add a player object for the connection if no player object exists.</para>",
        "</summary>",
        "<param name=\"conn\">The network connection that the scene change message arrived on.</param>",
        "Called on the server when a new client connects.",
        "<para>Unity calls this on the Server when a Client connects to the Server. Use an override to tell the NetworkManager what to do when a client connects to the server.</para>",
        "</summary>",
        "<param name=\"conn\">Connection from client.</param>",
        "Called on the server when a client is ready.",
        "<para>The default implementation of this function calls NetworkServer.SetClientReady() to continue the network setup process.</para>",
        "</summary>",
        "<param name=\"conn\">Connection from client.</param>",
        "Called on the server when a client adds a new player with ClientScene.AddPlayer.",
        "<para>The default implementation for this function creates a new player object from the playerPrefab.</para>",
        "</summary>",
        "<param name=\"conn\">Connection from client.</param>",
        "Called on the server when a client disconnects.",
        "<para>This is called on the Server when a Client disconnects from the Server. Use an override to decide what should happen when a disconnection is detected.</para>",
        "</summary>",
        "<param name=\"conn\">Connection from client.</param>",
        "Called on the client when connected to a server.",
        "<para>The default implementation of this function sets the client as ready and adds a player. Override the function to dictate what happens when the client connects.</para>",
        "</summary>",
        "<param name=\"conn\">Connection to the server.</param>",
        "Called on clients when disconnected from a server.",
        "<para>This is called on the client when it disconnects from the server. Override this function to decide what happens when the client disconnects.</para>",
        "</summary>",
        "<param name=\"conn\">Connection to the server.</param>",
        "Called on clients when a servers tells the client it is no longer ready.",
        "<para>This is commonly used when switching scenes.</para>",
        "</summary>",
        "<param name=\"conn\">Connection to the server.</param>",
        "Since there are multiple versions of StartServer, StartClient and StartHost, to reliably customize",
        "their functionality, users would need override all the versions. Instead these callbacks are invoked",
        "from all versions, so users only need to implement this one case.",
        "This is invoked when a host is started.",
        "<para>StartHost has multiple signatures, but they all cause this hook to be called.</para>",
        "</summary>",
        "This is invoked when a server is started - including when a host is started.",
        "<para>StartServer has multiple signatures, but they all cause this hook to be called.</para>",
        "</summary>",
        "This is invoked when the client is started.",
        "</summary>",
        "This is called when a host is stopped.",
        "</summary>",
        "This is called when a server is stopped - including when a host is stopped.",
        "</summary>",
        "This is called when a client is stopped.",
        "</summary>"
    ],
    "docstrings": [
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>",
        "<summary>"
    ],
    "functions": [
        "OnValidate",
        "Awake",
        "Start",
        "LateUpdate",
        "OnDestroy",
        "ConfigureServerFrameRate",
        "OnApplicationQuit",
        "ServerChangeScene",
        "OnServerChangeScene",
        "OnServerSceneChanged",
        "OnClientChangeScene",
        "OnClientSceneChanged",
        "OnServerConnect",
        "OnServerReady",
        "OnServerAddPlayer",
        "OnServerDisconnect",
        "OnClientConnect",
        "OnClientDisconnect",
        "OnClientNotReady",
        "OnStartHost",
        "OnStartServer",
        "OnStartClient",
        "OnStopHost",
        "OnStopServer",
        "OnStopClient",
        "OnCreateCharacter",
        "IEnumerator",
        "SetupCharacterCoroutine"
    ],
    "classes": [
        "SimpleTownNetwork"
    ]
}