{
    "identifiers": [
        "com",
        "agustincharry",
        "reactivewebtest",
        "client",
        "services",
        "com",
        "agustincharry",
        "reactivewebtest",
        "models",
        "Car",
        "org",
        "junit",
        "jupiter",
        "api",
        "Test",
        "org",
        "mockito",
        "ArgumentMatchers",
        "org",
        "mockito",
        "Mock",
        "org",
        "springframework",
        "beans",
        "factory",
        "annotation",
        "Autowired",
        "org",
        "springframework",
        "boot",
        "test",
        "context",
        "SpringBootTest",
        "org",
        "springframework",
        "test",
        "util",
        "ReflectionTestUtils",
        "org",
        "springframework",
        "web",
        "reactive",
        "client",
        "WebClient",
        "reactor",
        "core",
        "publisher",
        "Flux",
        "reactor",
        "core",
        "publisher",
        "Mono",
        "reactor",
        "test",
        "StepVerifier",
        "java",
        "util",
        "java",
        "util",
        "org",
        "mockito",
        "ArgumentMatchers",
        "anyString",
        "org",
        "mockito",
        "Mockito",
        "when",
        "SpringBootTest",
        "Mock",
        "webClientMock",
        "Mock",
        "requestHeadersSpecMock",
        "Mock",
        "requestHeadersUriSpecMock",
        "Mock",
        "responseSpecMock",
        "Autowired",
        "service",
        "add",
        "add",
        "add",
        "add",
        "Test",
        "ReflectionTestUtils",
        "setField",
        "service",
        "webClientMock",
        "when",
        "webClientMock",
        "get",
        "thenReturn",
        "requestHeadersUriSpecMock",
        "when",
        "requestHeadersUriSpecMock",
        "uri",
        "anyString",
        "thenReturn",
        "requestHeadersSpecMock",
        "when",
        "requestHeadersSpecMock",
        "retrieve",
        "thenReturn",
        "responseSpecMock",
        "when",
        "responseSpecMock",
        "bodyToFlux",
        "ArgumentMatchers",
        "notNull",
        "thenReturn",
        "Flux",
        "fromIterable",
        "result",
        "service",
        "getAll",
        "StepVerifier",
        "create",
        "result",
        "expectNextSequence",
        "verifyComplete",
        "StepVerifier",
        "create",
        "result",
        "expectSubscription",
        "expectNextCount",
        "size",
        "verifyComplete",
        "Test",
        "ReflectionTestUtils",
        "setField",
        "service",
        "webClientMock",
        "when",
        "webClientMock",
        "get",
        "thenReturn",
        "requestHeadersUriSpecMock",
        "when",
        "requestHeadersUriSpecMock",
        "uri",
        "anyString",
        "thenReturn",
        "requestHeadersSpecMock",
        "when",
        "requestHeadersSpecMock",
        "retrieve",
        "thenReturn",
        "responseSpecMock",
        "car",
        "when",
        "responseSpecMock",
        "bodyToMono",
        "ArgumentMatchers",
        "notNull",
        "thenReturn",
        "Mono",
        "just",
        "car",
        "carFlux",
        "service",
        "getById",
        "car",
        "getId",
        "StepVerifier",
        "create",
        "carFlux",
        "expectNext",
        "car",
        "verifyComplete",
        "StepVerifier",
        "create",
        "carFlux",
        "expectSubscription",
        "expectNextCount",
        "verifyComplete"
    ],
    "literals": [
        "\"1\"",
        "\"Mazda\"",
        "\"red\"",
        "\"2\"",
        "\"2\"",
        "\"Renault\"",
        "\"White\"",
        "\"1\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"a\"",
        "\"b\"",
        "\"b\"",
        "\"b\"",
        "\"b\"",
        "\"webClient\"",
        "\"webClient\""
    ],
    "variables": [
        "webClientMock",
        "requestHeadersSpecMock",
        "requestHeadersUriSpecMock",
        "responseSpecMock",
        "service",
        "list"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "CarServiceClientTests",
        "getAll",
        "getById"
    ],
    "classes": [
        "CarServiceClientTests"
    ]
}