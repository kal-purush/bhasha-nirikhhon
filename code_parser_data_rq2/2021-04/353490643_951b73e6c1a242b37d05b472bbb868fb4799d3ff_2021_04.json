{
    "identifiers": [
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "nps",
        "com",
        "fasterxml",
        "jackson",
        "core",
        "TypeReference",
        "java",
        "time",
        "OffsetDateTime",
        "java",
        "util",
        "java",
        "util",
        "Arrays",
        "java",
        "util",
        "Collection",
        "java",
        "util",
        "java",
        "util",
        "Objects",
        "java",
        "util",
        "stream",
        "Collectors",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "requests",
        "EqualityOperator",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "requests",
        "FeefoApiGetRequest",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "requests",
        "QueryParameter",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "nps",
        "NpsReviewsRequest",
        "Builder",
        "FinalStageBuilder",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "nps",
        "SortField",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "shared",
        "Comparison",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "shared",
        "Inclusion",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "shared",
        "MediaInclusion",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "shared",
        "TagFilter",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "shared",
        "TimeFrame",
        "org",
        "richardinnocent",
        "feefo",
        "api",
        "v10",
        "reviews",
        "shared",
        "UnansweredFeedbackInclusion",
        "RESPONSE_TYPE",
        "queryParameters",
        "builder",
        "RESPONSE_TYPE",
        "buildQueryParameters",
        "builder",
        "builder",
        "builder",
        "sortField",
        "queryParameters",
        "add",
        "builder",
        "sortField",
        "getQueryKey",
        "builder",
        "page",
        "queryParameters",
        "add",
        "builder",
        "page",
        "toString",
        "builder",
        "pageSize",
        "queryParameters",
        "add",
        "builder",
        "pageSize",
        "toString",
        "builder",
        "responseFields",
        "isEmpty",
        "queryParameters",
        "add",
        "join",
        "builder",
        "responseFields",
        "queryParameters",
        "add",
        "builder",
        "merchantIdentifier",
        "builder",
        "tagFilters",
        "isEmpty",
        "queryParameters",
        "add",
        "builder",
        "tagFilters",
        "stream",
        "TagFilter",
        "toQueryValue",
        "collect",
        "Collectors",
        "joining",
        "builder",
        "reviewCreationTimeComparisons",
        "stream",
        "comparison",
        "comparison",
        "getEqualityOperator",
        "comparison",
        "getReference",
        "toString",
        "forEach",
        "queryParameters",
        "add",
        "builder",
        "reviewUpdatedTimeComparisons",
        "stream",
        "comparison",
        "comparison",
        "getEqualityOperator",
        "comparison",
        "getReference",
        "toString",
        "forEach",
        "queryParameters",
        "add",
        "builder",
        "reviewCreatedSinceComparison",
        "queryParameters",
        "add",
        "builder",
        "reviewCreatedSinceComparison",
        "getReference",
        "builder",
        "reviewUpdatedSinceComparison",
        "queryParameters",
        "add",
        "builder",
        "reviewUpdatedSinceComparison",
        "getReference",
        "builder",
        "requestOrigin",
        "queryParameters",
        "add",
        "builder",
        "requestOrigin",
        "builder",
        "feedbackId",
        "queryParameters",
        "add",
        "builder",
        "feedbackId",
        "builder",
        "parentProductSku",
        "queryParameters",
        "add",
        "builder",
        "parentProductSku",
        "builder",
        "productSku",
        "queryParameters",
        "add",
        "builder",
        "productSku",
        "builder",
        "customerReference",
        "queryParameters",
        "add",
        "builder",
        "customerReference",
        "builder",
        "customerEmail",
        "queryParameters",
        "add",
        "builder",
        "customerEmail",
        "builder",
        "orderReference",
        "queryParameters",
        "add",
        "builder",
        "orderReference",
        "builder",
        "feedbackScores",
        "stream",
        "toString",
        "score",
        "score",
        "forEach",
        "queryParameters",
        "add",
        "builder",
        "feedbackFromSubMerchantsInclusion",
        "queryParameters",
        "add",
        "builder",
        "feedbackFromSubMerchantsInclusion",
        "getQueryValue",
        "builder",
        "mediaInclusion",
        "queryParameters",
        "add",
        "builder",
        "mediaInclusion",
        "getQueryValue",
        "builder",
        "unansweredFeedbackInclusion",
        "queryParameters",
        "add",
        "builder",
        "unansweredFeedbackInclusion",
        "getQueryValue",
        "builder",
        "fullThreadInclusion",
        "queryParameters",
        "add",
        "builder",
        "fullThreadInclusion",
        "getQueryValue",
        "builder",
        "enhancedInsightInclusion",
        "queryParameters",
        "add",
        "builder",
        "enhancedInsightInclusion",
        "getQueryValue",
        "Override",
        "Override",
        "queryParameters",
        "Override",
        "merchantIdentifier",
        "merchantIdentifier",
        "sortField",
        "page",
        "pageSize",
        "responseFields",
        "merchantIdentifier",
        "tagFilters",
        "reviewCreationTimeComparisons",
        "reviewUpdatedTimeComparisons",
        "reviewCreatedSinceComparison",
        "reviewUpdatedSinceComparison",
        "requestOrigin",
        "feedbackId",
        "parentProductSku",
        "productSku",
        "customerReference",
        "customerEmail",
        "orderReference",
        "feedbackScores",
        "feedbackFromSubMerchantsInclusion",
        "mediaInclusion",
        "unansweredFeedbackInclusion",
        "fullThreadInclusion",
        "enhancedInsightInclusion",
        "merchantIdentifier",
        "merchantIdentifier",
        "Objects",
        "requireNonNull",
        "merchantIdentifier",
        "merchantIdentifier",
        "isEmpty",
        "sortField",
        "sortField",
        "sortField",
        "page",
        "page",
        "page",
        "page",
        "page",
        "pageSize",
        "pageSize",
        "pageSize",
        "pageSize",
        "pageSize",
        "pageSize",
        "responseField",
        "responseFields",
        "add",
        "Objects",
        "requireNonNull",
        "responseField",
        "responseField1",
        "responseFields",
        "withResponseField",
        "responseField1",
        "responseFields",
        "responseField",
        "responseFields",
        "withResponseField",
        "responseField",
        "responseFields",
        "responseFields",
        "responseFields",
        "forEach",
        "withResponseField",
        "tagFilter",
        "tagFilters",
        "add",
        "Objects",
        "requireNonNull",
        "tagFilter",
        "tagFilter1",
        "tagFilters",
        "withTagFilter",
        "tagFilter1",
        "tagFilters",
        "tagFilters",
        "withTagFilter",
        "tagFilters",
        "tagFilters",
        "tagFilters",
        "forEach",
        "withTagFilter",
        "reviewCreationTime",
        "reviewCreationTimeComparisons",
        "add",
        "EqualityOperator",
        "EQUALS",
        "reviewCreationTime",
        "latestReviewCreationTime",
        "reviewCreationTimeComparisons",
        "add",
        "EqualityOperator",
        "LESS_THAN",
        "latestReviewCreationTime",
        "latestReviewCreationTime",
        "reviewCreationTimeComparisons",
        "add",
        "EqualityOperator",
        "LESS_THAN_OR_EQUAL_TO",
        "latestReviewCreationTime",
        "earliestReviewCreationTime",
        "reviewCreationTimeComparisons",
        "add",
        "EqualityOperator",
        "GREATER_THAN",
        "earliestReviewCreationTime",
        "earliestReviewCreationTime",
        "reviewCreationTimeComparisons",
        "add",
        "EqualityOperator",
        "GREATER_THAN_OR_EQUAL_TO",
        "earliestReviewCreationTime",
        "reviewUpdatedTime",
        "reviewUpdatedTimeComparisons",
        "add",
        "EqualityOperator",
        "EQUALS",
        "reviewUpdatedTime",
        "latestReviewUpdatedTime",
        "reviewUpdatedTimeComparisons",
        "add",
        "EqualityOperator",
        "LESS_THAN",
        "latestReviewUpdatedTime",
        "latestReviewUpdatedTime",
        "reviewUpdatedTimeComparisons",
        "add",
        "EqualityOperator",
        "LESS_THAN_OR_EQUAL_TO",
        "latestReviewUpdatedTime",
        "earliestReviewUpdatedTime",
        "reviewUpdatedTimeComparisons",
        "add",
        "EqualityOperator",
        "GREATER_THAN",
        "earliestReviewUpdatedTime",
        "earliestReviewUpdatedTime",
        "reviewUpdatedTimeComparisons",
        "add",
        "EqualityOperator",
        "GREATER_THAN_OR_EQUAL_TO",
        "earliestReviewUpdatedTime",
        "reviewCreationTimeFrame",
        "reviewCreatedSinceComparison",
        "EqualityOperator",
        "EQUALS",
        "reviewCreationTimeFrame",
        "getQueryValue",
        "reviewUpdatedTimeFrame",
        "reviewUpdatedSinceComparison",
        "EqualityOperator",
        "EQUALS",
        "reviewUpdatedTimeFrame",
        "getQueryValue",
        "requestOrigin",
        "requestOrigin",
        "requestOrigin",
        "feedbackId",
        "feedbackId",
        "feedbackId",
        "parentProductSku",
        "parentProductSku",
        "parentProductSku",
        "productSku",
        "productSku",
        "productSku",
        "customerReference",
        "customerReference",
        "customerReference",
        "email",
        "customerEmail",
        "email",
        "orderReference",
        "orderReference",
        "orderReference",
        "score",
        "score",
        "score",
        "score",
        "feedbackScores",
        "add",
        "score",
        "score1",
        "scores",
        "withFeedbackScore",
        "score1",
        "scores",
        "Arrays",
        "stream",
        "scores",
        "forEach",
        "withFeedbackScore",
        "scores",
        "scores",
        "scores",
        "forEach",
        "withFeedbackScore",
        "inclusion",
        "feedbackFromSubMerchantsInclusion",
        "inclusion",
        "mediaInclusion",
        "mediaInclusion",
        "mediaInclusion",
        "unansweredFeedbackInclusion",
        "unansweredFeedbackInclusion",
        "unansweredFeedbackInclusion",
        "fullThreadInclusion",
        "fullThreadInclusion",
        "fullThreadInclusion",
        "enhancedInsightInclusion",
        "enhancedInsightInclusion",
        "enhancedInsightInclusion"
    ],
    "literals": [
        "\"sort\"",
        "\"page\"",
        "\"page_size\"",
        "\"fields\"",
        "\",\"",
        "\"merchant_identifier\"",
        "\"tags\"",
        "\",\"",
        "\"date_time\"",
        "\"updated_date_time\"",
        "\"since_period\"",
        "\"since_updated_period\"",
        "\"origin\"",
        "\"id\"",
        "\"parent_product_sku\"",
        "\"product_sku\"",
        "\"customer_reference\"",
        "\"customer_email\"",
        "\"order_reference\"",
        "\"rating\"",
        "\"children\"",
        "\"media\"",
        "\"unanswered_feedback\"",
        "\"full_thread\"",
        "\"enhanced_insight\"",
        "\"/10/reviews/nps\"",
        "\"Merchant identifier is mandatory and cannot be null\"",
        "\"Merchant identifier is mandatory and cannot be empty\"",
        "\"Page must be positive but is \"",
        "\"Page size must be between 1 and 100 (inclusive), but is \"",
        "\"Response field is null\"",
        "\"Tag filter is null\"",
        "\"Score must be between 1 and 5 but is \""
    ],
    "variables": [
        "sortField",
        "page",
        "pageSize",
        "merchantIdentifier",
        "reviewCreatedSinceComparison",
        "reviewUpdatedSinceComparison",
        "requestOrigin",
        "feedbackId",
        "parentProductSku",
        "productSku",
        "customerReference",
        "customerEmail",
        "orderReference",
        "feedbackFromSubMerchantsInclusion",
        "mediaInclusion",
        "unansweredFeedbackInclusion",
        "fullThreadInclusion",
        "enhancedInsightInclusion",
        "responseFields",
        "tagFilters",
        "scores"
    ],
    "comments": [],
    "docstrings": [
        "* Retrieves customer feedback details with NPS content. The response will contain\n * personally-identifiable or business-sensitive information, so authorisation not required.",
        "* Creates a new builder for creating {@link NpsReviewsRequest} objects.\n   * @return A new builder.",
        "* Builder for {@link NpsReviewsRequest} objects.",
        "* Specifies the merchant to retrieve reviews for. Note that sub-merchants can also by included\n     * in the request by specifying\n     * {@link FinalStageBuilder#withFeedbackFromSubMerchants(Inclusion)}.\n     * @param merchantIdentifier The identifier for the merchant.\n     * @return A builder.\n     * @throws NullPointerException Thrown if {@code merchantIdentifier == null}.",
        "* Builder for {@link NpsReviewsRequest} objects.",
        "* Specifies the primary field by which the response should be sorted.\n       * @param sortField The primary field by which the response should be sorted.\n       * @return This builder.",
        "* Specifies the page of results that should be returned from this request.\n       * @param page The page of results to retrieve.\n       * @return This builder.\n       * @throws IllegalArgumentException Thrown if {@code page < 1}.",
        "* Specifies the maximum number of sales that will be returned from this request.\n       * @param pageSize The maximum number of sales that will be returned from this request. Must\n       * be between 1 and 100 (inclusive).\n       * @return This builder.\n       * @throws IllegalArgumentException Thrown if {@code pageSize < 1 || pageSize > 100}.",
        "* The API can be restricted such that it only returns a subset of response fields. This\n       * method will ensure that only this provided field is returned. Note that this method is\n       * cumulative, so calling {@code .withResponseField(\"a\").withResponseField(\"b\")} is\n       * functionally identical to {@code .withResponseFields(\"a\", \"b\")}.\n       * @param responseField The field that should be returned.\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code responseField == null}.",
        "* The API can be restricted such that it only returns a subset of response fields. This\n       * method will ensure that only these provided fields are returned. Note that this method is\n       * cumulative, so calling {@code .withResponseFields(\"a\", \"b\").withResponseFields(\"c\", \"d\")}\n       * is functionally identical to {@code .withResponseFields(\"a\", \"b\", \"c\", \"d\")}.\n       * @param responseField1 The first response field.\n       * @param responseFields The remaining response fields.\n       * @return This builder.\n       * @throws NullPointerException Thrown if any of the response fields are {@code null}.",
        "* The API can be restricted such that it only returns a subset of response fields. This\n       * method will ensure that only these provided fields are returned. Note that this method is\n       * cumulative, so calling\n       * {@code .withResponseFields(Arrays.asList(\"a\", \"b\")).withResponseFields(Arrays.asList(\"c\", \"d\"))}\n       * is functionally identical to {@code .withResponseFields(\"a\", \"b\", \"c\", \"d\")}.\n       * @param responseFields The fields that should be returned.\n       * @return This builder.\n       * @throws NullPointerException Thrown if any of the response fields are {@code null}.",
        "* Sales can be filtered by the tags that they contain. This method adds the specified tag\n       * filter to the request.\n       * @param tagFilter The tag filter to add.\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code tagFilter == null}.",
        "* Sales can be filtered by the tags that they contain. This method adds all of the specified\n       * tag filters to the request.\n       * @param tagFilter1 The first tag filter to add.\n       * @param tagFilters The remaining tag filters to add.\n       * @return This builder.\n       * @throws NullPointerException Thrown if any tag filter is {@code null}.",
        "* Sales can be filtered by the tags that they contain. This method adds all of the specified\n       * tag filters to the request.\n       * @param tagFilters The remaining tag filters to add.\n       * @return This builder.\n       * @throws NullPointerException Thrown if any tag filter is {@code null}.",
        "* Specifies that only reviews that were created exactly at the specified time should be\n       * returned.\n       * @param reviewCreationTime The time that the review was created.\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code reviewCreationTime == null}.",
        "* Specifies that only reviews that were created before the specified time should be returned.\n       * @param latestReviewCreationTime The latest time that a review could have been created\n       * (exclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code latestReviewCreationTime == null}.",
        "* Specifies that only reviews that were created at or before the specified time should be\n       * returned.\n       * @param latestReviewCreationTime The latest time that a review could have been created\n       * (inclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code latestReviewCreationTime == null}.",
        "* Specifies that only reviews that were created after the specified time should be returned.\n       * @param earliestReviewCreationTime The earliest time that a review could have been created\n       * (exclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code earliestReviewCreationTime == null}.",
        "* Specifies that only reviews that were created at or after the specified time should be\n       * returned.\n       * @param earliestReviewCreationTime The earliest time that a review could have been created\n       * (inclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code earliestReviewCreationTime == null}.",
        "* Specifies that only reviews that were updated exactly at the specified time should be\n       * returned.\n       * @param reviewUpdatedTime The time that the review was updated.\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code reviewUpdatedTime == null}.",
        "* Specifies that only reviews that were updated before the specified time should be returned.\n       * @param latestReviewUpdatedTime The latest time that a review could have been updated\n       * (exclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code latestReviewUpdatedTime == null}.",
        "* Specifies that only reviews that were updated at or before the specified time should be\n       * returned.\n       * @param latestReviewUpdatedTime The latest time that a review could have been updated\n       * (inclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code latestReviewUpdatedTime == null}.",
        "* Specifies that only reviews that were updated after the specified time should be returned.\n       * @param earliestReviewUpdatedTime The earliest time that a review could have been updated\n       * (exclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code earliestReviewUpdatedTime == null}.",
        "* Specifies that only reviews that were updated at or after the specified time should be\n       * returned.\n       * @param earliestReviewUpdatedTime The earliest time that a review could have been updated\n       * (inclusive).\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code earliestReviewUpdatedTime == null}.",
        "* Specifies that only reviews that were created in the given time frame (relative to now)\n       * should be returned.\n       * @param reviewCreationTimeFrame The time frame.\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code reviewCreationTimeFrame == null}.",
        "* Specifies that only reviews that were updated in the given time frame (relative to now)\n       * should be returned.\n       * @param reviewUpdatedTimeFrame The time frame.\n       * @return This builder.\n       * @throws NullPointerException Thrown if {@code reviewUpdatedTimeFrame == null}.",
        "* Specifies the domain of the web page that is making the request. This should be used\n       * executing cross-origin requests (see\n       * <a href=\"https://support.feefo.com/support/solutions/articles/8000051105-reviews-api-origin\">the support docs</a>\n       * for more information).\n       * @param requestOrigin The domain of the web page that is making the request.\n       * @return This builder.",
        "* Specifies that only feedback with the given ID should be returned.\n       * @param feedbackId The ID of the feedback.\n       * @return This builder.",
        "* Specifies that only reviews of products with the specified parent product SKU should be\n       * returned.\n       * @param parentProductSku The parent product SKU of the products of interest.\n       * @return This builder.",
        "* Specifies that only reviews of products with the given product SKU should be returned.\n       * @param productSku The product SKU of the product of interest.\n       * @return This builder.",
        "* Specifies that only reviews from the customer with the given reference identifier should\n       * be returned.\n       * @param customerReference The unique customer reference for the customer of interest.\n       * @return This builder.",
        "* Specifies that only reviews from the customer with the given email address should be\n       * returned.\n       * @param email The email address for the customer of interest.\n       * @return This builder.",
        "* Specifies that only feedback associated with the sale described by the given order\n       * reference should be returned.\n       * @param orderReference The order reference of the sale of interest.\n       * @return This builder.",
        "* Specifies that only feedback with the specified score should be returned. This is\n       * cumulative, such that {@code .withFeedbackScore(1).withFeedbackScore(2)} is functionally\n       * equivalent to {@code .withFeedbackScores(1, 2)}.\n       * @param score The feedback score of interest. The score must be between 1 and 5 (inclusive).\n       * @return This builder.\n       * @throws IllegalArgumentException Thrown if {@code score < 1 || score > 5}.",
        "* Specifies that only feedback with the specified scores should be returned. This is\n       * cumulative, such that {@code .withFeedbackScore(1, 2).withFeedbackScore(3, 4)} is\n       * functionally equivalent to {@code .withFeedbackScores(1, 2, 3, 4)}.\n       * @param score1 The first score.\n       * @param scores The remaining scores.\n       * @return This builder.\n       * @throws IllegalArgumentException Thrown if any score is less than 1 or greater than 5.",
        "* Specifies that only feedback with the specified scores should be returned. This is\n       * cumulative, such that\n       * {@code .withFeedbackScore(Arrays.asList(1, 2)).withFeedbackScore(Arrays.asList(3, 4))} is\n       * functionally equivalent to {@code .withFeedbackScores(1, 2, 3, 4)}.\n       * @param scores The scores of interest.\n       * @return This builder.\n       * @throws IllegalArgumentException Thrown if any score is less than 1 or greater than 5.",
        "* <p>Specifies whether to include feedback from sub-merchants.</p>\n       * <p>By default, feedback from sub-merchants is excluded.</p>\n       * @param inclusion Whether to include feedback from sub-merchants.\n       * @return This builder.",
        "* <p>Specifies how feedback with media should be included in the results.</p>\n       * <p>Default: {@link MediaInclusion#INCLUDE}</p>\n       * @param mediaInclusion Whether to include feedback with media.\n       * @return This builder.",
        "* <p>Specifies whether feedback left in the last 48 hours but has not yet been responded to\n       * by the merchant should be included in the results.</p>\n       * <p>Default: {@link UnansweredFeedbackInclusion#INCLUDE}</p>\n       * @param unansweredFeedbackInclusion Whether to feedback left in the last 48 hours that has\n       * not yet been responded to by the merchant.\n       * @return This builder.",
        "* <p>Specifies whether subsequent exchanges between the customer and merchant should be\n       * included in the results.</p>\n       * <p>Default: {@link Inclusion#EXCLUDE}</p>\n       * @param fullThreadInclusion Whether subsequent exchanges between the customer and merchant\n       * should be included in the results.\n       * @return This builder.",
        "* <p>Specifies if enhanced insight (smart themes) data should be included in the API\n       * response. This is only applicable for merchants with the\n       * <a href=\"https://www.feefo.com/en/business/products/smart-themes\">Smart Themes</a> package\n       * enabled.</p>\n       * <p>Default: {@link Inclusion#EXCLUDE}</p>\n       * @param enhancedInsightInclusion Whether to include enhanced insight data in the response.\n       * @return This builder.",
        "* Builds the request.\n       * @return The request."
    ],
    "functions": [
        "NpsReviewsRequest",
        "buildQueryParameters",
        "getBasePath",
        "getQueryParameters",
        "requiresAuthentication",
        "Builder",
        "builder",
        "Builder",
        "FinalStageBuilder",
        "forMerchant",
        "FinalStageBuilder",
        "FinalStageBuilder",
        "withSortField",
        "FinalStageBuilder",
        "withPage",
        "FinalStageBuilder",
        "withPageSize",
        "FinalStageBuilder",
        "withResponseField",
        "FinalStageBuilder",
        "withResponseFields",
        "FinalStageBuilder",
        "withResponseFields",
        "FinalStageBuilder",
        "withTagFilter",
        "FinalStageBuilder",
        "withTagFilters",
        "FinalStageBuilder",
        "withTagFilters",
        "FinalStageBuilder",
        "withReviewCreationTimeAtExactly",
        "FinalStageBuilder",
        "withReviewCreationTimeBefore",
        "FinalStageBuilder",
        "withReviewCreationTimeAtOrBefore",
        "FinalStageBuilder",
        "withReviewCreationTimeAfter",
        "FinalStageBuilder",
        "withReviewCreationTimeAtOrAfter",
        "FinalStageBuilder",
        "withReviewUpdatedTimeAtExactly",
        "FinalStageBuilder",
        "withReviewUpdatedTimeBefore",
        "FinalStageBuilder",
        "withReviewUpdatedTimeAtOrBefore",
        "FinalStageBuilder",
        "withReviewUpdatedTimeAfter",
        "FinalStageBuilder",
        "withReviewUpdatedTimeAtOrAfter",
        "FinalStageBuilder",
        "withReviewCreatedIn",
        "FinalStageBuilder",
        "withReviewUpdatedIn",
        "FinalStageBuilder",
        "withRequestOrigin",
        "FinalStageBuilder",
        "withFeedbackId",
        "FinalStageBuilder",
        "withParentProductSku",
        "FinalStageBuilder",
        "withProductSku",
        "FinalStageBuilder",
        "withCustomerReference",
        "FinalStageBuilder",
        "withCustomerEmail",
        "FinalStageBuilder",
        "withOrderReference",
        "FinalStageBuilder",
        "withFeedbackScore",
        "FinalStageBuilder",
        "withFeedbackScores",
        "FinalStageBuilder",
        "withFeedbackScores",
        "FinalStageBuilder",
        "withFeedbackFromSubMerchants",
        "FinalStageBuilder",
        "withMediaInclusion",
        "FinalStageBuilder",
        "withUnansweredFeedbackInclusion",
        "FinalStageBuilder",
        "withFullThread",
        "FinalStageBuilder",
        "withEnhancedInsight",
        "NpsReviewsRequest",
        "build"
    ],
    "classes": [
        "NpsReviewsRequest",
        "Builder",
        "FinalStageBuilder"
    ]
}