{
    "identifiers": [
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "require",
        "process",
        "express",
        "mongoose",
        "dbURI",
        "process",
        "app",
        "port",
        "port",
        "err",
        "err",
        "app",
        "app",
        "app",
        "express",
        "app",
        "express",
        "app",
        "bodyParser",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "Meme",
        "result",
        "res",
        "result",
        "err",
        "res",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "caption",
        "url",
        "res",
        "User",
        "err",
        "data",
        "err",
        "res",
        "data",
        "Meme",
        "memeData",
        "err",
        "newlyCreatedMeme",
        "err",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "username",
        "User",
        "err",
        "user",
        "err",
        "res",
        "Meme",
        "result",
        "res",
        "result",
        "err",
        "res",
        "app",
        "req",
        "res",
        "req",
        "Meme",
        "id",
        "err",
        "matchedMeme",
        "err",
        "res",
        "matchedMeme",
        "res",
        "res",
        "matchedMeme",
        "app",
        "req",
        "res",
        "User",
        "req",
        "err",
        "data",
        "err",
        "res",
        "data",
        "res",
        "bcryptjs",
        "req",
        "data",
        "err",
        "result",
        "err",
        "res",
        "result",
        "jwt",
        "data",
        "data",
        "JWT_SECRET",
        "res",
        "data",
        "res",
        "app",
        "req",
        "res",
        "req",
        "name",
        "name",
        "res",
        "username",
        "username",
        "res",
        "plaintextPassword",
        "plaintextPassword",
        "res",
        "plaintextPassword",
        "res",
        "plaintextPassword",
        "res",
        "bcryptjs",
        "plaintextPassword",
        "User",
        "userData",
        "err",
        "result",
        "err",
        "res",
        "result",
        "res",
        "User",
        "userData",
        "err",
        "data",
        "err",
        "res",
        "res",
        "app",
        "req",
        "res",
        "req",
        "Meme",
        "id",
        "err",
        "meme",
        "err",
        "res",
        "res",
        "app",
        "req",
        "res",
        "res"
    ],
    "literals": [
        "\"express\"",
        "\"path\"",
        "\"body-parser\"",
        "\"ejs\"",
        "\"fs\"",
        "\"mongoose\"",
        "\"mongodb\"",
        "\"./models/memeModel\"",
        "\"./models/user\"",
        "\"bcryptjs\"",
        "\"jsonwebtoken\"",
        "\"dotenv\"",
        "\"mongodb://localhost:27017/memedb\"",
        "\"Connected to db\"",
        "\"App is running on port \"",
        "\"views\"",
        "\"./views\"",
        "\"view engine\"",
        "\"ejs\"",
        "\"public\"",
        "\"/\"",
        "\"/memes\"",
        "\"/memes\"",
        "\"index\"",
        "\"Memes4u\"",
        "\"/signup\"",
        "\"signup\"",
        "\"Memes4u | Sign Up\"",
        "\"\"",
        "\"/login\"",
        "\"login\"",
        "\"Memes4u | Login\"",
        "\"\"",
        "\"/create\"",
        "\"create\"",
        "\"Memes4u | Create\"",
        "\"/memes\"",
        "\"error\"",
        "\"Please enter valid caption and image url\"",
        "\"ok\"",
        "\"/mymemes/:username\"",
        "\"mymemes\"",
        "\"Memes4u | My Memes\"",
        "\"/memes/:id\"",
        "\"onememe\"",
        "\"Memes4u\"",
        "\"/login\"",
        "\"error\"",
        "\"Invalid username/password\"",
        "\"ok\"",
        "\"error\"",
        "\"Invalid username/password\"",
        "\"/signup\"",
        "\"string\"",
        "\"error\"",
        "\"Invalid name\"",
        "\"string\"",
        "\"error\"",
        "\"Invalid username\"",
        "\"string\"",
        "\"error\"",
        "\"Invalid password\"",
        "\"error\"",
        "\"Password must contain atleast 6 characters\"",
        "\"error\"",
        "\"Password cannot have more than 32 characters\"",
        "\"error\"",
        "\"Sign up failed!!\"",
        "\"error\"",
        "\"Username already exists\"",
        "\"ok\"",
        "\"/delete/:id\"",
        "\"error\"",
        "\"ok\"",
        "\"404\"",
        "\"404 Not Found\""
    ],
    "variables": [
        "express",
        "path",
        "bodyParser",
        "fs",
        "mongoose",
        "mongo",
        "Meme",
        "User",
        "bcryptjs",
        "jwt",
        "JWT_SECRET",
        "app",
        "dbURI",
        "port",
        "name",
        "memeData",
        "username",
        "id",
        "token",
        "plaintextPassword",
        "password",
        "userData",
        "id"
    ],
    "comments": [
        "console.log(process.env.MONGODB_URI);",
        "process.env.MONGODB_URI ||",
        "setting the views directory(where the template files are located) and the view engine we'll use",
        "public folder contains static file(s) like styles.css",
        "To serve static files such as images, CSS files, and JavaScript files, \nwe use the express.static built-in middleware function in Express.",
        "displays memes",
        "get all memes posted by all users with the most recent memes appearing first",
        "sorts the blogs from newest to oldest",
        "res.status(200);",
        "console.log(err);",
        "sign up page",
        "login page",
        "web page to create new meme",
        "creates a new meme",
        "console.log(err);",
        "add data to database",
        "console.log(err);",
        "console.log(\"New Meme: \", newlyCreatedMeme);",
        "get the memes posted by a particular user",
        "console.log(err);",
        "console.log(err);",
        "search memes by id",
        "console.log(err);",
        "login",
        "username does not exist",
        "if result is true it would mean that the correct password was entered",
        "incorrect password entered",
        "sign up for a new user",
        "console.log(req.body);",
        "saving the hash of the entered password",
        "create a new user",
        "first check if user already exists",
        "console.log(err);",
        "console.log(\"User: \", data);",
        "delete a meme",
        "console.log(err);",
        "console.log(\"Meme deleted\");",
        "// listen for requests port 3000 for connections",
        "const port = process.env.PORT || 3000;",
        "app.listen(port, () => {",
        "console.log(\"App is running on port \", port);",
        "});"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}