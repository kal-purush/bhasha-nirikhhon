{
    "identifiers": [
        "getGitHubCommits",
        "getGitHubCommitDetail",
        "getGitHubFileCommits",
        "getFetchOptions",
        "reuseable",
        "Barrier",
        "LinkedListDirection",
        "Repository",
        "CommitManager",
        "RepositoryCommit",
        "RepositoryChangedFile",
        "Barrier",
        "repository",
        "reuseable",
        "commitSha",
        "forceUpdate",
        "forceUpdate",
        "commitSha",
        "commitSha",
        "commitSha",
        "commitSha",
        "reuseable",
        "commitSha",
        "forceUpdate",
        "forceUpdate",
        "commitSha",
        "getGitHubCommitDetail",
        "commitSha",
        "getFetchOptions",
        "forceUpdate",
        "commitSha",
        "commit",
        "commitSha",
        "commitSha",
        "Barrier",
        "getFetchOptions",
        "getGitHubCommits",
        "commitSha",
        "fetchOptions",
        "commits",
        "commit",
        "commit",
        "commit",
        "commitSha",
        "commits",
        "commits",
        "reuseable",
        "commitSha",
        "forceUpdate",
        "commitSha",
        "forceUpdate",
        "commitSha",
        "reuseable",
        "filePath",
        "commitSha",
        "forceUpdate",
        "getGitHubFileCommits",
        "filePath",
        "commitSha",
        "getFetchOptions",
        "forceUpdate",
        "commits",
        "commit",
        "commit",
        "commit",
        "commits",
        "reuseable",
        "filePath",
        "commitShaOrRef",
        "direction",
        "LinkedListDirection",
        "forceUpdate",
        "filePath",
        "filePath",
        "filePath",
        "commitIdList",
        "commitShaOrRef",
        "direction",
        "filePath",
        "commitShaOrRef",
        "forceUpdate",
        "commitIdList",
        "commits",
        "item",
        "item",
        "commitIdList",
        "commits",
        "direction",
        "commitIdList",
        "commitShaOrRef",
        "direction",
        "reuseable",
        "filePath",
        "commitSha",
        "forceUpdate",
        "filePath",
        "commitSha",
        "LinkedListDirection",
        "forceUpdate",
        "reuseable",
        "filePath",
        "commitSha",
        "filePath",
        "commitSha",
        "LinkedListDirection"
    ],
    "literals": [
        "'@/interfaces/github-api-rest'",
        "'@/helpers/fetch'",
        "'@/helpers/func'",
        "'@/helpers/async'",
        "'./linked-list'",
        "'./index'",
        "'./types'",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string",
        "string"
    ],
    "variables": [
        "commit",
        "fetchOptions",
        "commits",
        "commits",
        "commitIdList",
        "commits"
    ],
    "comments": [
        "page number is begin from 1",
        "the commit maybe updated by fetch commit **list** which",
        "won't have the file list data, so we will fallback to",
        "fetch single commit data to get the file list data",
        "get this commits for a specified file",
        "`this.getCommit` can be benefited from the cache",
        "get the commit sha of a file with direction, default get",
        "the latest commit sha for the file, note this the latest",
        "commit sha maybe not equal the `commitSha` in arguments",
        "Actually the latest commit for `filePath` maybe not equal the",
        "`commitSha` in arguments, we should use commits[0].sha in this case",
        "because we can not find the next commit by GitHub API,",
        "we can only try to find the next commit from the cache"
    ],
    "docstrings": [
        "* @file GitHub pull manager\n * @author netcon"
    ],
    "functions": [
        "loadMore",
        "hasMore"
    ],
    "classes": [
        "GitHubCommitManager"
    ]
}