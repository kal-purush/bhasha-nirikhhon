{
    "identifiers": [
        "numpy",
        "np",
        "os",
        "re",
        "pandas",
        "pd",
        "scipy",
        "sparse",
        "sp",
        "torch",
        "th",
        "dgl",
        "dgl",
        "data",
        "utils",
        "download",
        "extract_archive",
        "get_download_dir",
        "utils",
        "to_etype_name",
        "get_download_dir",
        "GENRES_ML_100K",
        "GENRES_ML_100K",
        "name",
        "device",
        "mix_cpu_gpu",
        "use_one_hot_fea",
        "symm",
        "test_ratio",
        "valid_ratio",
        "name",
        "device",
        "symm",
        "test_ratio",
        "valid_ratio",
        "get_download_dir",
        "format",
        "download_dir",
        "name",
        "download",
        "_urls",
        "name",
        "path",
        "zip_file_path",
        "overwrite",
        "extract_archive",
        "zip_file_path",
        "format",
        "download_dir",
        "name",
        "name",
        "name",
        "os",
        "path",
        "join",
        "download_dir",
        "name",
        "root_folder",
        "format",
        "_name",
        "_load_raw_user_info",
        "_load_raw_movie_info",
        "_name",
        "_load_raw_rates",
        "os",
        "path",
        "join",
        "_dir",
        "_load_raw_rates",
        "os",
        "path",
        "join",
        "_dir",
        "pd",
        "concat",
        "all_train_rating_info",
        "test_rating_info",
        "_name",
        "_name",
        "_load_raw_rates",
        "os",
        "path",
        "join",
        "_dir",
        "np",
        "ceil",
        "all_rating_info",
        "shape",
        "_test_ratio",
        "np",
        "random",
        "permutation",
        "all_rating_info",
        "shape",
        "all_rating_info",
        "iloc",
        "shuffled_idx",
        "num_test",
        "all_rating_info",
        "iloc",
        "shuffled_idx",
        "num_test",
        "NotImplementedError",
        "np",
        "ceil",
        "all_train_rating_info",
        "shape",
        "_valid_ratio",
        "np",
        "random",
        "permutation",
        "all_train_rating_info",
        "shape",
        "all_train_rating_info",
        "iloc",
        "shuffled_idx",
        "num_valid",
        "all_train_rating_info",
        "iloc",
        "shuffled_idx",
        "num_valid",
        "np",
        "unique",
        "train_rating_info",
        "values",
        "format",
        "all_rating_info",
        "shape",
        "format",
        "all_train_rating_info",
        "shape",
        "format",
        "train_rating_info",
        "shape",
        "format",
        "valid_rating_info",
        "shape",
        "format",
        "test_rating_info",
        "shape",
        "_drop_unseen_nodes",
        "orign_info",
        "user_info",
        "cmp_col_name",
        "reserved_ids_set",
        "all_rating_info",
        "values",
        "label",
        "_drop_unseen_nodes",
        "orign_info",
        "movie_info",
        "cmp_col_name",
        "reserved_ids_set",
        "all_rating_info",
        "values",
        "label",
        "ele",
        "i",
        "i",
        "ele",
        "user_info",
        "ele",
        "i",
        "i",
        "ele",
        "movie_info",
        "format",
        "len",
        "global_user_id_map",
        "len",
        "global_movie_id_map",
        "len",
        "global_user_id_map",
        "len",
        "global_movie_id_map",
        "use_one_hot_fea",
        "mix_cpu_gpu",
        "th",
        "FloatTensor",
        "_process_user_fea",
        "th",
        "FloatTensor",
        "_process_movie_fea",
        "th",
        "FloatTensor",
        "_process_user_fea",
        "to",
        "_device",
        "th",
        "FloatTensor",
        "_process_movie_fea",
        "to",
        "_device",
        "user_feature",
        "num_user",
        "num_user",
        "num_movie",
        "num_movie",
        "user_feature",
        "shape",
        "movie_feature",
        "shape",
        "info_line",
        "format",
        "user_feature_shape",
        "info_line",
        "format",
        "movie_feature_shape",
        "info_line",
        "_generate_pair_value",
        "all_train_rating_info",
        "_generate_pair_value",
        "train_rating_info",
        "_generate_pair_value",
        "valid_rating_info",
        "_generate_pair_value",
        "test_rating_info",
        "ratings",
        "th",
        "LongTensor",
        "np",
        "searchsorted",
        "possible_rating_values",
        "ratings",
        "to",
        "device",
        "labels",
        "_generate_enc_graph",
        "train_rating_pairs",
        "train_rating_values",
        "add_support",
        "_generate_dec_graph",
        "train_rating_pairs",
        "_make_labels",
        "train_rating_values",
        "th",
        "FloatTensor",
        "train_rating_values",
        "to",
        "device",
        "train_enc_graph",
        "_generate_dec_graph",
        "valid_rating_pairs",
        "_make_labels",
        "valid_rating_values",
        "th",
        "FloatTensor",
        "valid_rating_values",
        "to",
        "device",
        "_generate_enc_graph",
        "all_train_rating_pairs",
        "all_train_rating_values",
        "add_support",
        "_generate_dec_graph",
        "test_rating_pairs",
        "_make_labels",
        "test_rating_values",
        "th",
        "FloatTensor",
        "test_rating_values",
        "to",
        "device",
        "graph",
        "r",
        "possible_rating_values",
        "to_etype_name",
        "r",
        "rst",
        "graph",
        "number_of_edges",
        "r",
        "rst",
        "format",
        "train_enc_graph",
        "number_of_nodes",
        "train_enc_graph",
        "number_of_nodes",
        "_npairs",
        "train_enc_graph",
        "format",
        "train_dec_graph",
        "number_of_nodes",
        "train_dec_graph",
        "number_of_nodes",
        "train_dec_graph",
        "number_of_edges",
        "format",
        "valid_enc_graph",
        "number_of_nodes",
        "valid_enc_graph",
        "number_of_nodes",
        "_npairs",
        "valid_enc_graph",
        "format",
        "valid_dec_graph",
        "number_of_nodes",
        "valid_dec_graph",
        "number_of_nodes",
        "valid_dec_graph",
        "number_of_edges",
        "format",
        "test_enc_graph",
        "number_of_nodes",
        "test_enc_graph",
        "number_of_nodes",
        "_npairs",
        "test_enc_graph",
        "format",
        "test_dec_graph",
        "number_of_nodes",
        "test_dec_graph",
        "number_of_nodes",
        "test_dec_graph",
        "number_of_edges",
        "rating_info",
        "np",
        "array",
        "global_user_id_map",
        "ele",
        "ele",
        "rating_info",
        "dtype",
        "np",
        "int64",
        "np",
        "array",
        "global_movie_id_map",
        "ele",
        "ele",
        "rating_info",
        "dtype",
        "np",
        "int64",
        "rating_info",
        "values",
        "astype",
        "np",
        "float32",
        "rating_pairs",
        "rating_values",
        "rating_pairs",
        "rating_values",
        "add_support",
        "np",
        "zeros",
        "_num_user",
        "_num_movie",
        "dtype",
        "np",
        "float32",
        "rating_values",
        "_num_user",
        "_num_movie",
        "rating_pairs",
        "rating",
        "possible_rating_values",
        "np",
        "where",
        "rating_values",
        "rating",
        "rating_row",
        "ridx",
        "rating_col",
        "ridx",
        "to_etype_name",
        "rating",
        "data_dict",
        "update",
        "rating",
        "rrow",
        "rcol",
        "rating",
        "rcol",
        "rrow",
        "dgl",
        "heterograph",
        "data_dict",
        "num_nodes_dict",
        "num_nodes_dict",
        "len",
        "rating_pairs",
        "sum",
        "graph",
        "number_of_edges",
        "et",
        "et",
        "graph",
        "etypes",
        "add_support",
        "x",
        "x",
        "numpy",
        "astype",
        "x",
        "np",
        "inf",
        "th",
        "FloatTensor",
        "np",
        "sqrt",
        "x",
        "x",
        "unsqueeze",
        "r",
        "possible_rating_values",
        "to_etype_name",
        "r",
        "user_ci",
        "append",
        "graph",
        "r",
        "in_degrees",
        "movie_ci",
        "append",
        "graph",
        "r",
        "in_degrees",
        "_symm",
        "user_cj",
        "append",
        "graph",
        "r",
        "out_degrees",
        "movie_cj",
        "append",
        "graph",
        "r",
        "out_degrees",
        "user_cj",
        "append",
        "th",
        "zeros",
        "num_user",
        "movie_cj",
        "append",
        "th",
        "zeros",
        "num_movie",
        "_calc_norm",
        "sum",
        "user_ci",
        "_calc_norm",
        "sum",
        "movie_ci",
        "_symm",
        "_calc_norm",
        "sum",
        "user_cj",
        "_calc_norm",
        "sum",
        "movie_cj",
        "th",
        "ones",
        "num_user",
        "th",
        "ones",
        "num_movie",
        "graph",
        "nodes",
        "data",
        "update",
        "user_ci",
        "user_cj",
        "graph",
        "nodes",
        "data",
        "update",
        "movie_ci",
        "movie_cj",
        "graph",
        "rating_pairs",
        "np",
        "ones_like",
        "rating_pairs",
        "sp",
        "coo_matrix",
        "ones",
        "rating_pairs",
        "shape",
        "num_user",
        "num_movie",
        "dtype",
        "np",
        "float32",
        "dgl",
        "bipartite_from_scipy",
        "user_movie_ratings_coo",
        "utype",
        "etype",
        "vtype",
        "dgl",
        "heterograph",
        "g",
        "edges",
        "num_nodes_dict",
        "num_user",
        "num_movie",
        "property",
        "possible_rating_values",
        "size",
        "property",
        "_num_user",
        "property",
        "_num_movie",
        "orign_info",
        "cmp_col_name",
        "reserved_ids_set",
        "label",
        "reserved_ids_set",
        "orign_info",
        "cmp_col_name",
        "values",
        "pd",
        "DataFrame",
        "reserved_ids_set",
        "columns",
        "orign_info",
        "merge",
        "pd_rating_ids",
        "left_on",
        "cmp_col_name",
        "right_on",
        "how",
        "data_info",
        "dropna",
        "subset",
        "cmp_col_name",
        "data_info",
        "drop",
        "columns",
        "data_info",
        "reset_index",
        "drop",
        "data_info",
        "orign_info",
        "reset_index",
        "drop",
        "orign_info",
        "file_path",
        "sep",
        "pd",
        "read_csv",
        "file_path",
        "sep",
        "sep",
        "header",
        "names",
        "dtype",
        "np",
        "int32",
        "np",
        "int32",
        "np",
        "float32",
        "np",
        "int64",
        "engine",
        "rating_info",
        "_name",
        "pd",
        "read_csv",
        "os",
        "path",
        "join",
        "_dir",
        "sep",
        "header",
        "names",
        "engine",
        "_name",
        "pd",
        "read_csv",
        "os",
        "path",
        "join",
        "_dir",
        "sep",
        "header",
        "names",
        "engine",
        "_name",
        "pd",
        "read_csv",
        "os",
        "path",
        "join",
        "_dir",
        "sep",
        "header",
        "names",
        "dtype",
        "np",
        "int32",
        "np",
        "int32",
        "np",
        "float32",
        "np",
        "int64",
        "engine",
        "pd",
        "DataFrame",
        "np",
        "unique",
        "rating_info",
        "values",
        "astype",
        "np",
        "int32",
        "columns",
        "NotImplementedError",
        "_name",
        "_name",
        "user_info",
        "values",
        "astype",
        "np",
        "float32",
        "user_info",
        "values",
        "astype",
        "np",
        "float32",
        "user_info",
        "ele",
        "i",
        "i",
        "ele",
        "all_occupations",
        "np",
        "zeros",
        "shape",
        "user_info",
        "shape",
        "len",
        "all_occupations",
        "dtype",
        "np",
        "float32",
        "np",
        "arange",
        "user_info",
        "shape",
        "np",
        "array",
        "occupation_map",
        "ele",
        "ele",
        "user_info",
        "np",
        "concatenate",
        "ages",
        "reshape",
        "user_info",
        "shape",
        "gender",
        "reshape",
        "user_info",
        "shape",
        "occupation_one_hot",
        "axis",
        "_name",
        "np",
        "zeros",
        "shape",
        "user_info",
        "shape",
        "dtype",
        "np",
        "float32",
        "NotImplementedError",
        "user_features",
        "_name",
        "GENRES_ML_100K",
        "_name",
        "GENRES_ML_1M",
        "_name",
        "GENRES_ML_10M",
        "NotImplementedError",
        "_name",
        "os",
        "path",
        "join",
        "_dir",
        "pd",
        "read_csv",
        "file_path",
        "sep",
        "header",
        "names",
        "GENRES",
        "engine",
        "_name",
        "_name",
        "os",
        "path",
        "join",
        "_dir",
        "pd",
        "read_csv",
        "file_path",
        "sep",
        "header",
        "names",
        "engine",
        "ele",
        "i",
        "i",
        "ele",
        "GENRES",
        "genre_map",
        "genre_map",
        "np",
        "zeros",
        "shape",
        "movie_info",
        "shape",
        "len",
        "GENRES",
        "dtype",
        "np",
        "float32",
        "i",
        "genres",
        "movie_info",
        "ele",
        "genres",
        "split",
        "ele",
        "genre_map",
        "genre_map",
        "ele",
        "format",
        "genres",
        "genre_map",
        "idx",
        "genre_name",
        "GENRES",
        "idx",
        "genre_map",
        "genre_name",
        "movie_genres",
        "idx",
        "movie_info",
        "drop",
        "columns",
        "NotImplementedError",
        "torchtext",
        "_name",
        "GENRES_ML_100K",
        "_name",
        "GENRES_ML_1M",
        "_name",
        "GENRES_ML_10M",
        "NotImplementedError",
        "torchtext",
        "data",
        "Field",
        "tokenize",
        "tokenizer_language",
        "torchtext",
        "vocab",
        "GloVe",
        "name",
        "dim",
        "np",
        "zeros",
        "shape",
        "movie_info",
        "shape",
        "dtype",
        "np",
        "float32",
        "np",
        "zeros",
        "shape",
        "movie_info",
        "shape",
        "dtype",
        "np",
        "float32",
        "re",
        "compile",
        "i",
        "title",
        "movie_info",
        "p",
        "match",
        "title",
        "match_res",
        "format",
        "title",
        "i",
        "_name",
        "title",
        "match_res",
        "groups",
        "embedding",
        "get_vecs_by_tokens",
        "TEXT",
        "tokenize",
        "title_context",
        "numpy",
        "mean",
        "axis",
        "year",
        "np",
        "concatenate",
        "title_embedding",
        "release_years",
        "movie_info",
        "GENRES",
        "axis",
        "movie_features",
        "MovieLens",
        "device",
        "th",
        "device",
        "symm"
    ],
    "literals": [
        "'ml-100k'",
        "'http://files.grouplens.org/datasets/movielens/ml-100k.zip'",
        "'ml-1m'",
        "'http://files.grouplens.org/datasets/movielens/ml-1m.zip'",
        "'ml-10m'",
        "'http://files.grouplens.org/datasets/movielens/ml-10m.zip'",
        "'unknown'",
        "'Action'",
        "'Adventure'",
        "'Animation'",
        "'Children'",
        "'Comedy'",
        "'Crime'",
        "'Documentary'",
        "'Drama'",
        "'Fantasy'",
        "'Film-Noir'",
        "'Horror'",
        "'Musical'",
        "'Mystery'",
        "'Romance'",
        "'Sci-Fi'",
        "'Thriller'",
        "'War'",
        "'Western'",
        "'IMAX'",
        "'{}/{}.zip'",
        "'{}/{}'",
        "'ml-10m'",
        "'ml-10M100K'",
        "\"Starting processing {} ...\"",
        "'......'",
        "'ml-100k'",
        "'u1.base'",
        "'\\t'",
        "'u1.test'",
        "'\\t'",
        "'ml-1m'",
        "'ml-10m'",
        "'ratings.dat'",
        "'::'",
        "'......'",
        "\"rating\"",
        "\"All rating pairs : {}\"",
        "\"\\tAll train rating pairs : {}\"",
        "\"\\t\\tTrain rating pairs : {}\"",
        "\"\\t\\tValid rating pairs : {}\"",
        "\"\\tTest rating pairs  : {}\"",
        "\"id\"",
        "\"user_id\"",
        "\"user\"",
        "\"id\"",
        "\"movie_id\"",
        "\"movie\"",
        "'id'",
        "'id'",
        "'Total user number = {}, movie number = {}'",
        "\"Feature dim: \"",
        "\"\\nuser: {}\"",
        "\"\\nmovie: {}\"",
        "\"Train enc graph: \\t#user:{}\\t#movie:{}\\t#pairs:{}\"",
        "'user'",
        "'movie'",
        "\"Train dec graph: \\t#user:{}\\t#movie:{}\\t#pairs:{}\"",
        "'user'",
        "'movie'",
        "\"Valid enc graph: \\t#user:{}\\t#movie:{}\\t#pairs:{}\"",
        "'user'",
        "'movie'",
        "\"Valid dec graph: \\t#user:{}\\t#movie:{}\\t#pairs:{}\"",
        "'user'",
        "'movie'",
        "\"Test enc graph: \\t#user:{}\\t#movie:{}\\t#pairs:{}\"",
        "'user'",
        "'movie'",
        "\"Test dec graph: \\t#user:{}\\t#movie:{}\\t#pairs:{}\"",
        "'user'",
        "'movie'",
        "\"user_id\"",
        "\"movie_id\"",
        "\"rating\"",
        "'user'",
        "'movie'",
        "'user'",
        "'movie'",
        "'movie'",
        "'rev-%s'",
        "'user'",
        "'float32'",
        "'rev-%s'",
        "'rev-%s'",
        "'user'",
        "'ci'",
        "'cj'",
        "'movie'",
        "'ci'",
        "'cj'",
        "'_U'",
        "'_E'",
        "'_V'",
        "'user'",
        "'rate'",
        "'movie'",
        "'user'",
        "'movie'",
        "\"id_graph\"",
        "'id_graph'",
        "'outer'",
        "'id_graph'",
        "\"id_graph\"",
        "'user_id'",
        "'movie_id'",
        "'rating'",
        "'timestamp'",
        "'user_id'",
        "'movie_id'",
        "'ratings'",
        "'timestamp'",
        "'python'",
        "'ml-100k'",
        "'u.user'",
        "'|'",
        "'id'",
        "'age'",
        "'gender'",
        "'occupation'",
        "'zip_code'",
        "'python'",
        "'ml-1m'",
        "'users.dat'",
        "'::'",
        "'id'",
        "'gender'",
        "'age'",
        "'occupation'",
        "'zip_code'",
        "'python'",
        "'ml-10m'",
        "'ratings.dat'",
        "'::'",
        "'user_id'",
        "'movie_id'",
        "'rating'",
        "'timestamp'",
        "'user_id'",
        "'movie_id'",
        "'ratings'",
        "'timestamp'",
        "'python'",
        "'user_id'",
        "'id'",
        "'ml-100k'",
        "'ml-1m'",
        "'age'",
        "'gender'",
        "'F'",
        "'occupation'",
        "'occupation'",
        "'ml-10m'",
        "'ml-100k'",
        "'ml-1m'",
        "'ml-10m'",
        "'ml-100k'",
        "'u.item'",
        "'|'",
        "'id'",
        "'title'",
        "'release_date'",
        "'video_release_date'",
        "'url'",
        "'python'",
        "'ml-1m'",
        "'ml-10m'",
        "'movies.dat'",
        "'::'",
        "'id'",
        "'title'",
        "'genres'",
        "'python'",
        "'Children\\'s'",
        "'Children'",
        "'Childrens'",
        "'Children'",
        "'genres'",
        "'|'",
        "'genres not found, filled with unknown: {}'",
        "'unknown'",
        "\"genres\"",
        "'ml-100k'",
        "'ml-1m'",
        "'ml-10m'",
        "'spacy'",
        "'en_core_web_sm'",
        "'840B'",
        "r'(.+)\\s*\\((\\d+)\\)'",
        "'title'",
        "'{} cannot be matched, index={}, name={}'",
        "'__main__'",
        "\"ml-100k\"",
        "'cpu'"
    ],
    "variables": [
        "_urls",
        "READ_DATASET_PATH",
        "GENRES_ML_100K",
        "GENRES_ML_1M",
        "GENRES_ML_10M",
        "_name",
        "_device",
        "_symm",
        "_test_ratio",
        "_valid_ratio",
        "download_dir",
        "zip_file_path",
        "root_folder",
        "root_folder",
        "_dir",
        "all_train_rating_info",
        "test_rating_info",
        "all_rating_info",
        "all_rating_info",
        "num_test",
        "shuffled_idx",
        "test_rating_info",
        "all_train_rating_info",
        "num_valid",
        "shuffled_idx",
        "valid_rating_info",
        "train_rating_info",
        "possible_rating_values",
        "user_info",
        "movie_info",
        "global_user_id_map",
        "global_movie_id_map",
        "_num_user",
        "_num_movie",
        "user_feature",
        "movie_feature",
        "user_feature",
        "movie_feature",
        "user_feature",
        "movie_feature",
        "user_feature_shape",
        "movie_feature_shape",
        "user_feature_shape",
        "movie_feature_shape",
        "info_line",
        "all_train_rating_pairs",
        "all_train_rating_values",
        "train_rating_pairs",
        "train_rating_values",
        "valid_rating_pairs",
        "valid_rating_values",
        "test_rating_pairs",
        "test_rating_values",
        "labels",
        "train_enc_graph",
        "train_dec_graph",
        "train_labels",
        "train_truths",
        "valid_enc_graph",
        "valid_dec_graph",
        "valid_labels",
        "valid_truths",
        "test_enc_graph",
        "test_dec_graph",
        "test_labels",
        "test_truths",
        "rst",
        "r",
        "rating_pairs",
        "rating_values",
        "user_movie_R",
        "user_movie_R",
        "rating_pairs",
        "data_dict",
        "num_nodes_dict",
        "rating_row",
        "rating_col",
        "ridx",
        "rrow",
        "rcol",
        "rating",
        "graph",
        "x",
        "x",
        "x",
        "user_ci",
        "user_cj",
        "movie_ci",
        "movie_cj",
        "r",
        "user_ci",
        "movie_ci",
        "user_cj",
        "movie_cj",
        "user_cj",
        "movie_cj",
        "ones",
        "user_movie_ratings_coo",
        "g",
        "pd_rating_ids",
        "data_info",
        "data_info",
        "data_info",
        "data_info",
        "orign_info",
        "rating_info",
        "user_info",
        "user_info",
        "rating_info",
        "user_info",
        "ages",
        "gender",
        "all_occupations",
        "occupation_map",
        "occupation_one_hot",
        "occupation_one_hot",
        "user_features",
        "user_features",
        "GENRES",
        "GENRES",
        "GENRES",
        "file_path",
        "movie_info",
        "file_path",
        "movie_info",
        "genre_map",
        "genre_map",
        "genre_map",
        "movie_genres",
        "movie_genres",
        "i",
        "movie_genres",
        "i",
        "movie_info",
        "genre_name",
        "movie_info",
        "GENRES",
        "GENRES",
        "GENRES",
        "TEXT",
        "embedding",
        "title_embedding",
        "release_years",
        "p",
        "match_res",
        "title_context",
        "year",
        "title_context",
        "year",
        "title_embedding",
        "i",
        "release_years",
        "i",
        "movie_features"
    ],
    "comments": [
        "download and extract",
        "Map user/movie to the global id",
        "Generate features",
        "if mix_cpu_gpu, we put features in CPU",
        "sanity check",
        "print(\"  -----------------\")",
        "print(\"{}: {}(reserved) v.s. {}(from info)\".format(label, len(reserved_ids_set),",
        "len(set(orign_info[cmp_col_name].values))))",
        "print(\"\\torign_info: ({}, {})\".format(orign_info.shape[0], orign_info.shape[1]))",
        "print(\"\\tAfter dropping, data shape: ({}, {})\".format(data_info.shape[0], data_info.shape[1]))",
        "We use average of glove"
    ],
    "docstrings": [
        "\"\"\"MovieLens dataset\"\"\"",
        "\"\"\"MovieLens dataset used by GCMC model\n\n    TODO(minjie): make this dataset more general\n\n    The dataset stores MovieLens ratings in two types of graphs. The encoder graph\n    contains rating value information in the form of edge types. The decoder graph\n    stores plain user-movie pairs in the form of a bipartite graph with no rating\n    information. All graphs have two types of nodes: \"user\" and \"movie\".\n\n    The training, validation and test set can be summarized as follows:\n\n    training_enc_graph : training user-movie pairs + rating info\n    training_dec_graph : training user-movie pairs\n    valid_enc_graph : training user-movie pairs + rating info\n    valid_dec_graph : validation user-movie pairs\n    test_enc_graph : training user-movie pairs + validation user-movie pairs + rating info\n    test_dec_graph : test user-movie pairs\n\n    Attributes\n    ----------\n    train_enc_graph : dgl.DGLHeteroGraph\n        Encoder graph for training.\n    train_dec_graph : dgl.DGLHeteroGraph\n        Decoder graph for training.\n    train_labels : torch.Tensor\n        The categorical label of each user-movie pair\n    train_truths : torch.Tensor\n        The actual rating values of each user-movie pair\n    valid_enc_graph : dgl.DGLHeteroGraph\n        Encoder graph for validation.\n    valid_dec_graph : dgl.DGLHeteroGraph\n        Decoder graph for validation.\n    valid_labels : torch.Tensor\n        The categorical label of each user-movie pair\n    valid_truths : torch.Tensor\n        The actual rating values of each user-movie pair\n    test_enc_graph : dgl.DGLHeteroGraph\n        Encoder graph for test.\n    test_dec_graph : dgl.DGLHeteroGraph\n        Decoder graph for test.\n    test_labels : torch.Tensor\n        The categorical label of each user-movie pair\n    test_truths : torch.Tensor\n        The actual rating values of each user-movie pair\n    user_feature : torch.Tensor\n        User feature tensor. If None, representing an identity matrix.\n    movie_feature : torch.Tensor\n        Movie feature tensor. If None, representing an identity matrix.\n    possible_rating_values : np.ndarray\n        Available rating values in the dataset\n\n    Parameters\n    ----------\n    name : str\n        Dataset name. Could be \"ml-100k\", \"ml-1m\", \"ml-10m\"\n    device : torch.device\n        Device context\n    mix_cpu_gpu : boo, optional\n        If true, the ``user_feature`` attribute is stored in CPU\n    use_one_hot_fea : bool, optional\n        If true, the ``user_feature`` attribute is None, representing an one-hot identity\n        matrix. (Default: False)\n    symm : bool, optional\n        If true, the use symmetric normalize constant. Otherwise, use left normalize\n        constant. (Default: True)\n    test_ratio : float, optional\n        Ratio of test data\n    valid_ratio : float, optional\n        Ratio of validation data\n\n    \"\"\"",
        "\"\"\"In MovieLens, the rates have the following format\n\n        ml-100k\n        user id \\t movie id \\t rating \\t timestamp\n\n        ml-1m/10m\n        UserID::MovieID::Rating::Timestamp\n\n        timestamp is unix timestamp and can be converted by pd.to_datetime(X, unit='s')\n\n        Parameters\n        ----------\n        file_path : str\n\n        Returns\n        -------\n        rating_info : pd.DataFrame\n        \"\"\"",
        "\"\"\"In MovieLens, the user attributes file have the following formats:\n\n        ml-100k:\n        user id | age | gender | occupation | zip code\n\n        ml-1m:\n        UserID::Gender::Age::Occupation::Zip-code\n\n        For ml-10m, there is no user information. We read the user id from the rating file.\n\n        Parameters\n        ----------\n        name : str\n\n        Returns\n        -------\n        user_info : pd.DataFrame\n        \"\"\"",
        "\"\"\"\n\n        Parameters\n        ----------\n        user_info : pd.DataFrame\n        name : str\n        For ml-100k and ml-1m, the column name is ['id', 'gender', 'age', 'occupation', 'zip_code'].\n            We take the age, gender, and the one-hot encoding of the occupation as the user features.\n        For ml-10m, there is no user feature and we set the feature to be a single zero.\n\n        Returns\n        -------\n        user_features : np.ndarray\n\n        \"\"\"",
        "\"\"\"In MovieLens, the movie attributes may have the following formats:\n\n        In ml_100k:\n\n        movie id | movie title | release date | video release date | IMDb URL | [genres]\n\n        In ml_1m, ml_10m:\n\n        MovieID::Title (Release Year)::Genres\n\n        Also, Genres are separated by |, e.g., Adventure|Animation|Children|Comedy|Fantasy\n\n        Parameters\n        ----------\n        name : str\n\n        Returns\n        -------\n        movie_info : pd.DataFrame\n            For ml-100k, the column name is ['id', 'title', 'release_date', 'video_release_date', 'url'] + [GENRES (19)]]\n            For ml-1m and ml-10m, the column name is ['id', 'title'] + [GENRES (18/20)]]\n        \"\"\"",
        "\"\"\"\n\n        Parameters\n        ----------\n        movie_info : pd.DataFrame\n        name :  str\n\n        Returns\n        -------\n        movie_features : np.ndarray\n            Generate movie features by concatenating embedding and the year\n\n        \"\"\""
    ],
    "functions": [
        "_make_labels",
        "_npairs",
        "_generate_pair_value",
        "_generate_enc_graph",
        "_calc_norm",
        "_generate_dec_graph",
        "num_links",
        "num_user",
        "num_movie",
        "_drop_unseen_nodes",
        "_load_raw_rates",
        "_load_raw_user_info",
        "_process_user_fea",
        "_load_raw_movie_info",
        "_process_movie_fea"
    ],
    "classes": [
        "MovieLens"
    ]
}