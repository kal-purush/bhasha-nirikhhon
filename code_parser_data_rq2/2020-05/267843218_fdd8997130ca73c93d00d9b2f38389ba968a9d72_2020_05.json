{
    "identifiers": [
        "Engine",
        "engine",
        "width",
        "cellsHorizontal",
        "height",
        "cellsVertical",
        "Render",
        "engine",
        "Render",
        "render",
        "Runner",
        "Runner",
        "engine",
        "Bodies",
        "width",
        "width",
        "Bodies",
        "width",
        "height",
        "width",
        "Bodies",
        "height",
        "height",
        "Bodies",
        "width",
        "height",
        "height",
        "World",
        "world",
        "walls",
        "shuffle",
        "arr",
        "arr",
        "counter",
        "counter",
        "counter",
        "arr",
        "counter",
        "arr",
        "counter",
        "arr",
        "index",
        "arr",
        "index",
        "temp",
        "arr",
        "cellsVertical",
        "cellsHorizontal",
        "cellsVertical",
        "cellsHorizontal",
        "cellsVertical",
        "cellsHorizontal",
        "cellsVertical",
        "cellsHorizontal",
        "stepCellThrough",
        "row",
        "column",
        "grid",
        "row",
        "column",
        "grid",
        "row",
        "column",
        "shuffle",
        "row",
        "column",
        "row",
        "column",
        "row",
        "column",
        "row",
        "column",
        "neighbour",
        "neighbours",
        "nextRow",
        "nextRow",
        "cellsVertical",
        "nextColumn",
        "nextColumn",
        "cellsHorizontal",
        "grid",
        "nextRow",
        "nextColumn",
        "direction",
        "verticals",
        "row",
        "column",
        "direction",
        "verticals",
        "row",
        "column",
        "direction",
        "horizontals",
        "row",
        "column",
        "direction",
        "horizontals",
        "row",
        "column",
        "stepCellThrough",
        "nextRow",
        "nextColumn",
        "stepCellThrough",
        "startRow",
        "startColumn",
        "horizontals",
        "row",
        "rowIndex",
        "row",
        "open",
        "columIndex",
        "open",
        "Bodies",
        "columIndex",
        "unitLengthX",
        "unitLengthX",
        "rowIndex",
        "unitLengthY",
        "unitLengthY",
        "unitLengthX",
        "World",
        "world",
        "wall",
        "verticals",
        "row",
        "rowIndex",
        "row",
        "open",
        "columIndex",
        "open",
        "Bodies",
        "columIndex",
        "unitLengthX",
        "unitLengthX",
        "rowIndex",
        "unitLengthY",
        "unitLengthY",
        "unitLengthY",
        "World",
        "world",
        "wall",
        "Bodies",
        "width",
        "unitLengthX",
        "height",
        "unitLengthY",
        "unitLengthX",
        "unitLengthY",
        "World",
        "world",
        "goal",
        "unitLengthX",
        "unitLengthY",
        "Bodies",
        "unitLengthX",
        "unitLengthY",
        "ballRadius",
        "World",
        "world",
        "ball",
        "ball",
        "Body",
        "ball",
        "y",
        "Body",
        "ball",
        "x",
        "Body",
        "ball",
        "y",
        "Body",
        "ball",
        "x",
        "Events",
        "engine",
        "collision",
        "label",
        "label",
        "collision",
        "label",
        "collision",
        "world",
        "body",
        "world",
        "body",
        "Body",
        "body"
    ],
    "literals": [
        "'up'",
        "'right'",
        "'down'",
        "'left'",
        "'left'",
        "'right'",
        "'up'",
        "'down'",
        "'walls'",
        "'red'",
        "'walls'",
        "'red'",
        "'goal'",
        "'orange'",
        "'ball'",
        "'blue'",
        "'keydown'",
        "'collisionStart'",
        "'goal'",
        "'ball'",
        "'.winner'",
        "'hidden'",
        "'walls'"
    ],
    "variables": [
        "Matter",
        "engine",
        "engine",
        "cellsHorizontal",
        "cellsVertical",
        "width",
        "height",
        "unitLengthX",
        "unitLengthY",
        "render",
        "walls",
        "shuffle",
        "counter",
        "index",
        "temp",
        "grid",
        "verticals",
        "horizontals",
        "startRow",
        "startColumn",
        "stepCellThrough",
        "neighbours",
        "nextRow",
        "nextColumn",
        "direction",
        "neighbour",
        "wall",
        "wall",
        "goal",
        "ballRadius",
        "ball"
    ],
    "comments": [
        "Pulling off some different properties from Matter",
        "tell the matter js exactly where we want to show the drawing of the world inside the dom",
        "height amd width of the canvas element",
        "Here we added our shape to the world",
        "logic to shuffle the array of neighbouring cells of a start cell so that choosing the direction (up/down/left/right)",
        "where the ball should move becomes random",
        "Creating 2D grid with initial value as False(unvisited)",
        "will create only one column with 'cellvertical' rows",
        "will create 'cellsHorizontal' col and 'cell vertical' rows",
        "create 2D array for vertical mazes and initial value false",
        "create 2D array for horizontal mazes and initial value false -- would help to id",
        "create random cell number to start with (eg 2,2 )",
        "Main function to create the maze by visiting all cells in the grid",
        "If i have visited the cell at [row,column] then return",
        "Mark the cell as visited",
        "Assemble randomly ordered list of neighbours",
        "For each neighbour..",
        "See if the neighbour is out of bounds",
        "If we have visited that neighbour ,continue to next neighbour",
        "Remove a wall from horizontal or vertical",
        "Visit that next cell",
        "Parses through the horizontal grid and identifies all 'False' cells and turn them into walls",
        "to prevent the element from falling",
        "labelling all the walls for animation effect when ball meets the goal",
        "Parses through the Vertical grid and identifies all 'False' cells and turn them into walls",
        "if any of the cell is true then return",
        "creating the goal rectangle in the last cell",
        "Creating ball in the first cell",
        "Identifying which key is pressed to move the ball with certain velocity",
        "will move up (w)",
        "will move right (d)",
        "will move down with 5 units velocity (s)",
        "will move left (a)",
        "Win condition",
        "this event will log each collision of ball with rectangles. Pairs-->Collision-->bodyA,bodyB",
        "console.log(collision);",
        "to give an animation effect(all the bodies fall apart downwards) when user wins"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}