{
    "identifiers": [
        "err",
        "err",
        "err",
        "err",
        "err",
        "err",
        "registry",
        "registry",
        "registry",
        "broker",
        "broker",
        "broker"
    ],
    "literals": [
        "\"use strict\"",
        "\"\"",
        "\"Console\"",
        "\"full\"",
        "\"info\"",
        "\"nats://localhost:4222\"",
        "\"Memory\"",
        "\"JSON\"",
        "\"RoundRobin\"",
        "\"Prometheus\"",
        "\"/metrics\"",
        "\"Console\""
    ],
    "variables": [],
    "comments": [
        "Namespace of nodes to segment your nodes on the same network.",
        "Unique node identifier. Must be unique in a namespace.",
        "Custom metadata store. Store here what you want. Accessing: `this.broker.metadata`",
        "Enable/disable logging or use custom logger. More info: https://moleculer.services/docs/0.14/logging.html",
        "Available logger types: \"Console\", \"File\", \"Pino\", \"Winston\", \"Bunyan\", \"debug\", \"Log4js\", \"Datadog\"",
        "Using colors on the output",
        "Print module names with different colors (like docker-compose for containers)",
        "Line formatter. It can be \"json\", \"short\", \"simple\", \"full\", a `Function` or a template string like \"{timestamp} {level} {nodeID}/{mod}: {msg}\"",
        "Custom object printer. If not defined, it uses the `util.inspect` method.",
        "Auto-padding the module name in order to messages begin at the same column.",
        "Default log level for built-in console logger. It can be overwritten in logger options above.",
        "Available values: trace, debug, info, warn, error, fatal",
        "Define transporter.",
        "More info: https://moleculer.services/docs/0.14/networking.html",
        "Note: During the development, you don't need to define it because all services will be loaded locally.",
        "In production you can set it via `TRANSPORTER=nats://localhost:4222` environment variable.",
        "\"NATS\"",
        "Define a cacher.",
        "More info: https://moleculer.services/docs/0.14/caching.html",
        "Define a serializer.",
        "Available values: \"JSON\", \"Avro\", \"ProtoBuf\", \"MsgPack\", \"Notepack\", \"Thrift\".",
        "More info: https://moleculer.services/docs/0.14/networking.html#Serialization",
        "Number of milliseconds to wait before reject a request with a RequestTimeout error. Disabled: 0",
        "Retry policy settings. More info: https://moleculer.services/docs/0.14/fault-tolerance.html#Retry",
        "Enable feature",
        "Count of retries",
        "First delay in milliseconds.",
        "Maximum delay in milliseconds.",
        "Backoff factor for delay. 2 means exponential backoff.",
        "A function to check failed requests.",
        "Limit of calling level. If it reaches the limit, broker will throw an MaxCallLevelError error. (Infinite loop protection)",
        "Number of seconds to send heartbeat packet to other nodes.",
        "Number of seconds to wait before setting node to unavailable status.",
        "Cloning the params of context if enabled. High performance impact, use it with caution!",
        "Tracking requests and waiting for running requests before shuting down. More info: https://moleculer.services/docs/0.14/context.html#Context-tracking",
        "Enable feature",
        "Number of milliseconds to wait before shuting down the process.",
        "Disable built-in request & emit balancer. (Transporter must support it, as well.). More info: https://moleculer.services/docs/0.14/networking.html#Disabled-balancer",
        "Settings of Service Registry. More info: https://moleculer.services/docs/0.14/registry.html",
        "Define balancing strategy. More info: https://moleculer.services/docs/0.14/balancing.html",
        "Available values: \"RoundRobin\", \"Random\", \"CpuUsage\", \"Latency\", \"Shard\"",
        "Enable local action call preferring. Always call the local action instance if available.",
        "Settings of Circuit Breaker. More info: https://moleculer.services/docs/0.14/fault-tolerance.html#Circuit-Breaker",
        "Enable feature",
        "Threshold value. 0.5 means that 50% should be failed for tripping.",
        "Minimum request count. Below it, CB does not trip.",
        "Number of seconds for time window.",
        "Number of milliseconds to switch from open to half-open state",
        "A function to check failed requests.",
        "Settings of bulkhead feature. More info: https://moleculer.services/docs/0.14/fault-tolerance.html#Bulkhead",
        "Enable feature.",
        "Maximum concurrent executions.",
        "Maximum size of queue",
        "Enable action & event parameter validation. More info: https://moleculer.services/docs/0.14/validating.html",
        "Enable/disable built-in metrics function. More info: https://moleculer.services/docs/0.14/metrics.html",
        "Available built-in reporters: \"Console\", \"CSV\", \"Event\", \"Prometheus\", \"Datadog\", \"StatsD\"",
        "HTTP port",
        "HTTP URL path",
        "Default labels which are appended to all metrics labels",
        "Enable built-in tracing function. More info: https://moleculer.services/docs/0.14/tracing.html",
        "Available built-in exporters: \"Console\", \"Datadog\", \"Event\", \"EventLegacy\", \"Jaeger\", \"Zipkin\"",
        "Console exporter is only for development!",
        "Custom logger",
        "Using colors",
        "Width of row",
        "Gauge width in the row",
        "Register custom middlewares",
        "Register custom REPL commands.",
        "Called after broker created.",
        "Called after broker started.",
        "Called after broker stopped."
    ],
    "docstrings": [
        "* Moleculer ServiceBroker configuration file\n *\n * More info about options:\n *     https://moleculer.services/docs/0.14/configuration.html\n *\n *\n * Overwriting options in production:\n * ================================\n * \tYou can overwrite any option with environment variables.\n * \tFor example to overwrite the \"logLevel\" value, use `LOGLEVEL=warn` env var.\n * \tTo overwrite a nested parameter, e.g. retryPolicy.retries, use `RETRYPOLICY_RETRIES=10` env var.\n *\n * \tTo overwrite brokerâ€™s deeply nested default options, which are not presented in \"moleculer.config.js\",\n * \tuse the `MOL_` prefix and double underscore `__` for nested properties in .env file.\n * \tFor example, to set the cacher prefix to `MYCACHE`, you should declare an env var as `MOL_CACHER__OPTIONS__PREFIX=mycache`.\n *  It will set this:\n *  {\n *    cacher: {\n *      options: {\n *        prefix: \"mycache\"\n *      }\n *    }\n *  }"
    ],
    "functions": [
        "created",
        "started",
        "stopped"
    ],
    "classes": []
}