{
    "identifiers": [
        "__BRYTHON__",
        "$B",
        "$B",
        "WorkerGlobalScope",
        "importScripts",
        "navigator",
        "WorkerNavigator",
        "$B",
        "process",
        "process",
        "$B",
        "_window",
        "_window",
        "_window",
        "$B",
        "href",
        "$B",
        "$B",
        "this_url",
        "_window",
        "this_url",
        "this_url",
        "this_url",
        "this_url",
        "scripts",
        "scripts",
        "this_url",
        "elts",
        "$path",
        "$B",
        "elts",
        "$B",
        "$B",
        "$path",
        "$B",
        "_window",
        "_window",
        "path",
        "path_elts",
        "$B",
        "path_elts",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$path",
        "$path",
        "$script_dir",
        "$path",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "attr",
        "attr",
        "$B",
        "attr",
        "value",
        "attr",
        "$B",
        "attr",
        "value",
        "$B",
        "attr",
        "$B",
        "_window",
        "_window",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "klass",
        "klass",
        "klass",
        "klass",
        "klass",
        "name",
        "klass",
        "klass",
        "klass",
        "name",
        "name",
        "klass",
        "attr",
        "klass",
        "klass",
        "attr",
        "klass",
        "attr",
        "klass",
        "attr",
        "name",
        "attr",
        "attr",
        "klass",
        "attr",
        "klass",
        "attr",
        "$B",
        "Storage",
        "has_storage",
        "$B",
        "localStorage",
        "$B",
        "localStorage",
        "$B",
        "err",
        "$B",
        "sessionStorage",
        "$B",
        "sessionStorage",
        "$B",
        "err",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "scripts",
        "$B",
        "$B",
        "scripts",
        "vfs_timestamp",
        "scripts",
        "script",
        "scripts",
        "$B",
        "script",
        "script",
        "$B",
        "script",
        "scripts",
        "script",
        "$B",
        "script",
        "vfs_timestamp",
        "$B",
        "files",
        "$B",
        "$B",
        "file",
        "files",
        "$B",
        "file",
        "files",
        "file",
        "$B",
        "src",
        "script_id",
        "$B",
        "$B",
        "$B",
        "$B",
        "script_id",
        "script_id",
        "__BRYTHON__",
        "src",
        "script_id",
        "script_id",
        "root",
        "js",
        "script_id",
        "js",
        "js",
        "_window",
        "src",
        "$B",
        "src",
        "root",
        "$B",
        "js",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "$B",
        "value",
        "value",
        "isFinite",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "$B",
        "$B",
        "_window",
        "_window",
        "$B",
        "$B",
        "obj",
        "attr",
        "obj",
        "res",
        "attr",
        "obj",
        "attr",
        "res",
        "$B",
        "table",
        "table",
        "table",
        "$B",
        "value",
        "value",
        "value",
        "i",
        "res",
        "i",
        "value",
        "res",
        "$B",
        "arguments",
        "keys",
        "$B",
        "keys",
        "keys",
        "arguments",
        "i",
        "len",
        "i",
        "keys",
        "arguments",
        "i",
        "keys",
        "i",
        "len",
        "i",
        "keys",
        "i",
        "$B",
        "key",
        "ops",
        "key",
        "attr",
        "ops",
        "res",
        "attr",
        "ops",
        "attr",
        "res",
        "$B",
        "$B",
        "$B",
        "$B",
        "$op_order",
        "_tmp",
        "_tmp",
        "item",
        "$op_weight",
        "item",
        "$weight",
        "$weight",
        "$B",
        "prefix",
        "prefix",
        "_prefix",
        "$loop_num",
        "$B",
        "replace_what",
        "replace_with",
        "replace_what",
        "get_rank_in_parent",
        "replace_what",
        "parent",
        "pos",
        "replace_with",
        "replace_with",
        "parent",
        "replace_with",
        "replace_what",
        "$B",
        "node",
        "node",
        "node",
        "$B",
        "parent",
        "insert_at",
        "name",
        "val",
        "$Node",
        "new_node",
        "parent",
        "new_node",
        "parent",
        "new_node",
        "parent",
        "$NodeCtx",
        "new_node",
        "$ExprCtx",
        "new_ctx",
        "$IdCtx",
        "expr_ctx",
        "name",
        "$AssignCtx",
        "expr_ctx",
        "insert_at",
        "parent",
        "new_node",
        "parent",
        "insert_at",
        "new_node",
        "assign",
        "val",
        "new_node",
        "$B",
        "yield_ctx",
        "$get_node",
        "yield_ctx",
        "$get_scope",
        "yield_ctx",
        "pnode",
        "pnode",
        "generator",
        "generator",
        "pnode",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "INDENT",
        "create_temp_name",
        "create_temp_name",
        "create_temp_name",
        "create_temp_name",
        "create_temp_name",
        "create_temp_name",
        "pnode",
        "pnode",
        "attr",
        "repl",
        "replace_with",
        "replace_with",
        "attr",
        "repl",
        "attr",
        "pnode",
        "repl",
        "attr",
        "$tokenize",
        "pnode",
        "replace_with",
        "repl",
        "repl",
        "yield_ctx",
        "yield_ctx",
        "yield_ctx",
        "pnode",
        "pnode",
        "pnode",
        "$YieldFromMarkerNode",
        "replace_node",
        "pnode",
        "new_node",
        "$B",
        "context",
        "msg",
        "indent",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "root",
        "root",
        "root",
        "tree_node",
        "root",
        "tree_node",
        "src",
        "line_num",
        "src",
        "$pos",
        "root",
        "line_num",
        "root",
        "indent",
        "indent",
        "msg",
        "$B",
        "msg",
        "src",
        "$pos",
        "line_num",
        "root",
        "msg",
        "$B",
        "src",
        "$pos",
        "line_num",
        "root",
        "msg",
        "message",
        "msg",
        "$B",
        "message",
        "src",
        "$pos",
        "line_num",
        "root",
        "$B",
        "msg",
        "src",
        "$pos",
        "line_num",
        "root",
        "context",
        "ctx",
        "forbidden",
        "ctx",
        "$_SyntaxError",
        "context",
        "ctx",
        "ctx",
        "$B",
        "ctx",
        "$_SyntaxError",
        "context",
        "$_SyntaxError",
        "context",
        "ctx",
        "ctx",
        "$B",
        "child",
        "child",
        "child",
        "child",
        "pos",
        "child",
        "pos",
        "child",
        "child",
        "child",
        "indent",
        "child",
        "res",
        "child",
        "indent",
        "res",
        "indent",
        "indent",
        "res",
        "indent",
        "res",
        "res",
        "res",
        "child",
        "res",
        "i",
        "child",
        "indent",
        "res",
        "indent",
        "res",
        "res",
        "indent",
        "child",
        "child",
        "indent",
        "indent",
        "ctx_js",
        "indent",
        "ctx_js",
        "child",
        "child",
        "indent",
        "indent",
        "rank",
        "rank",
        "atom",
        "$Node",
        "loop_num",
        "var_name",
        "js",
        "atom",
        "$NodeJSCtx",
        "temp_node",
        "js",
        "rank",
        "offset",
        "temp_node",
        "$Node",
        "rank",
        "offset",
        "yield_node",
        "$YieldCtx",
        "$NodeCtx",
        "yield_node",
        "$StringCtx",
        "yield_expr",
        "var_name",
        "$Node",
        "set_yield",
        "set_yield",
        "set_yield",
        "set_yield",
        "js",
        "loop_num",
        "$NodeJSCtx",
        "set_yield",
        "js",
        "rank",
        "offset",
        "set_yield",
        "atom",
        "x",
        "x",
        "loop_num",
        "$loop_num",
        "offset",
        "rank",
        "offset",
        "offset",
        "$get_docstring",
        "i",
        "i",
        "i",
        "offset",
        "offset",
        "i",
        "offset",
        "elt",
        "elt",
        "ctx_offset",
        "elt",
        "rank",
        "i",
        "i",
        "i",
        "offset",
        "offset",
        "i",
        "offset",
        "ctx_offset",
        "ctx_offset",
        "def_node",
        "def_node",
        "node",
        "node",
        "node_id",
        "is_comp",
        "block",
        "node_id",
        "block",
        "node_id",
        "blocks",
        "block",
        "node",
        "node",
        "node",
        "node",
        "blocks",
        "blocks",
        "parent",
        "parent",
        "parent",
        "parent",
        "$B",
        "def_ctx",
        "blocks",
        "def_ctx",
        "def_node",
        "parent",
        "def_ctx",
        "def_ctx",
        "def_ctx",
        "def_ctx",
        "def_ctx",
        "def_ctx",
        "block_id",
        "def_ctx",
        "def_ctx",
        "blocks",
        "g",
        "def_ctx",
        "$NodeJS",
        "res",
        "new_node",
        "rank",
        "rank",
        "offset",
        "new_node",
        "ctx_offset",
        "$Node",
        "attr",
        "res",
        "attr",
        "attr",
        "res",
        "$Node",
        "attr",
        "res",
        "attr",
        "attr",
        "res",
        "i",
        "len",
        "i",
        "res",
        "i",
        "res",
        "$B",
        "$Node",
        "$NodeCtx",
        "rank",
        "add_identnode",
        "rank",
        "$JSCode",
        "assign_ctx",
        "$ExprCtx",
        "assign_ctx",
        "$IdCtx",
        "expr_ctx",
        "assign_ctx",
        "expr_ctx",
        "$Node",
        "node",
        "assign_ctx",
        "assign_ctx",
        "node",
        "rank",
        "new_rank",
        "node",
        "assign_ctx",
        "node",
        "new_rank",
        "$B",
        "name",
        "$Node",
        "$NodeCtx",
        "name",
        "rank",
        "$B",
        "context",
        "with_commas",
        "with_commas",
        "context",
        "context",
        "context",
        "with_commas",
        "$to_js",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "$get_scope",
        "context",
        "scope",
        "scope",
        "context",
        "scope",
        "context",
        "context",
        "context",
        "context",
        "scope",
        "scope",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "scope",
        "scope",
        "scope",
        "name",
        "context",
        "scope",
        "scope",
        "scope",
        "name",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "node",
        "rank",
        "$ConditionCtx",
        "node",
        "$NotCtx",
        "new_ctx",
        "not_ctx",
        "condition",
        "node",
        "new_ctx",
        "$Node",
        "message",
        "js",
        "message",
        "$NodeJSCtx",
        "new_node",
        "js",
        "node",
        "new_node",
        "$B",
        "context",
        "expression",
        "check_assignment",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "expression",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "scope",
        "context",
        "context",
        "elt",
        "elt",
        "assigned",
        "$bind",
        "assigned",
        "scope",
        "context",
        "assigned",
        "assigned",
        "noassign",
        "assigned",
        "$_SyntaxError",
        "context",
        "assigned",
        "scope",
        "scope",
        "assigned",
        "$get_node",
        "node",
        "scope",
        "$bind",
        "assigned",
        "scope",
        "$get_module",
        "context",
        "$bind",
        "assigned",
        "assigned",
        "$_SyntaxError",
        "context",
        "assigned",
        "$_SyntaxError",
        "context",
        "node",
        "rank",
        "$get_scope",
        "left",
        "assigned",
        "left",
        "left",
        "left",
        "assigned",
        "assigned",
        "left",
        "node",
        "ctx",
        "$RawJSCtx",
        "ctx",
        "$loop_num",
        "nleft",
        "ctx",
        "$AssignCtx",
        "nleft",
        "nassign",
        "right",
        "assigned",
        "elt",
        "$Node",
        "$NodeCtx",
        "new_node",
        "new_node",
        "node",
        "new_node",
        "node",
        "node",
        "rank",
        "new_node",
        "elt",
        "node_ctx",
        "$AssignCtx",
        "elt",
        "$RawJSCtx",
        "assign",
        "$loop_num",
        "$loop_num",
        "left",
        "left",
        "left",
        "left_items",
        "left",
        "left",
        "left",
        "left_items",
        "left",
        "left",
        "left",
        "scope",
        "scope",
        "name",
        "left",
        "left_items",
        "left",
        "left_items",
        "left",
        "right",
        "right",
        "node",
        "node",
        "node",
        "left",
        "right",
        "right",
        "right",
        "right",
        "right_items",
        "right",
        "right_items",
        "right_items",
        "left_items",
        "left_items",
        "right_items",
        "left_items",
        "right_items",
        "$Node",
        "new_node",
        "node",
        "$NodeJSCtx",
        "new_node",
        "new_nodes",
        "pos",
        "new_node",
        "$loop_num",
        "$Node",
        "new_node",
        "node",
        "$NodeJSCtx",
        "new_node",
        "$var",
        "new_nodes",
        "pos",
        "new_node",
        "right_items",
        "right_item",
        "$var",
        "right_item",
        "$Node",
        "new_node",
        "node",
        "$NodeJSCtx",
        "new_node",
        "js",
        "new_nodes",
        "pos",
        "new_node",
        "$get_node",
        "left_items",
        "left_item",
        "$Node",
        "new_node",
        "this_node",
        "new_node",
        "this_node",
        "new_node",
        "node",
        "$NodeCtx",
        "new_node",
        "left_item",
        "context",
        "$AssignCtx",
        "left_item",
        "assign",
        "$JSCode",
        "$var",
        "i",
        "new_nodes",
        "pos",
        "new_node",
        "node",
        "rank",
        "new_nodes",
        "i",
        "i",
        "node",
        "rank",
        "new_nodes",
        "i",
        "$loop_num",
        "node",
        "rank",
        "create_temp_name",
        "create_temp_name",
        "$NodeJS",
        "rname",
        "right",
        "new_node",
        "node",
        "node",
        "rank",
        "new_node",
        "node",
        "rank",
        "$NodeJS",
        "rlname",
        "rlname",
        "rname",
        "left_items",
        "i",
        "left_items",
        "i",
        "left_items",
        "i",
        "expr",
        "expr",
        "expr",
        "packed",
        "i",
        "min_length",
        "node",
        "rank",
        "$NodeJS",
        "rlname",
        "min_length",
        "rlname",
        "rlname",
        "packed",
        "node",
        "rank",
        "$NodeJS",
        "rlname",
        "min_length",
        "left_items",
        "left_items",
        "left_item",
        "i",
        "$Node",
        "new_node",
        "scope",
        "new_node",
        "node",
        "node",
        "rank",
        "new_node",
        "$NodeCtx",
        "new_node",
        "left_item",
        "context",
        "$AssignCtx",
        "left_item",
        "packed",
        "i",
        "packed",
        "js",
        "i",
        "i",
        "packed",
        "js",
        "i",
        "rlname",
        "left_items",
        "i",
        "js",
        "rlname",
        "left_items",
        "i",
        "assign",
        "$JSCode",
        "js",
        "$loop_num",
        "left",
        "left",
        "left",
        "left",
        "left",
        "right",
        "$loop_num",
        "right",
        "right",
        "right",
        "right",
        "right",
        "res",
        "$var",
        "right_js",
        "rvar",
        "$var",
        "right",
        "right",
        "right",
        "res",
        "$var",
        "right_js",
        "rvar",
        "$var",
        "rvar",
        "right_js",
        "left",
        "$loop_num",
        "left",
        "left",
        "left",
        "left",
        "res",
        "left_to_js",
        "rvar",
        "left_to_js",
        "rvar",
        "res",
        "left_to_js",
        "res",
        "res",
        "res",
        "res",
        "rvar",
        "left",
        "left",
        "$loop_num",
        "left",
        "$get_node",
        "left",
        "$loop_num",
        "temp",
        "seq",
        "res",
        "temp",
        "temp",
        "left",
        "res",
        "temp",
        "left",
        "right",
        "left",
        "res",
        "temp",
        "left",
        "left",
        "right",
        "left",
        "res",
        "temp",
        "left",
        "left",
        "left",
        "right",
        "res",
        "res",
        "left",
        "res",
        "left",
        "left",
        "right_js",
        "left",
        "res",
        "left",
        "res",
        "res",
        "res",
        "left",
        "res",
        "right_js",
        "res",
        "left",
        "right",
        "$B",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "scope",
        "scope",
        "parent",
        "scope",
        "parent",
        "parent",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "$B",
        "context",
        "op",
        "check_assignment",
        "context",
        "context",
        "context",
        "context",
        "context",
        "op",
        "context",
        "$get_scope",
        "context",
        "context",
        "assigned",
        "assigned",
        "noassign",
        "name",
        "$_SyntaxError",
        "context",
        "scope",
        "scope",
        "scope",
        "name",
        "scope",
        "scope",
        "name",
        "assigned",
        "assigned",
        "$_SyntaxError",
        "context",
        "$get_node",
        "scope",
        "scope",
        "node",
        "rank",
        "$operators",
        "op",
        "node",
        "node",
        "parent",
        "rank",
        "left_is_id",
        "$B",
        "$NodeJS",
        "node",
        "rank",
        "check_node",
        "offset",
        "left_id",
        "right_is_int",
        "right_is_int",
        "$Node",
        "new_node",
        "line_num",
        "lnum_set",
        "$NodeJSCtx",
        "new_node",
        "parent",
        "rank",
        "new_node",
        "offset",
        "$Node",
        "new_node",
        "$NodeCtx",
        "new_node",
        "$ExprCtx",
        "new_ctx",
        "$RawJSCtx",
        "new_expr",
        "$AssignCtx",
        "new_expr",
        "assign",
        "_id",
        "assign",
        "parent",
        "rank",
        "offset",
        "new_node",
        "offset",
        "op",
        "left_is_id",
        "scope",
        "scope",
        "prefix",
        "global_ns",
        "scope",
        "scope",
        "context",
        "prefix",
        "global_ns",
        "prefix",
        "$Node",
        "lnum_set",
        "new_node",
        "line_num",
        "lnum_set",
        "$NodeJSCtx",
        "new_node",
        "context",
        "parent",
        "rank",
        "offset",
        "new_node",
        "in_class",
        "offset",
        "context",
        "context",
        "context",
        "context",
        "binding_scope",
        "left",
        "binding_scope",
        "left_value",
        "left",
        "left_value",
        "left_bound_to_int",
        "right_is_int",
        "parent",
        "rank",
        "offset",
        "$NodeJS",
        "left",
        "op",
        "right",
        "offset",
        "prefix",
        "prefix",
        "context",
        "left_id_unbound",
        "op",
        "prefix",
        "in_class",
        "left",
        "$Node",
        "lnum_set",
        "new_node",
        "line_num",
        "lnum_set",
        "js",
        "right_is_int",
        "js",
        "left1",
        "js",
        "left",
        "op1",
        "right",
        "right_is_int",
        "left1",
        "js",
        "left",
        "op",
        "right",
        "js",
        "left",
        "left",
        "op1",
        "right_is_int",
        "right",
        "right",
        "$NodeJSCtx",
        "new_node",
        "js",
        "parent",
        "rank",
        "offset",
        "new_node",
        "offset",
        "context",
        "op",
        "op",
        "op",
        "context",
        "aaops",
        "op",
        "context",
        "context",
        "right",
        "$Node",
        "lnum_set",
        "new_node",
        "line_num",
        "lnum_set",
        "$NodeJSCtx",
        "new_node",
        "js1",
        "parent",
        "rank",
        "offset",
        "new_node",
        "offset",
        "$Node",
        "lnum_set",
        "new_node",
        "line_num",
        "lnum_set",
        "prefix",
        "js",
        "js",
        "context",
        "func",
        "$NodeJSCtx",
        "new_node",
        "js",
        "parent",
        "rank",
        "offset",
        "new_node",
        "offset",
        "$Node",
        "aa1",
        "aa1",
        "node",
        "new_node",
        "aa1",
        "$NodeCtx",
        "aa1",
        "$ExprCtx",
        "ctx1",
        "left_id_unbound",
        "$RawJSCtx",
        "expr1",
        "left",
        "expr1",
        "context",
        "expr1",
        "elt",
        "elt",
        "expr1",
        "$AssignCtx",
        "expr1",
        "$OpCtx",
        "expr1",
        "op",
        "op",
        "new_op",
        "assign1",
        "$RawJSCtx",
        "new_op",
        "right",
        "assign1",
        "new_op",
        "expr1",
        "expr1",
        "assign1",
        "$NodeJS",
        "parent",
        "rank",
        "offset",
        "else_node",
        "$Node",
        "aa2",
        "node",
        "else_node",
        "aa2",
        "$NodeCtx",
        "aa2",
        "$ExprCtx",
        "ctx2",
        "left_id_unbound",
        "binding_scope",
        "js",
        "left_value",
        "left",
        "$RawJSCtx",
        "expr2",
        "js",
        "expr2",
        "context",
        "expr2",
        "elt",
        "elt",
        "expr2",
        "$AssignCtx",
        "expr2",
        "assign2",
        "$NodeJS",
        "context",
        "func",
        "right",
        "expr2",
        "expr2",
        "assign2",
        "left_is_id",
        "was_bound",
        "left_id",
        "offset",
        "$B",
        "context",
        "context",
        "context",
        "p",
        "p",
        "p",
        "p",
        "p",
        "$to_js",
        "$B",
        "context",
        "context",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "$Node",
        "body_node",
        "body_node",
        "tree_node",
        "tree_node",
        "body_node",
        "$NodeCtx",
        "body_node",
        "$B",
        "context",
        "kw",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "tree_node",
        "loop_node",
        "$_SyntaxError",
        "context",
        "kw",
        "loop_node",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "kw",
        "ctx",
        "ctx",
        "ctx",
        "kw",
        "break_flag",
        "$_SyntaxError",
        "context",
        "kw",
        "loop_node",
        "loop_node",
        "break_flag",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "set_loop_context",
        "context",
        "$get_scope",
        "scope",
        "res",
        "res",
        "res",
        "$B",
        "context",
        "context",
        "$pos",
        "context",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$pos",
        "$get_node",
        "$get_node",
        "$to_js",
        "$get_scope",
        "scope",
        "scope",
        "$get_scope",
        "scope",
        "def_scope",
        "$IdCtx",
        "def_scope",
        "$get_scope",
        "scope",
        "scope",
        "scope",
        "args",
        "$IdCtx",
        "args",
        "missing_id",
        "args",
        "$to_js",
        "res",
        "res",
        "res",
        "arg",
        "arg",
        "star_args",
        "positional",
        "arg",
        "dstar_args",
        "arg",
        "positional",
        "arg",
        "arg",
        "positional",
        "arg",
        "kw_args",
        "arg",
        "arg",
        "positional",
        "arg",
        "star_args",
        "positional",
        "arg",
        "dstar_args",
        "arg",
        "positional",
        "arg",
        "star_args",
        "positional",
        "i",
        "len",
        "i",
        "arg",
        "positional",
        "i",
        "arg",
        "p",
        "arg",
        "positional",
        "i",
        "i",
        "i",
        "len",
        "positional",
        "i",
        "elt",
        "positional",
        "i",
        "i",
        "i",
        "p",
        "elt",
        "args_str",
        "p",
        "i",
        "p",
        "i",
        "args_str",
        "p",
        "i",
        "positional",
        "i",
        "len",
        "i",
        "positional",
        "i",
        "positional",
        "i",
        "args_str",
        "positional",
        "kw_args",
        "dstar_args",
        "kw_args_str",
        "kw_args_str",
        "dstar_args",
        "kw_args_str",
        "kw_args_str",
        "kw_args_str",
        "kw_args_str",
        "star_args",
        "kw_args_str",
        "args_str",
        "kw_args_str",
        "args_str",
        "kw_args_str",
        "args_str",
        "kw_args_str",
        "args_str",
        "args_str",
        "kw_args_str",
        "star_args",
        "args_str",
        "args_str",
        "args_str",
        "args_str",
        "func_js",
        "args_str",
        "$B",
        "classes",
        "func_js",
        "args_str",
        "func_js",
        "args_str",
        "default_res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "scope",
        "name",
        "$B",
        "name",
        "context",
        "name",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "$bind",
        "name",
        "scope",
        "scope",
        "name",
        "scope",
        "name",
        "node",
        "rank",
        "$get_docstring",
        "node",
        "$get_module",
        "node",
        "$Node",
        "local_ns",
        "indent",
        "local_ns",
        "indent",
        "local_ns",
        "$NodeJSCtx",
        "instance_decl",
        "js",
        "node",
        "instance_decl",
        "global_scope",
        "global_scope",
        "global_scope",
        "global_scope",
        "node",
        "indent",
        "node",
        "indent",
        "global_scope",
        "global_ns",
        "indent",
        "indent",
        "node",
        "$NodeJS",
        "js",
        "node",
        "$NodeJS",
        "node",
        "$NodeJS",
        "$Node",
        "$NodeJSCtx",
        "ret_obj",
        "local_ns",
        "node",
        "node",
        "ret_obj",
        "$Node",
        "$NodeJSCtx",
        "run_func",
        "node",
        "rank",
        "run_func",
        "rank",
        "node",
        "rank",
        "$NodeJS",
        "module_name",
        "$get_scope",
        "scope",
        "name_ref",
        "name_ref",
        "js",
        "pos",
        "arg_tree",
        "_tmp",
        "_tmp",
        "kw",
        "_tmp",
        "args",
        "_tmp",
        "js",
        "pos",
        "args",
        "args",
        "arg",
        "_r",
        "rpos",
        "arg",
        "_re",
        "js",
        "pos",
        "_r",
        "_r",
        "rpos",
        "kw",
        "_tmp",
        "_r",
        "rpos",
        "_tmp",
        "_tmp",
        "js",
        "pos",
        "_r",
        "js",
        "pos",
        "js",
        "pos",
        "$Node",
        "$NodeJSCtx",
        "cl_cons",
        "js",
        "rank",
        "node",
        "rank",
        "cl_cons",
        "rank",
        "$Node",
        "js",
        "name_ref",
        "$NodeJSCtx",
        "ds_node",
        "js",
        "node",
        "rank",
        "ds_node",
        "scope",
        "$Node",
        "$NodeJSCtx",
        "w_decl",
        "node",
        "rank",
        "$NodeJS",
        "$B",
        "context",
        "context",
        "$pos",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "elt",
        "intervals",
        "elt",
        "intervals",
        "$B",
        "context",
        "context",
        "$pos",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "token",
        "token",
        "context",
        "$get_scope",
        "token",
        "$loop_num",
        "$get_node",
        "context",
        "context",
        "node",
        "rank",
        "$get_scope",
        "node",
        "rank",
        "$NodeJS",
        "$get_module",
        "$B",
        "node",
        "node",
        "node",
        "$NodeJS",
        "js",
        "tok",
        "tok",
        "tok",
        "tok",
        "res",
        "tok",
        "$get_node",
        "$get_scope",
        "res",
        "line_info",
        "res",
        "$to_js",
        "res",
        "res",
        "res",
        "$B",
        "context",
        "context",
        "$get_node",
        "context",
        "context",
        "set_loop_context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "node",
        "rank",
        "rank",
        "node",
        "func_rank",
        "children",
        "$_SyntaxError",
        "context",
        "children",
        "func_rank",
        "func_rank",
        "children",
        "func_rank",
        "decorators",
        "children",
        "func_rank",
        "children",
        "func_rank",
        "decorators",
        "$B",
        "children",
        "func_rank",
        "obj",
        "obj",
        "obj",
        "$B",
        "$get_scope",
        "scope",
        "scope",
        "obj",
        "$get_module",
        "obj",
        "decorators",
        "elt",
        "i",
        "res",
        "i",
        "tail",
        "res",
        "obj",
        "obj",
        "tail",
        "$bind",
        "obj",
        "scope",
        "node",
        "func_rank",
        "$NodeJS",
        "res",
        "decorators",
        "decorator",
        "i",
        "res",
        "i",
        "$to_js",
        "decorator",
        "res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$IdCtx",
        "func",
        "name",
        "obj",
        "obj",
        "name",
        "obj",
        "obj",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "scope",
        "scope",
        "scope",
        "context",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "parent_block",
        "pb",
        "pb",
        "pb",
        "pb",
        "pb",
        "scope",
        "$get_module",
        "$loop_num",
        "$loop_num",
        "name",
        "name",
        "$mangle",
        "name",
        "err",
        "err",
        "err",
        "$IdCtx",
        "name",
        "name",
        "name",
        "$B",
        "name",
        "$bind",
        "name",
        "$bind",
        "name",
        "id_ctx",
        "scope",
        "scope",
        "name",
        "scope",
        "name",
        "node",
        "rank",
        "$get_docstring",
        "node",
        "rank",
        "node",
        "$B",
        "scope",
        "pblock",
        "pblock",
        "pblock",
        "pnode",
        "pnode",
        "pnode",
        "pnode",
        "pnode",
        "annotations",
        "func_name1",
        "func_args",
        "arg",
        "arg",
        "slot_list",
        "has_end_pos",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "slot_list",
        "arg",
        "slot_init",
        "arg",
        "arg",
        "arg",
        "defaults",
        "arg",
        "defs1",
        "arg",
        "$to_js",
        "arg",
        "$to_js",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "annotations",
        "arg",
        "arg",
        "slot_init",
        "slot_init",
        "flags",
        "flags",
        "flags",
        "flags",
        "global_scope",
        "global_scope",
        "global_scope",
        "global_scope",
        "global_scope",
        "indent",
        "js",
        "local_ns",
        "h",
        "h",
        "local_ns",
        "$Node",
        "new_node",
        "new_node",
        "node",
        "$NodeJSCtx",
        "new_node",
        "js",
        "nodes",
        "new_node",
        "$NodeJS",
        "node",
        "$NodeJS",
        "global_scope",
        "global_ns",
        "name",
        "$NodeJS",
        "$NodeJS",
        "enter_frame_nodes",
        "$NodeJS",
        "enter_frame_nodes",
        "node",
        "node",
        "nodes",
        "$NodeJS",
        "nodes",
        "$NodeJS",
        "local_ns",
        "js",
        "slot_list",
        "$Node",
        "$NodeJSCtx",
        "new_node",
        "js",
        "make_args_nodes",
        "new_node",
        "js",
        "make_args_nodes",
        "$NodeJS",
        "js",
        "has_end_pos",
        "only_positional",
        "nodes",
        "$NodeJS",
        "$Node",
        "$NodeJSCtx",
        "new_node",
        "js",
        "nodes",
        "new_node",
        "make_args_nodes",
        "item",
        "new_node",
        "item",
        "$Node",
        "$NodeJSCtx",
        "else_node",
        "nodes",
        "else_node",
        "$NodeJS",
        "pos_len",
        "else_node",
        "test_node",
        "test_node",
        "$NodeJS",
        "arg",
        "test_node",
        "$NodeJS",
        "arg",
        "arg",
        "test_node",
        "$NodeJS",
        "local_ns",
        "slot_init",
        "else_node",
        "$NodeJS",
        "pos_len",
        "pos_len",
        "slot_list",
        "pos_len",
        "else_node",
        "$NodeJS",
        "pos_len",
        "pos_len",
        "slot_list",
        "subelse_node",
        "$NodeJS",
        "else_node",
        "subelse_node",
        "arg",
        "subelse_node",
        "$NodeJS",
        "arg",
        "arg",
        "subelse_node",
        "$NodeJS",
        "local_ns",
        "slot_init",
        "subelse_node",
        "$NodeJS",
        "slot_list",
        "subelse_node",
        "$NodeJS",
        "nodes",
        "make_args_nodes",
        "make_args_nodes",
        "nodes",
        "make_args_nodes",
        "nodes",
        "nodes",
        "enter_frame_nodes",
        "nodes",
        "$NodeJS",
        "nodes",
        "$NodeJS",
        "nodes",
        "$NodeJS",
        "scope",
        "is_method",
        "scope",
        "scope",
        "class_block",
        "class_name",
        "nodes",
        "$NodeJS",
        "class_ref",
        "nodes",
        "$NodeJS",
        "$NodeJS",
        "suspension_node",
        "suspension_node",
        "node",
        "suspension_node",
        "node",
        "suspension_node",
        "node",
        "nodes",
        "suspension_node",
        "nodes",
        "i",
        "i",
        "node",
        "nodes",
        "i",
        "$Node",
        "only_positional",
        "$NodeJSCtx",
        "def_func_node",
        "def_func_node",
        "def_func_node",
        "node",
        "node",
        "last_instr",
        "js",
        "indent",
        "indent",
        "indent",
        "js",
        "js",
        "js",
        "node",
        "$NodeJS",
        "js",
        "node",
        "def_func_node",
        "node",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "name",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "name",
        "$B",
        "js",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "js",
        "__qualname__",
        "js",
        "__qualname__",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "js",
        "_default",
        "def_names",
        "_default",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "def_names",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "_default",
        "def_names",
        "_default",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "def_names",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "annotations",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "$get_module",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "root",
        "attr",
        "attr",
        "attr",
        "co_varnames",
        "$B",
        "attr",
        "attr",
        "attr",
        "free_vars",
        "attr",
        "indent",
        "js",
        "h",
        "h",
        "$get_module",
        "js",
        "h1",
        "h1",
        "node",
        "h1",
        "flags",
        "h1",
        "free_vars",
        "h1",
        "h1",
        "h1",
        "co_varnames",
        "h1",
        "h1",
        "co_varnames",
        "h",
        "indent",
        "js",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "js",
        "defs1",
        "node",
        "rank",
        "offset",
        "$MarkerNode",
        "CODE_MARKER",
        "name",
        "res",
        "name",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "res",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "node",
        "rank",
        "offset",
        "$NodeJS",
        "func_name1",
        "func_name1",
        "pos",
        "parent",
        "parent",
        "pos",
        "$B",
        "enter_frame_nodes",
        "pos",
        "$NodeJS",
        "parent",
        "pos",
        "parent",
        "pos",
        "try_node",
        "children",
        "child",
        "child",
        "child",
        "grand_child",
        "try_node",
        "grand_child",
        "try_node",
        "child",
        "parent",
        "pos",
        "parent",
        "$NodeJS",
        "except_node",
        "$NodeJS",
        "except_node",
        "$NodeJS",
        "except_node",
        "$NodeJS",
        "except_node",
        "$NodeJS",
        "parent",
        "except_node",
        "offset",
        "func_name",
        "func_name",
        "func_name",
        "func_name",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "elt",
        "$DelCtx",
        "context",
        "subdel",
        "elt",
        "res",
        "subdel",
        "context",
        "res",
        "expr",
        "$get_scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "expr",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "is_global",
        "expr",
        "is_global",
        "scope",
        "expr",
        "res",
        "expr",
        "elt",
        "res",
        "elt",
        "res",
        "expr",
        "js",
        "expr",
        "expr",
        "js",
        "$_SyntaxError",
        "$_SyntaxError",
        "expr",
        "expr",
        "$_SyntaxError",
        "expr",
        "$B",
        "context",
        "$pos",
        "context",
        "context",
        "context",
        "item",
        "item",
        "nb",
        "nb",
        "nb",
        "t",
        "i",
        "t",
        "t",
        "ixs",
        "i",
        "ixs",
        "packed",
        "i",
        "item",
        "i",
        "first",
        "i",
        "item",
        "item",
        "res",
        "item",
        "i",
        "res",
        "item",
        "i",
        "i",
        "first",
        "res",
        "res",
        "js",
        "res",
        "js",
        "packed",
        "t",
        "i",
        "packed",
        "i",
        "res",
        "t",
        "res",
        "t",
        "i",
        "res",
        "res",
        "js",
        "res",
        "js",
        "packed",
        "packed",
        "$to_js",
        "i",
        "i",
        "res",
        "i",
        "i",
        "res",
        "$to_js",
        "$to_js",
        "$to_js",
        "$to_js",
        "$to_js",
        "packed",
        "packed",
        "$to_js",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "context",
        "$pos",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "alias",
        "$mangle",
        "alias",
        "$bind",
        "alias",
        "node",
        "rank",
        "$NodeJS",
        "linenum_node",
        "node",
        "node",
        "linenum_node",
        "$B",
        "node",
        "last_child",
        "last_child",
        "last_child",
        "node",
        "$NodeJS",
        "elt",
        "res",
        "elt",
        "$B",
        "$get_module",
        "lnum",
        "$get_node",
        "lnum",
        "res",
        "$B",
        "context",
        "name",
        "with_commas",
        "name",
        "with_commas",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "with_commas",
        "arg",
        "res",
        "$to_js",
        "res",
        "arg",
        "res",
        "$to_js",
        "res",
        "res",
        "$get_scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "res",
        "scope",
        "res",
        "res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "value",
        "value",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$loop_num",
        "$get_scope",
        "$loop_num",
        "node",
        "rank",
        "node",
        "rank",
        "$get_scope",
        "target",
        "target",
        "scope",
        "node",
        "target",
        "scope",
        "target",
        "iterable",
        "iterable",
        "iterable",
        "iterable",
        "call",
        "call",
        "func_name",
        "call",
        "call",
        "$range",
        "call",
        "node",
        "$range",
        "scope",
        "new_node",
        "$Node",
        "$NodeJSCtx",
        "new_node",
        "local_ns",
        "num",
        "new_nodes",
        "pos",
        "new_node",
        "$get_scope",
        "_scope",
        "found",
        "_scope",
        "_scope",
        "_scope",
        "_scope",
        "range_is_builtin",
        "found",
        "found",
        "$Node",
        "test_range_node",
        "node",
        "range_is_builtin",
        "$NodeJSCtx",
        "test_range_node",
        "$NodeJSCtx",
        "test_range_node",
        "call",
        "new_nodes",
        "pos",
        "test_range_node",
        "target",
        "$range",
        "$range",
        "stop",
        "stop",
        "parseInt",
        "stop",
        "stop",
        "$B",
        "shortcut",
        "$B",
        "$NodeJS",
        "varname",
        "varname",
        "stop",
        "varname",
        "for_node",
        "$NodeJS",
        "idt",
        "varname",
        "$range",
        "$range",
        "$range",
        "shortcut",
        "num",
        "stop",
        "h",
        "num",
        "start",
        "h",
        "num",
        "num",
        "num",
        "h",
        "$Node",
        "$NodeJSCtx",
        "for_node",
        "js",
        "for_node",
        "$NodeJS",
        "num",
        "num",
        "num",
        "for_node",
        "$NodeJS",
        "num",
        "num",
        "num",
        "for_node",
        "$NodeJS",
        "idt",
        "num",
        "for_node",
        "$NodeJS",
        "num",
        "num",
        "for_node",
        "$NodeJS",
        "num",
        "num",
        "children",
        "child",
        "for_node",
        "child",
        "$B",
        "node",
        "node",
        "for_node",
        "$NodeJS",
        "js",
        "scope",
        "node",
        "pnode",
        "pnode",
        "in_loop",
        "pnode",
        "pnode",
        "scope",
        "in_loop",
        "$Node",
        "func_node",
        "js",
        "num",
        "js",
        "num",
        "js",
        "$NodeJSCtx",
        "func_node",
        "js",
        "test_range_node",
        "func_node",
        "func_node",
        "for_node",
        "func_node",
        "$NodeJS",
        "num",
        "test_range_node",
        "$NodeJS",
        "num",
        "num",
        "test_range_node",
        "$NodeJS",
        "num",
        "num",
        "test_range_node",
        "for_node",
        "range_is_builtin",
        "node",
        "rank",
        "node",
        "rank",
        "new_nodes",
        "k",
        "new_nodes",
        "k",
        "child",
        "node",
        "rank",
        "k",
        "child",
        "node",
        "rank",
        "node",
        "node",
        "rank",
        "node",
        "node",
        "$NodeJS",
        "new_nodes",
        "pos",
        "else_node",
        "new_nodes",
        "i",
        "i",
        "node",
        "rank",
        "new_nodes",
        "i",
        "new_nodes",
        "pos",
        "$Node",
        "new_node",
        "$get_node",
        "iterable",
        "num",
        "iterable_name",
        "it_js",
        "num",
        "iterable_name",
        "$NodeJSCtx",
        "new_node",
        "js",
        "new_nodes",
        "pos",
        "new_node",
        "new_nodes",
        "pos",
        "$NodeJS",
        "local_ns",
        "num",
        "$Node",
        "js",
        "local_ns",
        "num",
        "js",
        "$NodeJSCtx",
        "while_node",
        "js",
        "while_node",
        "num",
        "while_node",
        "scope",
        "while_node",
        "num",
        "new_nodes",
        "pos",
        "while_node",
        "node",
        "rank",
        "new_nodes",
        "i",
        "i",
        "else_node",
        "new_nodes",
        "i",
        "new_nodes",
        "i",
        "i",
        "node",
        "rank",
        "new_nodes",
        "i",
        "offset",
        "new_nodes",
        "$NodeJS",
        "try_node",
        "node",
        "while_node",
        "try_node",
        "$Node",
        "iter_node",
        "$NodeCtx",
        "iter_node",
        "$ExprCtx",
        "context",
        "target_is_1_tuple",
        "$ListOrTupleCtx",
        "target_expr",
        "t",
        "t",
        "target",
        "target_expr",
        "target",
        "$AssignCtx",
        "target_expr",
        "assign",
        "$JSCode",
        "num",
        "try_node",
        "iter_node",
        "while_node",
        "$NodeJS",
        "children",
        "child",
        "while_node",
        "child",
        "$B",
        "node",
        "node",
        "while_node",
        "$NodeJS",
        "js",
        "node",
        "node",
        "rank",
        "$get_scope",
        "target",
        "target",
        "scope",
        "node",
        "iterable",
        "num",
        "num",
        "num",
        "num",
        "num",
        "iterable_name",
        "it_js",
        "new_nodes",
        "$NodeJS",
        "js",
        "new_nodes",
        "$NodeJS",
        "type_name",
        "iterable_name",
        "js",
        "iterable_name",
        "type_name",
        "iterable_name",
        "new_nodes",
        "$NodeJS",
        "js",
        "new_nodes",
        "$NodeJS",
        "running_name",
        "new_nodes",
        "$NodeJS",
        "anext_name",
        "type_name",
        "$NodeJS",
        "running_name",
        "new_nodes",
        "while_node",
        "$NodeJS",
        "while_node",
        "try_node",
        "target",
        "target",
        "anext_name",
        "iterable_name",
        "try_node",
        "$NodeJS",
        "js",
        "$Node",
        "$NodeCtx",
        "new_node",
        "$ExprCtx",
        "ctx",
        "expr",
        "target",
        "target",
        "expr",
        "$AssignCtx",
        "expr",
        "$RawJSCtx",
        "assign",
        "anext_name",
        "iterable_name",
        "try_node",
        "new_node",
        "$NodeJS",
        "while_node",
        "catch_node",
        "running_name",
        "catch_node",
        "$NodeJS",
        "js",
        "node",
        "child",
        "while_node",
        "child",
        "node",
        "rank",
        "new_nodes",
        "i",
        "i",
        "node",
        "rank",
        "new_nodes",
        "i",
        "node",
        "$to_js",
        "iterable",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "name",
        "name",
        "name",
        "$get_scope",
        "name",
        "name",
        "name",
        "name",
        "$bind",
        "name",
        "scope",
        "$get_scope",
        "$get_module",
        "$get_node",
        "indent",
        "mod",
        "$B",
        "$B",
        "frame",
        "frame",
        "mod",
        "frame",
        "i",
        "mod_elts",
        "i",
        "mod_elts",
        "i",
        "_mod",
        "_mod",
        "$package",
        "$B",
        "mod",
        "$package",
        "$B",
        "mod",
        "packages",
        "$package",
        "$package",
        "$B",
        "$package",
        "packages",
        "$package",
        "$package",
        "_mod",
        "_mod",
        "_mod",
        "packages",
        "_mod",
        "packages",
        "res",
        "pos",
        "res",
        "pos",
        "mod_name",
        "i",
        "len",
        "i",
        "i",
        "names",
        "i",
        "names",
        "i",
        "res",
        "pos",
        "names",
        "attr",
        "res",
        "pos",
        "sep",
        "attr",
        "attr",
        "sep",
        "res",
        "pos",
        "scope",
        "res",
        "pos",
        "head",
        "name",
        "name",
        "alias",
        "name",
        "name",
        "name",
        "name",
        "res",
        "pos",
        "head",
        "alias",
        "mod_name",
        "name",
        "res",
        "pos",
        "head",
        "res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "name",
        "name",
        "context",
        "context",
        "context",
        "name",
        "context",
        "name",
        "$get_node",
        "node",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "$bind",
        "name",
        "node",
        "context",
        "context",
        "ctx",
        "ctx",
        "ctx",
        "name",
        "ctx",
        "ctx",
        "$to_js",
        "$B",
        "context",
        "op",
        "op",
        "context",
        "$get_node",
        "context",
        "op",
        "context",
        "op",
        "context",
        "context",
        "name",
        "name",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "$bind",
        "name",
        "ctx",
        "ctx",
        "ctx",
        "name",
        "ctx",
        "ctx",
        "op",
        "ctx",
        "name",
        "ctx",
        "name",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "$get_module",
        "name",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "name",
        "name",
        "$B",
        "context",
        "value",
        "$mangle",
        "value",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "clone",
        "scope",
        "scope",
        "scope",
        "scope",
        "$B",
        "scope",
        "context",
        "ctx",
        "ctx",
        "$bind",
        "value",
        "scope",
        "ctx",
        "ctx",
        "value",
        "ctx",
        "value",
        "ctx",
        "value",
        "ctx",
        "ctx",
        "ctx",
        "value",
        "ctx",
        "value",
        "ctx",
        "ctx",
        "context",
        "context",
        "context",
        "$bind",
        "value",
        "scope",
        "scope",
        "scope",
        "_ctx",
        "_ctx",
        "_ctx",
        "_ctx",
        "_ctx",
        "context",
        "context",
        "context",
        "scope",
        "scope",
        "value",
        "scope",
        "value",
        "scope",
        "nb",
        "scope",
        "scope",
        "$get_module",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "scope",
        "$get_node",
        "found",
        "node",
        "node",
        "pnode",
        "pnode",
        "$test",
        "pnode",
        "pnode",
        "i",
        "pnode",
        "i",
        "pnode",
        "i",
        "child",
        "node",
        "child",
        "child",
        "$test",
        "child",
        "child",
        "pnode",
        "scope",
        "node",
        "pnode",
        "found",
        "scope",
        "$get_node",
        "found",
        "node",
        "nb",
        "node",
        "pnode",
        "pnode",
        "pnode",
        "i",
        "pnode",
        "i",
        "pnode",
        "i",
        "child",
        "node",
        "child",
        "child",
        "found",
        "child",
        "ix",
        "i",
        "found",
        "ix",
        "j",
        "pnode",
        "j",
        "child",
        "pnode",
        "j",
        "child",
        "child",
        "node",
        "found",
        "pnode",
        "scope",
        "node",
        "pnode",
        "found",
        "arg",
        "val",
        "$get_node",
        "this_node",
        "val",
        "is_local",
        "bound_before",
        "bound_before",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "$get_scope",
        "innermost",
        "$test",
        "$test",
        "gs",
        "gs",
        "gs",
        "gs",
        "$B",
        "gs",
        "gs",
        "gs",
        "search_ids",
        "gs",
        "search_ids",
        "search_ids",
        "innermost",
        "innermost",
        "val",
        "search_ids",
        "gs",
        "innermost",
        "gs",
        "$test",
        "search_ids",
        "$test",
        "bscope",
        "bscope",
        "bscope",
        "val",
        "innermost",
        "val",
        "gs",
        "scope",
        "scope",
        "val",
        "$test",
        "scope",
        "gs",
        "$test",
        "gs",
        "global_ns",
        "val",
        "$test",
        "global_ns",
        "val",
        "val",
        "search_ids",
        "$test",
        "scope",
        "innermost",
        "scope",
        "innermost",
        "bound_before",
        "found",
        "scope",
        "innermost",
        "bound_before",
        "bound_before",
        "val",
        "found",
        "scope",
        "scope",
        "scope",
        "scope",
        "val",
        "found",
        "scope",
        "scope",
        "val",
        "this_node",
        "val",
        "scope",
        "scope",
        "scope",
        "found",
        "scope",
        "found",
        "scope",
        "$test",
        "val",
        "scope",
        "scope",
        "scope",
        "val",
        "innermost",
        "scope",
        "val",
        "found",
        "scope",
        "scope",
        "scope",
        "scope",
        "found",
        "$test",
        "found",
        "found",
        "item",
        "item",
        "found",
        "innermost",
        "found",
        "found",
        "found",
        "found",
        "innermost",
        "val",
        "this_node",
        "innermost",
        "locs",
        "val",
        "innermost",
        "innermost",
        "innermost",
        "innermost",
        "innermost",
        "val",
        "nonlocs",
        "nonlocs",
        "val",
        "val",
        "err",
        "val",
        "innermost",
        "err",
        "found",
        "found",
        "found",
        "found",
        "found",
        "bound_before",
        "bound_before",
        "val",
        "found",
        "val",
        "res",
        "ns0",
        "found",
        "val",
        "res",
        "ns1",
        "res",
        "val",
        "ns0",
        "val",
        "res",
        "ns0",
        "val",
        "res",
        "ns1",
        "val",
        "found",
        "scope",
        "val",
        "scope",
        "scope",
        "$test",
        "scope",
        "scope",
        "scope",
        "gs",
        "val",
        "global_ns",
        "val",
        "val",
        "val",
        "val",
        "val",
        "$test",
        "val",
        "scope_ns",
        "val",
        "scope",
        "innermost",
        "val",
        "val",
        "$test",
        "scope",
        "scope",
        "val",
        "scope_ns",
        "val",
        "$test",
        "val",
        "val",
        "scope_ns",
        "val",
        "scope",
        "innermost",
        "$test",
        "scope",
        "scope",
        "scope",
        "val",
        "val",
        "global_ns",
        "val",
        "scope",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "val",
        "scope",
        "sc",
        "scope",
        "up",
        "sc",
        "sc",
        "up",
        "val",
        "val",
        "scope",
        "val",
        "val",
        "scope_ns",
        "val",
        "val",
        "scope_ns",
        "val",
        "val",
        "$to_js",
        "val",
        "search_ids",
        "$B",
        "context",
        "value",
        "value",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "item",
        "item",
        "item",
        "item",
        "name",
        "parts",
        "bound",
        "parts",
        "bound",
        "item",
        "$bind",
        "bound",
        "scope",
        "$get_scope",
        "$get_module",
        "item",
        "item",
        "item",
        "item",
        "mod_name",
        "item",
        "scope",
        "item",
        "i",
        "mod_elts",
        "i",
        "mod_elts",
        "i",
        "mod_name",
        "aliases",
        "localns",
        "res",
        "js",
        "res",
        "$B",
        "context",
        "name",
        "context",
        "name",
        "name",
        "context",
        "context",
        "$B",
        "context",
        "value",
        "value",
        "context",
        "context",
        "context",
        "parseInt",
        "value",
        "value",
        "v",
        "$B",
        "v",
        "$B",
        "v",
        "value",
        "value",
        "$B",
        "js",
        "js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "ctx",
        "ctx",
        "value",
        "ctx",
        "value",
        "ctx",
        "value",
        "$_SyntaxError",
        "context",
        "key",
        "key",
        "key",
        "key",
        "res",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$pos",
        "$get_node",
        "$get_module",
        "$get_src",
        "context",
        "src",
        "src",
        "body",
        "body",
        "body",
        "body",
        "$get_scope",
        "$B",
        "$B",
        "rand",
        "func_name",
        "args",
        "py",
        "body",
        "rand",
        "$B",
        "py",
        "module_name",
        "lambda_name",
        "scope",
        "node",
        "root",
        "js",
        "lambda_name",
        "js",
        "func_name",
        "$B",
        "lambda_name",
        "$B",
        "lambda_name",
        "$B",
        "lambda_name",
        "js",
        "$B",
        "context",
        "real",
        "$pos",
        "real",
        "context",
        "context",
        "context",
        "$get_module",
        "$get_scope",
        "scope",
        "src",
        "scope",
        "comment",
        "comment",
        "comment",
        "src",
        "src",
        "start",
        "len",
        "src",
        "start",
        "len",
        "src",
        "scope",
        "item",
        "item",
        "$bind",
        "item",
        "scope",
        "item",
        "item",
        "item",
        "$bind",
        "item",
        "scope",
        "item",
        "item",
        "item",
        "item",
        "$bind",
        "item",
        "scope",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "scope",
        "i",
        "i",
        "i",
        "t",
        "t",
        "t",
        "t",
        "t",
        "t",
        "ixs",
        "i",
        "ixs",
        "packed",
        "i",
        "i",
        "packed",
        "i",
        "res",
        "i",
        "res",
        "i",
        "i",
        "res",
        "res",
        "js",
        "res",
        "js",
        "$get_scope",
        "scope",
        "$get_module",
        "root",
        "packed",
        "packed",
        "$to_js",
        "root",
        "i",
        "i",
        "i",
        "i",
        "src",
        "start",
        "end",
        "comments",
        "comment",
        "comment",
        "start",
        "comment",
        "end",
        "comment",
        "start",
        "txt",
        "txt",
        "pos",
        "comment",
        "txt",
        "pos",
        "comment",
        "txt",
        "txt",
        "items",
        "txt",
        "txt",
        "lines",
        "txt",
        "txt",
        "txt",
        "txt",
        "txt",
        "txt",
        "txt",
        "txt",
        "qesc",
        "res2",
        "txt",
        "res1",
        "res2",
        "$get_node",
        "$B",
        "items",
        "lc",
        "lc",
        "ix",
        "line_num",
        "module_name",
        "$B",
        "py",
        "line_info",
        "module_name",
        "listcomp_name",
        "scope",
        "$pos",
        "save_pos",
        "root",
        "root",
        "$B",
        "listcomp_name",
        "$B",
        "listcomp_name",
        "js",
        "ix",
        "ix",
        "js",
        "listcomp_name",
        "js",
        "js",
        "js",
        "js",
        "$B",
        "module_name",
        "scope",
        "items",
        "line_num",
        "$B",
        "module_name",
        "scope",
        "items",
        "line_num",
        "$B",
        "module_name",
        "scope",
        "items",
        "line_num",
        "packed",
        "packed",
        "$to_js",
        "$B",
        "node",
        "node",
        "node",
        "tree_node",
        "tree_node",
        "tree_node",
        "ntype",
        "scope",
        "tree_node",
        "_break_flag",
        "_break_flag",
        "tree_node",
        "tree_node",
        "scope",
        "scope",
        "tree_node",
        "tree_node",
        "clone",
        "scope",
        "scope",
        "$Node",
        "$NodeCtx",
        "new_node",
        "ctx",
        "new_node",
        "node",
        "node",
        "new_node",
        "is_not_def",
        "js",
        "js",
        "right",
        "$RawJSCtx",
        "left",
        "left",
        "is_not_def",
        "left",
        "left",
        "$to_js",
        "is_not_def",
        "left",
        "node",
        "$to_js",
        "$to_js",
        "$B",
        "js",
        "$Node",
        "$NodeJSCtx",
        "node",
        "js",
        "node",
        "$B",
        "node",
        "js",
        "node",
        "node",
        "js",
        "js",
        "js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "$_SyntaxError",
        "context",
        "name",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "name",
        "$pos",
        "name",
        "node",
        "rank",
        "pscope",
        "$_SyntaxError",
        "context",
        "$B",
        "pscope",
        "pscope",
        "name",
        "pscope",
        "name",
        "name",
        "pscope",
        "pscope",
        "name",
        "name",
        "context",
        "$pos",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "op",
        "op",
        "context",
        "context",
        "$get_scope",
        "context",
        "context",
        "context",
        "context",
        "context",
        "binding",
        "binding",
        "context",
        "context",
        "comps",
        "comps",
        "t0",
        "t1",
        "t1",
        "t0",
        "t0",
        "t1",
        "js0",
        "js1",
        "method",
        "js0",
        "js0",
        "js1",
        "method",
        "t0",
        "js0",
        "js1",
        "js0",
        "js0",
        "js1",
        "method",
        "t0",
        "js0",
        "js0",
        "js0",
        "js1",
        "js0",
        "js1",
        "method",
        "op0",
        "op1",
        "op0",
        "op1",
        "res",
        "$to_js",
        "$to_js",
        "op",
        "method",
        "op",
        "method",
        "op",
        "method",
        "x",
        "parseInt",
        "x",
        "x",
        "v",
        "op",
        "v",
        "x",
        "method",
        "op",
        "x",
        "op",
        "x",
        "method",
        "$get_scope",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "has_float_lit",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "is_simple",
        "elt",
        "elt",
        "elt",
        "elt",
        "vars",
        "_var",
        "vars",
        "_var",
        "elt",
        "elt",
        "i",
        "elt",
        "i",
        "is_simple",
        "elt",
        "i",
        "ns",
        "v",
        "v",
        "t",
        "v",
        "v",
        "ns",
        "v",
        "t",
        "ns",
        "v",
        "t",
        "is_simple",
        "vars",
        "has_float_lit",
        "vars",
        "scope",
        "get_type",
        "ns",
        "v0",
        "get_type",
        "ns",
        "v1",
        "t0",
        "t1",
        "t0",
        "t1",
        "t0",
        "v0",
        "v1",
        "t0",
        "t1",
        "t0",
        "t1",
        "v0",
        "v1",
        "v0",
        "v1",
        "vars",
        "_var",
        "tests",
        "_var",
        "tests1",
        "_var",
        "tests",
        "res",
        "tests1",
        "res",
        "res",
        "res",
        "res",
        "t0",
        "t1",
        "t0",
        "t1",
        "res",
        "$operators",
        "t0",
        "t1",
        "res",
        "comps",
        "$operators",
        "e0",
        "e1",
        "$operators",
        "e0",
        "e1",
        "comps",
        "$operators",
        "$operators",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "op",
        "sjs",
        "sjs",
        "op",
        "sjs",
        "sjs",
        "op",
        "sjs",
        "sjs",
        "op",
        "sjs",
        "sjs",
        "sjs",
        "op",
        "sjs",
        "$B",
        "context",
        "context",
        "context",
        "i",
        "context",
        "i",
        "context",
        "i",
        "child",
        "child",
        "child",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "exc_js",
        "$B",
        "context",
        "js",
        "context",
        "context",
        "context",
        "js",
        "js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "$_SyntaxError",
        "context",
        "$get_node",
        "node",
        "node",
        "node",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "node",
        "node",
        "$IdCtx",
        "$ExprCtx",
        "scope",
        "$to_js",
        "$to_js",
        "indent",
        "indent",
        "scope",
        "js",
        "js",
        "scope",
        "indent",
        "js",
        "$B",
        "context",
        "token",
        "token",
        "context",
        "context",
        "context",
        "token",
        "context",
        "node",
        "rank",
        "pnode",
        "rank",
        "pnode",
        "rank",
        "node",
        "pnode",
        "rank",
        "pctx",
        "pctx",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "$get_node",
        "elt",
        "node",
        "rank",
        "$get_scope",
        "scope",
        "node",
        "$NodeJS",
        "scope",
        "node",
        "node",
        "last_child",
        "node",
        "$NodeJS",
        "$get_scope",
        "scope",
        "res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "i",
        "i",
        "i",
        "i",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "value",
        "context",
        "value",
        "context",
        "context",
        "$get_scope",
        "parsed_fstring",
        "i",
        "parsed_fstring",
        "i",
        "parsed_fstring",
        "i",
        "parsed_fstring",
        "i",
        "expr",
        "pos",
        "expr",
        "expr",
        "pos",
        "car",
        "br_stack",
        "parts",
        "expr",
        "pos",
        "expr",
        "pos",
        "car",
        "br_stack",
        "car",
        "car",
        "br_stack",
        "pos",
        "expr",
        "parts",
        "$B",
        "expr",
        "scope",
        "scope",
        "scope",
        "expr_node",
        "$pos",
        "save_pos",
        "j",
        "expr_node",
        "j",
        "expr_node",
        "j",
        "node",
        "node",
        "node",
        "k",
        "node",
        "k",
        "node",
        "k",
        "node",
        "k",
        "expr1",
        "expr1",
        "expr1",
        "expr1",
        "expr1",
        "parsed_fstring",
        "i",
        "expr1",
        "expr1",
        "expr1",
        "expr1",
        "expr1",
        "expr1",
        "parts",
        "fmt",
        "$B",
        "fmt",
        "parsed_fmt",
        "fmt",
        "fstring",
        "parsed_fmt",
        "fmt",
        "fmt",
        "fmt",
        "expr1",
        "elts",
        "res1",
        "parsed_fstring",
        "i",
        "expr1",
        "expr1",
        "elts",
        "expr1",
        "parsed_fstring",
        "i",
        "re",
        "elts",
        "elt",
        "elts",
        "value",
        "value",
        "value",
        "value",
        "value",
        "mo",
        "mo",
        "value",
        "i",
        "i",
        "i",
        "js",
        "i",
        "value",
        "is_fstring",
        "is_bytes",
        "value",
        "is_bytes",
        "is_bytes",
        "res",
        "is_bytes",
        "is_bytes",
        "is_fstring",
        "res",
        "fstring",
        "value",
        "res",
        "prepare",
        "value",
        "res",
        "prepare",
        "value",
        "i",
        "res",
        "is_bytes",
        "res",
        "res",
        "res",
        "res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$get_node",
        "val",
        "val",
        "val",
        "shortcut",
        "x",
        "expr",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "subs",
        "subs",
        "expr",
        "res",
        "val",
        "res",
        "elt",
        "elt",
        "res1",
        "res1",
        "elt",
        "res",
        "res1",
        "shortcut",
        "res",
        "res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$to_js",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "res",
        "res",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "node",
        "rank",
        "node",
        "rank",
        "$_SyntaxError",
        "context",
        "node",
        "rank",
        "next_ctx",
        "$_SyntaxError",
        "context",
        "$get_scope",
        "create_temp_name",
        "create_temp_name",
        "failed_name",
        "node",
        "$NodeJSCtx",
        "node",
        "js",
        "node",
        "node",
        "$NodeJS",
        "error_name",
        "catch_node",
        "node",
        "rank",
        "catch_node",
        "catch_node",
        "$NodeJS",
        "error_name",
        "catch_node",
        "$NodeJS",
        "catch_node",
        "$NodeJS",
        "failed_name",
        "rank",
        "pos",
        "node",
        "node",
        "pos",
        "ctx",
        "ctx",
        "has_else",
        "$_SyntaxError",
        "context",
        "has_finally",
        "$_SyntaxError",
        "context",
        "ctx",
        "error_name",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "node",
        "pos",
        "$NodeJS",
        "alias",
        "error_name",
        "catch_node",
        "catch_node",
        "node",
        "pos",
        "ctx",
        "has_default",
        "$_SyntaxError",
        "context",
        "has_default",
        "node",
        "pos",
        "ctx",
        "ctx",
        "has_finally",
        "node",
        "pos",
        "pos",
        "ctx",
        "ctx",
        "has_else",
        "$_SyntaxError",
        "context",
        "has_finally",
        "$_SyntaxError",
        "context",
        "has_else",
        "node",
        "pos",
        "node",
        "pos",
        "has_default",
        "$Node",
        "$NodeCtx",
        "new_node",
        "catch_node",
        "catch_node",
        "new_node",
        "$SingleKwCtx",
        "ctx",
        "new_node",
        "$NodeJS",
        "error_name",
        "has_else",
        "$Node",
        "else_node",
        "scope",
        "$NodeJSCtx",
        "else_node",
        "failed_name",
        "else_body",
        "elt",
        "else_node",
        "elt",
        "has_finally",
        "finally_node",
        "else_node",
        "node",
        "pos",
        "else_node",
        "pos",
        "$loop_num",
        "$B",
        "context",
        "op",
        "op",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "context",
        "context",
        "context",
        "$get_scope",
        "ctx",
        "ctx",
        "ids",
        "ctx",
        "ctx",
        "ctx",
        "expr",
        "expr",
        "expr",
        "ids",
        "expr",
        "ids",
        "i",
        "len",
        "i",
        "ids",
        "i",
        "$bind",
        "id_ctx",
        "id_ctx",
        "id_ctx",
        "node",
        "rank",
        "node",
        "$Node",
        "$NodeCtx",
        "new_node",
        "$WithCtx",
        "ctx",
        "item",
        "with_ctx",
        "with_ctx",
        "item",
        "with_ctx",
        "suite",
        "elt",
        "new_node",
        "elt",
        "node",
        "new_node",
        "$Node",
        "$NodeCtx",
        "nw",
        "nw",
        "node",
        "nw",
        "node",
        "nw",
        "node",
        "$WithCtx",
        "ctx",
        "wc",
        "wc",
        "node",
        "elt",
        "nw",
        "elt",
        "node",
        "nw",
        "node",
        "rank",
        "$NodeJS",
        "top_try_node",
        "node",
        "rank",
        "top_try_node",
        "$loop_num",
        "top_try_node",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "$_SyntaxError",
        "context",
        "$_SyntaxError",
        "context",
        "ids",
        "i",
        "i",
        "ids",
        "i",
        "alias",
        "i",
        "ids",
        "i",
        "node",
        "node",
        "$Node",
        "try_node",
        "$NodeJSCtx",
        "try_node",
        "top_try_node",
        "try_node",
        "try_node",
        "$NodeJS",
        "alias",
        "block",
        "elt",
        "try_node",
        "elt",
        "try_node",
        "$NodeJS",
        "$Node",
        "catch_node",
        "$NodeJSCtx",
        "catch_node",
        "node",
        "js",
        "js",
        "catch_node",
        "$NodeJS",
        "js",
        "top_try_node",
        "catch_node",
        "$Node",
        "$NodeJSCtx",
        "finally_node",
        "finally_node",
        "finally_node",
        "finally_node",
        "finally_node",
        "finally_node",
        "js",
        "js",
        "js",
        "js",
        "finally_node",
        "$NodeJS",
        "js",
        "node",
        "rank",
        "finally_node",
        "node",
        "rank",
        "$get_scope",
        "$loop_num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "num",
        "expr",
        "new_nodes",
        "$NodeJS",
        "js",
        "new_nodes",
        "$NodeJS",
        "cmtype_name",
        "new_nodes",
        "$NodeJS",
        "cmtype_name",
        "new_nodes",
        "$NodeJS",
        "cmenter_name",
        "cmtype_name",
        "new_nodes",
        "$NodeJS",
        "js",
        "alias",
        "alias",
        "alias",
        "cmenter_name",
        "new_nodes",
        "$NodeJS",
        "js",
        "$Node",
        "$NodeCtx",
        "new_node",
        "$ExprCtx",
        "ctx",
        "expr",
        "alias",
        "alias",
        "expr",
        "$AssignCtx",
        "expr",
        "$RawJSCtx",
        "assign",
        "cmenter_name",
        "new_nodes",
        "new_node",
        "new_nodes",
        "$NodeJS",
        "cmenter_name",
        "$NodeJS",
        "node",
        "child",
        "try_node",
        "child",
        "new_nodes",
        "try_node",
        "$NodeJS",
        "new_nodes",
        "catch_node",
        "catch_node",
        "$NodeJS",
        "catch_node",
        "$NodeJS",
        "err_name",
        "$NodeJS",
        "err_name",
        "err_name",
        "err_name",
        "catch_node",
        "if_node",
        "if_node",
        "$NodeJS",
        "$NodeJS",
        "new_nodes",
        "else_node",
        "else_node",
        "$NodeJS",
        "node",
        "rank",
        "new_nodes",
        "i",
        "i",
        "node",
        "rank",
        "new_nodes",
        "i",
        "node",
        "$get_node",
        "indent",
        "num",
        "head",
        "num",
        "head",
        "num",
        "num",
        "cm_name",
        "h",
        "cme_name",
        "cm_name",
        "h",
        "val_name",
        "cm_name",
        "h",
        "exc_name",
        "$B",
        "context",
        "is_await",
        "context",
        "context",
        "context",
        "parent",
        "parent",
        "in_lambda",
        "parent",
        "parent",
        "in_lambda",
        "context",
        "$get_node",
        "context",
        "$_SyntaxError",
        "context",
        "$get_scope",
        "in_lambda",
        "scope",
        "in_func",
        "scope",
        "scope",
        "parent",
        "parent",
        "parent_block",
        "in_func",
        "parent",
        "func_scope",
        "parent",
        "in_func",
        "$_SyntaxError",
        "context",
        "in_lambda",
        "func_scope",
        "is_await",
        "func_scope",
        "node",
        "rank",
        "$NodeJS",
        "new_node",
        "new_node",
        "node",
        "new_node",
        "new_node",
        "node",
        "node",
        "rank",
        "new_node",
        "node",
        "parent",
        "parent",
        "node",
        "rank",
        "$NodeJS",
        "parent",
        "parent",
        "$to_js",
        "$to_js",
        "$B",
        "node",
        "rank",
        "node",
        "i",
        "node",
        "i",
        "$add_profile",
        "node",
        "i",
        "i",
        "node",
        "pnode",
        "pnode",
        "pnode",
        "pnode",
        "node",
        "flag",
        "elt",
        "elt",
        "flag",
        "elt",
        "flag",
        "elt",
        "flag",
        "flag",
        "$Node",
        "$NodeJSCtx",
        "new_node",
        "mod_id",
        "node",
        "node",
        "rank",
        "new_node",
        "offset",
        "i",
        "node",
        "i",
        "$add_profile",
        "node",
        "i",
        "i",
        "offset",
        "$B",
        "node",
        "rank",
        "line_info",
        "node",
        "i",
        "node",
        "i",
        "$add_line_num",
        "node",
        "i",
        "i",
        "line_info",
        "node",
        "node",
        "pnode",
        "pnode",
        "pnode",
        "pnode",
        "node",
        "line_num",
        "flag",
        "elt",
        "elt",
        "flag",
        "elt",
        "flag",
        "elt",
        "flag",
        "flag",
        "_line_info",
        "line_info",
        "line_num",
        "mod_id",
        "line_info",
        "_line_info",
        "$Node",
        "new_node",
        "$NodeJSCtx",
        "new_node",
        "js",
        "node",
        "rank",
        "new_node",
        "offset",
        "i",
        "node",
        "i",
        "$add_line_num",
        "node",
        "i",
        "i",
        "line_info",
        "offset",
        "$B",
        "$add_line_num",
        "$B",
        "name",
        "scope",
        "context",
        "scope",
        "scope",
        "name",
        "scope",
        "scope",
        "name",
        "$get_module",
        "context",
        "name",
        "context",
        "$get_node",
        "context",
        "node",
        "node",
        "node",
        "name",
        "scope",
        "scope",
        "scope",
        "name",
        "scope",
        "name",
        "ctx",
        "obj",
        "ctx",
        "flag",
        "attr",
        "obj",
        "ctx",
        "attr",
        "obj",
        "attr",
        "flag",
        "flag",
        "ctx",
        "ctx",
        "ctx",
        "$B",
        "context",
        "context",
        "context",
        "previous",
        "previous",
        "$_SyntaxError",
        "context",
        "previous",
        "$B",
        "node",
        "node",
        "node",
        "firstchild",
        "firstchild",
        "firstchild",
        "firstchild",
        "expr",
        "expr",
        "doc_string",
        "firstchild",
        "doc_string",
        "$B",
        "context",
        "flag",
        "context",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "tree_node",
        "tree_node",
        "tree_node",
        "ntype",
        "tree_node",
        "scope",
        "ntype",
        "scope",
        "ntype",
        "scope",
        "tree_node",
        "tree_node",
        "tree_node",
        "tree_node",
        "scope",
        "scope",
        "$B",
        "context",
        "$get_node",
        "context",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "line_num",
        "ctx_node",
        "line_num",
        "$B",
        "context",
        "context",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "ctx_node",
        "tree_node",
        "tree_node",
        "tree_node",
        "tree_node",
        "tree_node",
        "tree_node",
        "scope",
        "scope",
        "$B",
        "context",
        "$get_node",
        "context",
        "node",
        "node",
        "node",
        "node",
        "$B",
        "context",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "$B",
        "tree_element",
        "tree_element",
        "tree_element",
        "tree_element",
        "$B",
        "tree",
        "sep",
        "sep",
        "sep",
        "tree",
        "$to_js_map",
        "sep",
        "$B",
        "name",
        "context",
        "name",
        "name",
        "name",
        "$get_scope",
        "context",
        "scope",
        "name",
        "scope",
        "scope",
        "class_name",
        "class_name",
        "class_name",
        "class_name",
        "name",
        "scope",
        "scope",
        "scope",
        "$get_scope",
        "scope",
        "name",
        "name",
        "$B",
        "context",
        "token",
        "value",
        "context",
        "context",
        "context",
        "context",
        "assign",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "packed",
        "context",
        "is_await",
        "assign",
        "context",
        "context",
        "assign",
        "token",
        "$AwaitCtx",
        "context",
        "$IdCtx",
        "$ExprCtx",
        "context",
        "commas",
        "value",
        "$StringCtx",
        "$ExprCtx",
        "context",
        "commas",
        "value",
        "$StringCtx",
        "$ExprCtx",
        "context",
        "commas",
        "value",
        "$IntCtx",
        "$ExprCtx",
        "context",
        "commas",
        "value",
        "$FloatCtx",
        "$ExprCtx",
        "context",
        "commas",
        "value",
        "$ImaginaryCtx",
        "$ExprCtx",
        "context",
        "commas",
        "value",
        "$ListOrTupleCtx",
        "$ExprCtx",
        "context",
        "commas",
        "$ListOrTupleCtx",
        "$ExprCtx",
        "context",
        "commas",
        "$DictOrSetCtx",
        "$ExprCtx",
        "context",
        "commas",
        "$EllipsisCtx",
        "$ExprCtx",
        "context",
        "commas",
        "context",
        "context",
        "context",
        "context",
        "$NotCtx",
        "$ExprCtx",
        "context",
        "commas",
        "$LambdaCtx",
        "$ExprCtx",
        "context",
        "commas",
        "tg",
        "context",
        "context",
        "context",
        "context",
        "$PackedCtx",
        "$ExprCtx",
        "context",
        "commas",
        "context",
        "$UnaryCtx",
        "context",
        "tg",
        "tg",
        "$OpCtx",
        "left",
        "tg",
        "$OpCtx",
        "left",
        "$OpCtx",
        "left",
        "$AbstractExprCtx",
        "op_expr",
        "context",
        "context",
        "context",
        "context",
        "$NotCtx",
        "$ExprCtx",
        "context",
        "commas",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$AbstractExprCtx",
        "$YieldCtx",
        "context",
        "context",
        "context",
        "context",
        "$AbstractExprCtx",
        "$SliceCtx",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "$_SyntaxError",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "$transition",
        "context",
        "token",
        "token",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "$transition",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "token",
        "$get_scope",
        "context",
        "ntype",
        "ntype",
        "$_SyntaxError",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "ctx",
        "ctx",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "noassign",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "name",
        "$mangle",
        "name",
        "context",
        "context",
        "name",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$transition",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "context",
        "$transition",
        "$CallArgCtx",
        "context",
        "token",
        "value",
        "context",
        "$pos",
        "context",
        "context",
        "value",
        "context",
        "$transition",
        "$CallArgCtx",
        "context",
        "token",
        "value",
        "context",
        "$StarArgCtx",
        "context",
        "context",
        "$DoubleStarArgCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "context",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "context",
        "$ExprCtx",
        "$KwArgCtx",
        "context",
        "$ListOrTupleCtx",
        "context",
        "lst",
        "context",
        "lst",
        "context",
        "lst",
        "context",
        "context",
        "lst",
        "context",
        "context",
        "lst",
        "lst",
        "$ComprehensionCtx",
        "lst",
        "$TargetListCtx",
        "$CompForCtx",
        "comp",
        "context",
        "context",
        "op",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "op",
        "$StarArgCtx",
        "context",
        "$DoubleStarArgCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "$B",
        "context",
        "$B",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "context",
        "son",
        "son",
        "son",
        "$pos",
        "$transition",
        "context",
        "token",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "context",
        "context",
        "$B",
        "context",
        "$_SyntaxError",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "value",
        "context",
        "context",
        "$CallCtx",
        "context",
        "$BodyCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "context",
        "$AbstractExprCtx",
        "$CompIterableCtx",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$AbstractExprCtx",
        "$CompIfCtx",
        "context",
        "$TargetListCtx",
        "$CompForCtx",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$BodyCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$transition",
        "$DecoratorExprCtx",
        "context",
        "token",
        "value",
        "token",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "token",
        "context",
        "value",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "value",
        "context",
        "context",
        "token",
        "context",
        "context",
        "context",
        "token",
        "context",
        "context",
        "context",
        "$CallCtx",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "value",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "$FuncArgs",
        "context",
        "$AbstractExprCtx",
        "$AnnotationCtx",
        "context",
        "context",
        "$BodyCtx",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "token",
        "$AbstractExprCtx",
        "$SubCtx",
        "context",
        "$CallArgCtx",
        "$CallCtx",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$AbstractExprCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "$ListOrTupleCtx",
        "context",
        "lst",
        "context",
        "lst",
        "context",
        "context",
        "lst",
        "context",
        "context",
        "lst",
        "lst",
        "$ComprehensionCtx",
        "lst",
        "$TargetListCtx",
        "$CompForCtx",
        "comp",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "value",
        "context",
        "$AbstractExprCtx",
        "context",
        "expr",
        "value",
        "context",
        "context",
        "value",
        "context",
        "value",
        "context",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "expr",
        "context",
        "context",
        "$UnaryCtx",
        "context",
        "value",
        "value",
        "$OpCtx",
        "left",
        "value",
        "$OpCtx",
        "left",
        "$OpCtx",
        "left",
        "$AbstractExprCtx",
        "op_expr",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "value",
        "$transition",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "$pos",
        "context",
        "context",
        "context",
        "context",
        "$pos",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "value",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "value",
        "context",
        "context",
        "_ce",
        "_ce",
        "_ce",
        "$BodyCtx",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$DictOrSetCtx",
        "context",
        "context",
        "context",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "value",
        "token",
        "context",
        "$ExprNot",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "context",
        "context",
        "context",
        "$parent_match",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "$ListOrTupleCtx",
        "context",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "$AttrCtx",
        "context",
        "$AbstractExprCtx",
        "$SubCtx",
        "context",
        "$CallCtx",
        "context",
        "context",
        "op_parent",
        "op_parent",
        "$OpCtx",
        "context",
        "op",
        "$AbstractExprCtx",
        "new_op",
        "context",
        "op1",
        "op1",
        "op1",
        "op1",
        "$op_weight",
        "op1",
        "$op_weight",
        "op",
        "op1",
        "op",
        "repl",
        "op1",
        "op1",
        "op1",
        "op1",
        "$op_weight",
        "$op_weight",
        "op",
        "repl",
        "op1",
        "op1",
        "op1",
        "repl",
        "context",
        "op1",
        "context",
        "context",
        "op_parent",
        "context",
        "context",
        "$ExprCtx",
        "op_parent",
        "context",
        "expr",
        "context",
        "expr",
        "$OpCtx",
        "context",
        "op",
        "$AbstractExprCtx",
        "new_op",
        "op",
        "op",
        "repl",
        "repl",
        "repl",
        "repl",
        "repl",
        "op_parent",
        "repl",
        "repl",
        "repl",
        "_flag",
        "_flag",
        "op",
        "repl",
        "c2",
        "attr",
        "c2",
        "c2_clone",
        "attr",
        "c2",
        "attr",
        "chained_comp_num",
        "c2",
        "vname",
        "c2_clone",
        "vname",
        "chained_comp_num",
        "repl",
        "repl",
        "$op_weight",
        "repl",
        "$op_weight",
        "repl",
        "repl",
        "repl",
        "repl",
        "$OpCtx",
        "repl",
        "and_expr",
        "vname",
        "c2js",
        "c2_clone",
        "and_expr",
        "and_expr",
        "$OpCtx",
        "c2_clone",
        "op",
        "$AbstractExprCtx",
        "new_op",
        "repl",
        "$ExprCtx",
        "repl",
        "expr",
        "op1",
        "repl",
        "expr",
        "$OpCtx",
        "repl",
        "op",
        "$AbstractExprCtx",
        "new_op",
        "context",
        "parent",
        "parent",
        "parent",
        "$_SyntaxError",
        "context",
        "parent",
        "$_SyntaxError",
        "context",
        "parent",
        "parent",
        "context",
        "$AbstractExprCtx",
        "$AugmentedAssignCtx",
        "context",
        "value",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "context",
        "context",
        "$AbstractExprCtx",
        "$SliceCtx",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "context",
        "context",
        "child",
        "$AbstractExprCtx",
        "$AnnotationCtx",
        "context",
        "child",
        "child",
        "child",
        "$AbstractExprCtx",
        "$AnnotationCtx",
        "child",
        "$_SyntaxError",
        "context",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "$AbstractExprCtx",
        "$KwArgCtx",
        "context",
        "annotation",
        "has_parent",
        "context",
        "$transition",
        "annotation",
        "token",
        "value",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "i",
        "context",
        "i",
        "context",
        "i",
        "item",
        "item",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "$AbstractExprCtx",
        "$AssignCtx",
        "context",
        "context",
        "ptype",
        "$_SyntaxError",
        "context",
        "ptype",
        "ptype",
        "context",
        "$_SyntaxError",
        "context",
        "ptype",
        "ptype",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "$get_scope",
        "context",
        "context",
        "scope",
        "scope",
        "scope",
        "$bind",
        "name",
        "scope",
        "context",
        "context",
        "parent",
        "$AbstractExprCtx",
        "parent",
        "assign_expr",
        "context",
        "assign_expr",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "ctx",
        "ctx",
        "ctx",
        "in_comp",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "in_comp",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "ctx",
        "$AbstractExprCtx",
        "$TernaryCtx",
        "ctx",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "context",
        "t",
        "t",
        "t",
        "$_SyntaxError",
        "context",
        "$transition",
        "context",
        "token",
        "token",
        "context",
        "$AbstractExprCtx",
        "$OpCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "$AbstractExprCtx",
        "$ExprCtx",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$BodyCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "value",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$B",
        "context",
        "value",
        "context",
        "context",
        "context",
        "token",
        "context",
        "value",
        "context",
        "context",
        "context",
        "context",
        "context",
        "value",
        "context",
        "context",
        "$get_scope",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "def_ctx",
        "def_ctx",
        "def_ctx",
        "def_ctx",
        "$AbstractExprCtx",
        "context",
        "context",
        "context",
        "context",
        "$pos",
        "context",
        "$_SyntaxError",
        "context",
        "$transition",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$AbstractExprCtx",
        "$AnnotationCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "context",
        "value",
        "$_SyntaxError",
        "context",
        "value",
        "$FuncArgIdCtx",
        "context",
        "value",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$B",
        "context",
        "last",
        "last",
        "last",
        "context",
        "$_SyntaxError",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "op",
        "context",
        "$_SyntaxError",
        "context",
        "$FuncStarArgCtx",
        "context",
        "op",
        "$FuncStarArgCtx",
        "context",
        "op",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "$EndOfPositionalCtx",
        "context",
        "$_SyntaxError",
        "context",
        "op",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "value",
        "$_SyntaxError",
        "context",
        "value",
        "context",
        "value",
        "context",
        "value",
        "context",
        "context",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "$AbstractExprCtx",
        "$AnnotationCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$IdCtx",
        "context",
        "value",
        "context",
        "value",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "context",
        "$AbstractExprCtx",
        "$KwArgCtx",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "ctx",
        "ctx",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "$ImportedModuleCtx",
        "context",
        "value",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "value",
        "context",
        "context",
        "value",
        "context",
        "context",
        "context",
        "context",
        "context",
        "value",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$CallArgCtx",
        "context",
        "$transition",
        "context",
        "token",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$pos",
        "$AbstractExprCtx",
        "context",
        "context",
        "context",
        "$pos",
        "$transition",
        "context",
        "token",
        "context",
        "token",
        "$transition",
        "$FuncArgs",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "context",
        "token",
        "$AbstractExprCtx",
        "$SubCtx",
        "context",
        "token",
        "$CallCtx",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "node",
        "context",
        "context",
        "expr",
        "node",
        "expr",
        "node",
        "ix",
        "expr",
        "context",
        "expr",
        "context",
        "context",
        "context",
        "$pos",
        "context",
        "context",
        "context",
        "token",
        "context",
        "context",
        "context",
        "$pos",
        "context",
        "context",
        "context",
        "context",
        "context",
        "token",
        "context",
        "$pos",
        "$transition",
        "context",
        "token",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$ComprehensionCtx",
        "context",
        "$TargetListCtx",
        "$CompForCtx",
        "comp",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "context",
        "token",
        "context",
        "context",
        "token",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "token",
        "context",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "$ExprCtx",
        "context",
        "expr",
        "context",
        "context",
        "expr",
        "$transition",
        "context",
        "token",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "context",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "$ExprCtx",
        "context",
        "$ExprCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "value",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "$AsyncCtx",
        "context",
        "$AbstractExprCtx",
        "$AwaitCtx",
        "context",
        "$ClassCtx",
        "context",
        "$ContinueCtx",
        "context",
        "$DebuggerCtx",
        "context",
        "$BreakCtx",
        "context",
        "$DefCtx",
        "context",
        "$TargetListCtx",
        "$ForExpr",
        "context",
        "$AbstractExprCtx",
        "$ConditionCtx",
        "context",
        "token",
        "$previous",
        "context",
        "previous",
        "previous",
        "$_SyntaxError",
        "context",
        "previous",
        "$AbstractExprCtx",
        "$ConditionCtx",
        "context",
        "token",
        "$previous",
        "context",
        "previous",
        "$_SyntaxError",
        "context",
        "previous",
        "$SingleKwCtx",
        "context",
        "token",
        "$previous",
        "context",
        "previous",
        "previous",
        "previous",
        "$_SyntaxError",
        "context",
        "previous",
        "$SingleKwCtx",
        "context",
        "token",
        "$TryCtx",
        "context",
        "$previous",
        "context",
        "previous",
        "$_SyntaxError",
        "context",
        "previous",
        "$ExceptCtx",
        "context",
        "$AbstractExprCtx",
        "$AssertCtx",
        "context",
        "$FromCtx",
        "context",
        "$ImportCtx",
        "context",
        "$GlobalCtx",
        "context",
        "$NonlocalCtx",
        "context",
        "$LambdaCtx",
        "context",
        "$PassCtx",
        "context",
        "$AbstractExprCtx",
        "$RaiseCtx",
        "context",
        "$AbstractExprCtx",
        "$ReturnCtx",
        "context",
        "$AbstractExprCtx",
        "$WithCtx",
        "context",
        "$AbstractExprCtx",
        "$YieldCtx",
        "context",
        "$AbstractExprCtx",
        "$DelCtx",
        "context",
        "$DecoratorCtx",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$ExprCtx",
        "$OpCtx",
        "context",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "a",
        "a",
        "a",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "$transition",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "context",
        "token",
        "context",
        "context",
        "context",
        "$ListOrTupleCtx",
        "context",
        "t",
        "context",
        "context",
        "t",
        "t",
        "token",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "value",
        "value",
        "$UnaryCtx",
        "context",
        "value",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$IdCtx",
        "context",
        "value",
        "context",
        "context",
        "token",
        "context",
        "$ListOrTupleCtx",
        "context",
        "token",
        "context",
        "$ListOrTupleCtx",
        "context",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$IdCtx",
        "$ExprCtx",
        "context",
        "value",
        "context",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "token",
        "$BodyCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "context",
        "value",
        "context",
        "context",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "value",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "value",
        "context",
        "$_SyntaxError",
        "context",
        "$transition",
        "context",
        "token",
        "context",
        "$transition",
        "context",
        "token",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "$AbstractExprCtx",
        "$SubCtx",
        "context",
        "context",
        "context",
        "$CallCtx",
        "context",
        "context",
        "value",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$AbstractExprCtx",
        "context",
        "$transition",
        "expr",
        "token",
        "value",
        "context",
        "context",
        "context",
        "context",
        "$AbstractExprCtx",
        "$SliceCtx",
        "context",
        "$AbstractExprCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "$IdCtx",
        "$ExprCtx",
        "context",
        "value",
        "context",
        "value",
        "$PackedCtx",
        "context",
        "context",
        "context",
        "$ListOrTupleCtx",
        "context",
        "token",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$transition",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$AbstractExprCtx",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "$ListOrTupleCtx",
        "context",
        "t",
        "t",
        "context",
        "context",
        "t",
        "t",
        "t",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "$BodyCtx",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "context",
        "context",
        "value",
        "value",
        "context",
        "value",
        "value",
        "$transition",
        "context",
        "token",
        "value",
        "context",
        "$ExprCtx",
        "context",
        "$ExprCtx",
        "expr",
        "$IdCtx",
        "expr1",
        "value",
        "$AttrCtx",
        "expr",
        "context",
        "repl",
        "context",
        "repl",
        "repl",
        "expr1",
        "value",
        "value",
        "context",
        "value",
        "context",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "value",
        "token",
        "context",
        "context",
        "$transition",
        "$AbstractExprCtx",
        "context",
        "token",
        "value",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "$AbstractExprCtx",
        "$AliasCtx",
        "context",
        "context",
        "$BodyCtx",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$TargetListCtx",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "token",
        "context",
        "token",
        "context",
        "$_SyntaxError",
        "context",
        "context",
        "$add_yield_from_code",
        "context",
        "context",
        "$transition",
        "context",
        "token",
        "$B",
        "$B",
        "$B",
        "$B",
        "i",
        "s_escaped",
        "i",
        "is_escaped",
        "s_escaped",
        "i",
        "$B",
        "root",
        "src",
        "$Node",
        "root",
        "root",
        "pos",
        "src",
        "src",
        "pos",
        "indent",
        "pos",
        "src",
        "src",
        "pos",
        "_s",
        "indent",
        "pos",
        "_s",
        "indent",
        "pos",
        "indent",
        "indent",
        "indent",
        "src",
        "pos",
        "_s",
        "pos",
        "lnum",
        "indent",
        "_s",
        "src",
        "pos",
        "offset",
        "pos",
        "offset",
        "lnum",
        "indent",
        "new_node",
        "indent",
        "new_node",
        "lnum",
        "new_node",
        "current",
        "current",
        "indent",
        "indent",
        "current",
        "context",
        "$indented",
        "context",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "pos",
        "current",
        "new_node",
        "indent",
        "current",
        "context",
        "context",
        "$indented",
        "context",
        "context",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "pos",
        "indent",
        "current",
        "current",
        "current",
        "current",
        "indent",
        "current",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "pos",
        "current",
        "new_node",
        "current",
        "new_node",
        "context",
        "$NodeCtx",
        "new_node",
        "car",
        "src",
        "pos",
        "end",
        "end",
        "src",
        "root",
        "pos",
        "end",
        "pos",
        "end",
        "car",
        "car",
        "context",
        "context",
        "string_modifier",
        "string_modifier",
        "raw",
        "raw",
        "fstring",
        "sm_length",
        "fstring",
        "sm_length",
        "raw",
        "string_modifier",
        "src",
        "pos",
        "car",
        "car",
        "car",
        "_type",
        "end",
        "pos",
        "_type",
        "end",
        "pos",
        "end",
        "src",
        "escaped",
        "src",
        "end",
        "zone",
        "zone",
        "zone",
        "zone",
        "src",
        "end",
        "raw",
        "src",
        "end",
        "zone",
        "escaped",
        "end",
        "src",
        "end",
        "raw",
        "end",
        "src",
        "src",
        "end",
        "car",
        "zone",
        "car",
        "end",
        "zone",
        "end",
        "escaped",
        "src",
        "end",
        "end",
        "lnum",
        "src",
        "end",
        "end",
        "re",
        "src",
        "end_lit",
        "search",
        "$_SyntaxError",
        "context",
        "pos",
        "end_lit",
        "search",
        "src",
        "end_lit",
        "$_SyntaxError",
        "context",
        "search",
        "$B",
        "XMLHttpRequest",
        "xhr",
        "$B",
        "xhr",
        "$B",
        "xhr",
        "$B",
        "description",
        "search",
        "re",
        "$B",
        "search",
        "$_SyntaxError",
        "context",
        "search",
        "zone",
        "eval",
        "cp",
        "end",
        "end_lit",
        "end",
        "end",
        "src",
        "is_escaped",
        "src",
        "end",
        "zone",
        "zone",
        "escaped",
        "end",
        "src",
        "end",
        "_type",
        "$pos",
        "end",
        "$_SyntaxError",
        "context",
        "src",
        "end",
        "car",
        "_type",
        "src",
        "end",
        "car",
        "car",
        "car",
        "zone",
        "src",
        "end",
        "end",
        "found",
        "$pos",
        "pos",
        "zone",
        "i",
        "$string",
        "i",
        "$string",
        "i",
        "$car",
        "car",
        "raw",
        "i",
        "$string",
        "i",
        "$car",
        "fstring",
        "car",
        "re",
        "car",
        "$B",
        "string_no_bs",
        "err",
        "$_SyntaxError",
        "context",
        "err",
        "context",
        "$transition",
        "context",
        "car",
        "car",
        "fstring",
        "$pos",
        "sm_length",
        "context",
        "$transition",
        "context",
        "elts",
        "$pos",
        "sm_length",
        "context",
        "$transition",
        "context",
        "car",
        "car",
        "context",
        "raw",
        "pos",
        "end",
        "_type",
        "pos",
        "end",
        "zone",
        "src",
        "end",
        "src",
        "end",
        "lnum",
        "end",
        "found",
        "_type",
        "$_SyntaxError",
        "context",
        "$_SyntaxError",
        "context",
        "name",
        "car",
        "$B",
        "car",
        "name",
        "car",
        "pos",
        "pos",
        "src",
        "$B",
        "src",
        "pos",
        "name",
        "src",
        "pos",
        "pos",
        "name",
        "kwdict",
        "name",
        "$pos",
        "pos",
        "name",
        "unsupported",
        "name",
        "$_SyntaxError",
        "context",
        "name",
        "context",
        "$transition",
        "context",
        "name",
        "$operators",
        "name",
        "name",
        "name",
        "re",
        "src",
        "pos",
        "res",
        "pos",
        "res",
        "$pos",
        "pos",
        "name",
        "context",
        "$transition",
        "context",
        "$pos",
        "pos",
        "name",
        "context",
        "$transition",
        "context",
        "name",
        "name",
        "re",
        "src",
        "pos",
        "res",
        "pos",
        "res",
        "$pos",
        "pos",
        "name",
        "context",
        "$transition",
        "context",
        "$pos",
        "pos",
        "name",
        "context",
        "$transition",
        "context",
        "name",
        "$pos",
        "pos",
        "name",
        "context",
        "$transition",
        "context",
        "name",
        "src",
        "pos",
        "src",
        "pos",
        "name",
        "string_modifier",
        "name",
        "name",
        "$B",
        "name",
        "name",
        "name",
        "$pos",
        "pos",
        "name",
        "context",
        "$transition",
        "context",
        "name",
        "name",
        "numeric_literal",
        "numeric_literal",
        "$_SyntaxError",
        "context",
        "numeric_literal",
        "$_SyntaxError",
        "context",
        "numeric_literal",
        "numeric_literal",
        "rmuf",
        "numeric_literal",
        "numeric_literal",
        "numeric_literal",
        "$_SyntaxError",
        "context",
        "numeric_literal",
        "numeric_literal",
        "car",
        "pos",
        "pos",
        "src",
        "src",
        "pos",
        "pos",
        "j",
        "src",
        "src",
        "j",
        "j",
        "src",
        "j",
        "context",
        "$transition",
        "context",
        "rmu",
        "src",
        "pos",
        "j",
        "pos",
        "j",
        "context",
        "$transition",
        "context",
        "rmu",
        "src",
        "pos",
        "j",
        "pos",
        "pos",
        "j",
        "$pos",
        "pos",
        "context",
        "$transition",
        "context",
        "pos",
        "hex_pattern",
        "src",
        "pos",
        "res",
        "rmuf",
        "res",
        "context",
        "$transition",
        "context",
        "rmu",
        "res",
        "pos",
        "res",
        "octal_pattern",
        "src",
        "pos",
        "res",
        "context",
        "$transition",
        "context",
        "rmuf",
        "res",
        "pos",
        "res",
        "binary_pattern",
        "src",
        "pos",
        "res",
        "context",
        "$transition",
        "context",
        "rmuf",
        "res",
        "pos",
        "res",
        "src",
        "pos",
        "parseInt",
        "src",
        "pos",
        "res",
        "int_pattern",
        "src",
        "pos",
        "$pos",
        "pos",
        "check_int",
        "res",
        "context",
        "$transition",
        "context",
        "rmu",
        "res",
        "pos",
        "res",
        "$_SyntaxError",
        "context",
        "float_pattern1",
        "src",
        "pos",
        "res",
        "check_int",
        "res",
        "res",
        "rmuf",
        "res",
        "$pos",
        "pos",
        "$B",
        "res",
        "context",
        "$transition",
        "context",
        "rmuf",
        "res",
        "res",
        "context",
        "$transition",
        "context",
        "rmuf",
        "res",
        "res",
        "float_pattern2",
        "src",
        "pos",
        "res",
        "check_int",
        "res",
        "$pos",
        "pos",
        "$B",
        "res",
        "context",
        "$transition",
        "context",
        "rmuf",
        "res",
        "res",
        "context",
        "$transition",
        "context",
        "rmuf",
        "res",
        "res",
        "int_pattern",
        "src",
        "pos",
        "check_int",
        "res",
        "$pos",
        "pos",
        "res",
        "context",
        "$transition",
        "context",
        "rmu",
        "res",
        "context",
        "$transition",
        "context",
        "rmu",
        "res",
        "pos",
        "res",
        "lnum",
        "br_stack",
        "pos",
        "current",
        "current",
        "$pos",
        "pos",
        "context",
        "$transition",
        "context",
        "indent",
        "new_node",
        "$Node",
        "new_node",
        "lnum",
        "pos",
        "br_stack",
        "car",
        "br_pos",
        "br_stack",
        "context",
        "pos",
        "$pos",
        "pos",
        "context",
        "$transition",
        "context",
        "car",
        "pos",
        "br_stack",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "br_close",
        "car",
        "br_stack",
        "br_stack",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "br_stack",
        "br_stack",
        "br_stack",
        "$pos",
        "pos",
        "context",
        "$transition",
        "context",
        "car",
        "pos",
        "src",
        "pos",
        "$pos",
        "pos",
        "context",
        "$transition",
        "context",
        "pos",
        "$pos",
        "pos",
        "context",
        "$transition",
        "context",
        "pos",
        "$pos",
        "pos",
        "src",
        "pos",
        "context",
        "$transition",
        "context",
        "pos",
        "context",
        "$transition",
        "context",
        "car",
        "pos",
        "$transition",
        "context",
        "current",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "pos",
        "pos1",
        "src",
        "src",
        "pos1",
        "_s",
        "_s",
        "ends_line",
        "_s",
        "pos1",
        "ends_line",
        "pos",
        "new_node",
        "$Node",
        "new_node",
        "$get_node",
        "context",
        "new_node",
        "lnum",
        "new_node",
        "$get_node",
        "context",
        "new_node",
        "current",
        "new_node",
        "context",
        "$NodeCtx",
        "new_node",
        "pos",
        "car",
        "src",
        "pos",
        "context",
        "$transition",
        "context",
        "pos",
        "car",
        "context",
        "$pos",
        "pos",
        "context",
        "$transition",
        "context",
        "car",
        "pos",
        "op_sign",
        "$operators",
        "op_sign",
        "src",
        "pos",
        "op_sign",
        "op_sign",
        "op_match",
        "op_match",
        "op_sign",
        "$pos",
        "pos",
        "op_match",
        "op_match",
        "$augmented_assigns",
        "context",
        "$transition",
        "context",
        "op_match",
        "context",
        "$transition",
        "context",
        "op_match",
        "pos",
        "op_match",
        "$_SyntaxError",
        "context",
        "car",
        "src",
        "pos",
        "lnum",
        "pos",
        "pos",
        "src",
        "$_SyntaxError",
        "context",
        "context",
        "$_SyntaxError",
        "context",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "pos",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "car",
        "br_stack",
        "br_pos",
        "$pos",
        "br_err",
        "src",
        "root",
        "id",
        "id",
        "$_SyntaxError",
        "br_err",
        "fname",
        "lines",
        "context",
        "context",
        "pos",
        "src",
        "src",
        "pos",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "car",
        "pos",
        "context",
        "$indented",
        "context",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "pos",
        "current",
        "parent",
        "parent",
        "parent",
        "parent",
        "$pos",
        "pos",
        "$_SyntaxError",
        "context",
        "$B",
        "src",
        "locals_id",
        "parent_block",
        "line_num",
        "$Node",
        "root",
        "root",
        "locals_id",
        "root",
        "root",
        "parent_block",
        "root",
        "line_num",
        "root",
        "root",
        "root",
        "src",
        "root",
        "src",
        "src",
        "root",
        "src",
        "src",
        "root",
        "src",
        "root",
        "$B",
        "src",
        "locals_id",
        "parent_scope",
        "line_num",
        "$pos",
        "parent_scope",
        "parent_scope",
        "$B",
        "src",
        "src",
        "src",
        "src",
        "line_info",
        "line_num",
        "parseInt",
        "line_info",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "src",
        "locals_id",
        "locals_is_module",
        "locals_id",
        "locals_id",
        "locals_id",
        "locals_id",
        "$create_root_node",
        "src",
        "is_comp",
        "has_annotations",
        "locals_id",
        "parent_scope",
        "line_num",
        "$tokenize",
        "root",
        "src",
        "root",
        "is_comp",
        "root",
        "js",
        "pos",
        "js",
        "pos",
        "local_ns",
        "root",
        "$NodeJS",
        "js",
        "offset",
        "root",
        "offset",
        "$NodeJS",
        "local_ns",
        "__package__",
        "root",
        "root",
        "offset",
        "$NodeJS",
        "locals_id",
        "local_ns",
        "global_ns",
        "root",
        "offset",
        "$NodeJS",
        "js",
        "$NodeJS",
        "root",
        "enter_frame_pos",
        "root",
        "root",
        "enter_frame_pos",
        "try_node",
        "children",
        "children",
        "$NodeJS",
        "children",
        "child",
        "try_node",
        "child",
        "try_node",
        "$NodeJS",
        "root",
        "enter_frame_pos",
        "root",
        "$NodeJS",
        "catch_node",
        "$NodeJS",
        "catch_node",
        "$NodeJS",
        "root",
        "catch_node",
        "$add_line_num",
        "root",
        "line_info",
        "$B",
        "locals_id",
        "t1",
        "t0",
        "$B",
        "t1",
        "t0",
        "root",
        "$B",
        "$B",
        "meta_path",
        "$B",
        "$B",
        "$B",
        "meta_path",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "meta_path",
        "$B",
        "path_hooks",
        "$B",
        "$B",
        "meta_path",
        "$B",
        "path_hooks",
        "$B",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "options",
        "$B",
        "options",
        "_b_",
        "$B",
        "$B",
        "options",
        "options",
        "$B",
        "options",
        "options",
        "options",
        "options",
        "options",
        "$B",
        "options",
        "$B",
        "options",
        "$B",
        "$B",
        "_window",
        "$href",
        "$href_elts",
        "$B",
        "$B",
        "$href_elts",
        "$B",
        "$href_elts",
        "options",
        "$B",
        "options",
        "$B",
        "options",
        "options",
        "path",
        "path",
        "lang",
        "path",
        "prefetch",
        "path",
        "path",
        "path",
        "$B",
        "path",
        "path",
        "prefetch",
        "prefetch",
        "$B",
        "path",
        "$B",
        "path",
        "lang",
        "_importlib",
        "path",
        "lang",
        "$B",
        "$B",
        "$B",
        "e",
        "path_links",
        "i",
        "i",
        "e",
        "e",
        "$B",
        "href",
        "$B",
        "href",
        "e",
        "filetype",
        "filetype",
        "filetype",
        "filetype",
        "_importlib",
        "e",
        "filetype",
        "$B",
        "$B",
        "$B",
        "$B",
        "_b_",
        "$B",
        "$B",
        "_run_scripts",
        "options",
        "$B",
        "src",
        "name",
        "run_loop",
        "run_loop",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "name",
        "$B",
        "$B",
        "src",
        "name",
        "name",
        "root",
        "root",
        "js",
        "name",
        "src",
        "$B",
        "$B",
        "name",
        "$B",
        "script",
        "src",
        "$B",
        "js",
        "err",
        "$B",
        "err",
        "$B",
        "$B",
        "root",
        "imports1",
        "item",
        "$B",
        "item",
        "imports",
        "name",
        "$B",
        "name",
        "$B",
        "name",
        "submodule",
        "submodule",
        "submodule",
        "submodule",
        "required_stdlib_imports",
        "subimports",
        "subimports",
        "mod",
        "imports",
        "mod",
        "imports",
        "mod",
        "j",
        "imports",
        "j",
        "$B",
        "$B",
        "imports",
        "j",
        "root",
        "$B",
        "script",
        "run_loop",
        "$B",
        "$B",
        "js",
        "js",
        "line",
        "i",
        "i",
        "line",
        "$B",
        "options",
        "_window",
        "options",
        "options",
        "elt",
        "$elts",
        "elt",
        "i",
        "scripts",
        "i",
        "scripts",
        "i",
        "script",
        "script",
        "script",
        "script",
        "_b_",
        "webworkers",
        "script",
        "$elts",
        "script",
        "options",
        "module_name",
        "$B",
        "module_name",
        "$B",
        "$elts",
        "elt",
        "$src",
        "elt",
        "elt",
        "root",
        "$B",
        "$src",
        "module_name",
        "module_name",
        "js",
        "root",
        "$B",
        "$log",
        "js",
        "eval",
        "js",
        "$B",
        "module_name",
        "root",
        "js",
        "$err",
        "root",
        "js",
        "$err",
        "$B",
        "$err",
        "attr",
        "$err",
        "attr",
        "$err",
        "attr",
        "$err",
        "$err",
        "$err",
        "_b_",
        "$err",
        "_b_",
        "$err",
        "$err",
        "$err",
        "_b_",
        "$B",
        "$trace",
        "print_exc_err",
        "$trace",
        "$err",
        "$elts",
        "options",
        "$B",
        "$B",
        "$B",
        "$B",
        "i",
        "$elts",
        "i",
        "$elts",
        "i",
        "elt",
        "defined_ids",
        "elt",
        "elt",
        "defined_ids",
        "elt",
        "webworkers",
        "i",
        "len",
        "i",
        "webworkers",
        "i",
        "worker",
        "$B",
        "$B",
        "worker",
        "worker",
        "src",
        "worker",
        "worker",
        "src",
        "src",
        "$B",
        "worker",
        "src",
        "i",
        "$elts",
        "i",
        "$elts",
        "i",
        "elt",
        "elt",
        "elt",
        "module_name",
        "elt",
        "first_script",
        "module_name",
        "first_script",
        "module_name",
        "$B",
        "defined_ids",
        "module_name",
        "module_name",
        "$B",
        "elt",
        "$B",
        "$B",
        "module_name",
        "elt",
        "src",
        "elt",
        "elt",
        "src",
        "src",
        "$B",
        "src",
        "module_name",
        "options",
        "$B",
        "$B",
        "$operators",
        "$B",
        "$Node",
        "$B",
        "$NodeJSCtx",
        "$B",
        "brython",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "evt",
        "evt",
        "$B",
        "res",
        "res",
        "$B",
        "$B",
        "$B",
        "elts",
        "elts",
        "ext",
        "elts",
        "elts",
        "elts",
        "is_package",
        "__package__",
        "parts",
        "__package__",
        "parts",
        "$B",
        "$B",
        "__package__",
        "$B",
        "source",
        "root",
        "err",
        "$B",
        "err",
        "$B",
        "$B",
        "parts",
        "parts",
        "$B",
        "parts",
        "elts",
        "imports",
        "imports",
        "$B",
        "store_precompiled",
        "js",
        "source_ts",
        "imports",
        "is_package",
        "ext",
        "res",
        "$B",
        "res",
        "$B",
        "res",
        "res",
        "$B",
        "res",
        "res",
        "i",
        "subimports",
        "i",
        "subimports",
        "i",
        "subimport",
        "subimport",
        "nb_dots",
        "subimport",
        "subimport",
        "url_elts",
        "nb_dots",
        "subimport",
        "elts",
        "elts",
        "subimport",
        "subimport",
        "elts",
        "$B",
        "subimport",
        "$B",
        "subimport",
        "$B",
        "subimport",
        "$B",
        "subimport",
        "submodule",
        "submodule",
        "submodule",
        "$B",
        "idb_get",
        "subimport",
        "add_jsmodule",
        "subimport",
        "source",
        "loop",
        "js",
        "source_ts",
        "imports",
        "is_package",
        "$B",
        "db",
        "tx",
        "store",
        "js",
        "imports",
        "origin",
        "__BRYTHON__",
        "source_ts",
        "is_package",
        "store",
        "data",
        "$B",
        "is_package",
        "CustomEvent",
        "$B",
        "ix",
        "$B",
        "ix",
        "request",
        "evt",
        "$B",
        "idb_get",
        "loop",
        "$B",
        "db",
        "tx",
        "req",
        "store",
        "req",
        "evt",
        "idb_load",
        "evt",
        "err",
        "err",
        "$B",
        "obj",
        "$B",
        "$B",
        "indexedDB",
        "$B",
        "idb_cx",
        "idb_cx",
        "db",
        "db",
        "db",
        "version",
        "idb_cx",
        "indexedDB",
        "$B",
        "version",
        "idb_cx",
        "$B",
        "db",
        "store",
        "loop",
        "idb_cx",
        "idb_cx",
        "idb_cx",
        "idb_cx",
        "db",
        "store",
        "loop",
        "db",
        "tx",
        "store",
        "evt",
        "cursor",
        "evt",
        "cursor",
        "record",
        "cursor",
        "record",
        "$B",
        "$B",
        "$B",
        "record",
        "$B",
        "record",
        "record",
        "record",
        "$B",
        "record",
        "record",
        "$B",
        "record",
        "record",
        "$B",
        "record",
        "outdated",
        "record",
        "outdated",
        "record",
        "cursor",
        "$B",
        "$B",
        "outdated",
        "loop",
        "idb_cx",
        "idb_cx",
        "db",
        "store",
        "loop",
        "idb_cx",
        "$B",
        "$B",
        "$B",
        "loop",
        "$B",
        "script",
        "script",
        "script",
        "$B",
        "$B",
        "name",
        "$B",
        "$B",
        "$B",
        "name",
        "name",
        "$B",
        "XMLHttpRequest",
        "$B",
        "req",
        "url",
        "qs",
        "req",
        "script",
        "$B",
        "name",
        "src",
        "$B",
        "$B",
        "src",
        "name",
        "loop",
        "url",
        "req",
        "_b_",
        "script",
        "source",
        "source",
        "$B",
        "source",
        "$B",
        "$B",
        "__BRYTHON__",
        "__BRYTHON__",
        "__BRYTHON__",
        "elts",
        "elts",
        "elts",
        "elts",
        "ext",
        "$B",
        "$B",
        "idb_get",
        "add_jsmodule",
        "source",
        "loop",
        "$B",
        "$B",
        "$B",
        "$B",
        "db",
        "tx",
        "$B",
        "$B",
        "store",
        "req",
        "CustomEvent",
        "CustomEvent",
        "$B",
        "$B",
        "$B",
        "task",
        "task",
        "func",
        "task",
        "script",
        "$B",
        "script",
        "script",
        "script",
        "$B",
        "script_id",
        "script_id",
        "script",
        "err",
        "err",
        "err",
        "$B",
        "err",
        "err",
        "_b_",
        "$B",
        "err",
        "_b_",
        "err",
        "$B",
        "err",
        "err",
        "err",
        "$B",
        "$B",
        "err",
        "loop",
        "func",
        "args",
        "err",
        "$B",
        "err",
        "$B",
        "$B",
        "$B",
        "err",
        "err",
        "$B",
        "err",
        "_b_",
        "err",
        "name",
        "name",
        "err",
        "trace",
        "offset",
        "name",
        "err",
        "trace",
        "name",
        "err",
        "err",
        "trace",
        "err",
        "$B",
        "$B",
        "trace",
        "$B",
        "$B",
        "err",
        "err",
        "print_exc_err",
        "trace",
        "err",
        "imports",
        "start",
        "start",
        "start",
        "i",
        "imports",
        "i",
        "imports",
        "i",
        "$B",
        "$B",
        "mod_obj",
        "mod_obj",
        "mod_obj",
        "subimports",
        "subimport",
        "$B",
        "subimport",
        "imports",
        "subimport",
        "$B",
        "subimport",
        "imports",
        "subimport",
        "nb_added",
        "nb_added",
        "required_stdlib_imports",
        "imports",
        "imports",
        "nb_added",
        "imports",
        "__BRYTHON__",
        "__BRYTHON__",
        "$B",
        "$B",
        "attr",
        "attr",
        "$B",
        "attr",
        "attr",
        "attr",
        "_b_",
        "attr",
        "attr",
        "_b_",
        "klass",
        "$B",
        "klass",
        "attr",
        "prop",
        "_b_",
        "prop",
        "prop",
        "_b_",
        "_b_",
        "attr",
        "objects",
        "$B",
        "objects",
        "klass",
        "klass",
        "objects",
        "i",
        "len",
        "i",
        "attr",
        "objects",
        "i",
        "attr",
        "attr",
        "res",
        "attr",
        "isNaN",
        "parseInt",
        "attr",
        "attr",
        "res",
        "attr",
        "attr",
        "attr",
        "res",
        "attr",
        "attr",
        "res",
        "attr",
        "res",
        "_b_",
        "_b_",
        "res",
        "_b_",
        "res",
        "res",
        "other",
        "other",
        "_b_",
        "$B",
        "arguments",
        "$",
        "_b_",
        "_b_",
        "$",
        "_b_",
        "obj",
        "attr",
        "obj",
        "$B",
        "obj",
        "$test",
        "attr",
        "obj",
        "klass",
        "attr",
        "klass",
        "obj",
        "attr",
        "obj",
        "attr",
        "res",
        "res",
        "obj",
        "obj",
        "attr",
        "obj",
        "attr",
        "res",
        "obj",
        "kl",
        "attr",
        "kl",
        "attr",
        "v",
        "v",
        "res",
        "check",
        "obj",
        "klass",
        "attr",
        "res",
        "klass",
        "mro",
        "i",
        "len",
        "i",
        "res",
        "check",
        "obj",
        "mro",
        "i",
        "attr",
        "res",
        "$test",
        "mro",
        "i",
        "res",
        "res",
        "res",
        "$test",
        "res",
        "res",
        "_b_",
        "res",
        "res",
        "obj",
        "klass",
        "res",
        "$B",
        "$test",
        "res",
        "obj",
        "attr",
        "res",
        "res",
        "obj",
        "klass",
        "res",
        "get",
        "res",
        "res",
        "i",
        "res",
        "get",
        "i",
        "get",
        "res",
        "i",
        "$test",
        "get",
        "get",
        "_b_",
        "res",
        "$test",
        "__get__",
        "__get__",
        "__get__",
        "obj",
        "klass",
        "err",
        "err",
        "attr",
        "obj",
        "__get__",
        "err",
        "res",
        "__get__",
        "__get__",
        "get_func",
        "x",
        "y",
        "__get__",
        "x",
        "y",
        "klass",
        "__get__",
        "res",
        "__get__",
        "x",
        "x",
        "__get__",
        "res",
        "attr",
        "attr",
        "res",
        "__get__",
        "res",
        "obj",
        "klass",
        "$test",
        "res",
        "res1",
        "res1",
        "res1",
        "$B",
        "res",
        "res",
        "res",
        "res",
        "$B",
        "klass",
        "obj",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "arguments",
        "i",
        "res",
        "args",
        "method",
        "$B",
        "method",
        "obj",
        "cls",
        "res",
        "cls",
        "clmethod",
        "$B",
        "clmethod",
        "cls",
        "res",
        "res",
        "cls",
        "res",
        "clmethod",
        "method",
        "$B",
        "method",
        "res",
        "klass",
        "klass",
        "$B",
        "$B",
        "method",
        "res",
        "attr",
        "klass",
        "attr",
        "$test",
        "method",
        "method",
        "res1",
        "res",
        "obj",
        "_ga",
        "_ga",
        "klass",
        "_ga",
        "klass",
        "mro",
        "i",
        "len",
        "i",
        "_ga",
        "mro",
        "i",
        "_ga",
        "_ga",
        "klass",
        "$B",
        "_ga",
        "attr",
        "_ga",
        "obj",
        "attr",
        "_b_",
        "hash",
        "hash",
        "$B",
        "arguments",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "cls",
        "args",
        "cls",
        "_b_",
        "$B",
        "cls",
        "init_func",
        "args",
        "_b_",
        "cls",
        "_b_",
        "other",
        "other",
        "$B",
        "eq",
        "$B",
        "eq",
        "other",
        "res",
        "_b_",
        "res",
        "$B",
        "res",
        "_b_",
        "cls",
        "$B",
        "cls",
        "_reconstructor",
        "_reconstructor",
        "res",
        "_b_",
        "_b_",
        "attr",
        "_b_",
        "d",
        "attr",
        "attr",
        "d",
        "res",
        "d",
        "_b_",
        "res",
        "cls",
        "$B",
        "cls",
        "arguments",
        "__newobj__",
        "_b_",
        "__newobj__",
        "__newobj__",
        "_b_",
        "item",
        "arg2",
        "item",
        "res",
        "arg2",
        "_b_",
        "$B",
        "frame",
        "frame",
        "frame",
        "frame",
        "attr",
        "attr",
        "attr",
        "_b_",
        "d",
        "attr",
        "attr",
        "nb",
        "nb",
        "d",
        "_b_",
        "res",
        "d",
        "res",
        "_b_",
        "_b_",
        "res",
        "_b_",
        "$B",
        "$B",
        "attr",
        "val",
        "val",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "$B",
        "attr",
        "attr",
        "attr",
        "_b_",
        "attr",
        "val",
        "attr",
        "val",
        "_b_",
        "obj",
        "attr",
        "val",
        "obj",
        "attr",
        "val",
        "$B",
        "$B",
        "repr_func",
        "_b_",
        "res",
        "arguments",
        "args",
        "res",
        "$B",
        "$B",
        "name",
        "factory",
        "_b_",
        "name",
        "A",
        "factory",
        "A",
        "__BRYTHON__",
        "$B",
        "$B",
        "$B",
        "class_name",
        "class_obj",
        "bases",
        "parents_names",
        "kwargs",
        "bases",
        "bases",
        "class_obj",
        "class_obj",
        "$B",
        "$B",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "$B",
        "class_obj",
        "_b_",
        "parents_names",
        "i",
        "kwargs",
        "i",
        "kwargs",
        "i",
        "kwargs",
        "i",
        "kwargs",
        "i",
        "key",
        "metaclass",
        "val",
        "extra_kwargs",
        "key",
        "val",
        "prepare_kwargs",
        "key",
        "val",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "$B",
        "$B",
        "bases",
        "i",
        "_b_",
        "mro_entries",
        "_b_",
        "_b_",
        "mro_entries",
        "bases",
        "bases",
        "i",
        "entries",
        "use_mro_entries",
        "i",
        "metaclass",
        "bases",
        "bases",
        "bases",
        "$B",
        "metaclass",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "mc",
        "metaclass",
        "_b_",
        "metaclass",
        "mc",
        "_b_",
        "mc",
        "metaclass",
        "metaclass",
        "mc",
        "metaclass",
        "metaclass",
        "mc",
        "_b_",
        "metaclass",
        "_b_",
        "$B",
        "metaclass",
        "_b_",
        "prepare",
        "class_name",
        "bases",
        "cl_dict",
        "_b_",
        "set_class_item",
        "$B",
        "cl_dict",
        "set_class_item",
        "attr",
        "value",
        "cl_dict",
        "attr",
        "value",
        "cl_dict",
        "cl_dict",
        "attr",
        "class_obj",
        "attr",
        "cl_dict",
        "cl_dict",
        "attr",
        "cl_dict",
        "attr",
        "class_obj",
        "attr",
        "rank",
        "cl_dict",
        "attr",
        "_b_",
        "rank",
        "cl_dict",
        "key",
        "class_obj",
        "attr",
        "$B",
        "cl_dict",
        "attr",
        "key",
        "class_obj",
        "attr",
        "key",
        "attr",
        "attr",
        "set_class_item",
        "attr",
        "class_obj",
        "attr",
        "use_mro_entries",
        "set_class_item",
        "_b_",
        "orig_bases",
        "bases",
        "metaclass",
        "cl_dict",
        "cl_dict",
        "_b_",
        "key",
        "cl_dict",
        "class_dict",
        "key",
        "cl_dict",
        "key",
        "$B",
        "cl_dict",
        "_b_",
        "cl_dict",
        "_b_",
        "it",
        "class_dict",
        "key",
        "get_class_item",
        "key",
        "err",
        "class_dict",
        "_b_",
        "class_dict",
        "class_dict",
        "class_dict",
        "i",
        "mro",
        "i",
        "i",
        "mro0",
        "mro",
        "i",
        "attr",
        "kdict",
        "non_abstract_methods",
        "attr",
        "kdict",
        "attr",
        "v",
        "v",
        "v",
        "v",
        "is_instanciable",
        "abstract_methods",
        "attr",
        "non_abstract_methods",
        "attr",
        "class_obj",
        "_slots",
        "_slots",
        "_slots",
        "_slots",
        "_slots",
        "_b_",
        "_slots",
        "cl_dict",
        "_slots",
        "i",
        "mro",
        "i",
        "attr",
        "mro",
        "i",
        "attr",
        "cl_dict",
        "mro",
        "i",
        "attr",
        "mro",
        "i",
        "attr",
        "mro",
        "i",
        "attr",
        "mro",
        "i",
        "attr",
        "cl_dict",
        "_b_",
        "metaclass",
        "meta_new",
        "metaclass",
        "class_name",
        "bases",
        "cl_dict",
        "kls",
        "kls",
        "class_name",
        "class_name",
        "kls",
        "attr",
        "class_obj",
        "attr",
        "attr",
        "class_obj",
        "attr",
        "class_obj",
        "attr",
        "kls",
        "kls",
        "metaclass",
        "_b_",
        "metaclass",
        "meta_init",
        "kls",
        "class_name",
        "bases",
        "cl_dict",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "kls",
        "i",
        "_b_",
        "bases",
        "i",
        "init_subclass",
        "init_subclass",
        "kls",
        "extra_kwargs",
        "init_subclass",
        "kls",
        "extra_kwargs",
        "bases",
        "$B",
        "metaclass",
        "kls",
        "extra_kwargs",
        "is_instanciable",
        "_b_",
        "abstract_methods",
        "kls",
        "nofactory",
        "kls",
        "class_name",
        "kls",
        "$B",
        "obj",
        "bases",
        "cl_dict",
        "arguments",
        "obj",
        "$B",
        "obj",
        "obj",
        "bases",
        "cl_dict",
        "arguments",
        "arguments",
        "i",
        "len",
        "i",
        "extra_args",
        "arguments",
        "i",
        "_b_",
        "klass",
        "new_func",
        "arguments",
        "instance",
        "klass",
        "_b_",
        "klass",
        "init_func",
        "_b_",
        "instance",
        "extra_args",
        "init_func",
        "args",
        "instance",
        "klass",
        "fmt_spec",
        "_b_",
        "klass",
        "klass",
        "attr",
        "attr",
        "klass",
        "klass",
        "mro",
        "i",
        "len",
        "i",
        "mro",
        "i",
        "mro",
        "i",
        "ann",
        "res",
        "res",
        "ann",
        "res",
        "_b_",
        "ann",
        "_b_",
        "key",
        "ann",
        "res",
        "key",
        "ann",
        "key",
        "res",
        "res",
        "_b_",
        "res",
        "klass",
        "_b_",
        "res",
        "_b_",
        "res",
        "res",
        "_b_",
        "res",
        "klass",
        "klass",
        "_b_",
        "klass",
        "klass",
        "obj",
        "key",
        "value",
        "obj",
        "key",
        "value",
        "method_wrapper",
        "attr",
        "klass",
        "func",
        "klass",
        "klass",
        "method_wrapper",
        "attr",
        "klass",
        "key",
        "klass",
        "key",
        "klass",
        "attr",
        "$test",
        "attr",
        "klass",
        "res",
        "res",
        "res",
        "klass",
        "klass",
        "attr",
        "member_descriptor",
        "attr",
        "klass",
        "klass",
        "klass",
        "attr",
        "klass",
        "attr",
        "klass",
        "attr",
        "$test",
        "klass",
        "attr",
        "klass",
        "res",
        "klass",
        "attr",
        "v",
        "klass",
        "i",
        "mro",
        "i",
        "mro",
        "i",
        "attr",
        "v",
        "res",
        "v",
        "res",
        "v",
        "res",
        "klass",
        "meta",
        "attr",
        "$test",
        "meta",
        "res",
        "res",
        "meta",
        "i",
        "meta_mro",
        "i",
        "meta_mro",
        "i",
        "attr",
        "res",
        "res",
        "$test",
        "res",
        "res",
        "res",
        "_b_",
        "res",
        "klass",
        "res",
        "res",
        "klass",
        "meta_method",
        "$B",
        "meta_method",
        "klass",
        "res",
        "attr",
        "klass",
        "attr",
        "res",
        "res",
        "meta_method",
        "res",
        "meta",
        "getattr",
        "i",
        "meta_mro",
        "i",
        "meta_mro",
        "i",
        "getattr",
        "meta_mro",
        "i",
        "getattr",
        "getattr",
        "klass",
        "attr",
        "res",
        "$test",
        "res",
        "res",
        "_b_",
        "res",
        "res",
        "res",
        "method",
        "res",
        "res",
        "klass",
        "result",
        "res",
        "res",
        "klass",
        "res",
        "klass",
        "result",
        "res",
        "klass",
        "result",
        "res",
        "res",
        "$B",
        "res",
        "klass",
        "attr",
        "$test",
        "res",
        "attr",
        "res",
        "attr",
        "res",
        "$B",
        "res",
        "_b_",
        "res",
        "res",
        "$B",
        "res",
        "klass",
        "$test",
        "res",
        "res",
        "res",
        "cls",
        "_b_",
        "cls",
        "cls",
        "kwargs",
        "$B",
        "arguments",
        "$",
        "$",
        "_b_",
        "$",
        "_b_",
        "_b_",
        "cls",
        "instance",
        "instance",
        "$B",
        "instance",
        "kl",
        "cls",
        "i",
        "kl",
        "i",
        "kl",
        "i",
        "cls",
        "value",
        "value",
        "other",
        "other",
        "meta",
        "name",
        "bases",
        "cl_dict",
        "cl_dict",
        "meta",
        "bases",
        "cl_dict",
        "name",
        "cl_dict",
        "cl_dict",
        "$B",
        "cl_dict",
        "i",
        "items",
        "i",
        "$B",
        "items",
        "i",
        "items",
        "i",
        "key",
        "v",
        "class_dict",
        "key",
        "v",
        "v",
        "$B",
        "v",
        "_b_",
        "set_name",
        "_b_",
        "set_name",
        "v",
        "class_dict",
        "key",
        "v",
        "v",
        "class_dict",
        "v",
        "v",
        "$B",
        "v",
        "$defaults",
        "class_dict",
        "class_dict",
        "class_dict",
        "kls",
        "kls",
        "kls",
        "kls",
        "kls",
        "kls",
        "kls",
        "qualname",
        "kls",
        "qualname",
        "qualname",
        "_b_",
        "value",
        "value",
        "other",
        "other",
        "cls",
        "cls",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "_b_",
        "bases",
        "i",
        "$B",
        "bases",
        "i",
        "bases",
        "i",
        "bases",
        "i",
        "$B",
        "bases",
        "i",
        "bases",
        "i",
        "_b_",
        "_b_",
        "js_func",
        "instance",
        "args",
        "args",
        "arg",
        "i",
        "args",
        "i",
        "$B",
        "arg",
        "js_func",
        "instance",
        "args",
        "attr",
        "instance",
        "instance",
        "attr",
        "instance",
        "attr",
        "f",
        "f",
        "instance",
        "arguments",
        "$B",
        "res",
        "instance",
        "attr",
        "bases",
        "i",
        "bases",
        "i",
        "_b_",
        "bmro",
        "pos",
        "bases",
        "i",
        "bases",
        "i",
        "_tmp",
        "bases",
        "i",
        "_tmp",
        "k",
        "_tmp",
        "k",
        "bmro",
        "pos",
        "_tmp",
        "k",
        "seqs",
        "pos1",
        "bmro",
        "bases",
        "_b_",
        "bases",
        "bases",
        "_b_",
        "_b_",
        "seqs",
        "pos1",
        "bases",
        "cls",
        "i",
        "seqs",
        "i",
        "seqs",
        "i",
        "non_empty",
        "pos",
        "seqs",
        "i",
        "non_empty",
        "i",
        "non_empty",
        "i",
        "non_empty",
        "i",
        "seq",
        "j",
        "non_empty",
        "j",
        "non_empty",
        "j",
        "s",
        "candidate",
        "not_head",
        "pos",
        "s",
        "not_head",
        "candidate",
        "candidate",
        "_b_",
        "mro",
        "mpos",
        "candidate",
        "i",
        "seqs",
        "i",
        "seqs",
        "i",
        "seq",
        "candidate",
        "seqs",
        "i",
        "mro",
        "mro",
        "_b_",
        "mro",
        "mpos",
        "_b_",
        "mro",
        "subclass",
        "klass",
        "_b_",
        "klass",
        "$B",
        "klass",
        "_b_",
        "klass",
        "$B",
        "subclass",
        "_b_",
        "subclass",
        "klass",
        "$B",
        "_b_",
        "$B",
        "$B",
        "wrapper_descriptor",
        "wrapper_descriptor",
        "$B",
        "$B",
        "_b_",
        "$B",
        "klass",
        "klass",
        "_b_",
        "klass",
        "metaclass",
        "_b_",
        "klass",
        "klass",
        "klass",
        "klass",
        "factory",
        "klass",
        "klass",
        "arguments",
        "klass",
        "obj",
        "arguments",
        "obj",
        "factory",
        "klass",
        "klass",
        "arguments",
        "klass",
        "factory",
        "klass",
        "_b_",
        "klass",
        "obj",
        "arguments",
        "obj",
        "factory",
        "arguments",
        "arguments",
        "arguments",
        "arguments",
        "_b_",
        "klass",
        "_b_",
        "call_func",
        "_b_",
        "metaclass",
        "call_func",
        "klass",
        "arguments",
        "factory",
        "$B",
        "factory",
        "klass",
        "klass",
        "factory",
        "$B",
        "$B",
        "attr",
        "klass",
        "method",
        "method",
        "arguments",
        "f",
        "attr",
        "klass",
        "f",
        "method_wrapper",
        "method_wrapper",
        "$B",
        "attr",
        "cls",
        "member_descriptor",
        "cls",
        "attr",
        "member_descriptor",
        "member_descriptor",
        "$B",
        "member_descriptor",
        "$B",
        "$B",
        "func",
        "cls",
        "$B",
        "func",
        "cls",
        "arguments",
        "f",
        "method",
        "f",
        "func",
        "f",
        "method",
        "other",
        "other",
        "other",
        "other",
        "method",
        "other",
        "$B",
        "other",
        "method",
        "arguments",
        "f",
        "$B",
        "f",
        "method",
        "f",
        "method",
        "attr",
        "infos",
        "infos",
        "attr",
        "attr",
        "$B",
        "attr",
        "infos",
        "res",
        "attr",
        "infos",
        "attr",
        "res",
        "infos",
        "attr",
        "method",
        "attr",
        "_b_",
        "attr",
        "$B",
        "attr",
        "method",
        "method",
        "_b_",
        "method",
        "key",
        "value",
        "key",
        "_b_",
        "_b_",
        "key",
        "$B",
        "method",
        "$B",
        "$B",
        "$B",
        "$B",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "WorkerGlobalScope",
        "importScripts",
        "navigator",
        "WorkerNavigator",
        "$B",
        "$fname",
        "argcount",
        "slots",
        "var_names",
        "args",
        "$dobj",
        "extra_pos_args",
        "extra_kw_args",
        "$fname",
        "$B",
        "$fname",
        "args",
        "$args",
        "args",
        "args",
        "i",
        "len",
        "i",
        "$args",
        "args",
        "i",
        "$args",
        "var_names",
        "end_positional",
        "var_names",
        "end_positional",
        "only_positional",
        "var_names",
        "end_positional",
        "nb_pos",
        "$args",
        "nb_pos",
        "$args",
        "nb_pos",
        "nb_pos",
        "$args",
        "nb_pos",
        "has_kw_args",
        "$args",
        "nb_pos",
        "kw_args",
        "kw_args",
        "$B",
        "$fname",
        "kw_args",
        "extra_pos_args",
        "slots",
        "extra_pos_args",
        "slots",
        "extra_pos_args",
        "_b_",
        "extra_kw_args",
        "extra_kw",
        "_b_",
        "_b_",
        "nb_pos",
        "argcount",
        "extra_pos_args",
        "extra_pos_args",
        "msg",
        "$fname",
        "argcount",
        "argcount",
        "_b_",
        "msg",
        "i",
        "nb_pos",
        "i",
        "slots",
        "extra_pos_args",
        "$args",
        "i",
        "nb_pos",
        "argcount",
        "i",
        "nb_pos",
        "i",
        "slots",
        "var_names",
        "i",
        "$args",
        "i",
        "filled",
        "filled",
        "argcount",
        "argcount",
        "var_names",
        "has_kw_args",
        "extra_kw_args",
        "slots",
        "extra_kw_args",
        "extra_kw",
        "slots",
        "has_kw_args",
        "key",
        "kw_args",
        "kw_args",
        "key",
        "$B",
        "key",
        "slots",
        "key1",
        "extra_kw_args",
        "key",
        "key",
        "key",
        "extra_kw",
        "key",
        "value",
        "extra_kw",
        "extra_kw",
        "_b_",
        "$fname",
        "key",
        "slots",
        "key1",
        "_b_",
        "$fname",
        "key",
        "only_positional",
        "only_positional",
        "key1",
        "_b_",
        "$fname",
        "key",
        "slots",
        "key1",
        "value",
        "attr",
        "slots",
        "slots",
        "attr",
        "$dobj",
        "attr",
        "slots",
        "attr",
        "$dobj",
        "attr",
        "missing",
        "attr",
        "missing",
        "missing",
        "_b_",
        "$fname",
        "missing",
        "$fname",
        "missing",
        "msg",
        "missing",
        "_b_",
        "msg",
        "extra_kw_args",
        "slots",
        "extra_kw_args",
        "extra_kw",
        "slots",
        "$B",
        "name",
        "received",
        "expected",
        "positional",
        "received",
        "expected",
        "expected",
        "received",
        "_b_",
        "name",
        "missing",
        "missing",
        "positional",
        "received",
        "_b_",
        "name",
        "expected",
        "expected",
        "$B",
        "obj",
        "obj",
        "$B",
        "obj",
        "klass",
        "obj",
        "obj",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "obj",
        "$B",
        "$B",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "_b_",
        "klass",
        "$B",
        "obj",
        "$B",
        "obj",
        "$B",
        "items",
        "$B",
        "ix",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "py",
        "indent",
        "item",
        "indent",
        "py",
        "indent",
        "py",
        "ix",
        "items",
        "py",
        "ix",
        "$B",
        "module_name",
        "parent_scope",
        "items",
        "line_num",
        "$B",
        "ix",
        "res",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "py",
        "indent",
        "item",
        "indent",
        "py",
        "indent",
        "res",
        "items",
        "line_num",
        "module_name",
        "ix",
        "$B",
        "py",
        "line_info",
        "module_name",
        "dictcomp_name",
        "parent_scope",
        "line_num",
        "root",
        "js",
        "res",
        "js",
        "dictcomp_name",
        "js",
        "$B",
        "dictcomp_name",
        "$B",
        "dictcomp_name",
        "js",
        "$B",
        "module_name",
        "parent_scope",
        "items",
        "line_num",
        "set_comp",
        "$B",
        "set_comp",
        "$B",
        "$ix",
        "genexpr_name",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "py",
        "indent",
        "item",
        "indent",
        "py",
        "indent",
        "py",
        "items",
        "line_num",
        "module_name",
        "$B",
        "py",
        "line_info",
        "genexpr_name",
        "genexpr_name",
        "parent_scope",
        "line_num",
        "root",
        "js",
        "js",
        "lines",
        "js",
        "genexpr_name",
        "genexpr_name",
        "js",
        "genexpr_name",
        "js",
        "js",
        "$B",
        "name",
        "name",
        "name",
        "name",
        "key",
        "$B",
        "key",
        "len",
        "name",
        "$B",
        "key",
        "$B",
        "key",
        "$B",
        "name",
        "$B",
        "name",
        "name",
        "alt_name",
        "name",
        "$B",
        "alt_name",
        "$B",
        "attr",
        "attr",
        "$B",
        "attr",
        "attr",
        "attr",
        "$B",
        "name",
        "global_ns",
        "$B",
        "$B",
        "frame",
        "name",
        "frame",
        "name",
        "frame",
        "name",
        "frame",
        "name",
        "_b_",
        "name",
        "_b_",
        "name",
        "frame",
        "frame",
        "frame",
        "frame",
        "_b_",
        "name",
        "_b_",
        "name",
        "$B",
        "name",
        "search_ids",
        "i",
        "$B",
        "i",
        "$B",
        "i",
        "search_ids",
        "frame",
        "frame",
        "name",
        "frame",
        "name",
        "search_ids",
        "frame",
        "frame",
        "name",
        "frame",
        "name",
        "i",
        "search_ids",
        "i",
        "search_ids",
        "i",
        "$B",
        "search_id",
        "$B",
        "search_id",
        "name",
        "$B",
        "search_id",
        "name",
        "_b_",
        "$B",
        "name",
        "$B",
        "name",
        "$B",
        "$B",
        "frame",
        "name",
        "frame",
        "name",
        "_b_",
        "$B",
        "name",
        "$B",
        "name",
        "value",
        "value",
        "value",
        "_b_",
        "name",
        "_b_",
        "name",
        "_b_",
        "$B",
        "name",
        "$B",
        "name",
        "value",
        "value",
        "value",
        "_b_",
        "$B",
        "name",
        "$B",
        "name",
        "value",
        "value",
        "value",
        "$B",
        "i",
        "i",
        "res",
        "$B",
        "i",
        "name",
        "res",
        "res",
        "res",
        "$B",
        "i",
        "name",
        "res",
        "res",
        "_b_",
        "$B",
        "name",
        "$B",
        "name",
        "scope_id",
        "$B",
        "i",
        "i",
        "$B",
        "i",
        "res",
        "frame",
        "name",
        "res",
        "res",
        "frame",
        "res",
        "frame",
        "name",
        "res",
        "res",
        "frame",
        "scope_id",
        "res",
        "frame",
        "name",
        "res",
        "res",
        "_b_",
        "$B",
        "name",
        "$B",
        "src",
        "src",
        "src",
        "src",
        "_b_",
        "src",
        "src",
        "src",
        "_b_",
        "src",
        "src",
        "src",
        "i",
        "len",
        "i",
        "res",
        "$B",
        "src",
        "i",
        "res",
        "$B",
        "src",
        "klass",
        "klass",
        "$B",
        "src",
        "src",
        "src",
        "src",
        "$B",
        "src",
        "$B",
        "src",
        "$B",
        "src",
        "$B",
        "src",
        "$B",
        "src",
        "$B",
        "src",
        "$B",
        "src",
        "$B",
        "obj",
        "key",
        "key",
        "$B",
        "key",
        "key",
        "key",
        "obj",
        "obj",
        "key",
        "res",
        "_b_",
        "res",
        "$B",
        "obj",
        "start",
        "stop",
        "start",
        "start",
        "start",
        "$B",
        "start",
        "start",
        "start",
        "start",
        "obj",
        "stop",
        "obj",
        "start",
        "stop",
        "$B",
        "stop",
        "stop",
        "stop",
        "stop",
        "obj",
        "obj",
        "start",
        "stop",
        "$B",
        "obj",
        "start",
        "stop",
        "step",
        "step",
        "step",
        "$B",
        "obj",
        "start",
        "stop",
        "step",
        "_b_",
        "step",
        "$B",
        "step",
        "start",
        "start",
        "step",
        "obj",
        "start",
        "$B",
        "start",
        "start",
        "start",
        "start",
        "obj",
        "stop",
        "stop",
        "step",
        "obj",
        "stop",
        "$B",
        "stop",
        "stop",
        "stop",
        "stop",
        "obj",
        "step",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "obj",
        "i",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "obj",
        "i",
        "res",
        "obj",
        "obj",
        "_b_",
        "$B",
        "obj",
        "item",
        "obj",
        "obj",
        "_b_",
        "item",
        "is_list",
        "obj",
        "item",
        "item",
        "item",
        "obj",
        "item",
        "obj",
        "item",
        "obj",
        "item",
        "index_error",
        "obj",
        "item",
        "$B",
        "item",
        "err",
        "is_list",
        "obj",
        "item",
        "item",
        "item",
        "item",
        "obj",
        "item",
        "obj",
        "item",
        "obj",
        "item",
        "index_error",
        "obj",
        "obj",
        "$B",
        "obj",
        "_b_",
        "class_gi",
        "_b_",
        "class_gi",
        "item",
        "obj",
        "class_gi",
        "$B",
        "obj",
        "_b_",
        "class_gi",
        "_b_",
        "class_gi",
        "obj",
        "item",
        "$B",
        "obj",
        "_b_",
        "gi",
        "_b_",
        "gi",
        "item",
        "_b_",
        "$B",
        "obj",
        "$B",
        "obj",
        "key",
        "value",
        "key",
        "$B",
        "key",
        "err",
        "_b_",
        "key",
        "_b_",
        "_b_",
        "key",
        "obj",
        "$B",
        "obj",
        "s",
        "s",
        "s",
        "value",
        "key",
        "key",
        "obj",
        "obj",
        "key",
        "obj",
        "key",
        "_b_",
        "obj",
        "key",
        "value",
        "$B",
        "obj",
        "start",
        "stop",
        "value",
        "start",
        "start",
        "start",
        "$B",
        "start",
        "start",
        "start",
        "start",
        "obj",
        "stop",
        "stop",
        "obj",
        "stop",
        "$B",
        "stop",
        "stop",
        "stop",
        "stop",
        "obj",
        "_b_",
        "value",
        "obj",
        "obj",
        "start",
        "stop",
        "start",
        "res",
        "$B",
        "obj",
        "start",
        "stop",
        "step",
        "value",
        "step",
        "step",
        "$B",
        "obj",
        "start",
        "stop",
        "value",
        "step",
        "_b_",
        "step",
        "$B",
        "step",
        "start",
        "start",
        "step",
        "obj",
        "start",
        "$B",
        "start",
        "stop",
        "stop",
        "step",
        "obj",
        "stop",
        "$B",
        "stop",
        "_b_",
        "value",
        "step",
        "test",
        "i",
        "i",
        "stop",
        "test",
        "i",
        "i",
        "stop",
        "test",
        "i",
        "i",
        "step",
        "nb",
        "nb",
        "repl",
        "_b_",
        "repl",
        "nb",
        "test",
        "i",
        "i",
        "step",
        "obj",
        "i",
        "repl",
        "j",
        "j",
        "$B",
        "obj",
        "item",
        "value",
        "obj",
        "obj",
        "item",
        "_b_",
        "obj",
        "_b_",
        "item",
        "item",
        "obj",
        "obj",
        "item",
        "_b_",
        "obj",
        "item",
        "value",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "item",
        "value",
        "obj",
        "$B",
        "$B",
        "obj",
        "item",
        "value",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "item",
        "value",
        "$B",
        "obj",
        "item",
        "value",
        "$B",
        "obj",
        "item",
        "incr",
        "obj",
        "item",
        "obj",
        "item",
        "obj",
        "item",
        "incr",
        "incr",
        "i",
        "len",
        "i",
        "obj",
        "item",
        "incr",
        "i",
        "obj",
        "item",
        "incr",
        "obj",
        "item",
        "incr",
        "$B",
        "ga",
        "ga",
        "obj",
        "item",
        "err",
        "ga",
        "obj",
        "item",
        "ga",
        "ga",
        "obj",
        "item",
        "incr",
        "augm_func",
        "incr",
        "$B",
        "augm_ops",
        "i",
        "len",
        "i",
        "augm_item_src",
        "augm_ops",
        "i",
        "augm_code",
        "augm_code",
        "augm_ops",
        "i",
        "eval",
        "augm_ops",
        "i",
        "augm_code",
        "$B",
        "fname",
        "arg",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "_b_",
        "mapping",
        "$B",
        "mapping",
        "_b_",
        "it",
        "key",
        "_b_",
        "fname",
        "arg",
        "key",
        "_b_",
        "fname",
        "key",
        "arg",
        "key",
        "getter",
        "key",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "arg",
        "$B",
        "arguments",
        "arguments",
        "$B",
        "arguments",
        "_b_",
        "last",
        "res",
        "_b_",
        "it",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "res",
        "$B",
        "expr",
        "$B",
        "expr",
        "_b_",
        "expr",
        "$B",
        "$B",
        "$B",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "$B",
        "item",
        "_set",
        "method",
        "$B",
        "_set",
        "$B",
        "_set",
        "err",
        "method",
        "$B",
        "method",
        "_set",
        "item",
        "_iter",
        "_b_",
        "_set",
        "err",
        "_iter",
        "_b_",
        "_iter",
        "$B",
        "elt",
        "item",
        "err",
        "f",
        "$B",
        "_set",
        "err",
        "_b_",
        "$B",
        "_set",
        "f",
        "i",
        "f",
        "i",
        "$B",
        "elt",
        "item",
        "err",
        "err",
        "_b_",
        "err",
        "$B",
        "callable",
        "callable",
        "$B",
        "callable",
        "callable",
        "callable",
        "callable",
        "callable",
        "callable",
        "callable",
        "callable",
        "$B",
        "callable",
        "callable",
        "$B",
        "callable",
        "callable",
        "_b_",
        "$B",
        "callable",
        "$B",
        "callable",
        "err",
        "_b_",
        "$B",
        "callable",
        "$B",
        "$io",
        "$io",
        "$io",
        "msg",
        "msg",
        "_b_",
        "$B",
        "$io",
        "$B",
        "$io",
        "$B",
        "$io",
        "$B",
        "name",
        "_b_",
        "_b_",
        "items",
        "klass",
        "_b_",
        "items",
        "items",
        "name",
        "_b_",
        "_b_",
        "protocol",
        "$B",
        "_b_",
        "_b_",
        "$B",
        "klass",
        "klass",
        "op",
        "klass",
        "other",
        "op",
        "klass",
        "$B",
        "other",
        "_b_",
        "msg",
        "$B",
        "klass",
        "ropnames",
        "j",
        "_len_j",
        "j",
        "klass",
        "ropnames",
        "j",
        "klass",
        "ropnames",
        "j",
        "name",
        "sign",
        "other",
        "$B",
        "other",
        "name",
        "err",
        "$err",
        "sign",
        "klass",
        "other",
        "ropnames",
        "j",
        "ropsigns",
        "j",
        "$B",
        "$B",
        "$B",
        "$b",
        "$B",
        "_str",
        "pos",
        "$b",
        "$b",
        "_str",
        "$B",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "_b_",
        "value",
        "_b_",
        "value",
        "_b_",
        "value",
        "_b_",
        "value",
        "value",
        "$B",
        "value",
        "v",
        "e",
        "$B",
        "value",
        "v",
        "e",
        "_b_",
        "$B",
        "value",
        "$B",
        "obj",
        "methods",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "obj",
        "$B",
        "obj",
        "i",
        "methods",
        "i",
        "$B",
        "klass",
        "methods",
        "i",
        "missing",
        "method",
        "missing",
        "method",
        "obj",
        "_b_",
        "res",
        "expected_class",
        "methods",
        "i",
        "res",
        "methods",
        "i",
        "expected_class",
        "methods",
        "i",
        "_b_",
        "methods",
        "i",
        "expected_class",
        "methods",
        "i",
        "$B",
        "res",
        "res",
        "$B",
        "item",
        "item",
        "item",
        "item",
        "item",
        "$B",
        "item",
        "_b_",
        "item",
        "_b_",
        "item",
        "$B",
        "item",
        "_b_",
        "method",
        "_b_",
        "method",
        "method",
        "method",
        "$B",
        "method",
        "$B",
        "method",
        "_b_",
        "$B",
        "item",
        "$B",
        "v",
        "v",
        "v",
        "v",
        "v",
        "$B",
        "v",
        "_b_",
        "$B",
        "v",
        "_b_",
        "$B",
        "v",
        "$B",
        "frame",
        "$B",
        "frame",
        "$B",
        "frame",
        "$B",
        "$B",
        "frame",
        "frame",
        "$B",
        "$B",
        "frame",
        "_b_",
        "$B",
        "i",
        "i",
        "$B",
        "i",
        "$B",
        "_b_",
        "$B",
        "$B",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "$B",
        "$B",
        "$B",
        "top_frame",
        "$B",
        "_b_",
        "top_frame",
        "top_frame",
        "$B",
        "$B",
        "$B",
        "trace_func",
        "frame_obj",
        "$B",
        "exc",
        "exc",
        "$B",
        "exc",
        "$B",
        "$B",
        "$B",
        "top_frame",
        "$B",
        "_b_",
        "top_frame",
        "$B",
        "$B",
        "$B",
        "trace_func",
        "frame_obj",
        "_b_",
        "$B",
        "line_info",
        "$B",
        "$B",
        "$B",
        "top_frame",
        "$B",
        "_b_",
        "top_frame",
        "line_info",
        "top_frame",
        "trace_func",
        "_b_",
        "$B",
        "$B",
        "$B",
        "top_frame",
        "trace_func",
        "frame_obj",
        "_b_",
        "$B",
        "value",
        "$B",
        "$B",
        "top_frame",
        "$B",
        "$B",
        "$B",
        "top_frame",
        "$B",
        "_b_",
        "trace_func",
        "frame_obj",
        "value",
        "frame",
        "key",
        "frame",
        "frame",
        "key",
        "frame",
        "key",
        "frame",
        "key",
        "gen_obj",
        "attr",
        "gen_obj",
        "attr",
        "$B",
        "gen_obj",
        "attr",
        "$B",
        "cm_exit",
        "cm_exit",
        "$B",
        "frame",
        "frame",
        "frame",
        "frame",
        "cm_exit",
        "$B",
        "arg",
        "$B",
        "$B",
        "arg",
        "arg",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "_b_",
        "$B",
        "arg",
        "$B",
        "frame",
        "exit_ctx_managers_in_generators",
        "frame",
        "closed_cm",
        "$B",
        "$B",
        "$B",
        "_b_",
        "$B",
        "arg",
        "$B",
        "$B",
        "$B",
        "$B",
        "exit_ctx_managers_in_generators",
        "frame",
        "$B",
        "i",
        "i",
        "$B",
        "i",
        "frame",
        "$B",
        "i",
        "frame",
        "$B",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "arg",
        "min_int",
        "arg",
        "max_int",
        "$B",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "z",
        "max_int",
        "z",
        "$B",
        "$B",
        "x",
        "$B",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "$B",
        "x",
        "$B",
        "x",
        "err",
        "err",
        "_b_",
        "_b_",
        "$B",
        "x",
        "$B",
        "y",
        "err",
        "$B",
        "method",
        "x",
        "y",
        "res",
        "_b_",
        "$B",
        "x",
        "y",
        "res",
        "$B",
        "x",
        "y",
        "x",
        "y",
        "x",
        "min_int",
        "x",
        "max_int",
        "y",
        "min_int",
        "y",
        "max_int",
        "z",
        "min_int",
        "z",
        "max_int",
        "z",
        "$B",
        "$B",
        "x",
        "$B",
        "y",
        "$B",
        "x",
        "y",
        "x",
        "min_int",
        "x",
        "max_int",
        "y",
        "min_int",
        "y",
        "max_int",
        "x",
        "y",
        "$B",
        "$B",
        "x",
        "$B",
        "y",
        "$B",
        "x",
        "y",
        "x",
        "y",
        "x",
        "min_int",
        "x",
        "max_int",
        "y",
        "min_int",
        "y",
        "max_int",
        "z",
        "min_int",
        "z",
        "max_int",
        "z",
        "$B",
        "$B",
        "x",
        "$B",
        "y",
        "$B",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "min_int",
        "x",
        "max_int",
        "y",
        "min_int",
        "y",
        "max_int",
        "z",
        "min_int",
        "z",
        "max_int",
        "z",
        "x",
        "x",
        "$B",
        "y",
        "y",
        "$B",
        "x",
        "isNaN",
        "x",
        "y",
        "isNaN",
        "y",
        "_b_",
        "$B",
        "$B",
        "x",
        "$B",
        "y",
        "z",
        "$B",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "min_int",
        "x",
        "max_int",
        "y",
        "min_int",
        "y",
        "max_int",
        "z",
        "min_int",
        "z",
        "max_int",
        "z",
        "x",
        "x",
        "$B",
        "y",
        "y",
        "$B",
        "x",
        "isNaN",
        "x",
        "y",
        "isNaN",
        "y",
        "_b_",
        "$B",
        "$B",
        "x",
        "$B",
        "y",
        "z",
        "$B",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "y",
        "x",
        "y",
        "x",
        "$B",
        "x",
        "y",
        "$B",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "x",
        "y",
        "y",
        "x",
        "y",
        "x",
        "$B",
        "x",
        "y",
        "$B",
        "op",
        "x",
        "y",
        "x",
        "y",
        "x1",
        "y1",
        "x",
        "y",
        "op",
        "x1",
        "y1",
        "x1",
        "y1",
        "x1",
        "y1",
        "x1",
        "y1",
        "x1",
        "y1",
        "x1",
        "y1",
        "x",
        "x",
        "op",
        "x",
        "y",
        "op",
        "x",
        "y",
        "_b_",
        "method2comp",
        "op",
        "$B",
        "x",
        "$B",
        "y",
        "x",
        "y",
        "y",
        "x",
        "rev_op",
        "reversed_op",
        "op",
        "op",
        "$B",
        "y",
        "rev_op",
        "res",
        "$B",
        "$B",
        "y",
        "rev_op",
        "x",
        "res",
        "_b_",
        "res",
        "compared",
        "res",
        "$B",
        "$B",
        "x",
        "op",
        "y",
        "res",
        "_b_",
        "res",
        "compared",
        "rev_op",
        "reversed_op",
        "op",
        "op",
        "res",
        "$B",
        "$B",
        "y",
        "rev_op",
        "x",
        "res",
        "_b_",
        "res",
        "op",
        "_b_",
        "op",
        "_b_",
        "_b_",
        "method2comp",
        "op",
        "$B",
        "x",
        "$B",
        "y",
        "$B",
        "op",
        "x",
        "y",
        "x",
        "$B",
        "x",
        "y",
        "$B",
        "y",
        "x_class",
        "y_class",
        "method",
        "$B",
        "$B",
        "x",
        "op",
        "err",
        "err",
        "_b_",
        "$B",
        "x",
        "_b_",
        "opname2opsign",
        "op",
        "kl_name",
        "kl_name",
        "err",
        "method",
        "y",
        "method",
        "$B",
        "$B",
        "x",
        "op",
        "err",
        "err",
        "_b_",
        "err",
        "res",
        "$B",
        "$B",
        "y",
        "op",
        "x",
        "res",
        "_b_",
        "res",
        "_b_",
        "opname2opsign",
        "op",
        "op",
        "$B",
        "x",
        "$B",
        "y",
        "res",
        "method",
        "y",
        "res",
        "_b_",
        "res",
        "$B",
        "$B",
        "y",
        "op",
        "x",
        "res",
        "_b_",
        "res",
        "_b_",
        "opname2opsign",
        "op",
        "op",
        "$B",
        "x",
        "$B",
        "y",
        "res",
        "$B",
        "o",
        "o",
        "o",
        "o",
        "_b_",
        "__BRYTHON__",
        "obj",
        "fromIndex",
        "fromIndex",
        "fromIndex",
        "fromIndex",
        "i",
        "len",
        "i",
        "i",
        "obj",
        "i",
        "count",
        "count",
        "count",
        "count",
        "result",
        "pattern",
        "count",
        "pattern",
        "pattern",
        "result",
        "pattern",
        "$B",
        "$B",
        "eval",
        "bltns",
        "_b_",
        "_b_",
        "$B",
        "$B",
        "$B",
        "name",
        "expected",
        "args",
        "args",
        "args",
        "len",
        "last",
        "last",
        "last",
        "kw",
        "kw",
        "kw",
        "_b_",
        "kw",
        "len",
        "len",
        "expected",
        "expected",
        "_b_",
        "name",
        "len",
        "_b_",
        "name",
        "expected",
        "expected",
        "len",
        "$B",
        "name",
        "x",
        "y",
        "x",
        "name",
        "x",
        "y",
        "x",
        "x",
        "x",
        "x",
        "y",
        "y",
        "_b_",
        "name",
        "_b_",
        "NoneType",
        "attr",
        "no_set_attr",
        "NoneType",
        "attr",
        "NoneType",
        "$op",
        "$B",
        "$B",
        "$op",
        "key",
        "NoneType",
        "key",
        "op",
        "other",
        "_b_",
        "$op",
        "$func",
        "$func",
        "$func",
        "f",
        "f",
        "$func",
        "$B",
        "NoneType",
        "obj",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "obj",
        "isinstance",
        "obj",
        "_b_",
        "obj",
        "$B",
        "$B",
        "obj",
        "_b_",
        "obj",
        "isinstance",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "obj",
        "$B",
        "obj",
        "$B",
        "klass",
        "err",
        "err",
        "_b_",
        "_b_",
        "$B",
        "obj",
        "err",
        "$B",
        "method",
        "obj",
        "obj",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "obj",
        "iter",
        "obj",
        "next",
        "iterable",
        "$B",
        "elt",
        "err",
        "obj",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "obj",
        "iter",
        "obj",
        "next",
        "iterable",
        "$B",
        "elt",
        "err",
        "obj",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "obj",
        "repr",
        "obj",
        "i",
        "res",
        "i",
        "cp",
        "res",
        "i",
        "cp",
        "res1",
        "res",
        "i",
        "cp",
        "res1",
        "cp",
        "cp",
        "s",
        "s",
        "s",
        "res1",
        "s",
        "res1",
        "obj",
        "prefix",
        "prefix",
        "prefix",
        "obj",
        "$B",
        "obj",
        "prefix",
        "$B",
        "obj",
        "prefix",
        "$B",
        "obj",
        "$B",
        "obj",
        "value",
        "_b_",
        "value",
        "prefix",
        "value",
        "prefix",
        "value",
        "obj",
        "isinstance",
        "obj",
        "_b_",
        "$builtin_base_convert_helper",
        "obj",
        "obj",
        "$B",
        "obj",
        "$B",
        "klass",
        "err",
        "err",
        "_b_",
        "_b_",
        "$B",
        "obj",
        "err",
        "$B",
        "method",
        "obj",
        "$builtin_base_convert_helper",
        "res",
        "obj",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "obj",
        "bin_hex_oct",
        "obj",
        "$B",
        "$B",
        "$B",
        "missing",
        "hook",
        "missing",
        "_b_",
        "$B",
        "hook",
        "arguments",
        "obj",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "obj",
        "hasattr",
        "obj",
        "i",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "i",
        "i",
        "i",
        "_b_",
        "i",
        "$B",
        "func",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "func",
        "func",
        "arguments",
        "f",
        "$B",
        "func",
        "key",
        "func",
        "f",
        "key",
        "func",
        "key",
        "f",
        "func",
        "func",
        "f",
        "obj",
        "cls",
        "f",
        "cls",
        "arguments",
        "method",
        "$B",
        "method",
        "cls",
        "f",
        "func",
        "cls",
        "func",
        "method",
        "f",
        "$B",
        "f",
        "func",
        "f",
        "$B",
        "classmethod",
        "$B",
        "$B",
        "code",
        "code",
        "code",
        "attr",
        "attr",
        "attr",
        "$B",
        "code",
        "$B",
        "arguments",
        "$B",
        "$B",
        "module_name",
        "$",
        "code",
        "$",
        "$",
        "$",
        "$",
        "$",
        "interactive",
        "$",
        "$",
        "$B",
        "lines",
        "_b_",
        "$B",
        "$",
        "module_name",
        "module_name",
        "$",
        "$B",
        "obj",
        "attr",
        "check_no_kw",
        "obj",
        "attr",
        "check_nb_args",
        "arguments",
        "attr",
        "_b_",
        "$B",
        "attr",
        "$B",
        "obj",
        "attr",
        "$B",
        "name",
        "is_global",
        "obj",
        "obj",
        "obj",
        "attr",
        "obj",
        "attr",
        "$B",
        "obj",
        "attr",
        "obj",
        "attr",
        "$B",
        "$B",
        "is_global",
        "frame",
        "name",
        "found",
        "frame",
        "name",
        "frame",
        "name",
        "frame",
        "frame",
        "frame",
        "name",
        "found",
        "frame",
        "name",
        "frame",
        "name",
        "found",
        "_b_",
        "name",
        "obj",
        "obj",
        "$B",
        "$B",
        "frame",
        "_b_",
        "attr",
        "globals_obj",
        "attr",
        "attr",
        "res",
        "pos",
        "attr",
        "_b_",
        "res",
        "res",
        "check_nb_args",
        "arguments",
        "check_no_kw",
        "obj",
        "obj",
        "$B",
        "obj",
        "obj",
        "$B",
        "obj",
        "$B",
        "dir_func",
        "obj",
        "$B",
        "$B",
        "obj",
        "res",
        "_b_",
        "res",
        "res",
        "err",
        "attr",
        "obj",
        "attr",
        "attr",
        "obj",
        "attr",
        "res",
        "pos",
        "attr",
        "res",
        "res",
        "x",
        "y",
        "check_no_kw",
        "x",
        "y",
        "check_nb_args",
        "arguments",
        "x",
        "$B",
        "x",
        "$B",
        "klass",
        "_b_",
        "dm",
        "_b_",
        "dm",
        "x",
        "y",
        "_b_",
        "$B",
        "klass",
        "x",
        "y",
        "$B",
        "klass",
        "x",
        "y",
        "$B",
        "$B",
        "arguments",
        "iter",
        "$ns",
        "$ns",
        "start",
        "_iter",
        "start",
        "$B",
        "next",
        "$B",
        "$B",
        "attr",
        "attr",
        "$B",
        "attr",
        "attr",
        "attr",
        "$B",
        "attr",
        "$B",
        "attr",
        "attr",
        "attr",
        "src",
        "_globals",
        "_locals",
        "$B",
        "arguments",
        "_b_",
        "_b_",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "$",
        "$B",
        "$B",
        "current_frame",
        "current_frame",
        "current_frame",
        "$B",
        "src",
        "code",
        "mode",
        "src",
        "src",
        "src",
        "src",
        "_b_",
        "$B",
        "$B",
        "_globals",
        "_b_",
        "current_locals_id",
        "current_globals_id",
        "locals_id",
        "globals_id",
        "locals_id",
        "locals_id",
        "attr",
        "current_frame",
        "local_scope",
        "attr",
        "local_scope",
        "attr",
        "globals_id",
        "globals_id",
        "attr",
        "current_frame",
        "global_scope",
        "attr",
        "global_scope",
        "attr",
        "local_scope",
        "global_scope",
        "global_scope",
        "$B",
        "parent_scope",
        "local_scope",
        "eval",
        "parent_scope",
        "_globals",
        "_b_",
        "_b_",
        "$B",
        "_globals",
        "_globals",
        "globals_id",
        "globals_name",
        "_globals",
        "_globals",
        "globals_id",
        "_locals",
        "_globals",
        "_locals",
        "_b_",
        "locals_id",
        "globals_id",
        "parent_scope",
        "$B",
        "globals_id",
        "$B",
        "parent_scope",
        "locals_id",
        "grandparent_scope",
        "attr",
        "_globals",
        "grandparent_scope",
        "attr",
        "attr",
        "_locals",
        "parent_scope",
        "attr",
        "$B",
        "globals_id",
        "$B",
        "current_globals_id",
        "eval",
        "globals_id",
        "locals_id",
        "_globals",
        "_b_",
        "current_frame",
        "globals_id",
        "eval",
        "ex",
        "attr",
        "gobj",
        "attr",
        "obj",
        "attr",
        "gobj",
        "attr",
        "eval",
        "globals_id",
        "_globals",
        "_globals",
        "_b_",
        "_globals",
        "_globals",
        "items",
        "globals_is_dict",
        "eval",
        "globals_id",
        "item",
        "items",
        "$B",
        "item",
        "eval",
        "globals_id",
        "item",
        "item",
        "err",
        "err",
        "item",
        "_globals",
        "_locals",
        "_b_",
        "_globals",
        "_b_",
        "eval",
        "locals_id",
        "globals_id",
        "current_frame",
        "attr",
        "current_frame",
        "attr",
        "attr",
        "obj",
        "attr",
        "lobj",
        "attr",
        "eval",
        "locals_id",
        "_locals",
        "_locals",
        "locals_id_dict",
        "_b_",
        "_locals",
        "_locals",
        "items",
        "item",
        "items",
        "$B",
        "item",
        "eval",
        "locals_id",
        "item",
        "item",
        "err",
        "err",
        "item",
        "eval",
        "locals_id",
        "_locals",
        "_globals",
        "_b_",
        "_locals",
        "_b_",
        "current_frame",
        "current_frame",
        "eval",
        "locals_id",
        "$B",
        "src",
        "globals_id",
        "locals_id",
        "parent_scope",
        "_globals",
        "_b_",
        "_locals",
        "_b_",
        "attr",
        "_globals",
        "root",
        "attr",
        "root",
        "root",
        "try_node",
        "try_node",
        "instr",
        "try_node",
        "root",
        "root",
        "i",
        "children",
        "i",
        "root",
        "children",
        "i",
        "mode",
        "_b_",
        "src",
        "mode",
        "$B",
        "root",
        "last",
        "last",
        "last",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "js",
        "root",
        "eval",
        "locals_id",
        "eval",
        "globals_id",
        "_globals",
        "_b_",
        "globals_id",
        "locals_id",
        "js",
        "globals_obj",
        "locals_obj",
        "current_globals_obj",
        "current_frame",
        "current_locals_obj",
        "current_frame",
        "globals_id",
        "locals_id",
        "current_globals_id",
        "current_locals_id",
        "js",
        "globals_obj",
        "locals_obj",
        "current_globals_obj",
        "current_locals_obj",
        "$",
        "$",
        "$",
        "res",
        "_b_",
        "res",
        "_b_",
        "_b_",
        "res",
        "js",
        "root",
        "eval",
        "js",
        "$",
        "$",
        "res",
        "res",
        "_b_",
        "_b_",
        "res",
        "gns",
        "eval",
        "globals_id",
        "$B",
        "$B",
        "globals_id",
        "gns",
        "$B",
        "$B",
        "_locals",
        "_b_",
        "lns",
        "eval",
        "locals_id",
        "attr",
        "lns",
        "$B",
        "attr",
        "attr1",
        "_locals",
        "_locals",
        "attr",
        "lns",
        "attr",
        "_b_",
        "_locals",
        "attr1",
        "lns",
        "attr",
        "attr",
        "lns",
        "attr",
        "current_frame",
        "attr",
        "lns",
        "attr",
        "_globals",
        "_b_",
        "globals_is_dict",
        "_globals",
        "_globals",
        "attr",
        "gns",
        "attr1",
        "$B",
        "attr",
        "attr1",
        "globals_is_dict",
        "_b_",
        "_globals",
        "attr",
        "gns",
        "attr",
        "_globals",
        "attr1",
        "gns",
        "attr",
        "attr",
        "_globals",
        "attr",
        "attr",
        "_globals",
        "attr",
        "attr",
        "gns",
        "attr",
        "current_frame",
        "attr",
        "gns",
        "attr",
        "res",
        "_b_",
        "res",
        "err",
        "err",
        "src",
        "err",
        "globals_id",
        "err",
        "$B",
        "err",
        "err",
        "i",
        "len",
        "i",
        "err",
        "i",
        "current_frame",
        "err",
        "err",
        "i",
        "err",
        "$B",
        "stack_len",
        "$B",
        "root",
        "js",
        "gns",
        "lns",
        "$B",
        "globals_id",
        "$B",
        "locals_id",
        "$$eval",
        "src",
        "globals",
        "locals",
        "$B",
        "arguments",
        "_b_",
        "_b_",
        "$",
        "$",
        "$",
        "$$eval",
        "src",
        "globals",
        "locals",
        "_b_",
        "exec",
        "_b_",
        "exit",
        "exit",
        "$B",
        "func",
        "iterable",
        "check_no_kw",
        "func",
        "iterable",
        "check_nb_args",
        "arguments",
        "iterable",
        "iter",
        "iterable",
        "func",
        "_b_",
        "func",
        "$B",
        "func",
        "iterable",
        "next",
        "_item",
        "_item",
        "$B",
        "value",
        "format_spec",
        "$B",
        "arguments",
        "value",
        "$B",
        "value",
        "$B",
        "klass",
        "err",
        "err",
        "_b_",
        "_b_",
        "_b_",
        "value",
        "err",
        "$B",
        "method",
        "value",
        "$",
        "attr",
        "cname",
        "cname",
        "attr",
        "_b_",
        "msg",
        "_b_",
        "msg",
        "_b_",
        "msg",
        "_b_",
        "cname",
        "attr",
        "attr",
        "attr",
        "_b_",
        "cname",
        "attr",
        "$B",
        "arguments",
        "missing",
        "$B",
        "$",
        "$",
        "$",
        "missing",
        "$",
        "klass",
        "attr",
        "klass",
        "klass",
        "attr",
        "klass",
        "attr",
        "klass",
        "mro",
        "i",
        "len",
        "i",
        "mro",
        "i",
        "attr",
        "mro",
        "i",
        "attr",
        "$B",
        "obj",
        "attr",
        "_default",
        "attr",
        "$B",
        "attr",
        "obj",
        "attr",
        "obj",
        "obj",
        "obj",
        "$test",
        "attr",
        "obj",
        "klass",
        "klass",
        "klass",
        "klass",
        "klass",
        "klass",
        "_b_",
        "obj",
        "attr",
        "obj",
        "attr",
        "obj",
        "obj",
        "attr",
        "klass",
        "attr",
        "klass",
        "attr",
        "obj",
        "attr",
        "klass",
        "attr",
        "klass",
        "attr",
        "attr",
        "klass",
        "attr",
        "klass",
        "attr",
        "in_mro",
        "kl",
        "klass",
        "attr",
        "$test",
        "attr",
        "obj",
        "klass",
        "is_class",
        "klass",
        "obj",
        "klass",
        "_b_",
        "obj",
        "klass",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "klass",
        "_b_",
        "klass",
        "$B",
        "obj",
        "klass",
        "$test",
        "attr",
        "obj",
        "attr",
        "obj",
        "attr",
        "obj",
        "attr",
        "res",
        "res",
        "res",
        "obj",
        "arguments",
        "f",
        "attr",
        "attr",
        "f",
        "$B",
        "res",
        "_default",
        "_default",
        "_b_",
        "rawname",
        "attr",
        "obj",
        "obj",
        "arguments",
        "res",
        "method_wrapper",
        "res",
        "res",
        "klass",
        "is_class",
        "$B",
        "obj",
        "obj",
        "attr",
        "obj",
        "attr",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$B",
        "obj",
        "i",
        "builtin_names",
        "i",
        "obj",
        "_b_",
        "builtin_names",
        "i",
        "_get_builtins_doc",
        "$B",
        "builtin_names",
        "i",
        "obj",
        "_b_",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "attr",
        "klass",
        "klass",
        "obj",
        "subclasses",
        "klass",
        "$B",
        "obj",
        "$B",
        "obj",
        "obj",
        "obj",
        "attr",
        "value",
        "attr",
        "value",
        "is_class",
        "klass",
        "$test",
        "klass",
        "klass",
        "attr",
        "attr",
        "klass",
        "attr",
        "klass",
        "_get_builtins_doc",
        "klass",
        "attr",
        "$B",
        "klass",
        "klass",
        "attr",
        "_b_",
        "attr",
        "$test",
        "object_attr",
        "object_attr",
        "klass",
        "attr",
        "object_attr",
        "$test",
        "obj",
        "attr",
        "obj",
        "attrs",
        "object_attr",
        "attrs",
        "attr",
        "object_attr",
        "_default",
        "attr_error",
        "attr",
        "klass",
        "_default",
        "klass",
        "klass",
        "attr",
        "klass",
        "attr",
        "obj",
        "klass",
        "attr",
        "klass",
        "attr",
        "attr",
        "func",
        "func",
        "func",
        "klass",
        "attr",
        "$B",
        "klass",
        "obj",
        "klass",
        "attr",
        "method",
        "$B",
        "method",
        "func",
        "attr",
        "klass",
        "attr",
        "method",
        "klass",
        "attr",
        "klass",
        "attr",
        "attr_error",
        "rawname",
        "klass",
        "is_class",
        "attr_func",
        "_b_",
        "attr_func",
        "klass",
        "attr_func",
        "klass",
        "mro",
        "obj",
        "attr",
        "klass",
        "mro",
        "i",
        "len",
        "i",
        "attr_func",
        "mro",
        "i",
        "attr_func",
        "attr_func",
        "attr",
        "attr_func",
        "klass",
        "$test",
        "attr_func",
        "attr_func",
        "attr_func",
        "odga",
        "obj",
        "attr",
        "attr_func",
        "odga",
        "obj",
        "attr",
        "obj",
        "attr",
        "res",
        "res",
        "res",
        "obj",
        "attr",
        "res",
        "res",
        "$test",
        "obj",
        "attr",
        "obj",
        "attr",
        "res",
        "res",
        "res",
        "res",
        "$test",
        "res",
        "res",
        "res",
        "res",
        "res",
        "attr_func",
        "obj",
        "attr",
        "$test",
        "res",
        "err",
        "_default",
        "_default",
        "err",
        "res",
        "res",
        "_default",
        "_default",
        "klass",
        "is_class",
        "cname",
        "obj",
        "attr_error",
        "rawname",
        "cname",
        "check_nb_args",
        "arguments",
        "$B",
        "$B",
        "$B",
        "res",
        "$B",
        "$B",
        "res",
        "res",
        "obj",
        "attr",
        "check_no_kw",
        "obj",
        "attr",
        "check_nb_args",
        "arguments",
        "$B",
        "obj",
        "attr",
        "err",
        "obj",
        "check_no_kw",
        "obj",
        "check_nb_args",
        "arguments",
        "obj",
        "obj",
        "isinstance",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "isinstance",
        "obj",
        "_b_",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "obj",
        "$B",
        "obj",
        "$B",
        "obj",
        "hash_cache",
        "obj",
        "cached",
        "cached",
        "hash_cache",
        "obj",
        "_b_",
        "obj",
        "obj",
        "$B",
        "obj",
        "$B",
        "klass",
        "_b_",
        "hash_method",
        "_b_",
        "_b_",
        "$B",
        "obj",
        "hash_method",
        "obj",
        "hashfunc",
        "hash_method",
        "_b_",
        "$B",
        "obj",
        "_b_",
        "_b_",
        "$B",
        "obj",
        "obj",
        "_b_",
        "obj",
        "obj",
        "$B",
        "hash_method",
        "obj",
        "$B",
        "$B",
        "url",
        "url",
        "url",
        "url",
        "url",
        "url",
        "_b_",
        "url",
        "eval",
        "f",
        "$B",
        "docs",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "obj",
        "_get_builtins_doc",
        "$B",
        "obj",
        "_doc",
        "_doc",
        "_b_",
        "_doc",
        "i",
        "builtin_names",
        "i",
        "obj",
        "_b_",
        "builtin_names",
        "i",
        "_get_builtins_doc",
        "_b_",
        "_doc",
        "$B",
        "builtin_names",
        "i",
        "obj",
        "$B",
        "$B",
        "$B",
        "$B",
        "pydoc",
        "obj",
        "$B",
        "obj",
        "err",
        "help",
        "help",
        "obj",
        "check_no_kw",
        "obj",
        "check_nb_args",
        "arguments",
        "bin_hex_oct",
        "obj",
        "obj",
        "check_no_kw",
        "obj",
        "check_nb_args",
        "arguments",
        "isinstance",
        "obj",
        "_b_",
        "_b_",
        "_b_",
        "isinstance",
        "obj",
        "$B",
        "$B",
        "_b_",
        "obj",
        "obj",
        "obj",
        "obj",
        "$B",
        "mod_name",
        "globals",
        "locals",
        "fromlist",
        "level",
        "$B",
        "arguments",
        "_b_",
        "$B",
        "$",
        "$",
        "$",
        "$",
        "msg",
        "prompt",
        "msg",
        "$B",
        "$B",
        "$B",
        "$B",
        "msg",
        "ps1",
        "msg",
        "ps2",
        "msg",
        "res",
        "res",
        "obj",
        "cls",
        "check_no_kw",
        "obj",
        "cls",
        "check_nb_args",
        "arguments",
        "obj",
        "cls",
        "obj",
        "cls",
        "i",
        "cls",
        "i",
        "isinstance",
        "obj",
        "cls",
        "i",
        "cls",
        "cls",
        "cls",
        "_b_",
        "cls",
        "_b_",
        "obj",
        "obj",
        "cls",
        "_b_",
        "obj",
        "obj",
        "klass",
        "obj",
        "cls",
        "_b_",
        "$B",
        "cls",
        "obj",
        "obj",
        "cls",
        "_b_",
        "$B",
        "cls",
        "obj",
        "obj",
        "obj",
        "cls",
        "_b_",
        "$B",
        "cls",
        "klass",
        "$B",
        "obj",
        "klass",
        "kl",
        "cls",
        "kl",
        "cls",
        "cls",
        "_b_",
        "kl",
        "$B",
        "cls",
        "_b_",
        "kl",
        "$B",
        "check",
        "klass",
        "cls",
        "klass",
        "i",
        "mro",
        "i",
        "check",
        "mro",
        "i",
        "cls",
        "$B",
        "cls",
        "$B",
        "cls",
        "_b_",
        "instancecheck",
        "_b_",
        "instancecheck",
        "cls",
        "obj",
        "klass",
        "classinfo",
        "check_no_kw",
        "klass",
        "classinfo",
        "check_nb_args",
        "arguments",
        "klass",
        "klass",
        "klass",
        "_b_",
        "isinstance",
        "classinfo",
        "_b_",
        "i",
        "classinfo",
        "i",
        "issubclass",
        "klass",
        "classinfo",
        "i",
        "classinfo",
        "classinfo",
        "klass",
        "classinfo",
        "klass",
        "classinfo",
        "$B",
        "classinfo",
        "$B",
        "classinfo",
        "_b_",
        "sch",
        "_b_",
        "sch",
        "classinfo",
        "klass",
        "$B",
        "getitem",
        "len",
        "iterator_class",
        "getitem",
        "len",
        "iterator_class",
        "_b_",
        "err",
        "_b_",
        "callable_iterator",
        "$B",
        "func",
        "sentinel",
        "callable_iterator",
        "func",
        "sentinel",
        "callable_iterator",
        "callable_iterator",
        "$B",
        "res",
        "_b_",
        "res",
        "$B",
        "obj",
        "sentinel",
        "sentinel",
        "obj",
        "$B",
        "obj",
        "$B",
        "$B",
        "klass",
        "err",
        "err",
        "_b_",
        "$B",
        "$B",
        "klass",
        "i",
        "gi_method",
        "obj",
        "i",
        "len",
        "obj",
        "iterator_class",
        "gi",
        "len",
        "err",
        "_b_",
        "$B",
        "obj",
        "err",
        "$B",
        "_iter",
        "obj",
        "$B",
        "res",
        "err",
        "isinstance",
        "err",
        "_b_",
        "_b_",
        "$B",
        "res",
        "res",
        "callable_iterator",
        "obj",
        "sentinel",
        "$B",
        "arguments",
        "$",
        "$",
        "$B",
        "$",
        "sentinel",
        "obj",
        "check_no_kw",
        "obj",
        "check_nb_args",
        "arguments",
        "obj",
        "$B",
        "obj",
        "$B",
        "klass",
        "err",
        "_b_",
        "$B",
        "obj",
        "$B",
        "method",
        "obj",
        "check_nb_args",
        "arguments",
        "$B",
        "$B",
        "$B",
        "res",
        "res",
        "res",
        "$B",
        "$B",
        "arguments",
        "$B",
        "$",
        "$B",
        "$",
        "$",
        "item",
        "iter_args",
        "$B",
        "item",
        "iter_args",
        "func",
        "obj",
        "i",
        "i",
        "args",
        "next",
        "i",
        "args",
        "$B",
        "args",
        "op",
        "op",
        "$op_name",
        "args",
        "_b_",
        "$op_name",
        "args",
        "args",
        "args",
        "last_arg",
        "nb_args",
        "last_arg",
        "last_arg",
        "attr",
        "last_arg",
        "attr",
        "func",
        "last_arg",
        "attr",
        "last_arg",
        "attr",
        "has_default",
        "_b_",
        "attr",
        "func",
        "func",
        "x",
        "x",
        "nb_args",
        "_b_",
        "$op_name",
        "nb_args",
        "iter",
        "args",
        "next",
        "$iter",
        "res",
        "$B",
        "$B",
        "func",
        "x",
        "op",
        "func",
        "res",
        "res",
        "x",
        "err",
        "err",
        "_b_",
        "res",
        "has_default",
        "default_value",
        "_b_",
        "$op_name",
        "res",
        "err",
        "has_default",
        "_b_",
        "$op_name",
        "i",
        "nb_args",
        "i",
        "args",
        "i",
        "res",
        "$B",
        "$B",
        "func",
        "x",
        "op",
        "func",
        "res",
        "res",
        "x",
        "res",
        "$extreme",
        "arguments",
        "$B",
        "obj",
        "check_no_kw",
        "obj",
        "check_nb_args",
        "arguments",
        "obj",
        "obj",
        "$B",
        "obj",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "_b_",
        "_b_",
        "_b_",
        "$B",
        "obj",
        "other",
        "other",
        "$B",
        "other",
        "key",
        "isinstance",
        "key",
        "_b_",
        "key",
        "start",
        "i",
        "i",
        "res",
        "start",
        "i",
        "coef",
        "coef",
        "res",
        "key",
        "_b_",
        "key",
        "key",
        "key",
        "key",
        "key",
        "_b_",
        "res",
        "len",
        "format",
        "format",
        "len",
        "res",
        "res",
        "objlen",
        "_b_",
        "res",
        "_b_",
        "item",
        "res",
        "item",
        "res",
        "_b_",
        "_b_",
        "_b_",
        "i",
        "i",
        "i",
        "j",
        "j",
        "item",
        "coef",
        "i",
        "j",
        "coef",
        "res",
        "item",
        "res",
        "$B",
        "$extreme",
        "arguments",
        "obj",
        "check_no_kw",
        "obj",
        "$B",
        "arguments",
        "missing",
        "obj",
        "$B",
        "obj",
        "$B",
        "$B",
        "klass",
        "ga",
        "$B",
        "ga",
        "obj",
        "err",
        "err",
        "_b_",
        "$",
        "missing",
        "$",
        "err",
        "_b_",
        "$B",
        "obj",
        "$B",
        "NotImplementedType",
        "NotImplementedType",
        "NotImplementedType",
        "obj",
        "$B",
        "obj",
        "obj",
        "check_no_kw",
        "obj",
        "check_nb_args",
        "arguments",
        "bin_hex_oct",
        "obj",
        "c",
        "check_no_kw",
        "c",
        "check_nb_args",
        "arguments",
        "c",
        "c",
        "c",
        "_b_",
        "c",
        "$B",
        "c",
        "_b_",
        "c",
        "c",
        "_b_",
        "c",
        "_b_",
        "_b_",
        "c",
        "c",
        "_b_",
        "c",
        "_b_",
        "$B",
        "c",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "x",
        "$B",
        "x",
        "z",
        "_b_",
        "$B",
        "$B",
        "klass",
        "x",
        "y",
        "x",
        "_b_",
        "x",
        "y",
        "_b_",
        "y",
        "_b_",
        "$B",
        "$B",
        "klass",
        "x",
        "y",
        "z",
        "$B",
        "arguments",
        "$ns",
        "ks",
        "ks",
        "ks",
        "ks",
        "ks",
        "ks",
        "ks",
        "$B",
        "ks",
        "$ns",
        "args",
        "arg",
        "items",
        "_b_",
        "arg",
        "items",
        "sep",
        "end",
        "res",
        "res",
        "$B",
        "file",
        "res",
        "$B",
        "file",
        "flush",
        "flush",
        "$print",
        "$print",
        "$B",
        "fget",
        "fset",
        "fdel",
        "doc",
        "property",
        "property",
        "res",
        "fget",
        "fset",
        "fdel",
        "doc",
        "res",
        "property",
        "fget",
        "fset",
        "fdel",
        "doc",
        "doc",
        "fget",
        "fget",
        "fset",
        "fdel",
        "fget",
        "fget",
        "key",
        "fget",
        "key",
        "fget",
        "key",
        "obj",
        "objtype",
        "obj",
        "_b_",
        "$B",
        "obj",
        "fset",
        "obj",
        "value",
        "_b_",
        "$B",
        "obj",
        "value",
        "fdel",
        "fget",
        "property",
        "fget",
        "fset",
        "property",
        "fset",
        "fdel",
        "property",
        "fdel",
        "property",
        "_b_",
        "property",
        "_b_",
        "$B",
        "property",
        "_b_",
        "quit",
        "quit",
        "obj",
        "check_no_kw",
        "obj",
        "check_nb_args",
        "arguments",
        "obj",
        "$B",
        "obj",
        "$B",
        "$B",
        "klass",
        "obj",
        "$B",
        "seq",
        "check_no_kw",
        "seq",
        "check_nb_args",
        "arguments",
        "seq",
        "$B",
        "seq",
        "$B",
        "klass",
        "rev_method",
        "$B",
        "rev_method",
        "seq",
        "$B",
        "klass",
        "err",
        "_b_",
        "reversed",
        "_b_",
        "seq",
        "i",
        "$B",
        "method",
        "seq",
        "i",
        "res",
        "reversed",
        "reversed",
        "_b_",
        "$B",
        "reversed",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "isinstance",
        "arg",
        "_b_",
        "_b_",
        "arg",
        "$B",
        "arg",
        "$B",
        "$B",
        "klass",
        "arguments",
        "err",
        "err",
        "_b_",
        "_b_",
        "$B",
        "arg",
        "err",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "Infinity",
        "arg",
        "Infinity",
        "_b_",
        "isinstance",
        "n",
        "_b_",
        "_b_",
        "$B",
        "n",
        "n",
        "arg",
        "mult",
        "x",
        "x",
        "floor",
        "diff",
        "floor",
        "floor",
        "res",
        "_b_",
        "floor",
        "mult",
        "res",
        "_b_",
        "x",
        "mult",
        "$",
        "res",
        "arg",
        "res",
        "res",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "attr",
        "_b_",
        "$B",
        "obj",
        "attr",
        "value",
        "$B",
        "obj",
        "attr",
        "value",
        "$B",
        "attr",
        "attr",
        "attr",
        "attr",
        "isinstance",
        "value",
        "_b_",
        "_b_",
        "$B",
        "value",
        "obj",
        "obj",
        "value",
        "obj",
        "value",
        "attr",
        "msg",
        "_b_",
        "msg",
        "value",
        "value",
        "error",
        "value",
        "i",
        "value",
        "i",
        "value",
        "i",
        "error",
        "$B",
        "obj",
        "$B",
        "value",
        "obj",
        "value",
        "attr",
        "obj",
        "_b_",
        "obj",
        "attr",
        "value",
        "$test",
        "attr",
        "obj",
        "obj",
        "obj",
        "obj",
        "$test",
        "metaclass",
        "metaclass",
        "attr",
        "metaclass",
        "metaclass",
        "attr",
        "metaclass",
        "attr",
        "metaclass",
        "attr",
        "metaclass",
        "attr",
        "obj",
        "value",
        "obj",
        "attr",
        "value",
        "attr",
        "attr",
        "obj",
        "$B",
        "obj",
        "attr",
        "obj",
        "_b_",
        "obj",
        "$test",
        "obj",
        "obj",
        "attr",
        "obj",
        "$B",
        "obj",
        "$test",
        "attr",
        "obj",
        "klass",
        "res",
        "klass",
        "res",
        "klass",
        "attr",
        "res",
        "klass",
        "mro",
        "i",
        "_len",
        "i",
        "res",
        "mro",
        "i",
        "attr",
        "res",
        "$test",
        "attr",
        "res",
        "res",
        "res",
        "res",
        "res",
        "obj",
        "value",
        "res",
        "rcls",
        "rcls",
        "__set1__",
        "rcls",
        "mro",
        "i",
        "_len",
        "i",
        "__set1__",
        "mro",
        "i",
        "__set1__",
        "__set1__",
        "$B",
        "res",
        "__set__",
        "__set__",
        "__set__",
        "res",
        "obj",
        "value",
        "klass",
        "klass",
        "klass",
        "attr",
        "klass",
        "attr",
        "setter",
        "setter",
        "obj",
        "value",
        "_b_",
        "klass",
        "_setattr",
        "klass",
        "_setattr",
        "klass",
        "mro",
        "i",
        "_len",
        "i",
        "_setattr",
        "mro",
        "i",
        "_setattr",
        "klass",
        "klass",
        "special_attrs",
        "attr",
        "_setattr",
        "klass",
        "klass",
        "klass",
        "klass",
        "item",
        "item",
        "item",
        "klass",
        "item",
        "item",
        "klass",
        "mangled_slots",
        "klass",
        "attr",
        "has_slot",
        "i",
        "klass",
        "i",
        "klass",
        "i",
        "mangled_slots",
        "kl",
        "attr",
        "has_slot",
        "has_slot",
        "_b_",
        "klass",
        "attr",
        "$test",
        "attr",
        "_setattr",
        "_setattr",
        "obj",
        "obj",
        "attr",
        "value",
        "_b_",
        "obj",
        "attr",
        "value",
        "$test",
        "obj",
        "_setattr",
        "obj",
        "attr",
        "value",
        "$B",
        "arguments",
        "_b_",
        "iter",
        "$",
        "_list",
        "i",
        "arguments",
        "i",
        "args",
        "arguments",
        "i",
        "_b_",
        "args",
        "_list",
        "$B",
        "func",
        "func",
        "func",
        "f",
        "$B",
        "f",
        "func",
        "f",
        "$B",
        "staticmethod",
        "iterable",
        "start",
        "$B",
        "arguments",
        "$",
        "$",
        "_b_",
        "start",
        "_b_",
        "_b_",
        "_b_",
        "iter",
        "iterable",
        "next",
        "iterable",
        "res",
        "$B",
        "res",
        "_item",
        "err",
        "err",
        "_b_",
        "err",
        "res",
        "$B",
        "obj",
        "obj",
        "obj",
        "$B",
        "_type1",
        "_type2",
        "_type2",
        "_type2",
        "_type2",
        "missing2",
        "$$super",
        "_type1",
        "_type2",
        "missing2",
        "$$super",
        "attr",
        "sc",
        "sc",
        "sc",
        "sc",
        "sc",
        "sc",
        "i",
        "sc_mro",
        "i",
        "sc_mro",
        "i",
        "mro",
        "sc_mro",
        "i",
        "attr",
        "attr",
        "$$super",
        "_b_",
        "mro",
        "attr",
        "$test",
        "attr",
        "f",
        "f",
        "f",
        "f",
        "f",
        "$B",
        "f",
        "f",
        "$B",
        "f",
        "callable",
        "arguments",
        "$test",
        "attr",
        "f",
        "res",
        "res",
        "method",
        "$B",
        "f",
        "f",
        "f",
        "property",
        "f",
        "f",
        "f",
        "method",
        "f",
        "attr",
        "attr",
        "method",
        "_b_",
        "attr",
        "$$super",
        "$$super",
        "res",
        "res",
        "res",
        "$B",
        "$$super",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$B",
        "$",
        "err",
        "err",
        "_b_",
        "_b_",
        "err",
        "$B",
        "$Reader",
        "$Reader",
        "$Reader",
        "iter",
        "$Reader",
        "$Reader",
        "$Reader",
        "$Reader",
        "$Reader",
        "$B",
        "arguments",
        "$",
        "$B",
        "$",
        "_b_",
        "make_content",
        "size",
        "size",
        "len",
        "res",
        "_b_",
        "size",
        "res",
        "size",
        "size",
        "res",
        "$Reader",
        "_b_",
        "_b_",
        "make_content",
        "source",
        "ix",
        "lines",
        "_b_",
        "source",
        "lines",
        "_b_",
        "source",
        "ix",
        "source",
        "source",
        "ix",
        "lines",
        "$Reader",
        "size",
        "$B",
        "arguments",
        "$",
        "$B",
        "$",
        "_b_",
        "make_content",
        "ix",
        "_b_",
        "_b_",
        "ix",
        "ix",
        "res",
        "ix",
        "ix",
        "ix",
        "res",
        "$Reader",
        "$B",
        "arguments",
        "$",
        "$B",
        "$",
        "_b_",
        "make_lines",
        "hint",
        "nb_read",
        "hint",
        "lines",
        "lines",
        "lines",
        "lines",
        "lines",
        "$Reader",
        "offset",
        "whence",
        "_b_",
        "whence",
        "whence",
        "whence",
        "offset",
        "whence",
        "offset",
        "whence",
        "offset",
        "$Reader",
        "$Reader",
        "$Reader",
        "$B",
        "$Reader",
        "$B",
        "$BufferedReader",
        "$Reader",
        "$B",
        "$B",
        "arguments",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "$TextIOWrapper",
        "$",
        "$",
        "$",
        "$",
        "$TextIOWrapper",
        "$Reader",
        "$B",
        "$TextIOWrapper",
        "$B",
        "$Reader",
        "$B",
        "$TextIOWrapper",
        "$B",
        "$BufferedReader",
        "$B",
        "arguments",
        "attr",
        "$ns",
        "eval",
        "attr",
        "attr",
        "args",
        "args",
        "args",
        "args",
        "mode",
        "_b_",
        "mode",
        "_b_",
        "mode",
        "isinstance",
        "file",
        "_b_",
        "mode",
        "$B",
        "$ns",
        "$string",
        "$B",
        "$ns",
        "$B",
        "$B",
        "$ns",
        "$res",
        "atob",
        "$B",
        "$ns",
        "$res",
        "source",
        "$bytes",
        "_b_",
        "$bytes",
        "source",
        "$B",
        "is_binary",
        "_b_",
        "XMLHttpRequest",
        "req",
        "status",
        "$res",
        "_b_",
        "file",
        "status",
        "$res",
        "_b_",
        "file",
        "status",
        "$res",
        "err",
        "$res",
        "_b_",
        "file",
        "err",
        "req",
        "file",
        "fake_qs",
        "req",
        "req",
        "$res",
        "$res",
        "$string",
        "$res",
        "$string",
        "$bytes",
        "_b_",
        "$ns",
        "is_binary",
        "$string",
        "$bytes",
        "encoding",
        "mode",
        "file",
        "res",
        "is_binary",
        "$BufferedReader",
        "$TextIOWrapper",
        "res",
        "_b_",
        "_b_",
        "file",
        "$B",
        "arguments",
        "res",
        "$B",
        "arguments",
        "$ns",
        "i",
        "_args",
        "i",
        "args",
        "iter",
        "_args",
        "i",
        "i",
        "args",
        "i",
        "line",
        "next",
        "args",
        "i",
        "err",
        "err",
        "_b_",
        "flag",
        "err",
        "flag",
        "items",
        "rank",
        "_b_",
        "line",
        "res",
        "items",
        "res",
        "$B",
        "zip_iterator",
        "$B",
        "klass",
        "attr",
        "klass",
        "attr",
        "_b_",
        "klass",
        "attr",
        "_b_",
        "klass",
        "attr",
        "$B",
        "ellipsis",
        "$key",
        "$B",
        "$B",
        "$key",
        "ellipsis",
        "$B",
        "$key",
        "k",
        "other",
        "_b_",
        "k",
        "$B",
        "other",
        "$key",
        "$func",
        "$func",
        "$func",
        "f",
        "f",
        "$func",
        "$B",
        "ellipsis",
        "$B",
        "$B",
        "$B",
        "_b_",
        "FunctionCode",
        "FunctionGlobals",
        "$B",
        "attr",
        "attr",
        "_b_",
        "$B",
        "infos",
        "attrs",
        "$B",
        "other",
        "other",
        "$B",
        "obj",
        "obj",
        "_b_",
        "obj",
        "arguments",
        "method",
        "$B",
        "$B",
        "$B",
        "method",
        "$B",
        "obj",
        "obj",
        "method",
        "$B",
        "attr",
        "attr",
        "attr",
        "code",
        "attr",
        "res",
        "attr",
        "attr",
        "res",
        "res",
        "res",
        "res",
        "attr",
        "$B",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "free_vars",
        "i",
        "free_vars",
        "i",
        "cells",
        "$B",
        "$B",
        "free_vars",
        "i",
        "err",
        "cells",
        "$B",
        "_b_",
        "cells",
        "attr",
        "$B",
        "$B",
        "attr",
        "attr",
        "_b_",
        "attr",
        "$B",
        "$B",
        "$B",
        "$B",
        "attr",
        "value",
        "attr",
        "_b_",
        "attr",
        "value",
        "_b_",
        "value",
        "isinstance",
        "value",
        "_b_",
        "_b_",
        "set_func",
        "_b_",
        "attr",
        "_b_",
        "varnames",
        "argcount",
        "value",
        "i",
        "i",
        "value",
        "i",
        "pos",
        "$defaults",
        "pos",
        "value",
        "i",
        "_b_",
        "attr",
        "_b_",
        "set_func",
        "$defaults",
        "new_func",
        "set_func",
        "klass",
        "klass",
        "new_func",
        "new_func",
        "klass",
        "new_func",
        "value",
        "value",
        "value",
        "_b_",
        "attr",
        "attr",
        "value",
        "attr",
        "value",
        "$B",
        "$B",
        "$B",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "$B",
        "builtin_function",
        "$B",
        "builtin_function",
        "builtin_function",
        "builtin_function",
        "builtin_function",
        "$B",
        "builtin_function",
        "$B",
        "method_wrapper",
        "method_wrapper",
        "$B",
        "method_wrapper",
        "$B",
        "$B",
        "wrapper_descriptor",
        "$B",
        "wrapper_descriptor",
        "wrapper_descriptor",
        "$B",
        "wrapper_descriptor",
        "$B",
        "$B",
        "$B",
        "other_builtins",
        "i",
        "builtin_names",
        "i",
        "builtin_names",
        "i",
        "name",
        "name1",
        "name",
        "name",
        "name1",
        "name",
        "name",
        "name1",
        "name",
        "name1",
        "_b_",
        "name",
        "eval",
        "name1",
        "$B",
        "orig_name",
        "_b_",
        "name",
        "builtin_function",
        "_b_",
        "name",
        "orig_name",
        "orig_name",
        "err",
        "_b_",
        "$url_open",
        "_b_",
        "$print",
        "_b_",
        "$$super",
        "_b_",
        "wrapper_descriptor",
        "_b_",
        "builtin_function",
        "__BRYTHON__",
        "$B",
        "$B",
        "eval",
        "bltns",
        "$B",
        "$B",
        "$B",
        "frame",
        "$B",
        "exc",
        "$B",
        "$B",
        "frame",
        "$B",
        "exc",
        "$B",
        "$B",
        "$B",
        "frame",
        "$B",
        "arg",
        "arg",
        "$B",
        "es",
        "es",
        "_b_",
        "isinstance",
        "arg",
        "arg",
        "_b_",
        "$B",
        "$B",
        "arg",
        "_b_",
        "arg",
        "arg",
        "issubclass",
        "arg",
        "arg",
        "_b_",
        "$B",
        "$B",
        "_b_",
        "$B",
        "arg",
        "_b_",
        "$B",
        "exc",
        "src",
        "pos",
        "line_num",
        "src",
        "exc",
        "line_num",
        "exc",
        "_b_",
        "$B",
        "exc",
        "line_num",
        "src",
        "i",
        "len",
        "i",
        "pos2line",
        "i",
        "lnum",
        "src",
        "i",
        "line_pos",
        "lnum",
        "i",
        "line_num",
        "line_num",
        "pos2line",
        "pos",
        "pos",
        "exc",
        "line_num",
        "src",
        "lines",
        "line_num",
        "pos",
        "line_pos",
        "line_num",
        "line",
        "exc",
        "line",
        "lpos",
        "len",
        "line",
        "lpos",
        "lpos",
        "line",
        "line",
        "line",
        "lpos",
        "lpos",
        "exc",
        "lpos",
        "exc",
        "_b_",
        "$B",
        "exc",
        "line_num",
        "lpos",
        "line",
        "exc",
        "line_num",
        "exc",
        "exc",
        "exc",
        "$B",
        "msg",
        "src",
        "pos",
        "line_num",
        "root",
        "root",
        "root",
        "line_num",
        "root",
        "_b_",
        "msg",
        "$B",
        "exc",
        "src",
        "pos",
        "line_num",
        "exc",
        "$B",
        "msg",
        "src",
        "pos",
        "line_num",
        "root",
        "$B",
        "line_num",
        "src",
        "root",
        "root",
        "line_num",
        "root",
        "_b_",
        "msg",
        "$B",
        "exc",
        "src",
        "pos",
        "line_num",
        "exc",
        "$B",
        "stack",
        "stack",
        "stack",
        "$B",
        "stack",
        "frame",
        "frame",
        "line_info",
        "line_info",
        "info",
        "info",
        "trace",
        "info",
        "info",
        "$B",
        "frame",
        "src",
        "src",
        "lines",
        "parseInt",
        "info",
        "trace",
        "line",
        "trace",
        "trace",
        "$B",
        "$B",
        "exc",
        "stack",
        "$B",
        "$B",
        "stack",
        "stack",
        "exc",
        "traceback",
        "stack",
        "exc",
        "traceback",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "first_frame",
        "first_frame",
        "first_frame",
        "line_info",
        "first_frame",
        "attr",
        "frame",
        "line_info",
        "first_frame",
        "$B",
        "first_frame",
        "first_frame",
        "first_frame",
        "lineno",
        "first_frame",
        "lineno",
        "lineno",
        "parseInt",
        "line_info",
        "lineno",
        "line_info",
        "line_info",
        "i",
        "i",
        "i",
        "fr",
        "info",
        "file",
        "fr",
        "src",
        "$B",
        "file",
        "src",
        "$B",
        "file",
        "$B",
        "info",
        "$B",
        "info",
        "src",
        "$B",
        "$B",
        "info",
        "line_info",
        "$B",
        "info",
        "src",
        "src",
        "parseInt",
        "info",
        "file",
        "info",
        "traceback",
        "_b_",
        "attr",
        "$B",
        "traceback",
        "$B",
        "stack",
        "pos",
        "frame",
        "stack",
        "pos",
        "pos",
        "res",
        "pos",
        "fs",
        "fs",
        "pos",
        "_frame",
        "res",
        "$B",
        "_frame",
        "err",
        "err",
        "err",
        "res",
        "$B",
        "_frame",
        "_frame",
        "filename",
        "_frame",
        "locals_id",
        "filename",
        "_frame",
        "res",
        "_frame",
        "res",
        "parseInt",
        "line_info",
        "line_info",
        "$B",
        "module_name",
        "filename",
        "$B",
        "module_name",
        "res",
        "parseInt",
        "_frame",
        "locals_id",
        "locals_id",
        "locals_id",
        "_frame",
        "co_name",
        "_frame",
        "co_name",
        "_frame",
        "_frame",
        "co_name",
        "_frame",
        "co_name",
        "_frame",
        "_frame",
        "co_name",
        "_frame",
        "co_name",
        "_frame",
        "_frame",
        "_frame",
        "co_name",
        "_frame",
        "$B",
        "co_name",
        "filename",
        "_frame",
        "filename",
        "_frame",
        "filename",
        "filename",
        "_frame",
        "res",
        "_frame",
        "res",
        "$B",
        "co_name",
        "filename",
        "filename",
        "res",
        "res",
        "frame",
        "attr",
        "attr",
        "frame",
        "_b_",
        "attr",
        "frame",
        "attr",
        "value",
        "attr",
        "$B",
        "value",
        "frame",
        "frame",
        "$B",
        "frame",
        "$B",
        "frame",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "arguments",
        "arguments",
        "_b_",
        "args",
        "res",
        "repr",
        "res",
        "repr",
        "$B",
        "res",
        "_b_",
        "cls",
        "_b_",
        "err",
        "cls",
        "err",
        "_b_",
        "err",
        "exc",
        "includeInternal",
        "exc",
        "$B",
        "exc",
        "exc",
        "exc",
        "includeInternal",
        "info",
        "exc",
        "info",
        "exc",
        "i",
        "exc",
        "i",
        "exc",
        "i",
        "frame",
        "frame",
        "frame",
        "$line_info",
        "exc",
        "line_info",
        "src",
        "exc",
        "includeInternal",
        "frame",
        "src",
        "$B",
        "$B",
        "frame",
        "src",
        "$B",
        "frame",
        "src",
        "$B",
        "frame",
        "line_info",
        "info",
        "line_info",
        "frame",
        "frame",
        "info",
        "frame",
        "frame",
        "info",
        "frame",
        "$B",
        "info",
        "frame",
        "frame",
        "info",
        "frame",
        "info",
        "src",
        "src",
        "lines",
        "parseInt",
        "line_info",
        "line",
        "line",
        "line",
        "info",
        "line",
        "line_info",
        "exc",
        "_b_",
        "info",
        "exc",
        "exc",
        "exc",
        "info",
        "attr",
        "attr",
        "getExceptionTrace",
        "attr",
        "getExceptionTrace",
        "attr",
        "traceback",
        "_b_",
        "attr",
        "tb",
        "tb",
        "stack",
        "$B",
        "$B",
        "current_frame",
        "current_frame",
        "is_local",
        "$B",
        "i",
        "len",
        "i",
        "$B",
        "current_frame",
        "stack",
        "i",
        "stack",
        "$B",
        "stack",
        "stack",
        "i",
        "len",
        "i",
        "stack",
        "i",
        "stack",
        "i",
        "stack",
        "i",
        "stack",
        "i",
        "stack",
        "$B",
        "stack",
        "stack",
        "stack",
        "$B",
        "frame",
        "stack",
        "frame",
        "frame",
        "err",
        "$B",
        "arguments",
        "err",
        "_b_",
        "err",
        "err",
        "err",
        "$B",
        "$B",
        "$B",
        "err",
        "$B",
        "$B",
        "eval",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "err",
        "$B",
        "_b_",
        "$B",
        "js_exc",
        "in_ctx_manager",
        "js_exc",
        "js_exc",
        "$B",
        "$B",
        "$B",
        "js_exc",
        "exc",
        "js_exc",
        "js_exc",
        "exc",
        "_b_",
        "exc",
        "js_exc",
        "$B",
        "js_exc",
        "_b_",
        "js_exc",
        "exc",
        "exc",
        "_b_",
        "js_exc",
        "js_exc",
        "js_exc",
        "exc",
        "exc",
        "_b_",
        "exc",
        "_b_",
        "exc",
        "_b_",
        "exc",
        "js_exc",
        "js_exc",
        "js_exc",
        "exc",
        "_b_",
        "$message",
        "exc",
        "exc",
        "$B",
        "$B",
        "in_ctx_manager",
        "$B",
        "$B",
        "exc",
        "i",
        "len",
        "i",
        "exc",
        "i",
        "current_locals",
        "exc",
        "exc",
        "i",
        "exc",
        "traceback",
        "exc",
        "exc",
        "$B",
        "exc",
        "exc_list",
        "exc",
        "exc",
        "$B",
        "exc",
        "exc",
        "exc",
        "exc",
        "i",
        "exc_list",
        "i",
        "exc_list",
        "i",
        "this_exc_class",
        "exc",
        "issubclass",
        "this_exc_class",
        "exc_class",
        "$B",
        "js_exc",
        "js_exc",
        "js_exc",
        "js_exc",
        "msg",
        "parts",
        "parts",
        "err_type",
        "err_msg",
        "err_type",
        "err_msg",
        "err_type",
        "err_msg",
        "names",
        "parent",
        "i",
        "names",
        "i",
        "names",
        "i",
        "name",
        "name",
        "name",
        "$B",
        "name",
        "name",
        "$exc",
        "$exc",
        "code",
        "_str",
        "pos",
        "name",
        "parent",
        "name",
        "_str",
        "pos",
        "name",
        "$exc",
        "_str",
        "pos",
        "name",
        "name",
        "name",
        "_str",
        "pos",
        "name",
        "eval",
        "_str",
        "err",
        "err",
        "err",
        "$make_exc",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$make_exc",
        "_b_",
        "$B",
        "msg",
        "_b_",
        "msg",
        "_b_",
        "_b_",
        "arguments",
        "arg",
        "_b_",
        "arg",
        "se",
        "arguments",
        "$B",
        "$B",
        "frame",
        "line_info",
        "frame",
        "exc",
        "frame",
        "exc",
        "parseInt",
        "line_info",
        "$B",
        "frame",
        "src",
        "lines",
        "src",
        "exc",
        "lines",
        "exc",
        "exc",
        "arg",
        "exc",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "_b_",
        "other",
        "other",
        "$B",
        "other",
        "err",
        "other",
        "err",
        "$B",
        "other",
        "$B",
        "sub",
        "$B",
        "fl",
        "$B",
        "res",
        "sub",
        "$B",
        "$B",
        "other",
        "$B",
        "other",
        "$B",
        "other",
        "$B",
        "other",
        "attr",
        "value",
        "_b_",
        "other",
        "_b_",
        "other",
        "$B",
        "len",
        "other",
        "len",
        "$B",
        "other",
        "len",
        "$B",
        "other",
        "r",
        "i",
        "r",
        "len",
        "r",
        "i",
        "len",
        "r",
        "$B",
        "r",
        "$B",
        "r",
        "i",
        "rank",
        "_b_",
        "rank",
        "_b_",
        "_b_",
        "rank",
        "$B",
        "norm",
        "compute_item",
        "norm",
        "compute_item",
        "norm",
        "substart",
        "substop",
        "substep",
        "rank",
        "rank",
        "$B",
        "rank",
        "$B",
        "rank",
        "rank",
        "$B",
        "rank",
        "$B",
        "$B",
        "rank",
        "$B",
        "$B",
        "res",
        "$B",
        "res",
        "$B",
        "$B",
        "res",
        "$B",
        "res",
        "_b_",
        "res",
        "len",
        "_b_",
        "_b_",
        "len",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "len",
        "_b_",
        "_b_",
        "_b_",
        "RangeIterator",
        "obj",
        "RangeIterator",
        "obj",
        "$B",
        "RangeIterator",
        "res",
        "res",
        "$B",
        "RangeIterator",
        "res",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "n",
        "len",
        "$B",
        "q",
        "$B",
        "$B",
        "$B",
        "$B",
        "n",
        "$B",
        "len",
        "$B",
        "q",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "len",
        "_b_",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "_b_",
        "$B",
        "$B",
        "$B",
        "n",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "res",
        "_b_",
        "res",
        "attr",
        "value",
        "_b_",
        "ob",
        "_b_",
        "ob",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "ob",
        "other",
        "$B",
        "ob",
        "other",
        "RangeIterator",
        "comp",
        "_next",
        "it",
        "nb",
        "err",
        "_b_",
        "err",
        "_b_",
        "nb",
        "err",
        "other",
        "$B",
        "arguments",
        "$",
        "$",
        "other",
        "$B",
        "other",
        "err",
        "x",
        "$B",
        "other",
        "x",
        "RangeIterator",
        "comp",
        "_next",
        "it",
        "nb",
        "nb",
        "err",
        "_b_",
        "err",
        "_b_",
        "_b_",
        "_b_",
        "other",
        "err",
        "$B",
        "other",
        "$B",
        "sub",
        "$B",
        "fl",
        "$B",
        "res",
        "sub",
        "$B",
        "$B",
        "other",
        "$B",
        "other",
        "$B",
        "$B",
        "other",
        "$B",
        "other",
        "fl",
        "_b_",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "other",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "stop",
        "step",
        "start",
        "_b_",
        "stop",
        "$B",
        "start",
        "safe",
        "stop",
        "stop",
        "safe",
        "step",
        "step",
        "start",
        "$B",
        "start",
        "stop",
        "$B",
        "stop",
        "step",
        "$B",
        "step",
        "step",
        "_b_",
        "safe",
        "start",
        "stop",
        "step",
        "start",
        "stop",
        "step",
        "safe",
        "$B",
        "_b_",
        "_b_",
        "other",
        "conv_slice",
        "conv_slice",
        "other",
        "conv1",
        "conv2",
        "conv1",
        "conv2",
        "conv1",
        "conv2",
        "_b_",
        "_b_",
        "_b_",
        "attr",
        "value",
        "_b_",
        "i",
        "attrs",
        "i",
        "attrs",
        "i",
        "val",
        "_b_",
        "res",
        "val",
        "res",
        "$B",
        "val",
        "err",
        "_b_",
        "res",
        "len",
        "$B",
        "$B",
        "step",
        "$B",
        "len",
        "step",
        "_b_",
        "start",
        "step_is_neg",
        "len_1",
        "start",
        "$B",
        "$B",
        "start",
        "start",
        "$B",
        "start",
        "len",
        "$B",
        "start",
        "start",
        "$B",
        "start",
        "len",
        "start",
        "step",
        "len_1",
        "len",
        "stop",
        "step_is_neg",
        "len",
        "stop",
        "$B",
        "$B",
        "stop",
        "stop",
        "$B",
        "stop",
        "len",
        "$B",
        "stop",
        "len",
        "stop",
        "step_is_neg",
        "len_1",
        "len",
        "start",
        "stop",
        "step",
        "length",
        "$B",
        "arguments",
        "$B",
        "$",
        "len",
        "_b_",
        "_b_",
        "_step",
        "_start",
        "_start",
        "_b_",
        "len",
        "_start",
        "_b_",
        "_start",
        "len",
        "_b_",
        "len",
        "_stop",
        "_b_",
        "_stop",
        "_b_",
        "_stop",
        "len",
        "_b_",
        "len",
        "_b_",
        "_b_",
        "len",
        "_b_",
        "len",
        "_b_",
        "len",
        "_start",
        "_start",
        "_b_",
        "_start",
        "len",
        "_stop",
        "_stop",
        "_b_",
        "_stop",
        "len",
        "_b_",
        "_start",
        "_stop",
        "_step",
        "$B",
        "arguments",
        "$",
        "$",
        "start",
        "_b_",
        "stop",
        "$",
        "step",
        "_b_",
        "start",
        "$",
        "stop",
        "$",
        "step",
        "$",
        "_b_",
        "$",
        "start",
        "stop",
        "step",
        "conv_slice",
        "res",
        "res",
        "$B",
        "_b_",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "$B",
        "obj",
        "_b_",
        "obj",
        "res",
        "obj",
        "$B",
        "obj",
        "ga",
        "res",
        "$B",
        "ga",
        "_b_",
        "res",
        "cars",
        "lr",
        "cars",
        "cars",
        "ws",
        "i",
        "len",
        "i",
        "cars",
        "ws",
        "i",
        "isinstance",
        "cars",
        "cars",
        "cars",
        "_b_",
        "lr",
        "i",
        "len",
        "i",
        "cars",
        "i",
        "i",
        "i",
        "i",
        "cars",
        "i",
        "i",
        "other",
        "_b_",
        "other",
        "_b_",
        "mutable_methods",
        "method",
        "method",
        "m",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "pos",
        "arguments",
        "i",
        "_b_",
        "m",
        "args",
        "method",
        "$B",
        "bytearray_iterator",
        "arg",
        "value",
        "isinstance",
        "arg",
        "_b_",
        "isinstance",
        "value",
        "_b_",
        "_b_",
        "value",
        "_b_",
        "arg",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "value",
        "_b_",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "arg",
        "arg",
        "arg",
        "start",
        "start",
        "start",
        "stop",
        "stop",
        "stop",
        "start",
        "stop",
        "start",
        "_b_",
        "value",
        "$temp",
        "i",
        "i",
        "isinstance",
        "$temp",
        "i",
        "_b_",
        "_b_",
        "$temp",
        "i",
        "ValueError",
        "start",
        "$temp",
        "i",
        "err",
        "_b_",
        "_b_",
        "$B",
        "arg",
        "b",
        "arguments",
        "_b_",
        "arguments",
        "isinstance",
        "b",
        "_b_",
        "_b_",
        "b",
        "ValueError",
        "b",
        "b",
        "b",
        "b",
        "b",
        "item",
        "item",
        "_b_",
        "_b_",
        "b",
        "_b_",
        "it",
        "err",
        "err",
        "_b_",
        "err",
        "_b_",
        "pos",
        "b",
        "arguments",
        "_b_",
        "arguments",
        "isinstance",
        "b",
        "_b_",
        "_b_",
        "b",
        "ValueError",
        "_b_",
        "pos",
        "b",
        "source",
        "encoding",
        "errors",
        "source",
        "encoding",
        "errors",
        "_b_",
        "other",
        "isinstance",
        "other",
        "other",
        "isinstance",
        "other",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "i",
        "other",
        "i",
        "j",
        "len",
        "j",
        "other",
        "i",
        "j",
        "j",
        "flag",
        "flag",
        "$B",
        "bytes_iterator",
        "other",
        "invalid",
        "other",
        "getattr",
        "other",
        "other",
        "invalid",
        "other",
        "_b_",
        "_b_",
        "other",
        "arg",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "_b_",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "arg",
        "step",
        "arg",
        "arg",
        "arg",
        "getattr",
        "arg",
        "arg",
        "getattr",
        "arg",
        "arg",
        "arg",
        "start",
        "start",
        "start",
        "stop",
        "stop",
        "stop",
        "step",
        "stop",
        "stop",
        "stop",
        "start",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "pos",
        "i",
        "stop",
        "start",
        "stop",
        "stop",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "pos",
        "i",
        "res",
        "isinstance",
        "arg",
        "_b_",
        "_b_",
        "arg",
        "other",
        "invalid",
        "other",
        "_b_",
        "_b_",
        "other",
        "$B",
        "i",
        "len",
        "i",
        "hash",
        "hash",
        "i",
        "hash",
        "_b_",
        "other",
        "invalid",
        "other",
        "_b_",
        "_b_",
        "other",
        "other",
        "invalid",
        "other",
        "_b_",
        "_b_",
        "other",
        "args",
        "decode",
        "_b_",
        "s",
        "args",
        "_b_",
        "res",
        "$B",
        "arguments",
        "$B",
        "$",
        "$",
        "source",
        "i",
        "other",
        "i",
        "j",
        "slen",
        "j",
        "t",
        "source",
        "j",
        "res",
        "t",
        "res",
        "other",
        "other",
        "cls",
        "source",
        "encoding",
        "errors",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$",
        "cls",
        "source",
        "encoding",
        "errors",
        "cls",
        "source",
        "isinstance",
        "source",
        "_b_",
        "i",
        "int_list",
        "pos",
        "isinstance",
        "source",
        "_b_",
        "encoding",
        "_b_",
        "int_list",
        "encode",
        "source",
        "encoding",
        "errors",
        "int_list",
        "_b_",
        "source",
        "i",
        "int_list",
        "i",
        "_b_",
        "int_list",
        "i",
        "err",
        "_b_",
        "$B",
        "int_list",
        "i",
        "item",
        "item",
        "_b_",
        "int_list",
        "encoding",
        "errors",
        "i",
        "len",
        "i",
        "i",
        "s",
        "res",
        "s",
        "s",
        "s",
        "hx",
        "hx",
        "hx",
        "res",
        "hx",
        "s",
        "res",
        "res",
        "s",
        "res",
        "res",
        "res",
        "res",
        "src",
        "src",
        "buffer",
        "buffer",
        "buffer",
        "i",
        "len",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "$B",
        "arguments",
        "$",
        "$",
        "diff",
        "$",
        "$",
        "$",
        "diff",
        "$",
        "ljust",
        "$",
        "$",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "_b_",
        "len",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "len",
        "$",
        "index",
        "$",
        "$",
        "index",
        "len",
        "$",
        "$",
        "index",
        "n",
        "index",
        "n",
        "encoding",
        "errors",
        "$B",
        "arguments",
        "$",
        "decode",
        "$",
        "$",
        "$",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "start",
        "$",
        "$",
        "$",
        "$",
        "$",
        "i",
        "res",
        "i",
        "res",
        "$",
        "end",
        "len",
        "i",
        "$",
        "i",
        "res",
        "_b_",
        "$",
        "_b_",
        "i",
        "$",
        "i",
        "_b_",
        "$",
        "i",
        "$",
        "$",
        "i",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "_b_",
        "$B",
        "$",
        "$B",
        "arguments",
        "i",
        "$",
        "i",
        "tab_spaces",
        "$",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "buffer",
        "i",
        "tab_spaces",
        "_b_",
        "buffer",
        "sub",
        "arguments",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "sub",
        "sub",
        "sub",
        "_b_",
        "end",
        "end",
        "sub",
        "start",
        "sub",
        "_b_",
        "$B",
        "sub",
        "sub",
        "_b_",
        "$B",
        "sub",
        "end",
        "end",
        "end",
        "sub",
        "i",
        "end",
        "len",
        "i",
        "i",
        "i",
        "len",
        "j",
        "len",
        "j",
        "chunk",
        "j",
        "sub",
        "j",
        "found",
        "found",
        "i",
        "$B",
        "arguments",
        "$",
        "i",
        "i",
        "i",
        "_b_",
        "source",
        "_b_",
        "i",
        "$",
        "source",
        "$B",
        "arguments",
        "$",
        "i",
        "len",
        "i",
        "i",
        "hexa",
        "hexa",
        "hexa",
        "res",
        "hexa",
        "res",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$",
        "index",
        "_b_",
        "index",
        "src",
        "len",
        "i",
        "len",
        "res",
        "i",
        "res",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "res",
        "src",
        "len",
        "i",
        "len",
        "res",
        "i",
        "res",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "res",
        "src",
        "len",
        "i",
        "len",
        "res",
        "i",
        "res",
        "src",
        "i",
        "src",
        "i",
        "res",
        "src",
        "i",
        "len",
        "i",
        "res",
        "res",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "res",
        "src",
        "i",
        "len",
        "i",
        "src",
        "i",
        "src",
        "i",
        "len",
        "i",
        "res",
        "res",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "src",
        "i",
        "res",
        "src",
        "i",
        "len",
        "i",
        "is_lowercase",
        "src",
        "i",
        "src",
        "i",
        "is_uppercase",
        "src",
        "i",
        "src",
        "i",
        "current_char_is_letter",
        "is_lowercase",
        "is_uppercase",
        "current_char_is_letter",
        "prev_char_was_letter",
        "is_uppercase",
        "prev_char_was_letter",
        "is_lowercase",
        "prev_char_was_letter",
        "current_char_is_letter",
        "$B",
        "arguments",
        "$ns",
        "$ns",
        "_b_",
        "_b_",
        "iterable",
        "next_func",
        "empty",
        "empty",
        "res",
        "res",
        "res",
        "res",
        "item",
        "err",
        "isinstance",
        "err",
        "_b_",
        "err",
        "res",
        "char_code",
        "char_code",
        "char_code",
        "char_code",
        "char_code",
        "i",
        "len",
        "i",
        "i",
        "_res",
        "pos",
        "_lower",
        "i",
        "_res",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "$",
        "i",
        "count",
        "i",
        "padding",
        "$",
        "$",
        "padding",
        "cars",
        "_strip",
        "cars",
        "to",
        "$B",
        "to",
        "i",
        "i",
        "_t",
        "i",
        "i",
        "i",
        "len",
        "i",
        "i",
        "_t",
        "_ndx",
        "to",
        "i",
        "_t",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "src",
        "i",
        "src",
        "i",
        "i",
        "len",
        "src",
        "i",
        "len",
        "$B",
        "arguments",
        "$",
        "src",
        "$",
        "$",
        "$",
        "$",
        "src",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "i",
        "len",
        "i",
        "old",
        "i",
        "count",
        "j",
        "$new",
        "j",
        "res",
        "$new",
        "j",
        "i",
        "old",
        "count",
        "res",
        "src",
        "i",
        "res",
        "subbytes",
        "arguments",
        "subbytes",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$",
        "sub",
        "sub",
        "sub",
        "_b_",
        "$",
        "start",
        "$",
        "$",
        "sub",
        "start",
        "sub",
        "_b_",
        "$B",
        "$",
        "sub",
        "_b_",
        "$B",
        "sub",
        "end",
        "end",
        "end",
        "sub",
        "end",
        "len",
        "i",
        "start",
        "i",
        "i",
        "i",
        "len",
        "j",
        "len",
        "j",
        "chunk",
        "j",
        "sub",
        "j",
        "found",
        "found",
        "i",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$",
        "index",
        "_b_",
        "index",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "$",
        "i",
        "count",
        "i",
        "padding",
        "$",
        "padding",
        "$",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "src",
        "i",
        "src",
        "i",
        "i",
        "len",
        "src",
        "i",
        "len",
        "cars",
        "_strip",
        "cars",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "seps",
        "$",
        "src",
        "stop",
        "blen",
        "i",
        "len",
        "match",
        "i",
        "src",
        "stop",
        "i",
        "seps",
        "i",
        "match",
        "match",
        "res",
        "src",
        "start",
        "stop",
        "start",
        "stop",
        "len",
        "stop",
        "start",
        "stop",
        "match",
        "stop",
        "start",
        "res",
        "src",
        "start",
        "stop",
        "res",
        "$B",
        "arguments",
        "_b_",
        "$",
        "_b_",
        "_b_",
        "_b_",
        "$B",
        "$",
        "_b_",
        "$",
        "$",
        "source",
        "res",
        "pos",
        "source",
        "pos",
        "source",
        "source",
        "pos",
        "source",
        "pos",
        "res",
        "source",
        "start",
        "keepends",
        "pos",
        "pos",
        "start",
        "pos",
        "pos",
        "source",
        "pos",
        "source",
        "pos",
        "res",
        "source",
        "start",
        "keepends",
        "pos",
        "pos",
        "start",
        "pos",
        "pos",
        "pos",
        "start",
        "source",
        "res",
        "source",
        "start",
        "res",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$",
        "i",
        "$",
        "res",
        "i",
        "res",
        "$",
        "start",
        "i",
        "$",
        "i",
        "res",
        "_b_",
        "$",
        "_b_",
        "i",
        "$",
        "i",
        "_b_",
        "$",
        "i",
        "items",
        "items",
        "$",
        "i",
        "_b_",
        "$B",
        "$",
        "items",
        "$",
        "prefix",
        "start",
        "_b_",
        "$B",
        "$",
        "cars",
        "cars",
        "res",
        "cars",
        "src",
        "src",
        "i",
        "len",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "i",
        "buffer",
        "src",
        "buffer",
        "src",
        "current_char_is_letter",
        "prev_char_was_letter",
        "is_uppercase",
        "is_lowercase",
        "i",
        "len",
        "i",
        "is_lowercase",
        "buffer",
        "i",
        "buffer",
        "i",
        "is_uppercase",
        "buffer",
        "i",
        "buffer",
        "i",
        "current_char_is_letter",
        "is_lowercase",
        "is_uppercase",
        "current_char_is_letter",
        "prev_char_was_letter",
        "is_uppercase",
        "buffer",
        "i",
        "prev_char_was_letter",
        "is_lowercase",
        "buffer",
        "i",
        "prev_char_was_letter",
        "current_char_is_letter",
        "buffer",
        "table",
        "_delete",
        "_delete",
        "_delete",
        "isinstance",
        "_delete",
        "_delete",
        "_delete",
        "_b_",
        "$B",
        "_delete",
        "isinstance",
        "table",
        "table",
        "i",
        "len",
        "i",
        "_delete",
        "i",
        "res",
        "pos",
        "table",
        "i",
        "res",
        "char_code",
        "char_code",
        "char_code",
        "char_code",
        "char_code",
        "i",
        "len",
        "i",
        "i",
        "_res",
        "pos",
        "_upper",
        "i",
        "_res",
        "width",
        "buffer",
        "buffer",
        "width",
        "i",
        "count",
        "i",
        "padding",
        "buffer",
        "buffer",
        "prefix_offset",
        "padding",
        "buffer",
        "encoding",
        "code_point",
        "position",
        "_b_",
        "encoding",
        "_b_",
        "code_point",
        "position",
        "encoding",
        "position",
        "_b_",
        "encoding",
        "position",
        "_int",
        "_int",
        "hex",
        "parseInt",
        "hex",
        "encoding",
        "encoding",
        "enc",
        "enc",
        "enc",
        "enc",
        "enc",
        "enc",
        "enc",
        "enc",
        "enc",
        "enc",
        "enc",
        "to_unicode",
        "enc",
        "_b_",
        "enc",
        "mod",
        "enc",
        "to_unicode",
        "enc",
        "$B",
        "mod",
        "enc",
        "enc",
        "from_unicode",
        "enc",
        "_b_",
        "enc",
        "mod",
        "enc",
        "from_unicode",
        "enc",
        "$B",
        "mod",
        "enc",
        "$B",
        "obj",
        "encoding",
        "errors",
        "obj",
        "normalise",
        "encoding",
        "enc",
        "pos",
        "b",
        "b",
        "pos",
        "err_info",
        "s",
        "pos",
        "b",
        "pos",
        "err_info",
        "pos",
        "b",
        "pos",
        "err_info",
        "pos",
        "err_info",
        "errors",
        "pos",
        "_b_",
        "err_info",
        "err_info",
        "err_info",
        "cp",
        "cp",
        "b",
        "pos",
        "s",
        "cp",
        "pos",
        "b",
        "pos",
        "err_info",
        "pos",
        "pos",
        "b",
        "pos",
        "err_info",
        "pos",
        "pos",
        "b",
        "pos",
        "err_info",
        "pos",
        "pos",
        "pos",
        "b",
        "pos",
        "err_info",
        "pos",
        "pos",
        "err_info",
        "errors",
        "pos",
        "err_info",
        "errors",
        "i",
        "err_info",
        "i",
        "s",
        "b",
        "i",
        "pos",
        "err_info",
        "_b_",
        "err_info",
        "err_info",
        "err_info",
        "cp",
        "cp",
        "cp",
        "b",
        "pos",
        "cp",
        "b",
        "pos",
        "s",
        "cp",
        "pos",
        "errors",
        "pos",
        "errors",
        "s",
        "b",
        "pos",
        "pos",
        "_b_",
        "pos",
        "s",
        "b",
        "item",
        "s",
        "item",
        "obj",
        "obj",
        "obj",
        "decode",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "decode",
        "obj",
        "obj",
        "mo",
        "parseInt",
        "mo",
        "cp",
        "b",
        "i",
        "len",
        "i",
        "b",
        "i",
        "cp",
        "s",
        "cp",
        "errors",
        "cp",
        "i",
        "_b_",
        "msg",
        "load_decoder",
        "enc",
        "err",
        "b",
        "encoding",
        "err",
        "_b_",
        "enc",
        "to_unicode",
        "enc",
        "obj",
        "s",
        "$B",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "normalise",
        "encoding",
        "enc",
        "s",
        "i",
        "len",
        "i",
        "s",
        "i",
        "cp",
        "res",
        "cp",
        "cp",
        "res",
        "cp",
        "cp",
        "cp",
        "res",
        "cp",
        "cp",
        "cp",
        "res",
        "s",
        "i",
        "len",
        "i",
        "s",
        "i",
        "cp",
        "t",
        "pos",
        "cp",
        "errors",
        "$UnicodeEncodeError",
        "encoding",
        "i",
        "s",
        "i",
        "len",
        "i",
        "s",
        "i",
        "cp",
        "t",
        "pos",
        "cp",
        "errors",
        "$UnicodeEncodeError",
        "encoding",
        "i",
        "s",
        "i",
        "len",
        "i",
        "s",
        "i",
        "cp",
        "t",
        "pos",
        "cp",
        "cp",
        "us",
        "us",
        "us",
        "us",
        "us",
        "j",
        "us",
        "j",
        "t",
        "pos",
        "us",
        "j",
        "load_encoder",
        "enc",
        "err",
        "_b_",
        "encoding",
        "t",
        "from_unicode",
        "enc",
        "s",
        "t",
        "source",
        "encoding",
        "errors",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "_b_",
        "attr",
        "attr",
        "attr",
        "attr",
        "_attr",
        "_attr",
        "arguments",
        "attr",
        "$B",
        "_b_",
        "$B",
        "_b_",
        "_b_",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "obj",
        "$B",
        "obj",
        "obj",
        "create_type",
        "obj",
        "res",
        "obj",
        "key",
        "obj",
        "res",
        "key",
        "obj",
        "key",
        "res",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "accept_iter",
        "$test",
        "accept_iter",
        "other",
        "err",
        "_b_",
        "create_type",
        "i",
        "len",
        "i",
        "_b_",
        "other",
        "i",
        "res",
        "i",
        "res",
        "item",
        "item",
        "item",
        "isNaN",
        "item",
        "i",
        "i",
        "isNaN",
        "i",
        "item",
        "item",
        "item",
        "item",
        "item",
        "_b_",
        "item",
        "$B",
        "item",
        "_b_",
        "item",
        "hash",
        "hash",
        "i",
        "len",
        "i",
        "$B",
        "hash",
        "i",
        "item",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "other",
        "i",
        "len",
        "i",
        "other",
        "i",
        "other",
        "i",
        "_b_",
        "format_string",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "iterable",
        "second",
        "second",
        "iterable",
        "iterable",
        "i",
        "len",
        "i",
        "$add",
        "iterable",
        "i",
        "$N",
        "$B",
        "arguments",
        "$",
        "$",
        "_b_",
        "iterable",
        "iterable",
        "key",
        "iterable",
        "key",
        "iterable",
        "key",
        "$N",
        "$B",
        "iterable",
        "_b_",
        "it",
        "$add",
        "item",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "$N",
        "$B",
        "set_iterator",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "i",
        "len",
        "i",
        "cfunc",
        "i",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "cls",
        "cls",
        "_b_",
        "cls",
        "other",
        "accept_iter",
        "clone",
        "_b_",
        "$B",
        "other",
        "res",
        "func",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "res",
        "res",
        "other",
        "other",
        "_b_",
        "_b_",
        "$N",
        "protocol",
        "other",
        "other",
        "other",
        "other",
        "$B",
        "klass_name",
        "klass_name",
        "head",
        "head",
        "tail",
        "klass_name",
        "i",
        "len",
        "i",
        "_b_",
        "i",
        "r",
        "r",
        "i",
        "res",
        "res",
        "r",
        "res",
        "res",
        "head",
        "res",
        "tail",
        "other",
        "accept_iter",
        "$test",
        "accept_iter",
        "other",
        "err",
        "_b_",
        "create_type",
        "_b_",
        "other",
        "i",
        "len",
        "i",
        "cfunc",
        "i",
        "res",
        "i",
        "res",
        "other",
        "accept_iter",
        "$test",
        "accept_iter",
        "other",
        "err",
        "_b_",
        "create_type",
        "_b_",
        "other",
        "i",
        "len",
        "i",
        "cfunc",
        "i",
        "res",
        "i",
        "other",
        "i",
        "len",
        "i",
        "other",
        "i",
        "res",
        "other",
        "i",
        "res",
        "accept_iter",
        "other",
        "op",
        "accept_iter",
        "_b_",
        "other",
        "_b_",
        "op",
        "$B",
        "other",
        "$B",
        "item",
        "item",
        "item",
        "item",
        "$simple",
        "$simple",
        "item",
        "ix",
        "item",
        "item",
        "item",
        "item",
        "item",
        "item",
        "value",
        "value",
        "item",
        "ix",
        "item",
        "_b_",
        "item",
        "item",
        "items",
        "item",
        "item",
        "item",
        "item",
        "other",
        "$B",
        "item",
        "other",
        "items",
        "i",
        "len",
        "i",
        "cfunc",
        "items",
        "i",
        "$N",
        "item",
        "item",
        "item",
        "$N",
        "$B",
        "arguments",
        "$",
        "$",
        "$add",
        "item",
        "$B",
        "arguments",
        "$",
        "$",
        "$N",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$",
        "$",
        "item",
        "res",
        "item",
        "$",
        "item",
        "res",
        "item",
        "key",
        "res",
        "key",
        "key",
        "res",
        "$B",
        "arguments",
        "i",
        "$",
        "i",
        "$",
        "i",
        "_b_",
        "$B",
        "s",
        "item",
        "_next",
        "item",
        "_type",
        "_type",
        "item",
        "_index",
        "_index",
        "j",
        "j",
        "$B",
        "j",
        "item",
        "j",
        "_b_",
        "item",
        "hash",
        "k",
        "hash",
        "k",
        "$B",
        "hash",
        "k",
        "item",
        "hash",
        "k",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "$N",
        "$B",
        "arguments",
        "$",
        "$",
        "err",
        "_b_",
        "err",
        "_b_",
        "_b_",
        "err",
        "$N",
        "$B",
        "arguments",
        "$",
        "i",
        "$",
        "i",
        "$",
        "i",
        "j",
        "j",
        "j",
        "_item",
        "_type",
        "_type",
        "s",
        "_item",
        "remove",
        "j",
        "_b_",
        "_item",
        "s",
        "hash",
        "s",
        "hash",
        "found",
        "k",
        "hashes",
        "k",
        "$B",
        "hashes",
        "k",
        "_item",
        "found",
        "found",
        "remove",
        "j",
        "hashes",
        "hash",
        "found",
        "k",
        "hashes",
        "k",
        "$B",
        "hashes",
        "k",
        "_item",
        "k",
        "remove",
        "x",
        "y",
        "x",
        "y",
        "j",
        "remove",
        "j",
        "remove",
        "j",
        "$N",
        "$B",
        "arguments",
        "$",
        "i",
        "len",
        "i",
        "_b_",
        "$",
        "$",
        "i",
        "_b_",
        "item",
        "item",
        "_b_",
        "item",
        "hash",
        "k",
        "items",
        "k",
        "$B",
        "items",
        "k",
        "item",
        "hash",
        "k",
        "item",
        "item",
        "$B",
        "arguments",
        "$",
        "$",
        "_b_",
        "item",
        "_b_",
        "item",
        "item",
        "item",
        "item",
        "_i",
        "_b_",
        "item",
        "_i",
        "item",
        "item",
        "$N",
        "_b_",
        "item",
        "hash",
        "i",
        "len",
        "i",
        "$B",
        "i",
        "item",
        "i",
        "item",
        "item",
        "hash",
        "i",
        "len",
        "i",
        "$B",
        "hash",
        "i",
        "item",
        "hash",
        "i",
        "$N",
        "_b_",
        "item",
        "s",
        "$B",
        "arguments",
        "$",
        "$",
        "_b_",
        "$B",
        "s",
        "item",
        "_next",
        "item",
        "_type",
        "_type",
        "item",
        "_index",
        "remove",
        "_index",
        "add",
        "item",
        "found",
        "j",
        "j",
        "$B",
        "j",
        "item",
        "remove",
        "j",
        "found",
        "found",
        "add",
        "item",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "remove",
        "x",
        "y",
        "x",
        "y",
        "i",
        "remove",
        "i",
        "remove",
        "i",
        "remove",
        "i",
        "remove",
        "i",
        "i",
        "add",
        "i",
        "add",
        "i",
        "$N",
        "$B",
        "arguments",
        "i",
        "$",
        "i",
        "$",
        "i",
        "other",
        "j",
        "_len",
        "j",
        "$add",
        "other",
        "j",
        "$N",
        "$B",
        "arguments",
        "$",
        "$",
        "clone",
        "$",
        "i",
        "$",
        "i",
        "res",
        "res",
        "$",
        "i",
        "res",
        "eval",
        "fc",
        "eval",
        "fc",
        "eval",
        "fc",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$",
        "i",
        "len",
        "i",
        "func",
        "$",
        "i",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$B",
        "$",
        "_b_",
        "it",
        "func",
        "item",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "f",
        "op",
        "other",
        "accept_iter",
        "$test",
        "accept_iter",
        "other",
        "op",
        "f",
        "other",
        "$accept_only_set",
        "$accept_only_set",
        "$accept_only_set",
        "$accept_only_set",
        "res",
        "arguments",
        "args",
        "res",
        "$B",
        "_b_",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "x",
        "x",
        "arguments",
        "attr",
        "attr",
        "attr",
        "$B",
        "_hash",
        "i",
        "len",
        "i",
        "_b_",
        "i",
        "_hash",
        "_h",
        "_h",
        "_hash",
        "_hash",
        "_hash",
        "_hash",
        "_hash",
        "$N",
        "cls",
        "cls",
        "_b_",
        "cls",
        "singleton_id",
        "$B",
        "arguments",
        "$",
        "empty_frozenset",
        "$",
        "$",
        "$",
        "res",
        "empty_frozenset",
        "res",
        "res",
        "$B",
        "_b_",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "eval",
        "bltns",
        "_b_",
        "$B",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "obj",
        "_b_",
        "obj",
        "i",
        "len",
        "i",
        "res",
        "$B",
        "obj",
        "i",
        "res",
        "obj",
        "_b_",
        "obj",
        "obj",
        "_b_",
        "key",
        "obj",
        "res",
        "key",
        "$B",
        "obj",
        "key",
        "res",
        "obj",
        "obj",
        "obj",
        "$B",
        "obj",
        "obj",
        "_b_",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "obj",
        "_b_",
        "_b_",
        "obj",
        "i",
        "len",
        "i",
        "res",
        "$B",
        "obj",
        "i",
        "res",
        "obj",
        "_b_",
        "key",
        "obj",
        "_b_",
        "res",
        "key",
        "$B",
        "obj",
        "key",
        "res",
        "obj",
        "obj",
        "obj",
        "_b_",
        "obj",
        "_b_",
        "_b_",
        "_b_",
        "obj",
        "_b_",
        "JSConstructor",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "pyobj2jsobj",
        "arguments",
        "i",
        "args",
        "factory",
        "$B",
        "res",
        "JSConstructor",
        "attr",
        "attr",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "pyobj2jsobj",
        "arguments",
        "i",
        "args",
        "factory",
        "$B",
        "res",
        "JSObject",
        "attr",
        "JSConstructor",
        "obj",
        "JSConstructor",
        "obj",
        "obj",
        "$B",
        "Undefined",
        "UndefinedClass",
        "UndefinedClass",
        "UndefinedClass",
        "$B",
        "UndefinedClass",
        "$B",
        "jsobj",
        "jsobj",
        "jsobj",
        "jsobj",
        "$B",
        "jsobj",
        "_b_",
        "jsobj",
        "_b_",
        "jsobj",
        "jsobj2pyobj",
        "jsobj",
        "jsobj",
        "_b_",
        "jsobj",
        "_b_",
        "jsobj",
        "jsobj",
        "jsobj",
        "$B",
        "jsobj",
        "$B",
        "jsobj",
        "JSObject",
        "jsobj",
        "$B",
        "pyobj",
        "pyobj",
        "pyobj",
        "pyobj",
        "pyobj",
        "_b_",
        "pyobj",
        "$B",
        "$B",
        "pyobj",
        "klass",
        "pyobj",
        "klass",
        "JSObject",
        "klass",
        "JSConstructor",
        "pyobj",
        "pyobj",
        "pyobj",
        "klass",
        "$B",
        "klass",
        "$B",
        "pyobj",
        "_b_",
        "_b_",
        "klass",
        "pyobj",
        "item",
        "res",
        "pyobj2jsobj",
        "item",
        "res",
        "klass",
        "_b_",
        "_b_",
        "klass",
        "_b_",
        "_b_",
        "_b_",
        "pyobj",
        "items",
        "item",
        "item",
        "item",
        "jsobj",
        "jsobj",
        "item",
        "pyobj2jsobj",
        "item",
        "jsobj",
        "klass",
        "_b_",
        "pyobj",
        "klass",
        "$B",
        "klass",
        "$B",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "args",
        "_b_",
        "args",
        "jsobj2pyobj",
        "arguments",
        "i",
        "pyobj2jsobj",
        "pyobj",
        "args",
        "err",
        "err",
        "_b_",
        "err",
        "$B",
        "err",
        "err",
        "err",
        "err",
        "pyobj",
        "_b_",
        "JSObject",
        "JSObject",
        "attr",
        "_b_",
        "attr",
        "attr",
        "_b_",
        "JSObject",
        "JSObject",
        "attr",
        "$test",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "JSObject",
        "attr",
        "i",
        "arguments",
        "i",
        "args",
        "$B",
        "arguments",
        "i",
        "args",
        "res",
        "JSObject",
        "res",
        "_b_",
        "JSObject",
        "attr",
        "attr",
        "attr",
        "attr",
        "MessageEvent",
        "$B",
        "attr",
        "attr",
        "js_attr",
        "attr",
        "js_attr",
        "$test",
        "js_attr",
        "js_attr",
        "arguments",
        "i",
        "len",
        "i",
        "arguments",
        "i",
        "arg",
        "arg",
        "arg",
        "arg",
        "kw",
        "kw",
        "$B",
        "js_attr",
        "kw",
        "kw",
        "_b_",
        "args",
        "pyobj2jsobj",
        "arg",
        "attr",
        "location",
        "location",
        "args",
        "new_this",
        "_window",
        "new_this",
        "js_attr",
        "new_this",
        "args",
        "$test",
        "result",
        "jsobj2pyobj",
        "result",
        "jsobj2pyobj",
        "result",
        "res",
        "attr",
        "res",
        "attr",
        "res",
        "js_attr",
        "JSObject",
        "res",
        "js_attr",
        "$test",
        "$B",
        "js_attr",
        "$B",
        "js_attr",
        "_window",
        "attr",
        "$Location",
        "attr",
        "res",
        "mro",
        "i",
        "len",
        "i",
        "mro",
        "i",
        "attr",
        "v",
        "res",
        "v",
        "res",
        "$test",
        "res",
        "res",
        "arguments",
        "i",
        "len",
        "i",
        "arguments",
        "i",
        "arg",
        "arg",
        "JSObject",
        "arg",
        "JSConstructor",
        "args",
        "arg",
        "args",
        "arg",
        "res",
        "args",
        "$B",
        "res",
        "_b_",
        "attr",
        "JSObject",
        "rank",
        "rank",
        "rank",
        "_b_",
        "rank",
        "rank_to_int",
        "rank_to_int",
        "rank_to_int",
        "res",
        "_b_",
        "rank",
        "JSObject",
        "res",
        "rank",
        "JSObject",
        "rank",
        "res",
        "_b_",
        "rank",
        "res",
        "$B",
        "$B",
        "rank",
        "err",
        "rank",
        "JSObject",
        "rank",
        "_b_",
        "rank",
        "$B",
        "JSObject",
        "_window",
        "nxt",
        "items",
        "nxt",
        "i",
        "i",
        "items",
        "i",
        "JSObject_iterator",
        "items",
        "i",
        "i",
        "items",
        "JSObject",
        "i",
        "JSObject_iterator",
        "items",
        "JSObject",
        "_b_",
        "_dict",
        "JSObject",
        "other",
        "$B",
        "$B",
        "other",
        "_b_",
        "JSObject",
        "getattr",
        "err",
        "_b_",
        "JSObject",
        "proto",
        "proto",
        "name",
        "proto",
        "name",
        "proto_str",
        "proto_str",
        "name",
        "JSObject",
        "attr",
        "value",
        "attr",
        "attr",
        "attr",
        "attr",
        "isinstance",
        "value",
        "JSObject",
        "attr",
        "value",
        "attr",
        "value",
        "value",
        "attr",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "$B",
        "arguments",
        "i",
        "value",
        "args",
        "err",
        "err",
        "$B",
        "err",
        "_b_",
        "err",
        "err",
        "err",
        "info",
        "$B",
        "err",
        "_b_",
        "err",
        "err",
        "info",
        "$B",
        "err",
        "err",
        "err",
        "JSObject",
        "JSObject",
        "JSObject",
        "JSObject",
        "JSObject",
        "evt",
        "func",
        "ev",
        "func",
        "jsobj2pyobj",
        "ev",
        "evt",
        "js_func",
        "_b_",
        "JSObject",
        "$B",
        "JSObject",
        "obj",
        "obj",
        "_b_",
        "obj",
        "JSObject",
        "obj",
        "obj",
        "$B",
        "obj",
        "klass",
        "_b_",
        "_b_",
        "obj",
        "klass",
        "_b_",
        "$B",
        "obj",
        "klass",
        "obj",
        "JSObject",
        "obj",
        "$B",
        "JSObject",
        "$B",
        "JSConstructor",
        "__BRYTHON__",
        "__BRYTHON__",
        "$B",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "cls",
        "name",
        "doc",
        "$package",
        "cls",
        "name",
        "doc",
        "_b_",
        "$package",
        "_b_",
        "res",
        "res",
        "attr",
        "value",
        "$B",
        "attr",
        "value",
        "attr",
        "value",
        "name",
        "doc",
        "$package",
        "name",
        "doc",
        "_b_",
        "$package",
        "_b_",
        "$B",
        "mod_name",
        "mod_name",
        "parts",
        "parts",
        "mod",
        "url",
        "$package",
        "XMLHttpRequest",
        "mod",
        "_window",
        "xhr",
        "$B",
        "xhr",
        "url",
        "xhr",
        "url",
        "fake_qs",
        "xhr",
        "$B",
        "xhr",
        "xhr",
        "res",
        "xhr",
        "res",
        "_b_",
        "mod_name",
        "xhr",
        "xhr",
        "res",
        "xhr",
        "mod",
        "xhr",
        "xhr",
        "mod_name",
        "url",
        "res",
        "_b_",
        "mod_name",
        "_window",
        "timer",
        "res",
        "_b_",
        "mod_name",
        "res",
        "res",
        "res",
        "$B",
        "$download_module",
        "mod",
        "path",
        "$download_module",
        "mod",
        "path",
        "err",
        "run_js",
        "module_contents",
        "path",
        "mod",
        "module_contents",
        "path",
        "_module",
        "module_contents",
        "$B",
        "_module",
        "module_contents",
        "err",
        "err",
        "path",
        "_module",
        "err",
        "$module",
        "err",
        "_b_",
        "$module",
        "_module",
        "attr",
        "$module",
        "$module",
        "attr",
        "$module",
        "attr",
        "_module",
        "attr",
        "attr",
        "_module",
        "attr",
        "$module",
        "_module",
        "attr",
        "$module",
        "attr",
        "$module",
        "_module",
        "$module",
        "$module",
        "$module",
        "_module",
        "$module",
        "$module",
        "$B",
        "_module",
        "_module",
        "_module",
        "path",
        "_module",
        "$module",
        "path",
        "$B",
        "_module",
        "$module",
        "_window",
        "kk",
        "i",
        "len",
        "i",
        "kk",
        "i",
        "kk",
        "i",
        "eval",
        "kk",
        "i",
        "mod",
        "path",
        "$package",
        "mod",
        "$download_module",
        "mod",
        "path",
        "$package",
        "mod",
        "module_contents",
        "$B",
        "mod_name",
        "mod",
        "$B",
        "mod_name",
        "mod",
        "path",
        "path",
        "$B",
        "mod_name",
        "mod_name",
        "$B",
        "mod_name",
        "path",
        "$B",
        "mod_name",
        "mod",
        "$package",
        "$B",
        "mod_name",
        "$package",
        "mod_name",
        "mod_elts",
        "$B",
        "mod_name",
        "mod_elts",
        "$B",
        "mod_name",
        "path",
        "run_py",
        "module_contents",
        "path",
        "mod",
        "module_contents",
        "path",
        "compiled",
        "$B",
        "path",
        "module_contents",
        "compiled",
        "$B",
        "$B",
        "$B",
        "path",
        "module_contents",
        "root",
        "$B",
        "src",
        "$B",
        "root",
        "js",
        "compiled",
        "module_contents",
        "root",
        "$B",
        "js",
        "js",
        "js",
        "module_id",
        "js",
        "err",
        "err",
        "root",
        "err",
        "$B",
        "js",
        "attr",
        "err",
        "attr",
        "err",
        "attr",
        "_b_",
        "err",
        "err",
        "err",
        "err",
        "$B",
        "$B",
        "err",
        "$B",
        "eval",
        "attr",
        "mod",
        "attr",
        "mod",
        "attr",
        "$B",
        "src",
        "mod_name",
        "root",
        "err",
        "err",
        "attr",
        "err",
        "attr",
        "err",
        "attr",
        "$B",
        "__BRYTHON__",
        "err",
        "$B",
        "run_py",
        "fields",
        "fields",
        "fields",
        "_b_",
        "_b_",
        "cls",
        "spec",
        "_b_",
        "cls",
        "modobj",
        "modobj",
        "modobj",
        "modobj",
        "stored",
        "stored",
        "stored",
        "modobj",
        "stored",
        "modobj",
        "path",
        "modobj",
        "ext",
        "modobj",
        "path",
        "$B",
        "modobj",
        "$B",
        "modobj",
        "ext",
        "run_js",
        "module_contents",
        "modobj",
        "modobj",
        "$B",
        "modobj",
        "$B",
        "modobj",
        "modobj",
        "i",
        "parts",
        "i",
        "parts",
        "i",
        "$B",
        "parent",
        "$B",
        "parent",
        "$B",
        "parent",
        "modobj",
        "mod_js",
        "mod_js",
        "mod_js",
        "$B",
        "parent",
        "parent",
        "is_package",
        "mod",
        "is_package",
        "mod",
        "mod",
        "parent",
        "parent",
        "elts",
        "mod",
        "elts",
        "mod",
        "path",
        "parent",
        "mod_js",
        "parent_id",
        "parent_id",
        "mod_js",
        "mod",
        "err",
        "$B",
        "err",
        "k",
        "err",
        "k",
        "err",
        "k",
        "$B",
        "$B",
        "modobj",
        "mod_js",
        "err",
        "attr",
        "$module",
        "mod",
        "attr",
        "$module",
        "attr",
        "$module",
        "path",
        "i",
        "$B",
        "$B",
        "parts",
        "i",
        "parts",
        "i",
        "$module",
        "$module",
        "modobj",
        "$B",
        "mod_name",
        "run_py",
        "module_contents",
        "modobj",
        "modobj",
        "record",
        "modobj",
        "record",
        "$B",
        "record",
        "timestamp",
        "$B",
        "mod_name",
        "record",
        "record",
        "record",
        "mod_name",
        "elts",
        "elts",
        "$B",
        "$B",
        "indexedDB",
        "$B",
        "idb_cx",
        "evt",
        "evt",
        "db",
        "tx",
        "store",
        "store",
        "record",
        "request",
        "$B",
        "modobj",
        "request",
        "modobj",
        "cls",
        "name",
        "path",
        "Loader",
        "name",
        "path",
        "cls",
        "cls",
        "name",
        "path",
        "name",
        "$B",
        "name",
        "mod",
        "mod",
        "spec",
        "cls",
        "cls",
        "mod",
        "cls",
        "fullname",
        "path",
        "prev_module",
        "$B",
        "_b_",
        "stored",
        "$B",
        "fullname",
        "stored",
        "_b_",
        "is_package",
        "stored",
        "timestamp",
        "stored",
        "stored",
        "$B",
        "fullname",
        "new_spec",
        "fullname",
        "cls",
        "is_builtin",
        "is_package",
        "_b_",
        "stored",
        "timestamp",
        "_b_",
        "is_package",
        "fullname",
        "parent_package",
        "fullname",
        "_b_",
        "$B",
        "finder_VFS",
        "method",
        "finder_VFS",
        "finder_VFS",
        "method",
        "finder_VFS",
        "method",
        "_b_",
        "finder_VFS",
        "method",
        "finder_VFS",
        "finder_VFS",
        "finder_stdlib_static",
        "_b_",
        "_b_",
        "cls",
        "spec",
        "_b_",
        "cls",
        "metadata",
        "metadata",
        "import_py",
        "metadata",
        "import_js",
        "metadata",
        "cls",
        "name",
        "path",
        "cls",
        "cls",
        "name",
        "path",
        "spec",
        "_b_",
        "_b_",
        "Loader",
        "name",
        "path",
        "name",
        "$B",
        "name",
        "mod",
        "mod",
        "spec",
        "mod",
        "spec",
        "cls",
        "cls",
        "mod",
        "cls",
        "fullname",
        "path",
        "prev_module",
        "$B",
        "$B",
        "$B",
        "fullname",
        "address",
        "fullname",
        "elts",
        "elts",
        "$B",
        "elts",
        "$package",
        "$package",
        "address",
        "address",
        "address",
        "address",
        "$B",
        "ext",
        "fullname",
        "ext",
        "is_pkg",
        "path",
        "is_pkg",
        "ext",
        "address",
        "new_spec",
        "fullname",
        "cls",
        "metadata",
        "is_pkg",
        "path",
        "_b_",
        "metadata",
        "_b_",
        "is_pkg",
        "fullname",
        "parent_package",
        "fullname",
        "_b_",
        "res",
        "_b_",
        "$B",
        "finder_stdlib_static",
        "method",
        "finder_stdlib_static",
        "finder_stdlib_static",
        "method",
        "finder_stdlib_static",
        "method",
        "_b_",
        "finder_stdlib_static",
        "method",
        "finder_stdlib_static",
        "finder_stdlib_static",
        "_b_",
        "_b_",
        "cls",
        "spec",
        "_b_",
        "cls",
        "_module",
        "$B",
        "_module",
        "_spec",
        "_module",
        "_spec",
        "_spec",
        "_spec",
        "src_type",
        "src_type",
        "run_py",
        "code",
        "_spec",
        "_module",
        "src_type",
        "_spec",
        "run_js",
        "code",
        "_spec",
        "_module",
        "cls",
        "name",
        "path",
        "finder_path",
        "cls",
        "name",
        "path",
        "cls",
        "fullname",
        "path",
        "prev_module",
        "$B",
        "$B",
        "$B",
        "$B",
        "current_module",
        "_b_",
        "$B",
        "path",
        "path",
        "$B",
        "path",
        "i",
        "li",
        "i",
        "path",
        "i",
        "path_entry",
        "path_entry",
        "path_entry",
        "$B",
        "path_entry",
        "finder",
        "$B",
        "j",
        "lj",
        "finder_notfound",
        "j",
        "$B",
        "j",
        "finder",
        "hook",
        "hook",
        "$B",
        "hook",
        "path_entry",
        "finder_notfound",
        "e",
        "e",
        "_b_",
        "e",
        "finder_notfound",
        "$B",
        "path_entry",
        "_b_",
        "$B",
        "finder",
        "$B",
        "finder",
        "find_spec",
        "find_spec",
        "$B",
        "find_spec",
        "fs_func",
        "fullname",
        "prev_module",
        "$B",
        "spec",
        "spec",
        "_b_",
        "$B",
        "finder_path",
        "method",
        "finder_path",
        "finder_path",
        "method",
        "finder_path",
        "method",
        "_b_",
        "finder_path",
        "method",
        "finder_path",
        "finder_path",
        "_b_",
        "_b_",
        "fullname",
        "fullname",
        "hint",
        "tryall",
        "hint",
        "modpaths",
        "modpaths",
        "base_path",
        "base_path",
        "notfound",
        "j",
        "modpaths",
        "j",
        "modpaths",
        "j",
        "fullname",
        "loader_data",
        "$download_module",
        "file_info",
        "notfound",
        "loader_data",
        "file_info",
        "loader_data",
        "file_info",
        "hint",
        "file_info",
        "$B",
        "loader_data",
        "$B",
        "base_path",
        "url_hook",
        "base_path",
        "loader_data",
        "file_info",
        "err",
        "notfound",
        "new_spec",
        "fullname",
        "finder_path",
        "loader_data",
        "loader_data",
        "base_path",
        "_b_",
        "loader_data",
        "_b_",
        "loader_data",
        "fullname",
        "parent_package",
        "fullname",
        "_b_",
        "_b_",
        "url_hook",
        "path_entry",
        "hint",
        "url_hook",
        "path_entry",
        "path_entry",
        "path_entry",
        "hint",
        "$B",
        "url_hook",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "i",
        "_sys_paths",
        "i",
        "_sys_paths",
        "i",
        "_path",
        "_path",
        "_path",
        "$B",
        "_path",
        "url_hook",
        "_path",
        "_type",
        "mod_name",
        "_b_",
        "mod_name",
        "exc",
        "mod_name",
        "exc",
        "$B",
        "mod_name",
        "globals",
        "locals",
        "fromlist",
        "level",
        "globals",
        "globals",
        "globals",
        "file",
        "$B",
        "file",
        "$B",
        "file",
        "$B",
        "file",
        "from_stdlib",
        "$B",
        "mod_name",
        "mod_name",
        "fromlist",
        "modobj",
        "_b_",
        "import_error",
        "mod_name",
        "modobj",
        "$B",
        "fromlist",
        "fromlist",
        "parsed_name",
        "_b_",
        "i",
        "len",
        "i",
        "_mod_name",
        "modsep",
        "parsed_name",
        "i",
        "modsep",
        "$B",
        "_mod_name",
        "modobj",
        "_b_",
        "import_error",
        "_mod_name",
        "modobj",
        "$B",
        "_mod_name",
        "__path__",
        "from_stdlib",
        "err",
        "$B",
        "_mod_name",
        "err",
        "$B",
        "$B",
        "_mod_name",
        "import_error",
        "_mod_name",
        "_parent_name",
        "_b_",
        "$B",
        "_parent_name",
        "parsed_name",
        "i",
        "$B",
        "_mod_name",
        "i",
        "len",
        "__path__",
        "$B",
        "$B",
        "_mod_name",
        "e",
        "i",
        "len",
        "$B",
        "_mod_name",
        "parsed_name",
        "len",
        "$B",
        "_mod_name",
        "parsed_name",
        "len",
        "$B",
        "_mod_name",
        "parsed_name",
        "len",
        "has_from",
        "import_error",
        "mod_name",
        "_b_",
        "exc",
        "mod_name",
        "_mod_name",
        "exc",
        "$B",
        "exc",
        "exc",
        "mod_name",
        "exc",
        "_b_",
        "exc",
        "$B",
        "parsed_name",
        "parsed_name",
        "$B",
        "$B",
        "parsed_name",
        "parsed_name",
        "modobj",
        "err",
        "parsed_name",
        "modobj",
        "err",
        "fromlist",
        "$B",
        "mod_name",
        "$B",
        "parsed_name",
        "$B",
        "mod_name",
        "fromlist",
        "aliases",
        "locals",
        "fromlist",
        "fromlist",
        "fromlist",
        "aliases",
        "aliases",
        "aliases",
        "locals",
        "locals",
        "locals",
        "mod_name",
        "mod_name",
        "mod_name",
        "parts",
        "parts",
        "i",
        "len",
        "i",
        "parts",
        "i",
        "prefix",
        "p",
        "elt",
        "norm_parts",
        "elt",
        "_b_",
        "prefix",
        "norm_parts",
        "p",
        "p",
        "p",
        "norm_parts",
        "$B",
        "mod_name",
        "$B",
        "$B",
        "$B",
        "$B",
        "current_frame",
        "_globals",
        "$B",
        "_globals",
        "__import__",
        "__import__",
        "$B",
        "__import__",
        "__import__",
        "$B",
        "__import__",
        "importer",
        "mod_name",
        "globals",
        "fromlist",
        "fromlist",
        "fromlist",
        "aliases",
        "mod_name",
        "alias",
        "locals",
        "alias",
        "$B",
        "mod_name",
        "locals",
        "$B",
        "norm_parts",
        "modobj",
        "fromlist",
        "fromlist",
        "__all__",
        "$B",
        "modobj",
        "thunk",
        "__all__",
        "thunk",
        "aliases",
        "__all__",
        "thunk",
        "attr",
        "modobj",
        "attr",
        "locals",
        "attr",
        "modobj",
        "attr",
        "__all__",
        "i",
        "l",
        "i",
        "__all__",
        "i",
        "aliases",
        "name",
        "name",
        "locals",
        "alias",
        "$B",
        "modobj",
        "name",
        "$err1",
        "$B",
        "name",
        "$B",
        "__import__",
        "mod_name",
        "name1",
        "globals",
        "locals",
        "alias",
        "$B",
        "modobj",
        "name1",
        "$err3",
        "mod_name",
        "$B",
        "$B",
        "frame",
        "line_info",
        "parseInt",
        "line_elts",
        "$B",
        "frame",
        "name",
        "current_frame",
        "line_num",
        "$err3",
        "$err3",
        "$err3",
        "_b_",
        "$err3",
        "_b_",
        "$B",
        "$err3",
        "_b_",
        "name",
        "$B",
        "$err3",
        "$B",
        "$B",
        "_b_",
        "name",
        "locals",
        "$B",
        "locals",
        "attr",
        "attr",
        "locals",
        "attr",
        "attr",
        "attr",
        "locals",
        "attr",
        "attr",
        "$B",
        "url_hook",
        "$B",
        "finder_VFS",
        "finder_stdlib_static",
        "finder_path",
        "$B",
        "finder_VFS",
        "finder_stdlib_static",
        "finder_path",
        "path",
        "filetype",
        "path",
        "path",
        "path",
        "filetype",
        "_b_",
        "url_hook",
        "path",
        "filetype",
        "$B",
        "path",
        "value",
        "$B",
        "_b_",
        "Loader",
        "finder_VFS",
        "finder_stdlib_static",
        "finder_path",
        "url_hook",
        "optimize_import_for_path",
        "_importlib_module",
        "_importlib_module",
        "$B",
        "_importlib_module",
        "__BRYTHON__",
        "$B",
        "$B",
        "eval",
        "bltns",
        "_b_",
        "op",
        "other",
        "op",
        "$B",
        "other",
        "_b_",
        "msg",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "float_value",
        "_b_",
        "_b_",
        "float_value",
        "float_value",
        "float_value",
        "_b_",
        "_b_",
        "_b_",
        "tmp",
        "tmp",
        "i",
        "i",
        "fp",
        "fp",
        "fp",
        "exponent",
        "numerator",
        "fp",
        "py_exponent",
        "abs",
        "exponent",
        "denominator",
        "py_exponent",
        "_b_",
        "_b_",
        "denominator",
        "py_exponent",
        "exponent",
        "numerator",
        "numerator",
        "py_exponent",
        "denominator",
        "py_exponent",
        "_b_",
        "_b_",
        "numerator",
        "_b_",
        "denominator",
        "float_value",
        "_b_",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "isNaN",
        "isNaN",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "isinstance",
        "other",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "ZeroDivisionError",
        "other",
        "hasattr",
        "other",
        "getattr",
        "other",
        "$err",
        "other",
        "arg",
        "isinstance",
        "arg",
        "_b_",
        "_b_",
        "arg",
        "value",
        "$FloatClass",
        "Infinity",
        "$FloatClass",
        "Infinity",
        "$FloatClass",
        "$FloatClass",
        "_b_",
        "value",
        "_m",
        "$FloatClass",
        "parseFloat",
        "_m",
        "value",
        "_m",
        "_b_",
        "_m",
        "parseInt",
        "_m",
        "_m",
        "_m",
        "_sign",
        "_sign",
        "_sign",
        "_fraction",
        "i",
        "len",
        "i",
        "_sum",
        "parseInt",
        "_fraction",
        "i",
        "i",
        "_sign",
        "_sum",
        "parseInt",
        "_exponent",
        "arg",
        "arg",
        "arg",
        "_b_",
        "fmt",
        "fmt",
        "_b_",
        "fmt",
        "fmt",
        "_b_",
        "fmt",
        "isNaN",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "parseInt",
        "res",
        "res",
        "exp",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "fmt",
        "fmt",
        "prec",
        "prec",
        "res",
        "fmt",
        "fmt",
        "fmt",
        "pt_pos",
        "res",
        "fmt",
        "fmt",
        "res",
        "pt_pos",
        "missing",
        "res",
        "missing",
        "fmt",
        "fmt",
        "preformat",
        "parseInt",
        "exp_fmt",
        "exp",
        "exp",
        "fmt",
        "res",
        "preformat",
        "fmt",
        "exp",
        "res",
        "preformat",
        "fmt",
        "res",
        "fmt",
        "parts",
        "parts",
        "parts",
        "parts",
        "signif",
        "signif",
        "signif",
        "signif",
        "signif",
        "signif",
        "signif",
        "signif",
        "parts",
        "signif",
        "res",
        "parts",
        "fmt",
        "res",
        "res",
        "res",
        "fmt",
        "parseInt",
        "res1",
        "res1",
        "exp",
        "exp",
        "fmt",
        "res1",
        "elts",
        "elts",
        "elts",
        "elts",
        "res",
        "elts",
        "_b_",
        "fmt",
        "fmt",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "fmt",
        "res",
        "res",
        "res",
        "res",
        "fmt",
        "fmt",
        "fmt",
        "res",
        "fmt",
        "res",
        "fmt",
        "res",
        "res",
        "format_spec",
        "float_value",
        "$B",
        "format_spec",
        "fmt",
        "fmt",
        "preformat",
        "fmt",
        "raw",
        "fmt",
        "_int",
        "_int",
        "i",
        "nb",
        "i",
        "chunks",
        "_int",
        "len",
        "i",
        "len",
        "i",
        "chunks",
        "raw",
        "chunks",
        "$B",
        "raw",
        "fmt",
        "$B",
        "_v",
        "Infinity",
        "_v",
        "Infinity",
        "isNaN",
        "_v",
        "_v",
        "_v",
        "_v",
        "_b_",
        "_v",
        "r",
        "_b_",
        "r",
        "r",
        "r",
        "hipart",
        "hipart",
        "_b_",
        "r",
        "r",
        "x",
        "_b_",
        "x",
        "isinstance",
        "x",
        "x1",
        "x",
        "x1",
        "Infinity",
        "x1",
        "_b_",
        "x",
        "isinstance",
        "x",
        "x1",
        "x",
        "x1",
        "Infinity",
        "x1",
        "Infinity",
        "x1",
        "x1",
        "_b_",
        "x",
        "x",
        "x",
        "x",
        "_b_",
        "x",
        "isinstance",
        "x",
        "x1",
        "x",
        "isNaN",
        "x1",
        "_b_",
        "x1",
        "x1",
        "x1",
        "man",
        "sign",
        "sign",
        "man",
        "man",
        "man",
        "man",
        "ex",
        "man",
        "man",
        "ex",
        "man",
        "sign",
        "man",
        "ex",
        "_b_",
        "x",
        "i",
        "_b_",
        "x",
        "_b_",
        "x",
        "isinstance",
        "x",
        "y",
        "x",
        "y",
        "y",
        "isinstance",
        "i",
        "j",
        "i",
        "y",
        "j",
        "float_value",
        "DBL_MANT_DIG",
        "DBL_MANT_DIG",
        "Infinity",
        "Infinity",
        "_b_",
        "_b_",
        "_a",
        "_a",
        "_e",
        "_m",
        "_b_",
        "_m",
        "_shift",
        "_e",
        "_shift",
        "_int2hex",
        "_m",
        "_s",
        "_m",
        "_m",
        "i",
        "TOHEX_NBITS",
        "i",
        "_m",
        "_s",
        "_int2hex",
        "_m",
        "_m",
        "_m",
        "_e",
        "_esign",
        "_e",
        "_e",
        "_s",
        "_esign",
        "_e",
        "_s",
        "_esign",
        "_e",
        "value",
        "_b_",
        "parseInt",
        "_b_",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "other",
        "ZeroDivisionError",
        "isinstance",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "isinstance",
        "other",
        "other",
        "other",
        "q",
        "r",
        "isinstance",
        "other",
        "_b_",
        "other",
        "bool_value",
        "bool_value",
        "bool_value",
        "bool_value",
        "hasattr",
        "other",
        "getattr",
        "other",
        "$err",
        "other",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "$B",
        "parseFloat",
        "other",
        "other",
        "isinstance",
        "other",
        "float_value",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "bool_value",
        "bool_value",
        "isinstance",
        "other",
        "_b_",
        "$B",
        "other",
        "other",
        "hasattr",
        "other",
        "getattr",
        "other",
        "$err",
        "other",
        "other",
        "other",
        "res",
        "_b_",
        "res",
        "res",
        "other",
        "float_value",
        "cls",
        "value",
        "cls",
        "_b_",
        "_b_",
        "cls",
        "_b_",
        "_b_",
        "cls",
        "value",
        "cls",
        "_b_",
        "value",
        "float_value",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other_int",
        "isinstance",
        "other",
        "other",
        "isFinite",
        "other",
        "other",
        "$B",
        "$B",
        "other",
        "isNaN",
        "other",
        "isFinite",
        "other",
        "other",
        "_b_",
        "isNaN",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "isNaN",
        "other",
        "other",
        "other",
        "isNaN",
        "other",
        "isNaN",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "$B",
        "other",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "$B",
        "preal",
        "ln",
        "preal",
        "ln",
        "hasattr",
        "other",
        "getattr",
        "other",
        "$err",
        "other",
        "float_value",
        "Infinity",
        "Infinity",
        "isNaN",
        "res",
        "res",
        "_b_",
        "res",
        "attr",
        "value",
        "attr",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "attr",
        "value",
        "_b_",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "ZeroDivisionError",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "other",
        "cmod",
        "ZeroDivisionError",
        "$B",
        "other",
        "cmod",
        "other",
        "cmod",
        "hasattr",
        "other",
        "getattr",
        "other",
        "$err",
        "other",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "$B",
        "parseInt",
        "other",
        "other",
        "isinstance",
        "other",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "bool_value",
        "bool_value",
        "isinstance",
        "other",
        "_b_",
        "$B",
        "other",
        "other",
        "hasattr",
        "other",
        "getattr",
        "other",
        "$err",
        "other",
        "$op_func",
        "$op",
        "$ops",
        "$op_func",
        "$op",
        "$opf",
        "$opf",
        "$ops",
        "$op",
        "eval",
        "$ops",
        "$op",
        "$opf",
        "other",
        "float_value",
        "other",
        "float_value",
        "other",
        "isinstance",
        "other",
        "_b_",
        "other",
        "$B",
        "parseInt",
        "other",
        "other",
        "isinstance",
        "other",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "other",
        "hasattr",
        "other",
        "hasattr",
        "other",
        "_b_",
        "$B",
        "other",
        "getattr",
        "other",
        "inv_op",
        "inv_op",
        "_b_",
        "$B",
        "other",
        "$comp_func",
        "$op",
        "$B",
        "eval",
        "$B",
        "$op",
        "$comp_func",
        "$op",
        "$B",
        "$op",
        "$B",
        "$op",
        "$B",
        "other",
        "_b_",
        "$B",
        "other",
        "$notimplemented",
        "$op",
        "$B",
        "$B",
        "$op",
        "$B",
        "$op",
        "$opfunc",
        "eval",
        "$opfunc",
        "$notimplemented",
        "$op",
        "value",
        "value",
        "s",
        "i",
        "s",
        "i",
        "arabic_digits",
        "s",
        "i",
        "x",
        "res",
        "x",
        "res",
        "s",
        "i",
        "res",
        "value",
        "value",
        "$FloatClass",
        "$FloatClass",
        "Infinity",
        "$FloatClass",
        "Infinity",
        "value",
        "value",
        "isinstance",
        "value",
        "value",
        "isinstance",
        "value",
        "getattr",
        "value",
        "getattr",
        "value",
        "value",
        "value",
        "value",
        "value",
        "_b_",
        "value",
        "value",
        "value",
        "value",
        "to_digits",
        "value",
        "isFinite",
        "value",
        "$FloatClass",
        "eval",
        "value",
        "_b_",
        "value",
        "_b_",
        "_b_",
        "value",
        "value",
        "$B",
        "value",
        "$B",
        "value",
        "num_value",
        "num_value",
        "_b_",
        "$B",
        "value",
        "$B",
        "$FloatClass",
        "$B",
        "$B",
        "_b_",
        "$attr",
        "$attr",
        "FloatSubclass",
        "$attr",
        "attr",
        "arguments",
        "arguments",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "pos",
        "arguments",
        "i",
        "attr",
        "args",
        "$attr",
        "$B",
        "FloatSubclass",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "op",
        "other",
        "op",
        "$B",
        "other",
        "_b_",
        "msg",
        "obj",
        "obj",
        "obj",
        "obj",
        "_b_",
        "_b_",
        "$B",
        "arguments",
        "$B",
        "$",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "_b_",
        "x",
        "_b_",
        "_b_",
        "_bytes",
        "x",
        "_len",
        "x",
        "_bytes",
        "_b_",
        "x",
        "_len",
        "_bytes",
        "i",
        "_len",
        "i",
        "_b_",
        "_bytes",
        "i",
        "byteorder",
        "_bytes",
        "_len",
        "_len",
        "i",
        "i",
        "num",
        "$B",
        "$B",
        "_mult",
        "_bytes",
        "i",
        "num",
        "_mult",
        "$B",
        "_mult",
        "signed",
        "num",
        "_bytes",
        "num",
        "$B",
        "num",
        "_mult",
        "_bytes",
        "num",
        "num",
        "num",
        "i",
        "_len",
        "i",
        "num",
        "$B",
        "$B",
        "_mult",
        "_bytes",
        "i",
        "num",
        "_mult",
        "$B",
        "_mult",
        "signed",
        "num",
        "_bytes",
        "_len",
        "num",
        "$B",
        "num",
        "_mult",
        "_b_",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "len",
        "_b_",
        "_b_",
        "$B",
        "len",
        "byteorder",
        "_b_",
        "kwargs",
        "signed",
        "_b_",
        "len",
        "value",
        "value",
        "quotient",
        "res",
        "rest",
        "quotient",
        "value",
        "quotient",
        "res",
        "len",
        "_b_",
        "res",
        "len",
        "res",
        "res",
        "byteorder",
        "res",
        "res",
        "_b_",
        "res",
        "_b_",
        "int_value",
        "int_value",
        "other",
        "$B",
        "other",
        "other",
        "other",
        "other",
        "_b_",
        "other",
        "int_value",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "fmt",
        "fmt",
        "_b_",
        "fmt",
        "fmt",
        "_b_",
        "fmt",
        "fmt",
        "res",
        "res",
        "fmt",
        "res",
        "_b_",
        "res",
        "fmt",
        "res",
        "fmt",
        "res",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "res",
        "fmt",
        "res",
        "res",
        "format_spec",
        "$B",
        "format_spec",
        "fmt",
        "fmt",
        "_b_",
        "format_spec",
        "fmt",
        "fmt",
        "preformat",
        "fmt",
        "fmt",
        "res",
        "res",
        "sign",
        "rest",
        "rest",
        "i",
        "nb",
        "i",
        "chunks",
        "rest",
        "len",
        "i",
        "len",
        "i",
        "chunks",
        "res",
        "sign",
        "chunks",
        "$B",
        "res",
        "fmt",
        "other",
        "other",
        "$B",
        "$B",
        "$B",
        "other",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "$B",
        "other",
        "$err",
        "other",
        "$B",
        "int_value",
        "value",
        "value",
        "value",
        "value",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "$B",
        "$B",
        "$B",
        "other",
        "$B",
        "other",
        "_b_",
        "rlshift",
        "_b_",
        "rlshift",
        "$err",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "other",
        "$B",
        "$B",
        "$B",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "int_value",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "_b_",
        "other",
        "$B",
        "other",
        "$err",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "val",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "other",
        "res",
        "$B",
        "res",
        "$B",
        "res",
        "$B",
        "$B",
        "$B",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "$B",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "other",
        "other",
        "i",
        "val",
        "i",
        "res",
        "res",
        "$temp",
        "_b_",
        "other",
        "_b_",
        "res",
        "_b_",
        "res",
        "res",
        "_b_",
        "other",
        "$B",
        "other",
        "$err",
        "other",
        "other",
        "other",
        "res",
        "_b_",
        "res",
        "res",
        "cls",
        "value",
        "cls",
        "_b_",
        "_b_",
        "cls",
        "_b_",
        "_b_",
        "cls",
        "value",
        "cls",
        "_b_",
        "value",
        "a",
        "b",
        "b",
        "a",
        "extended_euclidean",
        "b",
        "a",
        "b",
        "d",
        "v",
        "u",
        "a",
        "b",
        "v",
        "other",
        "z",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "other",
        "z",
        "z",
        "_b_",
        "z",
        "z",
        "$B",
        "exponent",
        "_",
        "extended_euclidean",
        "z",
        "gcd",
        "_b_",
        "z",
        "inv",
        "exponent",
        "z",
        "exponent",
        "exponent",
        "result",
        "$B",
        "result",
        "long_int",
        "long_int",
        "result",
        "long_int",
        "result",
        "long_int",
        "result",
        "z",
        "result",
        "result",
        "z",
        "exponent",
        "exponent",
        "$B",
        "long_int",
        "long_int",
        "long_int",
        "long_int",
        "z",
        "z",
        "result",
        "other",
        "res",
        "$B",
        "res",
        "$B",
        "res",
        "res",
        "Infinity",
        "isFinite",
        "res",
        "res",
        "$B",
        "$B",
        "$B",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "$B",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "$B",
        "preal",
        "ln",
        "preal",
        "ln",
        "$B",
        "other",
        "_b_",
        "rpow",
        "_b_",
        "rpow",
        "$err",
        "other",
        "other",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "$B",
        "$B",
        "$B",
        "other",
        "$B",
        "other",
        "_b_",
        "rrshift",
        "_b_",
        "rrshift",
        "$err",
        "other",
        "attr",
        "value",
        "attr",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "value",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "other",
        "_b_",
        "other",
        "$B",
        "parseInt",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "other",
        "cmod",
        "_b_",
        "$B",
        "other",
        "cmod",
        "other",
        "cmod",
        "_b_",
        "other",
        "$B",
        "other",
        "$err",
        "other",
        "s",
        "_b_",
        "s",
        "$B",
        "s",
        "s",
        "$B",
        "$B",
        "$B",
        "other",
        "_b_",
        "other",
        "other",
        "$B",
        "$B",
        "$B",
        "$B",
        "other",
        "other",
        "int_value",
        "other",
        "$B",
        "$B",
        "other",
        "$B",
        "other",
        "$B",
        "$B",
        "$B",
        "$B",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "$B",
        "other",
        "_b_",
        "rsub",
        "_b_",
        "rsub",
        "$err",
        "other",
        "$op_func",
        "$op",
        "$ops",
        "$op_func",
        "$op",
        "opf",
        "opf",
        "$ops",
        "$op",
        "eval",
        "$ops",
        "$op",
        "opf",
        "other",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "other",
        "other",
        "res",
        "$B",
        "res",
        "$B",
        "res",
        "$B",
        "$B",
        "$B",
        "other",
        "other",
        "other",
        "$B",
        "$B",
        "$B",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "$B",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "bool_value",
        "bool_value",
        "_b_",
        "other",
        "_b_",
        "$B",
        "other",
        "other",
        "$B",
        "other",
        "_b_",
        "rsub",
        "_b_",
        "rsub",
        "$err",
        "other",
        "$op_func",
        "$op",
        "$ops",
        "$op_func",
        "$op",
        "opf",
        "opf",
        "$ops",
        "$op",
        "eval",
        "$ops",
        "$op",
        "opf",
        "other",
        "other",
        "$B",
        "$B",
        "other",
        "$B",
        "_b_",
        "other",
        "other",
        "int_value",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "$B",
        "other",
        "_b_",
        "$comp_func",
        "$op",
        "$B",
        "eval",
        "$B",
        "$op",
        "$comp_func",
        "$op",
        "$B",
        "$op",
        "$B",
        "$op",
        "$B",
        "i",
        "i",
        "digits",
        "i",
        "digits",
        "i",
        "i",
        "digits",
        "i",
        "digits",
        "value",
        "value",
        "value",
        "parseInt",
        "value",
        "_b_",
        "value",
        "_b_",
        "_b_",
        "$B",
        "arguments",
        "$ns",
        "$ns",
        "_b_",
        "value",
        "_b_",
        "value",
        "$B",
        "value",
        "$B",
        "$B",
        "value",
        "value",
        "value",
        "value",
        "_b_",
        "value",
        "value",
        "$B",
        "value",
        "$B",
        "$B",
        "value",
        "value",
        "value",
        "_b_",
        "parseInt",
        "value",
        "value",
        "$B",
        "value",
        "$B",
        "$B",
        "value",
        "res",
        "value",
        "value",
        "value",
        "$B",
        "parseInt",
        "value",
        "z",
        "$B",
        "z",
        "$B",
        "z",
        "value",
        "$B",
        "value",
        "_b_",
        "_b_",
        "value",
        "_b_",
        "value",
        "_b_",
        "value",
        "value",
        "value",
        "value",
        "_value",
        "_value",
        "_value",
        "_value",
        "_b_",
        "_value",
        "_value",
        "_pre",
        "_pre",
        "_pre",
        "_pre",
        "invalid",
        "_value",
        "_pre",
        "invalid",
        "_value",
        "_pre",
        "_pre",
        "_pre",
        "_value",
        "_value",
        "_value",
        "_value",
        "_value",
        "$valid_digits",
        "_digits",
        "_digits",
        "_re",
        "_value",
        "match",
        "invalid",
        "value",
        "value",
        "_value",
        "isFinite",
        "value",
        "invalid",
        "_value",
        "parseInt",
        "value",
        "res",
        "$B",
        "res",
        "$B",
        "$B",
        "value",
        "res",
        "_b_",
        "value",
        "_b_",
        "_b_",
        "$B",
        "value",
        "$B",
        "value",
        "num_value",
        "_b_",
        "$B",
        "value",
        "num_value",
        "$B",
        "_b_",
        "$B",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "$B",
        "obj",
        "$B",
        "klass",
        "missing",
        "bool_method",
        "missing",
        "_b_",
        "obj",
        "err",
        "$B",
        "bool_method",
        "obj",
        "res",
        "res",
        "_b_",
        "$B",
        "res",
        "res",
        "_b_",
        "_b_",
        "$B",
        "op",
        "methods",
        "methods",
        "op",
        "method",
        "op",
        "other",
        "op",
        "op",
        "value",
        "other",
        "method",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "$B",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "$B",
        "attr",
        "_b_",
        "attr",
        "attr",
        "attr",
        "_b_",
        "msg",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "other",
        "other",
        "_b_",
        "$B",
        "arguments",
        "$B",
        "$",
        "_b_",
        "$B",
        "__BRYTHON__",
        "$B",
        "$B",
        "eval",
        "bltns",
        "_b_",
        "v1",
        "v2",
        "v1",
        "v2",
        "i",
        "i",
        "iself",
        "iself",
        "sv",
        "sv",
        "parseInt",
        "v1",
        "iself",
        "x",
        "carry",
        "sv",
        "parseInt",
        "v2",
        "i",
        "x",
        "res",
        "x",
        "res",
        "carry",
        "parseInt",
        "x",
        "res",
        "x",
        "res",
        "carry",
        "iself",
        "iself",
        "x",
        "carry",
        "parseInt",
        "v1",
        "iself",
        "x",
        "res",
        "x",
        "res",
        "carry",
        "parseInt",
        "x",
        "res",
        "x",
        "res",
        "carry",
        "carry",
        "res",
        "carry",
        "res",
        "long_int",
        "res",
        "t",
        "t",
        "len",
        "i",
        "nb_chunks",
        "i",
        "pos",
        "t",
        "i",
        "len",
        "start",
        "pos",
        "nb",
        "pos",
        "start",
        "chunks",
        "t",
        "start",
        "len",
        "nb",
        "chunks",
        "chunks",
        "chunks",
        "chunk",
        "i",
        "chunks",
        "i",
        "parseInt",
        "chunk",
        "chunks",
        "chunks",
        "chunks",
        "chunk",
        "i",
        "rest",
        "chunk",
        "chunks",
        "i",
        "chunk",
        "rest",
        "i",
        "chunks",
        "chunks",
        "i",
        "carry",
        "bin",
        "rest",
        "chunks",
        "chunks",
        "bin",
        "bin",
        "bin",
        "shift",
        "isinstance",
        "shift",
        "long_int",
        "$B",
        "shift",
        "shift",
        "ValueError",
        "obj",
        "attr",
        "obj",
        "obj1",
        "attr",
        "obj",
        "attr",
        "obj1",
        "v1",
        "v2",
        "v1",
        "v2",
        "v1",
        "v2",
        "v1",
        "v2",
        "v1",
        "v2",
        "t",
        "n",
        "n",
        "t",
        "n",
        "t",
        "len",
        "i",
        "nb_chunks",
        "i",
        "pos",
        "t",
        "i",
        "len",
        "start",
        "pos",
        "nb",
        "pos",
        "start",
        "chunks",
        "t",
        "start",
        "len",
        "nb",
        "chunks",
        "chunks",
        "chunks",
        "chunk",
        "i",
        "chunks",
        "i",
        "parseInt",
        "chunk",
        "len",
        "chunks",
        "chunk",
        "i",
        "rest",
        "chunk",
        "n",
        "chunks",
        "i",
        "chunk",
        "n",
        "i",
        "chunks",
        "chunks",
        "i",
        "carry",
        "rest",
        "chunks",
        "chunks",
        "chunks",
        "rest",
        "x",
        "chunks",
        "chunks",
        "chunk",
        "i",
        "i",
        "x",
        "len",
        "chunk",
        "chunk",
        "x",
        "rest",
        "v1",
        "v2",
        "parseInt",
        "v1",
        "parseInt",
        "v2",
        "iv1",
        "$B",
        "iv2",
        "$B",
        "iv1",
        "iv2",
        "iv1",
        "iv2",
        "long_int",
        "quot",
        "long_int",
        "rest",
        "res1",
        "iv2",
        "$B",
        "divmod_by_safe_int",
        "v1",
        "iv2",
        "long_int",
        "res_safe",
        "long_int",
        "res_safe",
        "comp_pos",
        "v1",
        "v2",
        "quotient",
        "mod",
        "long_int",
        "v1",
        "v2",
        "v1",
        "quotient",
        "mod",
        "long_int",
        "v1",
        "v2",
        "v1",
        "v2",
        "left",
        "v1",
        "v2",
        "v1",
        "left",
        "parseInt",
        "left",
        "parseInt",
        "v2",
        "candidate",
        "candidate",
        "mv2",
        "candidate",
        "mv2",
        "candidate",
        "mul_pos",
        "v2",
        "candidate",
        "comp_pos",
        "left",
        "mv2",
        "candidate",
        "candidate",
        "mv2",
        "candidate",
        "mv2",
        "candidate",
        "mul_pos",
        "v2",
        "candidate",
        "quotient",
        "candidate",
        "left",
        "sub_pos",
        "left",
        "mv2",
        "candidate",
        "right",
        "left",
        "right",
        "right",
        "right",
        "mod",
        "sub_pos",
        "v1",
        "mul_pos",
        "quotient",
        "v2",
        "iv2",
        "$B",
        "res_safe",
        "quotient",
        "v1",
        "v2",
        "res_safe",
        "quotient",
        "alert",
        "res_safe",
        "mod",
        "v1",
        "v2",
        "res_safe",
        "mod",
        "alert",
        "long_int",
        "quotient",
        "mod",
        "s",
        "size",
        "s",
        "size",
        "s",
        "i",
        "nb",
        "i",
        "len",
        "size",
        "i",
        "pos",
        "size",
        "pos",
        "pos",
        "chunks",
        "parseInt",
        "s",
        "pos",
        "size",
        "chunks",
        "x",
        "y",
        "parseInt",
        "x",
        "parseInt",
        "y",
        "ix",
        "iy",
        "z",
        "$B",
        "long_int",
        "z",
        "split_chunks",
        "x",
        "chunk_size",
        "split_chunks",
        "y",
        "chunk_size",
        "cx",
        "cy",
        "i",
        "len",
        "i",
        "products",
        "i",
        "i",
        "cx",
        "i",
        "j",
        "cy",
        "j",
        "products",
        "i",
        "j",
        "cx",
        "i",
        "cy",
        "j",
        "len",
        "i",
        "len",
        "i",
        "split_chunks",
        "products",
        "i",
        "chunk_size",
        "j",
        "chunks",
        "j",
        "pos",
        "i",
        "j",
        "products",
        "pos",
        "products",
        "pos",
        "parseInt",
        "chunks",
        "j",
        "nb",
        "pos",
        "products",
        "pos",
        "parseInt",
        "chunks",
        "j",
        "products",
        "i",
        "chunks",
        "products",
        "i",
        "s",
        "products",
        "i",
        "products",
        "i",
        "s",
        "chunk_size",
        "s",
        "s",
        "result",
        "s",
        "result",
        "i",
        "long_int",
        "result",
        "err",
        "x",
        "y",
        "products",
        "result",
        "err",
        "v1",
        "v2",
        "v1",
        "v2",
        "i",
        "i",
        "i1",
        "sv",
        "parseInt",
        "v1",
        "i1",
        "x",
        "sv",
        "carry",
        "parseInt",
        "v2",
        "i",
        "isNaN",
        "x",
        "v1",
        "v2",
        "i",
        "i1",
        "sv",
        "carry",
        "i",
        "v2",
        "i",
        "x",
        "res",
        "x",
        "res",
        "carry",
        "res",
        "x",
        "res",
        "carry",
        "res",
        "alert",
        "res",
        "i1",
        "i1",
        "x",
        "parseInt",
        "v1",
        "i1",
        "carry",
        "x",
        "res",
        "x",
        "res",
        "carry",
        "res",
        "x",
        "res",
        "carry",
        "res",
        "res",
        "res",
        "res",
        "res",
        "v1",
        "v2",
        "v1",
        "v2",
        "res",
        "long_int",
        "res",
        "long_int",
        "value",
        "value",
        "s",
        "s",
        "t",
        "t",
        "t",
        "t",
        "pos",
        "n2",
        "v",
        "n1",
        "exp",
        "v",
        "n1",
        "n2",
        "exp",
        "n2",
        "long_int",
        "v",
        "value",
        "long_int",
        "long_int",
        "long_int",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "parseInt",
        "other",
        "other",
        "other",
        "long_int",
        "_b_",
        "other",
        "other",
        "long_int",
        "isinstance",
        "other",
        "_b_",
        "other",
        "long_int",
        "other",
        "isinstance",
        "other",
        "other",
        "long_int",
        "_b_",
        "_b_",
        "other",
        "_b_",
        "other",
        "add_pos",
        "other",
        "other",
        "res",
        "add_pos",
        "other",
        "res",
        "intOrLong",
        "res",
        "other",
        "comp_pos",
        "other",
        "res",
        "sub_pos",
        "other",
        "res",
        "long_int",
        "res",
        "sub_pos",
        "other",
        "res",
        "intOrLong",
        "res",
        "comp_pos",
        "other",
        "res",
        "sub_pos",
        "other",
        "res",
        "res",
        "long_int",
        "res",
        "sub_pos",
        "other",
        "intOrLong",
        "res",
        "long_int",
        "other",
        "other",
        "other",
        "long_int",
        "_b_",
        "other",
        "other",
        "temp1",
        "divmod_by_safe_int",
        "v1",
        "temp2",
        "divmod_by_safe_int",
        "v2",
        "res",
        "temp1",
        "temp2",
        "res",
        "v1",
        "temp1",
        "v2",
        "temp2",
        "v1",
        "intOrLong",
        "long_int",
        "res",
        "v2",
        "intOrLong",
        "long_int",
        "res",
        "res0",
        "long_int",
        "other",
        "other",
        "other",
        "long_int",
        "_b_",
        "other",
        "divmod_pos",
        "other",
        "other",
        "dm",
        "dm",
        "dm",
        "dm",
        "long_int",
        "dm",
        "long_int",
        "dm",
        "long_int",
        "dm",
        "long_int",
        "$B",
        "intOrLong",
        "dm",
        "intOrLong",
        "dm",
        "long_int",
        "other",
        "other",
        "other",
        "long_int",
        "_b_",
        "other",
        "other",
        "other",
        "long_int",
        "parseFloat",
        "long_int",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "parseInt",
        "other",
        "other",
        "divmod_by_safe_int",
        "t",
        "other",
        "other",
        "long_int",
        "res",
        "pos",
        "intOrLong",
        "long_int",
        "other",
        "long_int",
        "other",
        "other",
        "other",
        "long_int",
        "_b_",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "long_int",
        "other",
        "long_int",
        "other",
        "$B",
        "long_int",
        "$B",
        "d",
        "divmod_pos",
        "temp",
        "res",
        "d",
        "res",
        "temp",
        "d",
        "temp",
        "res",
        "i",
        "i",
        "res",
        "i",
        "bit",
        "flag",
        "nres",
        "nres",
        "nres",
        "nres",
        "flag",
        "nres",
        "nres",
        "flag",
        "nres",
        "nres",
        "nres",
        "nres",
        "res",
        "nres",
        "res",
        "res",
        "intOrLong",
        "res",
        "long_int",
        "long_int",
        "long_int",
        "long_int",
        "other",
        "other",
        "other",
        "long_int",
        "_b_",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "long_int",
        "other",
        "long_int",
        "other",
        "long_int",
        "shift",
        "shift",
        "long_int",
        "is_long",
        "parseInt",
        "shift",
        "shift_value",
        "_b_",
        "shift_value",
        "$B",
        "shift_safe",
        "shift",
        "shift_value",
        "shift_safe",
        "shift_value",
        "shift",
        "long_int",
        "shift",
        "shift",
        "res",
        "i",
        "i",
        "x",
        "carry",
        "parseInt",
        "res",
        "i",
        "x",
        "res1",
        "x",
        "res1",
        "carry",
        "parseInt",
        "x",
        "res1",
        "x",
        "res1",
        "carry",
        "carry",
        "res1",
        "carry",
        "res1",
        "res",
        "res1",
        "shift_safe",
        "shift",
        "shift",
        "shift",
        "sub_pos",
        "shift",
        "shift",
        "intOrLong",
        "long_int",
        "res",
        "long_int",
        "other",
        "intOrLong",
        "long_int",
        "other",
        "long_int",
        "_b_",
        "_b_",
        "long_int",
        "other",
        "$B",
        "other",
        "NaN",
        "_b_",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "parseInt",
        "other",
        "other_value",
        "other",
        "other_pos",
        "other",
        "other",
        "long_int",
        "isinstance",
        "other",
        "other",
        "other_value",
        "_b_",
        "value",
        "other_pos",
        "value",
        "mul_pos",
        "other_value",
        "other_pos",
        "intOrLong",
        "res",
        "res",
        "intOrLong",
        "res",
        "long_int",
        "obj",
        "long_int",
        "obj",
        "obj",
        "long_int",
        "other",
        "other",
        "long_int",
        "other",
        "long_int",
        "long_int",
        "other",
        "v1",
        "v2",
        "v2",
        "v1",
        "v1",
        "temp",
        "v1",
        "v2",
        "v1",
        "start",
        "i",
        "v2",
        "i",
        "v1",
        "start",
        "i",
        "v2",
        "i",
        "res",
        "res",
        "intOrLong",
        "long_int",
        "res",
        "long_int",
        "long_int",
        "power",
        "z",
        "power",
        "power",
        "long_int",
        "_b_",
        "power",
        "isinstance",
        "power",
        "power",
        "long_int",
        "_b_",
        "_b_",
        "power",
        "isinstance",
        "power",
        "long_int",
        "msg",
        "$B",
        "power",
        "power",
        "long_int",
        "power",
        "long_int",
        "long_int",
        "power",
        "pow",
        "sub_pos",
        "pow",
        "pow",
        "res",
        "long_int",
        "long_int",
        "res",
        "z",
        "res",
        "long_int",
        "res",
        "z",
        "intOrLong",
        "res",
        "long_int",
        "shift",
        "shift",
        "shift",
        "pow2",
        "$B",
        "divmod_by_safe_int",
        "pow2",
        "intOrLong",
        "long_int",
        "res",
        "shift",
        "long_int",
        "shift",
        "shift",
        "res",
        "divmod_pos",
        "res",
        "res",
        "shift",
        "sub_pos",
        "shift",
        "shift",
        "intOrLong",
        "long_int",
        "res",
        "long_int",
        "long_int",
        "res",
        "res",
        "long_int",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "parseInt",
        "other",
        "other",
        "other",
        "long_int",
        "_b_",
        "other",
        "other",
        "comp_pos",
        "other",
        "res",
        "sub_pos",
        "other",
        "res",
        "long_int",
        "res",
        "sub_pos",
        "other",
        "res",
        "intOrLong",
        "res",
        "other",
        "comp_pos",
        "other",
        "res",
        "sub_pos",
        "other",
        "res",
        "res",
        "long_int",
        "res",
        "sub_pos",
        "other",
        "intOrLong",
        "res",
        "other",
        "intOrLong",
        "add_pos",
        "other",
        "res",
        "add_pos",
        "other",
        "res",
        "intOrLong",
        "res",
        "long_int",
        "other",
        "isinstance",
        "other",
        "long_int",
        "_b_",
        "parseInt",
        "parseInt",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "parseInt",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "parseInt",
        "other",
        "$B",
        "other",
        "long_int",
        "other",
        "other",
        "long_int",
        "other",
        "long_int",
        "long_int",
        "other",
        "v1",
        "v2",
        "v2",
        "v1",
        "v1",
        "temp",
        "v1",
        "v2",
        "v1",
        "start",
        "i",
        "v2",
        "i",
        "v1",
        "start",
        "i",
        "v2",
        "i",
        "res",
        "v1",
        "start",
        "i",
        "v2",
        "i",
        "res",
        "res",
        "intOrLong",
        "long_int",
        "res",
        "long_int",
        "long_int",
        "_b_",
        "long_int",
        "_b_",
        "long_int",
        "long_int",
        "binary",
        "v",
        "divmod_pos",
        "v",
        "res",
        "parseInt",
        "dm",
        "res",
        "v",
        "dm",
        "v",
        "res",
        "i",
        "i",
        "i",
        "is_digits",
        "i",
        "i",
        "i",
        "is_digits",
        "i",
        "is_digits",
        "i",
        "is_digits",
        "MAX_SAFE_INTEGER",
        "n",
        "n",
        "n",
        "n",
        "MIN_SAFE_INTEGER",
        "n",
        "n",
        "MAX_SAFE_INTEGER",
        "parseInt",
        "v",
        "MIN_SAFE_INTEGER",
        "v",
        "MAX_SAFE_INTEGER",
        "v",
        "long_int",
        "value",
        "arguments",
        "_b_",
        "arguments",
        "isinstance",
        "$B",
        "ValueError",
        "isinstance",
        "value",
        "_b_",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "isinstance",
        "value",
        "_b_",
        "value",
        "value",
        "isSafeInteger",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "ValueError",
        "value",
        "long_int",
        "value",
        "isinstance",
        "value",
        "value",
        "value",
        "isinstance",
        "value",
        "_b_",
        "value",
        "_b_",
        "value",
        "value",
        "ValueError",
        "$B",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "value",
        "has_prefix",
        "value",
        "has_prefix",
        "pos",
        "has_prefix",
        "value",
        "ValueError",
        "value",
        "value",
        "value",
        "start",
        "value",
        "value",
        "start",
        "start",
        "value",
        "value",
        "start",
        "digits",
        "i",
        "value",
        "i",
        "value",
        "i",
        "point",
        "point",
        "i",
        "value",
        "i",
        "value",
        "i",
        "value",
        "i",
        "exp",
        "parseInt",
        "value",
        "i",
        "value",
        "i",
        "point",
        "mant",
        "mant",
        "point",
        "mant",
        "point",
        "exp",
        "exp",
        "point",
        "point",
        "value",
        "mant",
        "exp",
        "mant",
        "is_digits",
        "value",
        "i",
        "ValueError",
        "value",
        "point",
        "value",
        "value",
        "point",
        "long_int",
        "value",
        "ix",
        "parseInt",
        "value",
        "ix",
        "mul_pos",
        "coef",
        "digit_base10",
        "v10",
        "add_pos",
        "v10",
        "digit_by_coef",
        "coef",
        "mul_pos",
        "coef",
        "v10",
        "long_int",
        "value",
        "pos",
        "$B",
        "long_int",
        "$B",
        "long_int",
        "__BRYTHON__",
        "$B",
        "$B",
        "op",
        "class1",
        "class2",
        "_b_",
        "op",
        "class1",
        "class2",
        "_b_",
        "_b_",
        "isFinite",
        "isFinite",
        "_rf",
        "isNaN",
        "_if",
        "isNaN",
        "isNaN",
        "isNaN",
        "NaN",
        "_rf",
        "_if",
        "Infinity",
        "isFinite",
        "mag",
        "_rf",
        "_if",
        "_b_",
        "mag",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "$UnsupportedOpType",
        "$B",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "other",
        "_b_",
        "other",
        "make_complex",
        "other",
        "other",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "make_complex",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "make_complex",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "make_complex",
        "$UnsupportedOpType",
        "other",
        "other",
        "other",
        "res",
        "_b_",
        "res",
        "res",
        "make_complex",
        "cls",
        "cls",
        "_b_",
        "$B",
        "arguments",
        "missing",
        "args",
        "args",
        "$real",
        "$imag",
        "missing",
        "_b_",
        "$real",
        "$real",
        "$real",
        "$real",
        "$real",
        "$real",
        "$real",
        "$real",
        "$real",
        "complex_re",
        "$real",
        "s",
        "parseFloat",
        "s",
        "s",
        "isNaN",
        "res",
        "_b_",
        "arg",
        "res",
        "parts",
        "_b_",
        "parts",
        "_real",
        "parts",
        "_imag",
        "parts",
        "_real",
        "parts",
        "_imag",
        "parts",
        "_real",
        "parts",
        "_imag",
        "_b_",
        "parts",
        "_j",
        "parts",
        "_sign",
        "$real",
        "parts",
        "_real",
        "parts",
        "_real",
        "$imag",
        "parts",
        "_real",
        "$imag",
        "$imag",
        "to_num",
        "parts",
        "_real",
        "$real",
        "to_num",
        "parts",
        "_real",
        "$imag",
        "parts",
        "_imag",
        "to_num",
        "parts",
        "_imag",
        "$imag",
        "parts",
        "_sign",
        "$imag",
        "$imag",
        "$real",
        "to_num",
        "parts",
        "_real",
        "$imag",
        "res",
        "$real",
        "$imag",
        "res",
        "$imag",
        "$imag",
        "missing",
        "$imag",
        "arguments",
        "$real",
        "$imag",
        "$real",
        "_b_",
        "$real",
        "_b_",
        "_b_",
        "_b_",
        "$imag",
        "_b_",
        "_b_",
        "res",
        "$real",
        "$imag",
        "res",
        "$B",
        "$real",
        "real_to_num",
        "_b_",
        "$B",
        "$real",
        "$real",
        "real_to_num",
        "$imag",
        "_convert",
        "$imag",
        "_b_",
        "$real",
        "_b_",
        "_b_",
        "$real",
        "_b_",
        "_b_",
        "$real",
        "_b_",
        "_b_",
        "$imag",
        "_b_",
        "_b_",
        "$imag",
        "_b_",
        "_b_",
        "$imag",
        "_b_",
        "_b_",
        "$imag",
        "_b_",
        "$imag",
        "missing",
        "_b_",
        "$imag",
        "$imag",
        "$imag",
        "$real",
        "cx",
        "cx",
        "cx",
        "cx",
        "cx",
        "cx",
        "norm",
        "cx",
        "norm",
        "cos",
        "angle",
        "sin",
        "sin",
        "angle",
        "cos",
        "angle",
        "sin",
        "cos",
        "norm",
        "angle",
        "other",
        "complex2expo",
        "exp",
        "exp",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "make_complex",
        "res",
        "angle",
        "other",
        "res",
        "angle",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "exp",
        "x",
        "y",
        "angle",
        "y",
        "exp",
        "x",
        "angle",
        "make_complex",
        "pw",
        "theta",
        "pw",
        "theta",
        "_b_",
        "$B",
        "other",
        "r",
        "sqrt",
        "i",
        "r",
        "sqrt",
        "make_complex",
        "_a",
        "_b",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "_b_",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "other",
        "make_complex",
        "_num",
        "_div",
        "_num2",
        "_div",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "$UnsupportedOpType",
        "other",
        "make_complex",
        "other",
        "_b_",
        "$B",
        "other",
        "$op_func",
        "$op",
        "$ops",
        "eval",
        "$ops",
        "$op",
        "$op_func",
        "$op",
        "other",
        "_b_",
        "other",
        "make_complex",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "make_complex",
        "$B",
        "other",
        "_b_",
        "other",
        "_b_",
        "make_complex",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "bool_value",
        "make_complex",
        "bool_value",
        "_b_",
        "$B",
        "other",
        "$op_func",
        "$op_func",
        "$op_func",
        "$op_func",
        "eval",
        "$op_func",
        "other",
        "other",
        "other",
        "_b_",
        "_b_",
        "_b_",
        "$comp_func",
        "$op",
        "$B",
        "eval",
        "$B",
        "$op",
        "$comp_func",
        "$op",
        "$B",
        "_b_",
        "_b_",
        "num",
        "num",
        "$B",
        "num",
        "i",
        "type_conversions",
        "i",
        "$B",
        "klass",
        "type_conversions",
        "i",
        "missing",
        "method",
        "missing",
        "method",
        "num",
        "$B",
        "real",
        "imag",
        "real",
        "imag",
        "arguments",
        "$B",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "eval",
        "bltns",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "x",
        "a",
        "b",
        "a",
        "b",
        "a",
        "a",
        "b",
        "b",
        "a",
        "b",
        "a",
        "b",
        "a",
        "b",
        "b",
        "a",
        "a",
        "a",
        "b",
        "b",
        "al",
        "log10",
        "a",
        "bl",
        "log10",
        "b",
        "al",
        "bl",
        "a",
        "POWERS_OF_TEN",
        "bl",
        "al",
        "b",
        "t",
        "al",
        "bl",
        "b",
        "POWERS_OF_TEN",
        "al",
        "bl",
        "a",
        "t",
        "a",
        "b",
        "t",
        "a",
        "b",
        "a",
        "b",
        "aStr",
        "bStr",
        "aStr",
        "bStr",
        "n",
        "n",
        "DEFAULT_MIN_MERGE",
        "r",
        "n",
        "n",
        "n",
        "r",
        "array",
        "lo",
        "hi",
        "compare",
        "lo",
        "runHi",
        "hi",
        "compare",
        "array",
        "runHi",
        "array",
        "lo",
        "runHi",
        "hi",
        "compare",
        "array",
        "runHi",
        "array",
        "runHi",
        "runHi",
        "reverseRun",
        "array",
        "lo",
        "runHi",
        "runHi",
        "hi",
        "compare",
        "array",
        "runHi",
        "array",
        "runHi",
        "runHi",
        "runHi",
        "lo",
        "array",
        "lo",
        "hi",
        "hi",
        "lo",
        "hi",
        "array",
        "lo",
        "array",
        "lo",
        "array",
        "hi",
        "array",
        "hi",
        "t",
        "array",
        "lo",
        "hi",
        "start",
        "compare",
        "start",
        "lo",
        "start",
        "start",
        "hi",
        "start",
        "array",
        "start",
        "left",
        "right",
        "left",
        "right",
        "compare",
        "pivot",
        "array",
        "mid",
        "right",
        "mid",
        "left",
        "mid",
        "start",
        "left",
        "n",
        "array",
        "left",
        "array",
        "left",
        "array",
        "left",
        "array",
        "left",
        "array",
        "left",
        "array",
        "left",
        "n",
        "array",
        "left",
        "n",
        "array",
        "left",
        "n",
        "n",
        "array",
        "left",
        "pivot",
        "value",
        "array",
        "start",
        "length",
        "hint",
        "compare",
        "compare",
        "value",
        "array",
        "start",
        "hint",
        "maxOffset",
        "length",
        "hint",
        "offset",
        "maxOffset",
        "compare",
        "value",
        "array",
        "start",
        "hint",
        "offset",
        "lastOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "lastOffset",
        "hint",
        "offset",
        "hint",
        "maxOffset",
        "hint",
        "offset",
        "maxOffset",
        "compare",
        "value",
        "array",
        "start",
        "hint",
        "offset",
        "lastOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "lastOffset",
        "hint",
        "offset",
        "offset",
        "hint",
        "tmp",
        "lastOffset",
        "lastOffset",
        "offset",
        "lastOffset",
        "offset",
        "lastOffset",
        "compare",
        "value",
        "array",
        "start",
        "m",
        "lastOffset",
        "m",
        "offset",
        "m",
        "offset",
        "value",
        "array",
        "start",
        "length",
        "hint",
        "compare",
        "compare",
        "value",
        "array",
        "start",
        "hint",
        "maxOffset",
        "hint",
        "offset",
        "maxOffset",
        "compare",
        "value",
        "array",
        "start",
        "hint",
        "offset",
        "lastOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "lastOffset",
        "hint",
        "offset",
        "offset",
        "hint",
        "tmp",
        "maxOffset",
        "length",
        "hint",
        "offset",
        "maxOffset",
        "compare",
        "value",
        "array",
        "start",
        "hint",
        "offset",
        "lastOffset",
        "offset",
        "offset",
        "offset",
        "offset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "offset",
        "maxOffset",
        "lastOffset",
        "hint",
        "offset",
        "hint",
        "lastOffset",
        "lastOffset",
        "offset",
        "lastOffset",
        "offset",
        "lastOffset",
        "compare",
        "value",
        "array",
        "start",
        "m",
        "offset",
        "m",
        "lastOffset",
        "m",
        "offset",
        "message",
        "TIM_SORT_ASSERTION",
        "message",
        "array",
        "compare",
        "array",
        "compare",
        "DEFAULT_MIN_GALLOPING",
        "array",
        "DEFAULT_TMP_STORAGE_LENGTH",
        "runStart",
        "runLength",
        "runStart",
        "runLength",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "n",
        "i",
        "i",
        "i",
        "i",
        "i",
        "i",
        "length1",
        "length2",
        "i",
        "i",
        "i",
        "i",
        "i",
        "gallopRight",
        "array",
        "start2",
        "array",
        "start1",
        "length1",
        "compare",
        "start1",
        "k",
        "length1",
        "k",
        "length1",
        "length2",
        "gallopLeft",
        "array",
        "start1",
        "length1",
        "array",
        "start2",
        "length2",
        "length2",
        "compare",
        "length2",
        "length1",
        "length2",
        "start1",
        "length1",
        "start2",
        "length2",
        "start1",
        "length1",
        "start2",
        "length2",
        "start1",
        "length1",
        "start2",
        "length2",
        "i",
        "length1",
        "i",
        "tmp",
        "i",
        "array",
        "start1",
        "i",
        "array",
        "dest",
        "array",
        "cursor2",
        "length2",
        "i",
        "length1",
        "i",
        "array",
        "dest",
        "i",
        "tmp",
        "cursor1",
        "i",
        "length1",
        "i",
        "length2",
        "i",
        "array",
        "dest",
        "i",
        "array",
        "cursor2",
        "i",
        "array",
        "dest",
        "length2",
        "tmp",
        "cursor1",
        "compare",
        "array",
        "cursor2",
        "tmp",
        "cursor1",
        "array",
        "dest",
        "array",
        "cursor2",
        "count2",
        "count1",
        "length2",
        "exit",
        "array",
        "dest",
        "tmp",
        "cursor1",
        "count1",
        "count2",
        "length1",
        "exit",
        "count1",
        "count2",
        "minGallop",
        "exit",
        "count1",
        "gallopRight",
        "array",
        "cursor2",
        "tmp",
        "cursor1",
        "length1",
        "compare",
        "count1",
        "i",
        "count1",
        "i",
        "array",
        "dest",
        "i",
        "tmp",
        "cursor1",
        "i",
        "dest",
        "count1",
        "cursor1",
        "count1",
        "length1",
        "count1",
        "length1",
        "exit",
        "array",
        "dest",
        "array",
        "cursor2",
        "length2",
        "exit",
        "count2",
        "gallopLeft",
        "tmp",
        "cursor1",
        "array",
        "cursor2",
        "length2",
        "compare",
        "count2",
        "i",
        "count2",
        "i",
        "array",
        "dest",
        "i",
        "array",
        "cursor2",
        "i",
        "dest",
        "count2",
        "cursor2",
        "count2",
        "length2",
        "count2",
        "length2",
        "exit",
        "array",
        "dest",
        "tmp",
        "cursor1",
        "length1",
        "exit",
        "minGallop",
        "count1",
        "DEFAULT_MIN_GALLOPING",
        "count2",
        "DEFAULT_MIN_GALLOPING",
        "exit",
        "minGallop",
        "minGallop",
        "minGallop",
        "minGallop",
        "minGallop",
        "length1",
        "i",
        "length2",
        "i",
        "array",
        "dest",
        "i",
        "array",
        "cursor2",
        "i",
        "array",
        "dest",
        "length2",
        "tmp",
        "cursor1",
        "length1",
        "TimSortAssertion",
        "i",
        "length1",
        "i",
        "array",
        "dest",
        "i",
        "tmp",
        "cursor1",
        "i",
        "start1",
        "length1",
        "start2",
        "length2",
        "i",
        "length2",
        "i",
        "tmp",
        "i",
        "array",
        "start2",
        "i",
        "start1",
        "length1",
        "length2",
        "start2",
        "length2",
        "array",
        "dest",
        "array",
        "cursor1",
        "length1",
        "customCursor",
        "dest",
        "length2",
        "i",
        "length2",
        "i",
        "array",
        "customCursor",
        "i",
        "tmp",
        "i",
        "length2",
        "dest",
        "length1",
        "cursor1",
        "length1",
        "customDest",
        "dest",
        "customCursor",
        "cursor1",
        "length1",
        "i",
        "i",
        "array",
        "customDest",
        "i",
        "array",
        "customCursor",
        "i",
        "array",
        "dest",
        "tmp",
        "cursor2",
        "compare",
        "tmp",
        "cursor2",
        "array",
        "cursor1",
        "array",
        "dest",
        "array",
        "cursor1",
        "count1",
        "count2",
        "length1",
        "exit",
        "array",
        "dest",
        "tmp",
        "cursor2",
        "count2",
        "count1",
        "length2",
        "exit",
        "count1",
        "count2",
        "minGallop",
        "exit",
        "count1",
        "length1",
        "gallopRight",
        "tmp",
        "cursor2",
        "array",
        "start1",
        "length1",
        "length1",
        "compare",
        "count1",
        "dest",
        "count1",
        "cursor1",
        "count1",
        "length1",
        "count1",
        "customDest",
        "dest",
        "customCursor",
        "cursor1",
        "count1",
        "i",
        "i",
        "array",
        "customDest",
        "i",
        "array",
        "customCursor",
        "i",
        "length1",
        "exit",
        "array",
        "dest",
        "tmp",
        "cursor2",
        "length2",
        "exit",
        "count2",
        "length2",
        "gallopLeft",
        "array",
        "cursor1",
        "tmp",
        "length2",
        "length2",
        "compare",
        "count2",
        "dest",
        "count2",
        "cursor2",
        "count2",
        "length2",
        "count2",
        "customDest",
        "dest",
        "customCursor",
        "cursor2",
        "i",
        "count2",
        "i",
        "array",
        "customDest",
        "i",
        "tmp",
        "customCursor",
        "i",
        "length2",
        "exit",
        "array",
        "dest",
        "array",
        "cursor1",
        "length1",
        "exit",
        "minGallop",
        "count1",
        "DEFAULT_MIN_GALLOPING",
        "count2",
        "DEFAULT_MIN_GALLOPING",
        "exit",
        "minGallop",
        "minGallop",
        "minGallop",
        "minGallop",
        "minGallop",
        "length2",
        "dest",
        "length1",
        "cursor1",
        "length1",
        "customDest",
        "dest",
        "customCursor",
        "cursor1",
        "length1",
        "i",
        "i",
        "array",
        "customDest",
        "i",
        "array",
        "customCursor",
        "i",
        "array",
        "dest",
        "tmp",
        "cursor2",
        "length2",
        "TimSortAssertion",
        "customCursor",
        "dest",
        "length2",
        "i",
        "length2",
        "i",
        "array",
        "customCursor",
        "i",
        "tmp",
        "i",
        "DEFAULT_TMP_STORAGE_LENGTH",
        "array",
        "compare",
        "lo",
        "hi",
        "array",
        "compare",
        "compare",
        "alphabeticalCompare",
        "compare",
        "hi",
        "lo",
        "lo",
        "compare",
        "compare",
        "alphabeticalCompare",
        "lo",
        "lo",
        "hi",
        "hi",
        "array",
        "hi",
        "lo",
        "remaining",
        "remaining",
        "DEFAULT_MIN_MERGE",
        "runLength",
        "makeAscendingRun",
        "array",
        "lo",
        "hi",
        "compare",
        "binaryInsertionSort",
        "array",
        "lo",
        "hi",
        "lo",
        "runLength",
        "compare",
        "TimSort",
        "array",
        "compare",
        "minRunLength",
        "remaining",
        "runLength",
        "makeAscendingRun",
        "array",
        "lo",
        "hi",
        "compare",
        "runLength",
        "minRun",
        "force",
        "minRun",
        "force",
        "minRun",
        "binaryInsertionSort",
        "array",
        "lo",
        "lo",
        "force",
        "lo",
        "runLength",
        "compare",
        "runLength",
        "force",
        "ts",
        "lo",
        "runLength",
        "ts",
        "remaining",
        "runLength",
        "lo",
        "runLength",
        "remaining",
        "ts",
        "array",
        "compare",
        "tim_sort",
        "array",
        "compare",
        "array",
        "e",
        "e",
        "TIM_SORT_ASSERTION",
        "array",
        "compare",
        "e",
        "$B",
        "tim_sort_safe",
        "$B",
        "alphabeticalCompare",
        "__BRYTHON__",
        "$B",
        "$B",
        "_b_",
        "$B",
        "_b_",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "arguments",
        "_b_",
        "other",
        "$B",
        "$B",
        "other",
        "getattr",
        "other",
        "_b_",
        "radd",
        "_b_",
        "radd",
        "_b_",
        "$B",
        "other",
        "other",
        "res",
        "isinstance",
        "res",
        "res",
        "res",
        "item",
        "$B",
        "arguments",
        "$",
        "$",
        "other",
        "$B",
        "item",
        "other",
        "i",
        "_eq",
        "i",
        "i",
        "arg",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "$N",
        "_b_",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "step",
        "$N",
        "step",
        "arg",
        "start",
        "$N",
        "start",
        "step",
        "arg",
        "stop",
        "$N",
        "stop",
        "step",
        "start",
        "start",
        "start",
        "stop",
        "stop",
        "stop",
        "step",
        "stop",
        "start",
        "i",
        "stop",
        "i",
        "step",
        "i",
        "res",
        "pos",
        "i",
        "stop",
        "start",
        "i",
        "stop",
        "i",
        "step",
        "i",
        "res",
        "pos",
        "i",
        "res",
        "res",
        "i",
        "res",
        "i",
        "$N",
        "_b_",
        "arg",
        "_b_",
        "arg",
        "_b_",
        "arg",
        "$N",
        "_b_",
        "_b_",
        "arg",
        "other",
        "isinstance",
        "isinstance",
        "other",
        "klass",
        "other",
        "i",
        "$B",
        "i",
        "other",
        "i",
        "_b_",
        "arg",
        "$B",
        "arguments",
        "$",
        "$",
        "$B",
        "isinstance",
        "key",
        "_b_",
        "key",
        "pos",
        "items",
        "pos",
        "pos",
        "pos",
        "items",
        "items",
        "pos",
        "_b_",
        "isinstance",
        "key",
        "_b_",
        "_b_",
        "key",
        "s",
        "s",
        "s",
        "step",
        "stop",
        "start",
        "factory",
        "res",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "pos",
        "items",
        "i",
        "factory",
        "res",
        "stop",
        "start",
        "factory",
        "res",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "pos",
        "items",
        "i",
        "factory",
        "res",
        "_b_",
        "key",
        "_b_",
        "key",
        "_b_",
        "key",
        "_b_",
        "$B",
        "key",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "i",
        "i",
        "other",
        "$B",
        "i",
        "other",
        "i",
        "i",
        "res",
        "getattr",
        "i",
        "other",
        "i",
        "res",
        "_b_",
        "_b_",
        "$B",
        "i",
        "$B",
        "other",
        "i",
        "res",
        "other",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "i",
        "i",
        "other",
        "$B",
        "i",
        "other",
        "i",
        "i",
        "res",
        "getattr",
        "i",
        "other",
        "i",
        "res",
        "_b_",
        "_b_",
        "$B",
        "i",
        "$B",
        "other",
        "i",
        "res",
        "$N",
        "$B",
        "arguments",
        "getattr",
        "$",
        "_b_",
        "radd",
        "_b_",
        "radd",
        "$",
        "$B",
        "$",
        "i",
        "x",
        "i",
        "$",
        "x",
        "i",
        "$",
        "$B",
        "arguments",
        "$B",
        "$",
        "$",
        "x",
        "$",
        "$",
        "i",
        "x",
        "i",
        "j",
        "j",
        "len",
        "j",
        "$",
        "pos",
        "$",
        "j",
        "$",
        "arg",
        "$B",
        "getattr",
        "getattr",
        "$N",
        "pop_func",
        "$N",
        "pop_func",
        "$B",
        "pop_func",
        "len_func",
        "pop_func",
        "arg",
        "$N",
        "$B",
        "arg",
        "$B",
        "getattr",
        "arg",
        "len_func",
        "next_func",
        "pos",
        "res",
        "err",
        "err",
        "_b_",
        "err",
        "$N",
        "$B",
        "list_iterator",
        "list_iterator",
        "$B",
        "_b_",
        "$B",
        "list_iterator",
        "other",
        "other",
        "res",
        "_b_",
        "res",
        "res",
        "other",
        "isinstance",
        "other",
        "_b_",
        "_b_",
        "i",
        "i",
        "other",
        "$B",
        "i",
        "other",
        "i",
        "i",
        "res",
        "getattr",
        "i",
        "other",
        "i",
        "res",
        "_b_",
        "_b_",
        "$B",
        "i",
        "$B",
        "other",
        "i",
        "res",
        "other",
        "other",
        "isinstance",
        "other",
        "_b_",
        "$temp",
        "i",
        "other",
        "i",
        "j",
        "len",
        "j",
        "res",
        "$temp",
        "j",
        "res",
        "res",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "$B",
        "other",
        "_b_",
        "rmul",
        "_b_",
        "rmul",
        "_b_",
        "$B",
        "other",
        "cls",
        "args",
        "cls",
        "_b_",
        "res",
        "cls",
        "res",
        "res",
        "_b_",
        "res",
        "i",
        "i",
        "i",
        "_r",
        "_r",
        "_b_",
        "i",
        "_r",
        "_r",
        "_r",
        "attr",
        "value",
        "attr",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "value",
        "$N",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "arg",
        "value",
        "arg",
        "value",
        "arg",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "value",
        "_b_",
        "$N",
        "isinstance",
        "arg",
        "_b_",
        "_b_",
        "arg",
        "arg",
        "$B",
        "s",
        "s",
        "value",
        "$B",
        "s",
        "s",
        "s",
        "value",
        "$N",
        "_b_",
        "arg",
        "_b_",
        "arg",
        "_b_",
        "arg",
        "value",
        "$N",
        "_b_",
        "$B",
        "arg",
        "$B",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$N",
        "$B",
        "arguments",
        "$",
        "$",
        "$N",
        "$B",
        "arguments",
        "$",
        "$B",
        "arguments",
        "other",
        "$B",
        "$",
        "other",
        "$",
        "i",
        "_eq",
        "$",
        "i",
        "res",
        "res",
        "$B",
        "arguments",
        "$B",
        "$",
        "i",
        "other",
        "i",
        "$",
        "other",
        "i",
        "$N",
        "$B",
        "arguments",
        "missing",
        "$",
        "$",
        "$",
        "other",
        "$B",
        "$",
        "other",
        "start",
        "$B",
        "start",
        "parseInt",
        "start",
        "start",
        "start",
        "start",
        "start",
        "stop",
        "missing",
        "stop",
        "stop",
        "$B",
        "stop",
        "parseInt",
        "stop",
        "stop",
        "stop",
        "stop",
        "stop",
        "stop",
        "stop",
        "i",
        "stop",
        "i",
        "_eq",
        "i",
        "i",
        "_b_",
        "_b_",
        "$",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$N",
        "$B",
        "arguments",
        "missing",
        "$",
        "$",
        "check_not_tuple",
        "pos",
        "missing",
        "pos",
        "pos",
        "$B",
        "pos",
        "pos",
        "pos",
        "pos",
        "res",
        "_b_",
        "pos",
        "res",
        "$B",
        "arguments",
        "$",
        "i",
        "len",
        "i",
        "$B",
        "$",
        "i",
        "$",
        "$",
        "i",
        "$N",
        "_b_",
        "_b_",
        "$",
        "$B",
        "arguments",
        "$",
        "parseInt",
        "$",
        "i",
        "$",
        "i",
        "$",
        "i",
        "$",
        "_len",
        "i",
        "$",
        "_len",
        "i",
        "buf",
        "$N",
        "$partition",
        "arg",
        "array",
        "begin",
        "end",
        "pivot",
        "array",
        "pivot",
        "array",
        "swap",
        "array",
        "pivot",
        "end",
        "arg",
        "array",
        "_b_",
        "array",
        "ix",
        "end",
        "ix",
        "le_func",
        "array",
        "ix",
        "piv",
        "array",
        "swap",
        "array",
        "store",
        "ix",
        "ix",
        "end",
        "ix",
        "arg",
        "array",
        "ix",
        "array",
        "len",
        "_b_",
        "getattr",
        "x",
        "arg",
        "piv",
        "array",
        "swap",
        "array",
        "store",
        "ix",
        "array",
        "swap",
        "array",
        "end",
        "store",
        "store",
        "_array",
        "a",
        "b",
        "_array",
        "a",
        "_array",
        "a",
        "_array",
        "b",
        "_array",
        "b",
        "tmp",
        "_array",
        "arg",
        "array",
        "begin",
        "end",
        "end",
        "begin",
        "begin",
        "end",
        "begin",
        "pivot",
        "$partition",
        "arg",
        "array",
        "begin",
        "end",
        "pivot",
        "$qsort",
        "arg",
        "array",
        "begin",
        "pivot",
        "$qsort",
        "arg",
        "array",
        "pivot",
        "end",
        "$B",
        "i",
        "$B",
        "i",
        "cl",
        "cl",
        "$B",
        "arguments",
        "check_not_tuple",
        "$",
        "_b_",
        "_b_",
        "kw_args",
        "i",
        "keys",
        "i",
        "keys",
        "i",
        "func",
        "kw_args",
        "keys",
        "i",
        "keys",
        "i",
        "reverse",
        "kw_args",
        "keys",
        "i",
        "_b_",
        "keys",
        "i",
        "func",
        "$N",
        "func",
        "$B",
        "func",
        "$elts_class",
        "func",
        "$N",
        "_b_",
        "reverse",
        "cmp",
        "b",
        "a",
        "$B",
        "a",
        "b",
        "cmp",
        "a",
        "b",
        "$B",
        "a",
        "b",
        "func",
        "$N",
        "_b_",
        "reverse",
        "cmp",
        "b",
        "a",
        "a",
        "b",
        "cmp",
        "a",
        "b",
        "a",
        "b",
        "func",
        "$N",
        "reverse",
        "cmp",
        "b",
        "a",
        "res",
        "getattr",
        "a",
        "b",
        "res",
        "_b_",
        "_b_",
        "$B",
        "b",
        "$B",
        "a",
        "res",
        "a",
        "b",
        "cmp",
        "a",
        "b",
        "res",
        "getattr",
        "a",
        "b",
        "res",
        "_b_",
        "_b_",
        "$B",
        "a",
        "$B",
        "b",
        "res",
        "a",
        "b",
        "reverse",
        "cmp",
        "b",
        "a",
        "func",
        "a",
        "func",
        "b",
        "res",
        "getattr",
        "_a",
        "_b",
        "res",
        "_b_",
        "_b_",
        "$B",
        "b",
        "$B",
        "a",
        "res",
        "_a",
        "_b",
        "cmp",
        "a",
        "b",
        "func",
        "a",
        "func",
        "b",
        "res",
        "$B",
        "_a",
        "_b",
        "res",
        "_b_",
        "_b_",
        "$B",
        "a",
        "$B",
        "b",
        "res",
        "_a",
        "_b",
        "$B",
        "cmp",
        "$N",
        "$B",
        "t",
        "t",
        "t",
        "arguments",
        "$B",
        "arguments",
        "$",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "obj",
        "res",
        "res",
        "obj",
        "$B",
        "obj",
        "$B",
        "getattr",
        "arg",
        "res",
        "pos",
        "next_func",
        "err",
        "isinstance",
        "err",
        "_b_",
        "err",
        "res",
        "res",
        "$B",
        "$B",
        "$B",
        "array",
        "JSArray",
        "array",
        "JSArray",
        "JSArray",
        "args",
        "args",
        "args",
        "i",
        "len",
        "i",
        "res",
        "args",
        "i",
        "res",
        "attr",
        "$B",
        "attr",
        "attr",
        "$B",
        "attr",
        "fname",
        "$B",
        "fname",
        "make_args",
        "arguments",
        "attr",
        "$B",
        "$B",
        "arg",
        "arg",
        "_b_",
        "$B",
        "tuple_iterator",
        "arguments",
        "obj",
        "obj",
        "$B",
        "array",
        "array",
        "array",
        "array",
        "_b_",
        "array",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "x",
        "x",
        "arguments",
        "attr",
        "other",
        "other",
        "other",
        "a",
        "b",
        "s",
        "parseInt",
        "a",
        "b",
        "parseInt",
        "s",
        "s",
        "i",
        "len",
        "i",
        "_b_",
        "i",
        "x",
        "c_mul",
        "x",
        "y",
        "x",
        "$N",
        "cls",
        "args",
        "cls",
        "_b_",
        "cls",
        "_b_",
        "$B",
        "args",
        "$B",
        "getattr",
        "arg",
        "next_func",
        "item",
        "err",
        "err",
        "_b_",
        "err",
        "$B",
        "_b_",
        "_b_",
        "_b_",
        "__BRYTHON__",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "gc",
        "$B",
        "$B",
        "gc",
        "$B",
        "gc",
        "item",
        "item",
        "item",
        "item",
        "i",
        "nb",
        "i",
        "$B",
        "gc",
        "item",
        "i",
        "step",
        "$B",
        "gc",
        "item",
        "key",
        "$B",
        "$B",
        "key",
        "item",
        "$B",
        "key",
        "item",
        "i",
        "item",
        "i",
        "$B",
        "key",
        "item",
        "i",
        "$B",
        "key",
        "item",
        "$B",
        "$B",
        "eval",
        "bltns",
        "$B",
        "_b_",
        "$",
        "$",
        "$",
        "_b_",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "isinstance",
        "$",
        "_b_",
        "isinstance",
        "$",
        "_b_",
        "_b_",
        "s",
        "s",
        "obj",
        "_b_",
        "obj",
        "_b_",
        "$B",
        "obj",
        "other",
        "other",
        "getattr",
        "other",
        "err",
        "_b_",
        "$B",
        "other",
        "other",
        "item",
        "item",
        "_b_",
        "item",
        "item",
        "nbcar",
        "nbcar",
        "i",
        "len",
        "i",
        "i",
        "nbcar",
        "item",
        "_b_",
        "other",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "_b_",
        "fmt",
        "fmt",
        "_b_",
        "fmt",
        "fmt",
        "_b_",
        "fmt",
        "format_spec",
        "$B",
        "format_spec",
        "fmt",
        "_b_",
        "fmt",
        "fmt",
        "$B",
        "preformat",
        "fmt",
        "fmt",
        "arg",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "pos",
        "pos",
        "pos",
        "pos",
        "_b_",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "s",
        "s",
        "s",
        "step",
        "stop",
        "start",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "i",
        "stop",
        "start",
        "i",
        "stop",
        "i",
        "step",
        "res",
        "i",
        "res",
        "isinstance",
        "arg",
        "_b_",
        "_b_",
        "arg",
        "_b_",
        "p",
        "p",
        "x",
        "x",
        "p",
        "mask",
        "p",
        "i",
        "len",
        "i",
        "x",
        "x",
        "p",
        "i",
        "mask",
        "x",
        "x",
        "p",
        "mask",
        "x",
        "x",
        "suffix",
        "mask",
        "x",
        "x",
        "x",
        "fnv",
        "arg",
        "arg",
        "arg",
        "_b_",
        "$B",
        "str_iterator",
        "items",
        "s",
        "isinstance",
        "s",
        "_b_",
        "_b_",
        "NotANumber",
        "size",
        "size",
        "size",
        "s",
        "flags",
        "minus_one",
        "flags",
        "padding",
        "s",
        "s",
        "s",
        "padding",
        "parseInt",
        "padding",
        "minus_one",
        "padding",
        "flags",
        "get_char_array",
        "padding",
        "s",
        "flags",
        "s",
        "s",
        "get_char_array",
        "padding",
        "s",
        "flags",
        "val",
        "flags",
        "flags",
        "precision",
        "val",
        "precision",
        "parseInt",
        "precision",
        "val",
        "$B",
        "s",
        "$B",
        "val",
        "s",
        "val",
        "s",
        "get_char_array",
        "precision",
        "s",
        "s",
        "get_char_array",
        "precision",
        "s",
        "s",
        "val",
        "upper",
        "flags",
        "modifier",
        "flags",
        "isFinite",
        "val",
        "modifier",
        "val",
        "precision",
        "flags",
        "upper",
        "val",
        "Infinity",
        "val",
        "val",
        "Infinity",
        "val",
        "val",
        "upper",
        "val",
        "val",
        "val",
        "flags",
        "flags",
        "val",
        "flags",
        "val",
        "val",
        "flags",
        "flags",
        "format_padding",
        "val",
        "flags",
        "val",
        "flags",
        "number_check",
        "val",
        "val",
        "$B",
        "val",
        "$B",
        "val",
        "val",
        "parseInt",
        "val",
        "format_int_precision",
        "val",
        "flags",
        "flags",
        "val",
        "s",
        "s",
        "format_padding",
        "s",
        "flags",
        "format_sign",
        "val",
        "flags",
        "sign",
        "sign",
        "format_padding",
        "s",
        "flags",
        "format_padding",
        "format_sign",
        "val",
        "flags",
        "s",
        "flags",
        "val",
        "flags",
        "flags",
        "format_padding",
        "repr",
        "val",
        "flags",
        "val",
        "flags",
        "flags",
        "format_padding",
        "ascii",
        "val",
        "flags",
        "val",
        "flags",
        "number_check",
        "val",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "parseInt",
        "flags",
        "validate_precision",
        "flags",
        "parseFloat",
        "val",
        "precision",
        "precision",
        "precision",
        "val",
        "upper",
        "flags",
        "val",
        "_float_helper",
        "val",
        "flags",
        "v",
        "val",
        "v_len",
        "v",
        "dot_idx",
        "v",
        "dot_idx",
        "dot_idx",
        "v_len",
        "val",
        "val",
        "leading_zeros",
        "v",
        "zeros",
        "numzeros",
        "zeros",
        "numzeros",
        "numzeros",
        "val",
        "format_sign",
        "val",
        "flags",
        "format_float_precision",
        "val",
        "upper",
        "flags",
        "_floating_g_exp_helper",
        "flags",
        "trailing_zeros",
        "val",
        "trl",
        "val",
        "trl",
        "trailing_dot",
        "trl",
        "flags",
        "val",
        "val",
        "val",
        "format_padding",
        "val",
        "flags",
        "flags",
        "flags",
        "numzeros",
        "format_padding",
        "format_sign",
        "val",
        "flags",
        "format_float_precision",
        "val",
        "upper",
        "flags",
        "val",
        "precision",
        "val",
        "min",
        "precision",
        "v_len",
        "dot_idx",
        "numzeros",
        "flags",
        "dot_idx",
        "flags",
        "val",
        "format_sign",
        "val",
        "flags",
        "format_float_precision",
        "val",
        "upper",
        "flags",
        "_floating_g_exp_helper",
        "flags",
        "trailing_zeros",
        "val",
        "trl",
        "val",
        "trl",
        "trailing_dot",
        "trl",
        "flags",
        "val",
        "val",
        "val",
        "format_padding",
        "val",
        "flags",
        "format_padding",
        "format_sign",
        "val",
        "flags",
        "format_float_precision",
        "val",
        "upper",
        "flags",
        "val",
        "precision",
        "flags",
        "precision",
        "min",
        "v_len",
        "precision",
        "v_len",
        "flags",
        "precision",
        "v_len",
        "precision",
        "dot_idx",
        "precision",
        "dot_idx",
        "val",
        "precision",
        "dot_idx",
        "flags",
        "val",
        "precision",
        "flags",
        "upper",
        "precision",
        "precision",
        "val",
        "val",
        "precision",
        "val",
        "e_idx",
        "val",
        "val",
        "val",
        "e_idx",
        "val",
        "e_idx",
        "upper",
        "val",
        "val",
        "val",
        "upper",
        "flags",
        "val",
        "_float_helper",
        "val",
        "flags",
        "format_padding",
        "format_sign",
        "val",
        "flags",
        "format_float_precision",
        "val",
        "upper",
        "flags",
        "val",
        "precision",
        "flags",
        "val",
        "val",
        "precision",
        "precision",
        "flags",
        "val",
        "val",
        "flags",
        "val",
        "precision",
        "flags",
        "upper",
        "val",
        "val",
        "precision",
        "val",
        "e_idx",
        "val",
        "val",
        "val",
        "e_idx",
        "val",
        "e_idx",
        "upper",
        "val",
        "val",
        "val",
        "upper",
        "flags",
        "val",
        "_float_helper",
        "val",
        "flags",
        "format_padding",
        "format_sign",
        "val",
        "flags",
        "format_float_precision",
        "val",
        "upper",
        "flags",
        "_floating_exp_helper",
        "flags",
        "val",
        "upper",
        "flags",
        "number_check",
        "val",
        "val",
        "$B",
        "ret",
        "$B",
        "val",
        "ret",
        "parseInt",
        "val",
        "ret",
        "ret",
        "ret",
        "format_int_precision",
        "ret",
        "flags",
        "upper",
        "ret",
        "ret",
        "flags",
        "val",
        "ret",
        "ret",
        "ret",
        "format_padding",
        "ret",
        "flags",
        "format_sign",
        "val",
        "flags",
        "sign",
        "ret",
        "sign",
        "format_padding",
        "ret",
        "flags",
        "flags",
        "ret",
        "upper",
        "ret",
        "ret",
        "ret",
        "ret",
        "upper",
        "ret",
        "ret",
        "ret",
        "ret",
        "format_padding",
        "format_sign",
        "val",
        "flags",
        "ret",
        "flags",
        "val",
        "flags",
        "number_check",
        "val",
        "val",
        "$B",
        "ret",
        "$B",
        "ret",
        "parseInt",
        "val",
        "ret",
        "ret",
        "ret",
        "format_int_precision",
        "ret",
        "flags",
        "flags",
        "val",
        "ret",
        "ret",
        "ret",
        "format_padding",
        "ret",
        "flags",
        "format_sign",
        "val",
        "flags",
        "sign",
        "ret",
        "sign",
        "format_padding",
        "ret",
        "flags",
        "flags",
        "ret",
        "ret",
        "ret",
        "ret",
        "ret",
        "format_padding",
        "ret",
        "flags",
        "val",
        "flags",
        "val",
        "val",
        "_b_",
        "val",
        "ints",
        "_b_",
        "it",
        "err",
        "err",
        "_b_",
        "_b_",
        "ints",
        "format_padding",
        "_b_",
        "b",
        "flags",
        "err",
        "bytes_obj",
        "$B",
        "val",
        "format_padding",
        "_b_",
        "bytes_obj",
        "flags",
        "err",
        "err",
        "_b_",
        "_b_",
        "$B",
        "val",
        "err",
        "val",
        "flags",
        "isinstance",
        "val",
        "val",
        "val",
        "isinstance",
        "val",
        "val",
        "val",
        "val",
        "val",
        "_b_",
        "val",
        "err",
        "_b_",
        "format_padding",
        "chr",
        "val",
        "flags",
        "c",
        "flags",
        "c",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "flags",
        "c",
        "flags",
        "flags",
        "c",
        "val",
        "flags",
        "flags",
        "UnsupportedChar",
        "flags",
        "val",
        "flags",
        "flags",
        "flags",
        "val",
        "flags",
        "flags",
        "val",
        "flags",
        "flags",
        "val",
        "flags",
        "flags",
        "series_of_bytes",
        "str_format",
        "num_format",
        "num_format",
        "num_format",
        "octal_format",
        "repr_format",
        "ascii_format",
        "val",
        "flags",
        "floating_point_format",
        "val",
        "flags",
        "val",
        "flags",
        "floating_point_format",
        "val",
        "flags",
        "val",
        "flags",
        "floating_point_decimal_format",
        "val",
        "flags",
        "val",
        "flags",
        "floating_point_decimal_format",
        "val",
        "flags",
        "val",
        "flags",
        "floating_point_exponential_format",
        "val",
        "flags",
        "val",
        "flags",
        "floating_point_exponential_format",
        "val",
        "flags",
        "val",
        "flags",
        "signed_hex_format",
        "val",
        "flags",
        "val",
        "flags",
        "signed_hex_format",
        "val",
        "flags",
        "single_char_format",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "val",
        "flags",
        "num_flag",
        "flags",
        "neg_flag",
        "space_flag",
        "sign_flag",
        "decimal_point_flag",
        "alternate_flag",
        "args",
        "_b_",
        "args",
        "_b_",
        "argpos",
        "getitem",
        "_b_",
        "args",
        "_b_",
        "s",
        "kwarg_key",
        "s",
        "newpos",
        "rslt",
        "_b_",
        "rslt",
        "newpos",
        "rslt",
        "getitem",
        "key",
        "err",
        "err",
        "err",
        "_b_",
        "get_string_value",
        "s",
        "s",
        "argpos",
        "args",
        "args",
        "argpos",
        "_b_",
        "get_string_value",
        "s",
        "s",
        "char_mapping",
        "s",
        "newpos",
        "func",
        "UnsupportedChar",
        "func",
        "flags",
        "ret",
        "ret",
        "invalid_char",
        "_b_",
        "_b_",
        "invalid_char",
        "invalid_char",
        "newpos",
        "err",
        "s",
        "newpos",
        "cls",
        "cls",
        "cls",
        "cls",
        "cls",
        "_b_",
        "try_char",
        "cls",
        "err",
        "pos",
        "newpos",
        "ret",
        "pos",
        "ret",
        "pos",
        "newpos",
        "newpos",
        "length",
        "newpos",
        "ret",
        "nbph",
        "newpos",
        "newpos",
        "ret",
        "$get_kwarg_string",
        "ret",
        "$get_arg_string",
        "_b_",
        "pos",
        "newpos",
        "pos",
        "length",
        "argpos",
        "args",
        "argpos",
        "_b_",
        "args",
        "argpos",
        "_b_",
        "nbph",
        "_b_",
        "ret",
        "$B",
        "arguments",
        "isinstance",
        "$",
        "_b_",
        "_b_",
        "$B",
        "$",
        "i",
        "$",
        "i",
        "$res",
        "$",
        "$res",
        "other",
        "other",
        "res",
        "res",
        "res",
        "res",
        "res",
        "combining_re",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "qesc",
        "res",
        "attr",
        "value",
        "_b_",
        "cp",
        "cp",
        "combining",
        "cp",
        "combining",
        "combining_re",
        "other",
        "other",
        "_b_",
        "other",
        "$comp_func",
        "$op",
        "$comps",
        "eval",
        "$comps",
        "$op",
        "$comp_func",
        "$op",
        "$B",
        "other",
        "NotImplementedError",
        "$B",
        "arguments",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "cf",
        "$B",
        "cf",
        "cf",
        "cp",
        "res",
        "cp",
        "res",
        "i",
        "res",
        "$B",
        "arguments",
        "$",
        "$",
        "parseInt",
        "$",
        "$",
        "pad",
        "res",
        "res",
        "res",
        "$",
        "res",
        "$",
        "res",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$B",
        "$",
        "$",
        "$",
        "$",
        "_slice",
        "_b_",
        "$",
        "$",
        "_slice",
        "_b_",
        "$",
        "$",
        "substr",
        "$",
        "_slice",
        "$",
        "$",
        "$",
        "$",
        "$",
        "substr",
        "substr",
        "pos",
        "substr",
        "pos",
        "substr",
        "$",
        "pos",
        "pos",
        "n",
        "pos",
        "$",
        "n",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "i",
        "len",
        "i",
        "$",
        "i",
        "res",
        "res",
        "res",
        "res",
        "_b_",
        "_b_",
        "$",
        "$",
        "$",
        "$B",
        "arguments",
        "normalize_start_end",
        "$",
        "$",
        "isinstance",
        "suffixes",
        "_b_",
        "suffixes",
        "suffixes",
        "$",
        "$",
        "$",
        "suffixes",
        "i",
        "len",
        "i",
        "suffixes",
        "i",
        "_b_",
        "suffix",
        "_b_",
        "suffix",
        "s",
        "s",
        "s",
        "suffix",
        "suffix",
        "tabsize",
        "$B",
        "arguments",
        "$B",
        "$",
        "s",
        "pos",
        "pos",
        "car",
        "col",
        "s",
        "res",
        "col",
        "res",
        "car",
        "col",
        "res",
        "car",
        "col",
        "pos",
        "res",
        "$B",
        "arguments",
        "check_str",
        "$",
        "normalize_start_end",
        "$",
        "isinstance",
        "$",
        "_b_",
        "isinstance",
        "$",
        "_b_",
        "_b_",
        "$",
        "i",
        "$",
        "i",
        "s",
        "$",
        "i",
        "$",
        "$",
        "$",
        "$",
        "s",
        "$",
        "s",
        "$",
        "i",
        "last_search",
        "i",
        "s",
        "i",
        "$",
        "$",
        "$",
        "i",
        "$B",
        "fmt_string",
        "fmt_string",
        "elts",
        "name",
        "fmt_string",
        "name",
        "elts",
        "spec",
        "elts",
        "name",
        "elts",
        "name",
        "elts",
        "conv",
        "elts",
        "name",
        "match",
        "name_ext",
        "match",
        "name",
        "name",
        "name_ext_re",
        "name_repl",
        "name",
        "name_ext",
        "conv",
        "spec",
        "fmt_string",
        "$B",
        "pos",
        "_len",
        "car",
        "pos",
        "car",
        "pos",
        "text",
        "pos",
        "car",
        "pos",
        "text",
        "pos",
        "car",
        "parts",
        "text",
        "pos",
        "end",
        "_len",
        "end",
        "nb",
        "end",
        "end",
        "nb",
        "end",
        "nb",
        "pos",
        "end",
        "$B",
        "fmt_string",
        "fmt_obj",
        "fmt_obj",
        "fmt_obj",
        "fmt_obj",
        "fmt_obj",
        "fmt_obj",
        "rank",
        "rank",
        "fmt_obj",
        "name",
        "key",
        "key",
        "rank",
        "key",
        "fmt_obj",
        "fmt_obj",
        "replace_nested",
        "parts",
        "fmt_obj",
        "text",
        "end",
        "nb",
        "ValueError",
        "pos",
        "end",
        "text",
        "car",
        "pos",
        "text",
        "parts",
        "text",
        "parts",
        "$B",
        "arguments",
        "$B",
        "$",
        "i",
        "parts",
        "i",
        "parts",
        "i",
        "res",
        "parts",
        "i",
        "fmt",
        "parts",
        "i",
        "fmt",
        "name",
        "key",
        "key",
        "_b_",
        "$",
        "parseInt",
        "key",
        "_b_",
        "$",
        "key",
        "fmt",
        "fmt",
        "replace_nested",
        "fmt",
        "parseInt",
        "fmt",
        "_b_",
        "$",
        "pos",
        "_b_",
        "$",
        "fmt",
        "j",
        "fmt",
        "j",
        "fmt",
        "j",
        "ext",
        "value",
        "_b_",
        "value",
        "ext",
        "ext",
        "ext",
        "key",
        "key",
        "parseInt",
        "key",
        "value",
        "_b_",
        "value",
        "key",
        "fmt",
        "value",
        "_b_",
        "value",
        "fmt",
        "value",
        "_b_",
        "value",
        "fmt",
        "value",
        "_b_",
        "value",
        "value",
        "value",
        "res",
        "value",
        "value",
        "fmt",
        "res",
        "_b_",
        "value",
        "fmt",
        "res",
        "NotImplementedError",
        "arguments",
        "res",
        "_b_",
        "res",
        "i",
        "len",
        "i",
        "i",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "unicode_tables",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "$B",
        "arguments",
        "unicode_tables",
        "i",
        "len",
        "i",
        "unicode_tables",
        "i",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "has_cased",
        "unicode_tables",
        "unicode_tables",
        "has_cased",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "unicode_tables",
        "i",
        "printable",
        "i",
        "printable_gc",
        "i",
        "unicode_tables",
        "printable_gc",
        "i",
        "cp",
        "table",
        "printable",
        "cp",
        "printable",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "printable",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "$B",
        "$B",
        "arguments",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "has_cased",
        "unicode_tables",
        "unicode_tables",
        "has_cased",
        "$B",
        "arguments",
        "_b_",
        "$",
        "_b_",
        "iterable",
        "isinstance",
        "obj2",
        "_b_",
        "count",
        "$B",
        "obj2",
        "res",
        "obj2",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "res",
        "$",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$B",
        "arguments",
        "x",
        "$B",
        "arguments",
        "_b_",
        "$",
        "_b_",
        "$",
        "i",
        "$",
        "i",
        "$",
        "$",
        "i",
        "$",
        "i",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$",
        "_b_",
        "$",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "$",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "items",
        "i",
        "_b_",
        "k",
        "_b_",
        "_b_",
        "k",
        "_b_",
        "k",
        "k",
        "_b_",
        "k",
        "_b_",
        "k",
        "v",
        "_b_",
        "_b_",
        "v",
        "_b_",
        "_b_",
        "_b_",
        "v",
        "_b_",
        "_t",
        "k",
        "v",
        "_t",
        "_b_",
        "$",
        "_b_",
        "_b_",
        "$",
        "_b_",
        "_b_",
        "$",
        "$",
        "_b_",
        "$",
        "_b_",
        "$",
        "_b_",
        "_b_",
        "$",
        "i",
        "len",
        "i",
        "toNone",
        "_b_",
        "$",
        "i",
        "$",
        "i",
        "len",
        "i",
        "_b_",
        "$",
        "i",
        "$",
        "i",
        "_b_",
        "_t",
        "key",
        "value",
        "k",
        "toNone",
        "_b_",
        "_t",
        "parseInt",
        "k",
        "_b_",
        "_t",
        "$B",
        "arguments",
        "$",
        "_b_",
        "check_str",
        "$",
        "$",
        "$",
        "i",
        "_b_",
        "$",
        "_b_",
        "$",
        "i",
        "$",
        "$",
        "i",
        "$",
        "specials",
        "i",
        "len",
        "i",
        "specials",
        "i",
        "re",
        "specials",
        "i",
        "old",
        "_new",
        "count",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$",
        "check_str",
        "old",
        "check_str",
        "_new",
        "isinstance",
        "count",
        "_b_",
        "_b_",
        "_b_",
        "$B",
        "count",
        "isinstance",
        "count",
        "_b_",
        "_b_",
        "count",
        "count",
        "$B",
        "count",
        "parseInt",
        "count",
        "old",
        "_new",
        "_new",
        "count",
        "elts",
        "count",
        "elts",
        "count",
        "_new",
        "elts",
        "count",
        "_new",
        "rest",
        "_new",
        "elts",
        "_new",
        "_new",
        "old",
        "count",
        "old",
        "i",
        "elts",
        "i",
        "res",
        "elts",
        "i",
        "_new",
        "res",
        "rest",
        "count",
        "count",
        "res",
        "count",
        "pos",
        "res",
        "old",
        "pos",
        "pos",
        "res",
        "res",
        "pos",
        "_new",
        "res",
        "pos",
        "old",
        "pos",
        "pos",
        "_new",
        "count",
        "res",
        "substr",
        "arguments",
        "substr",
        "substr",
        "$B",
        "arguments",
        "normalize_start_end",
        "$",
        "check_str",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "sublen",
        "i",
        "$",
        "i",
        "$",
        "i",
        "sublen",
        "$",
        "i",
        "arguments",
        "res",
        "_b_",
        "res",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "sep",
        "$B",
        "arguments",
        "check_str",
        "$",
        "reverse",
        "$",
        "reverse",
        "$",
        "sep",
        "i",
        "items",
        "i",
        "items",
        "i",
        "items",
        "i",
        "items",
        "$B",
        "arguments",
        "_b_",
        "$",
        "reverse",
        "$",
        "sep",
        "_b_",
        "sep",
        "reverse",
        "$",
        "rev_str",
        "rev_sep",
        "$",
        "rev_res",
        "i",
        "rev_res",
        "i",
        "rev_res",
        "i",
        "reverse",
        "rev_res",
        "i",
        "rev_res",
        "x",
        "$B",
        "arguments",
        "_b_",
        "$",
        "_b_",
        "$",
        "$",
        "j",
        "j",
        "$",
        "$",
        "j",
        "$",
        "j",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$",
        "$",
        "maxsplit",
        "$B",
        "maxsplit",
        "parseInt",
        "maxsplit",
        "sep",
        "_b_",
        "sep",
        "_b_",
        "pos",
        "pos",
        "pos",
        "pos",
        "pos",
        "name",
        "name",
        "pos",
        "name",
        "pos",
        "name",
        "res",
        "name",
        "maxsplit",
        "res",
        "maxsplit",
        "res",
        "res",
        "name",
        "pos",
        "res",
        "name",
        "pos",
        "pos",
        "name",
        "res",
        "name",
        "res",
        "sep",
        "maxsplit",
        "pos",
        "pos",
        "seplen",
        "sep",
        "res",
        "s",
        "pos",
        "seplen",
        "maxsplit",
        "res",
        "maxsplit",
        "res",
        "pos",
        "res",
        "s",
        "s",
        "pos",
        "pos",
        "res",
        "s",
        "res",
        "$B",
        "arguments",
        "_b_",
        "$",
        "_b_",
        "_b_",
        "_b_",
        "$B",
        "$",
        "_b_",
        "$",
        "$",
        "res",
        "pos",
        "pos",
        "res",
        "start",
        "keepends",
        "pos",
        "pos",
        "start",
        "pos",
        "pos",
        "pos",
        "pos",
        "res",
        "start",
        "keepends",
        "pos",
        "pos",
        "start",
        "pos",
        "pos",
        "pos",
        "start",
        "res",
        "start",
        "res",
        "$B",
        "arguments",
        "normalize_start_end",
        "$",
        "$",
        "isinstance",
        "prefixes",
        "_b_",
        "prefixes",
        "prefixes",
        "$",
        "$",
        "$",
        "prefixes",
        "i",
        "len",
        "i",
        "prefixes",
        "i",
        "_b_",
        "prefix",
        "_b_",
        "s",
        "prefix",
        "prefix",
        "$B",
        "arguments",
        "_b_",
        "$",
        "_b_",
        "$",
        "i",
        "$",
        "i",
        "$",
        "$",
        "i",
        "$",
        "j",
        "i",
        "j",
        "$",
        "$",
        "j",
        "$",
        "i",
        "j",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "res",
        "i",
        "unicode_tables",
        "res",
        "i",
        "res",
        "i",
        "res",
        "$B",
        "arguments",
        "i",
        "len",
        "i",
        "i",
        "unicode_tables",
        "state",
        "res",
        "i",
        "state",
        "res",
        "i",
        "unicode_tables",
        "unicode_tables",
        "res",
        "state",
        "i",
        "i",
        "state",
        "state",
        "res",
        "i",
        "res",
        "table",
        "$B",
        "table",
        "i",
        "len",
        "i",
        "getitem",
        "i",
        "repl",
        "_b_",
        "repl",
        "res",
        "repl",
        "repl",
        "res",
        "repl",
        "err",
        "res",
        "i",
        "res",
        "$B",
        "arguments",
        "width",
        "$B",
        "arguments",
        "$",
        "$",
        "width",
        "arg",
        "encoding",
        "errors",
        "arguments",
        "arg",
        "_b_",
        "encoding",
        "$B",
        "arguments",
        "$",
        "$",
        "arg",
        "arg",
        "isFinite",
        "arg",
        "arg",
        "arg",
        "arg",
        "$B",
        "arg",
        "func",
        "arg",
        "arg",
        "arg",
        "_b_",
        "encoding",
        "_b_",
        "arg",
        "$",
        "$",
        "arg",
        "$B",
        "arg",
        "$B",
        "klass",
        "method",
        "arg",
        "arg",
        "_b_",
        "method",
        "method",
        "_b_",
        "$B",
        "klass",
        "err",
        "arg",
        "err",
        "$B",
        "err",
        "arg",
        "err",
        "$B",
        "method",
        "arg",
        "cls",
        "cls",
        "_b_",
        "cls",
        "$B",
        "$B",
        "_b_",
        "$attr",
        "$attr",
        "StringSubclass",
        "$attr",
        "attr",
        "arguments",
        "arguments",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "pos",
        "arguments",
        "i",
        "attr",
        "args",
        "$attr",
        "StringSubclass",
        "cls",
        "cls",
        "$B",
        "StringSubclass",
        "_b_",
        "$B",
        "spec",
        "spec",
        "aligns",
        "spec",
        "align_pos",
        "spec",
        "aligns",
        "spec",
        "spec",
        "spec",
        "pos",
        "aligns",
        "align_pos",
        "pos",
        "align_pos",
        "aligns",
        "spec",
        "spec",
        "align_pos",
        "aligns",
        "align_pos",
        "spec",
        "pos",
        "spec",
        "pos",
        "car",
        "car",
        "car",
        "car",
        "pos",
        "car",
        "spec",
        "pos",
        "car",
        "pos",
        "car",
        "spec",
        "pos",
        "car",
        "align_pos",
        "pos",
        "car",
        "spec",
        "pos",
        "car",
        "digits",
        "car",
        "car",
        "car",
        "pos",
        "car",
        "spec",
        "pos",
        "parseInt",
        "car",
        "spec",
        "pos",
        "spec",
        "pos",
        "end_param_pos",
        "pos",
        "end_param_pos",
        "car",
        "pos",
        "car",
        "spec",
        "pos",
        "car",
        "digits",
        "spec",
        "pos",
        "_b_",
        "spec",
        "pos",
        "pos",
        "car",
        "spec",
        "pos",
        "car",
        "digits",
        "car",
        "car",
        "pos",
        "car",
        "spec",
        "pos",
        "parseInt",
        "car",
        "types",
        "car",
        "car",
        "pos",
        "car",
        "spec",
        "pos",
        "pos",
        "spec",
        "_b_",
        "spec",
        "_b_",
        "$B",
        "s",
        "fmt",
        "fmt",
        "s",
        "fmt",
        "fmt",
        "fmt",
        "fmt",
        "s",
        "align",
        "s",
        "fill",
        "missing",
        "fill",
        "missing",
        "s",
        "s",
        "s",
        "fill",
        "missing",
        "s",
        "fill",
        "missing",
        "s",
        "parseInt",
        "missing",
        "fill",
        "left",
        "s",
        "fill",
        "missing",
        "left",
        "s",
        "$B",
        "pos",
        "ctype",
        "car",
        "pos",
        "car",
        "pos",
        "ctype",
        "current",
        "pos",
        "ctype",
        "nb_braces",
        "pos",
        "car",
        "pos",
        "car",
        "ctype",
        "current",
        "pos",
        "ctype",
        "current",
        "car",
        "pos",
        "ctype",
        "i",
        "car",
        "i",
        "car",
        "i",
        "current",
        "i",
        "elts",
        "current",
        "ctype",
        "pos",
        "i",
        "car",
        "i",
        "car",
        "current",
        "car",
        "i",
        "current",
        "car",
        "i",
        "pos",
        "i",
        "ctype",
        "i",
        "i",
        "i",
        "elts",
        "current",
        "ctype",
        "current",
        "pos",
        "i",
        "fstring_expression",
        "i",
        "car",
        "i",
        "car",
        "nb_paren",
        "nb_braces",
        "current",
        "car",
        "i",
        "car",
        "nb_paren",
        "nb_braces",
        "nb_braces",
        "elts",
        "current",
        "ctype",
        "current",
        "pos",
        "i",
        "current",
        "car",
        "i",
        "car",
        "nb_paren",
        "car",
        "current",
        "i",
        "current",
        "i",
        "current",
        "i",
        "i",
        "car",
        "nb_paren",
        "current",
        "car",
        "i",
        "car",
        "nb_paren",
        "current",
        "car",
        "i",
        "car",
        "i",
        "i",
        "end",
        "i",
        "end",
        "trs",
        "trs",
        "current",
        "trs",
        "i",
        "end",
        "i",
        "end",
        "current",
        "i",
        "end",
        "i",
        "end",
        "nb_paren",
        "car",
        "current",
        "current",
        "car",
        "i",
        "car",
        "current",
        "ce",
        "i",
        "ce",
        "ce",
        "current",
        "car",
        "i",
        "i",
        "tail",
        "car",
        "i",
        "tail",
        "i",
        "i",
        "elts",
        "current",
        "tail",
        "ce",
        "ce",
        "ce",
        "ce",
        "current",
        "ce",
        "ctype",
        "i",
        "current",
        "car",
        "i",
        "nb_braces",
        "current",
        "elts",
        "current",
        "elts",
        "__BRYTHON__",
        "$B",
        "$B",
        "eval",
        "bltns",
        "_b_",
        "_b_",
        "_b_",
        "$B",
        "name",
        "set_like",
        "$B",
        "name",
        "items",
        "klass",
        "_b_",
        "items",
        "items",
        "set_like",
        "set_ops",
        "i",
        "len",
        "i",
        "set_ops",
        "i",
        "klass",
        "op",
        "op",
        "other",
        "_b_",
        "op",
        "_b_",
        "_b_",
        "other",
        "op",
        "klass",
        "klass",
        "it",
        "it",
        "klass",
        "klass",
        "klass",
        "_b_",
        "$B",
        "klass",
        "klass",
        "RuntimeError",
        "_b_",
        "_b_",
        "d",
        "key",
        "d",
        "res",
        "key",
        "d",
        "key",
        "res",
        "d",
        "ix",
        "d",
        "items",
        "attr",
        "d",
        "attr",
        "d",
        "attr",
        "val",
        "val",
        "_b_",
        "val",
        "val",
        "$N",
        "items",
        "attr",
        "val",
        "k",
        "d",
        "items",
        "parseFloat",
        "k",
        "d",
        "k",
        "k",
        "d",
        "items",
        "k",
        "d",
        "k",
        "k",
        "d",
        "d",
        "k",
        "item",
        "items",
        "item",
        "items",
        "a",
        "b",
        "a",
        "b",
        "items",
        "items",
        "item",
        "item",
        "item",
        "ix",
        "items",
        "item",
        "item",
        "ix",
        "items",
        "_b_",
        "items",
        "item",
        "item",
        "_b_",
        "item",
        "$B",
        "to_list",
        "RuntimeError",
        "_b_",
        "left",
        "right",
        "to_list",
        "right",
        "right",
        "right",
        "right",
        "_l",
        "i",
        "len",
        "i",
        "si",
        "left",
        "_l",
        "i",
        "_l",
        "i",
        "right",
        "right_version",
        "_b_",
        "hash",
        "key",
        "hash",
        "pairs",
        "pairs",
        "i",
        "len",
        "i",
        "$B",
        "key",
        "pairs",
        "i",
        "i",
        "$B",
        "arguments",
        "$",
        "$B",
        "arguments",
        "$",
        "$",
        "key",
        "$B",
        "key",
        "key",
        "key",
        "key",
        "key",
        "_b_",
        "key",
        "hash",
        "$B",
        "key",
        "hash",
        "hash",
        "$B",
        "key",
        "hash",
        "rank",
        "hash",
        "key",
        "$B",
        "arguments",
        "$",
        "$",
        "arg",
        "KeyError",
        "arg",
        "arg",
        "$N",
        "arg",
        "arg",
        "KeyError",
        "_b_",
        "arg",
        "arg",
        "str_hash",
        "arg",
        "$N",
        "arg",
        "KeyError",
        "_b_",
        "arg",
        "arg",
        "$N",
        "_b_",
        "arg",
        "ix",
        "rank",
        "hash",
        "arg",
        "hash",
        "ix",
        "KeyError",
        "_b_",
        "arg",
        "$N",
        "$B",
        "arguments",
        "$",
        "$",
        "isinstance",
        "other",
        "jsobj2dict",
        "other",
        "other",
        "jsobj2dict",
        "other",
        "other",
        "other",
        "k",
        "other",
        "k",
        "$B",
        "other",
        "k",
        "k",
        "other",
        "k",
        "other",
        "k",
        "pairs",
        "i",
        "len",
        "i",
        "$B",
        "k",
        "pairs",
        "i",
        "$B",
        "k",
        "pairs",
        "i",
        "flag",
        "flag",
        "k",
        "other",
        "k",
        "$B",
        "other",
        "k",
        "k",
        "hash",
        "hash",
        "other",
        "hash",
        "other_pairs",
        "hash",
        "other",
        "hash",
        "other",
        "hash",
        "other_pairs",
        "other_pairs",
        "other",
        "hash",
        "other_pairs",
        "pairs",
        "i",
        "len_i",
        "i",
        "pairs",
        "i",
        "pairs",
        "i",
        "other_pairs",
        "j",
        "len_j",
        "j",
        "$B",
        "key",
        "other_pairs",
        "j",
        "$B",
        "value",
        "other_pairs",
        "j",
        "flag",
        "flag",
        "$B",
        "arguments",
        "$",
        "$",
        "arg",
        "arg",
        "arg",
        "_b_",
        "arg",
        "arg",
        "_b_",
        "arg",
        "$N",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "arg",
        "_b_",
        "arg",
        "other",
        "$B",
        "arg",
        "other",
        "arg",
        "arg",
        "hash",
        "hash",
        "sk",
        "_eq",
        "sk",
        "sk",
        "hash",
        "_eq",
        "hash",
        "hash",
        "isinstance",
        "arg",
        "_b_",
        "arg",
        "res",
        "res",
        "rank",
        "hash",
        "arg",
        "ix",
        "hash",
        "ix",
        "getattr",
        "_b_",
        "err",
        "err",
        "missing_method",
        "_b_",
        "missing_method",
        "arg",
        "KeyError",
        "arg",
        "_b_",
        "args",
        "args",
        "i",
        "stop",
        "args",
        "i",
        "item",
        "item",
        "item",
        "str_hash",
        "item",
        "item",
        "item",
        "item",
        "si",
        "item",
        "item",
        "first",
        "second",
        "first",
        "$N",
        "second",
        "first",
        "$B",
        "first",
        "$N",
        "first",
        "attr",
        "first",
        "attr",
        "first",
        "attr",
        "$N",
        "first",
        "init_from_list",
        "first",
        "$N",
        "$",
        "$",
        "$B",
        "arguments",
        "$",
        "args",
        "_b_",
        "args",
        "args",
        "args",
        "args",
        "d",
        "key",
        "args",
        "d",
        "d",
        "key",
        "args",
        "d",
        "key",
        "isinstance",
        "args",
        "$copy_dict",
        "args",
        "$B",
        "args",
        "keys",
        "$B",
        "args",
        "gi",
        "gi",
        "$B",
        "gi",
        "_b_",
        "$B",
        "keys",
        "_b_",
        "kiter",
        "gi",
        "key",
        "key",
        "value",
        "err",
        "err",
        "_b_",
        "err",
        "$N",
        "args",
        "args",
        "_b_",
        "args",
        "init_from_list",
        "args",
        "$",
        "attr",
        "kw",
        "attr",
        "attr",
        "kw",
        "attr",
        "str_hash",
        "attr",
        "attr",
        "attr",
        "kw",
        "attr",
        "si",
        "attr",
        "kw",
        "attr",
        "$N",
        "_b_",
        "attr",
        "attr",
        "_count",
        "_count",
        "k",
        "_count",
        "k",
        "_count",
        "hash",
        "_count",
        "hash",
        "_count",
        "other",
        "other",
        "cls",
        "cls",
        "_b_",
        "cls",
        "cls",
        "instance",
        "_b_",
        "instance",
        "jsobj2dict",
        "to_list",
        "items",
        "item",
        "item",
        "item",
        "res",
        "repr",
        "item",
        "res",
        "repr",
        "item",
        "repr",
        "item",
        "res",
        "key",
        "value",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "key",
        "value",
        "$hash",
        "value",
        "$B",
        "value",
        "_b_",
        "key",
        "value",
        "key",
        "key",
        "$B",
        "key",
        "value",
        "$N",
        "key",
        "key",
        "value",
        "key",
        "value",
        "str_hash",
        "key",
        "key",
        "$N",
        "key",
        "value",
        "$N",
        "$hash",
        "_b_",
        "key",
        "$hash",
        "other",
        "$B",
        "key",
        "other",
        "hash",
        "_eq",
        "hash",
        "hash",
        "value",
        "hash",
        "$N",
        "hash",
        "sk",
        "_eq",
        "sk",
        "sk",
        "value",
        "sk",
        "$N",
        "$hash",
        "$hash",
        "$hash",
        "key",
        "value",
        "$hash",
        "key",
        "value",
        "$N",
        "rank",
        "hash",
        "key",
        "ix",
        "hash",
        "ix",
        "value",
        "hash",
        "ix",
        "$N",
        "hash",
        "hash",
        "key",
        "value",
        "hash",
        "key",
        "value",
        "$N",
        "arguments",
        "$B",
        "$B",
        "arguments",
        "$",
        "attr",
        "attr",
        "attr",
        "attr",
        "$N",
        "$B",
        "arguments",
        "$",
        "_b_",
        "$copy_dict",
        "res",
        "res",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$",
        "$",
        "$B",
        "klass",
        "$B",
        "keys",
        "_b_",
        "keys_iter",
        "klass",
        "res",
        "key",
        "value",
        "$B",
        "res",
        "key",
        "value",
        "err",
        "$B",
        "err",
        "_b_",
        "res",
        "err",
        "$B",
        "arguments",
        "$N",
        "$",
        "$",
        "err",
        "_b_",
        "err",
        "_b_",
        "$",
        "err",
        "$B",
        "dict_items",
        "$B",
        "arguments",
        "arguments",
        "_len",
        "_b_",
        "_msg",
        "dict_items",
        "to_list",
        "it",
        "it",
        "$B",
        "dict_keys",
        "$B",
        "arguments",
        "arguments",
        "_len",
        "_b_",
        "_msg",
        "dict_keys",
        "to_list",
        "it",
        "it",
        "$B",
        "arguments",
        "missing",
        "$",
        "$",
        "$",
        "key",
        "key",
        "res",
        "err",
        "err",
        "_b_",
        "_default",
        "missing",
        "_default",
        "err",
        "err",
        "_b_",
        "_b_",
        "itm",
        "_b_",
        "itm",
        "err",
        "err",
        "_b_",
        "KeyError",
        "$B",
        "arguments",
        "$N",
        "$",
        "$",
        "$",
        "key",
        "err",
        "err",
        "_b_",
        "err",
        "_default",
        "_default",
        "$N",
        "key",
        "key",
        "key",
        "_default",
        "hash",
        "_default",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "args",
        "args",
        "isinstance",
        "o",
        "o",
        "o",
        "jsobj2dict",
        "o",
        "$copy_dict",
        "o",
        "hasattr",
        "o",
        "_b_",
        "$B",
        "$B",
        "o",
        "_keys",
        "i",
        "len",
        "i",
        "getattr",
        "o",
        "_keys",
        "i",
        "_keys",
        "i",
        "_value",
        "_b_",
        "o",
        "_b_",
        "it",
        "err",
        "err",
        "_b_",
        "err",
        "key_value",
        "_b_",
        "item",
        "err",
        "_b_",
        "i",
        "key_value",
        "_b_",
        "i",
        "key_value",
        "key_value",
        "key_value",
        "i",
        "$copy_dict",
        "kw",
        "$N",
        "$B",
        "dict_values",
        "$B",
        "arguments",
        "arguments",
        "_len",
        "_b_",
        "_msg",
        "dict_values",
        "to_list",
        "it",
        "it",
        "res",
        "arguments",
        "i",
        "len",
        "i",
        "args",
        "arguments",
        "i",
        "args",
        "res",
        "_b_",
        "$B",
        "_b_",
        "$B",
        "$B",
        "obj",
        "_b_",
        "obj",
        "$B",
        "obj",
        "$B",
        "obj",
        "res",
        "mappingproxy",
        "res",
        "mappingproxy",
        "_b_",
        "attr",
        "mappingproxy",
        "attr",
        "attr",
        "attr",
        "mappingproxy",
        "attr",
        "key",
        "key",
        "arguments",
        "attr",
        "mappingproxy",
        "attr",
        "attr",
        "$B",
        "mappingproxy",
        "x",
        "attr",
        "x",
        "attr",
        "attr",
        "x",
        "attr",
        "x",
        "attr",
        "x",
        "d",
        "attr",
        "d",
        "d",
        "d",
        "attr",
        "x",
        "attr",
        "d",
        "d",
        "d",
        "$B",
        "obj",
        "from_js",
        "obj",
        "$B",
        "obj",
        "klass",
        "klass",
        "_b_",
        "klass",
        "res",
        "obj",
        "res",
        "from_js",
        "res",
        "__BRYTHON__",
        "$B",
        "$B",
        "_b_",
        "$B",
        "target",
        "ev",
        "ev",
        "ev",
        "_window",
        "$getPosition",
        "target",
        "$mouseCoords",
        "ev",
        "mousePos",
        "docPos",
        "mousePos",
        "docPos",
        "e",
        "e",
        "e",
        "e",
        "e",
        "e",
        "left",
        "e",
        "top",
        "e",
        "e",
        "e",
        "left",
        "e",
        "top",
        "e",
        "e",
        "$getPosition",
        "e",
        "left",
        "parent_pos",
        "top",
        "parent_pos",
        "left",
        "top",
        "width",
        "height",
        "ev",
        "ev",
        "_window",
        "ev",
        "ev",
        "posx",
        "ev",
        "posy",
        "ev",
        "ev",
        "ev",
        "posx",
        "ev",
        "posy",
        "ev",
        "res",
        "_b_",
        "posx",
        "res",
        "_b_",
        "posy",
        "res",
        "attr",
        "attr",
        "res",
        "res",
        "$B",
        "o",
        "Node",
        "o",
        "Node",
        "o",
        "o",
        "o",
        "o",
        "$B",
        "nodes",
        "nodes",
        "nodes",
        "re",
        "result",
        "nodes",
        "nodes",
        "nodes",
        "nodes",
        "err",
        "$B",
        "obj",
        "i",
        "$DOMEventAttrs_W3C",
        "i",
        "obj",
        "$DOMEventAttrs_W3C",
        "i",
        "flag",
        "flag",
        "i",
        "$DOMEventAttrs_IE",
        "i",
        "obj",
        "$DOMEventAttrs_IE",
        "i",
        "$B",
        "elt",
        "Attributes",
        "elt",
        "Attributes",
        "$B",
        "arguments",
        "$",
        "SVGElement",
        "$",
        "$",
        "$",
        "$",
        "$",
        "Attributes",
        "$B",
        "arguments",
        "Attributes",
        "$",
        "$",
        "_b_",
        "$",
        "$",
        "SVGElement",
        "$",
        "$",
        "_b_",
        "$",
        "$",
        "$",
        "_b_",
        "Attributes",
        "$B",
        "arguments",
        "$",
        "SVGElement",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "$",
        "Attributes",
        "i",
        "attrs",
        "i",
        "items",
        "attrs",
        "i",
        "items",
        "Attributes",
        "$B",
        "arguments",
        "$",
        "$",
        "$",
        "$",
        "$",
        "res",
        "_b_",
        "Attributes",
        "$B",
        "arguments",
        "$",
        "SVGElement",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "$",
        "$",
        "$",
        "$",
        "_b_",
        "_b_",
        "Attributes",
        "$B",
        "arguments",
        "_b_",
        "Attributes",
        "$",
        "$",
        "err",
        "err",
        "_b_",
        "$",
        "err",
        "Attributes",
        "Attributes",
        "arguments",
        "Attributes",
        "$B",
        "arguments",
        "$",
        "i",
        "attrs",
        "i",
        "values",
        "attrs",
        "i",
        "attrs",
        "i",
        "_b_",
        "values",
        "Attributes",
        "$B",
        "arguments",
        "$",
        "i",
        "attrs",
        "i",
        "values",
        "attrs",
        "i",
        "_b_",
        "values",
        "$B",
        "Attributes",
        "$B",
        "_b_",
        "DOMEvent",
        "cls",
        "evt_name",
        "Event",
        "evt_name",
        "ev",
        "DOMEvent",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "svg_elt",
        "coords",
        "svg_elt",
        "pt",
        "coords",
        "pt",
        "coords",
        "pt",
        "svg_elt",
        "DOMEvent",
        "attr",
        "attr",
        "$mouseCoords",
        "$mouseCoords",
        "Clipboard",
        "DOMNode",
        "SVGSVGElement",
        "dom2svg",
        "$mouseCoords",
        "_b_",
        "SVGSVGElement",
        "dom2svg",
        "$mouseCoords",
        "_b_",
        "attr",
        "res",
        "res",
        "i",
        "arguments",
        "i",
        "args",
        "$B",
        "arguments",
        "i",
        "res",
        "arguments",
        "func",
        "res",
        "res",
        "func",
        "$B",
        "res",
        "_b_",
        "attr",
        "DOMEvent",
        "evt_name",
        "DOMEvent",
        "DOMEvent",
        "evt_name",
        "$B",
        "ev",
        "ev",
        "DOMEvent",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "ev",
        "$B",
        "DOMEvent",
        "_b_",
        "Clipboard",
        "name",
        "name",
        "Clipboard",
        "Clipboard",
        "name",
        "value",
        "name",
        "value",
        "Clipboard",
        "data",
        "Clipboard",
        "_b_",
        "data",
        "$B",
        "Clipboard",
        "elt",
        "evt",
        "arg",
        "elt",
        "evt",
        "isintance",
        "arg",
        "arg",
        "arg",
        "callback",
        "i",
        "i",
        "i",
        "callback",
        "found",
        "i",
        "callback",
        "found",
        "_b_",
        "$B",
        "_b_",
        "OpenFile",
        "file",
        "mode",
        "encoding",
        "$OpenFileDict",
        "file",
        "FileReader",
        "mode",
        "res",
        "file",
        "encoding",
        "mode",
        "res",
        "file",
        "res",
        "OpenFile",
        "attr",
        "attr",
        "attr",
        "attr",
        "OpenFile",
        "attr",
        "value",
        "attr",
        "ev",
        "value",
        "$DOMEvent",
        "ev",
        "obj",
        "attr",
        "callback",
        "attr",
        "obj",
        "obj",
        "attr",
        "value",
        "attr",
        "obj",
        "obj",
        "attr",
        "value",
        "setattr",
        "obj",
        "attr",
        "value",
        "$B",
        "OpenFile",
        "dom",
        "_b_",
        "dom",
        "dom",
        "_b_",
        "dom",
        "_b_",
        "arg",
        "arg",
        "key",
        "DOMNode",
        "key",
        "attr",
        "value",
        "attr",
        "value",
        "attr",
        "value",
        "attr",
        "$B",
        "value",
        "element",
        "element",
        "index",
        "element",
        "index",
        "element",
        "element",
        "index",
        "index",
        "index",
        "name",
        "name",
        "arg",
        "arg",
        "Options",
        "parent",
        "Options",
        "parent",
        "$B",
        "Options",
        "_b_",
        "DOMNode",
        "elt",
        "fromtag",
        "elt",
        "DOMNode",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "fromtag",
        "DOMNode",
        "DOMNode",
        "tdict",
        "tdict",
        "elt",
        "tdict",
        "elt",
        "err",
        "tdict",
        "elt",
        "err",
        "klass",
        "klass",
        "elt",
        "klass",
        "elt",
        "elt",
        "elt",
        "$B",
        "DOMNode",
        "elt",
        "DOMNode",
        "other",
        "TagSum",
        "res",
        "pos",
        "_b_",
        "other",
        "TagSum",
        "res",
        "res",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "res",
        "pos",
        "DOMNode",
        "_b_",
        "other",
        "_b_",
        "other",
        "DOMNode",
        "res",
        "pos",
        "other",
        "res",
        "res",
        "_b_",
        "other",
        "err",
        "_b_",
        "$B",
        "other",
        "res",
        "DOMNode",
        "DOMNode",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "key",
        "i",
        "len",
        "i",
        "i",
        "key",
        "DOMNode",
        "_b_",
        "_b_",
        "DOMNode",
        "key",
        "key",
        "res",
        "res",
        "res",
        "_b_",
        "key",
        "DOMNode",
        "attr",
        "attr",
        "res",
        "attr",
        "attr",
        "DOMNode",
        "attr",
        "res",
        "attr",
        "res",
        "attr",
        "res",
        "res",
        "DOMNode",
        "other",
        "other",
        "DOMNode",
        "attr",
        "attr",
        "attr",
        "attr",
        "attr",
        "Attributes",
        "DOMNode",
        "attr",
        "attr",
        "attr",
        "SVGElement",
        "attr",
        "attr",
        "parseInt",
        "attr",
        "attr",
        "computed",
        "parseFloat",
        "computed",
        "_b_",
        "attr",
        "_b_",
        "SVGElement",
        "$getPosition",
        "attr",
        "pos",
        "pos",
        "DOMNode",
        "attr",
        "arguments",
        "XMLHttpRequest",
        "req",
        "req",
        "req",
        "headers",
        "headers",
        "_b_",
        "i",
        "headers",
        "i",
        "headers",
        "i",
        "header",
        "header",
        "res",
        "header",
        "pos",
        "header",
        "pos",
        "res",
        "attr",
        "attr",
        "selector",
        "selector",
        "_b_",
        "DOMNode",
        "selector",
        "attr",
        "property",
        "$B",
        "attr",
        "property",
        "attr",
        "property",
        "attr",
        "res",
        "res",
        "_b_",
        "res",
        "f",
        "elt",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "arg",
        "arg",
        "arg",
        "dest_fn",
        "dest_fn",
        "arguments",
        "err",
        "$B",
        "err",
        "arg",
        "arg",
        "f1",
        "args",
        "pos",
        "f1",
        "_b_",
        "arg",
        "JSObject",
        "args",
        "pos",
        "arg",
        "_b_",
        "arg",
        "DOMNode",
        "args",
        "pos",
        "arg",
        "arg",
        "_b_",
        "args",
        "pos",
        "arg",
        "_b_",
        "args",
        "pos",
        "_b_",
        "arg",
        "args",
        "pos",
        "arg",
        "f",
        "elt",
        "args",
        "$B",
        "result",
        "res",
        "func",
        "attr",
        "func",
        "func",
        "attr",
        "Options",
        "attr",
        "$B",
        "attr",
        "res",
        "res",
        "$B",
        "res",
        "attr",
        "DOMNode",
        "key",
        "key",
        "key",
        "res",
        "DOMNode",
        "res",
        "_b_",
        "key",
        "key",
        "i",
        "elts",
        "i",
        "res",
        "DOMNode",
        "elts",
        "i",
        "res",
        "err",
        "_b_",
        "_b_",
        "key",
        "key",
        "key",
        "_b_",
        "key",
        "key_to_int",
        "key_to_int",
        "DOMNode",
        "key_to_int",
        "res",
        "_b_",
        "key",
        "res",
        "key",
        "key",
        "attr",
        "attr",
        "_b_",
        "key",
        "DOMNode",
        "$B",
        "DOMNode",
        "i",
        "len",
        "i",
        "items",
        "DOMNode",
        "i",
        "i",
        "len",
        "i",
        "items",
        "DOMNode",
        "i",
        "$B",
        "items",
        "DOMNode",
        "other",
        "elt",
        "_b_",
        "other",
        "TagSum",
        "i",
        "other",
        "i",
        "elt",
        "other",
        "i",
        "other",
        "other",
        "other",
        "elt",
        "$txt",
        "_b_",
        "other",
        "DOMNode",
        "elt",
        "other",
        "_b_",
        "other",
        "items",
        "item",
        "DOMNode",
        "item",
        "err",
        "_b_",
        "$B",
        "other",
        "DOMNode",
        "DOMNode",
        "other",
        "_b_",
        "other",
        "_b_",
        "other",
        "TagSum",
        "res",
        "i",
        "other",
        "i",
        "res",
        "pos",
        "DOMNode",
        "res",
        "_b_",
        "other",
        "DOMNode",
        "other",
        "DOMNode",
        "other",
        "DOMNode",
        "DOMNode",
        "_b_",
        "DOMNode",
        "other",
        "TagSum",
        "DOMNode",
        "other",
        "res",
        "txt",
        "res",
        "DOMNode",
        "DOMNode",
        "proto",
        "proto",
        "name",
        "proto",
        "name",
        "proto_str",
        "proto_str",
        "name",
        "res",
        "$NodeTypes",
        "DOMNode",
        "attr",
        "value",
        "attr",
        "$B",
        "value",
        "DOMNode",
        "attr",
        "DOMNode",
        "attr",
        "value",
        "attr",
        "_b_",
        "value",
        "_b_",
        "attr",
        "value",
        "_b_",
        "_b_",
        "attr",
        "$B",
        "value",
        "DOMNode",
        "attr",
        "DOMNode",
        "attr",
        "value",
        "msg",
        "msg",
        "$B",
        "$B",
        "$B",
        "frame",
        "info",
        "info",
        "$B",
        "info",
        "$B",
        "info",
        "src",
        "parseInt",
        "info",
        "frame",
        "proto",
        "proto",
        "nb",
        "proto",
        "descriptors",
        "descriptors",
        "descriptors",
        "attr",
        "descriptors",
        "attr",
        "descriptors",
        "attr",
        "warn",
        "attr",
        "attr",
        "proto",
        "proto",
        "attr",
        "warn",
        "attr",
        "attr",
        "value",
        "_b_",
        "DOMNode",
        "key",
        "value",
        "key",
        "key",
        "value",
        "key",
        "SVGElement",
        "key",
        "value",
        "key",
        "value",
        "DOMNode",
        "$getPosition",
        "_b_",
        "DOMNode",
        "$getPosition",
        "_b_",
        "DOMNode",
        "$B",
        "arguments",
        "_b_",
        "$",
        "$",
        "$",
        "$",
        "f",
        "ev",
        "f",
        "$DOMEvent",
        "ev",
        "err",
        "err",
        "$B",
        "err",
        "$B",
        "err",
        "err",
        "msg",
        "err",
        "$B",
        "$B",
        "msg",
        "err",
        "msg",
        "$B",
        "$B",
        "err",
        "err1",
        "err",
        "func",
        "callback",
        "func",
        "callback",
        "func",
        "callback",
        "func",
        "options",
        "callback",
        "options",
        "options",
        "_b_",
        "callback",
        "_b_",
        "options",
        "options",
        "_b_",
        "callback",
        "func",
        "callback",
        "DOMNode",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "child",
        "res",
        "DOMNode",
        "child",
        "res",
        "DOMNode",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "DOMNode",
        "_b_",
        "DOMNode",
        "DOMNode",
        "DOMNode",
        "DOMNode",
        "events",
        "events",
        "evt_list",
        "evt",
        "evt",
        "DOMNode",
        "res",
        "func",
        "res",
        "DOMNode",
        "tagName",
        "tagName",
        "res",
        "tagName",
        "res",
        "res",
        "res",
        "res",
        "_b_",
        "tagName",
        "DOMNode",
        "res",
        "DOMNode",
        "evt_list",
        "evt",
        "callbacks",
        "evt",
        "callbacks",
        "DOMNode",
        "obj",
        "setTimeout",
        "obj",
        "node_list",
        "i",
        "node_list",
        "i",
        "res",
        "DOMNode",
        "node_list",
        "i",
        "res",
        "DOMNode",
        "i",
        "arguments",
        "i",
        "args",
        "arguments",
        "i",
        "$B",
        "args",
        "_b_",
        "_b_",
        "$ns",
        "items",
        "item",
        "$dict",
        "item",
        "item",
        "$dict",
        "obj",
        "_b_",
        "make_list",
        "obj",
        "$dict",
        "$dict",
        "obj",
        "_b_",
        "make_list",
        "obj",
        "$dict",
        "$dict",
        "obj",
        "_b_",
        "make_list",
        "obj",
        "$dict",
        "$dict",
        "obj",
        "_b_",
        "$dict",
        "id_res",
        "DOMNode",
        "id_res",
        "$dict",
        "obj",
        "_b_",
        "make_list",
        "obj",
        "$dict",
        "res",
        "DOMNode",
        "_b_",
        "ctx",
        "JSObject",
        "obj",
        "ctx",
        "DOMNode",
        "arguments",
        "DOMNode",
        "res",
        "res",
        "res",
        "_b_",
        "res",
        "DOMNode",
        "_b_",
        "DOMNode",
        "selector",
        "selector",
        "items",
        "items",
        "selector",
        "i",
        "items",
        "i",
        "items",
        "i",
        "rank",
        "i",
        "rank",
        "DOMNode",
        "other",
        "other",
        "other",
        "other",
        "elt",
        "elt",
        "elt",
        "elt",
        "DOMNode",
        "$OptionsClass",
        "DOMNode",
        "DOMNode",
        "_b_",
        "DOMNode",
        "DOMNode",
        "selector",
        "_b_",
        "make_list",
        "selector",
        "DOMNode",
        "selector",
        "_b_",
        "selector",
        "res",
        "_b_",
        "DOMNode",
        "res",
        "DOMNode",
        "$B",
        "DOMNode",
        "obj",
        "obj",
        "obj",
        "arguments",
        "obj",
        "start_pos",
        "end_pos",
        "end_pos",
        "end_pos",
        "start_pos",
        "obj",
        "start_pos",
        "end_pos",
        "DOMNode",
        "arg",
        "arg",
        "DOMNode",
        "value",
        "elt",
        "elt",
        "elt",
        "elt",
        "_b_",
        "value",
        "DOMNode",
        "style",
        "_b_",
        "style",
        "_b_",
        "_b_",
        "$B",
        "style",
        "_b_",
        "_b_",
        "style",
        "i",
        "items",
        "i",
        "items",
        "i",
        "items",
        "i",
        "key",
        "value",
        "value",
        "key",
        "_b_",
        "value",
        "_b_",
        "value",
        "value",
        "key",
        "value",
        "DOMNode",
        "value",
        "elt",
        "elt",
        "elt",
        "elt",
        "_b_",
        "value",
        "elt",
        "_b_",
        "value",
        "DOMNode",
        "value",
        "_b_",
        "value",
        "DOMNode",
        "DOMNode",
        "elt",
        "elt",
        "elt",
        "elt",
        "elt",
        "res",
        "res",
        "_b_",
        "res",
        "DOMNode",
        "DOMNode",
        "etype",
        "etype",
        "evObj",
        "etype",
        "evObj",
        "DOMNode",
        "_b_",
        "DOMNode",
        "_b_",
        "_b_",
        "arguments",
        "i",
        "events",
        "i",
        "events",
        "i",
        "callback",
        "_b_",
        "i",
        "arguments",
        "i",
        "arguments",
        "i",
        "callback",
        "func",
        "j",
        "events",
        "j",
        "events",
        "j",
        "callback",
        "found",
        "_b_",
        "j",
        "events",
        "j",
        "$B",
        "func",
        "events",
        "j",
        "events",
        "j",
        "callback",
        "events",
        "j",
        "flag",
        "flag",
        "_b_",
        "$B",
        "DOMNode",
        "_b_",
        "Query",
        "key",
        "key",
        "Query",
        "key",
        "key",
        "result",
        "_b_",
        "key",
        "result",
        "result",
        "result",
        "$B",
        "Query",
        "Query_iterator",
        "Query",
        "Query",
        "key",
        "_default",
        "key",
        "result",
        "_default",
        "_b_",
        "_default",
        "result",
        "Query",
        "key",
        "key",
        "result",
        "result",
        "Query",
        "key",
        "_default",
        "Query",
        "key",
        "err",
        "_default",
        "_b_",
        "_default",
        "Query",
        "DOMNode",
        "Query",
        "location",
        "i",
        "qs",
        "i",
        "qs",
        "i",
        "qs",
        "i",
        "pos",
        "qs",
        "i",
        "pos",
        "decodeURIComponent",
        "elts",
        "decodeURIComponent",
        "elts",
        "res",
        "key",
        "res",
        "key",
        "value",
        "res",
        "key",
        "res",
        "key",
        "value",
        "res",
        "_b_",
        "TagSum",
        "child",
        "child",
        "TagSum",
        "other",
        "$B",
        "other",
        "TagSum",
        "other",
        "_b_",
        "other",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "DOMNode",
        "other",
        "other",
        "TagSum",
        "other",
        "TagSum",
        "res",
        "DOMNode",
        "other",
        "res",
        "TagSum",
        "i",
        "i",
        "res",
        "i",
        "i",
        "res",
        "i",
        "res",
        "TagSum",
        "TagSum",
        "TagSum",
        "TagSum",
        "TagSum",
        "i",
        "i",
        "res",
        "i",
        "res",
        "TagSum",
        "TagSum",
        "$B",
        "TagSum",
        "$B",
        "TagSum",
        "JSObject",
        "_window",
        "win",
        "msg",
        "targetOrigin",
        "_b_",
        "msg",
        "_b_",
        "_b_",
        "msg",
        "items",
        "item",
        "temp",
        "item",
        "item",
        "msg",
        "temp",
        "_window",
        "msg",
        "targetOrigin",
        "$B",
        "DOMNode",
        "$B",
        "win",
        "__BRYTHON__",
        "$B",
        "$B",
        "$B",
        "eval",
        "bltns",
        "s",
        "strip_chars",
        "strip_chars",
        "s",
        "nstrip",
        "len",
        "_chars",
        "s",
        "len",
        "nstrip",
        "nstrip",
        "s",
        "len",
        "nstrip",
        "iter_name",
        "action",
        "parent_id",
        "action",
        "_clean",
        "iter_name",
        "_clean",
        "iter_name",
        "iter_name",
        "parent_id",
        "res",
        "parent_id",
        "res",
        "top_node",
        "node",
        "node",
        "node",
        "ctx_js",
        "node",
        "ctx_js",
        "node",
        "node",
        "node",
        "node",
        "node",
        "top_node",
        "ctx_js",
        "jscode_namespace",
        "iter_name",
        "parent_id",
        "ctx_js",
        "parent_id",
        "node",
        "is_except",
        "is_cond",
        "node",
        "is_except",
        "node",
        "node",
        "ctx",
        "ctx",
        "is_except",
        "is_cond",
        "is_cond",
        "ctx",
        "is_else",
        "ctx",
        "is_except",
        "ctx",
        "is_else",
        "is_cond",
        "ctx",
        "is_cond",
        "ctx_js",
        "$B",
        "ctx_js",
        "new_node",
        "node",
        "ctype",
        "in_ctx_manager",
        "node",
        "top_node",
        "ctx_js",
        "ctx_js",
        "ctx_js",
        "ctx_js",
        "ctx_js",
        "yield_node_id",
        "ctx_manager",
        "res",
        "ctx_manager",
        "res",
        "new_node",
        "res",
        "top_node",
        "new_node",
        "node",
        "node",
        "ctx_manager",
        "in_ctx_manager",
        "node",
        "node",
        "node",
        "node",
        "js",
        "h",
        "js",
        "h",
        "ctx_js",
        "js",
        "h",
        "ctx_js",
        "ctx_manager",
        "ctx_manager",
        "js",
        "h",
        "num",
        "js",
        "h",
        "num",
        "new_node",
        "js",
        "ctype",
        "ctype",
        "new_node",
        "ctype",
        "new_node",
        "node",
        "ctype",
        "in_ctx_manager",
        "node",
        "ctx_manager",
        "new_node",
        "ctx_manager",
        "new_node",
        "new_node",
        "ctype",
        "ctype",
        "new_node",
        "is_cond",
        "new_node",
        "is_except",
        "new_node",
        "ctype",
        "ctx",
        "new_node",
        "node",
        "new_node",
        "is_else",
        "new_node",
        "node",
        "new_node",
        "node",
        "new_node",
        "node",
        "node",
        "i",
        "len",
        "i",
        "make_node",
        "top_node",
        "node",
        "i",
        "nd",
        "new_node",
        "nd",
        "new_node",
        "$B",
        "data",
        "parent",
        "data",
        "parent",
        "parent",
        "child",
        "child",
        "child",
        "child",
        "child",
        "pos",
        "child",
        "child",
        "pos",
        "child",
        "child",
        "child",
        "pos",
        "$B",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "exit_node",
        "head",
        "$B",
        "in_loop",
        "res",
        "exit_node",
        "in_loop",
        "exit_node",
        "res",
        "$B",
        "res",
        "$B",
        "exit_node",
        "exit_node",
        "head",
        "in_loop",
        "res",
        "loop",
        "loop",
        "res",
        "res",
        "loop",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "res",
        "i",
        "len",
        "i",
        "res",
        "i",
        "exit_node",
        "head",
        "i",
        "res",
        "res",
        "keyword",
        "keyword",
        "i",
        "len",
        "i",
        "keyword",
        "i",
        "i",
        "keyword",
        "indent",
        "indent",
        "indent",
        "indent",
        "indent",
        "indent",
        "indent",
        "res",
        "pos",
        "res",
        "pos",
        "i",
        "len",
        "i",
        "res",
        "pos",
        "i",
        "indent",
        "i",
        "res",
        "pos",
        "indent",
        "res",
        "$B",
        "$B",
        "$B",
        "$B",
        "value",
        "$GeneratorReturn",
        "value",
        "node",
        "node",
        "parent",
        "parent",
        "ctx_manager",
        "parent",
        "ctx_manager",
        "parent",
        "parent",
        "parent",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "node",
        "pnode",
        "pnode",
        "tries",
        "pos",
        "pnode",
        "pnode",
        "pnode",
        "tries",
        "_b_",
        "$B",
        "node",
        "i",
        "node",
        "i",
        "node",
        "i",
        "node",
        "i",
        "remove_line_nums",
        "node",
        "i",
        "$B",
        "func_name",
        "blocks",
        "def_id",
        "def_node",
        "def_node",
        "pblock",
        "pblock",
        "pblock",
        "pblock",
        "def_node",
        "pblock",
        "def_node",
        "def_node",
        "$B",
        "def_node",
        "def_ctx",
        "$B",
        "def_ctx",
        "remove_line_nums",
        "def_node",
        "func_root",
        "func_root",
        "func_root",
        "func_root",
        "def_id",
        "func_root",
        "iter_id",
        "def_node",
        "i",
        "len",
        "i",
        "make_node",
        "func_root",
        "def_node",
        "i",
        "nd",
        "func_root",
        "nd",
        "$BRGeneratorDict",
        "blocks",
        "def_ctx",
        "def_id",
        "func_name",
        "func_root",
        "iter_id",
        "iter_id",
        "func_root",
        "src",
        "src",
        "raw_src",
        "def_ctx",
        "def_ctx",
        "raw_src",
        "obj",
        "def_node",
        "i",
        "func_root",
        "i",
        "funcs",
        "make_next",
        "obj",
        "i",
        "funcs",
        "yield_node_id",
        "yield_node_id",
        "exit_node",
        "$B",
        "root",
        "fnode",
        "jscode_namespace",
        "fnode",
        "$B",
        "js",
        "js",
        "js",
        "js",
        "yield_node_id",
        "fnode",
        "$B",
        "js",
        "exit_node",
        "exit_node",
        "exit_node",
        "start",
        "exit_node",
        "exit_node",
        "start",
        "exit_parent",
        "exit_parent",
        "start",
        "exit_parent",
        "start",
        "start",
        "exit_node",
        "exit_node",
        "start",
        "exit_parent",
        "exit_parent",
        "start",
        "exit_parent",
        "start",
        "start",
        "exit_parent",
        "i",
        "len",
        "i",
        "exit_parent",
        "i",
        "clone",
        "is_continue",
        "clone",
        "rest",
        "pos",
        "loop",
        "clone",
        "has_continue",
        "continue_pos",
        "pos",
        "rest",
        "pos",
        "clone",
        "clone",
        "break_num",
        "has_break",
        "has_break",
        "has_continue",
        "rest",
        "$B",
        "rest",
        "i",
        "len",
        "i",
        "rest_try",
        "rest",
        "i",
        "catch_test",
        "$B",
        "catch_test",
        "$B",
        "rest",
        "rest_try",
        "catch_test",
        "exit_parent",
        "exit_parent",
        "$B",
        "test",
        "test_node",
        "rest_try",
        "test_node",
        "catch_test",
        "rest",
        "test_node",
        "in_try",
        "exit_node",
        "tries",
        "i",
        "rest",
        "i",
        "fnode",
        "rest",
        "i",
        "i",
        "tries",
        "i",
        "tries",
        "i",
        "try_node",
        "i",
        "j",
        "rest",
        "j",
        "try_clone",
        "rest",
        "j",
        "try_clone",
        "try_node",
        "j",
        "try_node",
        "j",
        "try_node",
        "j",
        "try_node",
        "j",
        "in_loop",
        "exit_node",
        "loop",
        "loop",
        "parent",
        "parent",
        "try_node",
        "flag",
        "parent",
        "parent",
        "flag",
        "children",
        "cpos",
        "try_node",
        "j",
        "children",
        "cpos",
        "try_node",
        "j",
        "children",
        "children",
        "$B",
        "tree",
        "pos",
        "children",
        "tree",
        "children",
        "tree",
        "children",
        "child",
        "parent",
        "child",
        "parent",
        "children",
        "exit_node",
        "exit_parent",
        "exit_node",
        "root",
        "src",
        "src",
        "next_src",
        "next_src",
        "next_src",
        "next_src",
        "next_src",
        "next_src",
        "_b_",
        "_b_",
        "generator",
        "generator",
        "generator",
        "generator",
        "generator",
        "_b_",
        "_b_",
        "ValueError",
        "_b_",
        "_b_",
        "err",
        "err",
        "$B",
        "err",
        "$B",
        "res",
        "_b_",
        "_b_",
        "res",
        "$GeneratorReturn",
        "StopIteration",
        "res",
        "res",
        "res",
        "generator",
        "value",
        "_b_",
        "generator",
        "res",
        "_b_",
        "_b_",
        "err",
        "$B",
        "err",
        "_b_",
        "_b_",
        "_b_",
        "err",
        "generator",
        "value",
        "value",
        "generator",
        "generator",
        "value",
        "traceback",
        "exc",
        "_b_",
        "_b_",
        "_b_",
        "value",
        "value",
        "$B",
        "exc",
        "value",
        "value",
        "exc",
        "exc",
        "$B",
        "exc",
        "value",
        "traceback",
        "exc",
        "traceback",
        "$B",
        "value",
        "generator",
        "generator",
        "$B",
        "name",
        "blocks",
        "funcs",
        "$defaults",
        "name",
        "block_id",
        "blocks",
        "block_id",
        "name",
        "attr",
        "blocks",
        "block_id",
        "blocks",
        "name",
        "attr",
        "blocks",
        "block_id",
        "attr",
        "$B",
        "gfuncs",
        "funcs",
        "$defaults",
        "i",
        "funcs",
        "i",
        "gfuncs",
        "funcs",
        "i",
        "generator",
        "name",
        "arguments",
        "blocks",
        "name",
        "gfuncs",
        "gfuncs",
        "iter_id",
        "$defaults",
        "res",
        "$B",
        "generator",
        "__BRYTHON__",
        "$B",
        "$B",
        "mod",
        "data",
        "attr",
        "data",
        "mod",
        "attr",
        "data",
        "attr",
        "$B",
        "$B",
        "arguments",
        "_b_",
        "$",
        "options",
        "options",
        "_b_",
        "options",
        "options",
        "options",
        "callback",
        "$",
        "_b_",
        "$",
        "$B",
        "ev",
        "callback",
        "$B",
        "ev",
        "err",
        "$B",
        "err",
        "$",
        "$",
        "f",
        "options",
        "callback",
        "_b_",
        "$",
        "$B",
        "$B",
        "$",
        "$",
        "callback",
        "options",
        "callback",
        "_b_",
        "$",
        "_b_",
        "$",
        "i",
        "items",
        "i",
        "$B",
        "$B",
        "items",
        "i",
        "$",
        "callback",
        "options",
        "callback",
        "$B",
        "$",
        "_b_",
        "it",
        "$B",
        "elt",
        "$",
        "callback",
        "err",
        "_b_",
        "err",
        "_b_",
        "err",
        "err",
        "_b_",
        "err",
        "_b_",
        "$B",
        "$",
        "$",
        "callback",
        "err",
        "callback",
        "$B",
        "$B",
        "$B",
        "$B",
        "browser",
        "browser",
        "$B",
        "browser",
        "browser",
        "$B",
        "browser",
        "browser",
        "browser",
        "browser",
        "browser",
        "update",
        "browser",
        "message",
        "$B",
        "message",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "script_url",
        "$B",
        "script_url",
        "$B",
        "file_obj",
        "eval",
        "content",
        "ev",
        "$B",
        "$mouseCoords",
        "ev",
        "message",
        "default_value",
        "$B",
        "message",
        "default_value",
        "scripts",
        "script",
        "script",
        "script",
        "js_scripts",
        "script",
        "script",
        "script",
        "js_scripts",
        "mod",
        "$B",
        "$B",
        "mod",
        "mod",
        "$B",
        "mod",
        "$B",
        "mod",
        "mod",
        "$B",
        "arguments",
        "$B",
        "$B",
        "$",
        "$",
        "name",
        "name",
        "name",
        "name",
        "regex",
        "location",
        "results",
        "results",
        "decodeURIComponent",
        "results",
        "$B",
        "results",
        "modules",
        "$B",
        "$B",
        "$B",
        "tagName",
        "_b_",
        "tagName",
        "$B",
        "arguments",
        "$ns",
        "$ns",
        "args",
        "args",
        "_b_",
        "first",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "first",
        "first",
        "TagSum",
        "first",
        "i",
        "len",
        "i",
        "first",
        "i",
        "_b_",
        "first",
        "$B",
        "first",
        "_b_",
        "first",
        "items",
        "item",
        "$B",
        "item",
        "err",
        "$B",
        "err",
        "err",
        "err",
        "first",
        "arguments",
        "$B",
        "err",
        "_b_",
        "_b_",
        "$ns",
        "items",
        "i",
        "len",
        "i",
        "items",
        "i",
        "items",
        "i",
        "arg",
        "arg",
        "eval",
        "js",
        "value",
        "arg",
        "$B",
        "value",
        "value",
        "arg",
        "$B",
        "arg",
        "arg",
        "value",
        "err",
        "_b_",
        "arg",
        "$B",
        "$B",
        "cls",
        "cls",
        "cls",
        "cls",
        "$B",
        "elt",
        "res",
        "$B",
        "tagName",
        "res",
        "res",
        "cls",
        "res",
        "_b_",
        "res",
        "$B",
        "klass",
        "klass",
        "klass",
        "klass",
        "$B",
        "elt",
        "res",
        "klass",
        "$B",
        "$B",
        "klass",
        "res",
        "res",
        "klass",
        "klass",
        "res",
        "arguments",
        "res",
        "factory",
        "_b_",
        "$B",
        "obj",
        "tag",
        "tag",
        "_b_",
        "dicts",
        "tag",
        "makeTagDict",
        "tag",
        "klass",
        "makeFactory",
        "klass",
        "_b_",
        "obj",
        "tag",
        "klass",
        "klass",
        "tags",
        "tag",
        "obj",
        "tag",
        "maketag",
        "tag",
        "obj",
        "maketag",
        "obj",
        "attr",
        "attr",
        "obj",
        "__BRYTHON__",
        "modules",
        "browser",
        "modules",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "$B",
        "_b_",
        "$B",
        "_b_",
        "$B",
        "s",
        "$B",
        "s",
        "obj",
        "$B",
        "obj",
        "obj",
        "$B",
        "obj",
        "script_url",
        "$B",
        "script_url",
        "$B",
        "file_obj",
        "eval",
        "content",
        "$B",
        "$B",
        "src",
        "module_name",
        "module_name",
        "module_name",
        "$B",
        "$B",
        "src",
        "module_name",
        "module_name",
        "$B",
        "obj",
        "$B",
        "obj",
        "$B",
        "$B",
        "arraybuffers",
        "ab",
        "ab",
        "modules",
        "ab",
        "$B",
        "ab",
        "$B",
        "modules",
        "$B",
        "arguments",
        "$",
        "$B",
        "$B",
        "$B",
        "depth",
        "$B",
        "hookname",
        "hookname",
        "_b_",
        "hookname",
        "dot",
        "modname",
        "$B",
        "modname",
        "hook",
        "$B",
        "$B",
        "modname",
        "funcname",
        "err",
        "hookname",
        "_b_",
        "$B",
        "hook",
        "arguments",
        "$B",
        "i",
        "i",
        "$B",
        "i",
        "frame",
        "exc",
        "_b_",
        "exc",
        "exc",
        "$B",
        "exc",
        "_b_",
        "_b_",
        "_b_",
        "_b_",
        "exc_class",
        "exc_value",
        "traceback",
        "$B",
        "exc_value",
        "_b_",
        "$B",
        "$B",
        "obj",
        "value",
        "_b_",
        "_b_",
        "$B",
        "obj",
        "value",
        "$B",
        "value",
        "_b_",
        "$B",
        "obj",
        "value",
        "$B",
        "value",
        "_b_",
        "$B",
        "obj",
        "value",
        "$B",
        "value",
        "_b_",
        "_b_",
        "$B",
        "$B",
        "obj",
        "value",
        "_b_",
        "$B",
        "arguments",
        "$B",
        "$",
        "$B",
        "$B",
        "$B",
        "$",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "$B",
        "value",
        "$B",
        "value",
        "_b_",
        "$B",
        "value",
        "$B",
        "value",
        "_b_",
        "$B",
        "value",
        "$B",
        "value",
        "_b_",
        "$B",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "modules",
        "modules",
        "modules",
        "data",
        "$B",
        "_sys",
        "data",
        "modules",
        "data",
        "$B",
        "_sys",
        "data",
        "name",
        "module_obj",
        "module_obj",
        "$B",
        "module_obj",
        "name",
        "$B",
        "name",
        "module_obj",
        "attr",
        "module_obj",
        "module_obj",
        "attr",
        "$B",
        "attr",
        "module_obj",
        "attr",
        "name",
        "attr1",
        "name",
        "attr1",
        "attr",
        "modules",
        "load",
        "attr",
        "modules",
        "attr",
        "$B",
        "$B",
        "modules",
        "modules",
        "$B",
        "_b_",
        "$B",
        "attr",
        "_b_",
        "_b_",
        "attr",
        "_b_",
        "attr",
        "$B",
        "attr",
        "_b_",
        "attr",
        "value",
        "_b_",
        "attr",
        "value",
        "$B",
        "$B",
        "$B",
        "$B",
        "name",
        "_b_",
        "_b_",
        "name",
        "_b_",
        "$B",
        "_b_",
        "name",
        "key",
        "_b_",
        "name",
        "_b_",
        "name",
        "key",
        "value",
        "value",
        "value",
        "key",
        "value",
        "$B",
        "key",
        "value",
        "$B",
        "value",
        "$B",
        "value",
        "_b_",
        "name",
        "attr",
        "$B",
        "$B",
        "attr",
        "$B",
        "attr",
        "_b_",
        "$B",
        "$B",
        "value",
        "$B",
        "value",
        "$B",
        "$B",
        "_b_",
        "_b_",
        "value",
        "value",
        "$B",
        "$comps",
        "comp",
        "comp",
        "$B",
        "op",
        "op",
        "other",
        "_b_",
        "other",
        "$B",
        "other",
        "op",
        "op",
        "other",
        "op",
        "$B",
        "op",
        "other",
        "op",
        "$B",
        "$B",
        "__BRYTHON__",
        "__BRYTHON__",
        "docs",
        "$B",
        "$B",
        "mod_name",
        "_path",
        "from_stdlib",
        "$B",
        "$B",
        "from_stdlib",
        "meta_path",
        "$B",
        "path_ix",
        "meta_path",
        "path_ix",
        "meta_path",
        "i",
        "len",
        "i",
        "meta_path",
        "i",
        "$B",
        "_finder",
        "_b_",
        "find_spec",
        "_b_",
        "$B",
        "_finder",
        "_b_",
        "find_module",
        "_b_",
        "_loader",
        "find_module",
        "mod_name",
        "_path",
        "_loader",
        "_b_",
        "$B",
        "_loader",
        "$B",
        "load_module",
        "mod_name",
        "_sys_modules",
        "mod_name",
        "spec",
        "find_spec",
        "mod_name",
        "_path",
        "$B",
        "spec",
        "$B",
        "spec",
        "_sys_modules",
        "spec",
        "_loader",
        "_b_",
        "spec",
        "_b_",
        "_loader",
        "_b_",
        "mod_name",
        "exc",
        "mod_name",
        "exc",
        "$B",
        "spec",
        "_b_",
        "_b_",
        "mod_name",
        "_b_",
        "spec",
        "$B",
        "_loader",
        "_b_",
        "_loader",
        "_b_",
        "$B",
        "create_module",
        "$B",
        "create_module",
        "spec",
        "_b_",
        "mod_name",
        "$B",
        "$B",
        "mod_name",
        "_b_",
        "spec",
        "_b_",
        "spec",
        "mod_desc",
        "mod_desc",
        "mod_desc",
        "mod_desc",
        "_spec_name",
        "_loader",
        "_b_",
        "spec",
        "spec",
        "_b_",
        "spec",
        "$B",
        "locs",
        "locs",
        "_b_",
        "spec",
        "_b_",
        "spec",
        "$B",
        "_b_",
        "spec",
        "$B",
        "cached",
        "cached",
        "$B",
        "_loader",
        "$B",
        "locs",
        "_sys_modules",
        "_spec_name",
        "_b_",
        "mod_name",
        "_b_",
        "_loader",
        "_b_",
        "$B",
        "exec_module",
        "_b_",
        "_loader",
        "_spec_name",
        "_sys_modules",
        "_spec_name",
        "exec_module",
        "e",
        "_sys_modules",
        "_spec_name",
        "e",
        "_sys_modules",
        "_spec_name",
        "$B",
        "import_hooks",
        "__BRYTHON__",
        "$B",
        "$B",
        "$B",
        "$B",
        "coroutine",
        "coroutine",
        "coroutine",
        "coroutine",
        "$B",
        "coroutine",
        "$B",
        "func",
        "coroutine",
        "args",
        "func",
        "f",
        "func",
        "f",
        "$B",
        "obj",
        "obj",
        "$B",
        "obj",
        "obj",
        "coroutine",
        "coroutine",
        "obj",
        "obj",
        "obj",
        "obj",
        "__BRYTHON__"
    ],
    "literals": [
        "'undefined'",
        "\"function\"",
        "'undefined'",
        "'node'",
        "''",
        "''",
        "''",
        "''",
        "':'",
        "\"blob:\"",
        "'script'",
        "'/'",
        "'/'",
        "'/'",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "\"/\"",
        "'Lib'",
        "'libs'",
        "'Lib/site-packages'",
        "'__builtins__'",
        "'__builtins__'",
        "'debug'",
        "'stdout'",
        "'stderr'",
        "'__BRYTHON__ object has no attribute '",
        "\"C\"",
        "\"utf-8\"",
        "\"utf-8\"",
        "\"bizarre\"",
        "'function'",
        "\"\"",
        "'.'",
        "\"classmethod\"",
        "\"undefined\"",
        "\"Virtual File System: duplicate entry \"",
        "\"__main__\"",
        "\"(function() {\\n var $locals_\"",
        "\" = {}\\n\"",
        "\"\\n}())\"",
        "\"script\"",
        "\"script\"",
        "\"$locals_script\"",
        "'dev'",
        "\"3.8.8\"",
        "'final'",
        "\"2020-03-16 15:38:09.131626\"",
        "\"_aio\"",
        "\"_ajax\"",
        "\"_base64\"",
        "\"_binascii\"",
        "\"_io_classes\"",
        "\"_jsre\"",
        "\"_locale\"",
        "\"_multiprocessing\"",
        "\"_posixsubprocess\"",
        "\"_profile\"",
        "\"_sre_utils\"",
        "\"_string\"",
        "\"_strptime\"",
        "\"_svg\"",
        "\"_warnings\"",
        "\"_webcomponent\"",
        "\"_webworker\"",
        "\"_zlib_utils\"",
        "\"array\"",
        "\"builtins\"",
        "\"dis\"",
        "\"hashlib\"",
        "\"long_int\"",
        "\"marshal\"",
        "\"math\"",
        "\"math1\"",
        "\"math_kozh\"",
        "\"modulefinder\"",
        "\"posix\"",
        "\"random\"",
        "\"unicodedata\"",
        "'number'",
        "''",
        "''",
        "''",
        "\"**\"",
        "\"pow\"",
        "\"//\"",
        "\"floordiv\"",
        "\"<<\"",
        "\"lshift\"",
        "\">>\"",
        "\"rshift\"",
        "\"+\"",
        "\"add\"",
        "\"-\"",
        "\"sub\"",
        "\"*\"",
        "\"mul\"",
        "\"/\"",
        "\"truediv\"",
        "\"%\"",
        "\"mod\"",
        "\"@\"",
        "\"matmul\"",
        "\"//=\"",
        "\"ifloordiv\"",
        "\">>=\"",
        "\"irshift\"",
        "\"<<=\"",
        "\"ilshift\"",
        "\"**=\"",
        "\"ipow\"",
        "\"+=\"",
        "\"iadd\"",
        "\"-=\"",
        "\"isub\"",
        "\"*=\"",
        "\"imul\"",
        "\"/=\"",
        "\"itruediv\"",
        "\"%=\"",
        "\"imod\"",
        "\"&=\"",
        "\"iand\"",
        "\"|=\"",
        "\"ior\"",
        "\"^=\"",
        "\"ixor\"",
        "\"@=\"",
        "\"imatmul\"",
        "\"&\"",
        "\"and\"",
        "\"|\"",
        "\"or\"",
        "\"~\"",
        "\"invert\"",
        "\"^\"",
        "\"xor\"",
        "\"<\"",
        "\"lt\"",
        "\">\"",
        "\"gt\"",
        "\"<=\"",
        "\"le\"",
        "\">=\"",
        "\"ge\"",
        "\"==\"",
        "\"eq\"",
        "\"!=\"",
        "\"ne\"",
        "\"or\"",
        "\"or\"",
        "\"and\"",
        "\"and\"",
        "\"in\"",
        "\"in\"",
        "\"not\"",
        "\"not\"",
        "\"is\"",
        "\"is\"",
        "\"not_in\"",
        "\"not_in\"",
        "\"is_not\"",
        "\"is_not\"",
        "\"all\"",
        "\"subset\"",
        "\"all\"",
        "'True'",
        "'False'",
        "'None'",
        "'__debug__'",
        "'or'",
        "'and'",
        "'not'",
        "'in'",
        "'not_in'",
        "'<'",
        "'<='",
        "'>'",
        "'>='",
        "'!='",
        "'=='",
        "'is'",
        "'is_not'",
        "'|'",
        "'^'",
        "'&'",
        "'>>'",
        "'<<'",
        "'+'",
        "'-'",
        "'*'",
        "'@'",
        "'/'",
        "'//'",
        "'%'",
        "'unary_neg'",
        "'unary_inv'",
        "'unary_pos'",
        "'**'",
        "'$temp'",
        "'id'",
        "\" \"",
        "\"import sys\"",
        "\"\\n\"",
        "\"try:\"",
        "\"\\n\"",
        "\"    _y = next(_i)\"",
        "\"\\n\"",
        "\"except StopIteration as _e:\"",
        "\"\\n\"",
        "\"    _r = _e.value\"",
        "\"\\n\"",
        "\"else:\"",
        "\"\\n\"",
        "\"    while 1:\"",
        "\"\\n\"",
        "\"        try:\"",
        "\"\\n\"",
        "\"            _s = yield _y\"",
        "\"\\n\"",
        "\"        except GeneratorExit as _e:\"",
        "\"\\n\"",
        "\"            try:\"",
        "\"\\n\"",
        "\"                _m = _i.close\"",
        "\"\\n\"",
        "\"            except AttributeError:\"",
        "\"\\n\"",
        "\"                pass\"",
        "\"\\n\"",
        "\"            else:\"",
        "\"\\n\"",
        "\"                _m()\"",
        "\"\\n\"",
        "\"            raise _e\"",
        "\"\\n\"",
        "\"        except BaseException as _e:\"",
        "\"\\n\"",
        "\"            _x = sys.exc_info()\"",
        "\"\\n\"",
        "\"            try:\"",
        "\"\\n\"",
        "\"                _m = _i.throw\"",
        "\"\\n\"",
        "\"            except AttributeError:\"",
        "\"\\n\"",
        "\"                raise _e\"",
        "\"\\n\"",
        "\"            else:\"",
        "\"\\n\"",
        "\"                try:\"",
        "\"\\n\"",
        "\"                    _y = _m(*_x)\"",
        "\"\\n\"",
        "\"                except StopIteration as _e:\"",
        "\"\\n\"",
        "\"                    _r = _e.value\"",
        "\"\\n\"",
        "\"                    break\"",
        "\"\\n\"",
        "\"        else:\"",
        "\"\\n\"",
        "\"            try:\"",
        "\"\\n\"",
        "\"                if _s is None:\"",
        "\"\\n\"",
        "\"                    _y = next(_i)\"",
        "\"\\n\"",
        "\"                else:\"",
        "\"\\n\"",
        "\"                    _y = _i.send(_s)\"",
        "\"\\n\"",
        "\"            except StopIteration as _e:\"",
        "\"\\n\"",
        "\"                _r = _e.value\"",
        "\"\\n\"",
        "\"                break\"",
        "\"\\n\"",
        "'__i'",
        "'__y'",
        "'__r'",
        "'__e'",
        "'__s'",
        "'__m'",
        "\"\\\\b\"",
        "\"\\\\b\"",
        "'g'",
        "'assign'",
        "'node'",
        "\"\\n\"",
        "\"number\"",
        "\"Triple string end not found\"",
        "'invalid syntax : triple string end not found'",
        "'invalid syntax'",
        "\"token \"",
        "' ('",
        "')'",
        "'assert'",
        "'del'",
        "'import'",
        "'raise'",
        "'return'",
        "'invalid syntax - assign'",
        "\"expr\"",
        "\"op\"",
        "\"cannot assign to comparison\"",
        "\"cannot assign to operator\"",
        "\"<object 'Node'>\"",
        "''",
        "'module'",
        "' '",
        "'{'",
        "'\\n'",
        "'['",
        "'] '",
        "' '",
        "'}\\n'",
        "'module'",
        "''",
        "' '",
        "'{'",
        "'\\n'",
        "' '",
        "'}\\n'",
        "''",
        "'$yield_value'",
        "'var '",
        "' = '",
        "'None'",
        "'$yield_value'",
        "'module'",
        "\"generator\"",
        "'_'",
        "'\"$locals_'",
        "'\": '",
        "'$B.clone($locals_'",
        "')'",
        "'$locals_'",
        "'__builtins__'",
        "'{'",
        "'}'",
        "'_'",
        "'var '",
        "' = '",
        "'$locals_'",
        "'[\"'",
        "'\"] = $B.genfunc(\"'",
        "'\", '",
        "',['",
        "'],'",
        "')'",
        "'marker'",
        "'$B.$iter('",
        "')'",
        "'id'",
        "'marker'",
        "''",
        "'abstract_expr'",
        "'(abstract_expr '",
        "') '",
        "'list'",
        "'['",
        "']'",
        "'ctx_manager_alias'",
        "'annotation'",
        "\"def\"",
        "\"id\"",
        "\"annotated name '\"",
        "\"' can't be global\"",
        "'(annotation) '",
        "'assert'",
        "'(assert) '",
        "'list_or_tuple'",
        "'if'",
        "'throw AssertionError.$factory(\"AssertionError\")'",
        "'throw AssertionError.$factory(str.$factory('",
        "'))'",
        "\"expr\"",
        "\"lambda\"",
        "\"cannot assign to lambda\"",
        "'assign'",
        "'expression'",
        "\"parent of assign expr\"",
        "'expr'",
        "'call'",
        "\"cannot assign to function call \"",
        "'list_or_tuple'",
        "'expr'",
        "'list_or_tuple'",
        "'expr'",
        "'assign'",
        "'id'",
        "'id'",
        "\"cannot assign to keyword\"",
        "\"str\"",
        "\"int\"",
        "\"float\"",
        "\"complex\"",
        "\"cannot assign to literal\"",
        "\"unary\"",
        "\"cannot assign to operator\"",
        "'(assign) '",
        "'='",
        "'assign'",
        "'var $temp'",
        "'$temp'",
        "'expr'",
        "'list_or_tuple'",
        "'target_list'",
        "'id'",
        "'target_list'",
        "'list_or_tuple'",
        "\"expr\"",
        "\"int\"",
        "\"int\"",
        "'list'",
        "'tuple'",
        "'expr'",
        "'ValueError : too many values to unpack (expected '",
        "')'",
        "'ValueError : need more than '",
        "' to unpack'",
        "'void(0)'",
        "'$temp'",
        "'var '",
        "' = [], $pos = 0'",
        "'[$pos++] = '",
        "'['",
        "']'",
        "'$right'",
        "'$rlist'",
        "'var '",
        "' = '",
        "'$B.$getattr($B.$iter('",
        "'), \"__next__\");'",
        "'var '",
        "'=[], $pos=0;'",
        "'while(1){'",
        "'try{'",
        "'[$pos++] = '",
        "'()'",
        "'}catch(err){'",
        "'break'",
        "'}'",
        "'}'",
        "'packed'",
        "'expr'",
        "'packed'",
        "'if('",
        "'.length<'",
        "'){'",
        "'throw ValueError.$factory('",
        "'\"need more than \" +'",
        "'.length + \" value\" + ('",
        "'.length > 1 ?'",
        "' \"s\" : \"\") + \" to unpack\")}'",
        "'if('",
        "'.length>'",
        "'){'",
        "'throw ValueError.$factory('",
        "'\"too many values to unpack '",
        "'(expected '",
        "')\"'",
        "')'",
        "'}'",
        "'['",
        "']'",
        "'.slice('",
        "','",
        "'.length-'",
        "')'",
        "'['",
        "'.length-'",
        "']'",
        "'call'",
        "'{$nat:\"kw\",name:'",
        "',value:'",
        "'}'",
        "'expr'",
        "'attribute'",
        "'sub'",
        "''",
        "''",
        "'$temp'",
        "'expr'",
        "'call'",
        "'eval'",
        "'exec'",
        "'var '",
        "' = '",
        "';\\n'",
        "'expr'",
        "'sub'",
        "'var '",
        "' = '",
        "';\\n'",
        "'attribute'",
        "'setattr'",
        "'getattr'",
        "')'",
        "','",
        "');None;'",
        "'sub'",
        "'$temp'",
        "'id'",
        "'var '",
        "' = '",
        "'\\n'",
        "'list'",
        "'if(Array.isArray('",
        "') && !'",
        "'.__class__){'",
        "'$B.set_list_key('",
        "','",
        "''",
        "'null'",
        "','",
        "')'",
        "'$B.set_list_slice('",
        "','",
        "''",
        "'null'",
        "','",
        "''",
        "'null'",
        "','",
        "')'",
        "'$B.set_list_slice_step('",
        "','",
        "''",
        "'null'",
        "','",
        "''",
        "'null'",
        "','",
        "''",
        "'null'",
        "','",
        "')'",
        "'list'",
        "'\\n}else{'",
        "'$B.$setitem('",
        "','",
        "','",
        "')};None;'",
        "'setitem'",
        "'getitem'",
        "','",
        "')};None;'",
        "' = '",
        "'async'",
        "'(async)'",
        "'attribute'",
        "'getattr'",
        "'(attr) '",
        "'.'",
        "\"setattr\"",
        "\"id\"",
        "\"def\"",
        "\"class\"",
        "\".__class__ && \"",
        "\".__dict__ && !\"",
        "\".__class__.$has_setattr && ! \"",
        "\".$is_class ? _b_.dict.$setitem(\"",
        "\".__dict__, '\"",
        "\"', \"",
        "\") : $B.$setattr(\"",
        "', \"'",
        "'\", '",
        "'setattr'",
        "'$B.$setattr('",
        "',\"'",
        "'\")'",
        "'$B.$getattr('",
        "',\"'",
        "'\")'",
        "'augm_assign'",
        "'expr'",
        "'id'",
        "\"cannot assign to keyword\"",
        "'def'",
        "'generator'",
        "'str'",
        "'int'",
        "'float'",
        "'complex'",
        "\"cannot assign to literal\"",
        "'(augm assign) '",
        "'__'",
        "'__'",
        "'expr'",
        "'id'",
        "\"int\"",
        "'if('",
        "' === undefined){throw NameError.$factory(\"name \\''",
        "'\\' is not defined\")}'",
        "'expr'",
        "'int'",
        "'$temp'",
        "'var $temp,$left;'",
        "'js'",
        "'$temp'",
        "''",
        "'+='",
        "'-='",
        "'*='",
        "'/='",
        "'$local_'",
        "'_'",
        "'module'",
        "'def'",
        "'generator'",
        "'$locals'",
        "'class'",
        "'var $left = '",
        "\"id\"",
        "\"$locals_\"",
        "'_'",
        "'[\"'",
        "'\"]'",
        "'$locals[\"'",
        "'\"]'",
        "\" \"",
        "\" \"",
        "'$left'",
        "'if('",
        "'if(typeof $temp.valueOf() == \"number\" && '",
        "'.constructor === Number'",
        "' && Number.isSafeInteger('",
        "')){'",
        "'('",
        "'(typeof $temp == \"number\" && '",
        "'typeof '",
        "' == \"number\") ? '",
        "' : '",
        "' = new Number('",
        "'.valueOf()'",
        "')}'",
        "'+='",
        "'add'",
        "'-='",
        "'sub'",
        "'*='",
        "'mul'",
        "'sub'",
        "'+='",
        "'-='",
        "'*='",
        "'$B.augm_item_'",
        "'('",
        "','",
        "','",
        "');None;'",
        "''",
        "'else '",
        "'if(!hasattr('",
        "',\"'",
        "'\"))'",
        "'clone'",
        "\"else\"",
        "'clone'",
        "'$B.$local_search(\"'",
        "'\");'",
        "'$B.$getattr('",
        "',\"'",
        "'\")('",
        "')'",
        "''",
        "'await'",
        "\"list_or_tuple\"",
        "'await ($B.promise('",
        "'))'",
        "'node'",
        "'node'",
        "'module'",
        "' outside of a loop'",
        "'condition'",
        "'while'",
        "'has_'",
        "'for'",
        "'has_'",
        "'def'",
        "'generator'",
        "'class'",
        "' outside of a loop'",
        "'break'",
        "'break'",
        "'break '",
        "';$locals_'",
        "'_'",
        "'[\"$no_break'",
        "'\"] = false'",
        "'asyncfor'",
        "';break'",
        "';throw StopIteration.$factory('",
        "')'",
        "'call_arg'",
        "'id'",
        "'call_arg '",
        "'call'",
        "'class'",
        "'id'",
        "'(call) '",
        "'('",
        "')'",
        "\"attribute\"",
        "\"wait\"",
        "\"id\"",
        "\"time\"",
        "'call'",
        "'type'",
        "'wait'",
        "'call'",
        "'input'",
        "'type'",
        "'input'",
        "'classmethod'",
        "'classmethod.$factory('",
        "')'",
        "'$$super'",
        "'def'",
        "'generator'",
        "'class'",
        "'def'",
        "'generator'",
        "\"[$locals['\"",
        "\"']]\"",
        "'unary'",
        "'$B.$getattr('",
        "'+'",
        "',\"__pos__\")()'",
        "'-'",
        "',\"__neg__\")()'",
        "'~'",
        "',\"__invert__\")()'",
        "'star_arg'",
        "'*'",
        "'double_star_arg'",
        "'id'",
        "'s'",
        "'expr'",
        "'s'",
        "'kwarg'",
        "':'",
        "'list_or_tuple'",
        "'op'",
        "'s'",
        "'star_arg'",
        "'*'",
        "'double_star_arg'",
        "'s'",
        "'*'",
        "'_b_.list.$factory('",
        "')'",
        "'s'",
        "'['",
        "','",
        "']'",
        "'.concat('",
        "')'",
        "', '",
        "'{'",
        "', '",
        "'}'",
        "'{$nat:\"kw\",kw:['",
        "','",
        "', '",
        "']}'",
        "'{}'",
        "'{$nat:\"kw\",kw:'",
        "'}'",
        "''",
        "'.concat(['",
        "'])'",
        "','",
        "'.apply(null,'",
        "')'",
        "'('",
        "')'",
        "\"$B.$call(\"",
        "\")\"",
        "'id'",
        "\"complex\"",
        "\"bytes\"",
        "\"bytearray\"",
        "\"object\"",
        "\"memoryview\"",
        "\"int\"",
        "\"float\"",
        "\"str\"",
        "\"list\"",
        "\"tuple\"",
        "\"dict\"",
        "\"set\"",
        "\"frozenset\"",
        "\"range\"",
        "\"slice\"",
        "\"zip\"",
        "\"bool\"",
        "\"type\"",
        "\"classmethod\"",
        "\"staticmethod\"",
        "\"enumerate\"",
        "\"reversed\"",
        "\"property\"",
        "\"$$super\"",
        "\"zip\"",
        "\"map\"",
        "\"filter\"",
        "\".$factory\"",
        "'class'",
        "'id'",
        "'(class) '",
        "' '",
        "' args '",
        "'_'",
        "'_'",
        "'class'",
        "'def'",
        "'generator'",
        "'_'",
        "'\\n'",
        "' '",
        "'$locals_'",
        "'_'",
        "'var '",
        "' = {'",
        "'__annotations__: _b_.dict.$factory()}, '",
        "'$locals = '",
        "', '",
        "'$local_name = \"'",
        "'\"'",
        "'__builtins__'",
        "'$locals_'",
        "'_'",
        "' '",
        "'$locals.$name = \"'",
        "'\"'",
        "'$locals.$line_info = \"'",
        "','",
        "'\";'",
        "'var $top_frame = [$local_name, $locals,'",
        "'\"'",
        "'\", '",
        "']'",
        "'$locals.$f_trace = $B.enter_frame($top_frame);'",
        "'if($locals.$f_trace !== _b_.None){'",
        "'$locals.$f_trace = $B.trace_line()}'",
        "'if($locals.$f_trace !== _b_.None){'",
        "'$B.trace_return(_b_.None)}'",
        "'$B.leave_frame()'",
        "'return '",
        "';'",
        "')();'",
        "'$locals_'",
        "'.__name__'",
        "'$'",
        "'_'",
        "\".__module__ = \"",
        "';$locals_'",
        "'_'",
        "'[\"'",
        "'\"]'",
        "' = $B.$class_constructor(\"'",
        "'\", $'",
        "'_'",
        "'kwarg'",
        "',tuple.$factory(['",
        "','",
        "']),['",
        "'\"'",
        "'g'",
        "'\"'",
        "'\\\\\"'",
        "'\"'",
        "','",
        "']'",
        "'[\"'",
        "'\",'",
        "']'",
        "',['",
        "','",
        "']'",
        "',tuple.$factory([]),[],[]'",
        "')'",
        "''",
        "'.__doc__ = '",
        "'None'",
        "';'",
        "'module'",
        "'$locals[\"'",
        "'\"] = '",
        "\"None;\"",
        "'var $'",
        "'_'",
        "' = (function()'",
        "'comp_if'",
        "'(comp if) '",
        "'comprehension'",
        "'(comprehension) '",
        "'comp_for'",
        "'in'",
        "'(comp for) '",
        "'comp_iterable'",
        "'(comp iter) '",
        "'condition'",
        "'while'",
        "' '",
        "\"while\"",
        "'$locals[\"$no_break'",
        "'\"] = true'",
        "\"return\"",
        "'$locals.$line_info = \"'",
        "','",
        "'\";if($locals.$f_trace !== _b_.None){'",
        "'$B.trace_line()};None;'",
        "'elif'",
        "'else if'",
        "'($B.$bool('",
        "'while'",
        "'$locals[\"$no_break'",
        "'\"] && '",
        "'else if'",
        "','",
        "'($B.set_line(\"'",
        "'\")) && '",
        "'))'",
        "'))'",
        "'{'",
        "'}'",
        "''",
        "'continue'",
        "'continue'",
        "'(continue)'",
        "'continue'",
        "'continue'",
        "'(debugger)'",
        "'debugger'",
        "'decorator'",
        "'(decorator) '",
        "'decorator expects function'",
        "'node_js'",
        "'decorator'",
        "'$id'",
        "'def'",
        "'$dec'",
        "''",
        "'$locals[\"'",
        "'$locals_'",
        "'[\"'",
        "'\"]'",
        "' = '",
        "'$B.$call('",
        "')('",
        "')'",
        "';'",
        "'var '",
        "' = '",
        "';'",
        "''",
        "'decorator_expression'",
        "'(decorator expression)'",
        "\"_b_.getattr(\"",
        "\", '\"",
        "\"')\"",
        "'def'",
        "\"class\"",
        "'class'",
        "'def'",
        "'generator'",
        "'def'",
        "'parent'",
        "'_'",
        "'_'",
        "'_'",
        "'def '",
        "'('",
        "')'",
        "'lambda_'",
        "\"def\"",
        "'\"return\":'",
        "'var '",
        "'end_positional'",
        "\"/\"",
        "'\"/\"'",
        "'func_arg_id'",
        "':null'",
        "'\"'",
        "'\"'",
        "':'",
        "'\"'",
        "'\"'",
        "':'",
        "'func_star_arg'",
        "'*'",
        "'**'",
        "': '",
        "'{'",
        "\", \"",
        "'}'",
        "'generator'",
        "'__builtins__'",
        "'$locals_'",
        "'_'",
        "'$locals_'",
        "'\\n'",
        "' '",
        "'var '",
        "' = {},'",
        "'$local_name = \"'",
        "'\",'",
        "'$locals = '",
        "';'",
        "'$locals.$line_info = \"'",
        "','",
        "'\"'",
        "'var $top_frame = [$local_name, $locals,'",
        "'\"'",
        "'\", '",
        "', '",
        "']'",
        "'$locals.$f_trace = $B.enter_frame($top_frame)'",
        "'var $stack_length = $B.frames_stack.length;'",
        "\"var $stack = \"",
        "\"$B.frames_stack.slice()\"",
        "\"var $nb_defaults = Object.keys($defaults).length,\"",
        "\"    $parent = $locals.$parent\"",
        "'def'",
        "' = $locals'",
        "'var $ns'",
        "' = $B.args(\"'",
        "'\", '",
        "', {'",
        "', '",
        "'}, '",
        "'['",
        "', '",
        "'], arguments, $defaults, '",
        "', '",
        "');'",
        "'generator'",
        "'for(var $var in $ns){$locals[$var] = $ns[$var]};'",
        "'var $len = arguments.length;'",
        "'if($len > 0 && arguments[$len - 1].$nat !== undefined)'",
        "'else'",
        "'if($len == '",
        "')'",
        "'generator'",
        "'//'",
        "'$locals[\"'",
        "'\"] = '",
        "' = $locals = '",
        "'else if($len > '",
        "'){$B.wrong_nb_args(\"'",
        "'\", $len, '",
        "', ['",
        "'])}'",
        "'else if($len + $nb_defaults < '",
        "'){$B.wrong_nb_args(\"'",
        "'\", $len, '",
        "', ['",
        "'])}'",
        "\"else\"",
        "'generator'",
        "'$locals[\"'",
        "'\"] = '",
        "' = $locals = '",
        "\"var defparams = [\"",
        "\"]\"",
        "\"for(var i=$len; i < defparams.length\"",
        "\";i++){$locals[defparams[i]] = $defaults[defparams[i]]}\"",
        "'$locals.__annotations__ = _b_.dict.$factory()'",
        "'$top_frame[1] = $locals'",
        "'$locals.$parent = $parent'",
        "\"class\"",
        "\"$locals_\"",
        "'_'",
        "'[\"'",
        "'\"]'",
        "\"__class__\"",
        "\"$locals.__class__ = \"",
        "'$B.js_this = this;'",
        "\"generator\"",
        "\"// suspension\"",
        "''",
        "', '",
        "''",
        "'return'",
        "'generator'",
        "'if($locals.$f_trace !== _b_.None){\\n'",
        "' '",
        "'$B.trace_return(_b_.None)\\n'",
        "' '",
        "'}\\n'",
        "' '",
        "'$B.leave_frame'",
        "'$exec'",
        "'_exec'",
        "'();return _b_.None'",
        "'.$is_func = true'",
        "'.$infos = {'",
        "\"$$\"",
        "'lambda_'",
        "\"<lambda>\"",
        "'    __name__:\"'",
        "'\",'",
        "'.'",
        "'    __qualname__:\"'",
        "'\",'",
        "\"generator\"",
        "'$defaults.'",
        "'    __defaults__ : '",
        "'$B.fast_tuple(['",
        "', '",
        "']),'",
        "'    __defaults__ : '",
        "'_b_.None,'",
        "'$defaults.'",
        "'    __kwdefaults__ : '",
        "'$B.fast_tuple(['",
        "', '",
        "']),'",
        "'    __kwdefaults__ : '",
        "'_b_.None,'",
        "'    __annotations__: {'",
        "','",
        "'},'",
        "'    __dict__: _b_.dict.__new__(_b_.dict),'",
        "'    __doc__: '",
        "'None'",
        "','",
        "'    __module__ : \"'",
        "'\",'",
        "'\"'",
        "'\"'",
        "'\"'",
        "'\"'",
        "'___%%%-CODE-%%%___'",
        "'\\n'",
        "' '",
        "'    __code__:{'",
        "'    co_argcount:'",
        "','",
        "' '",
        "'co_filename:$locals_'",
        "'_'",
        "'[\"__file__\"]'",
        "'co_firstlineno:'",
        "'co_flags:'",
        "'co_freevars: ['",
        "']'",
        "'co_kwonlyargcount:'",
        "'co_name: \"'",
        "'\"'",
        "'co_nlocals: '",
        "'co_posonlyargcount: '",
        "'co_varnames: $B.fast_tuple(['",
        "', '",
        "']'",
        "')}\\n'",
        "' '",
        "'};'",
        "'None;'",
        "'{'",
        "', '",
        "'}'",
        "\"def\"",
        "'func_end:'",
        "'return '",
        "'return $B.make_async('",
        "')'",
        "'}'",
        "\" = \"",
        "'$'",
        "'('",
        "')'",
        "\".$set_defaults = function(value){return \"",
        "\" = \"",
        "\"$\"",
        "\"(value)}\"",
        "'def'",
        "'try'",
        "'catch(err)'",
        "'err.$stack = $stack'",
        "'$B.set_exc(err)'",
        "'if($locals.$f_trace !== _b_.None){'",
        "'$locals.$f_trace = $B.trace_exception()}'",
        "'$B.leave_frame();throw err'",
        "'var '",
        "\"var \"",
        "'$'",
        "' = function($defaults){'",
        "'async '",
        "''",
        "'function '",
        "'('",
        "')'",
        "'del'",
        "'del '",
        "'list_or_tuple'",
        "';'",
        "'expr'",
        "'list_or_tuple'",
        "'id'",
        "\"def\"",
        "\"generator\"",
        "\"__builtins__\"",
        "'$B.$delete(\"'",
        "'\"'",
        "', \"global\"'",
        "''",
        "');'",
        "'list_or_tuple'",
        "'delete '",
        "';'",
        "'sub'",
        "'delitem'",
        "'getitem'",
        "'op'",
        "\"cannot delete operator\"",
        "'call'",
        "\"cannot delete function call\"",
        "'attribute'",
        "'delattr('",
        "',\"'",
        "'\")'",
        "\"cannot delete \"",
        "'dict_or_set'",
        "'dict_or_set'",
        "'id'",
        "'dict'",
        "'(dict) {'",
        "'}'",
        "'set'",
        "'(set) {'",
        "'}'",
        "'(dict_or_set) {'",
        "'}'",
        "\"expr\"",
        "\"\"",
        "\"expr\"",
        "\"_b_.list.$factory(_b_.dict.items(\"",
        "\"))\"",
        "\"[[\"",
        "\",\"",
        "\"]]\"",
        "\".concat(\"",
        "\")\"",
        "\"\"",
        "\"_b_.list.$factory(\"",
        "\")\"",
        "\"[\"",
        "\"]\"",
        "\".concat(\"",
        "\")\"",
        "'dict'",
        "'_b_.dict.$factory('",
        "')'",
        "'['",
        "','",
        "']'",
        "'_b_.dict.$factory(['",
        "','",
        "'])'",
        "'set_comp'",
        "'_b_.set.$factory('",
        "')'",
        "'dict_comp'",
        "'_b_.dict.$factory('",
        "')'",
        "'set.$factory('",
        "')'",
        "'set.$factory(['",
        "'])'",
        "'double_star_arg'",
        "'**'",
        "'{$nat:\"pdict\",arg:'",
        "'}'",
        "'ellipsis'",
        "'ellipsis'",
        "'$B.builtins[\"Ellipsis\"]'",
        "\"end_positional\"",
        "\"/\"",
        "'except'",
        "'id'",
        "'(except) '",
        "\"void(0)\"",
        "\"return\"",
        "\"$B.del_exc()\"",
        "'else'",
        "'Exception'",
        "'else if(1)'",
        "''",
        "'($locals.$line_info = \"'",
        "','",
        "'\") && '",
        "'else if('",
        "'$B.is_exc('",
        "',['",
        "','",
        "']))'",
        "'expr'",
        "','",
        "'(expr '",
        "') '",
        "'list'",
        "'['",
        "']'",
        "'_b_.tuple.$factory(['",
        "'])'",
        "\"await ($B.promise(\"",
        "\"))\"",
        "\"__builtins__\"",
        "\"($locals_\"",
        "'_'",
        "'[\"'",
        "'\"] = '",
        "')'",
        "'expr_not'",
        "'(expr_not)'",
        "'float'",
        "'float '",
        "'(new Number('",
        "'))'",
        "'float.$factory('",
        "')'",
        "'for'",
        "'(for) '",
        "'id'",
        "'$locals_'",
        "'_'",
        "'\\n'",
        "' '",
        "'id'",
        "'expr'",
        "'expr'",
        "'call'",
        "'id'",
        "'range'",
        "'generator'",
        "'[\"$no_break'",
        "'\"] = true'",
        "\"range\"",
        "\"__builtins__\"",
        "'if(1)'",
        "'if('",
        "' === $B.builtins.range)'",
        "\"int\"",
        "\"$i\"",
        "\"for (var \"",
        "\" = 0; \"",
        "\" < \"",
        "\"; \"",
        "\"++)\"",
        "\" = \"",
        "'var $stop_'",
        "' = $B.int_or_bool('",
        "'),'",
        "'        $next'",
        "\" = \"",
        "','",
        "'        $safe'",
        "' = typeof $next'",
        "' == \"number\" && typeof '",
        "'$stop_'",
        "' == \"number\";'",
        "'    while(true)'",
        "'if($safe'",
        "' && $next'",
        "'>= $stop_'",
        "'){break}'",
        "'else if(!$safe'",
        "' && $B.ge($next'",
        "', $stop_'",
        "')){break}'",
        "' = $next'",
        "'if($safe'",
        "'){$next'",
        "' += 1}'",
        "'else{$next'",
        "' = $B.add($next'",
        "',1)}'",
        "\"return\"",
        "'$locals.$line_info = \"'",
        "','",
        "'\";if($locals.$f_trace !== _b_.None){'",
        "'$B.trace_line()};None;'",
        "'module'",
        "'module'",
        "'function $f'",
        "'('",
        "'$no_break'",
        "')'",
        "'return $no_break'",
        "'var $res'",
        "' = $f'",
        "'();'",
        "'var $no_break'",
        "' = $res'",
        "\"else\"",
        "'$iter'",
        "'var '",
        "' = '",
        "';'",
        "'$locals[\"$next'",
        "'\"]'",
        "' = $B.$getattr($B.$iter('",
        "'),\"__next__\")'",
        "'[\"$no_break'",
        "'\"] = true;'",
        "'while('",
        "'[\"$no_break'",
        "'\"])'",
        "'while(true)'",
        "'for'",
        "'generator'",
        "\"try\"",
        "'left'",
        "'tuple'",
        "'$locals[\"$next'",
        "'\"]()'",
        "'catch($err){if($B.is_exc($err, [StopIteration]))'",
        "'{break;}else{throw($err)}}'",
        "\"return\"",
        "'$locals.$line_info = \"'",
        "','",
        "'\";if($locals.$f_trace !== _b_.None){'",
        "'$B.trace_line()};None;'",
        "'id'",
        "'$locals_'",
        "'_'",
        "'\\n'",
        "' '",
        "'$iter'",
        "'$type'",
        "'$running'",
        "'$anext'",
        "'$target'",
        "'var '",
        "' = '",
        "'var '",
        "' = _b_.type.$factory( '",
        "')'",
        "' = $B.$call($B.$getattr('",
        "', \"__aiter__\"))('",
        "')'",
        "'var '",
        "' = true'",
        "'var '",
        "' = $B.$call($B.$getattr('",
        "', \"__anext__\"))'",
        "'while('",
        "')'",
        "'try'",
        "' = await ($B.promise('",
        "'('",
        "')))'",
        "\"left\"",
        "'await ($B.promise('",
        "'('",
        "')))'",
        "'catch(err)'",
        "'if(err.__class__ === _b_.StopAsyncIteration)'",
        "'{'",
        "' = false; continue}else{throw err}'",
        "'for ('",
        "' in '",
        "')'",
        "'from'",
        "''",
        "'module'",
        "'*'",
        "'(from) '",
        "' (import) '",
        "' '",
        "\"$exec\"",
        "\".\"",
        "\".\"",
        "''",
        "'.'",
        "'.'",
        "'throw SystemError.$factory(\"Parent module \\'\\' '",
        "'not loaded, cannot perform relative import\")'",
        "'None'",
        "'package is None !'",
        "'.'",
        "''",
        "'var module = $B.$import(\"'",
        "'\",[\"'",
        "'\",\"'",
        "'\"], {'",
        "''",
        "'\"'",
        "'\": \"'",
        "'\"'",
        "','",
        "'}, {}, true);'",
        "'*'",
        "'\\n'",
        "'$B.import_all($locals, module);'",
        "'.'",
        "'\\n'",
        "'$locals[\"'",
        "'\"] = $B.$getattr($B.imported[\"'",
        "'\"], \"'",
        "'\");'",
        "'\\n'",
        "'None;'",
        "''",
        "'func_args'",
        "'id'",
        "'func args '",
        "'func_arg_id'",
        "\"duplicate argument '\"",
        "\"' in function definition\"",
        "'def'",
        "'='",
        "'func arg id '",
        "'='",
        "'func_star_arg'",
        "'*'",
        "'**'",
        "'(func star arg '",
        "') '",
        "\"duplicate argument '\"",
        "\"' in function definition\"",
        "'def'",
        "'*'",
        "'\"'",
        "'\"'",
        "'\"'",
        "'\"'",
        "'global'",
        "'id'",
        "'global '",
        "\"annotated name '\"",
        "\"' can't be global\"",
        "''",
        "'id'",
        "\"def\"",
        "\"generator\"",
        "'call_arg'",
        "'ctx_manager_alias'",
        "'list_or_tuple'",
        "'dict_or_set'",
        "'call_arg'",
        "'def'",
        "'lambda'",
        "'lambda'",
        "'target_list'",
        "'expr'",
        "'target_list'",
        "'def'",
        "'generator'",
        "'list_or_tuple'",
        "'expr'",
        "'comp_if'",
        "'global'",
        "'(id) '",
        "':'",
        "''",
        "\"bound in\"",
        "\"bound in child\"",
        "'generator'",
        "'class'",
        "'$B.$search(\"'",
        "'\")'",
        "'def'",
        "'generator'",
        "'$B.$local_search(\"'",
        "'\")'",
        "'$B.$search(\"'",
        "'\")'",
        "'__BRYTHON__'",
        "'$B'",
        "'\"'",
        "'\"'",
        "\"this\"",
        "'\"'",
        "'\"'",
        "\"[\"",
        "\", \"",
        "\"]\"",
        "'\"'",
        "'\"'",
        "\"search ids\"",
        "\"binding\"",
        "\"$locals_\"",
        "\"_\"",
        "'[\"'",
        "'\"]'",
        "\"$locals_\"",
        "\"_\"",
        "'[\"'",
        "'\"]'",
        "'$locals_'",
        "'_'",
        "\"in globals of\"",
        "\"bound before in gs\"",
        "'[\"'",
        "'\"]'",
        "\"use global search\"",
        "'[\"'",
        "'\"]'",
        "'$B.$global_search(\"'",
        "'\", '",
        "')'",
        "\"scope\"",
        "\"innermost\"",
        "\"bound_before\"",
        "\"found\"",
        "'def'",
        "\"found in\"",
        "\"scope\"",
        "\"no binding\"",
        "\"found\"",
        "'$'",
        "'def'",
        "'generator'",
        "'class'",
        "'$B.$local_search(\"'",
        "'\")'",
        "\"error\"",
        "'class'",
        "'$locals_'",
        "'_'",
        "'$locals_'",
        "'_'",
        "'[\"'",
        "'\"]'",
        "'[\"'",
        "'\"] !== undefined ? '",
        "'[\"'",
        "'\"] : '",
        "\"(\"",
        "'[\"'",
        "'\"])'",
        "'$locals_'",
        "'_'",
        "\"module level\"",
        "'__builtins__'",
        "'('",
        "'[\"'",
        "'\"] || '",
        "')'",
        "'__builtins__'",
        "'$B.builtins.'",
        "\"name found at module level\"",
        "'[\"'",
        "'\"]'",
        "'$B.$search(\"'",
        "'\")'",
        "\"boudn before ?\"",
        "'[\"'",
        "'\"]'",
        "\"use check def\"",
        "'$B.$check_def(\"'",
        "'\",'",
        "'[\"'",
        "'\"])'",
        "\"scope is innermost\"",
        "'[\"'",
        "'\"]'",
        "'$locals[\"'",
        "'\"]'",
        "'$B.$check_def_local(\"'",
        "'\",$locals[\"'",
        "'\"])'",
        "'$locals[\"'",
        "'\"]'",
        "'generator'",
        "\"$B.frames_stack[$B.frames_stack.length-1-\"",
        "\"][1]\"",
        "'$B.$check_def_free1(\"'",
        "'\", \"'",
        "\"_\"",
        "'\")'",
        "'$B.$check_def_free(\"'",
        "'\",'",
        "'[\"'",
        "'\"])'",
        "'[\"'",
        "'\"]'",
        "''",
        "'$B.$global_search(\"'",
        "'\", '",
        "')'",
        "'imaginary'",
        "'imaginary '",
        "'$B.make_complex(0,'",
        "')'",
        "'import'",
        "'id'",
        "'import '",
        "'.'",
        "'{}'",
        "'{\"'",
        "'\" : \"'",
        "'\"}'",
        "'$locals_'",
        "'_'",
        "\".\"",
        "\".\"",
        "'$B.$import(\"'",
        "'\", [],'",
        "','",
        "', true);'",
        "''",
        "'None;'",
        "'imported module'",
        "' (imported module) '",
        "'\"'",
        "'\"'",
        "'int'",
        "'int '",
        "'$B.long_int.$factory(\"'",
        "'\", '",
        "')'",
        "'kwarg'",
        "'keyword argument repeated'",
        "'kwarg '",
        "'='",
        "'$$'",
        "'{$nat:\"kw\",name:\"'",
        "'\",'",
        "'value:'",
        "'}'",
        "'lambda'",
        "'(lambda) '",
        "' '",
        "' '",
        "' '",
        "'lambda_'",
        "'_'",
        "'def '",
        "'('",
        "'):\\n'",
        "'    return '",
        "'lambda'",
        "'_'",
        "'(function($locals_'",
        "'){\\n'",
        "'\\nreturn $locals.'",
        "'\\n})({})'",
        "'list_or_tuple'",
        "'id'",
        "'list'",
        "'(list) ['",
        "']'",
        "'list_comp'",
        "'gen_expr'",
        "'('",
        "') ['",
        "'-'",
        "']'",
        "'(tuple) ('",
        "')'",
        "'list_comp'",
        "'gen_expr'",
        "'dict_or_set_comp'",
        "' '",
        "'id'",
        "'expr'",
        "\"id\"",
        "'expr'",
        "\"packed\"",
        "'id'",
        "'list_or_tuple'",
        "\"expr\"",
        "'list_or_tuple'",
        "\"expr\"",
        "\"expr\"",
        "\"packed\"",
        "\"call\"",
        "\"packed\"",
        "\"\"",
        "\"_b_.list.$factory(\"",
        "\")\"",
        "\"[\"",
        "\"]\"",
        "\".concat(\"",
        "\")\"",
        "'_'",
        "'list'",
        "'$B.$list('",
        "')'",
        "'$B.$list(['",
        "'])'",
        "'list_comp'",
        "'gen_expr'",
        "'dict_or_set_comp'",
        "'\"'",
        "\"g\"",
        "' '",
        "\" \"",
        "'\\n'",
        "''",
        "' '",
        "'\\\\\\\\'",
        "'\\\\\"'",
        "'\"'",
        "'\"'",
        "'['",
        "','",
        "']'",
        "'list_comp'",
        "'lc'",
        "','",
        "'return $locals_lc'",
        "'[\"x'",
        "'\"]'",
        "'function($locals_'",
        "'){'",
        "'})({$list_comp: true})'",
        "'async '",
        "'('",
        "'dict_or_set_comp'",
        "'tuple'",
        "'$B.fast_tuple('",
        "')'",
        "'$B.fast_tuple(['",
        "'])'",
        "'node'",
        "'module'",
        "'def'",
        "'class'",
        "'generator'",
        "'node '",
        "\"\"",
        "\"def\"",
        "\"expr\"",
        "\"id\"",
        "\"\"",
        "\"$locals.__annotations__ = _b_.dict.$factory();\"",
        "\"_b_.dict.$setitem($locals.__annotations__, '\"",
        "\"', \"",
        "\");\"",
        "\"def\"",
        "\";\"",
        "\"\"",
        "\"def\"",
        "\"assign\"",
        "\"$locals.__annotations__ = _b_.dict.$factory();\"",
        "\"var $value = \"",
        "\";\"",
        "\"$value\"",
        "\"id\"",
        "\"_b_.dict.$setitem($locals.__annotations__, '\"",
        "\"', \"",
        "\");\"",
        "\";\"",
        "';'",
        "'node_js'",
        "'js '",
        "'nonlocal'",
        "'id'",
        "\"nonlocal declaration not allowed at module level\"",
        "'nonlocal '",
        "\"arg\"",
        "\"name '\"",
        "\"' is parameter and nonlocal\"",
        "\"no binding for nonlocal '\"",
        "\"' found\"",
        "'nonlocal error, context '",
        "\"no binding for nonlocal '\"",
        "\"' found\"",
        "''",
        "'not'",
        "'not ('",
        "')'",
        "'!$B.$bool('",
        "')'",
        "'op'",
        "\"expr\"",
        "'int'",
        "'float'",
        "'str'",
        "\"id\"",
        "'(op '",
        "') ['",
        "']'",
        "'=='",
        "'eq'",
        "'!='",
        "'ne'",
        "'>='",
        "'ge'",
        "'<='",
        "'le'",
        "'<'",
        "'lt'",
        "'>'",
        "'gt'",
        "'expr'",
        "'expr'",
        "'int'",
        "'int'",
        "'$B.$getattr('",
        "',\"__'",
        "'__\")('",
        "')'",
        "'str'",
        "\"==\"",
        "\"false\"",
        "\"!=\"",
        "\"true\"",
        "'$B.$TypeError(\"unorderable types: '",
        "\" int() \"",
        "' str()\")'",
        "'id'",
        "'(typeof '",
        "' == \"number\" ? '",
        "' : $B.rich_comp(\"__'",
        "'__\",'",
        "','",
        "'))'",
        "'str'",
        "'str'",
        "'int'",
        "\"==\"",
        "\"false\"",
        "\"!=\"",
        "\"true\"",
        "'$B.$TypeError(\"unorderable types: '",
        "' str() '",
        "' int()\")'",
        "'id'",
        "'(typeof '",
        "' == \"string\" ? '",
        "' : $B.rich_comp(\"__'",
        "'__\",'",
        "','",
        "'))'",
        "'id'",
        "'id'",
        "'typeof '",
        "'!=\"object\" && typeof '",
        "'!=\"function\" && typeof '",
        "' == typeof '",
        "' ? '",
        "' : $B.rich_comp(\"__'",
        "'__\",'",
        "','",
        "')'",
        "'and'",
        "'(function(){var '",
        "' = '",
        "';return $B.$test_expr($B.$test_item('",
        "') && $B.$test_item('",
        "'))})()'",
        "'$B.$test_expr($B.$test_item('",
        "')&&'",
        "'$B.$test_item('",
        "'))'",
        "'or'",
        "'$B.$test_expr($B.$test_item('",
        "')||'",
        "'$B.$test_item('",
        "'))'",
        "'in'",
        "'$B.$is_member('",
        "')'",
        "'not_in'",
        "'!$B.$is_member('",
        "')'",
        "'unary_neg'",
        "'unary_pos'",
        "'unary_inv'",
        "'unary_neg'",
        "'-'",
        "'__neg__'",
        "'unary_pos'",
        "'+'",
        "'__pos__'",
        "'~'",
        "'__invert__'",
        "\"expr\"",
        "'int'",
        "'$B.$getattr('",
        "', \"'",
        "'\")()'",
        "'float'",
        "'float.$factory('",
        "')'",
        "'imaginary'",
        "'$B.make_complex(0,'",
        "')'",
        "'$B.$getattr('",
        "',\"'",
        "'\")()'",
        "'is'",
        "'$B.$is('",
        "', '",
        "')'",
        "'is_not'",
        "'!=='",
        "'+'",
        "'$B.add('",
        "', '",
        "')'",
        "'*'",
        "'-'",
        "'expr'",
        "'int'",
        "'expr'",
        "'float'",
        "'expr'",
        "'list_or_tuple'",
        "'tuple'",
        "'expr'",
        "'expr'",
        "'id'",
        "'op'",
        "'*'",
        "'+'",
        "'-'",
        "'int'",
        "'float'",
        "'str'",
        "'id'",
        "'new Number('",
        "')'",
        "'float'",
        "'float'",
        "'+'",
        "'str'",
        "'str'",
        "'int'",
        "'float'",
        "'int'",
        "'float'",
        "'int'",
        "'int'",
        "'int'",
        "'float'",
        "'-'",
        "'$B.sub('",
        "','",
        "')'",
        "'*'",
        "'$B.mul('",
        "','",
        "')'",
        "'typeof '",
        "'.valueOf() == \"number\"'",
        "'typeof '",
        "' == \"number\"'",
        "' && '",
        "' ? '",
        "'('",
        "' && '",
        "' ? '",
        "' : new Number('",
        "')'",
        "')'",
        "'+'",
        "' : (typeof '",
        "' == \"string\" && typeof '",
        "' == \"string\") ? '",
        "'+'",
        "': $B.rich_op(\"'",
        "'\",'",
        "','",
        "')'",
        "'('",
        "''",
        "')'",
        "'$B.rich_comp(\"__'",
        "'__\",'",
        "','",
        "')'",
        "'$B.rich_op(\"'",
        "'\", '",
        "', '",
        "')'",
        "'$B.rich_comp(\"__'",
        "'__\",'",
        "','",
        "')'",
        "'$B.rich_op(\"'",
        "'\", '",
        "', '",
        "')'",
        "'op'",
        "'expr'",
        "'list_or_tuple'",
        "'tuple'",
        "'expr'",
        "'('",
        "')'",
        "'+'",
        "'$B.add('",
        "','",
        "')'",
        "'-'",
        "'$B.sub('",
        "','",
        "')'",
        "'*'",
        "'$B.mul('",
        "','",
        "')'",
        "'/'",
        "'$B.div('",
        "','",
        "')'",
        "'packed'",
        "'list_or_tuple'",
        "\"node\"",
        "'expr'",
        "'packed'",
        "\"two starred expressions in assignment\"",
        "'(packed) '",
        "'pass'",
        "'(pass)'",
        "'void(0)'",
        "'raise'",
        "' (raise) '",
        "''",
        "'$B.$raise()'",
        "'$B.$raise('",
        "')'",
        "\"raw_js\"",
        "'(js) '",
        "'return'",
        "\"def\"",
        "\"generator\"",
        "\"'return' outside function\"",
        "'for'",
        "'try'",
        "'single_kw'",
        "'finally'",
        "'return '",
        "'abstract_expr'",
        "'rvalue'",
        "'None'",
        "'generator'",
        "'return [$B.generator_return('",
        "')]'",
        "'    '",
        "'var $res = '",
        "';\\n'",
        "'if($locals.$f_trace !== _b_.None){$B.trace_return($res)}\\n'",
        "'$B.leave_frame'",
        "'$exec_'",
        "'_exec'",
        "'(\"'",
        "'\");\\n'",
        "'return $res'",
        "'single_kw'",
        "\"else\"",
        "'for'",
        "'asyncfor'",
        "'condition'",
        "'while'",
        "'finally'",
        "'generator'",
        "'var $exit;'",
        "'if($B.frames_stack.length<$stack_length){'",
        "'$exit = true;'",
        "'$B.frames_stack.push($top_frame)'",
        "'}'",
        "'_'",
        "\"return\"",
        "'if($exit){$B.leave_frame()}'",
        "'finally'",
        "'if($locals_'",
        "'_'",
        "'[\"$no_break'",
        "'\"])'",
        "'slice'",
        "\"abstract_expr\"",
        "\"None\"",
        "\"slice.$factory(\"",
        "\")\"",
        "'star_arg'",
        "'(star arg) '",
        "'{$nat:\"ptuple\",arg:'",
        "'}'",
        "'str'",
        "'string '",
        "''",
        "''",
        "'expression'",
        "\":\"",
        "\"{[(\"",
        "\")]}\"",
        "\"try\"",
        "\"\\n;\"",
        "\"a\"",
        "'$B.builtins.ascii('",
        "')'",
        "\"r\"",
        "'$B.builtins.repr('",
        "')'",
        "\"s\"",
        "'$B.builtins.str.$factory('",
        "')'",
        "\"'\"",
        "\"'\"",
        "\"$B.builtins.str.format('{0:' + \"",
        "\" + '}', \"",
        "\")\"",
        "'$B.builtins.str.$factory('",
        "')'",
        "\"'\"",
        "\"g\"",
        "\"\\\\'\"",
        "\"\\\\n\"",
        "\"'\"",
        "\"'\"",
        "' + '",
        "'\\\\n\\\\\\n'",
        "\"0x\"",
        "\"call\"",
        "'(function(){throw TypeError.$factory(\"'",
        "\"'str'\"",
        "' object is not callable\")}())'",
        "'b'",
        "'bytes.$factory('",
        "'$B.$TypeError(\"can\\'t concat bytes to str\")'",
        "'+'",
        "',\"ISO-8859-1\")'",
        "'\"\"'",
        "'sub'",
        "'getitem'",
        "'(sub) (value) '",
        "' (tree) '",
        "'getitem'",
        "'id'",
        "'list'",
        "'tuple'",
        "'$B.list_key('",
        "', '",
        "')'",
        "'$B.list_slice('",
        "', '",
        "\"null\"",
        "','",
        "\"null\"",
        "')'",
        "'$B.list_slice_step('",
        "', '",
        "\"null\"",
        "','",
        "\"null\"",
        "','",
        "\"null\"",
        "')'",
        "'getitem'",
        "'$B.$getitem('",
        "','",
        "')'",
        "''",
        "'delitem'",
        "''",
        "'sub'",
        "'['",
        "']'",
        "'['",
        "']'",
        "'((Array.isArray('",
        "') || typeof '",
        "' == \"string\") && '",
        "' !== undefined ?'",
        "' : '",
        "'$B.$getattr('",
        "',\"__'",
        "'__\")('",
        "')'",
        "'abstract_expr'",
        "'None'",
        "'tuple.$factory(['",
        "','",
        "']))'",
        "')'",
        "'target_list'",
        "'id'",
        "'(target list) '",
        "'ternary'",
        "'(ternary) '",
        "'$B.$bool('",
        "') ? '",
        "' : '",
        "'try'",
        "'(try) '",
        "\"unexpected EOF while parsing\"",
        "'except'",
        "'finally'",
        "'single_kw'",
        "\"no clause after try\"",
        "'$err'",
        "\"$locals.\"",
        "'$failed'",
        "' = false;\\n'",
        "' '",
        "'try'",
        "'catch('",
        "')'",
        "\"$B.set_exc(\"",
        "\")\"",
        "\"if($locals.$f_trace !== _b_.None)\"",
        "\"{$locals.$f_trace = $B.trace_exception()}\"",
        "' = true;'",
        "'$B.pmframe = $B.last($B.frames_stack);'",
        "'if(false){}'",
        "'except'",
        "\"'except' or 'finally' after 'else'\"",
        "\"'except' after 'finally'\"",
        "'$locals[\"'",
        "'\"] = $B.exception('",
        "')'",
        "'more than one except: line'",
        "'single_kw'",
        "'finally'",
        "'single_kw'",
        "'else'",
        "\"more than one 'else'\"",
        "\"'else' after 'finally'\"",
        "'else'",
        "'throw '",
        "'if(!'",
        "')'",
        "'try'",
        "'unary'",
        "'(unary) '",
        "'with'",
        "'as'",
        "'(with) '",
        "\"id\"",
        "\"list_or_tuple\"",
        "\"expr\"",
        "\"id\"",
        "'module'",
        "\"\"",
        "\"generator\"",
        "\"$locals.\"",
        "\"try\"",
        "'$ctx_manager'",
        "'$ctx_manager_exit'",
        "'$exc'",
        "'$err'",
        "'$value'",
        "'$yield'",
        "'$temp'",
        "'expr'",
        "'list_or_tuple'",
        "'expr'",
        "'list_or_tuple'",
        "'wrong number of alias'",
        "'try'",
        "'$locals'",
        "'[\"'",
        "'\"] = '",
        "\"generator\"",
        "\" = false\"",
        "'catch('",
        "')'",
        "' = false;'",
        "' = $B.exception('",
        "', true)\\n'",
        "' '",
        "'var $b = '",
        "'('",
        "'.__class__,'",
        "','",
        "'$B.$getattr('",
        "', \"__traceback__\"));'",
        "\"generator\"",
        "'$B.set_cm_in_generator('",
        "');'",
        "'if(!$B.$bool($b)){throw '",
        "'}'",
        "'finally'",
        "'single_kw'",
        "'finally'",
        "'if('",
        "\"generator\"",
        "' && (!'",
        "')'",
        "' && '",
        "'){'",
        "'(None,None,None);'",
        "\"generator\"",
        "'delete '",
        "'};'",
        "'$ctx_manager'",
        "'$ctx_manager_exit'",
        "'$exc'",
        "'$ctx_mgr_type'",
        "'$ctx_manager_enter'",
        "'$err'",
        "'var '",
        "' = '",
        "','",
        "'    '",
        "' = _b_.type.$factory('",
        "'),'",
        "'    '",
        "' = $B.$call($B.$getattr('",
        "', \"__aexit__\")),'",
        "'    '",
        "' = $B.$call($B.$getattr('",
        "', \"__aenter__\"))'",
        "'('",
        "'),'",
        "\"    \"",
        "\" = false\"",
        "\"\"",
        "\"list_or_tuple\"",
        "' = '",
        "'await ($B.promise('",
        "'))'",
        "\"left\"",
        "'await ($B.promise('",
        "'))'",
        "'await ($B.promise('",
        "'))'",
        "'try'",
        "'catch(err)'",
        "' = true'",
        "'var '",
        "' = $B.imported[\"_sys\"].exc_info()'",
        "'if(! await ($B.promise('",
        "'('",
        "', '",
        "'[0], '",
        "'[1], '",
        "'[2]))))'",
        "'$B.$raise()'",
        "'if(! '",
        "')'",
        "'await ($B.promise('",
        "'('",
        "', _b_.None, _b_.None, _b_.None)))'",
        "' '",
        "\"\"",
        "\"var \"",
        "'$ctx_manager'",
        "'$ctx_manager_exit'",
        "'$exc'",
        "'$value'",
        "'var '",
        "' = '",
        "'\\n'",
        "' = $B.$getattr('",
        "',\"__exit__\")\\n'",
        "'var '",
        "' = $B.$getattr('",
        "',\"__enter__\")()\\n'",
        "' = true\\n'",
        "'yield'",
        "\"lambda\"",
        "'node'",
        "'assign'",
        "'tuple'",
        "'list_or_tuple'",
        "'yield atom must be inside ()'",
        "\"'yield' outside function\"",
        "'generator'",
        "'generator'",
        "'(yield) '",
        "'(from) '",
        "''",
        "'// placeholder for generator sent value'",
        "\"$top_frame[1].$has_yield_in_cm = true\"",
        "'None'",
        "'module'",
        "'condition'",
        "'elif'",
        "'except'",
        "'single_kw'",
        "';$B.$profile.count(\"'",
        "'\",'",
        "');'",
        "'module'",
        "'marker'",
        "'condition'",
        "'elif'",
        "'except'",
        "'single_kw'",
        "','",
        "';$locals.$line_info = \"'",
        "'\";if($locals.$f_trace !== _b_.None){$B.trace_line()};'",
        "'_b_.None;'",
        "'keyword not following correct keyword'",
        "''",
        "'expr'",
        "'str'",
        "'node'",
        "'module'",
        "'def'",
        "'class'",
        "'generator'",
        "'class'",
        "\"module\"",
        "'node'",
        "\"module\"",
        "'module'",
        "\"module\"",
        "'no to_js() for '",
        "','",
        "\"__\"",
        "\"__\"",
        "\"module\"",
        "\"class\"",
        "'_'",
        "'_'",
        "'abstract_expr'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "'yield'",
        "\"set assign to parent\"",
        "'await'",
        "'id'",
        "'id'",
        "'str'",
        "'str'",
        "'bytes'",
        "'bytes'",
        "'int'",
        "'int'",
        "'float'",
        "'float'",
        "'imaginary'",
        "'imaginary'",
        "'('",
        "'tuple'",
        "'tuple'",
        "'['",
        "'list'",
        "'list'",
        "'{'",
        "'dict_or_set'",
        "'.'",
        "'ellipsis'",
        "'not'",
        "'op'",
        "'is'",
        "'is_not'",
        "'not'",
        "'lambda'",
        "'lambda'",
        "'op'",
        "'*'",
        "'expr'",
        "'-'",
        "'~'",
        "'+'",
        "'-'",
        "'unary_neg'",
        "'+'",
        "'unary_pos'",
        "'unary_inv'",
        "'not'",
        "'not'",
        "'token '",
        "' after '",
        "'='",
        "'token '",
        "' after '",
        "'yield'",
        "':'",
        "\"sub\"",
        "\"list_or_tuple\"",
        "\"sub\"",
        "')'",
        "','",
        "'slice'",
        "'list_or_tuple'",
        "'call_arg'",
        "'op'",
        "'yield'",
        "'annotation'",
        "\"empty annotation\"",
        "'annotation'",
        "\"eol\"",
        "\"empty annotation\"",
        "':'",
        "\"def\"",
        "\"more than one annotation\"",
        "\"augm_assign\"",
        "\"augmented assign as annotation\"",
        "\"op\"",
        "\"operator as annotation\"",
        "'assert'",
        "'eol'",
        "'assign'",
        "'eol'",
        "'abstract_expr'",
        "'token '",
        "' after '",
        "'eol'",
        "'token '",
        "' after '",
        "'async'",
        "\"def\"",
        "\"for\"",
        "\"with\"",
        "\"def\"",
        "\"generator\"",
        "\"'async \"",
        "\"' outside async function\"",
        "'token '",
        "' after '",
        "'attribute'",
        "'id'",
        "\"cannot assign to \"",
        "'augm_assign'",
        "'eol'",
        "'abstract_expr'",
        "'token '",
        "' after '",
        "'eol'",
        "'token '",
        "' after '",
        "'await'",
        "'break'",
        "'eol'",
        "'eol'",
        "'call'",
        "','",
        "'id'",
        "'id'",
        "'await'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "','",
        "')'",
        "'op'",
        "','",
        "'-'",
        "'~'",
        "'+'",
        "','",
        "'*'",
        "'**'",
        "'call_arg'",
        "'await'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "'id'",
        "','",
        "'='",
        "','",
        "'kw_value'",
        "'for'",
        "'gen_expr'",
        "'op'",
        "'id'",
        "','",
        "'+'",
        "'-'",
        "'~'",
        "'*'",
        "'**'",
        "'token '",
        "' after '",
        "')'",
        "'kwarg'",
        "'star_arg'",
        "'double_star_arg'",
        "'non-keyword argument after keyword argument'",
        "'list_or_tuple'",
        "'gen_expr'",
        "':'",
        "','",
        "'lambda'",
        "','",
        "','",
        "'kwarg'",
        "'star_arg'",
        "'double_star_arg'",
        "'non-keyword argument after keyword argument'",
        "'token '",
        "' after '",
        "'class'",
        "'id'",
        "'id'",
        "'(:'",
        "'('",
        "':'",
        "'token '",
        "' after '",
        "'comp_if'",
        "'comp_for'",
        "'in'",
        "'in'",
        "'token '",
        "' after '",
        "'comp_iterable'",
        "'comprehension'",
        "'if'",
        "'for'",
        "'condition'",
        "':'",
        "\"abstract_expr\"",
        "'token '",
        "' after '",
        "'token '",
        "' after '",
        "'continue'",
        "'eol'",
        "'token '",
        "' after '",
        "'ctx_manager_alias'",
        "','",
        "':'",
        "'token '",
        "' after '",
        "'decorator'",
        "'id'",
        "'eol'",
        "'token '",
        "' after '",
        "'decorator_expression'",
        "\"id\"",
        "\".\"",
        "'token '",
        "' after '",
        "\"eol\"",
        "'token '",
        "' after '",
        "\"id\"",
        "\"id\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "\"id\"",
        "\"(\"",
        "\".\"",
        "'eol'",
        "'token '",
        "' after '",
        "'def'",
        "'id'",
        "'token '",
        "' after '",
        "'('",
        "\"missing name in function definition\"",
        "'annotation'",
        "':'",
        "\"missing function parameters\"",
        "'eol'",
        "\"missing colon\"",
        "'token '",
        "' after '",
        "'del'",
        "'eol'",
        "'token '",
        "' after '",
        "'dict_or_set'",
        "'['",
        "'('",
        "','",
        "'}'",
        "'dict_or_set'",
        "'set'",
        "'set'",
        "'set_comp'",
        "'dict_comp'",
        "'dict'",
        "'token '",
        "' after '",
        "','",
        "'dict_or_set'",
        "'set'",
        "'dict'",
        "'token '",
        "' after '",
        "'id'",
        "':'",
        "'dict_or_set'",
        "'dict'",
        "'dict'",
        "','",
        "'token '",
        "' after '",
        "'for'",
        "'dict_or_set'",
        "'set_comp'",
        "'dict_comp'",
        "'dict_or_set_comp'",
        "'token '",
        "' after '",
        "'id'",
        "'}'",
        "'dict'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "','",
        "'op'",
        "'*'",
        "'**'",
        "\",\"",
        "\"dict_or_set\"",
        "\"*\"",
        "\"set\"",
        "\"dict\"",
        "\"set\"",
        "\"**\"",
        "\"dict\"",
        "\"*\"",
        "'token '",
        "' after '",
        "'+'",
        "'-'",
        "'~'",
        "','",
        "'-'",
        "'unary_neg'",
        "'+'",
        "'unary_pos'",
        "'unary_inv'",
        "'token '",
        "' after '",
        "'token '",
        "' after '",
        "'double_star_arg'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "','",
        "')'",
        "':'",
        "'lambda'",
        "'token '",
        "' after '",
        "'ellipsis'",
        "'.'",
        "'token '",
        "' after '",
        "'end_positional'",
        "\",\"",
        "\")\"",
        "'token '",
        "' after '",
        "'except'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'not'",
        "'lambda'",
        "'id'",
        "'as'",
        "'as'",
        "'as'",
        "'alias'",
        "'id'",
        "'alias'",
        "':'",
        "':'",
        "'id'",
        "'as'",
        "':'",
        "'('",
        "'id'",
        "')'",
        "','",
        "'as'",
        "'as'",
        "','",
        "'as'",
        "','",
        "'id'",
        "'token '",
        "' after '",
        "'expr'",
        "'bytes'",
        "'float'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'lambda'",
        "'pass'",
        "'str'",
        "'token '",
        "' after '",
        "'{'",
        "\"id\"",
        "\"print\"",
        "\"exec\"",
        "'token '",
        "' after '",
        "'['",
        "'('",
        "'.'",
        "'not'",
        "'expr'",
        "','",
        "'not'",
        "','",
        "'in'",
        "'target_list'",
        "','",
        "'op'",
        "'in'",
        "','",
        "','",
        "\"assign\"",
        "\"return\"",
        "\"yield\"",
        "\"from\"",
        "\"no implicit tuple for yield from\"",
        "'tuple'",
        "'.'",
        "'['",
        "'('",
        "'op'",
        "'ternary'",
        "'expr'",
        "'op'",
        "'**'",
        "'**'",
        "\"not\"",
        "'not'",
        "'operand'",
        "','",
        "'and'",
        "'or'",
        "'not'",
        "'expr'",
        "'not'",
        "'op'",
        "'<'",
        "'<='",
        "'=='",
        "'!='",
        "'is'",
        "'>='",
        "'>'",
        "'<'",
        "'<='",
        "'=='",
        "'!='",
        "'is'",
        "'>='",
        "'>'",
        "\"$c\"",
        "'op'",
        "'and'",
        "'name'",
        "'js'",
        "'xxx'",
        "'operand'",
        "'augm_assign'",
        "\"assign\"",
        "\"augm_assign\"",
        "\"augmented assignment inside assignment\"",
        "\"op\"",
        "\"cannot assign to operator\"",
        "','",
        "\":\"",
        "\"sub\"",
        "\"list_or_tuple\"",
        "\"sub\"",
        "\"slice\"",
        "\"node\"",
        "\"id\"",
        "\"sub\"",
        "\"attribute\"",
        "\"tuple\"",
        "\",\"",
        "\"invalid target for annotation\"",
        "'='",
        "','",
        "\"call_arg\"",
        "\"id\"",
        "\"keyword can't be an expression\"",
        "\"annotation\"",
        "\"op\"",
        "\"cannot assign to operator\"",
        "\"list_or_tuple\"",
        "\"expr\"",
        "\"operand\"",
        "\"cannot assign to operator\"",
        "\"expr\"",
        "\"target list\"",
        "'token '",
        "' after '",
        "\"condition\"",
        "'token '",
        "' after '",
        "\"augm_assign\"",
        "\"assignment inside augmented assignment\"",
        "':='",
        "\"node\"",
        "\"assign\"",
        "\"kwarg\"",
        "\"annotation\"",
        "':= invalid, parent '",
        "\"func_arg_id\"",
        "':= invalid, parent '",
        "\"call_arg\"",
        "\"call\"",
        "\"lambda\"",
        "':= invalid inside function arguments'",
        "\"id\"",
        "'token '",
        "' after '",
        "'if'",
        "\"list_or_tuple\"",
        "'comp_for'",
        "\"comp_if\"",
        "'call_arg'",
        "'op'",
        "'expr'",
        "'op'",
        "'eol'",
        "\"id\"",
        "\"print\"",
        "\"exec\"",
        "\"Missing parentheses in call \"",
        "\"to '\"",
        "\"'.\"",
        "\"dict_or_set\"",
        "\"list_or_tuple\"",
        "\"packed\"",
        "\"call\"",
        "\"packed\"",
        "\"can't use starred expression here\"",
        "'expr_not'",
        "'in'",
        "'not_in'",
        "'token '",
        "' after '",
        "'for'",
        "'in'",
        "\"missing target between 'for' and 'in'\"",
        "'target list'",
        "':'",
        "\"abstract_expr\"",
        "'token '",
        "' after '",
        "'token '",
        "' after '",
        "'from'",
        "'id'",
        "'id'",
        "','",
        "'alias'",
        "','",
        "'.'",
        "'module'",
        "'id'",
        "'.'",
        "'import'",
        "'module'",
        "'id'",
        "'op'",
        "'*'",
        "'id'",
        "'module'",
        "\"import * only allowed at module level\"",
        "'*'",
        "'eol'",
        "','",
        "','",
        "'id'",
        "'eol'",
        "','",
        "'eol'",
        "'id'",
        "'trailing comma not allowed without '",
        "'surrounding parentheses'",
        "'invalid syntax'",
        "'as'",
        "','",
        "'eol'",
        "'alias'",
        "'('",
        "'id'",
        "'id'",
        "')'",
        "','",
        "'id'",
        "'eol'",
        "'token '",
        "' after '",
        "'func_arg_id'",
        "'='",
        "'='",
        "','",
        "')'",
        "'non-default argument follows default argument'",
        "':'",
        "\"lambda\"",
        "\":\"",
        "'token '",
        "' after '",
        "'token '",
        "' after '",
        "'func_args'",
        "'id'",
        "'duplicate keyword argument'",
        "'id'",
        "','",
        "'duplicate argument '",
        "' in function definition'",
        "','",
        "','",
        "'id'",
        "'token '",
        "' after '",
        "')'",
        "\"func_star_arg\"",
        "\"*\"",
        "'*'",
        "'named arguments must follow bare *'",
        "'invalid syntax'",
        "'op'",
        "'duplicate keyword argument'",
        "','",
        "'*'",
        "'duplicate star argument'",
        "'*'",
        "'**'",
        "'**'",
        "'/'",
        "'duplicate / in function parameters'",
        "'/ after * in function parameters'",
        "'token '",
        "' after '",
        "':'",
        "\"lambda\"",
        "'token '",
        "' after '",
        "'func_star_arg'",
        "'id'",
        "'duplicate argument '",
        "' in function definition'",
        "','",
        "')'",
        "'*'",
        "'*'",
        "':'",
        "\"lambda\"",
        "\":\"",
        "'annotation on an unnamed parameter'",
        "'token '",
        "' after '",
        "'global'",
        "'nonlocal'",
        "'id'",
        "'id'",
        "','",
        "','",
        "','",
        "'id'",
        "'eol'",
        "','",
        "'token '",
        "' after '",
        "'id'",
        "'='",
        "'expr'",
        "'call_arg'",
        "'op'",
        "'id'",
        "'str'",
        "'int'",
        "'float'",
        "'imaginary'",
        "\"print\"",
        "\"exec\"",
        "\"missing parenthesis in call to '\"",
        "\"'\"",
        "'token '",
        "' after '",
        "\"async\"",
        "'def'",
        "'import'",
        "'id'",
        "'id'",
        "','",
        "'qual'",
        "','",
        "'.'",
        "'.'",
        "'alias'",
        "','",
        "'.'",
        "','",
        "'qual'",
        "','",
        "','",
        "'id'",
        "'as'",
        "','",
        "'alias'",
        "'eol'",
        "','",
        "'token '",
        "' after '",
        "'imaginary'",
        "'int'",
        "'float'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'not'",
        "'lambda'",
        "'token '",
        "' after '",
        "'kwarg'",
        "','",
        "'lambda'",
        "':'",
        "\"(\"",
        "'token '",
        "' after '",
        "'list_or_tuple'",
        "'['",
        "'('",
        "','",
        "'tuple'",
        "'gen_expr'",
        "')'",
        "\"list_or_tuple\"",
        "\"tuple\"",
        "\"expr\"",
        "\"node\"",
        "'gen_expr'",
        "\"packed\"",
        "'list'",
        "'list_comp'",
        "']'",
        "'list_comp'",
        "\"packed\"",
        "'dict_or_set_comp'",
        "'}'",
        "','",
        "'tuple'",
        "'id'",
        "'for'",
        "'list'",
        "'list_comp'",
        "'gen_expr'",
        "'id'",
        "'tuple'",
        "')'",
        "'eol'",
        "'gen_expr'",
        "')'",
        "'list'",
        "']'",
        "'='",
        "'tuple'",
        "'tuple'",
        "')'",
        "']'",
        "'tuple'",
        "','",
        "'unexpected comma inside list'",
        "','",
        "'list_comp'",
        "']'",
        "'in'",
        "'iterable'",
        "'if'",
        "'condition'",
        "'token '",
        "' after '",
        "'node'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'not'",
        "'lambda'",
        "'.'",
        "'op'",
        "'*'",
        "'+'",
        "'-'",
        "'~'",
        "'async'",
        "'await'",
        "'class'",
        "'continue'",
        "'__debugger__'",
        "'break'",
        "'def'",
        "'for'",
        "'if'",
        "'while'",
        "'elif'",
        "'condition'",
        "'while'",
        "'elif after '",
        "'else'",
        "'condition'",
        "'except'",
        "'for'",
        "'else after '",
        "'finally'",
        "'try'",
        "'except'",
        "'single_kw'",
        "'else'",
        "'finally after '",
        "'try'",
        "'except'",
        "'try'",
        "'except'",
        "'except after '",
        "'assert'",
        "'assert'",
        "'from'",
        "'import'",
        "'global'",
        "'nonlocal'",
        "'lambda'",
        "'pass'",
        "'raise'",
        "'return'",
        "'with'",
        "'yield'",
        "'del'",
        "'@'",
        "'eol'",
        "'token '",
        "' after '",
        "'not'",
        "'in'",
        "'not_in'",
        "'op'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "'op'",
        "'+'",
        "'-'",
        "'~'",
        "'op'",
        "'context op undefined '",
        "'unary'",
        "'eol'",
        "'assign'",
        "'return'",
        "'tuple'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "'op'",
        "'+'",
        "'-'",
        "'~'",
        "'abstract_expr'",
        "'token '",
        "' after '",
        "'packed'",
        "\"[\"",
        "'id'",
        "','",
        "\"[\"",
        "','",
        "\"list\"",
        "\"(\"",
        "','",
        "\"tuple\"",
        "\"]\"",
        "\"syntax error\"",
        "'token '",
        "' after '",
        "'pass'",
        "'eol'",
        "'token '",
        "' after '",
        "'raise'",
        "'id'",
        "'exc'",
        "'from'",
        "'eol'",
        "'token '",
        "' after '",
        "'return'",
        "'single_kw'",
        "':'",
        "'token '",
        "' after '",
        "'slice'",
        "\":\"",
        "'star_arg'",
        "'id'",
        "\"target_list\"",
        "','",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'not'",
        "'lambda'",
        "','",
        "')'",
        "\"unnamed star argument\"",
        "':'",
        "'lambda'",
        "'token '",
        "' after '",
        "'str'",
        "'['",
        "'('",
        "'str'",
        "'sub'",
        "'id'",
        "'imaginary'",
        "'int'",
        "'float'",
        "'str'",
        "'bytes'",
        "'['",
        "'('",
        "'{'",
        "'.'",
        "'not'",
        "'lambda'",
        "']'",
        "':'",
        "','",
        "'token '",
        "' after '",
        "'target_list'",
        "'id'",
        "'id'",
        "','",
        "'target'",
        "'op'",
        "'id'",
        "'*'",
        "'('",
        "'['",
        "'id'",
        "','",
        "'('",
        "'tuple'",
        "'list'",
        "')'",
        "']'",
        "','",
        "','",
        "','",
        "'id'",
        "','",
        "'in'",
        "'token '",
        "' after '",
        "'ternary'",
        "'else'",
        "'token '",
        "' after '",
        "\",\"",
        "\"assign\"",
        "\"augm_assign\"",
        "\"node\"",
        "\"return\"",
        "'tuple'",
        "\"id\"",
        "'try'",
        "':'",
        "'token '",
        "' after '",
        "'unary'",
        "'int'",
        "'float'",
        "'imaginary'",
        "'-'",
        "\"-\"",
        "'~'",
        "'id'",
        "'call'",
        "'id'",
        "'+'",
        "'__pos__'",
        "'-'",
        "'__neg__'",
        "'__invert__'",
        "'op'",
        "'+'",
        "'-'",
        "'+'",
        "'-'",
        "'with'",
        "'id'",
        "'id'",
        "'as'",
        "'token '",
        "' after '",
        "'as'",
        "':'",
        "'id'",
        "'as'",
        "':'",
        "'('",
        "'id'",
        "'alias'",
        "':'",
        "')'",
        "','",
        "'as'",
        "':'",
        "','",
        "','",
        "'as'",
        "'id'",
        "'as'",
        "'id'",
        "':'",
        "'id'",
        "'token '",
        "' after '",
        "'yield'",
        "'from'",
        "'abstract_expr'",
        "\"'from' must follow 'yield'\"",
        "\"alert\"",
        "\"arguments\"",
        "\"case\"",
        "\"catch\"",
        "\"const\"",
        "\"constructor\"",
        "\"Date\"",
        "\"debugger\"",
        "\"delete\"",
        "\"default\"",
        "\"do\"",
        "\"document\"",
        "\"enum\"",
        "\"export\"",
        "\"eval\"",
        "\"extends\"",
        "\"Error\"",
        "\"history\"",
        "\"function\"",
        "\"instanceof\"",
        "\"keys\"",
        "\"length\"",
        "\"location\"",
        "\"Math\"",
        "\"message\"",
        "\"new\"",
        "\"null\"",
        "\"Number\"",
        "\"RegExp\"",
        "\"String\"",
        "\"super\"",
        "\"switch\"",
        "\"this\"",
        "\"throw\"",
        "\"typeof\"",
        "\"var\"",
        "\"window\"",
        "\"toLocaleString\"",
        "\"toString\"",
        "\"void\"",
        "'abfnrtvxuU\"0123456789'",
        "\"'\"",
        "'\\\\'",
        "\")\"",
        "\"(\"",
        "\"]\"",
        "\"[\"",
        "\"}\"",
        "\"{\"",
        "\"\"",
        "\"class\"",
        "\"return\"",
        "\"break\"",
        "\"for\"",
        "\"lambda\"",
        "\"try\"",
        "\"finally\"",
        "\"raise\"",
        "\"def\"",
        "\"from\"",
        "\"nonlocal\"",
        "\"while\"",
        "\"del\"",
        "\"global\"",
        "\"with\"",
        "\"as\"",
        "\"elif\"",
        "\"else\"",
        "\"if\"",
        "\"yield\"",
        "\"assert\"",
        "\"import\"",
        "\"except\"",
        "\"raise\"",
        "\"in\"",
        "\"pass\"",
        "\"with\"",
        "\"continue\"",
        "\"__debugger__\"",
        "\"async\"",
        "\"await\"",
        "\"class\"",
        "\"def\"",
        "\"for\"",
        "\"condition\"",
        "\"single_kw\"",
        "\"try\"",
        "\"except\"",
        "\"with\"",
        "\"\"",
        "\" \"",
        "\"\\t\"",
        "'\\n'",
        "'#'",
        "'unexpected indent'",
        "'expected an indented block'",
        "'unexpected indent'",
        "\"#\"",
        "'\\n'",
        "'\"'",
        "\"'\"",
        "'str'",
        "'r'",
        "'u'",
        "'b'",
        "'rb'",
        "'br'",
        "'f'",
        "'fr'",
        "'rf'",
        "\"triple_string\"",
        "\"string\"",
        "\"a\"",
        "\"\\u0007\"",
        "'\\\\'",
        "'\\\\'",
        "\"\\\\\"",
        "'\\\\\\\\'",
        "'\\\\\\\\'",
        "'\\n'",
        "'N{'",
        "\"[-a-zA-Z0-9 ]+\"",
        "\"(unicode error) \"",
        "\"malformed \\\\N character escape\"",
        "\"}\"",
        "\"(unicode error) \"",
        "\"malformed \\\\N character escape\"",
        "\"GET\"",
        "\"unicode.txt\"",
        "\"Warning - could not \"",
        "\"load unicode.txt\"",
        "\"^([0-9A-F]+);\"",
        "\";.*$\"",
        "\"m\"",
        "\"(unicode error) \"",
        "\"unknown Unicode character name\"",
        "\"0x\"",
        "'\\\\'",
        "'\\\\'",
        "'\\n'",
        "'triple_string'",
        "\"EOL while scanning string literal\"",
        "\"triple_string\"",
        "''",
        "'\\\\'",
        "'\\\\'",
        "\"\\\\\\\\\"",
        "\"g\"",
        "'str'",
        "'b'",
        "'str'",
        "'str'",
        "\"triple_string\"",
        "'\\n'",
        "\"triple_string\"",
        "\"Triple string end not found\"",
        "\"String end not found\"",
        "\"\"",
        "'$'",
        "\"Unsupported Python keyword '\"",
        "\"'\"",
        "'string'",
        "'is_not'",
        "'not_in'",
        "'is'",
        "'op'",
        "'is_not'",
        "'op'",
        "'not'",
        "'op'",
        "'not_in'",
        "'op'",
        "'\"'",
        "\"'\"",
        "'r'",
        "'b'",
        "'u'",
        "'rb'",
        "'br'",
        "'f'",
        "'fr'",
        "'rf'",
        "\"\"",
        "'$$'",
        "'id'",
        "\"\"",
        "\"__\"",
        "\"invalid literal\"",
        "\"_\"",
        "\"invalid literal\"",
        "\"\"",
        "\"0\"",
        "\"invalid literal\"",
        "\"0\"",
        "\"\"",
        "' '",
        "'\\t'",
        "'.'",
        "\"j\"",
        "'imaginary'",
        "'0'",
        "'float'",
        "'0'",
        "'.'",
        "'0'",
        "'int'",
        "'int'",
        "'int'",
        "'int'",
        "'invalid literal starting with 0'",
        "'0'",
        "'1'",
        "'2'",
        "'3'",
        "'4'",
        "'5'",
        "'6'",
        "'7'",
        "'8'",
        "'9'",
        "'imaginary'",
        "'float'",
        "'imaginary'",
        "'float'",
        "'imaginary'",
        "'int'",
        "'\\n'",
        "'eol'",
        "'('",
        "'['",
        "'{'",
        "')'",
        "']'",
        "'}'",
        "\"\"",
        "\"Unexpected closing bracket\"",
        "\"Unbalanced bracket\"",
        "'='",
        "\"=\"",
        "'='",
        "'op'",
        "'=='",
        "','",
        "':'",
        "\":=\"",
        "\":=\"",
        "';'",
        "'eol'",
        "'invalid syntax'",
        "'\\n'",
        "'#'",
        "' '",
        "'/'",
        "'%'",
        "'&'",
        "'>'",
        "'<'",
        "'-'",
        "'+'",
        "'*'",
        "'@'",
        "'/'",
        "'^'",
        "'='",
        "'|'",
        "'~'",
        "'!'",
        "'-'",
        "'>'",
        "'annotation'",
        "'@'",
        "\"node\"",
        "\"\"",
        "'augm_assign'",
        "'op'",
        "'invalid character: '",
        "'\\\\'",
        "'\\n'",
        "\"unexpected EOF while parsing\"",
        "\"node\"",
        "'nothing before \\\\'",
        "'unexpected character after line continuation character'",
        "'unknown token ['",
        "']'",
        "\"\\n\"",
        "\"$\"",
        "'<string>'",
        "\"unexpected EOF while parsing (\"",
        "\", line \"",
        "\")\"",
        "\"async\"",
        "\"error with async\"",
        "\"car \"",
        "\"after async\"",
        "'expected an indented block'",
        "\"try\"",
        "\"unexpected EOF while parsing\"",
        "'module'",
        "\"object\"",
        "\"object\"",
        "\"\"",
        "'object'",
        "\",\"",
        "\"\\n\"",
        "\"\\\\\"",
        "\"\\\\\\\\\"",
        "\"\\n\"",
        "\"\\n\"",
        "'$'",
        "'$locals_'",
        "'_'",
        "'$locals_'",
        "'_'",
        "'var $B = __BRYTHON__;\\n'",
        "'var $bltns = __BRYTHON__.InjectBuiltins();eval($bltns);\\n\\n'",
        "'var $locals = '",
        "';'",
        "''",
        "'[\"__package__\"] = \"'",
        "'\"'",
        "'$locals.__annotations__ = _b_.dict.$factory()'",
        "'var $top_frame = [\"'",
        "'_'",
        "'\", '",
        "', \"'",
        "'_'",
        "'\", '",
        "']\\n$locals.$f_trace = $B.enter_frame($top_frame)\\n'",
        "'var $stack_length = $B.frames_stack.length;'",
        "'try'",
        "''",
        "'$B.leave_frame({value: _b_.None})'",
        "'catch(err)'",
        "'$B.leave_frame({value: _b_.None})'",
        "'throw err'",
        "'module '",
        "' translated in '",
        "' ms'",
        "\"file\"",
        "\"file\"",
        "'debug'",
        "'number'",
        "'debug'",
        "'/'",
        "'/'",
        "\"string\"",
        "'.vfs.js'",
        "'/'",
        "'_importlib'",
        "'head link[rel~=pythonpath]'",
        "'_importlib'",
        "' '",
        "' '",
        "' prepend '",
        "'x-'",
        "\"/\"",
        "\"\"",
        "\"/\"",
        "\"VFS\"",
        "\".py\"",
        "\".py\"",
        "\"execute\"",
        "\"\\n\"",
        "\":\"",
        "'script'",
        "\"text/python\"",
        "\"text/python3\"",
        "\"webworker\"",
        "\"webworker script has no attribute 'id'\"",
        "'__main__'",
        "\"\"",
        "' : '",
        "'Javascript error'",
        "''",
        "'info'",
        "'\\n'",
        "': '",
        "'write'",
        "\"VFS\"",
        "\"Brython error : Found 2 scripts with the \"",
        "\"same id '\"",
        "\"'\"",
        "''",
        "\"text/python\"",
        "\"text/python3\"",
        "'__main__'",
        "'__main__'",
        "'__main__'",
        "''",
        "\".py\"",
        "\".\"",
        "\".\"",
        "\"\"",
        "\"precompile\"",
        "\".\"",
        "\".\"",
        "\",\"",
        "'bizarre'",
        "\"imports\"",
        "\",\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "\".\"",
        "\".py\"",
        "\"modules\"",
        "\"readwrite\"",
        "\"modules\"",
        "\"name\"",
        "\"content\"",
        "\"imports\"",
        "\"origin\"",
        "\"timestamp\"",
        "\"source_ts\"",
        "\"is_package\"",
        "\"store precompiled\"",
        "\"package\"",
        "'precompile'",
        "'cache module '",
        "\"modules\"",
        "\"readonly\"",
        "\"modules\"",
        "'error'",
        "\"brython-cache\"",
        "\"modules\"",
        "'create object store'",
        "\"upgrade needed\"",
        "\"modules\"",
        "\"keyPath\"",
        "\"name\"",
        "\"version changed\"",
        "\"db opened\"",
        "\"modules\"",
        "\"keyPath\"",
        "\"name\"",
        "\"using indexedDB for stdlib modules cache\"",
        "\"modules\"",
        "\"readwrite\"",
        "\"modules\"",
        "\"load from cache\"",
        "\"done\"",
        "\"upgrade needed\"",
        "\"modules\"",
        "\"keyPath\"",
        "\"name\"",
        "'could not open indexedDB database'",
        "\"file\"",
        "''",
        "'?'",
        "\"GET\"",
        "\" not found\"",
        "\"can't load external script at \"",
        "\" (Ajax calls not supported with protocol file:///)\"",
        "\"\\nvar $locals_\"",
        "\"_\"",
        "\" = $module\"",
        "'bizarre'",
        "\".py\"",
        "\"bizarre\"",
        "\"modules\"",
        "\"readwrite\"",
        "\"modules\"",
        "\"delete outdated\"",
        "'precompile'",
        "'remove outdated '",
        "' from cache'",
        "'precompile'",
        "\"close\"",
        "\"execute\"",
        "\"_\"",
        "\"$locals_\"",
        "'Javascript error'",
        "\"too much recursion\"",
        "''",
        "\"handle error\"",
        "'info'",
        "'SyntaxError'",
        "'IndentationError'",
        "'\\n    '",
        "' '",
        "'^'",
        "'\\n'",
        "': '",
        "'\\n'",
        "': '",
        "\"\"",
        "'write'",
        "'flush'",
        "\"undef\"",
        "\".py\"",
        "\"object\"",
        "\"add\"",
        "\"sub\"",
        "\"mul\"",
        "\"truediv\"",
        "\"floordiv\"",
        "\"mod\"",
        "\"pow\"",
        "\"lshift\"",
        "\"rshift\"",
        "\"and\"",
        "\"xor\"",
        "\"or\"",
        "\"+\"",
        "\"-\"",
        "\"*\"",
        "\"/\"",
        "\"//\"",
        "\"%\"",
        "\"**\"",
        "\"<<\"",
        "\">>\"",
        "\"&\"",
        "\"^\"",
        "\"|\"",
        "\"$\"",
        "\"$\"",
        "\"__mro__\"",
        "\"$$\"",
        "\"$\"",
        "\"__format__\"",
        "\"self\"",
        "\"spec\"",
        "\"\"",
        "\"non-empty format string passed to object.__format__\"",
        "\"__str__\"",
        "\"attr\"",
        "\"de\"",
        "\"klass\"",
        "\"__class__\"",
        "\"found in\"",
        "\"res is method\"",
        "\"bizarre\"",
        "\"get\"",
        "\"__get__\"",
        "\"__get__\"",
        "'error in get.apply'",
        "\"get attr\"",
        "\"of\"",
        "''",
        "\"object\"",
        "\"function\"",
        "\"function\"",
        "\"__new__\"",
        "\"staticmethod\"",
        "\"res\"",
        "\"res1\"",
        "\"function\"",
        "\"staticmethod\"",
        "\".\"",
        "\"no $infos\"",
        "\".\"",
        "\"return method\"",
        "\"__getattr__\"",
        "\"__getattr__\"",
        "\"__getattr__\"",
        "\"descriptor '__init__' of 'object' \"",
        "\"object needs an argument\"",
        "\"object.__new__(): not enough arguments\"",
        "\"__init__\"",
        "\"object() takes no parameters\"",
        "\"__eq__\"",
        "\"_reconstructor\"",
        "\"object.__reduce__, d\"",
        "\"__new__\"",
        "\"__newobj__\"",
        "\"__newobj__\"",
        "\"no dict\"",
        "\"__class__\"",
        "\"$\"",
        "\"<class 'object'>\"",
        "\"<class '\"",
        "\"'>\"",
        "\"$\"",
        "\"builtins\"",
        "\"<\"",
        "\".\"",
        "\" object>\"",
        "\"<\"",
        "\" object>\"",
        "\"can't set attributes of built-in/extension type 'object'\"",
        "\"'object' object has no attribute '\"",
        "\"'\"",
        "\"'object' object attribute '\"",
        "\"' is read-only\"",
        "\"$$\"",
        "\"method object.setattr\"",
        "\"__repr__\"",
        "\"builtins\"",
        "\"name '\"",
        "\"' is not defined\"",
        "\"metaclass\"",
        "\"__mro_entries__\"",
        "\"metaclass conflict: the \"",
        "\"metaclass of a derived class must be a (non-\"",
        "\"strict) subclass of the metaclasses of all its bases\"",
        "\"__prepare__\"",
        "\"__setitem__\"",
        "\"__annotations__\"",
        "\"$\"",
        "\"$$\"",
        "\"__orig_bases__\"",
        "\"__getitem__\"",
        "\"function\"",
        "\"string\"",
        "\"__setattr__\"",
        "\"__new__\"",
        "\"$\"",
        "\"$$\"",
        "\"function\"",
        "\"__init__\"",
        "\"__init_subclass__\"",
        "\"kw\"",
        "\"kw\"",
        "\"__init_subclass__\"",
        "\"kw\"",
        "\"Can't instantiate abstract class \"",
        "\"interface with abstract methods \"",
        "\", \"",
        "\"$$\"",
        "\"\"",
        "\"type\"",
        "\"__new__\"",
        "\"__init__\"",
        "\"__annotations__\"",
        "\"__bases__\"",
        "\"__class__\"",
        "\"__doc__\"",
        "\"__setattr__\"",
        "\"__setattr__\"",
        "\"__setattr__\"",
        "\"__delattr__\"",
        "\"__delattr__\"",
        "\"__delattr__\"",
        "\"attr\"",
        "\"of\"",
        "\"\"",
        "\"data descriptor\"",
        "\"search in meta\"",
        "\"found in meta\"",
        "\"function\"",
        "\".\"",
        "\"\"",
        "\"res\"",
        "\".\"",
        "\"function\"",
        "\"warning: no attribute $infos for\"",
        "\"klass\"",
        "\"attr\"",
        "\"res is function\"",
        "\"__new__\"",
        "\"staticmethod\"",
        "\"__class_getitem__\"",
        "\"return res\"",
        "\"__init_subclass__\"",
        "\"cls\"",
        "\"args\"",
        "\"kwargs\"",
        "\"__init_subclass__() takes no keyword arguments\"",
        "\"staticmethod\"",
        "\"type\"",
        "\"$$\"",
        "\"\"",
        "\"__module__\"",
        "\"__set_name__\"",
        "\"function\"",
        "\"__defaults__\"",
        "\"no $infos\"",
        "\"builtins\"",
        "\"$\"",
        "\".\"",
        "\"<class '\"",
        "\"'>\"",
        "\"type.__qualname__\"",
        "\"function\"",
        "\"Object passed as base class is not a class\"",
        "\"inconsistent hierarchy, no C3 MRO is possible\"",
        "\"builtins\"",
        "\"wrapper_descriptor\"",
        "\"builtins\"",
        "\"Can't instantiate abstract class interface \"",
        "\"with abstract methods\"",
        "\"__new__\"",
        "\"__init__\"",
        "\"__init__\"",
        "\"object() takes no parameters\"",
        "\"__call__\"",
        "\"method_wrapper\"",
        "\"<method '\"",
        "\"' of function object>\"",
        "\"member_descriptor\"",
        "\"<member '\"",
        "\"' of '\"",
        "\"' objects>\"",
        "\"builtins\"",
        "\"method\"",
        "\"__code__\"",
        "\"<bound method \"",
        "\" of \"",
        "\">\"",
        "\"__class__\"",
        "\"__class__ assignment only supported \"",
        "\"for heap types or ModuleType subclasses\"",
        "\"'method' object has no attribute '\"",
        "\"'\"",
        "\"builtins\"",
        "\"method_descriptor\"",
        "\"classmethod_descriptor\"",
        "'undefined'",
        "\"function\"",
        "\"lambda_\"",
        "\"<lambda>\"",
        "\"/\"",
        "\"*\"",
        "\"() takes \"",
        "\" positional argument\"",
        "\"s\"",
        "\"\"",
        "\" but more were given\"",
        "\"$$\"",
        "\"() got an unexpected keyword argument '\"",
        "\"'\"",
        "\"() got multiple values for argument '\"",
        "\"'\"",
        "\"() got an \"",
        "\"unexpected keyword argument '\"",
        "\"'\"",
        "\"'\"",
        "\"'\"",
        "\" missing 1 positional argument: \"",
        "\" missing \"",
        "\" positional arguments: \"",
        "\" and \"",
        "\"() missing \"",
        "\" positional argument\"",
        "\"s\"",
        "\"\"",
        "\": \"",
        "\"() takes \"",
        "\" positional argument\"",
        "\"s\"",
        "\"\"",
        "\" but more were given\"",
        "\"number\"",
        "\"string\"",
        "\"boolean\"",
        "\"function\"",
        "\"object\"",
        "\"x\"",
        "\"=[]\\n\"",
        "\"\"",
        "\"\"",
        "\" \"",
        "\":\\n\"",
        "\" \"",
        "\"x\"",
        "\".append(\"",
        "\")\\n\"",
        "\"res\"",
        "\"={}\\n\"",
        "\"\"",
        "\"\"",
        "\"    \"",
        "\":\\n\"",
        "\"    \"",
        "\".update({\"",
        "\"})\"",
        "','",
        "\"dc\"",
        "'\\nreturn $locals[\"'",
        "'\"]\\n'",
        "\"(function($locals_\"",
        "\"){\"",
        "\"})({$dict_comp: true})\"",
        "\"set_comp\"",
        "\"__ge\"",
        "\"def \"",
        "\"():\\n\"",
        "\"\"",
        "\"\"",
        "\" \"",
        "\":\\n\"",
        "\" \"",
        "\"yield (\"",
        "\")\"",
        "','",
        "\"\\n\"",
        "\"\\n\"",
        "\"\\nvar $res = $locals_\"",
        "'[\"'",
        "'\"]();\\n$res.is_gen_expr = true;\\nreturn $res\\n'",
        "\"(function($locals_\"",
        "\"){\"",
        "\"})({})\\n\"",
        "\"__ge\"",
        "\"clear ns\"",
        "\"_\"",
        "\"$$\"",
        "\"class\"",
        "\"name '\"",
        "\"' is not defined\"",
        "\"local variable '\"",
        "\"' referenced before assignment\"",
        "\"name '\"",
        "\"' is not defined\"",
        "\"local variable '\"",
        "\"' referenced before assignment\"",
        "\"name '\"",
        "\"' is not defined\"",
        "\"local variable '\"",
        "\"' referenced before assignment\"",
        "\"free variable '\"",
        "\"' referenced before assignment in enclosing scope\"",
        "\"free variable '\"",
        "\"' referenced before assignment in enclosing scope\"",
        "\"number\"",
        "\"object\"",
        "\"list index out of range\"",
        "\"slice step cannot be zero\"",
        "\"string\"",
        "\"string\"",
        "\"list\"",
        "\" index out of range\"",
        "\"number\"",
        "\"string\"",
        "\"string\"",
        "\"number\"",
        "\"__class_getitem__\"",
        "\"__getitem__\"",
        "\"__getitem__\"",
        "\"'\"",
        "\"' object is not subscriptable\"",
        "\"list assignment index out of range\"",
        "\"slice step cannot be zero\"",
        "\"attempt to assign sequence of size \"",
        "\" to extended slice of size \"",
        "\"number\"",
        "\"list assignment index out of range\"",
        "\"__setitem__\"",
        "\"number\"",
        "\"string\"",
        "\"string\"",
        "\"__getitem__\"",
        "\"__iadd__\"",
        "\"__setitem__\"",
        "\"__getitem__\"",
        "\"__add__\"",
        "\"\"",
        "\"-=\"",
        "\"sub\"",
        "\"*=\"",
        "\"mul\"",
        "\"$B.augm_item_\"",
        "\"=\"",
        "\"__getitem__\"",
        "\"string\"",
        "\"() keywords must be strings\"",
        "\"() got multiple values for argument '\"",
        "\"'\"",
        "\"__contains__\"",
        "\"__eq__\"",
        "\"__getitem__\"",
        "\"'\"",
        "\"' object is not iterable\"",
        "\"__eq__\"",
        "\"function\"",
        "\"function\"",
        "\"'\"",
        "\"' object is not callable\"",
        "\"__call__\"",
        "\"'\"",
        "\"' object is not callable\"",
        "\"io\"",
        "\"\"",
        "\"\"",
        "\"function\"",
        "\"dictionary changed size during iteration\"",
        "\"StopIteration\"",
        "\"builtins\"",
        "\"unsupported operand type(s) for \"",
        "\": '\"",
        "\"' and '\"",
        "\"'\"",
        "\"add\"",
        "\"sub\"",
        "\"mul\"",
        "\"truediv\"",
        "\"floordiv\"",
        "\"mod\"",
        "\"pow\"",
        "\"lshift\"",
        "\"rshift\"",
        "\"and\"",
        "\"xor\"",
        "\"or\"",
        "\"+\"",
        "\"-\"",
        "\"*\"",
        "\"/\"",
        "\"//\"",
        "\"%\"",
        "\"**\"",
        "\"<<\"",
        "\">>\"",
        "\"&\"",
        "\"^\"",
        "\"|\"",
        "\"__\"",
        "\"__\"",
        "\"__\"",
        "\"__\"",
        "\"__r\"",
        "\"__\"",
        "\"var _b_ = $B.builtins\"",
        "\"var \"",
        "'=_b_[\"'",
        "'\"]'",
        "\";\"",
        "\"number\"",
        "\"boolean\"",
        "\"__int__\"",
        "\"__index__\"",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "\"__complex__\"",
        "\"__float__\"",
        "\"__index__\"",
        "\"__int__\"",
        "\"returned non-\"",
        "\"(type \"",
        "\")\"",
        "\"boolean\"",
        "\"number\"",
        "\"object\"",
        "\"__index__\"",
        "\"function\"",
        "\"__call__\"",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "\"boolean\"",
        "\"number\"",
        "\"object\"",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "'call'",
        "'exception'",
        "'line'",
        "'line'",
        "'return'",
        "\"empty stack\"",
        "\"empty stack\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"string\"",
        "\"string\"",
        "\"__add__\"",
        "\"unsupported operand type(s) for \"",
        "\"+: '\"",
        "\"' and '\"",
        "\"'\"",
        "\"add\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"nan\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"nan\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"__lt__\"",
        "\"__gt__\"",
        "\"__le__\"",
        "\"__ge__\"",
        "\"__gt__\"",
        "\"__lt__\"",
        "\"__ge__\"",
        "\"__le__\"",
        "\"__lt__\"",
        "\"<\"",
        "\"__le__\"",
        "\"<=\"",
        "\"__gt__\"",
        "\">\"",
        "\"__ge__\"",
        "\">=\"",
        "\"number\"",
        "\"number\"",
        "\"__eq__\"",
        "\"__ne__\"",
        "\"__le__\"",
        "\"__lt__\"",
        "\"__ge__\"",
        "\"__gt__\"",
        "\"__eq__\"",
        "\"__ne__\"",
        "\"'\"",
        "\"' not supported between instances of '\"",
        "\"' and '\"",
        "\"'\"",
        "\"__eq__\"",
        "\"__ne__\"",
        "\"'\"",
        "\"' not supported between instances of '\"",
        "\"' and '\"",
        "\"'\"",
        "\"-\"",
        "\"^\"",
        "\"*\"",
        "\"__\"",
        "\"__\"",
        "\"unsupported operand type(s) \"",
        "\"for \"",
        "\": '\"",
        "\"' and '\"",
        "\"'\"",
        "\"__\"",
        "\"__\"",
        "\"__r\"",
        "\"__\"",
        "\"'\"",
        "\"' not supported between instances of '\"",
        "\"' and '\"",
        "\"'\"",
        "\"__r\"",
        "\"__\"",
        "\"'\"",
        "\"' not supported between instances of '\"",
        "\"' and '\"",
        "\"'\"",
        "''",
        "''",
        "'>'",
        "'gt'",
        "'>='",
        "'ge'",
        "'<'",
        "'lt'",
        "'<='",
        "'le'",
        "'>'",
        "'lt'",
        "'>='",
        "'le'",
        "'<'",
        "'gt'",
        "'<='",
        "'ge'",
        "\"kw\"",
        "\"() takes no argument\"",
        "\" (\"",
        "\" given)\"",
        "\"() takes exactly \"",
        "\" argument\"",
        "''",
        "'s'",
        "\" (\"",
        "\" given)\"",
        "\"x undef\"",
        "\"() takes no keyword arguments\"",
        "\"NoneType\"",
        "\"builtins\"",
        "'None'",
        "'None'",
        "'ge'",
        "'gt'",
        "'le'",
        "'lt'",
        "'__'",
        "'__'",
        "'function'",
        "\"<method-wrapper \"",
        "\" of NoneType object>\"",
        "\"builtins\"",
        "'abs'",
        "'abs'",
        "\"__abs__\"",
        "\"Bad operand type for abs(): '\"",
        "\"'\"",
        "'all'",
        "'all'",
        "'any'",
        "'any'",
        "'ascii'",
        "'ascii'",
        "''",
        "'\\\\x'",
        "\"0\"",
        "'\\\\u'",
        "\"\"",
        "'0b'",
        "'0o'",
        "'0x'",
        "'invalid base:'",
        "'-'",
        "'Error, argument must be an integer or'",
        "' contains an __index__ function'",
        "'-'",
        "'__index__'",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "'bin'",
        "'bin'",
        "'sys'",
        "'breakpointhook'",
        "'lost sys.breakpointhook'",
        "'callable'",
        "'callable'",
        "'__call__'",
        "'chr'",
        "'chr'",
        "'Outside valid range'",
        "\"classmethod\"",
        "'classmethod'",
        "'classmethod'",
        "\".\"",
        "\"builtins\"",
        "\"code\"",
        "'<code object '",
        "', file '",
        "'>'",
        "\"co_code\"",
        "'co_code'",
        "\"builtins\"",
        "'compile'",
        "'source'",
        "'filename'",
        "'mode'",
        "'flags'",
        "'dont_inherit'",
        "'optimize'",
        "'$exec_'",
        "\"<module>\"",
        "\"single\"",
        "\"\\n\"",
        "\"\\n\"",
        "\" \"",
        "\"unexpected EOF while parsing\"",
        "'delattr'",
        "'delattr'",
        "'string'",
        "\"attribute name must be string, not '\"",
        "\"'\"",
        "'__delattr__'",
        "'$'",
        "'$'",
        "'dir'",
        "'dir'",
        "\"__dir__\"",
        "'__dir__'",
        "'$'",
        "'__class__'",
        "'divmod'",
        "'divmod'",
        "\"__divmod__\"",
        "'__floordiv__'",
        "'__mod__'",
        "\"enumerate\"",
        "\"enumerate\"",
        "'iterable'",
        "'start'",
        "\"iterable\"",
        "\"start\"",
        "'enumerate iterator'",
        "\"builtins\"",
        "'$$'",
        "'$$'",
        "\"eval\"",
        "\"src\"",
        "\"globals\"",
        "\"locals\"",
        "\"mode\"",
        "\"eval\"",
        "\"single\"",
        "\"<console>\"",
        "\"<stdin>\"",
        "\">\"",
        "'_'",
        "'_'",
        "'string'",
        "\"eval() arg 1 must be a string, bytes \"",
        "\"or code object\"",
        "'$exec_'",
        "'$exec_'",
        "\"$locals_\"",
        "\" = current_frame[1]\"",
        "\"exec() globals must be a dict, not \"",
        "'var $locals_'",
        "' = {}\\nvar $locals_'",
        "' = {}'",
        "'var $locals_'",
        "' = gobj;'",
        "\"$\"",
        "\"$locals_\"",
        "\" = obj\"",
        "\"$locals_\"",
        "\" = _globals.$jsobj\"",
        "'$locals_'",
        "'[\"'",
        "'\"] = items.'",
        "'error setting'",
        "'var $locals_'",
        "' = $locals_'",
        "''",
        "\"$\"",
        "\"$$\"",
        "'$locals_'",
        "\" = obj\"",
        "'$locals_'",
        "'[\"'",
        "'\"] = items.'",
        "'error setting'",
        "\"$locals_\"",
        "\".$exec_locals = true\"",
        "\"$locals_\"",
        "\".$src = src\"",
        "'expr'",
        "'list_or_tuple'",
        "'op'",
        "'ternary'",
        "\"eval\"",
        "\"eval() argument must be an expression\"",
        "'<string>'",
        "\"eval\"",
        "\"node_js\"",
        "\"\\n\"",
        "\";\"",
        "\"return (\"",
        "\")\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"single\"",
        "\"<stdin>\"",
        "\"<console>\"",
        "\"single\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "'$'",
        "\"$src\"",
        "'$'",
        "\"$\"",
        "\"$$\"",
        "\"$src\"",
        "\"exec\"",
        "\"src\"",
        "\"globals\"",
        "\"locals\"",
        "\"exec\"",
        "\"Use exit() or Ctrl-Z plus Return to exit\"",
        "\"filter\"",
        "'filter'",
        "'filter'",
        "\"builtins\"",
        "\"format\"",
        "\"value\"",
        "\"format_spec\"",
        "''",
        "'__format__'",
        "\"__format__ is not implemented \"",
        "\"for object '\"",
        "\"'\"",
        "\"bad operand type for unary #: '\"",
        "\"'\"",
        "'__neg__'",
        "'#'",
        "'-'",
        "'__pos__'",
        "'#'",
        "'+'",
        "'__invert__'",
        "'#'",
        "'~'",
        "'__call__'",
        "\"'\"",
        "\"'\"",
        "' object is not callable'",
        "'$'",
        "\"'\"",
        "\"' object has no attribute '\"",
        "\"'\"",
        "\"getattr\"",
        "\"obj\"",
        "\"attr\"",
        "\"_default\"",
        "\"get attr\"",
        "\"of undefined\"",
        "\"$getattr\"",
        "\"function\"",
        "\"__dict__\"",
        "\"__get__\"",
        "\"attr\"",
        "\"of\"",
        "\"class\"",
        "\"isclass\"",
        "'string'",
        "'number'",
        "\"no class\"",
        "\"function\"",
        "'object has no attribute '",
        "'__call__'",
        "'function'",
        "\"__call__\"",
        "'__class__'",
        "'__dict__'",
        "\"__dict__\"",
        "\"__func__\"",
        "'__doc__'",
        "'__mro__'",
        "'__subclasses__'",
        "'$$new'",
        "'function'",
        "'__module__'",
        "\"native class\"",
        "\"__doc__\"",
        "\"object attr\"",
        "\"obj[attr]\"",
        "'function'",
        "'__new__'",
        "\"staticmethod\"",
        "\"staticmethod\"",
        "\".\"",
        "\"no mro, klass\"",
        "'__getattribute__'",
        "'function'",
        "' is not a function '",
        "\"attr_func is odga\"",
        "\"\"",
        "\"return\"",
        "''",
        "\"result of attr_func\"",
        "'globals'",
        "'hasattr'",
        "'hasattr'",
        "'hash'",
        "'hash'",
        "\"string\"",
        "'__hash__'",
        "\"unhashable type: '\"",
        "\"'\"",
        "'hash'",
        "'__eq__'",
        "\"unhashable type: '\"",
        "\"'\"",
        "'hash'",
        "'/'",
        "'/builtins_docstrings.js'",
        "'help'",
        "'string'",
        "''",
        "'string'",
        "\"pydoc\"",
        "\"pydoc\"",
        "\"help\"",
        "\"__call__\"",
        "'__doc__'",
        "''",
        "\"Type help() for interactive help, or help(object) \"",
        "\"for help about object.\"",
        "'hex'",
        "'hex'",
        "'id'",
        "'id'",
        "'__hash__'",
        "'__import__'",
        "'name'",
        "'globals'",
        "'locals'",
        "'fromlist'",
        "'level'",
        "''",
        "''",
        "\"sys\"",
        "\"sys\"",
        "\"sys\"",
        "\"sys\"",
        "'isinstance'",
        "'isinstance'",
        "\"isinstance() arg 2 must be a type \"",
        "\"or tuple of types\"",
        "\"string\"",
        "\"number\"",
        "\"boolean\"",
        "'string'",
        "'number'",
        "'__instancecheck__'",
        "'issubclass'",
        "'issubclass'",
        "\"issubclass() arg 1 must be a class\"",
        "'__subclasscheck__'",
        "\"iterator\"",
        "''",
        "''",
        "\"callable_iterator\"",
        "\"__eq__\"",
        "'__iter__'",
        "'__getitem__'",
        "\"'\"",
        "\"' object is not iterable\"",
        "'__next__'",
        "\"iter() returned non-iterator of type '\"",
        "\"'\"",
        "'iter'",
        "'obj'",
        "'args'",
        "'kw'",
        "'len'",
        "'len'",
        "'__len__'",
        "\"object of type '\"",
        "\"' has no len()\"",
        "'locals'",
        "\"map\"",
        "'map'",
        "'func'",
        "'it1'",
        "'args'",
        "\"builtins\"",
        "'min'",
        "'__gt__'",
        "\"max\"",
        "\" expected 1 arguments, got 0\"",
        "'kw'",
        "'key'",
        "'$$default'",
        "\"'\"",
        "\"' is an invalid keyword argument for this function\"",
        "\" expected 1 argument, got 0\"",
        "\"() arg is an empty sequence\"",
        "\"Cannot specify a default for \"",
        "\"() with multiple positional arguments\"",
        "'__gt__'",
        "'memoryview'",
        "'memoryview'",
        "'memoryview'",
        "'B'",
        "\"memoryview: a bytes-like object \"",
        "\"is required, not '\"",
        "\"'\"",
        "'__eq__'",
        "\"I\"",
        "\"B\"",
        "\"B\"",
        "\"I\"",
        "\"I\"",
        "\"memoryview: length is not \"",
        "\"a multiple of itemsize\"",
        "''",
        "\"I\"",
        "\"builtins\"",
        "'__lt__'",
        "'next'",
        "\"next\"",
        "'obj'",
        "'def'",
        "\"__next__\"",
        "\"'\"",
        "\"' object is not an iterator\"",
        "\"NotImplementedType\"",
        "\"NotImplemented\"",
        "'oct'",
        "'oct'",
        "'ord'",
        "'ord'",
        "'string'",
        "'ord() expected a character, but '",
        "'string of length '",
        "' found'",
        "'ord() expected a character, but '",
        "'string of length '",
        "' found'",
        "'ord() expected a character, but '",
        "'string of length '",
        "' found'",
        "'ord() expected a character, but '",
        "' was found'",
        "'pow'",
        "'x'",
        "'y'",
        "'mod'",
        "'__pow__'",
        "\"pow() 3rd argument not allowed \"",
        "\"unless all arguments are integers\"",
        "'__pow__'",
        "'print'",
        "'args'",
        "'kw'",
        "'kw'",
        "'end'",
        "'end'",
        "'\\n'",
        "'end'",
        "'sep'",
        "'sep'",
        "' '",
        "'sep'",
        "'file'",
        "'file'",
        "'args'",
        "\"\\u0007\"",
        "\"g\"",
        "\"\"",
        "\"(.)\\b\"",
        "\"g\"",
        "\"\"",
        "'write'",
        "'flush'",
        "'print'",
        "\"property\"",
        "\"\"",
        "\"unreadable attribute\"",
        "\"can't set attribute\"",
        "'__call__'",
        "\"builtins\"",
        "\"Use quit() or Ctrl-Z plus Return to exit\"",
        "'repr'",
        "'repr'",
        "\"__repr__\"",
        "\"reversed\"",
        "'reversed'",
        "'reversed'",
        "'__reversed__'",
        "'__getitem__'",
        "\"argument to reversed() must be a sequence\"",
        "''",
        "\"builtins\"",
        "'round'",
        "'number'",
        "'ndigits'",
        "\"__round__\"",
        "\"type \"",
        "\" doesn't define __round__ method\"",
        "\"cannot convert float infinity to integer\"",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "'setattr'",
        "'obj'",
        "'attr'",
        "'value'",
        "'string'",
        "\"setattr(): attribute name must be string\"",
        "'$$'",
        "'__dict__'",
        "\"__dict__ must be set to a dictionary, \"",
        "\"not a '\"",
        "\"'\"",
        "\"__class__\"",
        "\"builtins\"",
        "\"__class__ assignement only \"",
        "\"supported for heap types or ModuleType subclasses\"",
        "\"builtins\"",
        "\"__class__ assignment: '\"",
        "\"' object layout differs from '\"",
        "\"'\"",
        "\"__doc__\"",
        "\"set attr\"",
        "\"to\"",
        "\"obj is class\"",
        "\"__init__\"",
        "\"__new__\"",
        "\"__bases__\"",
        "\"after setattr\"",
        "'set attr'",
        "'of obj'",
        "'class'",
        "'set attr'",
        "'found in class'",
        "'__set__'",
        "'function'",
        "'function'",
        "'readonly attribute'",
        "\"__module__\"",
        "\"__\"",
        "\"_\"",
        "\"_\"",
        "\"'\"",
        "\"' object has no attribute '\"",
        "\"'\"",
        "\"attr\"",
        "\"use _setattr\"",
        "\"no setattr, obj\"",
        "'sorted'",
        "'iterable'",
        "'kw'",
        "\"staticmethod\"",
        "\"builtins\"",
        "'sum'",
        "'iterable'",
        "'start'",
        "\"TypeError: sum() can't sum bytes\"",
        "\" [use b''.join(seq) instead]\"",
        "'__add__'",
        "\"super\"",
        "\"__repr__\"",
        "\"__str__\"",
        "\"super\"",
        "''",
        "\"staticmethod\"",
        "\"calling super\"",
        "\"res\"",
        "\".\"",
        "\"object 'super' has no attribute '\"",
        "\"'\"",
        "\"<super: <class '\"",
        "\"'>\"",
        "', <'",
        "' object>'",
        "', NULL'",
        "'>'",
        "\"builtins\"",
        "'vars'",
        "'obj'",
        "'__dict__'",
        "\"vars() argument must have __dict__ attribute\"",
        "\"Reader\"",
        "\"read\"",
        "\"self\"",
        "\"size\"",
        "'I/O operation on closed file'",
        "\"\\n\"",
        "\"make lines, binary\"",
        "\"readline\"",
        "\"self\"",
        "\"size\"",
        "'I/O operation on closed file'",
        "\"\\n\"",
        "''",
        "\"readlines\"",
        "\"self\"",
        "\"hint\"",
        "'I/O operation on closed file'",
        "''",
        "'I/O operation on closed file'",
        "\"builtins\"",
        "'_io.BufferedReader'",
        "'_io.TextIOWrapper'",
        "\"TextIOWrapper\"",
        "\"buffer\"",
        "\"encoding\"",
        "\"errors\"",
        "\"newline\"",
        "\"line_buffering\"",
        "\"write_through\"",
        "\"utf-8\"",
        "\"builtins\"",
        "'open'",
        "'file'",
        "'mode'",
        "'encoding'",
        "'r'",
        "'utf-8'",
        "'args'",
        "'kw'",
        "'var '",
        "'=$ns[\"'",
        "'\"]'",
        "'w'",
        "\"Browsers cannot write on disk\"",
        "'r'",
        "'rb'",
        "\"Invalid mode '\"",
        "\"'\"",
        "'b'",
        "\"file\"",
        "\"open() in binary mode is not supported\"",
        "'Could not open file '",
        "' : status '",
        "'Could not open file '",
        "' : error '",
        "'?foo='",
        "'GET'",
        "'text/plain; charset=utf-8'",
        "\"cannot load by Ajax call with protocol 'file'\"",
        "\"invalid argument for open(): \"",
        "\"zip\"",
        "'zip'",
        "'args'",
        "'kw'",
        "'args'",
        "'zip_iterator'",
        "\"builtins\"",
        "\"'\"",
        "\"' object attribute '\"",
        "\"' is read-only\"",
        "\"'\"",
        "\"' object has no attribute '\"",
        "\"'\"",
        "\"ellipsis\"",
        "'ge'",
        "'gt'",
        "'le'",
        "'lt'",
        "'__'",
        "'__'",
        "\"unorderable types: ellipsis() \"",
        "\" \"",
        "'function'",
        "\"<method-wrapper \"",
        "\" of Ellipsis object>\"",
        "\"function code\"",
        "\"function globals\"",
        "'function code'",
        "'function globals'",
        "'function'",
        "\"builtins\"",
        "\"__dict__\"",
        "\"can't deleted function __dict__\"",
        "\"no $infos\"",
        "\".\"",
        "'__code__'",
        "\"\"",
        "'__annotations__'",
        "\"__closure__\"",
        "\"__globals__\"",
        "'<function '",
        "'>'",
        "'<function '",
        "'>'",
        "\"__closure__\"",
        "\"readonly attribute\"",
        "\"__defaults__\"",
        "\"__defaults__ must be set to a tuple object\"",
        "\"cannot set attribute \"",
        "\" of \"",
        "\"cannot set attribute \"",
        "\" of \"",
        "\"builtins\"",
        "\"abs\"",
        "\"all\"",
        "\"any\"",
        "\"ascii\"",
        "\"bin\"",
        "\"breakpoint\"",
        "\"callable\"",
        "\"chr\"",
        "\"compile\"",
        "\"delattr\"",
        "\"dir\"",
        "\"divmod\"",
        "\"eval\"",
        "\"exec\"",
        "\"exit\"",
        "\"format\"",
        "\"getattr\"",
        "\"globals\"",
        "\"hasattr\"",
        "\"hash\"",
        "\"help\"",
        "\"hex\"",
        "\"id\"",
        "\"input\"",
        "\"isinstance\"",
        "\"issubclass\"",
        "\"iter\"",
        "\"len\"",
        "\"locals\"",
        "\"max\"",
        "\"min\"",
        "\"next\"",
        "\"oct\"",
        "\"open\"",
        "\"ord\"",
        "\"pow\"",
        "\"print\"",
        "\"quit\"",
        "\"repr\"",
        "\"round\"",
        "\"setattr\"",
        "\"sorted\"",
        "\"sum\"",
        "\"vars\"",
        "\"builtin_function_or_method\"",
        "'<built-in function '",
        "'>'",
        "\"builtins\"",
        "\"method_wrapper\"",
        "\"<method wrapper '\"",
        "\"' of function object>\"",
        "\"builtins\"",
        "\"wrapper_descriptor\"",
        "\"<slot wrapper '\"",
        "\"' of '\"",
        "\"' object>\"",
        "\"builtins\"",
        "\"bool\"",
        "\"bytearray\"",
        "\"bytes\"",
        "\"classmethod\"",
        "\"complex\"",
        "\"dict\"",
        "\"enumerate\"",
        "\"filter\"",
        "\"float\"",
        "\"frozenset\"",
        "\"int\"",
        "\"list\"",
        "\"map\"",
        "\"memoryview\"",
        "\"object\"",
        "\"property\"",
        "\"range\"",
        "\"reversed\"",
        "\"set\"",
        "\"slice\"",
        "\"staticmethod\"",
        "\"str\"",
        "\"super\"",
        "\"tuple\"",
        "\"type\"",
        "\"zip\"",
        "'Ellipsis'",
        "'False'",
        "'None'",
        "'True'",
        "'__debug__'",
        "'__import__'",
        "'copyright'",
        "'credits'",
        "'license'",
        "'NotImplemented'",
        "'open'",
        "'$url_open'",
        "'super'",
        "'$$super'",
        "'eval'",
        "'$$eval'",
        "'print'",
        "'$print'",
        "'builtins'",
        "'open'",
        "'print'",
        "'$$super'",
        "\"No active exception to reraise\"",
        "\"generator raised StopIteration\"",
        "\"generator raised StopIteration\"",
        "\"exceptions must derive from BaseException\"",
        "\"$\"",
        "\"<string>\"",
        "','",
        "\"\\n\"",
        "\",\"",
        "\"\\n\"",
        "' '",
        "\",\"",
        "\",\"",
        "\"$exec\"",
        "\"<module>\"",
        "\" line \"",
        "\"\\n\"",
        "\"  \"",
        "\"print stack ok\"",
        "\"\\n\"",
        "\"traceback\"",
        "'tb_frame'",
        "'tb_lineno'",
        "'tb_lasti'",
        "'tb_next'",
        "\"no stack\"",
        "\"last frame undef\"",
        "\"tb_frame\"",
        "\"tb_lineno\"",
        "\",\"",
        "\"tb_lasti\"",
        "\"<unknown>\"",
        "\",\"",
        "\"from filecache\"",
        "\"\\n\"",
        "\"no src for\"",
        "\"<unknown>\"",
        "\"tb_next\"",
        "\"builtins\"",
        "\"frame\"",
        "\"err \"",
        "\"$exec\"",
        "\"<string>\"",
        "\",\"",
        "','",
        "\"$exec\"",
        "\"<string>\"",
        "\"<module>\"",
        "'<dictcomp>'",
        "'<listcomp>'",
        "\"__ge\"",
        "\"<genexpr>\"",
        "\"set_comp\"",
        "\"<setcomp>\"",
        "\"<string>\"",
        "\"f_back\"",
        "\"clear\"",
        "\"f_trace\"",
        "'<frame object, file '",
        "', line '",
        "', code '",
        "'>'",
        "\"builtins\"",
        "\"BaseException\"",
        "\"builtins\"",
        "'('",
        "', '",
        "')'",
        "\"no class\"",
        "''",
        "''",
        "\"\\nJS stack:\\n\"",
        "\"\\n\"",
        "\"Traceback (most recent call last):\"",
        "','",
        "\"$\"",
        "\"<module>\"",
        "\"\\n  module \"",
        "\" line \"",
        "', in '",
        "\"__ge\"",
        "', in <genexpr>'",
        "\"set_comp\"",
        "', in <setcomp>'",
        "\"frame[4]\"",
        "', in <listcomp>'",
        "', in <dictcomp>'",
        "\"\\n\"",
        "\"\"",
        "\"\\n    \"",
        "\"src undef\"",
        "\"\\n  File \"",
        "\", line \"",
        "\"\\n    \"",
        "\"info\"",
        "\"infoWithInternal\"",
        "\"__traceback__\"",
        "\" has no attribute '\"",
        "\"'\"",
        "\"//placeholder//\"",
        "\"BaseException\"",
        "\"BaseException\"",
        "\"Javascript exception:\"",
        "\"recursion error ?\"",
        "\"Internal Javascript error: \"",
        "\"too much recursion\"",
        "\"ReferenceError\"",
        "\"NameError\"",
        "\"$$\"",
        "\"\"",
        "\"InternalError\"",
        "\"RuntimeError\"",
        "\"<Javascript \"",
        "\">: \"",
        "\"<\"",
        "\">\"",
        "\"exc class undefined\"",
        "\"test is js exc is recursion error\"",
        "\"\"",
        "\"\"",
        "\":\"",
        "'InternalError'",
        "'too much recursion'",
        "'Error'",
        "'Out of stack space'",
        "'RangeError'",
        "'Maximum call stack size exceeded'",
        "\"\"",
        "\"\"",
        "\"//placeholder//\"",
        "\"_b_.\"",
        "' = {__class__:_b_.type, '",
        "'__mro__: [_b_.'",
        "\"].concat(parent.__mro__), $is_class: true,\"",
        "\"$infos: {__name__:'\"",
        "\"'}}\"",
        "\"_b_.\"",
        "\".$factory = \"",
        "\"_b_.\"",
        "'.$factory.$infos = {__name__: \"'",
        "'\", __qualname__: \"'",
        "'\"}'",
        "\"$B.set_func_names(_b_.\"",
        "\", 'builtins')\"",
        "\";\"",
        "\"--err\"",
        "\"SystemExit\"",
        "\"KeyboardInterrupt\"",
        "\"GeneratorExit\"",
        "\"Exception\"",
        "\"StopIteration\"",
        "\"err.value = arguments[0]\"",
        "\"StopAsyncIteration\"",
        "\"err.value = arguments[0]\"",
        "\"ArithmeticError\"",
        "\"AssertionError\"",
        "\"AttributeError\"",
        "\"BufferError\"",
        "\"EOFError\"",
        "\"ImportError\"",
        "\"err.name = arguments[0]\"",
        "\"LookupError\"",
        "\"MemoryError\"",
        "\"NameError\"",
        "\"OSError\"",
        "\"ReferenceError\"",
        "\"RuntimeError\"",
        "\"SyntaxError\"",
        "\"err.msg = arguments[0]\"",
        "\"SystemError\"",
        "\"TypeError\"",
        "\"ValueError\"",
        "\"Warning\"",
        "\"FloatingPointError\"",
        "\"OverflowError\"",
        "\"ZeroDivisionError\"",
        "\"ModuleNotFoundError\"",
        "\"err.name = arguments[0]\"",
        "\"IndexError\"",
        "\"KeyError\"",
        "\"UnboundLocalError\"",
        "\"BlockingIOError\"",
        "\"ChildProcessError\"",
        "\"ConnectionError\"",
        "\"FileExistsError\"",
        "\"FileNotFoundError\"",
        "\"InterruptedError\"",
        "\"IsADirectoryError\"",
        "\"NotADirectoryError\"",
        "\"PermissionError\"",
        "\"ProcessLookupError\"",
        "\"TimeoutError\"",
        "\"BrokenPipeError\"",
        "\"ConnectionAbortedError\"",
        "\"ConnectionRefusedError\"",
        "\"ConnectionResetError\"",
        "\"NotImplementedError\"",
        "\"RecursionError\"",
        "\"IndentationError\"",
        "\"TabError\"",
        "\"UnicodeError\"",
        "\"UnicodeDecodeError\"",
        "\"UnicodeEncodeError\"",
        "\"UnicodeTranslateError\"",
        "\"DeprecationWarning\"",
        "\"PendingDeprecationWarning\"",
        "\"RuntimeWarning\"",
        "\"SyntaxWarning\"",
        "\"UserWarning\"",
        "\"FutureWarning\"",
        "\"ImportWarning\"",
        "\"UnicodeWarning\"",
        "\"BytesWarning\"",
        "\"ResourceWarning\"",
        "\"EnvironmentError\"",
        "\"IOError\"",
        "\"VMSError\"",
        "\"WindowsError\"",
        "\",\"",
        "\"\\n\"",
        "\"builtins\"",
        "\"range\"",
        "\"readonly attribute\"",
        "\"number\"",
        "\"range object index out of range\"",
        "\"range_iterator\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"\"",
        "\"\"",
        "\"range(\"",
        "\", \"",
        "\", \"",
        "\")\"",
        "\"readonly attribute\"",
        "\"__eq__\"",
        "\"index\"",
        "\"self\"",
        "\"other\"",
        "\"__eq__\"",
        "\" not in range\"",
        "' not in range'",
        "\" not in range\"",
        "\"range\"",
        "\"start\"",
        "\"stop\"",
        "\"step\"",
        "\"range expected 1 arguments, got 0\"",
        "\"number\"",
        "\"range arg 3 must not be zero\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"slice\"",
        "\"slice(\"",
        "\", \"",
        "\", \"",
        "\")\"",
        "\"readonly attribute\"",
        "\"start\"",
        "\"stop\"",
        "\"step\"",
        "\"slice indices must be \"",
        "\"integers or None or have an __index__ method\"",
        "'slice step cannot be zero'",
        "\"indices\"",
        "\"self\"",
        "\"length\"",
        "\"length should not be negative\"",
        "\"slice\"",
        "\"start\"",
        "\"stop\"",
        "\"step\"",
        "\"builtins\"",
        "\"tobytes\"",
        "\"object doesn't support the buffer protocol\"",
        "'\\r\\n \\t'",
        "\"Type str doesn't support the buffer API\"",
        "'l'",
        "\"builtins\"",
        "\"bytearray\"",
        "\"__delitem__\"",
        "\"clear\"",
        "\"copy\"",
        "\"count\"",
        "\"index\"",
        "\"pop\"",
        "\"remove\"",
        "\"reverse\"",
        "\"sort\"",
        "'bytearray_iterator'",
        "'bytearray('",
        "\")\"",
        "'an integer is required'",
        "\"byte must be in range(0, 256)\"",
        "'list index out of range'",
        "'an integer is required'",
        "\"byte must be in range(0, 256)\"",
        "\"can only assign an iterable\"",
        "'list indices must be integer, not '",
        "\"append takes exactly one argument (\"",
        "\" given)\"",
        "\"an integer is required\"",
        "\"byte must be in range(0, 256)\"",
        "\"insert takes exactly 2 arguments (\"",
        "\" given)\"",
        "\"an integer is required\"",
        "\"byte must be in range(0, 256)\"",
        "\"builtins\"",
        "\"bytes\"",
        "\"can't concat bytes to \"",
        "\"number\"",
        "\"bytes_iterator\"",
        "'__eq__'",
        "\"index out of range\"",
        "'__len__'",
        "'__len__'",
        "\"ascii\"",
        "\"strict\"",
        "\"ascii\"",
        "'__mul__'",
        "'self'",
        "'other'",
        "\"__new__\"",
        "\"cls\"",
        "\"source\"",
        "\"encoding\"",
        "\"errors\"",
        "\"utf-8\"",
        "\"strict\"",
        "\"string argument without an encoding\"",
        "\"'\"",
        "\"' object \"",
        "\"cannot be interpreted as an integer\"",
        "\"bytes must be in range\"",
        "\"(0, 256)\"",
        "\"\"",
        "'\\\\n'",
        "'0'",
        "''",
        "'\\\\x'",
        "\"\\\\\"",
        "\"\\\\\\\\\"",
        "\"'\"",
        "'\"'",
        "'b\"'",
        "'\"'",
        "\"b'\"",
        "\"'\"",
        "\"g\"",
        "\"\\\\'\"",
        "\"'\"",
        "'center'",
        "'self'",
        "'width'",
        "'fillbyte'",
        "'count'",
        "'self'",
        "'sub'",
        "'start'",
        "'end'",
        "\"number\"",
        "\"byte must be in range(0, 256)\"",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "\"decode\"",
        "\"self\"",
        "\"encoding\"",
        "\"errors\"",
        "\"utf-8\"",
        "\"strict\"",
        "'strict'",
        "'ignore'",
        "'replace'",
        "'surrogateescape'",
        "'surrogatepass'",
        "'xmlcharrefreplace'",
        "'backslashreplace'",
        "'endswith'",
        "'self'",
        "'suffix'",
        "'start'",
        "'end'",
        "\"endswith first arg must be \"",
        "\"bytes or a tuple of bytes, not \"",
        "\"endswith first arg must be bytes \"",
        "\"or a tuple of bytes, not \"",
        "'expandtabs'",
        "'self'",
        "'tabsize'",
        "'find'",
        "'self'",
        "'sub'",
        "'start'",
        "'end'",
        "\"number\"",
        "\"byte must be in range(0, 256)\"",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "'fromhex'",
        "'cls'",
        "'string'",
        "''",
        "\"non-hexadecimal number found \"",
        "\"in fromhex() arg\"",
        "'hex'",
        "'self'",
        "\"\"",
        "\"0\"",
        "'rfind'",
        "'self'",
        "'sub'",
        "'start'",
        "'end'",
        "\"subsection not found\"",
        "'join'",
        "'self'",
        "'iterable'",
        "'self'",
        "'iterable'",
        "'__next__'",
        "'ljust'",
        "'self'",
        "'width'",
        "'fillbyte'",
        "\"argument 2 must be a byte string of length 1, \"",
        "\"not '\"",
        "\"'\"",
        "\"argument 2 must be a byte string of length 1, \"",
        "\"not '\"",
        "\"'\"",
        "'l'",
        "'partition'",
        "'self'",
        "'sep'",
        "\"a bytes-like object is required, \"",
        "\"not '\"",
        "\"'\"",
        "\"a bytes-like object is required, \"",
        "\"not '\"",
        "\"'\"",
        "'replace'",
        "'self'",
        "'old'",
        "'new'",
        "'count'",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "\"second argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "\"second argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "'rfind'",
        "'self'",
        "'sub'",
        "'start'",
        "'end'",
        "\"number\"",
        "\"byte must be in range(0, 256)\"",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "\"first argument must be a bytes-like \"",
        "\"object, not '\"",
        "\"'\"",
        "'rfind'",
        "'self'",
        "'sub'",
        "'start'",
        "'end'",
        "\"subsection not found\"",
        "'rjust'",
        "'self'",
        "'width'",
        "'fillbyte'",
        "\"argument 2 must be a byte string of length 1, \"",
        "\"not '\"",
        "\"'\"",
        "\"argument 2 must be a byte string of length 1, \"",
        "\"not '\"",
        "\"'\"",
        "'rpartition'",
        "'self'",
        "'sep'",
        "\"a bytes-like object is required, \"",
        "\"not '\"",
        "\"'\"",
        "\"a bytes-like object is required, \"",
        "\"not '\"",
        "\"'\"",
        "'r'",
        "'split'",
        "'self'",
        "'sep'",
        "\"a bytes-like object is required, \"",
        "\"not '\"",
        "\"'\"",
        "\"a bytes-like object is required, \"",
        "\"not '\"",
        "\"'\"",
        "'splitlines'",
        "'self'",
        "'keepends'",
        "'integer argument expected, got '",
        "'startswith'",
        "'self'",
        "'prefix'",
        "'start'",
        "\"startswith first arg must be \"",
        "\"bytes or a tuple of bytes, not \"",
        "\"startswith first arg must be bytes \"",
        "\"or a tuple of bytes, not \"",
        "\"Type \"",
        "\" doesn't support the buffer API\"",
        "\"'\"",
        "\"' codec can't encode character \"",
        "\" in position \"",
        "\"'\"",
        "\"' codec can't decode bytes in position \"",
        "\"windows\"",
        "\"cp\"",
        "\"cp\"",
        "\"iso\"",
        "\"-\"",
        "\"\"",
        "\"_\"",
        "\"encodings.\"",
        "\"decode\"",
        "\"encodings.\"",
        "\"encode\"",
        "\"\"",
        "\"utf_8\"",
        "\"utf-8\"",
        "\"utf8\"",
        "\"U8\"",
        "\"UTF\"",
        "\"\"",
        "\"end\"",
        "\"continuation\"",
        "\"ignore\"",
        "\"'utf-8' codec can't decode byte 0x\"",
        "\"  in position \"",
        "\"end\"",
        "\": unexpected end of data\"",
        "\": invalid continuation byte\"",
        "\"end\"",
        "\"continuation\"",
        "'-'",
        "\"end\"",
        "\"continuation\"",
        "\"ignore\"",
        "\"surrogateescape\"",
        "\"'utf-8' codec can't decode byte 0x\"",
        "\"  in position \"",
        "\"end\"",
        "\": unexpected end of data\"",
        "\": invalid continuation byte\"",
        "\"ignore\"",
        "\"surrogateescape\"",
        "\"'utf-8' codec can't decode byte 0x\"",
        "\"in position \"",
        "\": invalid start byte\"",
        "\"latin_1\"",
        "\"windows1252\"",
        "\"iso-8859-1\"",
        "\"iso8859-1\"",
        "\"8859\"",
        "\"cp819\"",
        "\"latin\"",
        "\"latin1\"",
        "\"L1\"",
        "\"unicode_escape\"",
        "\"latin-1\"",
        "\"strict\"",
        "\"\\n\"",
        "\"\\u0007\"",
        "\"\\b\"",
        "\"\\f\"",
        "\"\\t\"",
        "\"'\"",
        "'\"'",
        "\"raw_unicode_escape\"",
        "\"latin-1\"",
        "\"strict\"",
        "\"ascii\"",
        "\"ignore\"",
        "\"'ascii' codec can't decode byte 0x\"",
        "\" in position \"",
        "\": ordinal not in range(128)\"",
        "\"error load_decoder\"",
        "\"unknown encoding: \"",
        "\"encode\"",
        "\"s\"",
        "\"encoding\"",
        "\"errors\"",
        "\"utf-8\"",
        "\"strict\"",
        "\"utf-8\"",
        "\"utf_8\"",
        "\"utf8\"",
        "\"4 bytes\"",
        "\"latin\"",
        "\"latin1\"",
        "\"latin-1\"",
        "\"latin_1\"",
        "\"L1\"",
        "\"iso8859_1\"",
        "\"iso_8859_1\"",
        "\"8859\"",
        "\"cp819\"",
        "\"windows1252\"",
        "\"ignore\"",
        "\"ascii\"",
        "\"ignore\"",
        "\"raw_unicode_escape\"",
        "\"0\"",
        "\"\\\\u\"",
        "\"unknown encoding: \"",
        "\"bytes\"",
        "\"source\"",
        "\"encoding\"",
        "\"errors\"",
        "\"utf-8\"",
        "\"strict\"",
        "\"function\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"set\"",
        "\"unsupported operand type(s) for +: 'set' and \"",
        "\"__contains__\"",
        "\"number\"",
        "\"string\"",
        "\"__hash__\"",
        "\"__eq__\"",
        "\"self does not contain\"",
        "\"__init__\"",
        "\"self\"",
        "\"iterable\"",
        "\"set iterator\"",
        "\"__contains__\"",
        "\"__len__\"",
        "\"set.__new__(): not enough arguments\"",
        "\"__next__\"",
        "\"()\"",
        "\"({\"",
        "\"})\"",
        "\"set({\"",
        "\"{\"",
        "\"}\"",
        "\"(...)\"",
        "\"{...}\"",
        "\", \"",
        "\"-\"",
        "\"__contains__\"",
        "\"^\"",
        "\"__contains__\"",
        "\"unsupported operand type(s) for \"",
        "\": 'set' and '\"",
        "\"'\"",
        "\"string\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "\"__eq__\"",
        "\"add\"",
        "\"self\"",
        "\"item\"",
        "\"clear\"",
        "\"self\"",
        "\"copy\"",
        "\"self\"",
        "\"difference_update\"",
        "\"self\"",
        "\"args\"",
        "\"__next__\"",
        "\"string\"",
        "\"number\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"discard\"",
        "\"self\"",
        "\"item\"",
        "\"intersection_update\"",
        "\"self\"",
        "\"args\"",
        "\"string\"",
        "\"number\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"is_disjoint\"",
        "\"self\"",
        "\"other\"",
        "\"__contains__\"",
        "'pop from an empty set'",
        "\"string\"",
        "\"number\"",
        "\"__eq__\"",
        "\"remove\"",
        "\"self\"",
        "\"item\"",
        "\"string\"",
        "\"number\"",
        "\"number\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"symmetric_difference_update\"",
        "\"self\"",
        "\"s\"",
        "\"__next__\"",
        "\"string\"",
        "\"number\"",
        "\"__eq__\"",
        "\"update\"",
        "\"self\"",
        "\"args\"",
        "\"difference\"",
        "\"self\"",
        "\"args\"",
        "\"\"",
        "\"set.intersection = \"",
        "\"intersection\"",
        "\"__sub__\"",
        "\"__and__\"",
        "\"set.symmetric_difference = \"",
        "\"symmetric_difference\"",
        "\"__sub__\"",
        "\"__xor__\"",
        "\"set.union = \"",
        "\"union\"",
        "\"__sub__\"",
        "\"__or__\"",
        "\"issubset\"",
        "\"self\"",
        "\"other\"",
        "\"args\"",
        "\"__contains__\"",
        "\"issuperset\"",
        "\"self\"",
        "\"other\"",
        "\"args\"",
        "\"__contains__\"",
        "\"&=\"",
        "\"-=\"",
        "\"^=\"",
        "\"|=\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"frozenset\"",
        "\"add\"",
        "\"clear\"",
        "\"discard\"",
        "\"pop\"",
        "\"remove\"",
        "\"update\"",
        "\"function\"",
        "\"frozenset.__new__(): not enough arguments\"",
        "\"frozenset\"",
        "\"iterable\"",
        "\"builtins\"",
        "\"boolean\"",
        "\"number\"",
        "\"string\"",
        "\"a dictionary with non-string \"",
        "\"keys cannot be sent to or from a Web Worker\"",
        "\"boolean\"",
        "\"number\"",
        "\"string\"",
        "\"object\"",
        "\" does not support the structured clone algorithm\"",
        "\"<javascript>\"",
        "'JSConstructor'",
        "\"__call__\"",
        "\"undefined\"",
        "\"undefined\"",
        "\"<javascript>\"",
        "'number'",
        "'.'",
        "'kw'",
        "'function'",
        "'info'",
        "':'",
        "''",
        "\"builtins\"",
        "'JSObject'",
        "\"get attr\"",
        "\"of\"",
        "'$$'",
        "\"__class__\"",
        "\"__call__\"",
        "\"function\"",
        "\"object is not callable\"",
        "\"bind\"",
        "'addEventListener'",
        "'addEventListener'",
        "\"data\"",
        "\"jsattr\"",
        "'function'",
        "\"A Javascript function can't take \"",
        "\"keyword arguments\"",
        "'replace'",
        "\"result\"",
        "'<function '",
        "'>'",
        "'<function '",
        "'>'",
        "\"use JS2Py\"",
        "'$$location'",
        "\"found in klass\"",
        "\"\"",
        "'function'",
        "\"no attribute \"",
        "' for '",
        "'number'",
        "\"number\"",
        "\"boolean\"",
        "'function'",
        "\"string\"",
        "'function'",
        "'__getitem__'",
        "'JS object iterator'",
        "\"appendChild\"",
        "\"function\"",
        "'number'",
        "'__len__'",
        "' has no attribute __len__'",
        "\"<\"",
        "\" object>\"",
        "\"<JSObject wraps \"",
        "\">\"",
        "'$$'",
        "'function'",
        "'info'",
        "'\\n'",
        "': '",
        "'\\n'",
        "''",
        "'string'",
        "'function'",
        "'number'",
        "'boolean'",
        "'function'",
        "\"builtins\"",
        "\"module\"",
        "\"<module \"",
        "\" (built-in)\"",
        "\">\"",
        "\"__builtins__\"",
        "\"builtins\"",
        "\".\"",
        "\".\"",
        "\"?v=\"",
        "\"GET\"",
        "\"GET\"",
        "\"No module named '\"",
        "\"'\"",
        "\"Last-Modified\"",
        "\"Error \"",
        "\" means that Python module \"",
        "\" was not found at url \"",
        "\"No module named '\"",
        "\"'\"",
        "\"No module named '\"",
        "\"' (res is null)\"",
        "\";\\nreturn $module\"",
        "\"no $module\"",
        "\"name '$module' not defined in module\"",
        "\"function\"",
        "\"<module '\"",
        "\"' (built-in)>\"",
        "\"<module '\"",
        "\"' from \"",
        "\" >\"",
        "\"builtins\"",
        "\"$\"",
        "\"---\"",
        "\"/__init__.py\"",
        "\".\"",
        "\".\"",
        "\"__package__\"",
        "\"code for module \"",
        "\"var $module = (function(){\\n\"",
        "\"return $locals_\"",
        "\"_\"",
        "\"})(__BRYTHON__)\\n\"",
        "\"return $module\"",
        "\"$locals_\"",
        "'_'",
        "\" for module \"",
        "\"module\"",
        "\"info\"",
        "\"[no info]\"",
        "\"message: \"",
        "\"filename: \"",
        "\"linenum: \"",
        "\"line info \"",
        "\"$module\"",
        "\",\"",
        "\"\"",
        "\" \"",
        "\" for module \"",
        "\" \"",
        "\"line info \"",
        "\"builtins\"",
        "\"VFSFinder\"",
        "\"loader_state\"",
        "\"VFS.\"",
        "\"/__init__.py\"",
        "'.js'",
        "\"load\"",
        "\"from precompiled\"",
        "\".\"",
        "\".\"",
        "\"<stdlib>\"",
        "\".\"",
        "\".\"",
        "\"_\"",
        "\"return $locals_\"",
        "\"$locals_\"",
        "\"mod_js\"",
        "\".\"",
        "\"run Python code from VFS\"",
        "\".\"",
        "\"modules\"",
        "\"readwrite\"",
        "\"modules\"",
        "\"stored in db\"",
        "\"could not store \"",
        "\"built-in\"",
        "\"brython_stdlib\"",
        "\"<import>\"",
        "\"function\"",
        "\"builtins\"",
        "\"StdlibStatic\"",
        "\"py\"",
        "\"loader_state\"",
        "\".\"",
        "\".\"",
        "\"py\"",
        "\"py\"",
        "\"Lib/\"",
        "\"libs/\"",
        "\"/\"",
        "\"/__init__.py\"",
        "\"py\"",
        "\".py\"",
        "\".js\"",
        "\"<import>\"",
        "\"function\"",
        "\"builtins\"",
        "\"ImporterPath\"",
        "\"__spec__\"",
        "\"code\"",
        "\"py\"",
        "\"pyc.js\"",
        "\"pyc.js\"",
        "\"js\"",
        "\"/\"",
        "\"/\"",
        "\"function\"",
        "\"__call__\"",
        "\"find_spec\"",
        "\"function\"",
        "\"__call__\"",
        "\"<import>\"",
        "\"function\"",
        "\"<UrlPathFinder\"",
        "\" for '\"",
        "\"'\"",
        "\"(unbound)\"",
        "\" at \"",
        "'>'",
        "\"builtins\"",
        "\"UrlPathFinder\"",
        "'py'",
        "\".py\"",
        "\"py\"",
        "\"/__init__.py\"",
        "\"py\"",
        "'/'",
        "'/'",
        "\"/\"",
        "\"/\"",
        "\"<import>\"",
        "\"/\"",
        "\"py\"",
        "\"Lib/\"",
        "\"py\"",
        "\"Lib/site-packages/\"",
        "\"py\"",
        "\"libs/\"",
        "\"js\"",
        "\"Lib/\"",
        "\"Lib/site-packages/\"",
        "\"libs/\"",
        "\"VFS.\"",
        "'.'",
        "\"\"",
        "\"\"",
        "\".\"",
        "\"__path__\"",
        "\"No module named '\"",
        "\"'; '\"",
        "\"' is not a package\"",
        "\"error\"",
        "\".\"",
        "\".\"",
        "\"\"",
        "\"Parent module '' not loaded, \"",
        "\"cannot perform relative import\"",
        "\"$$\"",
        "\".\"",
        "\"$import \"",
        "\"use VFS ? \"",
        "\"use static stdlib paths ? \"",
        "\"__import__\"",
        "\"function\"",
        "\"__call__\"",
        "\"*\"",
        "\"__all__\"",
        "\"_\"",
        "'__call__'",
        "'.'",
        "\"__future__\"",
        "','",
        "\"future feature \"",
        "\" is not defined\"",
        "\"cannot import name '\"",
        "\"'\"",
        "\"cannot import name '\"",
        "\"'\"",
        "\"$$\"",
        "'_$'",
        "\"/\"",
        "\"/\"",
        "'none'",
        "\"Loader\"",
        "\"_importlib\"",
        "\"<module '_importlib' (built-in)>\"",
        "\"_importlib\"",
        "\"unsupported operand type(s) for \"",
        "\": 'float' and '\"",
        "\"'\"",
        "\"builtins\"",
        "\"float\"",
        "\"numerator\"",
        "\"denominator\"",
        "\"imag\"",
        "\"real\"",
        "\"Cannot pass infinity to \"",
        "\"float.as_integer_ratio.\"",
        "\"Cannot pass NaN to \"",
        "\"float.as_integer_ratio.\"",
        "\"__lshift__\"",
        "'division by zero'",
        "\"__rfloordiv__\"",
        "\"__rfloordiv__\"",
        "\"//\"",
        "\"argument must be a string\"",
        "\"+inf\"",
        "\"inf\"",
        "\"+infinity\"",
        "\"infinity\"",
        "\"-inf\"",
        "\"-infinity\"",
        "\"+nan\"",
        "\"nan\"",
        "\"-nan\"",
        "\"\"",
        "\"could not convert string to float\"",
        "\"invalid hexadecimal floating-point string\"",
        "'0'",
        "'.0'",
        "'p0'",
        "\"-\"",
        "\"double\"",
        "\"float\"",
        "\"IEEE, little-endian\"",
        "\"__getformat__() argument 1 must be \"",
        "\"'double' or 'float'\"",
        "'eEfFgGn%'",
        "\"Unknown format code '\"",
        "\"' for object of type 'float'\"",
        "\"f\"",
        "\"g\"",
        "\"nan\"",
        "\"NAN\"",
        "\"f\"",
        "\"g\"",
        "\"inf\"",
        "\"INF\"",
        "\"%\"",
        "\"e\"",
        "\"e\"",
        "\"0\"",
        "\"\"",
        "\".\"",
        "\"%\"",
        "\"f\"",
        "\".\"",
        "\"0\"",
        "\"0\"",
        "\"g\"",
        "\"e\"",
        "\"e\"",
        "\"f\"",
        "\"e\"",
        "\"e\"",
        "'.'",
        "\"0\"",
        "\".\"",
        "\"e\"",
        "\"G\"",
        "\"e\"",
        "\"e\"",
        "\"0\"",
        "\"e\"",
        "\"gGn\"",
        "\"e\"",
        "\"0\"",
        "\".\"",
        "\"0\"",
        "\" \"",
        "\"+\"",
        "\"%\"",
        "\"%\"",
        "\">\"",
        "'.'",
        "\",\"",
        "\".\"",
        "'-inf'",
        "'inf'",
        "\"-0x0.0p0\"",
        "\"0x0.0p0\"",
        "\"0123456789ABCDEF\"",
        "\"\"",
        "'.'",
        "\"+\"",
        "\"-\"",
        "\"-0x\"",
        "\"p\"",
        "\"0x\"",
        "\"p\"",
        "\"float modulo\"",
        "\"__rmod__\"",
        "\"__rmod__\"",
        "\"%\"",
        "\"__rmul__\"",
        "\"__rmul__\"",
        "\"*\"",
        "\"float.__new__(): not enough arguments\"",
        "\"float.__new__(X): X is not a type object\"",
        "\"0.0 cannot be raised \"",
        "\"to a negative power\"",
        "\"__eq__\"",
        "\"__rpow__\"",
        "\"__rpow__\"",
        "\"** or pow()\"",
        "'inf'",
        "'-inf'",
        "'nan'",
        "\"\"",
        "\".\"",
        "\".0\"",
        "\"'float' object has no attribute '\"",
        "\"'\"",
        "\"'float' object attribute '\"",
        "\"' is read-only\"",
        "\"division by zero\"",
        "\"division by zero\"",
        "\"__rtruediv__\"",
        "\"__rtruediv__\"",
        "\"/\"",
        "\"boolean\"",
        "\"__rsub__\"",
        "\"__rsub__\"",
        "\"-\"",
        "\"\"",
        "\"+\"",
        "\"add\"",
        "\"-\"",
        "\"sub\"",
        "\"__r\"",
        "\"__\"",
        "\"float.__\"",
        "\"__ = \"",
        "\"__int__\"",
        "\"__index__\"",
        "\"__le__\"",
        "\"unorderable types: float() > \"",
        "\"()\"",
        "\"\"",
        "\"float.__\"",
        "\"__ = \"",
        "\"__\"",
        "\"__\"",
        "\"__\"",
        "\"__\"",
        "\"unsupported operand types for OPERATOR: 'float' and '\"",
        "\"'\"",
        "\"\"",
        "\"__\"",
        "\"__\"",
        "\"float.\"",
        "\"=\"",
        "\"\\u0660\\u0661\\u0662\\u0663\\u0664\\u0665\\u0666\\u0667\\u0668\\u0669\"",
        "\"\"",
        "\"number\"",
        "\"decode\"",
        "\"latin-1\"",
        "\"decode\"",
        "\"latin-1\"",
        "\"string\"",
        "\"+inf\"",
        "\"inf\"",
        "\"+infinity\"",
        "\"infinity\"",
        "\"-inf\"",
        "\"-infinity\"",
        "\"+nan\"",
        "\"nan\"",
        "\"-nan\"",
        "\"\"",
        "\"count not convert string to float\"",
        "\"\"",
        "\"latin-1\"",
        "\"Could not convert to float(): '\"",
        "\"'\"",
        "\"__float__\"",
        "\"__index__\"",
        "\"float() argument must be a string or a \"",
        "\"number, not '\"",
        "\"'\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"float\"",
        "\"function\"",
        "\"builtins\"",
        "\"unsupported operand type(s) for \"",
        "\": 'int' and '\"",
        "\"'\"",
        "\"builtins\"",
        "\"int\"",
        "\"numerator\"",
        "\"denominator\"",
        "\"imag\"",
        "\"real\"",
        "\"as_integer_ratio\"",
        "\"self\"",
        "\"from_bytes\"",
        "\"bytes\"",
        "\"byteorder\"",
        "\"signed\"",
        "\"big\"",
        "\"little\"",
        "\"byteorder must be either 'little' or 'big'\"",
        "\"to_bytes\"",
        "\"self\"",
        "\"len\"",
        "\"byteorder\"",
        "\"args\"",
        "\"kw\"",
        "\"integer argument expected, got \"",
        "\"little\"",
        "\"big\"",
        "\"byteorder must be either 'little' or 'big'\"",
        "\"signed\"",
        "\"can't convert negative int to unsigned\"",
        "\"int too big to convert\"",
        "\"big\"",
        "'bcdoxXn'",
        "\"Unknown format code '\"",
        "\"' for object of type 'int'\"",
        "\"d\"",
        "\"b\"",
        "\"0b\"",
        "\"\"",
        "\"c\"",
        "\"o\"",
        "\"0o\"",
        "\"\"",
        "\"x\"",
        "\"0x\"",
        "\"\"",
        "\"X\"",
        "\"0X\"",
        "\"\"",
        "\"n\"",
        "\" \"",
        "\"+\"",
        "'eEfFgG%'",
        "\">\"",
        "\"-\"",
        "\"-\"",
        "\"\"",
        "\",\"",
        "\"division by zero\"",
        "\"division by zero\"",
        "\"__rfloordiv__\"",
        "\"__rfloordiv__\"",
        "\"//\"",
        "\"__rlshift__\"",
        "\"<<\"",
        "\"integer division or modulo by zero\"",
        "\"__rmod__\"",
        "\"__rmod__\"",
        "\"%\"",
        "\"string\"",
        "\"__rmul__\"",
        "\"__rmul__\"",
        "\"*\"",
        "\"int.__new__(): not enough arguments\"",
        "\"int.__new__(X): X is not a type object\"",
        "\"not relative primes: \"",
        "' and '",
        "\"__rpow__\"",
        "\"**\"",
        "\"<class 'int'>\"",
        "\"__rrshift__\"",
        "'>>'",
        "\"number\"",
        "\"'int' object has no attribute '\"",
        "\"'\"",
        "\"'int' object attribute '\"",
        "\"' is read-only\"",
        "\"division by zero\"",
        "\"division by zero\"",
        "\"division by zero\"",
        "\"__rtruediv__\"",
        "\"__rtruediv__\"",
        "\"/\"",
        "\"lstrip\"",
        "\"-0b\"",
        "\"__rsub__\"",
        "\"-\"",
        "\"\"",
        "\"&\"",
        "\"and\"",
        "\"|\"",
        "\"or\"",
        "\"^\"",
        "\"xor\"",
        "\"sub\"",
        "\"gm\"",
        "\"int.__\"",
        "\"__ = \"",
        "\"number\"",
        "\"boolean\"",
        "\"__rsub__\"",
        "\"-\"",
        "\"\"",
        "\"+\"",
        "\"add\"",
        "\"-\"",
        "\"sub\"",
        "\"sub\"",
        "\"gm\"",
        "\"int.__\"",
        "\"__ = \"",
        "\"__int__\"",
        "\"__index__\"",
        "\"\"",
        "\"int.__\"",
        "\"__ = \"",
        "\"__\"",
        "\"__\"",
        "\"__\"",
        "\"__\"",
        "\"\"",
        "\"0\"",
        "\"0123456789\"",
        "\"number\"",
        "\"can't convert complex to int\"",
        "\"int\"",
        "\"x\"",
        "\"base\"",
        "\"base\"",
        "\"x\"",
        "\"base\"",
        "\"invalid base\"",
        "\"number\"",
        "\"e\"",
        "\"can't convert to base \"",
        "\"invalid literal for int() with base \"",
        "\": '\"",
        "\"'\"",
        "\"string\"",
        "\"0b\"",
        "\"0o\"",
        "\"0x\"",
        "\"invalid value\"",
        "\"0B\"",
        "\"0O\"",
        "\"0X\"",
        "\"0X\"",
        "\"0O\"",
        "\"0B\"",
        "\"0O\"",
        "\"0X\"",
        "\"_\"",
        "\"^[+-]?[\"",
        "\"]\"",
        "\"[\"",
        "\"_]*$\"",
        "\"i\"",
        "\"\"",
        "\"decode\"",
        "\"latin-1\"",
        "\"__int__\"",
        "\"__index__\"",
        "\"__trunc__\"",
        "\"int() argument must be a string, a bytes-like \"",
        "\"object or a number, not '\"",
        "\"'\"",
        "\"builtins\"",
        "\"boolean\"",
        "\"number\"",
        "\"string\"",
        "\"__bool__\"",
        "\"__bool__ should return \"",
        "\"bool, returned \"",
        "\"bool\"",
        "\"builtins\"",
        "\"operations\"",
        "\"binary\"",
        "\"comparisons\"",
        "\"boolean\"",
        "\"__\"",
        "\"__\"",
        "\"True\"",
        "\"False\"",
        "\"attribute '\"",
        "\"' of 'int' objects is not writable\"",
        "\"'bool' object has no attribute '\"",
        "\"'\"",
        "\"bool\"",
        "\"x\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"int\"",
        "\"numerator\"",
        "\"denominator\"",
        "\"imag\"",
        "\"real\"",
        "\"\"",
        "''",
        "''",
        "\"shift must be int, not '\"",
        "\"'\"",
        "\"negative shift count\"",
        "''",
        "''",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"\"",
        "\"\"",
        "\"10\"",
        "\"9\"",
        "\"bizarre\"",
        "\"bizarre2 \"",
        "\"ok\"",
        "\"\"",
        "\"0\"",
        "\"\"",
        "\"x is NaN\"",
        "\"NaN\"",
        "\"0\"",
        "\"NaN\"",
        "\"hoho !!\"",
        "\"e\"",
        "\"+\"",
        "\"0\"",
        "\"0\"",
        "\"number\"",
        "\"number\"",
        "\"\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"0\"",
        "\"0\"",
        "\"number\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"number\"",
        "\"number\"",
        "\"number\"",
        "''",
        "\"2\"",
        "\"0\"",
        "\"\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"-1\"",
        "\"number\"",
        "'negative shift count'",
        "\"0\"",
        "\"\"",
        "\"1\"",
        "\"0\"",
        "\"__eq__\"",
        "\"__gt__\"",
        "\"1\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"number\"",
        "\"power must be a LongDict, not '\"",
        "\"'\"",
        "\"1\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"number\"",
        "\"0\"",
        "\"2\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"\"",
        "'-'",
        "\"number\"",
        "\"0\"",
        "\"0\"",
        "\"unsupported operand type(s) for /: 'int' and '\"",
        "\"'\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"0\"",
        "\"\"",
        "\"number\"",
        "\"long_int takes at most 2 arguments (\"",
        "\" given)\"",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "\"long_int.$factory() base must be >= 2 and <= 36\"",
        "\"number\"",
        "\"argument of long_int is not a safe integer\"",
        "\"\"",
        "\"\"",
        "\"string\"",
        "\"argument of long_int must be a string, not \"",
        "\" \"",
        "\" \"",
        "\"+\"",
        "\"-\"",
        "'long_int argument is not a valid number: \"'",
        "'\"'",
        "\"0\"",
        "\".\"",
        "\"e\"",
        "\"wrong exp \"",
        "\"0\"",
        "'long_int argument is not a valid number: \"'",
        "'\"'",
        "\"1\"",
        "\"builtins\"",
        "\"unsupported operand type(s) for \"",
        "\": '\"",
        "\"' and '\"",
        "\"'\"",
        "\"builtins\"",
        "\"complex\"",
        "\"absolute value too large\"",
        "\"//\"",
        "\"complex\"",
        "\"TypeError: can't mod complex numbers.\"",
        "\"*\"",
        "'complex.__new__(): not enough arguments'",
        "\"complex\"",
        "\"cls\"",
        "\"real\"",
        "\"imag\"",
        "\"string\"",
        "\"complex() can't take second arg \"",
        "\"if first is a string\"",
        "\"(\"",
        "\")\"",
        "\"\"",
        "\"could not convert string \"",
        "\"to complex: '\"",
        "\"'\"",
        "\"complex() arg is a malformed string\"",
        "\".\"",
        "\".\"",
        "\".e\"",
        "\".e\"",
        "\"e\"",
        "\"e\"",
        "\"complex() arg is a malformed string\"",
        "\"\"",
        "\"\"",
        "\"+\"",
        "\"\"",
        "'-'",
        "\"\"",
        "\"-\"",
        "\"__complex__\"",
        "\"__float__\"",
        "\"__index__\"",
        "\"complex() first argument must be a \"",
        "\" string or a number, not '\"",
        "\"'\"",
        "\"complex() argument must be a string \"",
        "\"or a number\"",
        "\"string\"",
        "\"complex() second arg can't be a string\"",
        "\"complex() argument must be a string \"",
        "\"or a number\"",
        "\"1j\"",
        "\"unsupported operand type(s) \"",
        "\"for ** or pow(): 'complex' and '\"",
        "\"'\"",
        "\"(-0\"",
        "\"j)\"",
        "\"(-0-\"",
        "\"j)\"",
        "\"(-0+\"",
        "\"j)\"",
        "\"-\"",
        "\"j\"",
        "\"j\"",
        "\"(\"",
        "\"+\"",
        "\"j)\"",
        "\"(\"",
        "\"-\"",
        "\"j)\"",
        "\"(\"",
        "\"+\"",
        "\"j)\"",
        "\"(\"",
        "\"-\"",
        "\"j)\"",
        "\"division by zero\"",
        "'division by zero'",
        "\"division by zero\"",
        "\"//\"",
        "\"complex\"",
        "\"TypeError: unsupported operand type(s) \"",
        "\"for -: 'complex' and '\"",
        "\"'\"",
        "\"\"",
        "\"&\"",
        "\"and\"",
        "\"|\"",
        "\"ior\"",
        "\"<<\"",
        "\"lshift\"",
        "\">>\"",
        "\"rshift\"",
        "\"^\"",
        "\"xor\"",
        "\"complex.__\"",
        "\"__ = \"",
        "\"unsupported operand type(s) for -: \"",
        "\" and '\"",
        "\"'\"",
        "''",
        "\"+\"",
        "\"add\"",
        "\"complex.__add__ = \"",
        "\"TypeError: no ordering relation \"",
        "\"is defined for complex numbers\"",
        "''",
        "\"complex.__\"",
        "\"__ = \"",
        "\"readonly attribute\"",
        "\"readonly attribute\"",
        "\"__complex__\"",
        "\"__float__\"",
        "\"__index__\"",
        "\"builtins\"",
        "\"TimSortAssertion\"",
        "'mergeLow preconditions were not respected'",
        "\"mergeHigh preconditions were not respected\"",
        "\"Can only sort arrays\"",
        "\"function\"",
        "\"'tuple' object has no attribute '\"",
        "\"'\"",
        "\"builtins\"",
        "\"list\"",
        "\"__radd__\"",
        "'can only concatenate list (not \"'",
        "'\") to list'",
        "\"__contains__\"",
        "\"self\"",
        "\"item\"",
        "\"__eq__\"",
        "\"list index out of range\"",
        "\"__int__\"",
        "\"__index__\"",
        "\"list indices must be integer, not \"",
        "\"__eq__\"",
        "\"__getitem__\"",
        "\"self\"",
        "\"key\"",
        "\"list index out of range\"",
        "\"__int__\"",
        "\"__index__\"",
        "\"list indices must be integer, not \"",
        "\"__eq__\"",
        "\"__ge__\"",
        "\"unorderable types: \"",
        "\"() >= \"",
        "\"()\"",
        "\"__eq__\"",
        "\"__gt__\"",
        "\"unorderable types: \"",
        "\"() > \"",
        "\"()\"",
        "\"__iadd__\"",
        "\"self\"",
        "\"x\"",
        "\"__radd__\"",
        "\"__imul__\"",
        "\"self\"",
        "\"x\"",
        "\"__len__\"",
        "\"pop\"",
        "\"__next__\"",
        "\"list_iterator\"",
        "\"__eq__\"",
        "\"__lt__\"",
        "\"unorderable types: \"",
        "\"() >= \"",
        "\"()\"",
        "\"__int__\"",
        "\"__index__\"",
        "\"__rmul__\"",
        "\"can't multiply sequence by non-int of type '\"",
        "\"'\"",
        "\"list.__new__(): not enough arguments\"",
        "\"<class 'list'>\"",
        "'[...]'",
        "\"(\"",
        "\",)\"",
        "\"(\"",
        "\", \"",
        "\")\"",
        "\"[\"",
        "\", \"",
        "\"]\"",
        "\"'list' object attribute '\"",
        "\"' is read-only\"",
        "\"'list' object has no attribute '\"",
        "\"'\"",
        "\"__setitem__\"",
        "\"self\"",
        "\"key\"",
        "\"value\"",
        "\"number\"",
        "\"list index out of range\"",
        "\"__int__\"",
        "\"__index__\"",
        "\"list indices must be integer, not \"",
        "\"add\"",
        "\"sub\"",
        "\"append\"",
        "\"self\"",
        "\"x\"",
        "\"clear\"",
        "\"self\"",
        "\"copy\"",
        "\"self\"",
        "\"count\"",
        "\"self\"",
        "\"x\"",
        "\"__eq__\"",
        "\"extend\"",
        "\"self\"",
        "\"t\"",
        "\"index\"",
        "\"self\"",
        "\"x\"",
        "\"start\"",
        "\"stop\"",
        "\"__eq__\"",
        "\" is not in list\"",
        "\"insert\"",
        "\"self\"",
        "\"i\"",
        "\"item\"",
        "\"pop\"",
        "\"self\"",
        "\"pos\"",
        "\"pop\"",
        "\"pop index out of range\"",
        "\"remove\"",
        "\"self\"",
        "\"x\"",
        "\"__eq__\"",
        "\" is not in list\"",
        "\"reverse\"",
        "\"self\"",
        "\"__le__\"",
        "\"list modified during sort\"",
        "\"__le__\"",
        "\"sort\"",
        "\"self\"",
        "\"kw\"",
        "\"sort\"",
        "\"key\"",
        "\"reverse\"",
        "\"'\"",
        "\"' is an invalid keyword argument for this function\"",
        "\"__le__\"",
        "\"unorderable types: \"",
        "\"() <=\"",
        "\"()\"",
        "\"__le__\"",
        "\"unorderable types: \"",
        "\"() <=\"",
        "\"()\"",
        "\"__le__\"",
        "\"unorderable types: \"",
        "\"() <=\"",
        "\"()\"",
        "\"__lt__\"",
        "\"unorderable types: \"",
        "\"() <=\"",
        "\"()\"",
        "\"list\"",
        "\"obj\"",
        "\"__next__\"",
        "\"builtins\"",
        "\"JSArray\"",
        "\"<JSArray object>\"",
        "\"function\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"tuple\"",
        "\"tuple_iterator\"",
        "\"__delitem__\"",
        "\"__iadd__\"",
        "\"__imul__\"",
        "\"__setitem__\"",
        "\"append\"",
        "\"extend\"",
        "\"insert\"",
        "\"remove\"",
        "\"reverse\"",
        "\"function\"",
        "\"list.__new__(): not enough arguments\"",
        "\"__next__\"",
        "\"builtins\"",
        "\"Cc\"",
        "\"Zs\"",
        "\"Po\"",
        "\"Sc\"",
        "\"Ps\"",
        "\"Pe\"",
        "\"Sm\"",
        "\"Pd\"",
        "\"Nd\"",
        "\"Lu\"",
        "\"Sk\"",
        "\"Pc\"",
        "\"Ll\"",
        "\"So\"",
        "\"Pi\"",
        "\"Cf\"",
        "\"No\"",
        "\"Pf\"",
        "\"Lo\"",
        "\"Lt\"",
        "\"Lm\"",
        "\"Mn\"",
        "\"Me\"",
        "\"Mc\"",
        "\"Nl\"",
        "\"Zl\"",
        "\"Zp\"",
        "\"Cs\"",
        "\"Co\"",
        "\"digits\"",
        "\"numeric\"",
        "\"XID_Start\"",
        "\"XID_Continue\"",
        "\"builtins\"",
        "\"str\"",
        "\"slice indices must be integers \"",
        "\"or None or have an __index__ method\"",
        "\"\"",
        "\"\"",
        "\"can't convert '\"",
        "\"' object to str implicitly\"",
        "\"string\"",
        "\"__radd__\"",
        "\"Can't convert \"",
        "\" to str implicitly\"",
        "\"string\"",
        "\"'in <string>' requires \"",
        "\"string as left operand, not \"",
        "\"'str' object doesn't support item deletion\"",
        "\"s\"",
        "\"Unknown format code '\"",
        "\"' for object of type 'str'\"",
        "\"Sign not allowed in string format specifier\"",
        "\"<\"",
        "\"string index out of range\"",
        "\"\"",
        "\"\"",
        "''",
        "\"string indices must be integers\"",
        "\"str_iterator\"",
        "\"\"",
        "\"([^\\\\)]*)\\\\)\"",
        "\"NotANumber\"",
        "\"\"",
        "\"-\"",
        "\"-\"",
        "\"0\"",
        "\"0\"",
        "\"inf\"",
        "\"-inf\"",
        "\"nan\"",
        "\"+\"",
        "\" \"",
        "\"\"",
        "\" \"",
        "\"0\"",
        "\"-\"",
        "\"\"",
        "\" \"",
        "\" \"",
        "'.'",
        "\"\"",
        "\".\"",
        "\"\"",
        "\".\"",
        "\"e\"",
        "\"0\"",
        "'.'",
        "\"e\"",
        "\"0\"",
        "\"0\"",
        "\"-\"",
        "\"\"",
        "\"-\"",
        "\"-0X\"",
        "\"-0x\"",
        "\"0X\"",
        "\"0x\"",
        "\"0\"",
        "\"-\"",
        "\"\"",
        "\"-\"",
        "\"-0o\"",
        "\"0o\"",
        "\"ascii\"",
        "\"__bytes__\"",
        "\"%b does not accept '\"",
        "\"'\"",
        "\"%c requires int or char\"",
        "\"0\"",
        "\"0\"",
        "\"\"",
        "\"\"",
        "\" \"",
        "\"b\"",
        "\"s\"",
        "\"d\"",
        "\"i\"",
        "\"u\"",
        "\"o\"",
        "\"r\"",
        "\"a\"",
        "\"g\"",
        "\"G\"",
        "\"f\"",
        "\"F\"",
        "\"e\"",
        "\"E\"",
        "\"x\"",
        "\"X\"",
        "\"c\"",
        "\"0\"",
        "\"0\"",
        "\"1\"",
        "\"1\"",
        "\"2\"",
        "\"2\"",
        "\"3\"",
        "\"3\"",
        "\"4\"",
        "\"4\"",
        "\"5\"",
        "\"5\"",
        "\"6\"",
        "\"6\"",
        "\"7\"",
        "\"7\"",
        "\"8\"",
        "\"8\"",
        "\"9\"",
        "\"9\"",
        "\"-\"",
        "\" \"",
        "\"+\"",
        "\".\"",
        "\"#\"",
        "\"UnsupportedChar\"",
        "\"__getitem__\"",
        "''",
        "\"incomplete format key\"",
        "\"KeyError\"",
        "\"format requires a mapping\"",
        "\"not enough arguments for format string\"",
        "\"pad_char\"",
        "\" \"",
        "\"incomplete format\"",
        "\"unsupported format character '\"",
        "\"' (0x\"",
        "\") at index \"",
        "\"NotANumber\"",
        "\"string\"",
        "\"str\"",
        "\"%\"",
        "\" format: a number is required, not \"",
        "\"%\"",
        "\"%\"",
        "\"%\"",
        "\"(\"",
        "\"incomplete format\"",
        "\"not enough arguments for format string\"",
        "\"not all arguments converted during string formatting\"",
        "\"not all arguments converted during string formatting\"",
        "\"__mul__\"",
        "\"self\"",
        "\"other\"",
        "\"Can't multiply sequence by non-int of type '\"",
        "\"'\"",
        "\"\"",
        "\"\\\\\\\\\"",
        "\"\\u0007\"",
        "\"g\"",
        "\"\\\\x07\"",
        "\"\\b\"",
        "\"g\"",
        "\"\\\\x08\"",
        "\"\\u000b\"",
        "\"g\"",
        "\"\\\\x0b\"",
        "\"\\f\"",
        "\"g\"",
        "\"\\\\x0c\"",
        "\"\\n\"",
        "\"g\"",
        "\"\\\\n\"",
        "\"\\r\"",
        "\"g\"",
        "\"\\\\r\"",
        "\"\\t\"",
        "\"g\"",
        "\"\\\\t\"",
        "\"\\u200B$1\"",
        "'\"'",
        "\"'\"",
        "\"'\"",
        "\"'\"",
        "'\"'",
        "'\"'",
        "'\"'",
        "\"'\"",
        "\"g\"",
        "\"'\"",
        "\"\\\\'\"",
        "\"'\"",
        "\"'str' object does not support item assignment\"",
        "\"(\"",
        "\"|\"",
        "\")\"",
        "\"\\u200B$1\"",
        "\"string!\"",
        "\"string\"",
        "\"\"",
        "\">\"",
        "\"gt\"",
        "\">=\"",
        "\"ge\"",
        "\"<\"",
        "\"lt\"",
        "\"<=\"",
        "\"le\"",
        "\"str.__\"",
        "'__ = '",
        "\"OPERATOR not implemented for class str\"",
        "\"capitalize\"",
        "\"self\"",
        "\"\"",
        "\"casefold\"",
        "\"self\"",
        "\"\"",
        "\"center\"",
        "\"self\"",
        "\"width\"",
        "\"fillchar\"",
        "\" \"",
        "\"count\"",
        "\"self\"",
        "\"sub\"",
        "\"start\"",
        "\"stop\"",
        "\"string\"",
        "\"Can't convert '\"",
        "\"' object to str implicitly\"",
        "\"encode\"",
        "\"self\"",
        "\"encoding\"",
        "\"errors\"",
        "\"utf-8\"",
        "\"strict\"",
        "\"rot13\"",
        "\"rot_13\"",
        "\"\"",
        "\"a\"",
        "\"m\"",
        "\"A\"",
        "\"M\"",
        "\"m\"",
        "\"z\"",
        "\"M\"",
        "\"Z\"",
        "\"endswith\"",
        "\"self\"",
        "\"suffix\"",
        "\"start\"",
        "\"end\"",
        "\"endswith first arg must be str or a tuple of str, not int\"",
        "\"expandtabs\"",
        "\"self\"",
        "\"tabsize\"",
        "\"\"",
        "\" \"",
        "\"\\t\"",
        "\" \"",
        "\"\\r\"",
        "\"\\n\"",
        "\"str.find\"",
        "\"self\"",
        "\"sub\"",
        "\"start\"",
        "\"end\"",
        "\"slice indices must be \"",
        "\"integers or None or have an __index__ method\"",
        "\"\"",
        "\":\"",
        "\":\"",
        "\"!\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"{\"",
        "\"{\"",
        "\"{\"",
        "\"}\"",
        "\"}\"",
        "\"}\"",
        "\"{\"",
        "\"{\"",
        "\"}\"",
        "\"\"",
        "\"\"",
        "\"{\"",
        "\"}\"",
        "\"{\"",
        "\"}\"",
        "\"\"",
        "\"wrong format \"",
        "\"format\"",
        "\"self\"",
        "\"$args\"",
        "\"$kw\"",
        "\"\"",
        "\"string\"",
        "\".\"",
        "\"__getitem__\"",
        "\"a\"",
        "\"r\"",
        "\"s\"",
        "\"__format__\"",
        "\"function format_map not implemented yet\"",
        "\"substring not found\"",
        "\"isalnum\"",
        "\"self\"",
        "\"isalpha\"",
        "\"self\"",
        "\"isdecimal\"",
        "\"self\"",
        "\"isdigit\"",
        "\"self\"",
        "\"isidentifier\"",
        "\"self\"",
        "\"islower\"",
        "\"self\"",
        "\"isnumeric\"",
        "\"self\"",
        "'Cc'",
        "'Cf'",
        "'Co'",
        "'Cs'",
        "'Zl'",
        "'Zp'",
        "'Zs'",
        "\"isprintable\"",
        "\"self\"",
        "\"isspace\"",
        "\"self\"",
        "\"istitle\"",
        "\"self\"",
        "\"islower\"",
        "\"self\"",
        "\"join\"",
        "\"self\"",
        "\"iterable\"",
        "\"sequence item \"",
        "\": expected str instance, \"",
        "\" found\"",
        "\"ljust\"",
        "\"self\"",
        "\"width\"",
        "\"fillchar\"",
        "\" \"",
        "\"lower\"",
        "\"self\"",
        "\"lstrip\"",
        "\"self\"",
        "\"chars\"",
        "\"\"",
        "\"maketrans\"",
        "\"x\"",
        "\"y\"",
        "\"z\"",
        "\"maketrans only argument must be a dict\"",
        "\"dictionary key \"",
        "\" is not int or 1-char string\"",
        "\"dictionary value \"",
        "\" is not None, integer or string\"",
        "\"maketrans arguments must be strings\"",
        "\"maketrans arguments must be strings or same length\"",
        "\"maketrans third argument must be a string\"",
        "\"staticmethod\"",
        "\"partition\"",
        "\"self\"",
        "\"sep\"",
        "\"\"",
        "\"empty separator\"",
        "\"\"",
        "\"\"",
        "\"[.*+?|()$^\"",
        "\"\\\\\"",
        "\"g\"",
        "\"\\\\\"",
        "\"replace\"",
        "\"self\"",
        "\"old\"",
        "\"$$new\"",
        "\"count\"",
        "\"'\"",
        "\"' object cannot be interpreted as an integer\"",
        "\"integer argument expected, got float\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"string\"",
        "\"rfind\"",
        "\"self\"",
        "\"sub\"",
        "\"start\"",
        "\"end\"",
        "\"substring not found\"",
        "\"rjust\"",
        "\"self\"",
        "\"width\"",
        "\"fillchar\"",
        "\" \"",
        "\"rpartition\"",
        "\"self\"",
        "\"sep\"",
        "\"\"",
        "\"\"",
        "\"rsplit\"",
        "\"self\"",
        "\"sep\"",
        "\"maxsplit\"",
        "\"rstrip\"",
        "\"self\"",
        "\"chars\"",
        "\"\"",
        "\"split\"",
        "\"self\"",
        "\"sep\"",
        "\"maxsplit\"",
        "\"\"",
        "\"empty separator\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"\"",
        "'splitlines'",
        "'self'",
        "'keepends'",
        "'integer argument expected, got '",
        "'\\r\\n'",
        "'\\r'",
        "'\\n'",
        "\"startswith\"",
        "\"self\"",
        "\"prefix\"",
        "\"start\"",
        "\"end\"",
        "\"endswith first arg must be str or a tuple of str, not int\"",
        "\"strip\"",
        "\"self\"",
        "\"chars\"",
        "\"swapcase\"",
        "\"self\"",
        "\"\"",
        "\"title\"",
        "\"self\"",
        "\"\"",
        "\"word\"",
        "\"word\"",
        "\"__getitem__\"",
        "\"string\"",
        "\"number\"",
        "\"\"",
        "\"upper\"",
        "\"self\"",
        "\"zfill\"",
        "\"self\"",
        "\"width\"",
        "\"+\"",
        "\"-\"",
        "\"0\"",
        "\"0\"",
        "\"\"",
        "\"str() argument is undefined\"",
        "\"str\"",
        "\"arg\"",
        "\"encoding\"",
        "\"errors\"",
        "\"utf-8\"",
        "\"strict\"",
        "\"string\"",
        "\"number\"",
        "\"__str__\"",
        "\"__str__\"",
        "\"__repr__\"",
        "\"no __str__ for\"",
        "\"err \"",
        "\"Warning - no method __str__ or __repr__, \"",
        "\"default to toString\"",
        "\"str.__new__(): not enough arguments\"",
        "\"builtins\"",
        "\"builtins\"",
        "\"str\"",
        "\"function\"",
        "\"builtins\"",
        "\"\"",
        "\"<>=^\"",
        "\"0123456789\"",
        "\"bcdeEfFgGnosxX%\"",
        "\" \"",
        "\"+\"",
        "\"-\"",
        "\" \"",
        "\"#\"",
        "\"0\"",
        "\"0\"",
        "\"=\"",
        "\"{\"",
        "\"}\"",
        "\"width\"",
        "\"[\"",
        "\"]\"",
        "\",\"",
        "\".\"",
        "\"Missing precision in format spec\"",
        "\"Invalid format specifier: \"",
        "\"\"",
        "\"\"",
        "\"\"",
        "\"#\"",
        "\"\"",
        "\"0\"",
        "\"\"",
        "\"\"",
        "\",\"",
        "\"\"",
        "\".\"",
        "\"\"",
        "\"\"",
        "\" \"",
        "\"<\"",
        "\"<\"",
        "\">\"",
        "\"=\"",
        "\"+-\"",
        "\"^\"",
        "\"expression\"",
        "\"\"",
        "\"\"",
        "\"{\"",
        "\"{\"",
        "\"string\"",
        "\"{\"",
        "\"expression\"",
        "\"}\"",
        "\"string\"",
        "\"}\"",
        "\" f-string: single '}' is not allowed\"",
        "\"string\"",
        "\"string\"",
        "\"{\"",
        "\"{\"",
        "\"{\"",
        "\"expression\"",
        "\"}\"",
        "\" f-string: single '}' is not allowed\"",
        "\"debug\"",
        "\" \"",
        "\"}\"",
        "\"\"",
        "\"{\"",
        "\"}\"",
        "\"\"",
        "\"\\\\\"",
        "\"f-string expression part cannot include a\"",
        "\" backslash\"",
        "\"!\"",
        "\":}\"",
        "\"f-string: empty expression not allowed\"",
        "\"ars\"",
        "\"f-string: invalid conversion character:\"",
        "\" expected 's', 'r', or 'a'\"",
        "\"(\"",
        "\")\"",
        "'\"'",
        "'\"\"\"'",
        "'\"\"\"'",
        "\"f-string: unterminated string\"",
        "\"\\n\"",
        "\"\\\\n\\\\\"",
        "'\"'",
        "\"f-string: unterminated string\"",
        "\":\"",
        "\"=\"",
        "\"=\"",
        "\"=!<>:\"",
        "\"debug\"",
        "\"f-string: expected '}'\"",
        "\"eq\"",
        "\"add\"",
        "\"sub\"",
        "\"and\"",
        "\"or\"",
        "\"xor\"",
        "\"le\"",
        "\"lt\"",
        "\"ge\"",
        "\"gt\"",
        "\"__\"",
        "\"__\"",
        "'('",
        "')'",
        "\"builtins\"",
        "\"dictionary changed size during iteration\"",
        "\"StopIteration\"",
        "\"builtins\"",
        "\"dict\"",
        "\"$\"",
        "\"dictionary changed size during iteration\"",
        "\"StopIteration\"",
        "\"dict mutated during update\"",
        "\"__eq__\"",
        "\"__bool__\"",
        "\"self\"",
        "\"__contains__\"",
        "\"self\"",
        "\"key\"",
        "\"string\"",
        "\"number\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"self\"",
        "\"arg\"",
        "\"string\"",
        "\"number\"",
        "\"__eq__\"",
        "\"self\"",
        "\"other\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"__eq__\"",
        "\"__getitem__\"",
        "\"self\"",
        "\"arg\"",
        "\"string\"",
        "\"number\"",
        "\"__eq__\"",
        "\"object\"",
        "\"__missing__\"",
        "'string'",
        "'number'",
        "\"dict\"",
        "\"self\"",
        "\"first\"",
        "\"second\"",
        "\"dict expected at most 1 argument\"",
        "\", got 2\"",
        "'$string_dict'",
        "'$str_hash'",
        "'$numeric_dict'",
        "'$object_dict'",
        "\"keys\"",
        "\"__getitem__\"",
        "\"string\"",
        "\"number\"",
        "\"$\"",
        "\"int.__new__(): not enough arguments\"",
        "\": {...}\"",
        "\": \"",
        "\"{\"",
        "\", \"",
        "\"}\"",
        "\"__setitem__\"",
        "\"self\"",
        "\"key\"",
        "\"value\"",
        "\"__init__\"",
        "\"__new__\"",
        "\"string\"",
        "\"pas de string dict\"",
        "\"number\"",
        "\"__eq__\"",
        "\"clear\"",
        "\"self\"",
        "\"$\"",
        "\"__class__\"",
        "\"copy\"",
        "\"self\"",
        "\"fromkeys\"",
        "\"cls\"",
        "\"keys\"",
        "\"value\"",
        "\"__setitem__\"",
        "\"get\"",
        "\"self\"",
        "\"key\"",
        "\"_default\"",
        "\"dict_items\"",
        "\"dict_itemiterator\"",
        "\"items() takes no arguments (\"",
        "\" given)\"",
        "\"dict_keys\"",
        "\"dict_keyiterator\"",
        "\"keys() takes no arguments (\"",
        "\" given)\"",
        "\"pop\"",
        "\"self\"",
        "\"key\"",
        "\"_default\"",
        "\"'popitem(): dictionary is empty'\"",
        "\"setdefault\"",
        "\"self\"",
        "\"key\"",
        "\"_default\"",
        "\"update\"",
        "\"self\"",
        "\"self\"",
        "\"args\"",
        "\"kw\"",
        "\"keys\"",
        "\"keys\"",
        "\"__getitem__\"",
        "\"cannot convert dictionary\"",
        "\" update sequence element #\"",
        "\" to a sequence\"",
        "\"dictionary update \"",
        "\"sequence element #\"",
        "\" has length \"",
        "\"; 2 is required\"",
        "\"dict_values\"",
        "\"dict_valueiterator\"",
        "\"values() takes no arguments (\"",
        "\" given)\"",
        "\"builtins\"",
        "\"mappingproxy\"",
        "\"'mappingproxy' object does not support \"",
        "\"item assignment\"",
        "\"__class__\"",
        "\"__mro__\"",
        "\"__new__\"",
        "\"__init__\"",
        "\"__delitem__\"",
        "\"clear\"",
        "\"fromkeys\"",
        "\"pop\"",
        "\"popitem\"",
        "\"setdefault\"",
        "\"update\"",
        "\"function\"",
        "\"builtins\"",
        "\"$\"",
        "\"__class__\"",
        "\" has no attribute '__dict__'\"",
        "\"MouseCoords\"",
        "\"nodeName\"",
        "\"nodeValue\"",
        "\"nodeType\"",
        "\"parentNode\"",
        "\"childNodes\"",
        "\"firstChild\"",
        "\"lastChild\"",
        "\"previousSibling\"",
        "\"nextSibling\"",
        "\"attributes\"",
        "\"ownerDocument\"",
        "\"object\"",
        "\"object\"",
        "\"number\"",
        "\"string\"",
        "\"^\\\\[object (HTMLCollection|NodeList)\\\\]$\"",
        "\"object\"",
        "\"object\"",
        "\"NONE\"",
        "\"CAPTURING_PHASE\"",
        "\"AT_TARGET\"",
        "\"BUBBLING_PHASE\"",
        "\"type\"",
        "\"target\"",
        "\"currentTarget\"",
        "\"eventPhase\"",
        "\"bubbles\"",
        "\"cancelable\"",
        "\"timeStamp\"",
        "\"stopPropagation\"",
        "\"preventDefault\"",
        "\"initEvent\"",
        "\"altKey\"",
        "\"altLeft\"",
        "\"button\"",
        "\"cancelBubble\"",
        "\"clientX\"",
        "\"clientY\"",
        "\"contentOverflow\"",
        "\"ctrlKey\"",
        "\"ctrlLeft\"",
        "\"data\"",
        "\"dataFld\"",
        "\"dataTransfer\"",
        "\"fromElement\"",
        "\"keyCode\"",
        "\"nextPage\"",
        "\"offsetX\"",
        "\"offsetY\"",
        "\"origin\"",
        "\"propertyName\"",
        "\"reason\"",
        "\"recordset\"",
        "\"repeat\"",
        "\"screenX\"",
        "\"screenY\"",
        "\"shiftKey\"",
        "\"shiftLeft\"",
        "\"source\"",
        "\"srcElement\"",
        "\"srcFilter\"",
        "\"srcUrn\"",
        "\"toElement\"",
        "\"type\"",
        "\"url\"",
        "\"wheelDelta\"",
        "\"x\"",
        "\"y\"",
        "\"ELEMENT\"",
        "\"ATTRIBUTE\"",
        "\"TEXT\"",
        "\"CDATA_SECTION\"",
        "\"ENTITY_REFERENCE\"",
        "\"ENTITY\"",
        "\"PROCESSING_INSTRUCTION\"",
        "\"COMMENT\"",
        "\"DOCUMENT\"",
        "\"DOCUMENT_TYPE\"",
        "\"DOCUMENT_FRAGMENT\"",
        "\"NOTATION\"",
        "\"Attributes\"",
        "\"__getitem__\"",
        "\"self\"",
        "\"key\"",
        "\"function\"",
        "\"__getitem__\"",
        "\"self\"",
        "\"key\"",
        "\"function\"",
        "\"__getitem__\"",
        "\"self\"",
        "\"key\"",
        "\"function\"",
        "\"__next__\"",
        "\"self\"",
        "\"\"",
        "\"__setitem__\"",
        "\"self\"",
        "\"key\"",
        "\"value\"",
        "\"function\"",
        "\"function\"",
        "\"Can't set attributes on element\"",
        "\"get\"",
        "\"self\"",
        "\"key\"",
        "\"deflt\"",
        "\"values\"",
        "\"self\"",
        "\"values\"",
        "\"self\"",
        "\"<dom>\"",
        "\"DOMEvent\"",
        "'__repr__'",
        "'__str__'",
        "'<DOMEvent object>'",
        "'x'",
        "'y'",
        "'data'",
        "'data'",
        "'target'",
        "'char'",
        "'svgX'",
        "\"event target is not an SVG \"",
        "\"element\"",
        "'svgY'",
        "\"event target is not an SVG \"",
        "\"element\"",
        "\"function\"",
        "\"object DOMEvent has no attribute '\"",
        "\"'\"",
        "\"browser\"",
        "\"browser\"",
        "\"Clipboard\"",
        "\"<dom>\"",
        "\"not found\"",
        "\"<pydom>\"",
        "\"OpenFile\"",
        "\"r\"",
        "\"rb\"",
        "\"get_\"",
        "\"get_\"",
        "\"on\"",
        "\"set_\"",
        "\"set_\"",
        "\"<dom>\"",
        "\"<class 'File'>\"",
        "\"<class 'FileReader'>\"",
        "\"<object Options wraps \"",
        "\">\"",
        "\"<pydom>\"",
        "\"Options\"",
        "\"<dom>\"",
        "\"browser\"",
        "\"DOMNode\"",
        "\"number\"",
        "\"boolean\"",
        "\"string\"",
        "\"tdict\"",
        "\"tag name\"",
        "\"$brython_id\"",
        "\"DOM-\"",
        "\"can't add '\"",
        "\"' object to DOMNode instance\"",
        "\"string\"",
        "\"function\"",
        "\"can't delete \"",
        "\"$\"",
        "\"$\"",
        "\"$$\"",
        "\"attrs\"",
        "\"class_name\"",
        "\"html\"",
        "\"id\"",
        "\"parent\"",
        "\"query\"",
        "\"text\"",
        "\"height\"",
        "\"left\"",
        "\"top\"",
        "\"width\"",
        "\"CANVAS\"",
        "\"style.\"",
        "\" is not set for \"",
        "\"x\"",
        "\"y\"",
        "\"x\"",
        "\"clear\"",
        "\"closest\"",
        "\"headers\"",
        "\"GET\"",
        "\"\\r\\n\"",
        "\":\"",
        "\"$$location\"",
        "\"location\"",
        "\"select\"",
        "\"INPUT\"",
        "\"TEXTAREA\"",
        "\"$$\"",
        "\"function\"",
        "\"function\"",
        "'options'",
        "'style'",
        "\"string\"",
        "\"number\"",
        "\"boolean\"",
        "\"function\"",
        "\"string\"",
        "\"function\"",
        "\"function\"",
        "\"string\"",
        "\"number\"",
        "\"can't add '\"",
        "\"' object to DOMNode instance\"",
        "\"can't multiply \"",
        "\"by \"",
        "\"StopIteration\"",
        "\"<\"",
        "\" object>\"",
        "\"<DOMNode object type '\"",
        "\"' name '\"",
        "\"'>\"",
        "\"on\"",
        "\"left\"",
        "\"top\"",
        "\"width\"",
        "\"height\"",
        "\"px\"",
        "\" value should be\"",
        "\" an integer, not \"",
        "\"set_\"",
        "\"set_\"",
        "\",\"",
        "\"module\"",
        "\"line\"",
        "\"\\n\"",
        "\"module\"",
        "\"function\"",
        "\"Warning: property '\"",
        "\"' is not writable. Use element.attrs['\"",
        "\"'] instead.\"",
        "\"Warning: '\"",
        "\"' is a property of element.style\"",
        "\"number\"",
        "\"string\"",
        "\"function\"",
        "\"'DOMNode' objectattribute \"",
        "\"'abs_left' is read-only\"",
        "\"'DOMNode' objectattribute \"",
        "\"'abs_top' is read-only\"",
        "\"bind\"",
        "\"self\"",
        "\"event\"",
        "\"func\"",
        "\"options\"",
        "\"info\"",
        "\"\\n\"",
        "\": \"",
        "\"write\"",
        "\"write\"",
        "\"boolean\"",
        "\"no parent of type \"",
        "\"get\"",
        "\"kw\"",
        "\"kw\"",
        "\"name\"",
        "\"DOMNode object doesn't support \"",
        "\"selection by name\"",
        "'name'",
        "\"tag\"",
        "\"DOMNode object doesn't support \"",
        "\"selection by tag name\"",
        "\"tag\"",
        "\"classname\"",
        "\"DOMNode object doesn't support \"",
        "\"selection by class name\"",
        "'classname'",
        "\"id\"",
        "\"DOMNode object doesn't support \"",
        "\"selection by id\"",
        "'id'",
        "\"selector\"",
        "\"DOMNode object doesn't support \"",
        "\"selection by selector\"",
        "'selector'",
        "\"getContext\"",
        "\"object has no attribute 'getContext'\"",
        "\"getSelectionRange\"",
        "\"DOMNode object doesn't support \"",
        "\"selection by selector\"",
        "\"DOMNode object doesn't support \"",
        "\"selection by selector\"",
        "\"setSelectionRange\"",
        "\"createTextRange\"",
        "\"character\"",
        "\"character\"",
        "\"class\"",
        "\"style must be dict, not \"",
        "\"float\"",
        "\"top\"",
        "\"left\"",
        "\"width\"",
        "\"borderWidth\"",
        "\"px\"",
        "'DOMNode'",
        "\"on\"",
        "\"Events\"",
        "\"function is not an event callback\"",
        "'__eq__'",
        "'missing callback for event '",
        "\"browser\"",
        "\"query\"",
        "\"query string iterator\"",
        "'&'",
        "\"=\"",
        "\"<pydom>\"",
        "\"TagSum\"",
        "\"<object TagSum> \"",
        "\"[object Text]\"",
        "\" [\"",
        "\"]\\n\"",
        "\"(TagSum)\"",
        "\"<dom>\"",
        "\"dict\"",
        "\" \\t\\n\"",
        "''",
        "'store'",
        "' = {}'",
        "'for(var attr in this.blocks){'",
        "'eval(\"var \" + attr + \" = this.blocks[attr]\")'",
        "'};'",
        "'\\nvar $locals_'",
        "' = this.env'",
        "', '",
        "'\\n    $local_name = \"'",
        "'\", '",
        "'\\n    $locals = $locals_'",
        "';'",
        "'$locals.$parent = $locals_'",
        "\"_\"",
        "';'",
        "\"marker\"",
        "\"generator\"",
        "'store'",
        "\"$locals.$parent = $locals_\"",
        "\";\"",
        "\"node\"",
        "\"except\"",
        "\"single_kw\"",
        "\"else\"",
        "\"finally\"",
        "\"condition\"",
        "\"elif\"",
        "\"if\"",
        "\"yield\"",
        "\";\"",
        "\"return [\"",
        "\", \"",
        "\"]\"",
        "\"$locals.$yield\"",
        "\" = true;\"",
        "\"bizarre\"",
        "\"var sent_value = this.sent_value === undefined ? \"",
        "\"_b_.None : this.sent_value;\"",
        "\"\\n\"",
        "' '",
        "\"this.sent_value = _b_.None\"",
        "\"if(sent_value.__class__ === $B.$GeneratorSendError)\"",
        "\"{sent_value.err.$stack.splice(0, 0, $B.freeze([$top_frame])[0]);\"",
        "\" throw sent_value.err};\"",
        "\"number\"",
        "\"var $yield_value\"",
        "\" = sent_value;\"",
        "\"$locals.$yield\"",
        "\" = true;\"",
        "\"$locals.$exc\"",
        "\" = true;\"",
        "\"break\"",
        "\"continue\"",
        "\"is_\"",
        "\"return\"",
        "\"$locals.$ctx_manager_exit\"",
        "\"(_b_.None, _b_.None, _b_.None);\"",
        "\"yield\"",
        "\"return\"",
        "\"condition\"",
        "\"if\"",
        "\"child of \"",
        "\" undefined\"",
        "\"child of \"",
        "\" undefined\"",
        "\"already replaced\"",
        "\"void(0)\"",
        "\"replace by void(0)\"",
        "\"void(0)\"",
        "\"yield\"",
        "\"\"",
        "'$locals[\"$no_break'",
        "'\"] = false;'",
        "\"yield\"",
        "'var err = new Error(\"'",
        "'break'",
        "'continue'",
        "'\"); '",
        "\"err.__class__ = $B.GeneratorBreak; throw err;\"",
        "\"break\"",
        "\"continue\"",
        "\"is_\"",
        "\"break\"",
        "\"continue\"",
        "\" \"",
        "\"{\"",
        "\"\\n\"",
        "\"\\n\"",
        "\"}\\n\"",
        "\"\"",
        "\"<Node \"",
        "\">\"",
        "\"GeneratorBreak\"",
        "\"generator\"",
        "\"generator\"",
        "\"builtins\"",
        "\"__builtins__\"",
        "','",
        "'_'",
        "\"function\"",
        "\"return \"",
        "\"}\"",
        "'restore'",
        "'var $top_frame = [\"'",
        "'\",$locals,\"'",
        "'\",$locals_'",
        "'_'",
        "'];'",
        "'$B.frames_stack.push($top_frame); var $stack_length = '",
        "'$B.frames_stack.length;'",
        "'$locals.$is_generator = true;'",
        "'$locals.$yield_node_id = '",
        "';'",
        "\"continue\"",
        "\"break\"",
        "\"try\"",
        "\"catch(err)\"",
        "\"if(err.__class__ !== $B.GeneratorBreak){throw err}\"",
        "'if($locals[\"$no_break'",
        "'\"])'",
        "\"finally\"",
        "\"catch(err){}\"",
        "\"function\"",
        "\"function\"",
        "\"builtins\"",
        "\"generator\"",
        "\"generator.__enter__ called\"",
        "\"generator.__exit__ called\"",
        "\"<generator object \"",
        "\">\"",
        "\"generator already executing\"",
        "\"closed generator returned a value\"",
        "\"exception value must be an \"",
        "\"instance of BaseException\"",
        "\"__ge\"",
        "\"$locals_\"",
        "\"$locals_\"",
        "\"$gen\"",
        "\"builtins\"",
        "'browser'",
        "''",
        "'/Lib/browser/__init__.py'",
        "\"bind\"",
        "\"elt\"",
        "\"evt\"",
        "\"options\"",
        "\"boolean\"",
        "'read'",
        "''",
        "'script'",
        "'text/javascript'",
        "'check'",
        "'no date for mod'",
        "\"run_script\"",
        "\"src\"",
        "\"name\"",
        "\"script_\"",
        "\"\\\\[\"",
        "\"\\\\]\"",
        "\"[\\\\?&]\"",
        "\"=([^&#]*)\"",
        "\"\"",
        "\" \"",
        "'browser.html'",
        "\"browser.html\"",
        "'pow'",
        "'self'",
        "'args'",
        "'kw'",
        "'self'",
        "'args'",
        "\"first\"",
        "'kw'",
        "\"on\"",
        "'$B.DOMNode.bind(self,\"'",
        "'\",function(){'",
        "'})'",
        "\"style\"",
        "\"browser.html\"",
        "\"can't set attribute \"",
        "\"browser.html\"",
        "'SVG'",
        "\"http://www.w3.org/2000/svg\"",
        "\"svg\"",
        "'A'",
        "'ABBR'",
        "'ACRONYM'",
        "'ADDRESS'",
        "'APPLET'",
        "'AREA'",
        "'B'",
        "'BASE'",
        "'BASEFONT'",
        "'BDO'",
        "'BIG'",
        "'BLOCKQUOTE'",
        "'BODY'",
        "'BR'",
        "'BUTTON'",
        "'CAPTION'",
        "'CENTER'",
        "'CITE'",
        "'CODE'",
        "'COL'",
        "'COLGROUP'",
        "'DD'",
        "'DEL'",
        "'DFN'",
        "'DIR'",
        "'DIV'",
        "'DL'",
        "'DT'",
        "'EM'",
        "'FIELDSET'",
        "'FONT'",
        "'FORM'",
        "'FRAME'",
        "'FRAMESET'",
        "'H1'",
        "'H2'",
        "'H3'",
        "'H4'",
        "'H5'",
        "'H6'",
        "'HEAD'",
        "'HR'",
        "'HTML'",
        "'I'",
        "'IFRAME'",
        "'IMG'",
        "'INPUT'",
        "'INS'",
        "'ISINDEX'",
        "'KBD'",
        "'LABEL'",
        "'LEGEND'",
        "'LI'",
        "'LINK'",
        "'MAP'",
        "'MENU'",
        "'META'",
        "'NOFRAMES'",
        "'NOSCRIPT'",
        "'OBJECT'",
        "'OL'",
        "'OPTGROUP'",
        "'OPTION'",
        "'P'",
        "'PARAM'",
        "'PRE'",
        "'Q'",
        "'S'",
        "'SAMP'",
        "'SCRIPT'",
        "'SELECT'",
        "'SMALL'",
        "'SPAN'",
        "'STRIKE'",
        "'STRONG'",
        "'STYLE'",
        "'SUB'",
        "'SUP'",
        "'SVG'",
        "'TABLE'",
        "'TBODY'",
        "'TD'",
        "'TEXTAREA'",
        "'TFOOT'",
        "'TH'",
        "'THEAD'",
        "'TITLE'",
        "'TR'",
        "'TT'",
        "'U'",
        "'UL'",
        "'VAR'",
        "'ARTICLE'",
        "'ASIDE'",
        "'AUDIO'",
        "'BDI'",
        "'CANVAS'",
        "'COMMAND'",
        "'DATA'",
        "'DATALIST'",
        "'EMBED'",
        "'FIGCAPTION'",
        "'FIGURE'",
        "'FOOTER'",
        "'HEADER'",
        "'KEYGEN'",
        "'MAIN'",
        "'MARK'",
        "'MATH'",
        "'METER'",
        "'NAV'",
        "'OUTPUT'",
        "'PROGRESS'",
        "'RB'",
        "'RP'",
        "'RT'",
        "'RTC'",
        "'RUBY'",
        "'SECTION'",
        "'SOURCE'",
        "'TEMPLATE'",
        "'TIME'",
        "'TRACK'",
        "'VIDEO'",
        "'WBR'",
        "'DETAILS'",
        "'DIALOG'",
        "'MENUITEM'",
        "'PICTURE'",
        "'SUMMARY'",
        "'string'",
        "\"html.maketag expects a string as argument\"",
        "'-'",
        "'browser'",
        "'javascript'",
        "'\"javascript.JSConstructor\" is deprecrated. '",
        "'Use window.<js constructor name>.new() instead.'",
        "\"read only\"",
        "'\"javascript.JSObject\" is deprecrated. To use '",
        "'a Javascript object, use window.<object name> instead.'",
        "\"read only\"",
        "\"JSON\"",
        "'\"javascript.load\" is deprecrated. '",
        "'Use browser.load instead.'",
        "'read'",
        "'__main__'",
        "\"Int8Array\"",
        "\"Uint8Array\"",
        "\"Uint8ClampedArray\"",
        "\"Int16Array\"",
        "\"Uint16Array\"",
        "\"Int32Array\"",
        "\"Uint32Array\"",
        "\"Float32Array\"",
        "\"Float64Array\"",
        "\"BigInt64Array\"",
        "\"BigUint64Array\"",
        "'javascript'",
        "'_sys'",
        "\"_getframe\"",
        "'depth'",
        "\"pdb.set_trace\"",
        "'.'",
        "\"\"",
        "\"builtins\"",
        "\"cannot import breakpoint\"",
        "\"__traceback__\"",
        "\"Read only property 'sys.modules'\"",
        "\"Read only property\"",
        "\" 'sys.path_importer_cache'\"",
        "\"settrace\"",
        "'tracefunc'",
        "\"VFS\"",
        "\"Read only property 'sys.vfs'\"",
        "\"write\"",
        "\"write\"",
        "'function'",
        "'.'",
        "'browser'",
        "'browser.html'",
        "'__builtins__'",
        "'Python builtins'",
        "\"function\"",
        "\"__new__\"",
        "\"__\"",
        "\"cell\"",
        "\"empty cell\"",
        "\"eq\"",
        "\"ne\"",
        "\"__\"",
        "\"__\"",
        "\"__eq__\"",
        "\"__ne__\"",
        "\"__lt__\"",
        "\"__le__\"",
        "\"__ne__\"",
        "\"__gt__\"",
        "\"__ge__\"",
        "\"builtins\"",
        "\"Base class for arithmetic errors.\"",
        "\"Assertion failed.\"",
        "\"Attribute not found.\"",
        "\"Common base class for all exceptions\"",
        "\"I/O operation would block.\"",
        "\"Broken pipe.\"",
        "\"Buffer error.\"",
        "\"Base class for warnings about bytes and buffer related problems, mostly\\nrelated to conversion from str or comparing to str.\"",
        "\"Child process error.\"",
        "\"Connection aborted.\"",
        "\"Connection error.\"",
        "\"Connection refused.\"",
        "\"Connection reset.\"",
        "\"Base class for warnings about deprecated features.\"",
        "\"Read beyond end of file.\"",
        "\"\"",
        "\"Base class for I/O related errors.\"",
        "\"Common base class for all non-exit exceptions.\"",
        "\"bool(x) -> bool\\n\\nReturns True when the argument x is true, False otherwise.\\nThe builtins True and False are the only two instances of the class bool.\\nThe class bool is a subclass of the class int, and cannot be subclassed.\"",
        "\"File already exists.\"",
        "\"File not found.\"",
        "\"Floating point operation failed.\"",
        "\"Base class for warnings about constructs that will change semantically\\nin the future.\"",
        "\"Request that a generator exit.\"",
        "\"Base class for I/O related errors.\"",
        "\"Import can't find module, or can't find name in module.\"",
        "\"Base class for warnings about probable mistakes in module imports\"",
        "\"Improper indentation.\"",
        "\"Sequence index out of range.\"",
        "\"Interrupted by signal.\"",
        "\"Operation doesn't work on directories.\"",
        "\"Mapping key not found.\"",
        "\"Program interrupted by user.\"",
        "\"Base class for lookup errors.\"",
        "\"Out of memory.\"",
        "\"Name not found globally.\"",
        "\"\"",
        "\"Operation only works on directories.\"",
        "\"\"",
        "\"Method or function hasn't been implemented yet.\"",
        "\"Base class for I/O related errors.\"",
        "\"Result too large to be represented.\"",
        "\"Base class for warnings about features which will be deprecated\\nin the future.\"",
        "\"Not enough permissions.\"",
        "\"Process not found.\"",
        "\"Weak ref proxy used after referent went away.\"",
        "\"Base class for warnings about resource usage.\"",
        "\"Unspecified run-time error.\"",
        "\"Base class for warnings about dubious runtime behavior.\"",
        "\"Signal the end from iterator.__next__().\"",
        "\"Invalid syntax.\"",
        "\"Base class for warnings about dubious syntax.\"",
        "\"Internal error in the Python interpreter.\\n\\nPlease report this to the Python maintainer, along with the traceback,\\nthe Python version, and the hardware/OS platform and version.\"",
        "\"Request to exit from the interpreter.\"",
        "\"Improper mixture of spaces and tabs.\"",
        "\"Timeout expired.\"",
        "\"bool(x) -> bool\\n\\nReturns True when the argument x is true, False otherwise.\\nThe builtins True and False are the only two instances of the class bool.\\nThe class bool is a subclass of the class int, and cannot be subclassed.\"",
        "\"Inappropriate argument type.\"",
        "\"Local name referenced but not bound to a value.\"",
        "\"Unicode decoding error.\"",
        "\"Unicode encoding error.\"",
        "\"Unicode related error.\"",
        "\"Unicode translation error.\"",
        "\"Base class for warnings about Unicode related problems, mostly\\nrelated to conversion problems.\"",
        "\"Base class for warnings generated by user code.\"",
        "\"Inappropriate argument value (of correct type).\"",
        "\"Base class for warning categories.\"",
        "\"Base class for I/O related errors.\"",
        "\"Second argument to a division or modulo operation was zero.\"",
        "\"bool(x) -> bool\\n\\nReturns True when the argument x is true, False otherwise.\\nThe builtins True and False are the only two instances of the class bool.\\nThe class bool is a subclass of the class int, and cannot be subclassed.\"",
        "\"abs(number) -> number\\n\\nReturn the absolute value of the argument.\"",
        "\"all(iterable) -> bool\\n\\nReturn True if bool(x) is True for all values x in the iterable.\\nIf the iterable is empty, return True.\"",
        "\"any(iterable) -> bool\\n\\nReturn True if bool(x) is True for any x in the iterable.\\nIf the iterable is empty, return False.\"",
        "\"ascii(object) -> string\\n\\nAs repr(), return a string containing a printable representation of an\\nobject, but escape the non-ASCII characters in the string returned by\\nrepr() using \\\\x, \\\\u or \\\\U escapes.  This generates a string similar\\nto that returned by repr() in Python 2.\"",
        "\"bin(number) -> string\\n\\nReturn the binary representation of an integer.\\n\\n   >>> bin(2796202)\\n   '0b1010101010101010101010'\\n\"",
        "\"bool(x) -> bool\\n\\nReturns True when the argument x is true, False otherwise.\\nThe builtins True and False are the only two instances of the class bool.\\nThe class bool is a subclass of the class int, and cannot be subclassed.\"",
        "\"bytearray(iterable_of_ints) -> bytearray\\nbytearray(string, encoding[, errors]) -> bytearray\\nbytearray(bytes_or_buffer) -> mutable copy of bytes_or_buffer\\nbytearray(int) -> bytes array of size given by the parameter initialized with null bytes\\nbytearray() -> empty bytes array\\n\\nConstruct an mutable bytearray object from:\\n  - an iterable yielding integers in range(256)\\n  - a text string encoded using the specified encoding\\n  - a bytes or a buffer object\\n  - any object implementing the buffer API.\\n  - an integer\"",
        "\"bytes(iterable_of_ints) -> bytes\\nbytes(string, encoding[, errors]) -> bytes\\nbytes(bytes_or_buffer) -> immutable copy of bytes_or_buffer\\nbytes(int) -> bytes object of size given by the parameter initialized with null bytes\\nbytes() -> empty bytes object\\n\\nConstruct an immutable array of bytes from:\\n  - an iterable yielding integers in range(256)\\n  - a text string encoded using the specified encoding\\n  - any object implementing the buffer API.\\n  - an integer\"",
        "\"callable(object) -> bool\\n\\nReturn whether the object is callable (i.e., some kind of function).\\nNote that classes are callable, as are instances of classes with a\\n__call__() method.\"",
        "\"chr(i) -> Unicode character\\n\\nReturn a Unicode string of one character with ordinal i; 0 <= i <= 0x10ffff.\"",
        "\"classmethod(function) -> method\\n\\nConvert a function to be a class method.\\n\\nA class method receives the class as implicit first argument,\\njust like an instance method receives the instance.\\nTo declare a class method, use this idiom:\\n\\n  class C:\\n      def f(cls, arg1, arg2, ...): ...\\n      f = classmethod(f)\\n\\nIt can be called either on the class (e.g. C.f()) or on an instance\\n(e.g. C().f()).  The instance is ignored except for its class.\\nIf a class method is called for a derived class, the derived class\\nobject is passed as the implied first argument.\\n\\nClass methods are different than C++ or Java static methods.\\nIf you want those, see the staticmethod builtin.\"",
        "\"compile(source, filename, mode[, flags[, dont_inherit]]) -> code object\\n\\nCompile the source (a Python module, statement or expression)\\ninto a code object that can be executed by exec() or eval().\\nThe filename will be used for run-time error messages.\\nThe mode must be 'exec' to compile a module, 'single' to compile a\\nsingle (interactive) statement, or 'eval' to compile an expression.\\nThe flags argument, if present, controls which future statements influence\\nthe compilation of the code.\\nThe dont_inherit argument, if non-zero, stops the compilation inheriting\\nthe effects of any future statements in effect in the code calling\\ncompile; if absent or zero these statements do influence the compilation,\\nin addition to any features explicitly specified.\"",
        "\"complex(real[, imag]) -> complex number\\n\\nCreate a complex number from a real part and an optional imaginary part.\\nThis is equivalent to (real + imag*1j) where imag defaults to 0.\"",
        "\"interactive prompt objects for printing the license text, a list of\\n    contributors and the copyright notice.\"",
        "\"interactive prompt objects for printing the license text, a list of\\n    contributors and the copyright notice.\"",
        "\"delattr(object, name)\\n\\nDelete a named attribute on an object; delattr(x, 'y') is equivalent to\\n``del x.y''.\"",
        "\"dict() -> new empty dictionary\\ndict(mapping) -> new dictionary initialized from a mapping object's\\n    (key, value) pairs\\ndict(iterable) -> new dictionary initialized as if via:\\n    d = {}\\n    for k, v in iterable:\\n        d[k] = v\\ndict(**kwargs) -> new dictionary initialized with the name=value pairs\\n    in the keyword argument list.  For example:  dict(one=1, two=2)\"",
        "\"dir([object]) -> list of strings\\n\\nIf called without an argument, return the names in the current scope.\\nElse, return an alphabetized list of names comprising (some of) the attributes\\nof the given object, and of attributes reachable from it.\\nIf the object supplies a method named __dir__, it will be used; otherwise\\nthe default dir() logic is used and returns:\\n  for a module object: the module's attributes.\\n  for a class object:  its attributes, and recursively the attributes\\n    of its bases.\\n  for any other object: its attributes, its class's attributes, and\\n    recursively the attributes of its class's base classes.\"",
        "\"divmod(x, y) -> (div, mod)\\n\\nReturn the tuple ((x-x%y)/y, x%y).  Invariant: div*y + mod == x.\"",
        "\"enumerate(iterable[, start]) -> iterator for index, value of iterable\\n\\nReturn an enumerate object.  iterable must be another object that supports\\niteration.  The enumerate object yields pairs containing a count (from\\nstart, which defaults to zero) and a value yielded by the iterable argument.\\nenumerate is useful for obtaining an indexed list:\\n    (0, seq[0]), (1, seq[1]), (2, seq[2]), ...\"",
        "\"eval(source[, globals[, locals]]) -> value\\n\\nEvaluate the source in the context of globals and locals.\\nThe source may be a string representing a Python expression\\nor a code object as returned by compile().\\nThe globals must be a dictionary and locals can be any mapping,\\ndefaulting to the current globals and locals.\\nIf only globals is given, locals defaults to it.\\n\"",
        "\"exec(object[, globals[, locals]])\\n\\nRead and execute code from an object, which can be a string or a code\\nobject.\\nThe globals and locals are dictionaries, defaulting to the current\\nglobals and locals.  If only globals is given, locals defaults to it.\"",
        "\"\"",
        "\"filter(function or None, iterable) --> filter object\\n\\nReturn an iterator yielding those items of iterable for which function(item)\\nis true. If function is None, return the items that are true.\"",
        "\"float(x) -> floating point number\\n\\nConvert a string or number to a floating point number, if possible.\"",
        "\"format(value[, format_spec]) -> string\\n\\nReturns value.__format__(format_spec)\\nformat_spec defaults to \\\"\\\"\"",
        "\"frozenset()-> empty frozenset object\\nfrozenset(iterable)-> frozenset object\\n\\nBuild an immutable unordered collection of unique elements.\"",
        "\"getattr(object,name[,default])-> value\\n\\nGet a named attribute from an object;getattr(x,'y')is equivalent to x.y.\\nWhen a default argument is given,it is returned when the attribute doesn't\\nexist; without it, an exception is raised in that case.\"",
        "\"globals() -> dictionary\\n\\nReturn the dictionary containing the current scope's global variables.\"",
        "\"hasattr(object,name)-> bool\\n\\nReturn whether the object has an attribute with the given name.\\n(This is done by calling getattr(object,name)and catching AttributeError.)\"",
        "\"hash(object)-> integer\\n\\nReturn a hash value for the object. Two objects with the same value have\\nthe same hash value. The reverse is not necessarily true,but likely.\"",
        "\"Define the builtin 'help'.\\n\\n This is a wrapper around pydoc.help that provides a helpful message\\n when 'help' is typed at the Python interactive prompt.\\n\\n Calling help()at the Python prompt starts an interactive help session.\\n Calling help(thing)prints help for the python object 'thing'.\\n \"",
        "\"hex(number)-> string\\n\\nReturn the hexadecimal representation of an integer.\\n\\n >>> hex(3735928559)\\n '0xdeadbeef'\\n\"",
        "\"id(object)-> integer\\n\\nReturn the identity of an object. This is guaranteed to be unique among\\nsimultaneously existing objects.(Hint:it's the object's memory address.)\"",
        "\"input([prompt])-> string\\n\\nRead a string from standard input. The trailing newline is stripped.\\nIf the user hits EOF(Unix:Ctl-D,Windows:Ctl-Z+Return),raise EOFError.\\nOn Unix,GNU readline is used if enabled. The prompt string,if given,\\nis printed without a trailing newline before reading.\"",
        "\"int(x=0)-> integer\\nint(x,base=10)-> integer\\n\\nConvert a number or string to an integer,or return 0 if no arguments\\nare given. If x is a number,return x.__int__(). For floating point\\nnumbers,this truncates towards zero.\\n\\nIf x is not a number or if base is given,then x must be a string,\\nbytes,or bytearray instance representing an integer literal in the\\ngiven base. The literal can be preceded by '+' or '-' and be surrounded\\nby whitespace. The base defaults to 10. Valid bases are 0 and 2-36.\\nBase 0 means to interpret the base from the string as an integer literal.\\n>>> int('0b100',base=0)\\n4\"",
        "\"isinstance(object,class-or-type-or-tuple)-> bool\\n\\nReturn whether an object is an instance of a class or of a subclass thereof.\\nWith a type as second argument,return whether that is the object's type.\\nThe form using a tuple, isinstance(x, (A, B, ...)), is a shortcut for\\nisinstance(x, A) or isinstance(x, B) or ... (etc.).\"",
        "\"issubclass(C, B) -> bool\\n\\nReturn whether class C is a subclass (i.e., a derived class) of class B.\\nWhen using a tuple as the second argument issubclass(X, (A, B, ...)),\\nis a shortcut for issubclass(X, A) or issubclass(X, B) or ... (etc.).\"",
        "\"iter(iterable) -> iterator\\niter(callable, sentinel) -> iterator\\n\\nGet an iterator from an object.  In the first form, the argument must\\nsupply its own iterator, or be a sequence.\\nIn the second form, the callable is called until it returns the sentinel.\"",
        "\"len(object)\\n\\nReturn the number of items of a sequence or collection.\"",
        "\"interactive prompt objects for printing the license text, a list of\\n    contributors and the copyright notice.\"",
        "\"list() -> new empty list\\nlist(iterable) -> new list initialized from iterable's items\"",
        "\"locals()-> dictionary\\n\\nUpdate and return a dictionary containing the current scope's local variables.\"",
        "\"map(func, *iterables) --> map object\\n\\nMake an iterator that computes the function using arguments from\\neach of the iterables.  Stops when the shortest iterable is exhausted.\"",
        "\"max(iterable, *[, default=obj, key=func]) -> value\\nmax(arg1, arg2, *args, *[, key=func]) -> value\\n\\nWith a single iterable argument, return its biggest item. The\\ndefault keyword-only argument specifies an object to return if\\nthe provided iterable is empty.\\nWith two or more arguments, return the largest argument.\"",
        "\"memoryview(object)\\n\\nCreate a new memoryview object which references the given object.\"",
        "\"min(iterable, *[, default=obj, key=func]) -> value\\nmin(arg1, arg2, *args, *[, key=func]) -> value\\n\\nWith a single iterable argument, return its smallest item. The\\ndefault keyword-only argument specifies an object to return if\\nthe provided iterable is empty.\\nWith two or more arguments, return the smallest argument.\"",
        "\"next(iterator[, default])\\n\\nReturn the next item from the iterator. If default is given and the iterator\\nis exhausted, it is returned instead of raising StopIteration.\"",
        "\"The most base type\"",
        "\"oct(number) -> string\\n\\nReturn the octal representation of an integer.\\n\\n   >>> oct(342391)\\n   '0o1234567'\\n\"",
        "\"open(file, mode='r', buffering=-1, encoding=None,\\n     errors=None, newline=None, closefd=True, opener=None) -> file object\\n\\nOpen file and return a stream.  Raise IOError upon failure.\\n\\nfile is either a text or byte string giving the name (and the path\\nif the file isn't in the current working directory)of the file to\\nbe opened or an integer file descriptor of the file to be\\nwrapped.(If a file descriptor is given,it is closed when the\\nreturned I/O object is closed,unless closefd is set to False.)\\n\\nmode is an optional string that specifies the mode in which the file\\nis opened. It defaults to 'r' which means open for reading in text\\nmode. Other common values are 'w' for writing(truncating the file if\\nit already exists),'x' for creating and writing to a new file,and\\n'a' for appending(which on some Unix systems,means that all writes\\nappend to the end of the file regardless of the current seek position).\\nIn text mode,if encoding is not specified the encoding used is platform\\ndependent:locale.getpreferredencoding(False)is called to get the\\ncurrent locale encoding.(For reading and writing raw bytes use binary\\nmode and leave encoding unspecified.)The available modes are:\\n\\n========================================================================\\nCharacter Meaning\\n------------------------------------------------------------------------\\n'r' open for reading(default)\\n'w' open for writing,truncating the file first\\n'x' create a new file and open it for writing\\n'a' open for writing,appending to the end of the file if it exists\\n'b' binary mode\\n't' text mode(default)\\n'+' open a disk file for updating(reading and writing)\\n'U' universal newline mode(deprecated)\\n========================================================================\\n\\nThe default mode is 'rt'(open for reading text). For binary random\\naccess,the mode 'w+b' opens and truncates the file to 0 bytes,while\\n'r+b' opens the file without truncation. The 'x' mode implies 'w' and\\nraises an `FileExistsError` if the file already exists.\\n\\nPython distinguishes between files opened in binary and text modes,\\neven when the underlying operating system doesn't. Files opened in\\nbinary mode (appending 'b' to the mode argument) return contents as\\nbytes objects without any decoding. In text mode (the default, or when\\n't' is appended to the mode argument), the contents of the file are\\nreturned as strings, the bytes having been first decoded using a\\nplatform-dependent encoding or using the specified encoding if given.\\n\\n'U' mode is deprecated and will raise an exception in future versions\\nof Python.  It has no effect in Python 3.  Use newline to control\\nuniversal newlines mode.\\n\\nbuffering is an optional integer used to set the buffering policy.\\nPass 0 to switch buffering off (only allowed in binary mode), 1 to select\\nline buffering (only usable in text mode), and an integer > 1 to indicate\\nthe size of a fixed-size chunk buffer.  When no buffering argument is\\ngiven, the default buffering policy works as follows:\\n\\n* Binary files are buffered in fixed-size chunks; the size of the buffer\\n  is chosen using a heuristic trying to determine the underlying device's\\n \\\"block size\\\" and falling back on `io.DEFAULT_BUFFER_SIZE`.\\n  On many systems, the buffer will typically be 4096 or 8192 bytes long.\\n\\n* \\\"Interactive\\\" text files (files for which isatty() returns True)\\n  use line buffering.  Other text files use the policy described above\\n  for binary files.\\n\\nencoding is the name of the encoding used to decode or encode the\\nfile. This should only be used in text mode. The default encoding is\\nplatform dependent, but any encoding supported by Python can be\\npassed.  See the codecs module for the list of supported encodings.\\n\\nerrors is an optional string that specifies how encoding errors are to\\nbe handled---this argument should not be used in binary mode. Pass\\n'strict' to raise a ValueError exception if there is an encoding error\\n(the default of None has the same effect), or pass 'ignore' to ignore\\nerrors. (Note that ignoring encoding errors can lead to data loss.)\\nSee the documentation for codecs.register or run 'help(codecs.Codec)'\\nfor a list of the permitted encoding error strings.\\n\\nnewline controls how universal newlines works (it only applies to text\\nmode). It can be None, '', '\\\\n', '\\\\r', and '\\\\r\\\\n'.  It works as\\nfollows:\\n\\n* On input, if newline is None, universal newlines mode is\\n  enabled. Lines in the input can end in '\\\\n', '\\\\r', or '\\\\r\\\\n', and\\n  these are translated into '\\\\n' before being returned to the\\n  caller. If it is '', universal newline mode is enabled, but line\\n  endings are returned to the caller untranslated. If it has any of\\n  the other legal values, input lines are only terminated by the given\\n  string, and the line ending is returned to the caller untranslated.\\n\\n* On output, if newline is None, any '\\\\n' characters written are\\n  translated to the system default line separator, os.linesep. If\\n  newline is '' or '\\\\n', no translation takes place. If newline is any\\n  of the other legal values, any '\\\\n' characters written are translated\\n  to the given string.\\n\\nIf closefd is False, the underlying file descriptor will be kept open\\nwhen the file is closed. This does not work when a file name is given\\nand must be True in that case.\\n\\nA custom opener can be used by passing a callable as *opener*. The\\nunderlying file descriptor for the file object is then obtained by\\ncalling *opener* with (*file*, *flags*). *opener* must return an open\\nfile descriptor (passing os.open as *opener* results in functionality\\nsimilar to passing None).\\n\\nopen() returns a file object whose type depends on the mode, and\\nthrough which the standard file operations such as reading and writing\\nare performed. When open() is used to open a file in a text mode ('w',\\n'r', 'wt', 'rt', etc.), it returns a TextIOWrapper. When used to open\\na file in a binary mode, the returned class varies: in read binary\\nmode, it returns a BufferedReader; in write binary and append binary\\nmodes, it returns a BufferedWriter, and in read/write mode, it returns\\na BufferedRandom.\\n\\nIt is also possible to use a string or bytearray as a file for both\\nreading and writing. For strings StringIO can be used like a file\\nopened in a text mode, and for bytes a BytesIO can be used like a file\\nopened in a binary mode.\\n\"",
        "\"ord(c) -> integer\\n\\nReturn the integer ordinal of a one-character string.\"",
        "\"pow(x, y[, z]) -> number\\n\\nWith two arguments, equivalent to x**y.  With three arguments,\\nequivalent to (x**y) % z, but may be more efficient (e.g. for ints).\"",
        "\"print(value, ..., sep=' ', end='\\\\n', file=sys.stdout, flush=False)\\n\\nPrints the values to a stream, or to sys.stdout by default.\\nOptional keyword arguments:\\nfile:  a file-like object (stream); defaults to the current sys.stdout.\\nsep:   string inserted between values, default a space.\\nend:   string appended after the last value, default a newline.\\nflush: whether to forcibly flush the stream.\"",
        "\"property(fget=None, fset=None, fdel=None, doc=None) -> property attribute\\n\\nfget is a function to be used for getting an attribute value, and likewise\\nfset is a function for setting, and fdel a function for del'ing, an\\nattribute.  Typical use is to define a managed attribute x:\\n\\nclass C(object):\\n    def getx(self): return self._x\\n    def setx(self, value): self._x = value\\n    def delx(self): del self._x\\n    x = property(getx, setx, delx, \\\"I'm the 'x' property.\\\")\\n\\nDecorators make defining new properties or modifying existing ones easy:\\n\\nclass C(object):\\n    @property\\n    def x(self):\\n        \\\"I am the 'x' property.\\\"\\n        return self._x\\n    @x.setter\\n    def x(self, value):\\n        self._x = value\\n    @x.deleter\\n    def x(self):\\n        del self._x\\n\"",
        "\"\"",
        "\"range(stop) -> range object\\nrange(start, stop[, step]) -> range object\\n\\nReturn a virtual sequence of numbers from start to stop by step.\"",
        "\"repr(object) -> string\\n\\nReturn the canonical string representation of the object.\\nFor most object types, eval(repr(object)) == object.\"",
        "\"reversed(sequence) -> reverse iterator over values of the sequence\\n\\nReturn a reverse iterator\"",
        "\"round(number[, ndigits]) -> number\\n\\nRound a number to a given precision in decimal digits (default 0 digits).\\nThis returns an int when called with one argument, otherwise the\\nsame type as the number. ndigits may be negative.\"",
        "\"set() -> new empty set object\\nset(iterable) -> new set object\\n\\nBuild an unordered collection of unique elements.\"",
        "\"setattr(object, name, value)\\n\\nSet a named attribute on an object; setattr(x, 'y', v) is equivalent to\\n``x.y = v''.\"",
        "\"slice(stop)\\nslice(start, stop[, step])\\n\\nCreate a slice object.  This is used for extended slicing (e.g. a[0:10:2]).\"",
        "\"sorted(iterable, key=None, reverse=False) --> new sorted list\"",
        "\"staticmethod(function) -> method\\n\\nConvert a function to be a static method.\\n\\nA static method does not receive an implicit first argument.\\nTo declare a static method, use this idiom:\\n\\n     class C:\\n     def f(arg1, arg2, ...): ...\\n     f = staticmethod(f)\\n\\nIt can be called either on the class (e.g. C.f()) or on an instance\\n(e.g. C().f()).  The instance is ignored except for its class.\\n\\nStatic methods in Python are similar to those found in Java or C++.\\nFor a more advanced concept, see the classmethod builtin.\"",
        "\"str(object='') -> str\\nstr(bytes_or_buffer[, encoding[, errors]]) -> str\\n\\nCreate a new string object from the given object. If encoding or\\nerrors is specified, then the object must expose a data buffer\\nthat will be decoded using the given encoding and error handler.\\nOtherwise, returns the result of object.__str__() (if defined)\\nor repr(object).\\nencoding defaults to sys.getdefaultencoding().\\nerrors defaults to 'strict'.\"",
        "\"sum(iterable[, start]) -> value\\n\\nReturn the sum of an iterable of numbers (NOT strings) plus the value\\nof parameter 'start' (which defaults to 0).  When the iterable is\\nempty, return start.\"",
        "\"super() -> same as super(__class__, <first argument>)\\nsuper(type) -> unbound super object\\nsuper(type, obj) -> bound super object; requires isinstance(obj, type)\\nsuper(type, type2) -> bound super object; requires issubclass(type2, type)\\nTypical use to call a cooperative superclass method:\\nclass C(B):\\n    def meth(self, arg):\\n        super().meth(arg)\\nThis works for class methods too:\\nclass C(B):\\n    @classmethod\\n    def cmeth(cls, arg):\\n        super().cmeth(arg)\\n\"",
        "\"tuple() -> empty tuple\\ntuple(iterable) -> tuple initialized from iterable's items\\n\\nIf the argument is a tuple, the return value is the same object.\"",
        "\"type(object_or_name, bases, dict)\\ntype(object) -> the object's type\\ntype(name, bases, dict) -> a new type\"",
        "\"vars([object]) -> dictionary\\n\\nWithout arguments, equivalent to locals().\\nWith an argument, equivalent to object.__dict__.\"",
        "\"zip(iter1 [,iter2 [...]]) --> zip object\\n\\nReturn a zip object whose .__next__() method returns a tuple where\\nthe i-th element comes from the i-th iterable argument.  The .__next__()\\nmethod continues until the shortest iterable in the argument sequence\\nis exhausted and then it raises StopIteration.\"",
        "\"path\"",
        "\"find_spec\"",
        "\"find_module\"",
        "\"load_module\"",
        "\"loader\"",
        "\"name\"",
        "\"create_module\"",
        "\"origin\"",
        "\"has_location\"",
        "\"from '\"",
        "\"'\"",
        "\"(\"",
        "\")\"",
        "\"parent\"",
        "\"\"",
        "\"submodule_search_locations\"",
        "\"has_location\"",
        "\"origin\"",
        "\"cached\"",
        "\"exec_module\"",
        "\"load_module\"",
        "\"coroutine\"",
        "\"<coroutine \"",
        "\">\"",
        "\"<coroutine object>\"",
        "\"builtins\"",
        "\"function\""
    ],
    "variables": [
        "__BRYTHON__",
        "_window",
        "href",
        "$path",
        "this_url",
        "scripts",
        "elts",
        "path",
        "path_elts",
        "$script_dir",
        "name",
        "name",
        "has_storage",
        "vfs_timestamp",
        "root",
        "js",
        "root",
        "js",
        "js",
        "$pos",
        "res",
        "$op",
        "_b_",
        "_window",
        "clone",
        "res",
        "res",
        "i",
        "res",
        "keys",
        "i",
        "len",
        "i",
        "len",
        "key",
        "ops",
        "$operators",
        "$augmented_assigns",
        "noassign",
        "$op_order",
        "$op_weight",
        "$weight",
        "$loop_num",
        "create_temp_name",
        "_prefix",
        "replace_node",
        "parent",
        "pos",
        "get_rank_in_parent",
        "add_identnode",
        "new_node",
        "new_ctx",
        "expr_ctx",
        "idctx",
        "assign",
        "$add_yield_from_code",
        "pnode",
        "generator",
        "INDENT",
        "replace_with",
        "repl",
        "new_node",
        "chained_comp_num",
        "$_SyntaxError",
        "ctx_node",
        "context",
        "tree_node",
        "root",
        "tree_node",
        "src",
        "line_num",
        "message",
        "ctx",
        "context",
        "forbidden",
        "$Node",
        "res",
        "ctx_js",
        "offset",
        "temp_node",
        "loop_num",
        "$loop_num",
        "var_name",
        "js",
        "yield_node",
        "yield_expr",
        "set_yield",
        "i",
        "offset",
        "elt",
        "ctx_offset",
        "i",
        "offset",
        "def_node",
        "def_ctx",
        "blocks",
        "node",
        "is_comp",
        "node_id",
        "block",
        "parent",
        "g",
        "block_id",
        "name",
        "res",
        "new_node",
        "res",
        "res",
        "i",
        "len",
        "$YieldFromMarkerNode",
        "assign_ctx",
        "expr_ctx",
        "idctx",
        "node",
        "new_rank",
        "$MarkerNode",
        "$AbstractExprCtx",
        "$AliasCtx",
        "$AnnotationCtx",
        "scope",
        "name",
        "$AssertCtx",
        "condition",
        "message",
        "condition",
        "message",
        "new_ctx",
        "not_ctx",
        "new_node",
        "js",
        "$AssignCtx",
        "scope",
        "assigned",
        "assigned",
        "node",
        "scope",
        "left",
        "right",
        "assigned",
        "ctx",
        "nleft",
        "nassign",
        "new_node",
        "node_ctx",
        "assign",
        "left_items",
        "name",
        "right",
        "right_items",
        "new_nodes",
        "pos",
        "new_node",
        "$var",
        "new_node",
        "js",
        "new_node",
        "this_node",
        "new_node",
        "context",
        "assign",
        "i",
        "rname",
        "rlname",
        "new_node",
        "packed",
        "min_length",
        "i",
        "expr",
        "new_node",
        "context",
        "assign",
        "js",
        "rlname",
        "left",
        "right",
        "right_js",
        "res",
        "rvar",
        "$var",
        "left_to_js",
        "seq",
        "temp",
        "res",
        "$AsyncCtx",
        "$AttrCtx",
        "js",
        "scope",
        "parent",
        "$AugmentedAssignCtx",
        "scope",
        "assigned",
        "name",
        "func",
        "offset",
        "parent",
        "line_num",
        "lnum_set",
        "left_is_id",
        "left_bound_to_int",
        "check_node",
        "left_id",
        "was_bound",
        "left_id_unbound",
        "right_is_int",
        "right",
        "new_node",
        "new_node",
        "new_ctx",
        "new_expr",
        "_id",
        "assign",
        "prefix",
        "in_class",
        "scope",
        "global_ns",
        "new_node",
        "left",
        "binding_scope",
        "left_value",
        "op1",
        "left1",
        "new_node",
        "aaops",
        "js1",
        "new_node",
        "new_node",
        "js",
        "aa1",
        "ctx1",
        "expr1",
        "assign1",
        "new_op",
        "else_node",
        "aa2",
        "ctx2",
        "expr2",
        "js",
        "left",
        "assign2",
        "$AwaitCtx",
        "p",
        "context",
        "$BodyCtx",
        "ctx_node",
        "tree_node",
        "body_node",
        "set_loop_context",
        "ctx_node",
        "context",
        "tree_node",
        "loop_node",
        "break_flag",
        "ctx",
        "$BreakCtx",
        "scope",
        "res",
        "$CallArgCtx",
        "$CallCtx",
        "func_js",
        "scope",
        "def_scope",
        "scope",
        "args",
        "missing_id",
        "res",
        "_block",
        "positional",
        "kw_args",
        "star_args",
        "dstar_args",
        "args_str",
        "p",
        "i",
        "len",
        "elt",
        "i",
        "i",
        "len",
        "kw_args_str",
        "default_res",
        "classes",
        "$ClassCtx",
        "scope",
        "parent_block",
        "scope",
        "indent",
        "instance_decl",
        "local_ns",
        "js",
        "global_scope",
        "global_ns",
        "js",
        "ret_obj",
        "run_func",
        "module_name",
        "scope",
        "name_ref",
        "js",
        "pos",
        "arg_tree",
        "args",
        "kw",
        "_re",
        "_r",
        "rpos",
        "cl_cons",
        "ds_node",
        "w_decl",
        "$CompIfCtx",
        "$ComprehensionCtx",
        "intervals",
        "$CompForCtx",
        "$CompIterableCtx",
        "$ConditionCtx",
        "scope",
        "js",
        "tok",
        "res",
        "line_info",
        "$ContinueCtx",
        "$DebuggerCtx",
        "$DecoratorCtx",
        "func_rank",
        "children",
        "decorators",
        "pos",
        "obj",
        "tail",
        "scope",
        "res",
        "res",
        "$DecoratorExprCtx",
        "func",
        "obj",
        "$DefCtx",
        "scope",
        "parent_block",
        "scope",
        "pb",
        "parent_block",
        "id_ctx",
        "scope",
        "indent",
        "pblock",
        "pnode",
        "defaults",
        "defs1",
        "has_end_pos",
        "slot_list",
        "slot_init",
        "annotations",
        "func_name1",
        "func_args",
        "flags",
        "nodes",
        "js",
        "global_scope",
        "scope",
        "global_ns",
        "name",
        "local_ns",
        "h",
        "new_node",
        "enter_frame_nodes",
        "make_args_nodes",
        "js",
        "new_node",
        "only_positional",
        "new_node",
        "js",
        "else_node",
        "pos_len",
        "test_node",
        "is_method",
        "class_name",
        "class_block",
        "class_ref",
        "suspension_node",
        "i",
        "def_func_node",
        "last_instr",
        "offset",
        "indent",
        "__qualname__",
        "def_names",
        "def_names",
        "root",
        "co_varnames",
        "free_vars",
        "CODE_MARKER",
        "h",
        "h1",
        "res",
        "parent",
        "node",
        "pos",
        "try_node",
        "children",
        "except_node",
        "$DelCtx",
        "res",
        "subdel",
        "expr",
        "scope",
        "is_global",
        "res",
        "res",
        "$DictOrSetCtx",
        "nb",
        "ixs",
        "js",
        "res",
        "first",
        "i",
        "item",
        "elts",
        "js",
        "res",
        "packed",
        "res",
        "i",
        "packed",
        "$DoubleStarArgCtx",
        "$EllipsisCtx",
        "$EndOfPositionalCtx",
        "$ExceptCtx",
        "linenum_node",
        "last_child",
        "res",
        "lnum",
        "$ExprCtx",
        "res",
        "scope",
        "$ExprNot",
        "$FloatCtx",
        "$ForExpr",
        "scope",
        "target",
        "target_is_1_tuple",
        "iterable",
        "num",
        "local_ns",
        "h",
        "$range",
        "call",
        "func_name",
        "new_nodes",
        "pos",
        "children",
        "offset",
        "range_is_builtin",
        "_scope",
        "found",
        "test_range_node",
        "idt",
        "shortcut",
        "stop",
        "varname",
        "for_node",
        "start",
        "stop",
        "start",
        "stop",
        "js",
        "for_node",
        "js",
        "in_loop",
        "pnode",
        "func_node",
        "k",
        "else_node",
        "i",
        "new_node",
        "it_js",
        "iterable_name",
        "js",
        "while_node",
        "i",
        "i",
        "try_node",
        "iter_node",
        "context",
        "target_expr",
        "t",
        "assign",
        "js",
        "scope",
        "target",
        "target_is_1_tuple",
        "iterable",
        "num",
        "local_ns",
        "h",
        "new_nodes",
        "it_js",
        "iterable_name",
        "type_name",
        "running_name",
        "anext_name",
        "target_name",
        "js",
        "while_node",
        "try_node",
        "js",
        "new_node",
        "ctx",
        "expr",
        "assign",
        "catch_node",
        "js",
        "i",
        "iterable",
        "$FromCtx",
        "scope",
        "scope",
        "mod",
        "res",
        "pos",
        "indent",
        "head",
        "frame",
        "mod_elts",
        "i",
        "_mod",
        "$package",
        "packages",
        "mod_name",
        "names",
        "i",
        "len",
        "sep",
        "alias",
        "name",
        "$FuncArgs",
        "$FuncArgIdCtx",
        "node",
        "ctx",
        "context",
        "$FuncStarArgCtx",
        "ctx",
        "context",
        "$GlobalCtx",
        "$IdCtx",
        "scope",
        "ctx",
        "context",
        "_ctx",
        "scope",
        "found",
        "nb",
        "node",
        "found",
        "$test",
        "pnode",
        "i",
        "child",
        "nb",
        "node",
        "found",
        "ix",
        "pnode",
        "i",
        "child",
        "j",
        "val",
        "is_local",
        "this_node",
        "bound_before",
        "innermost",
        "scope",
        "innermost",
        "found",
        "search_ids",
        "gs",
        "innermost",
        "$test",
        "bscope",
        "global_ns",
        "locs",
        "nonlocs",
        "ns0",
        "ns1",
        "res",
        "res",
        "scope",
        "scope_ns",
        "up",
        "sc",
        "innermost",
        "scope_name",
        "$ImaginaryCtx",
        "$ImportCtx",
        "scope",
        "name",
        "parts",
        "bound",
        "name",
        "scope",
        "res",
        "mod_name",
        "aliases",
        "localns",
        "mod_elts",
        "i",
        "js",
        "$ImportedModuleCtx",
        "$IntCtx",
        "v",
        "$JSCode",
        "$KwArgCtx",
        "value",
        "ctx",
        "key",
        "res",
        "$LambdaCtx",
        "node",
        "src",
        "args",
        "body",
        "scope",
        "rand",
        "func_name",
        "py",
        "lambda_name",
        "module_name",
        "root",
        "js",
        "$ListOrTupleCtx",
        "src",
        "scope",
        "start",
        "len",
        "ixs",
        "i",
        "t",
        "js",
        "res",
        "i",
        "scope",
        "sc",
        "scope",
        "scope_id",
        "pos",
        "root",
        "module_name",
        "packed",
        "src",
        "res1",
        "items",
        "qesc",
        "comments",
        "i",
        "start",
        "end",
        "txt",
        "pos",
        "lines",
        "res2",
        "line_num",
        "lc",
        "py",
        "ix",
        "listcomp_name",
        "save_pos",
        "$pos",
        "line_info",
        "root",
        "js",
        "packed",
        "$NodeCtx",
        "scope",
        "tree_node",
        "node",
        "ntype",
        "_break_flag",
        "new_node",
        "ctx",
        "is_not_def",
        "js",
        "left",
        "right",
        "$NodeJS",
        "node",
        "$NodeJSCtx",
        "$NonlocalCtx",
        "pscope",
        "$NotCtx",
        "$OpCtx",
        "binding",
        "comps",
        "method",
        "t0",
        "t1",
        "js0",
        "js1",
        "op0",
        "op1",
        "res",
        "op",
        "method",
        "x",
        "v",
        "op",
        "vars",
        "has_float_lit",
        "scope",
        "_var",
        "i",
        "t",
        "e0",
        "e1",
        "v0",
        "v1",
        "ns",
        "t0",
        "t1",
        "tests",
        "tests1",
        "pos",
        "res",
        "t0",
        "t1",
        "$PackedCtx",
        "i",
        "child",
        "$PassCtx",
        "$RaiseCtx",
        "res",
        "exc_js",
        "$RawJSCtx",
        "$ReturnCtx",
        "node",
        "elt",
        "scope",
        "indent",
        "js",
        "$SingleKwCtx",
        "node",
        "pnode",
        "rank",
        "pctx",
        "elt",
        "scope",
        "scope_id",
        "last_child",
        "scope",
        "res",
        "$SliceCtx",
        "i",
        "$StarArgCtx",
        "$StringCtx",
        "res",
        "scope",
        "elts",
        "i",
        "expr",
        "pos",
        "br_stack",
        "parts",
        "car",
        "save_pos",
        "$pos",
        "expr_node",
        "j",
        "node",
        "k",
        "expr1",
        "fmt",
        "parsed_fmt",
        "res1",
        "re",
        "elt",
        "i",
        "js",
        "value",
        "is_fstring",
        "is_bytes",
        "$SubCtx",
        "val",
        "res",
        "shortcut",
        "expr",
        "x",
        "subs",
        "val",
        "res1",
        "$TargetListCtx",
        "$TernaryCtx",
        "res",
        "$TryCtx",
        "next_ctx",
        "scope",
        "error_name",
        "failed_name",
        "js",
        "catch_node",
        "pos",
        "has_default",
        "has_else",
        "has_finally",
        "ctx",
        "alias",
        "finally_node",
        "else_body",
        "new_node",
        "ctx",
        "else_node",
        "$UnaryCtx",
        "$WithCtx",
        "ids",
        "i",
        "len",
        "id_ctx",
        "suite",
        "item",
        "new_node",
        "ctx",
        "with_ctx",
        "nw",
        "ctx",
        "wc",
        "top_try_node",
        "num",
        "ids",
        "alias",
        "i",
        "block",
        "try_node",
        "alias",
        "catch_node",
        "js",
        "finally_node",
        "js",
        "scope",
        "expr",
        "alias",
        "new_nodes",
        "num",
        "cmtype_name",
        "cmenter_name",
        "err_name",
        "js",
        "js",
        "new_node",
        "ctx",
        "expr",
        "assign",
        "try_node",
        "catch_node",
        "if_node",
        "else_node",
        "i",
        "indent",
        "h",
        "num",
        "head",
        "cm_name",
        "cme_name",
        "exc_name",
        "val_name",
        "$YieldCtx",
        "in_lambda",
        "parent",
        "context",
        "scope",
        "in_func",
        "func_scope",
        "scope",
        "parent",
        "new_node",
        "parent",
        "$add_profile",
        "i",
        "elt",
        "offset",
        "flag",
        "pnode",
        "node",
        "mod_id",
        "new_node",
        "i",
        "$add_line_num",
        "i",
        "elt",
        "offset",
        "flag",
        "pnode",
        "node",
        "_line_info",
        "mod_id",
        "line_num",
        "js",
        "new_node",
        "i",
        "$bind",
        "node",
        "flag",
        "$previous",
        "previous",
        "$get_docstring",
        "doc_string",
        "firstchild",
        "expr",
        "$get_scope",
        "ctx_node",
        "tree_node",
        "scope",
        "ntype",
        "scope",
        "scope",
        "$get_line_num",
        "ctx_node",
        "line_num",
        "$get_module",
        "ctx_node",
        "tree_node",
        "scope",
        "scope",
        "$get_src",
        "node",
        "$get_node",
        "ctx",
        "context",
        "$to_js_map",
        "$to_js",
        "$mangle",
        "klass",
        "scope",
        "class_name",
        "$transition",
        "packed",
        "is_await",
        "assign",
        "commas",
        "tg",
        "value",
        "commas",
        "left",
        "op_expr",
        "op_expr",
        "op_expr",
        "commas",
        "ntype",
        "ctx",
        "name",
        "value",
        "expr",
        "lst",
        "comp",
        "op",
        "value",
        "son",
        "lst",
        "comp",
        "expr",
        "expr",
        "left",
        "op_expr",
        "op_expr",
        "op_expr",
        "_ce",
        "op_parent",
        "op",
        "value",
        "new_op",
        "op1",
        "repl",
        "expr",
        "new_op",
        "_flag",
        "c2",
        "c2js",
        "c2_clone",
        "vname",
        "and_expr",
        "new_op",
        "expr",
        "new_op",
        "parent",
        "child",
        "annotation",
        "i",
        "item",
        "ptype",
        "scope",
        "name",
        "parent",
        "assign_expr",
        "in_comp",
        "ctx",
        "ctx",
        "context",
        "t",
        "def_ctx",
        "last",
        "op",
        "value",
        "ctx",
        "node",
        "ix",
        "expr",
        "comp",
        "expr",
        "expr",
        "expr",
        "expr",
        "previous",
        "previous",
        "previous",
        "previous",
        "expr",
        "a",
        "value",
        "expr",
        "t",
        "expr",
        "t",
        "expr",
        "expr",
        "expr1",
        "repl",
        "s_escaped",
        "is_escaped",
        "i",
        "$tokenize",
        "br_close",
        "br_stack",
        "br_pos",
        "kwdict",
        "unsupported",
        "$indented",
        "int_pattern",
        "float_pattern1",
        "float_pattern2",
        "hex_pattern",
        "octal_pattern",
        "binary_pattern",
        "context",
        "new_node",
        "current",
        "root",
        "name",
        "_type",
        "pos",
        "indent",
        "string_modifier",
        "lnum",
        "car",
        "indent",
        "_s",
        "_s",
        "offset",
        "end",
        "raw",
        "fstring",
        "sm_length",
        "end",
        "escaped",
        "zone",
        "car",
        "found",
        "end_lit",
        "re",
        "search",
        "end_lit",
        "description",
        "xhr",
        "re",
        "cp",
        "$string",
        "i",
        "$car",
        "re",
        "string_no_bs",
        "elts",
        "p0",
        "pos",
        "re",
        "res",
        "re",
        "res",
        "j",
        "res",
        "res",
        "res",
        "res",
        "pos1",
        "ends_line",
        "_s",
        "op_match",
        "br_err",
        "lines",
        "id",
        "fname",
        "parent",
        "$create_root_node",
        "root",
        "__package__",
        "__package__",
        "t0",
        "is_comp",
        "has_annotations",
        "line_info",
        "is_comp",
        "has_annotations",
        "line_info",
        "locals_is_module",
        "local_ns",
        "global_ns",
        "root",
        "js",
        "pos",
        "offset",
        "enter_frame_pos",
        "offset",
        "js",
        "try_node",
        "children",
        "catch_node",
        "t1",
        "meta_path",
        "path_hooks",
        "brython",
        "$href",
        "$href_elts",
        "lang",
        "prefetch",
        "path_links",
        "_importlib",
        "i",
        "e",
        "href",
        "filetype",
        "root",
        "js",
        "script",
        "imports1",
        "imports",
        "submodule",
        "src",
        "subimports",
        "is_package",
        "j",
        "$log",
        "_run_scripts",
        "kk",
        "defined_ids",
        "$elts",
        "scripts",
        "$elts",
        "webworkers",
        "i",
        "script",
        "first_script",
        "module_name",
        "$src",
        "js",
        "root",
        "$trace",
        "i",
        "elt",
        "src",
        "i",
        "len",
        "worker",
        "i",
        "elt",
        "brython",
        "_b_",
        "res",
        "timestamp",
        "elts",
        "ext",
        "source",
        "imports",
        "is_package",
        "source_ts",
        "__package__",
        "parts",
        "root",
        "js",
        "parts",
        "imports",
        "subimports",
        "i",
        "subimport",
        "url_elts",
        "nb_dots",
        "elts",
        "submodule",
        "ext",
        "source",
        "db",
        "tx",
        "store",
        "cursor",
        "data",
        "request",
        "ix",
        "db",
        "tx",
        "store",
        "idb_cx",
        "db",
        "version",
        "db",
        "store",
        "db",
        "store",
        "tx",
        "store",
        "record",
        "outdated",
        "db",
        "store",
        "url",
        "name",
        "req",
        "qs",
        "src",
        "inImported",
        "elts",
        "ext",
        "source",
        "is_package",
        "loop",
        "db",
        "tx",
        "store",
        "req",
        "task",
        "func",
        "args",
        "script",
        "script_id",
        "name",
        "trace",
        "offset",
        "nb_added",
        "i",
        "start",
        "mod_obj",
        "subimports",
        "_b_",
        "opnames",
        "opsigns",
        "klass",
        "prop",
        "objects",
        "klass",
        "res",
        "i",
        "len",
        "$",
        "klass",
        "$test",
        "res",
        "v",
        "mro",
        "i",
        "len",
        "get",
        "get",
        "i",
        "__get__",
        "res1",
        "method",
        "args",
        "i",
        "len",
        "clmethod",
        "_ga",
        "mro",
        "i",
        "len",
        "hash",
        "init_func",
        "eq",
        "res",
        "res",
        "d",
        "res",
        "arg2",
        "d",
        "nb",
        "repr_func",
        "res",
        "args",
        "A",
        "_b_",
        "metaclass",
        "i",
        "extra_kwargs",
        "prepare_kwargs",
        "i",
        "key",
        "val",
        "mro0",
        "class_obj",
        "orig_bases",
        "use_mro_entries",
        "i",
        "mro_entries",
        "entries",
        "i",
        "mc",
        "prepare",
        "cl_dict",
        "rank",
        "class_dict",
        "get_class_item",
        "it",
        "key",
        "is_instanciable",
        "non_abstract_methods",
        "abstract_methods",
        "mro",
        "i",
        "kdict",
        "v",
        "_slots",
        "i",
        "meta_new",
        "kls",
        "meta_init",
        "i",
        "init_subclass",
        "extra_args",
        "klass",
        "i",
        "len",
        "new_func",
        "instance",
        "init_func",
        "args",
        "mro",
        "res",
        "i",
        "len",
        "ann",
        "res",
        "func",
        "func",
        "res",
        "$test",
        "v",
        "mro",
        "i",
        "v",
        "meta",
        "res",
        "meta_mro",
        "i",
        "res",
        "meta_method",
        "getattr",
        "i",
        "result",
        "$",
        "kl",
        "i",
        "class_dict",
        "items",
        "i",
        "key",
        "v",
        "set_name",
        "$defaults",
        "qualname",
        "bases",
        "seqs",
        "pos1",
        "i",
        "bmro",
        "pos",
        "js_func",
        "res",
        "_tmp",
        "k",
        "mro",
        "mpos",
        "non_empty",
        "pos",
        "i",
        "i",
        "seq",
        "candidate",
        "not_head",
        "pos",
        "j",
        "s",
        "i",
        "seq",
        "klass",
        "wrapper_descriptor",
        "$instance_creator",
        "metaclass",
        "call_func",
        "factory",
        "obj",
        "obj",
        "factory",
        "method_wrapper",
        "f",
        "member_descriptor",
        "method",
        "f",
        "f",
        "infos",
        "res",
        "_b_",
        "_window",
        "isWebWorker",
        "$args",
        "i",
        "len",
        "has_kw_args",
        "nb_pos",
        "filled",
        "extra_kw",
        "only_positional",
        "end_positional",
        "kw_args",
        "i",
        "argcount",
        "i",
        "value",
        "key1",
        "missing",
        "msg",
        "missing",
        "klass",
        "ix",
        "py",
        "indent",
        "i",
        "len",
        "item",
        "ix",
        "res",
        "py",
        "indent",
        "i",
        "len",
        "item",
        "line_info",
        "dictcomp_name",
        "root",
        "js",
        "$ix",
        "genexpr_name",
        "py",
        "indent",
        "i",
        "len",
        "item",
        "line_info",
        "root",
        "js",
        "lines",
        "len",
        "alt_name",
        "frame",
        "ns",
        "i",
        "frame",
        "i",
        "search_id",
        "frame",
        "res",
        "i",
        "res",
        "i",
        "frame",
        "res",
        "i",
        "len",
        "klass",
        "res",
        "res",
        "i",
        "start",
        "i",
        "start",
        "is_list",
        "class_gi",
        "gi",
        "s",
        "res",
        "repl",
        "j",
        "test",
        "nb",
        "i",
        "start",
        "i",
        "start",
        "i",
        "len",
        "ga",
        "augm_func",
        "augm_item_src",
        "augm_ops",
        "i",
        "len",
        "augm_code",
        "i",
        "mapping",
        "it",
        "getter",
        "key",
        "res",
        "last",
        "it",
        "f",
        "_iter",
        "method",
        "elt",
        "i",
        "elt",
        "$io",
        "klass",
        "msg",
        "ropnames",
        "ropsigns",
        "j",
        "_len_j",
        "_str",
        "pos",
        "v",
        "v",
        "expected_class",
        "klass",
        "i",
        "missing",
        "method",
        "res",
        "method",
        "i",
        "top_frame",
        "trace_func",
        "exc",
        "frame_obj",
        "top_frame",
        "trace_func",
        "frame_obj",
        "top_frame",
        "trace_func",
        "frame_obj",
        "top_frame",
        "trace_func",
        "frame_obj",
        "gen_obj",
        "frame",
        "closed_cm",
        "frame",
        "i",
        "min_int",
        "max_int",
        "i",
        "arg",
        "z",
        "method",
        "res",
        "z",
        "z",
        "z",
        "z",
        "reversed_op",
        "method2comp",
        "x1",
        "y1",
        "res",
        "rev_op",
        "compared",
        "rev_func",
        "opname2opsign",
        "x_class",
        "y_class",
        "method",
        "kl_name",
        "res",
        "i",
        "len",
        "result",
        "pattern",
        "bltns",
        "odga",
        "check_nb_args",
        "len",
        "last",
        "kw",
        "check_no_kw",
        "NoneType",
        "key",
        "klass",
        "method",
        "iterable",
        "elt",
        "iterable",
        "elt",
        "res",
        "res1",
        "cp",
        "i",
        "s",
        "prefix",
        "value",
        "klass",
        "method",
        "res",
        "missing",
        "hook",
        "classmethod",
        "f",
        "method",
        "code",
        "$",
        "module_name",
        "interactive",
        "lines",
        "__debug__",
        "found",
        "frame",
        "frame",
        "globals_obj",
        "res",
        "pos",
        "klass",
        "dir_func",
        "res",
        "res",
        "pos",
        "klass",
        "dm",
        "$ns",
        "_iter",
        "start",
        "$",
        "src",
        "_globals",
        "_locals",
        "mode",
        "current_frame",
        "current_locals_id",
        "current_globals_id",
        "stack_len",
        "globals_id",
        "globals_name",
        "globals_id",
        "locals_id",
        "parent_scope",
        "local_scope",
        "global_scope",
        "grandparent_scope",
        "gobj",
        "ex",
        "obj",
        "globals_is_dict",
        "items",
        "items",
        "item1",
        "lobj",
        "ex",
        "obj",
        "locals_is_dict",
        "items",
        "items",
        "item1",
        "root",
        "js",
        "gns",
        "lns",
        "try_node",
        "instr",
        "children",
        "i",
        "last",
        "js",
        "locals_obj",
        "globals_obj",
        "res",
        "res",
        "res",
        "attr1",
        "jsobj",
        "i",
        "len",
        "missing",
        "$",
        "src",
        "globals",
        "locals",
        "_item",
        "$",
        "klass",
        "method",
        "msg",
        "missing",
        "$",
        "mro",
        "i",
        "len",
        "rawname",
        "attr",
        "is_class",
        "klass",
        "$test",
        "kl",
        "res",
        "f",
        "res",
        "i",
        "subclasses",
        "value",
        "object_attr",
        "attrs",
        "func",
        "method",
        "mro",
        "attr_func",
        "mro",
        "i",
        "len",
        "res",
        "res",
        "cname",
        "res",
        "hash_cache",
        "cached",
        "klass",
        "hash_method",
        "url",
        "f",
        "_doc",
        "i",
        "pydoc",
        "$",
        "res",
        "ps1",
        "ps2",
        "i",
        "klass",
        "mro",
        "i",
        "instancecheck",
        "i",
        "sch",
        "iterator_class",
        "res",
        "klass",
        "_iter",
        "gi_method",
        "gi",
        "ln",
        "res",
        "$",
        "sentinel",
        "sentinel",
        "klass",
        "method",
        "res",
        "$",
        "func",
        "iter_args",
        "obj",
        "args",
        "i",
        "$op_name",
        "last_arg",
        "nb_args",
        "has_default",
        "func",
        "default_value",
        "$iter",
        "res",
        "x",
        "res",
        "i",
        "x",
        "start",
        "res",
        "coef",
        "i",
        "res",
        "res",
        "objlen",
        "res",
        "res",
        "i",
        "item",
        "coef",
        "j",
        "missing",
        "$",
        "klass",
        "ga",
        "NotImplementedType",
        "$",
        "x",
        "y",
        "z",
        "klass",
        "$ns",
        "ks",
        "end",
        "sep",
        "file",
        "args",
        "items",
        "res",
        "flush",
        "property",
        "res",
        "klass",
        "reversed",
        "klass",
        "rev_method",
        "method",
        "res",
        "$",
        "arg",
        "n",
        "klass",
        "mult",
        "x",
        "floor",
        "diff",
        "res",
        "$",
        "obj",
        "attr",
        "value",
        "$test",
        "i",
        "metaclass",
        "res",
        "klass",
        "mro",
        "_len",
        "i",
        "rcls",
        "__set1__",
        "__set1__",
        "mro",
        "i",
        "_len",
        "__set__",
        "setter",
        "_setattr",
        "mro",
        "i",
        "_len",
        "special_attrs",
        "has_slot",
        "i",
        "kl",
        "$",
        "_list",
        "args",
        "i",
        "staticmethod",
        "f",
        "$",
        "iterable",
        "start",
        "res",
        "start",
        "iterable",
        "_item",
        "$$super",
        "missing2",
        "mro",
        "res",
        "sc",
        "sc_mro",
        "i",
        "f",
        "$test",
        "callable",
        "method",
        "res",
        "res",
        "$",
        "$Reader",
        "$",
        "size",
        "len",
        "lines",
        "pos",
        "source",
        "ix",
        "$",
        "size",
        "ix",
        "res",
        "ix",
        "res",
        "$",
        "hint",
        "nb_read",
        "lines",
        "lines",
        "$BufferedReader",
        "$TextIOWrapper",
        "$",
        "$ns",
        "$bytes",
        "$string",
        "$res",
        "mode",
        "encoding",
        "is_binary",
        "source",
        "req",
        "status",
        "fake_qs",
        "res",
        "res",
        "$ns",
        "_args",
        "args",
        "i",
        "rank",
        "items",
        "line",
        "flag",
        "i",
        "zip_iterator",
        "ellipsis",
        "FunctionCode",
        "FunctionGlobals",
        "infos",
        "attrs",
        "method",
        "res",
        "free_vars",
        "cells",
        "i",
        "set_func",
        "argcount",
        "varnames",
        "$defaults",
        "i",
        "pos",
        "klass",
        "new_func",
        "builtin_function",
        "method_wrapper",
        "wrapper_descriptor",
        "other_builtins",
        "builtin_names",
        "i",
        "name",
        "orig_name",
        "name",
        "name1",
        "name",
        "bltns",
        "frame",
        "frame",
        "frame",
        "es",
        "pos2line",
        "lnum",
        "line_pos",
        "i",
        "len",
        "lines",
        "line",
        "lpos",
        "len",
        "exc",
        "exc",
        "trace",
        "line_info",
        "info",
        "src",
        "lines",
        "line",
        "traceback",
        "frame",
        "line_info",
        "first_frame",
        "line_info",
        "lineno",
        "info",
        "src",
        "i",
        "fr",
        "frame",
        "fs",
        "stack",
        "res",
        "_frame",
        "locals_id",
        "filename",
        "line_info",
        "module_name",
        "co_name",
        "args",
        "res",
        "err",
        "getExceptionTrace",
        "info",
        "line_info",
        "i",
        "frame",
        "$line_info",
        "line_info",
        "src",
        "src",
        "lines",
        "line",
        "current_frame",
        "is_local",
        "i",
        "len",
        "i",
        "len",
        "show_stack",
        "err",
        "exc",
        "$message",
        "exc",
        "js_exc",
        "current_locals",
        "i",
        "len",
        "this_exc_class",
        "i",
        "exc_class",
        "msg",
        "parts",
        "err_type",
        "err_msg",
        "_str",
        "pos",
        "i",
        "name",
        "code",
        "code",
        "name",
        "$exc",
        "se",
        "arg",
        "exc",
        "frame",
        "src",
        "_b_",
        "sub",
        "fl",
        "res",
        "len",
        "len",
        "norm",
        "substep",
        "substart",
        "substop",
        "res",
        "len",
        "RangeIterator",
        "res",
        "len",
        "n",
        "q",
        "n",
        "q",
        "n",
        "res",
        "comp",
        "it",
        "_next",
        "nb",
        "$",
        "other",
        "comp",
        "it",
        "_next",
        "nb",
        "sub",
        "fl",
        "res",
        "$",
        "start",
        "stop",
        "step",
        "safe",
        "conv1",
        "conv2",
        "attrs",
        "res",
        "i",
        "val",
        "step",
        "step_is_neg",
        "len_1",
        "start",
        "$",
        "len",
        "_step",
        "_start",
        "_stop",
        "_start",
        "_stop",
        "$",
        "start",
        "stop",
        "step",
        "res",
        "_b_",
        "isinstance",
        "getattr",
        "from_unicode",
        "to_unicode",
        "res",
        "ga",
        "ws",
        "i",
        "len",
        "i",
        "len",
        "i",
        "mutable_methods",
        "args",
        "pos",
        "i",
        "len",
        "bytearray_iterator",
        "pos",
        "arg",
        "start",
        "stop",
        "$temp",
        "i",
        "it",
        "len",
        "i",
        "flag",
        "j",
        "bytes_iterator",
        "i",
        "pos",
        "arg",
        "step",
        "start",
        "stop",
        "start",
        "stop",
        "res",
        "i",
        "pos",
        "i",
        "start",
        "i",
        "start",
        "hash",
        "i",
        "len",
        "s",
        "res",
        "$",
        "other",
        "t",
        "source",
        "slen",
        "i",
        "j",
        "res",
        "$",
        "int_list",
        "pos",
        "i",
        "source",
        "i",
        "item",
        "res",
        "i",
        "len",
        "s",
        "hx",
        "src",
        "len",
        "buffer",
        "i",
        "$",
        "diff",
        "ljust",
        "$",
        "n",
        "index",
        "len",
        "$",
        "$",
        "start",
        "end",
        "res",
        "i",
        "len",
        "i",
        "$",
        "tab_spaces",
        "i",
        "buffer",
        "i",
        "$",
        "sub",
        "start",
        "end",
        "start",
        "end",
        "len",
        "i",
        "start",
        "chunk",
        "found",
        "j",
        "$",
        "source",
        "i",
        "$",
        "res",
        "i",
        "len",
        "hexa",
        "$",
        "index",
        "src",
        "len",
        "res",
        "i",
        "src",
        "len",
        "res",
        "i",
        "src",
        "len",
        "res",
        "i",
        "src",
        "len",
        "res",
        "i",
        "src",
        "len",
        "i",
        "src",
        "len",
        "res",
        "i",
        "src",
        "len",
        "current_char_is_letter",
        "prev_char_was_letter",
        "is_uppercase",
        "is_lowercase",
        "i",
        "$ns",
        "iterable",
        "next_func",
        "res",
        "empty",
        "item",
        "_lower",
        "_res",
        "pos",
        "i",
        "len",
        "$",
        "padding",
        "count",
        "i",
        "_t",
        "to",
        "i",
        "i",
        "len",
        "_ndx",
        "$",
        "len",
        "src",
        "i",
        "$",
        "res",
        "src",
        "len",
        "old",
        "$new",
        "count",
        "i",
        "j",
        "sub",
        "subbytes",
        "start",
        "end",
        "$",
        "sub",
        "start",
        "end",
        "len",
        "i",
        "chunk",
        "found",
        "j",
        "$",
        "index",
        "$",
        "padding",
        "count",
        "i",
        "$",
        "len",
        "src",
        "i",
        "$",
        "res",
        "start",
        "stop",
        "seps",
        "len",
        "src",
        "blen",
        "match",
        "i",
        "$",
        "keepends",
        "res",
        "source",
        "start",
        "pos",
        "$",
        "start",
        "res",
        "i",
        "items",
        "i",
        "prefix",
        "res",
        "src",
        "len",
        "buffer",
        "i",
        "src",
        "len",
        "i",
        "res",
        "pos",
        "i",
        "len",
        "_upper",
        "_res",
        "pos",
        "i",
        "len",
        "buffer",
        "prefix_offset",
        "count",
        "padding",
        "i",
        "enc",
        "mod",
        "mod",
        "decode",
        "s",
        "b",
        "enc",
        "pos",
        "s",
        "err_info",
        "cp",
        "i",
        "pos",
        "cp",
        "cp",
        "i",
        "len",
        "cp",
        "msg",
        "encode",
        "$",
        "s",
        "encoding",
        "errors",
        "t",
        "pos",
        "enc",
        "res",
        "i",
        "len",
        "cp",
        "i",
        "len",
        "cp",
        "i",
        "len",
        "cp",
        "i",
        "len",
        "cp",
        "us",
        "j",
        "$",
        "_b_",
        "$N",
        "res",
        "res",
        "i",
        "len",
        "i",
        "hash",
        "i",
        "len",
        "i",
        "len",
        "i",
        "len",
        "$",
        "iterable",
        "it",
        "item",
        "set_iterator",
        "cfunc",
        "i",
        "len",
        "res",
        "func",
        "klass_name",
        "head",
        "tail",
        "res",
        "i",
        "len",
        "r",
        "res",
        "cfunc",
        "i",
        "len",
        "res",
        "cfunc",
        "i",
        "len",
        "i",
        "len",
        "$simple",
        "ix",
        "value",
        "items",
        "items",
        "cfunc",
        "i",
        "len",
        "$",
        "item",
        "$",
        "$",
        "res",
        "$",
        "i",
        "s",
        "_next",
        "item",
        "_type",
        "_index",
        "j",
        "hash",
        "k",
        "$",
        "$",
        "i",
        "remove",
        "s",
        "j",
        "_item",
        "_type",
        "found",
        "hash",
        "hashes",
        "k",
        "k",
        "j",
        "$",
        "i",
        "len",
        "item",
        "hash",
        "items",
        "k",
        "$",
        "item",
        "_i",
        "hash",
        "i",
        "len",
        "i",
        "len",
        "$",
        "s",
        "_next",
        "item",
        "remove",
        "add",
        "_type",
        "_index",
        "found",
        "j",
        "i",
        "i",
        "$",
        "i",
        "other",
        "j",
        "_len",
        "$",
        "res",
        "i",
        "fc",
        "$",
        "func",
        "i",
        "len",
        "$",
        "func",
        "it",
        "item",
        "res",
        "args",
        "_hash",
        "i",
        "len",
        "_h",
        "singleton_id",
        "$",
        "res",
        "bltns",
        "_window",
        "res",
        "i",
        "len",
        "res",
        "res",
        "i",
        "len",
        "res",
        "JSConstructor",
        "args",
        "i",
        "len",
        "factory",
        "res",
        "args",
        "i",
        "len",
        "factory",
        "res",
        "UndefinedClass",
        "Undefined",
        "jsobj2pyobj",
        "pyobj2jsobj",
        "klass",
        "res",
        "jsobj",
        "items",
        "args",
        "i",
        "JSObject",
        "$test",
        "args",
        "i",
        "res",
        "js_attr",
        "res",
        "args",
        "i",
        "len",
        "arg",
        "kw",
        "new_this",
        "result",
        "res",
        "mro",
        "i",
        "len",
        "v",
        "args",
        "i",
        "len",
        "arg",
        "rank_to_int",
        "res",
        "res",
        "JSObject_iterator",
        "items",
        "items",
        "nxt",
        "i",
        "i",
        "_dict",
        "proto",
        "name",
        "proto_str",
        "args",
        "i",
        "len",
        "info",
        "no_dict",
        "js_func",
        "klass",
        "_b_",
        "_window",
        "res",
        "parts",
        "xhr",
        "fake_qs",
        "res",
        "mod_name",
        "timer",
        "module_contents",
        "$module",
        "kk",
        "i",
        "len",
        "mod_name",
        "module_contents",
        "mod_elts",
        "root",
        "js",
        "mod_name",
        "$Node",
        "$NodeJSCtx",
        "src",
        "src",
        "js",
        "module_id",
        "$module",
        "mod",
        "finder_VFS",
        "stored",
        "timestamp",
        "ext",
        "module_contents",
        "imports",
        "path",
        "parts",
        "i",
        "parent",
        "mod_js",
        "is_package",
        "mod",
        "elts",
        "parent_id",
        "$module",
        "mod_name",
        "record",
        "elts",
        "idb_cx",
        "db",
        "tx",
        "store",
        "cursor",
        "request",
        "spec",
        "mod",
        "stored",
        "is_package",
        "timestamp",
        "is_builtin",
        "finder_stdlib_static",
        "metadata",
        "spec",
        "mod",
        "address",
        "elts",
        "$package",
        "ext",
        "is_pkg",
        "path",
        "metadata",
        "res",
        "finder_path",
        "_spec",
        "code",
        "src_type",
        "current_module",
        "i",
        "li",
        "path_entry",
        "finder",
        "finder_notfound",
        "j",
        "lj",
        "hook",
        "find_spec",
        "fs_func",
        "spec",
        "url_hook",
        "loader_data",
        "notfound",
        "hint",
        "base_path",
        "modpaths",
        "tryall",
        "j",
        "file_info",
        "_sys_paths",
        "i",
        "_path",
        "_type",
        "exc",
        "from_stdlib",
        "file",
        "modobj",
        "parsed_name",
        "has_from",
        "i",
        "modsep",
        "_mod_name",
        "len",
        "__path__",
        "_parent_name",
        "_mod_name",
        "modobj",
        "exc",
        "parts",
        "norm_parts",
        "prefix",
        "i",
        "len",
        "p",
        "mod_name",
        "current_frame",
        "_globals",
        "__import__",
        "globals",
        "importer",
        "modobj",
        "alias",
        "__all__",
        "fromlist",
        "thunk",
        "i",
        "l",
        "name",
        "alias",
        "name1",
        "frame",
        "line_info",
        "line_elts",
        "line_num",
        "errname",
        "value",
        "Loader",
        "_importlib_module",
        "bltns",
        "msg",
        "tmp",
        "fp",
        "exponent",
        "i",
        "value",
        "_m",
        "_m",
        "_sign",
        "_int",
        "_fraction",
        "_exponent",
        "_sum",
        "_int",
        "i",
        "len",
        "res",
        "exp",
        "prec",
        "res",
        "pt_pos",
        "missing",
        "exp_fmt",
        "exp",
        "parts",
        "signif",
        "res1",
        "exp",
        "elts",
        "res",
        "fmt",
        "raw",
        "_int",
        "len",
        "nb",
        "chunks",
        "i",
        "_v",
        "r",
        "hipart",
        "x",
        "x1",
        "x",
        "x1",
        "x",
        "x1",
        "x",
        "sign",
        "ex",
        "man",
        "x1",
        "y",
        "x",
        "j",
        "i",
        "DBL_MANT_DIG",
        "TOHEX_NBITS",
        "_a",
        "_m",
        "_e",
        "_shift",
        "_int2hex",
        "_s",
        "i",
        "_esign",
        "q",
        "r",
        "bool_value",
        "bool_value",
        "res",
        "other_int",
        "preal",
        "ln",
        "res",
        "cmod",
        "$op_func",
        "bool_value",
        "$ops",
        "$opf",
        "$comp_func",
        "inv_op",
        "$notimplemented",
        "$opfunc",
        "arabic_digits",
        "res",
        "i",
        "x",
        "s",
        "klass",
        "num_value",
        "FloatSubclass",
        "args",
        "pos",
        "args",
        "pos",
        "i",
        "len",
        "_b_",
        "msg",
        "$",
        "$",
        "x",
        "byteorder",
        "signed",
        "_bytes",
        "_len",
        "i",
        "num",
        "_mult",
        "i",
        "num",
        "_mult",
        "i",
        "$",
        "len",
        "byteorder",
        "kwargs",
        "signed",
        "res",
        "value",
        "quotient",
        "rest",
        "res",
        "fmt",
        "res",
        "sign",
        "rest",
        "len",
        "nb",
        "chunks",
        "i",
        "rlshift",
        "val",
        "res",
        "res",
        "$temp",
        "i",
        "res",
        "d",
        "u",
        "v",
        "d",
        "u",
        "v",
        "result",
        "exponent",
        "other",
        "long_int",
        "gcd",
        "inv",
        "gcd",
        "inv",
        "_",
        "res",
        "preal",
        "ln",
        "rpow",
        "rrshift",
        "cmod",
        "$op_func",
        "rsub",
        "$ops",
        "opf",
        "$op_func",
        "res",
        "bool_value",
        "rsub",
        "$ops",
        "opf",
        "$comp_func",
        "$valid_digits",
        "digits",
        "i",
        "digits",
        "i",
        "$ns",
        "value",
        "res",
        "z",
        "_value",
        "_pre",
        "_digits",
        "_re",
        "match",
        "res",
        "num_value",
        "klass",
        "missing",
        "bool_method",
        "res",
        "methods",
        "method",
        "value",
        "msg",
        "msg",
        "$",
        "bltns",
        "long_int",
        "res",
        "carry",
        "iself",
        "sv",
        "x",
        "i",
        "len",
        "nb_chunks",
        "chunks",
        "pos",
        "start",
        "nb",
        "bin",
        "i",
        "rest",
        "carry",
        "obj1",
        "len",
        "nb_chunks",
        "chunks",
        "pos",
        "start",
        "nb",
        "in_base",
        "i",
        "rest",
        "carry",
        "x",
        "iv1",
        "iv2",
        "res1",
        "rest",
        "quot",
        "res1",
        "res_safe",
        "quotient",
        "mod",
        "quotient",
        "left",
        "right",
        "mv2",
        "candidate",
        "nb",
        "chunks",
        "len",
        "i",
        "pos",
        "ix",
        "iy",
        "z",
        "chunk_size",
        "cx",
        "cy",
        "products",
        "len",
        "i",
        "i",
        "j",
        "nb",
        "pos",
        "i",
        "chunks",
        "j",
        "result",
        "i",
        "s",
        "res",
        "carry",
        "i1",
        "sv",
        "x",
        "i",
        "s",
        "v",
        "s",
        "t",
        "n1",
        "n2",
        "pos",
        "exp",
        "res",
        "v1",
        "v2",
        "temp1",
        "temp2",
        "res",
        "res0",
        "res0",
        "dm",
        "t",
        "res",
        "pos",
        "res",
        "temp",
        "d",
        "nres",
        "flag",
        "len",
        "i",
        "len",
        "bit",
        "is_long",
        "shift_safe",
        "shift_value",
        "res",
        "x",
        "carry",
        "res1",
        "i",
        "value",
        "res",
        "v1",
        "v2",
        "temp",
        "v2",
        "start",
        "res",
        "i",
        "msg",
        "res",
        "pow",
        "pow2",
        "res",
        "res",
        "res",
        "res",
        "v1",
        "v2",
        "temp",
        "v2",
        "start",
        "res",
        "i",
        "res",
        "v",
        "dm",
        "is_digits",
        "i",
        "i",
        "MAX_SAFE_INTEGER",
        "MIN_SAFE_INTEGER",
        "v",
        "has_prefix",
        "pos",
        "start",
        "is_digits",
        "point",
        "i",
        "mant",
        "coef",
        "v10",
        "ix",
        "digit_base10",
        "digit_by_coef",
        "_b_",
        "_rf",
        "_if",
        "mag",
        "res",
        "res",
        "missing",
        "args",
        "$real",
        "$imag",
        "arg",
        "$real",
        "complex_re",
        "parts",
        "res",
        "real_to_num",
        "norm",
        "sin",
        "cos",
        "angle",
        "exp",
        "angle",
        "res",
        "x",
        "y",
        "pw",
        "theta",
        "r",
        "i",
        "_a",
        "_b",
        "_num",
        "_div",
        "_num2",
        "$op_func",
        "$ops",
        "$op_func",
        "bool_value",
        "$comp_func",
        "_real",
        "_real_mantissa",
        "_sign",
        "_imag",
        "_imag_mantissa",
        "_j",
        "type_conversions",
        "_convert",
        "klass",
        "i",
        "missing",
        "method",
        "make_complex",
        "bltns",
        "DEFAULT_MIN_MERGE",
        "DEFAULT_MIN_GALLOPING",
        "DEFAULT_TMP_STORAGE_LENGTH",
        "POWERS_OF_TEN",
        "t",
        "aStr",
        "bStr",
        "r",
        "runHi",
        "t",
        "pivot",
        "left",
        "lo",
        "right",
        "start",
        "mid",
        "n",
        "lastOffset",
        "maxOffset",
        "offset",
        "tmp",
        "lastOffset",
        "m",
        "lastOffset",
        "maxOffset",
        "offset",
        "tmp",
        "lastOffset",
        "m",
        "TIM_SORT_ASSERTION",
        "TimSortAssertion",
        "TimSort",
        "n",
        "n",
        "compare",
        "array",
        "start1",
        "length1",
        "start2",
        "length2",
        "k",
        "compare",
        "array",
        "tmp",
        "i",
        "i",
        "cursor1",
        "cursor2",
        "start2",
        "dest",
        "start1",
        "i",
        "i",
        "minGallop",
        "count1",
        "count2",
        "exit",
        "i",
        "i",
        "i",
        "i",
        "compare",
        "array",
        "tmp",
        "i",
        "i",
        "cursor1",
        "cursor2",
        "dest",
        "customCursor",
        "customDest",
        "i",
        "i",
        "minGallop",
        "count1",
        "count2",
        "exit",
        "i",
        "i",
        "i",
        "i",
        "remaining",
        "runLength",
        "ts",
        "minRun",
        "force",
        "remaining",
        "_b_",
        "getattr",
        "isinstance",
        "$N",
        "radd",
        "res",
        "$",
        "item",
        "_eq",
        "i",
        "pos",
        "arg",
        "step",
        "start",
        "stop",
        "res",
        "i",
        "pos",
        "i",
        "start",
        "i",
        "start",
        "i",
        "klass",
        "klass",
        "i",
        "$",
        "key",
        "factory",
        "items",
        "pos",
        "key",
        "s",
        "res",
        "i",
        "items",
        "pos",
        "start",
        "stop",
        "step",
        "i",
        "start",
        "i",
        "start",
        "i",
        "i",
        "$",
        "radd",
        "x",
        "i",
        "$",
        "x",
        "len",
        "pos",
        "len",
        "i",
        "len_func",
        "pop_func",
        "arg",
        "next_func",
        "pos",
        "res",
        "list_iterator",
        "res",
        "i",
        "res",
        "$temp",
        "len",
        "i",
        "j",
        "rmul",
        "res",
        "_r",
        "i",
        "$",
        "arg",
        "value",
        "pos",
        "arg",
        "s",
        "_ops",
        "$",
        "$",
        "$",
        "$",
        "res",
        "_eq",
        "i",
        "$",
        "other",
        "i",
        "missing",
        "$",
        "start",
        "stop",
        "_eq",
        "i",
        "start",
        "$",
        "missing",
        "$",
        "pos",
        "res",
        "$",
        "i",
        "len",
        "$",
        "_len",
        "i",
        "buf",
        "piv",
        "store",
        "begin",
        "le_func",
        "ix",
        "begin",
        "ix",
        "begin",
        "x",
        "tmp",
        "pivot",
        "cl",
        "i",
        "$",
        "func",
        "$N",
        "reverse",
        "kw_args",
        "keys",
        "i",
        "cmp",
        "_a",
        "_b",
        "_a",
        "_b",
        "$",
        "obj",
        "res",
        "res",
        "pos",
        "arg",
        "next_func",
        "JSArray",
        "res",
        "i",
        "len",
        "tuple_iterator",
        "obj",
        "x",
        "i",
        "len",
        "y",
        "arg",
        "next_func",
        "item",
        "$B",
        "__BRYTHON__",
        "step",
        "i",
        "nb",
        "i",
        "bltns",
        "unicode_tables",
        "nbcar",
        "i",
        "len",
        "fmt",
        "pos",
        "arg",
        "s",
        "start",
        "stop",
        "step",
        "res",
        "i",
        "i",
        "start",
        "i",
        "start",
        "prefix",
        "suffix",
        "mask",
        "x",
        "prefix",
        "i",
        "len",
        "str_iterator",
        "items",
        "kwarg_key",
        "NotANumber",
        "number_check",
        "get_char_array",
        "format_padding",
        "padding",
        "format_int_precision",
        "precision",
        "s",
        "format_float_precision",
        "precision",
        "format_sign",
        "str_format",
        "num_format",
        "s",
        "sign",
        "repr_format",
        "ascii_format",
        "_float_helper",
        "trailing_zeros",
        "leading_zeros",
        "trailing_dot",
        "validate_precision",
        "floating_point_format",
        "zeros",
        "numzeros",
        "trl",
        "trl",
        "_floating_g_exp_helper",
        "e_idx",
        "floating_point_decimal_format",
        "_floating_exp_helper",
        "e_idx",
        "floating_point_exponential_format",
        "signed_hex_format",
        "ret",
        "sign",
        "octal_format",
        "ret",
        "sign",
        "it",
        "ints",
        "b",
        "single_char_format",
        "num_flag",
        "decimal_point_flag",
        "neg_flag",
        "space_flag",
        "sign_flag",
        "alternate_flag",
        "char_mapping",
        "UnsupportedChar",
        "length",
        "pos",
        "argpos",
        "getitem",
        "ret",
        "$get_kwarg_string",
        "rslt",
        "key",
        "$get_arg_string",
        "get_string_value",
        "flags",
        "func",
        "ret",
        "try_char",
        "cls",
        "nbph",
        "newpos",
        "$",
        "$res",
        "i",
        "res",
        "qesc",
        "combining",
        "cp",
        "combining_re",
        "$comp_func",
        "$comps",
        "$notimplemented",
        "$",
        "$",
        "res",
        "cf",
        "i",
        "len",
        "$",
        "pad",
        "res",
        "$",
        "substr",
        "_slice",
        "n",
        "pos",
        "$",
        "res",
        "i",
        "len",
        "$",
        "suffixes",
        "s",
        "i",
        "len",
        "suffix",
        "$",
        "s",
        "col",
        "pos",
        "res",
        "car",
        "$",
        "s",
        "i",
        "last_search",
        "i",
        "elts",
        "name",
        "conv",
        "spec",
        "name_ext",
        "elts",
        "name_ext_re",
        "pos",
        "_len",
        "car",
        "text",
        "parts",
        "rank",
        "end",
        "nb",
        "fmt_string",
        "fmt_obj",
        "$",
        "parts",
        "res",
        "fmt",
        "i",
        "pos",
        "value",
        "value",
        "j",
        "ext",
        "key",
        "res",
        "i",
        "len",
        "$",
        "i",
        "len",
        "$",
        "i",
        "len",
        "$",
        "i",
        "len",
        "$",
        "i",
        "len",
        "$",
        "i",
        "len",
        "$",
        "has_cased",
        "i",
        "len",
        "$",
        "i",
        "len",
        "printable",
        "printable_gc",
        "i",
        "table",
        "$",
        "flag",
        "i",
        "len",
        "$",
        "i",
        "len",
        "$",
        "$",
        "has_cased",
        "i",
        "len",
        "$",
        "iterable",
        "res",
        "count",
        "obj2",
        "$",
        "$",
        "$",
        "i",
        "$",
        "_t",
        "items",
        "i",
        "len",
        "k",
        "v",
        "toNone",
        "i",
        "len",
        "i",
        "len",
        "key",
        "value",
        "$",
        "i",
        "specials",
        "i",
        "len",
        "re",
        "$",
        "count",
        "old",
        "_new",
        "elts",
        "rest",
        "elts",
        "res",
        "pos",
        "res",
        "_new",
        "i",
        "$",
        "sublen",
        "i",
        "res",
        "$",
        "$",
        "sep",
        "items",
        "i",
        "$",
        "sep",
        "rev_str",
        "rev_sep",
        "rev_res",
        "i",
        "$",
        "j",
        "$",
        "sep",
        "maxsplit",
        "pos",
        "res",
        "name",
        "res",
        "s",
        "seplen",
        "$",
        "keepends",
        "res",
        "start",
        "pos",
        "$",
        "prefixes",
        "s",
        "i",
        "len",
        "prefix",
        "$",
        "i",
        "j",
        "$",
        "res",
        "i",
        "len",
        "$",
        "state",
        "res",
        "i",
        "len",
        "res",
        "getitem",
        "i",
        "len",
        "repl",
        "$",
        "$",
        "$",
        "encoding",
        "errors",
        "func",
        "klass",
        "method",
        "method",
        "StringSubclass",
        "args",
        "pos",
        "args",
        "pos",
        "i",
        "len",
        "pos",
        "aligns",
        "digits",
        "types",
        "align_pos",
        "car",
        "end_param_pos",
        "fill",
        "align",
        "missing",
        "left",
        "elts",
        "pos",
        "current",
        "ctype",
        "nb_braces",
        "car",
        "i",
        "pos",
        "i",
        "pos",
        "nb_braces",
        "nb_paren",
        "current",
        "end",
        "trs",
        "end",
        "ce",
        "bltns",
        "str_hash",
        "$N",
        "set_ops",
        "klass",
        "i",
        "len",
        "op",
        "it",
        "res",
        "items",
        "item",
        "val",
        "$copy_dict",
        "_l",
        "si",
        "right_version",
        "i",
        "len",
        "pairs",
        "i",
        "len",
        "$",
        "$",
        "key",
        "hash",
        "$",
        "arg",
        "hash",
        "ix",
        "$",
        "other",
        "pairs",
        "flag",
        "i",
        "len",
        "pairs",
        "other_pairs",
        "i",
        "len_i",
        "flag",
        "key",
        "value",
        "j",
        "len_j",
        "$",
        "arg",
        "hash",
        "_eq",
        "sk",
        "res",
        "ix",
        "missing_method",
        "i",
        "stop",
        "si",
        "item",
        "$",
        "args",
        "keys",
        "gi",
        "kiter",
        "key",
        "value",
        "kw",
        "_count",
        "instance",
        "res",
        "items",
        "$",
        "hash",
        "_eq",
        "sk",
        "ix",
        "$",
        "$",
        "res",
        "$",
        "keys",
        "value",
        "klass",
        "res",
        "keys_iter",
        "key",
        "$",
        "dict_items",
        "_len",
        "_msg",
        "it",
        "dict_keys",
        "_len",
        "_msg",
        "it",
        "missing",
        "$",
        "key",
        "_default",
        "res",
        "itm",
        "$",
        "key",
        "_default",
        "hash",
        "$",
        "args",
        "kw",
        "o",
        "_keys",
        "i",
        "len",
        "_value",
        "it",
        "i",
        "item",
        "dict_values",
        "_len",
        "_msg",
        "it",
        "res",
        "args",
        "i",
        "len",
        "mappingproxy",
        "res",
        "res",
        "d",
        "klass",
        "res",
        "_b_",
        "JSObject",
        "_window",
        "docPos",
        "mousePos",
        "left",
        "top",
        "width",
        "height",
        "parent_pos",
        "posx",
        "posy",
        "ev",
        "res",
        "$DOMNodeAttrs",
        "result",
        "re",
        "$DOMEventAttrs_W3C",
        "$DOMEventAttrs_IE",
        "flag",
        "i",
        "i",
        "$NodeTypes",
        "Attributes",
        "$",
        "$",
        "$",
        "attrs",
        "items",
        "i",
        "$",
        "res",
        "$",
        "$",
        "$",
        "attrs",
        "values",
        "i",
        "$",
        "attrs",
        "values",
        "i",
        "DOMEvent",
        "ev",
        "pt",
        "res",
        "func",
        "args",
        "i",
        "$DOMEvent",
        "Clipboard",
        "found",
        "i",
        "OpenFile",
        "res",
        "obj",
        "callback",
        "dom",
        "Options",
        "DOMNode",
        "tdict",
        "klass",
        "res",
        "i",
        "len",
        "res",
        "res",
        "computed",
        "pos",
        "req",
        "headers",
        "res",
        "i",
        "header",
        "pos",
        "property",
        "res",
        "property",
        "func",
        "args",
        "pos",
        "i",
        "arg",
        "f1",
        "f1",
        "result",
        "res",
        "elts",
        "res",
        "i",
        "key_to_int",
        "res",
        "attr",
        "items",
        "i",
        "len",
        "items",
        "i",
        "len",
        "elt",
        "i",
        "$txt",
        "items",
        "res",
        "pos",
        "i",
        "res",
        "txt",
        "proto",
        "name",
        "proto_str",
        "res",
        "frame",
        "info",
        "src",
        "proto",
        "nb",
        "descriptors",
        "$",
        "func",
        "options",
        "callback",
        "msg",
        "res",
        "elt",
        "elt",
        "res",
        "events",
        "evt_list",
        "func",
        "res",
        "tagName",
        "evt_list",
        "callbacks",
        "res",
        "i",
        "obj",
        "args",
        "i",
        "$ns",
        "$dict",
        "items",
        "id_res",
        "obj",
        "res",
        "items",
        "rank",
        "i",
        "elt",
        "res",
        "elt",
        "items",
        "i",
        "key",
        "value",
        "elt",
        "elt",
        "res",
        "evObj",
        "events",
        "i",
        "callback",
        "i",
        "callback",
        "flag",
        "func",
        "found",
        "j",
        "func",
        "callback",
        "found",
        "j",
        "callback",
        "Query",
        "result",
        "Query_iterator",
        "result",
        "result",
        "res",
        "qs",
        "i",
        "pos",
        "elts",
        "key",
        "value",
        "TagSum",
        "res",
        "res",
        "i",
        "res",
        "i",
        "win",
        "temp",
        "items",
        "_b_",
        "bltns",
        "_chars",
        "nstrip",
        "len",
        "_clean",
        "res",
        "is_cond",
        "is_except",
        "is_else",
        "is_continue",
        "ctx_js",
        "parent_id",
        "iter_name",
        "ctx",
        "ctype",
        "new_node",
        "ctx_manager",
        "yield_node_id",
        "res",
        "ctx_manager",
        "js",
        "h",
        "num",
        "ctx_manager",
        "i",
        "len",
        "nd",
        "res",
        "res",
        "loop",
        "loop_has_yield",
        "i",
        "len",
        "i",
        "len",
        "res",
        "pos",
        "i",
        "len",
        "$GeneratorReturn",
        "ctx_manager",
        "parent",
        "tries",
        "pnode",
        "pos",
        "$BRGeneratorDict",
        "i",
        "pblock",
        "line_info",
        "def_ctx",
        "iter_id",
        "def_id",
        "func_root",
        "i",
        "len",
        "nd",
        "obj",
        "src",
        "raw_src",
        "funcs",
        "i",
        "exit_node",
        "root",
        "fnode",
        "parent_scope",
        "js",
        "exit_parent",
        "rest",
        "pos",
        "breaks",
        "has_break",
        "has_continue",
        "start",
        "is_continue",
        "i",
        "start",
        "len",
        "clone",
        "loop",
        "break_num",
        "rest_try",
        "i",
        "len",
        "test",
        "test_node",
        "tries",
        "i",
        "tree",
        "pos",
        "i",
        "try_node",
        "try_clone",
        "j",
        "children",
        "cpos",
        "j",
        "loop",
        "flag",
        "parent",
        "parent",
        "fnode",
        "src",
        "next_src",
        "generator",
        "res",
        "res",
        "exc",
        "iter_id",
        "gfuncs",
        "i",
        "res",
        "_b_",
        "update",
        "_window",
        "modules",
        "browser",
        "$",
        "options",
        "items",
        "i",
        "it",
        "elt",
        "file_obj",
        "content",
        "scripts",
        "js_scripts",
        "$",
        "regex",
        "results",
        "_b_",
        "TagSum",
        "$ns",
        "args",
        "first",
        "i",
        "len",
        "items",
        "items",
        "i",
        "len",
        "arg",
        "value",
        "js",
        "elt",
        "res",
        "res",
        "factory",
        "elt",
        "res",
        "res",
        "res",
        "tags",
        "obj",
        "dicts",
        "klass",
        "file_obj",
        "content",
        "arraybuffers",
        "_b_",
        "$",
        "depth",
        "hookname",
        "modname",
        "dot",
        "funcname",
        "hook",
        "modname",
        "dot",
        "funcname",
        "i",
        "frame",
        "exc",
        "$",
        "attr1",
        "_b_",
        "value",
        "$comps",
        "op",
        "docs",
        "_b_",
        "meta_path",
        "_sys_modules",
        "_loader",
        "spec",
        "path_ix",
        "i",
        "len",
        "_finder",
        "find_spec",
        "find_module",
        "load_module",
        "exc",
        "_spec_name",
        "create_module",
        "mod_desc",
        "locs",
        "cached",
        "exec_module",
        "_b_",
        "coroutine",
        "f",
        "args",
        "arguments"
    ],
    "comments": [
        "brython.js brython.info",
        "version [3, 8, 0, 'final', 0]",
        "implementation [3, 8, 8, 'dev', 0]",
        "version compiled from commented, indented source files at",
        "github.com/brython-dev/brython",
        "to escape double quotes in arguments"
    ],
    "docstrings": [],
    "functions": [
        "check_assignment",
        "is_simple",
        "get_type",
        "sjs",
        "fstring",
        "prepare",
        "$parent_match",
        "has_parent",
        "rmuf",
        "check_int",
        "rmu",
        "idb_load",
        "store_precompiled",
        "idb_get",
        "add_jsmodule",
        "required_stdlib_imports",
        "check",
        "_reconstructor",
        "__newobj__",
        "nofactory",
        "index_error",
        "$err",
        "exit_ctx_managers_in_generators",
        "abs",
        "all",
        "ascii",
        "$builtin_base_convert_helper",
        "bin_hex_oct",
        "bin",
        "breakpoint",
        "callable",
        "chr",
        "compile",
        "delattr",
        "dir",
        "divmod",
        "$$eval",
        "exec",
        "exit",
        "format",
        "attr_error",
        "getattr",
        "in_mro",
        "globals",
        "hasattr",
        "hash",
        "_get_builtins_doc",
        "help",
        "hex",
        "id",
        "__import__",
        "input",
        "isinstance",
        "check",
        "issubclass",
        "iter",
        "len",
        "locals",
        "$extreme",
        "max",
        "min",
        "next",
        "$not",
        "oct",
        "ord",
        "pow",
        "$print",
        "quit",
        "repr",
        "round",
        "setattr",
        "error",
        "mangled_slots",
        "sorted",
        "sum",
        "vars",
        "make_content",
        "make_lines",
        "$url_open",
        "no_set_attr",
        "deep_copy",
        "$make_exc",
        "compute_item",
        "conv_slice",
        "_strip",
        "invalid",
        "$UnicodeEncodeError",
        "$UnicodeDecodeError",
        "_hex",
        "_int",
        "normalise",
        "load_decoder",
        "load_encoder",
        "create_type",
        "clone",
        "$test",
        "$add",
        "$accept_only_set",
        "empty_frozenset",
        "parent_package",
        "$download_module",
        "import_js",
        "run_js",
        "show_ns",
        "import_py",
        "run_py",
        "new_spec",
        "import_error",
        "optimize_import_for_path",
        "$err",
        "float_value",
        "preformat",
        "$FloatClass",
        "to_digits",
        "$err",
        "int_value",
        "preformat",
        "extended_euclidean",
        "invalid",
        "add_pos",
        "binary",
        "check_shift",
        "clone",
        "comp_pos",
        "divmod_by_safe_int",
        "divmod_pos",
        "split_chunks",
        "mul_pos",
        "sub_pos",
        "digits",
        "isSafeInteger",
        "intOrLong",
        "$UnsupportedOpType",
        "to_num",
        "complex2expo",
        "log10",
        "alphabeticalCompare",
        "minRunLength",
        "makeAscendingRun",
        "reverseRun",
        "binaryInsertionSort",
        "gallopLeft",
        "gallopRight",
        "tim_sort",
        "tim_sort_safe",
        "check_not_tuple",
        "$list",
        "swap",
        "$qsort",
        "$elts_class",
        "make_args",
        "$tuple",
        "c_mul",
        "normalize_start_end",
        "reverse",
        "check_str",
        "preformat",
        "fnv",
        "series_of_bytes",
        "name_repl",
        "replace_nested",
        "replace_nested",
        "$re_escape",
        "fstring_expression",
        "dict_iterator_next",
        "to_list",
        "dict_iterator_next",
        "rank",
        "init_from_list",
        "jsobj2dict",
        "$getMouseOffset",
        "$getPosition",
        "$mouseCoords",
        "dom2svg",
        "$EventsList",
        "warn",
        "make_list",
        "rstrip",
        "jscode_namespace",
        "make_node",
        "in_ctx_manager",
        "in_loop",
        "in_try",
        "remove_line_nums",
        "make_next",
        "f",
        "makeTagDict",
        "makeFactory",
        "maketag",
        "load",
        "import_hooks"
    ],
    "classes": []
}