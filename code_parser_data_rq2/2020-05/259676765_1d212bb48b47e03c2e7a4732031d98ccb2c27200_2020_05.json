{
    "identifiers": [
        "Diagnostics",
        "CodeAnalysis",
        "IO",
        "Linq",
        "Microsoft",
        "CodeAnalysis",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Microsoft",
        "CodeAnalysis",
        "CSharp",
        "Syntax",
        "ModifyTool",
        "projectFolder",
        "_projectFolder",
        "Path",
        "GetFullPath",
        "projectFolder",
        "SuppressMessage",
        "entityName",
        "Path",
        "Combine",
        "_projectFolder",
        "ModuleFileName",
        "File",
        "ReadAllText",
        "moduleFilePath",
        "CSharpSyntaxTree",
        "ParseText",
        "moduleText",
        "tree",
        "GetRoot",
        "node",
        "DescendantNodes",
        "OfType",
        "ClassDeclarationSyntax",
        "Single",
        "x",
        "Identifier",
        "Text",
        "ModuleClassName",
        "moduleClass",
        "Members",
        "OfType",
        "MethodDeclarationSyntax",
        "First",
        "x",
        "Identifier",
        "Text",
        "RegisterModuleMethodName",
        "method",
        "ParameterList",
        "ChildNodes",
        "OfType",
        "ParameterSyntax",
        "First",
        "method",
        "Body",
        "Statements",
        "OfType",
        "ExpressionStatementSyntax",
        "Reverse",
        "First",
        "CheckExpression",
        "x",
        "dependencyRegistratorParam",
        "Identifier",
        "AddMapperRegistration",
        "st",
        "entityName",
        "newSt",
        "method",
        "Body",
        "Statements",
        "Replace",
        "st",
        "newSt",
        "method",
        "Body",
        "WithStatements",
        "stList",
        "method",
        "WithBody",
        "body",
        "moduleClass",
        "Members",
        "Replace",
        "method",
        "newMethod",
        "node",
        "node",
        "ReplaceNode",
        "moduleClass",
        "newClass",
        "File",
        "WriteAllText",
        "moduleFilePath",
        "node",
        "ToFullString",
        "ExpressionStatementSyntax",
        "statement",
        "entityName",
        "SyntaxFactory",
        "ParseTypeName",
        "entityName",
        "MapperSuffix",
        "SyntaxFactory",
        "GenericName",
        "RegistrationMethodName",
        "method",
        "method",
        "AddTypeArgumentListArguments",
        "typeId",
        "CheckExpression",
        "statement",
        "method",
        "SyntaxFactory",
        "MemberAccessExpression",
        "SyntaxKind",
        "SimpleMemberAccessExpression",
        "statement",
        "Expression",
        "method",
        "SyntaxFactory",
        "InvocationExpression",
        "memberAccessExpression",
        "statement",
        "statement",
        "WithExpression",
        "invocationExpression",
        "statement",
        "CSharpSyntaxNode",
        "expression",
        "NameSyntax",
        "name",
        "expression",
        "NameSyntax",
        "ns",
        "SyntaxFactory",
        "AreEquivalent",
        "ns",
        "name",
        "expression",
        "ExpressionStatementSyntax",
        "ess",
        "CheckExpression",
        "ess",
        "Expression",
        "name",
        "expression",
        "InvocationExpressionSyntax",
        "ies",
        "CheckExpression",
        "ies",
        "Expression",
        "name",
        "expression",
        "MemberAccessExpressionSyntax",
        "maes",
        "CheckExpression",
        "maes",
        "Name",
        "name",
        "CheckExpression",
        "maes",
        "Expression",
        "name",
        "CSharpSyntaxNode",
        "expression",
        "SyntaxToken",
        "name",
        "expression",
        "IdentifierNameSyntax",
        "ins",
        "SyntaxFactory",
        "AreEquivalent",
        "ins",
        "Identifier",
        "name",
        "expression",
        "ExpressionStatementSyntax",
        "ess",
        "CheckExpression",
        "ess",
        "Expression",
        "name",
        "expression",
        "InvocationExpressionSyntax",
        "ies",
        "CheckExpression",
        "ies",
        "Expression",
        "name",
        "expression",
        "MemberAccessExpressionSyntax",
        "maes",
        "CheckExpression",
        "maes",
        "Expression",
        "name"
    ],
    "literals": [
        "\"Module.cs\"",
        "\"Module\"",
        "\"RegisterModule\"",
        "\"Mapper\"",
        "\"AddSingleton\"",
        "\"ReSharper\"",
        "\"PossibleNullReferenceException\""
    ],
    "variables": [
        "ModuleFileName",
        "ModuleClassName",
        "RegisterModuleMethodName",
        "MapperSuffix",
        "RegistrationMethodName",
        "_projectFolder",
        "moduleFilePath",
        "moduleText",
        "tree",
        "node",
        "moduleClass",
        "method",
        "dependencyRegistratorParam",
        "st",
        "newSt",
        "stList",
        "body",
        "newMethod",
        "newClass",
        "typeId",
        "method",
        "memberAccessExpression",
        "invocationExpression"
    ],
    "comments": [],
    "docstrings": [],
    "functions": [
        "Engine",
        "RegisterMappers",
        "ExpressionStatementSyntax",
        "AddMapperRegistration",
        "CheckExpression",
        "CheckExpression"
    ],
    "classes": [
        "Engine"
    ]
}