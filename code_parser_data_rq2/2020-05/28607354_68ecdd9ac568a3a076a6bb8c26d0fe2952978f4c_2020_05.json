{
    "identifiers": [
        "hashlib",
        "json",
        "os",
        "functools",
        "partial",
        "pathlib",
        "Path",
        "typing",
        "Any",
        "Dict",
        "Optional",
        "Tuple",
        "urllib",
        "request",
        "urlretrieve",
        "pyproj",
        "_sync",
        "get_proj_endpoint",
        "pyproj",
        "datadir",
        "get_data_dir",
        "get_user_data_dir",
        "west",
        "south",
        "east",
        "north",
        "west",
        "south",
        "east",
        "north",
        "other",
        "west",
        "other",
        "east",
        "other",
        "west",
        "east",
        "south",
        "other",
        "north",
        "other",
        "south",
        "north",
        "other",
        "other",
        "west",
        "west",
        "other",
        "east",
        "east",
        "other",
        "south",
        "south",
        "other",
        "north",
        "north",
        "west",
        "south",
        "east",
        "north",
        "coords",
        "Optional",
        "BBox",
        "coords",
        "BBox",
        "west",
        "min",
        "xx",
        "south",
        "min",
        "yy",
        "east",
        "max",
        "xx",
        "north",
        "max",
        "yy",
        "ValueError",
        "coord_set",
        "coords",
        "_bbox_from_coords",
        "coord_set",
        "coord_bbox",
        "bbox",
        "min",
        "coord_bbox",
        "west",
        "bbox",
        "west",
        "min",
        "coord_bbox",
        "south",
        "bbox",
        "south",
        "max",
        "coord_bbox",
        "north",
        "bbox",
        "north",
        "max",
        "coord_bbox",
        "east",
        "bbox",
        "east",
        "coord_bbox",
        "geom",
        "Dict",
        "Any",
        "Optional",
        "BBox",
        "geom",
        "geom",
        "geom",
        "geom",
        "_bbox_from_coords",
        "coordinates",
        "coordinate_set",
        "coordinates",
        "_bbox_from_coords",
        "coordinate_set",
        "bbox",
        "bbox",
        "west",
        "bbox",
        "east",
        "bboxes",
        "append",
        "bbox",
        "bbox",
        "bboxes",
        "found_minus_180",
        "found_plus_180",
        "bbox",
        "west",
        "bbox",
        "east",
        "grid_bbox",
        "bbox",
        "min",
        "grid_bbox",
        "west",
        "bbox",
        "west",
        "min",
        "grid_bbox",
        "south",
        "bbox",
        "south",
        "max",
        "grid_bbox",
        "north",
        "bbox",
        "north",
        "max",
        "grid_bbox",
        "east",
        "bbox",
        "east",
        "grid_bbox",
        "feature",
        "Dict",
        "Any",
        "bbox",
        "BBox",
        "spatial_test",
        "include_world_coverage",
        "feature",
        "get",
        "geom",
        "_bbox_from_geom",
        "geom",
        "geom_bbox",
        "geom_bbox",
        "east",
        "geom_bbox",
        "west",
        "geom_bbox",
        "north",
        "geom_bbox",
        "south",
        "include_world_coverage",
        "geom_bbox",
        "east",
        "bbox",
        "west",
        "geom_bbox",
        "west",
        "geom_bbox",
        "east",
        "getattr",
        "bbox",
        "spatial_test",
        "geom_bbox",
        "feature",
        "Dict",
        "Any",
        "source_id",
        "Optional",
        "area_of_use",
        "Optional",
        "filename",
        "Optional",
        "feature",
        "get",
        "properties",
        "properties",
        "get",
        "properties",
        "get",
        "p_filename",
        "p_source_id",
        "source_id",
        "source_id",
        "p_source_id",
        "area_of_use",
        "area_of_use",
        "properties",
        "get",
        "filename",
        "filename",
        "p_filename",
        "grid_name",
        "Path",
        "get_user_data_dir",
        "grid_name",
        "exists",
        "data_dir",
        "get_data_dir",
        "split",
        "os",
        "pathsep",
        "Path",
        "data_dir",
        "grid_name",
        "exists",
        "feature",
        "Dict",
        "Any",
        "feature",
        "get",
        "properties",
        "properties",
        "get",
        "filename",
        "_is_download_needed",
        "filename",
        "target_directory",
        "Dict",
        "Any",
        "target_directory",
        "get_user_data_dir",
        "Path",
        "target_directory",
        "local_path",
        "exists",
        "get_proj_endpoint",
        "urlretrieve",
        "remote_path",
        "local_path",
        "open",
        "local_path",
        "gridf",
        "json",
        "load",
        "gridf",
        "source_id",
        "Optional",
        "area_of_use",
        "Optional",
        "filename",
        "Optional",
        "bbox",
        "BBox",
        "spatial_test",
        "include_world_coverage",
        "include_already_downloaded",
        "target_directory",
        "Tuple",
        "_load_grid_geojson",
        "target_directory",
        "target_directory",
        "bbox",
        "bbox",
        "west",
        "bbox",
        "east",
        "bbox",
        "west",
        "bbox",
        "west",
        "bbox",
        "east",
        "bbox",
        "west",
        "bbox",
        "east",
        "bbox",
        "west",
        "bbox",
        "west",
        "bbox",
        "east",
        "abs",
        "bbox",
        "west",
        "abs",
        "bbox",
        "east",
        "bbox",
        "east",
        "bbox",
        "west",
        "bbox",
        "east",
        "partial",
        "_filter_bbox",
        "bbox",
        "bbox",
        "spatial_test",
        "spatial_test",
        "include_world_coverage",
        "include_world_coverage",
        "features",
        "partial",
        "_filter_properties",
        "source_id",
        "source_id",
        "area_of_use",
        "area_of_use",
        "filename",
        "filename",
        "features",
        "include_already_downloaded",
        "features",
        "_filter_download_needed",
        "features",
        "input_file",
        "hashlib",
        "sha256",
        "open",
        "input_file",
        "file",
        "chunk",
        "iter",
        "file",
        "read",
        "hasher",
        "update",
        "chunk",
        "hasher",
        "hexdigest",
        "file_url",
        "short_name",
        "directory",
        "verbose",
        "sha256",
        "verbose",
        "file_url",
        "Path",
        "directory",
        "short_name",
        "urlretrieve",
        "file_url",
        "tmp_path",
        "sha256",
        "sha256",
        "_sha256sum",
        "tmp_path",
        "RuntimeError",
        "short_name",
        "tmp_path",
        "rename",
        "Path",
        "directory",
        "short_name",
        "tmp_path",
        "exists",
        "os",
        "remove",
        "tmp_path"
    ],
    "literals": [
        "\"BBox\"",
        "\"BBox\"",
        "f\"BBox(west={self.west},south={self.south},\"",
        "f\"east={self.east},north={self.north})\"",
        "\"coordinates\"",
        "\"type\"",
        "\"coordinates\"",
        "\"type\"",
        "\"MultiPolygon\"",
        "\"geometry\"",
        "\"inf\"",
        "\"inf\"",
        "\"properties\"",
        "\"name\"",
        "\"source_id\"",
        "\"area_of_use\"",
        "\"\"",
        "\"properties\"",
        "\"name\"",
        "\"files.geojson\"",
        "f\"{get_proj_endpoint()}/files.geojson\"",
        "\"intersects\"",
        "\"features\"",
        "\"rb\"",
        "b\"\"",
        "f\"Downloading: {file_url}\"",
        "f\"{short_name}.part\"",
        "f\"SHA256 mismatch: {short_name}\""
    ],
    "variables": [
        "west",
        "south",
        "east",
        "north",
        "xx",
        "yy",
        "coord_bbox",
        "bbox",
        "coord_bbox",
        "coord_bbox",
        "west",
        "coord_bbox",
        "south",
        "coord_bbox",
        "north",
        "coord_bbox",
        "east",
        "coordinates",
        "found_minus_180",
        "found_plus_180",
        "bboxes",
        "bbox",
        "found_minus_180",
        "found_plus_180",
        "grid_bbox",
        "bbox",
        "west",
        "grid_bbox",
        "grid_bbox",
        "west",
        "grid_bbox",
        "south",
        "grid_bbox",
        "north",
        "grid_bbox",
        "east",
        "geom",
        "geom_bbox",
        "geom_bbox",
        "west",
        "geom_bbox",
        "east",
        "properties",
        "p_filename",
        "p_source_id",
        "properties",
        "filename",
        "target_directory",
        "local_path",
        "remote_path",
        "features",
        "features",
        "features",
        "hasher",
        "tmp_path"
    ],
    "comments": [
        "filter by properties"
    ],
    "docstrings": [
        "\"\"\"\nBased on the logic in the PROJ projsync CLI program\n\nhttps://github.com/OSGeo/PROJ/blob/9ff543c4ffd86152bc58d0a0164b2ce9ebbb8bec/src/apps/projsync.cpp\n\"\"\"",
        "\"\"\"\n    Bounding box to check if data intersects/contains other\n    bounding boxes.\n    \"\"\"",
        "\"\"\"\n        Parameters\n        ----------\n        other: BBox\n            The other BBox to use to check.\n\n        Returns\n        -------\n        bool:\n            True if this BBox intersects the other bbox.\n        \"\"\"",
        "\"\"\"\n        Parameters\n        ----------\n        other: BBox\n            The other BBox to use to check.\n\n        Returns\n        -------\n        bool:\n            True if this BBox contains the other bbox.\n        \"\"\"",
        "\"\"\"\n    Get the bounding box from coordinates\n    \"\"\"",
        "\"\"\"\n    Get the bounding box from geojson geometry\n    \"\"\"",
        "\"\"\"\n    Filter by the bounding box. Designed to use with 'filter'\n    \"\"\"",
        "\"\"\"\n    Filter by the properties. Designed to use with 'filter'\n    \"\"\"",
        "\"\"\"\n    Run through all of the PROJ directories to see if the\n    file already exists.\n    \"\"\"",
        "\"\"\"\n    Filter grids so only those that need to be downloaded are included.\n    \"\"\"",
        "\"\"\"\n    Returns\n    -------\n    Dict[str, Any]:\n        The PROJ grid data list.\n    \"\"\"",
        "\"\"\"\n    Get a list of transform grids that can be downloaded.\n\n    Parameters\n    ----------\n    source_id: str, optional\n    area_of_use: str, optional\n    filename: str, optional\n    bbox: BBox, optional\n    spatial_test: str, optional\n        Can be \"contains\" or \"intersects\". Defaults to \"intersects\".\n    include_world_coverage: bool, optional\n        Defaults to True.\n    include_already_downloaded: bool, optional\n        If True, it will list grids reguardless of if they are downloaded.\n        Defaults to False.\n    target_directory: Union[str, Path], optional\n        The directory to download the geojson file to.\n        Default is the user writable directory.\n\n    Returns\n    -------\n    List[Dict[str, Any]]:\n        A list of geojson data of containing information about features\n        that can be downloaded.\n    \"\"\"",
        "\"\"\"\n    Return sha256 checksum of file given by path.\n    \"\"\"",
        "\"\"\"\n    Download resource file from PROJ url\n    \"\"\""
    ],
    "functions": [
        "intersects",
        "contains",
        "__repr__",
        "_bbox_from_coords",
        "_bbox_from_geom",
        "_filter_bbox",
        "_filter_properties",
        "_is_download_needed",
        "_filter_download_needed",
        "_load_grid_geojson",
        "get_transform_grid_list",
        "_sha256sum",
        "_download_resource_file"
    ],
    "classes": [
        "BBox"
    ]
}