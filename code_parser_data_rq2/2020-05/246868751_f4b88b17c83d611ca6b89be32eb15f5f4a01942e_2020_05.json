{
    "identifiers": [
        "matplotlib",
        "colors",
        "is_color_like",
        "cellrank",
        "tools",
        "_constants",
        "_lin_names",
        "_colors",
        "Direction",
        "LinKey",
        "cellrank",
        "tools",
        "_lineage",
        "Lineage",
        "scanpy",
        "logging",
        "logg",
        "pathlib",
        "Path",
        "typing",
        "Callable",
        "Union",
        "anndata",
        "scvelo",
        "scv",
        "cellrank",
        "tools",
        "_utils",
        "_create_categorical_colors",
        "path",
        "Union",
        "Path",
        "read_callback",
        "Callable",
        "scv",
        "read",
        "kwargs",
        "anndata",
        "AnnData",
        "direction",
        "Direction",
        "LinKey",
        "FORWARD",
        "direction",
        "Direction",
        "FORWARD",
        "LinKey",
        "BACKWARD",
        "_lin_names",
        "lin_key",
        "_colors",
        "lin_key",
        "lin_key",
        "adata",
        "obsm",
        "keys",
        "adata",
        "obsm",
        "lin_key",
        "shape",
        "logg",
        "info",
        "direction",
        "Direction",
        "FORWARD",
        "names_key",
        "adata",
        "uns",
        "keys",
        "logg",
        "warning",
        "names_key",
        "i",
        "i",
        "n_lineages",
        "len",
        "adata",
        "uns",
        "names_key",
        "n_lineages",
        "logg",
        "warning",
        "n_lineages",
        "i",
        "i",
        "n_lineages",
        "logg",
        "info",
        "adata",
        "uns",
        "names_key",
        "colors_key",
        "adata",
        "uns",
        "keys",
        "logg",
        "warning",
        "colors_key",
        "_create_categorical_colors",
        "n_lineages",
        "len",
        "adata",
        "uns",
        "colors_key",
        "n_lineages",
        "all",
        "c",
        "is_color_like",
        "c",
        "adata",
        "uns",
        "colors_key",
        "logg",
        "warning",
        "n_lineages",
        "_create_categorical_colors",
        "n_lineages",
        "logg",
        "info",
        "adata",
        "uns",
        "colors_key",
        "adata",
        "obsm",
        "Lineage",
        "adata",
        "obsm",
        "lin_key",
        "names",
        "names",
        "colors",
        "colors",
        "logg",
        "debug",
        "direction",
        "Direction",
        "FORWARD",
        "lin_key",
        "read_callback",
        "path",
        "kwargs",
        "maybe_create_lineage",
        "Direction",
        "FORWARD",
        "maybe_create_lineage",
        "Direction",
        "BACKWARD",
        "adata"
    ],
    "literals": [
        "f\"Creating {'forward' if direction == Direction.FORWARD else 'backward'} `Lineage` object\"",
        "'forward'",
        "'backward'",
        "f\"Lineage names not found in `adata.uns[{names_key!r}]`, creating dummy names\"",
        "f\"Lineage {i}\"",
        "f\"Lineage names are don't have reuquired length ({n_lineages}), creating dummy names\"",
        "f\"Lineage {i}\"",
        "\"Succesfully loaded names\"",
        "f\"Lineage colors not found in `adata.uns[{colors_key!r}]`, creating new colors\"",
        "f\"Lineage colors don't have required length ({n_lineages}) or are not color-like, creating new colors\"",
        "\"Succesfully loaded colors\"",
        "f\"DEBUG: Unable to load {'forward' if direction == Direction.FORWARD else 'backward'} `Lineage` from `adata.obsm[{lin_key!r}]`\"",
        "'forward'",
        "'backward'"
    ],
    "variables": [
        "lin_key",
        "names_key",
        "colors_key",
        "n_cells",
        "n_lineages",
        "names",
        "names",
        "names",
        "colors",
        "colors",
        "colors",
        "lin_key",
        "adata"
    ],
    "comments": [
        "-*- coding: utf-8 -*-"
    ],
    "docstrings": [
        "\"\"\"\n    Params\n    ------\n    path\n        Path to the annotated data object.\n    read_callback\n        Function that actually reads the :class:`anndata.AnnData` object, such as\n        :func:`scvelo.read` (default) or :func:`scanpy.read`.\n    kwargs\n        Keyword arguments for :paramref:`read_callback`.\n\n    Returns\n    -------\n    :class:`anndata.AnnData`\n        The annotated data object.\n    \"\"\""
    ],
    "functions": [
        "read",
        "maybe_create_lineage"
    ],
    "classes": []
}