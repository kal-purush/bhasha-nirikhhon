{
    "identifiers": [
        "torch",
        "torch",
        "autograd",
        "Variable",
        "torchvision",
        "models",
        "models",
        "cv2",
        "numpy",
        "np",
        "torchvision",
        "torch",
        "nn",
        "nn",
        "torch",
        "nn",
        "functional",
        "F",
        "torch",
        "optim",
        "optim",
        "argparse",
        "itemgetter",
        "heapq",
        "nsmallest",
        "time",
        "torch",
        "nn",
        "Module",
        "ModifiedResNet18Model",
        "models",
        "resnet18",
        "pretrained",
        "model",
        "children",
        "nn",
        "Sequential",
        "modules",
        "param",
        "features",
        "parameters",
        "nn",
        "Sequential",
        "nn",
        "Dropout",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "Dropout",
        "nn",
        "Linear",
        "nn",
        "ReLU",
        "inplace",
        "nn",
        "Linear",
        "x",
        "features",
        "x",
        "x",
        "view",
        "x",
        "size",
        "fc",
        "x",
        "x",
        "ModifiedResNet18Model",
        "model",
        "features",
        "_modules",
        "items"
    ],
    "literals": [
        "\"start pruning:\""
    ],
    "variables": [
        "model",
        "modules",
        "features",
        "param",
        "requires_grad",
        "fc",
        "x",
        "x",
        "x",
        "model"
    ],
    "comments": [
        "import dataset",
        "from prune import *",
        "squeezenet1_1",
        "model = torch.load('/home/yq/work/face_class/id_rec_resnet_copy/id_rec_resnet/logs/resnet18-1/model.bin')",
        "delete the last fc layer.",
        "model = nn.Sequential(*modules)",
        "nn.Linear(512, 100)",
        "nn.ReLU(inplace=True),",
        "nn.Dropout(),",
        "nn.Linear(2048, 2048),",
        "nn.ReLU(inplace=True),",
        "nn.Linear(256, 100))",
        "self.features.fc = self.classifier",
        "self.classifier(x)"
    ],
    "docstrings": [],
    "functions": [
        "forward"
    ],
    "classes": [
        "ModifiedResNet18Model"
    ]
}