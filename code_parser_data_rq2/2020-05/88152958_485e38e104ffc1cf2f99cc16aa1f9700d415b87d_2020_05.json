{
    "identifiers": [
        "de",
        "mirkosertic",
        "bytecoder",
        "classlib",
        "java",
        "lang",
        "de",
        "mirkosertic",
        "bytecoder",
        "backend",
        "CompileTarget",
        "de",
        "mirkosertic",
        "bytecoder",
        "unittest",
        "BytecoderTestOption",
        "de",
        "mirkosertic",
        "bytecoder",
        "unittest",
        "BytecoderTestOptions",
        "de",
        "mirkosertic",
        "bytecoder",
        "unittest",
        "BytecoderUnitTestRunner",
        "org",
        "junit",
        "Assert",
        "org",
        "junit",
        "Test",
        "org",
        "junit",
        "runner",
        "RunWith",
        "RunWith",
        "BytecoderTestOptions",
        "includeJVM",
        "includeTestPermutations",
        "value",
        "BytecoderTestOption",
        "backend",
        "CompileTarget",
        "BackendType",
        "wasm_llvm",
        "Test",
        "l",
        "b",
        "b",
        "append",
        "l",
        "b",
        "Assert",
        "assertEquals",
        "b",
        "toString",
        "Test",
        "count",
        "bitCount",
        "Assert",
        "assertEquals",
        "count"
    ],
    "literals": [
        "\"1588577957583\""
    ],
    "variables": [],
    "comments": [],
    "docstrings": [
        "* Copyright 2020 Mirko Sertic\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *       http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.",
        "@Test\n    public void testNumberOfTrailingZeros() {\n        final int count = Long.numberOfTrailingZeros(1234L);\n        System.out.println(count);\n        Assert.assertEquals(1, count, 0);\n    }"
    ],
    "functions": [
        "testLongValueToString",
        "testBitCount"
    ],
    "classes": [
        "Long64Test"
    ]
}