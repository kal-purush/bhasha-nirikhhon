{
    "identifiers": [
        "Collections",
        "Generic",
        "Diagnostics",
        "IdentityModel",
        "Tokens",
        "Jwt",
        "Net",
        "Http",
        "Security",
        "Claims",
        "Security",
        "Cryptography",
        "Security",
        "Cryptography",
        "X509Certificates",
        "Text",
        "Threading",
        "Tasks",
        "Microsoft",
        "Bot",
        "Connector",
        "Authentication",
        "Microsoft",
        "Bot",
        "Schema",
        "Microsoft",
        "IdentityModel",
        "Tokens",
        "Xunit",
        "Microsoft",
        "Bot",
        "Connector",
        "Tests",
        "Authentication",
        "HttpClient",
        "EmulatorValidation",
        "ToBotFromEmulatorTokenValidationParameters",
        "ValidateLifetime",
        "ChannelValidation",
        "ToBotFromChannelTokenValidationParameters",
        "ValidateLifetime",
        "GovernmentChannelValidation",
        "ToBotFromGovernmentChannelTokenValidationParameters",
        "ValidateLifetime",
        "Fact",
        "Assert",
        "GovernmentChannelValidation",
        "ToBotFromGovernmentChannelTokenValidationParameters",
        "ValidateIssuerSigningKey",
        "Fact",
        "Assert",
        "ChannelValidation",
        "ToBotFromChannelTokenValidationParameters",
        "ValidateIssuerSigningKey",
        "Fact",
        "Assert",
        "EnterpriseChannelValidation",
        "ToBotFromEnterpriseChannelTokenValidationParameters",
        "ValidateIssuerSigningKey",
        "Fact",
        "Trait",
        "DateTimeOffset",
        "UtcNow",
        "CreateSelfSignedCertificate",
        "now",
        "AddDays",
        "to",
        "now",
        "AddDays",
        "Assert",
        "ThrowsAnyAsync",
        "SecurityTokenInvalidSigningKeyException",
        "BuildExtractorAndValidateToken",
        "cert",
        "DeleteKeyContainer",
        "cn",
        "Fact",
        "Trait",
        "DateTimeOffset",
        "UtcNow",
        "CreateSelfSignedCertificate",
        "cn",
        "now",
        "AddDays",
        "to",
        "now",
        "AddDays",
        "BuildExtractorAndValidateToken",
        "cert",
        "DeleteKeyContainer",
        "cn",
        "ClaimsIdentity",
        "X509Certificate2",
        "cert",
        "TokenValidationParameters",
        "validationParameters",
        "validationParameters",
        "CreateTokenValidationParameters",
        "cert",
        "JwtTokenExtractor",
        "Client",
        "tokenValidationParams",
        "AuthenticationConstants",
        "AllowedSigningAlgorithms",
        "CreateTokenForCertificate",
        "cert",
        "tokenExtractor",
        "GetIdentityAsync",
        "token",
        "X509Certificate2",
        "cert",
        "JwtSecurityTokenHandler",
        "SecurityTokenDescriptor",
        "Expires",
        "UtcNow",
        "AddMinutes",
        "SigningCredentials",
        "SigningCredentials",
        "X509SecurityKey",
        "cert",
        "SecurityAlgorithms",
        "RsaSha256Signature",
        "JwtSecurityToken",
        "tokenHandler",
        "CreateToken",
        "tokenDescriptor",
        "tokenHandler",
        "WriteToken",
        "stoken",
        "X509Certificate2",
        "cert",
        "TokenValidationParameters",
        "ValidateIssuer",
        "ValidIssuers",
        "AuthenticationConstants",
        "ToBotFromChannelTokenIssuer",
        "ValidateAudience",
        "ValidateLifetime",
        "ValidateIssuerSigningKey",
        "ClockSkew",
        "TimeSpan",
        "FromMinutes",
        "RequireSignedTokens",
        "IssuerSigningKey",
        "X509SecurityKey",
        "cert",
        "IssuerSigningKeyResolver",
        "token",
        "SecurityToken",
        "securityToken",
        "kid",
        "TokenValidationParameters",
        "validationParameters",
        "X509SecurityKey",
        "X509SecurityKey",
        "cert",
        "cn",
        "DateTimeOffset",
        "DateTimeOffset",
        "to",
        "CspParameters",
        "KeyContainerName",
        "cn",
        "Flags",
        "CspProviderFlags",
        "NoPrompt",
        "RSACryptoServiceProvider",
        "KeySize",
        "parameters",
        "CertificateRequest",
        "cn",
        "provider",
        "HashAlgorithmName",
        "SHA256",
        "RSASignaturePadding",
        "Pkcs1",
        "cert",
        "request",
        "CreateSelfSigned",
        "to",
        "cert",
        "cn",
        "CspParameters",
        "KeyContainerName",
        "cn",
        "Flags",
        "CspProviderFlags",
        "NoPrompt",
        "CspProviderFlags",
        "UseExistingKey",
        "RSACryptoServiceProvider",
        "parameters",
        "provider",
        "PersistKeyInCsp",
        "provider",
        "Clear",
        "CryptographicException",
        "error",
        "IsKeySetDoesNotExist",
        "error",
        "Debug",
        "WriteLine",
        "error",
        "ToString",
        "error",
        "error",
        "HResult",
        "NTEBADKEYSET"
    ],
    "literals": [
        "\"Platform\"",
        "\"WindowsOnly\"",
        "\"test.cert.botframework.com\"",
        "\"test.cert.botframework.com\"",
        "\"Platform\"",
        "\"WindowsOnly\"",
        "\"test.cert.botframework.com\"",
        "\"https://login.botframework.com/v1/.well-known/openidconfiguration\"",
        "\"test\"",
        "\"Microsoft Enhanced RSA and AES Cryptographic Provider\""
    ],
    "variables": [
        "NTEBADKEYSET",
        "HttpClient",
        "Client",
        "now",
        "cn",
        "cert",
        "now",
        "cn",
        "cert",
        "tokenValidationParams",
        "tokenExtractor",
        "token",
        "tokenHandler",
        "tokenDescriptor",
        "JwtSecurityToken",
        "stoken",
        "parameters",
        "X509Certificate2",
        "cert",
        "KeySize",
        "provider",
        "request",
        "parameters",
        "provider"
    ],
    "comments": [
        "Copyright (c) Microsoft Corporation. All rights reserved.",
        "Licensed under the MIT License.",
        "Disable TokenLifetime validation",
        "Create expired self-signed certificate",
        "Build token extractor and use it to validate a token created from the cert",
        "Since the cert is expired, it should fail since the signing key is bad",
        "Create valid self-signed certificate",
        "Build token extractor and use it to validate a token created from the cert",
        "Custom validation parameters that allow us to test the extractor logic",
        "Build Jwt extractor to be tested",
        "Audience validation takes place in JwtTokenExtractor",
        "%APPDATA%\\Microsoft\\Crypto\\RSA"
    ],
    "docstrings": [],
    "functions": [
        "JwtTokenExtractorTests",
        "JwtTokenExtractor_GovernmentValidationParameters_ShouldValidateSigningKey",
        "JwtTokenExtractor_ChannelValidationParameters_ShouldValidateSigningKey",
        "JwtTokenExtractor_EnterpriseChannelValidationParameters_ShouldValidateSigningKey",
        "JwtTokenExtractor_WithExpiredCert_ShouldNotAllowCertSigningKey",
        "JwtTokenExtractor_WithValidCert_ShouldNotAllowCertSigningKey",
        "BuildExtractorAndValidateToken",
        "CreateTokenForCertificate",
        "TokenValidationParameters",
        "CreateTokenValidationParameters",
        "X509Certificate2",
        "CreateSelfSignedCertificate",
        "DeleteKeyContainer",
        "IsKeySetDoesNotExist"
    ],
    "classes": [
        "JwtTokenExtractorTests"
    ]
}