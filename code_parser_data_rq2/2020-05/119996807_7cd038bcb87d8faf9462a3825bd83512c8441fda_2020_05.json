{
    "identifiers": [
        "os",
        "sys",
        "os",
        "path",
        "expanduser",
        "sys",
        "path",
        "append",
        "os",
        "path",
        "realpath",
        "poetry_python_lib",
        "poetry",
        "masonry",
        "builders",
        "sdist",
        "SdistBuilder",
        "poetry",
        "factory",
        "Factory",
        "ImportError",
        "ModuleNotFoundError",
        "ee",
        "ImportError",
        "ee",
        "Factory",
        "factory",
        "create_poetry",
        "os",
        "path",
        "dirname",
        "SdistBuilder",
        "poetry",
        "pdb",
        "pdb",
        "set_trace",
        "sdist_builder",
        "build_setup",
        "q",
        "q",
        "q",
        "setuppy_blob",
        "open",
        "unit",
        "unit",
        "write",
        "setuppy_blob",
        "unit",
        "write"
    ],
    "literals": [
        "'~/.poetry/lib'",
        "'install poetry by doing pip install poetry to use '",
        "f'this script: {ee}'",
        "'setup.py'",
        "'wb'",
        "b'\\n# This setup.py was autogenerated using poetry.\\n'"
    ],
    "variables": [
        "poetry_python_lib",
        "factory",
        "poetry",
        "sdist_builder",
        "setuppy_blob"
    ],
    "comments": [
        "!/usr/bin/env python",
        "-*- coding: utf-8 -*-",
        "",
        "@Author: José Sánchez-Gallego (gallegoj@uw.edu)",
        "@Date: 2019-12-18",
        "@Filename: create_setup.py",
        "@License: BSD 3-clause (http://www.opensource.org/licenses/BSD-3-Clause)",
        "Original code here:",
        "https://github.com/sdss/flicamera/blob/master/create_setup.py",
        "This is a temporary solution for the fact that pip install . fails with",
        "poetry when there is no setup.py and an extension needs to be compiled.",
        "See https://github.com/python-poetry/poetry/issues/1516. Running this",
        "script creates a setup.py filled out with information generated by",
        "poetry when parsing the pyproject.toml.",
        "If there is a global installation of poetry, prefer that.",
        "Generate a Poetry object that knows about the metadata in pyproject.toml",
        "Use the SdistBuilder to genrate a blob for setup.py"
    ],
    "docstrings": [],
    "functions": [],
    "classes": []
}